[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jiexiong-zeng"},"content":"# NoCap","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"jiexiong-zeng"},"content":"This project is based on Duke, a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"   * In the same dialog, you _may_ have to set the Project language level field to the SDK default option.","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"jiexiong-zeng"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/nocap/NoCap.java` file, right-click it, and choose `Run NoCap.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"jiexiong-zeng"},"content":"   \u003e Task :NoCap.main()","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"jiexiong-zeng"},"content":"   Data loaded successfully","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"jiexiong-zeng"},"content":"   Welcome to NoCap","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"jiexiong-zeng"},"content":"   You are now accessing semester: Y1S1","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"jiexiong-zeng"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/NoCapTest.java`) is provided with this project template. ","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"jiexiong-zeng"},"content":"`/docs` folder contains the following documentation for `NoCap`:","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"jiexiong-zeng"},"content":"* [About Us](/docs/AboutUs.md)","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"jiexiong-zeng"},"content":"* [Developer Guide](/docs/DeveloperGuide.md)","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"jiexiong-zeng"},"content":"* [User Guide](/docs/UserGuide.md)","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"jiexiong-zeng":12,"-":43}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"DmitriYam"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.8.1\u0027","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"DmitriYam"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.8.1\u0027","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"naijie2108"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.13.0\u0027","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.13.0\u0027","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"naijie2108"},"content":"    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"naijie2108"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-annotations\u0027, version: \u00272.13.0\u0027","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"naijie2108"},"content":"    mainClassName \u003d \"command.NoCap\"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"naijie2108"},"content":"    archiveBaseName \u003d \"NoCap\"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"naijie2108"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"naijie2108":9,"DmitriYam":2,"-":42}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yeat Nai Jie | [Github](https://github.com/naijie2108) | [Portfolio](team/naijie2108.md)","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yap Joon Siong | [Github](https://github.com/yapjoonsiong) | [Portfolio](team/yapjoonsiong.md)","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"DmitriYam"},"content":"![](media/DmitriYamphoto.jpg) | Yam Jin Ee Dmitri | [Github](https://github.com/DmitriYam) | [Portfolio](team/DmitriYam.md)","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"yzhedwin"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yeo Zi Hao Edwin | [Github](https://github.com/yzhedwin) | [Portfolio](team/yzhedwin.md)","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"jiexiong-zeng"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Zeng Jiexiong | [Github](https://github.com/jiexiong-zeng) | [Portfolio](team/jiexiong-zeng.md)","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"yapjoonsiong":1,"naijie2108":1,"DmitriYam":1,"yzhedwin":1,"jiexiong-zeng":1,"-":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"## Navigation","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"jiexiong-zeng"},"content":"* [Acknowledgements](#acknowledgements)","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"jiexiong-zeng"},"content":"* [Design and Implementation](#design--implementation)","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"jiexiong-zeng"},"content":"    * [Parser](#parser)","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"jiexiong-zeng"},"content":"    * [Storage](#storage)","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"jiexiong-zeng"},"content":"    * [Semester](#semester)","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"jiexiong-zeng"},"content":"    * [Module](#module)","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"jiexiong-zeng"},"content":"    * [Schedule List](#schedulelist)","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"jiexiong-zeng"},"content":"    * [Task list](#tasklist)","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"jiexiong-zeng"},"content":"    * [Task](#task)","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"jiexiong-zeng"},"content":"    * [Overall Task List](#overalltasklist)","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"jiexiong-zeng"},"content":"    * [Overall Task](#overalltask)","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"jiexiong-zeng"},"content":"* [Product Scope](#appendix-a-product-scope)","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"jiexiong-zeng"},"content":"* [User Stories](#appendix-b-user-stories)","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"jiexiong-zeng"},"content":"* [Non-Functional Requirements](#appendix-c-non-functional-requirements)","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"jiexiong-zeng"},"content":"* [Glossary](#appendix-d-glossary)","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"jiexiong-zeng"},"content":"* [Instructions for Manual Testing](#appendix-e-instructions-for-manual-testing)","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"naijie2108"},"content":"Third party libraries:","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"naijie2108"},"content":"- [Jackson Databind](https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind)","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"naijie2108"},"content":"- [Jackson Datatype-jsr310](https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310)","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"naijie2108"},"content":"- [Jackson Annotations](https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations)","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"jiexiong-zeng"},"content":"# Design \u0026 Implementation","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"yapjoonsiong"},"content":"## Parser","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"jiexiong-zeng"},"content":"**API** : \u003ccode\u003ecommand.parser \u003c/code\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"yapjoonsiong"},"content":"The Parser classes is responsible for receiving user input and converting it into commands which are directly passed to","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"yapjoonsiong"},"content":"respective classes.","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"jiexiong-zeng"},"content":"The simplified class diagram below is an overview of relationship between Parser classes and other classes.","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"jiexiong-zeng"},"content":"![alt_text](media/ParserClassDiagram.JPG)","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"jiexiong-zeng"},"content":"How the parsing works:","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"yapjoonsiong"},"content":"* `NoCap` passes the user input to `Parser` which separates the input into useful information such as taskType,","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"yapjoonsiong"},"content":"  taskDescription, Module, etc.","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"yapjoonsiong"},"content":"* When commands include **listing tasks**, the taskDescription is passed to `ListParser` which determines the method of","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"yapjoonsiong"},"content":"  sorting and creates filtered `OverallTaskList` and `TaskList` accordingly.","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"yapjoonsiong"},"content":"* Otherwise, the taskDescription is passed to `Command` which calls the corresponding commands in `SemesterList`,","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"yapjoonsiong"},"content":"  `Semester` ,`ModuleList`, `Module` , `Task`, `Gradable Task`. For clarity purposes, associations are shown but","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"yapjoonsiong"},"content":"  dependencies are not.","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"yapjoonsiong"},"content":"* `ParserChecks` is a utility class that handles various error checking and string searching methods such as","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"yapjoonsiong"},"content":"  `ParserSearch#getTaskFromIndex()` and `ParserSearch#getTaskFromKeyword()`. `Command` utilizes these methods to verify","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"yapjoonsiong"},"content":"  the Strings before passing them to other classes.","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"yapjoonsiong"},"content":"  *In NoCap, Parser verifies the validity of input (Whether it exists in the right format). Input content is verified by","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"yapjoonsiong"},"content":"  individual classes for correctness.*","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"yapjoonsiong"},"content":"* `DateParser` handles parsing String into LocalDateTime format and displaying LocalDateTime as String. It is utilized","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"yapjoonsiong"},"content":"  by `Task`. Additional date formats can be added in `DateParser#inputFormatter()`","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"yapjoonsiong"},"content":"Below is a step by step example of how the parser receives and decipher a user input. In this example, the user enters","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"yapjoonsiong"},"content":"`list task sortbydate`.","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"jiexiong-zeng"},"content":"The Sequence Diagram below illustrates the process","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"jiexiong-zeng"},"content":"![alt_text](media/ParserSequenceDiagram.png)  ","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"jiexiong-zeng"},"content":"**Note**: The alternate paths are omitted from the diagram for clarity.\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"yzhedwin"},"content":"Step 1: The User launches the application. `NoCap` creates a new `Parser` instance through the constructor and `Parser`","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"yzhedwin"},"content":"creates `ListParser`.\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"yzhedwin"},"content":"Step 2: The application waits for User input. User enters `list task sortbydate`. `NoCap` passes the input to `Parser`","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"yzhedwin"},"content":"through `Parser#chooseTask()`.\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"jiexiong-zeng"},"content":"Step 3: `splitInput` is called for the first time and splits the user input into `list` and `task sortbydate`.","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"jiexiong-zeng"},"content":"\u003e **TaskType** is set to `list`, and **TaskDescription** is set to `task sortbydate`.","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"jiexiong-zeng"},"content":"**TaskType** matches a possible command String.","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"jiexiong-zeng"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"jiexiong-zeng"},"content":"Step 4: `splitInput` is called for the second time and splits the user input into `task` and `sortbydate`.","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"jiexiong-zeng"},"content":"\u003e **TaskType** is set to `task`, and **TaskDescription** is set to `sortbydate`.","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"jiexiong-zeng"},"content":"**TaskType** and **TaskDescription** are passed to `ListParser` through `ListParser#overallListParser`.","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"jiexiong-zeng"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"jiexiong-zeng"},"content":"Step 5: `overallListParser` creates an `OverallTaskList`. Through nested switch cases, **TaskType** and **","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"jiexiong-zeng"},"content":"TaskDescription** are matched, and the corresponding method `OverallTaskList#sortByDateAndPrint()` is called. As the","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"yzhedwin"},"content":"name implies, this method sorts all tasks by date and prints them.","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"jiexiong-zeng"},"content":"\u003e If **TaskType** does not match, then an error message is displayed.  ","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"jiexiong-zeng"},"content":"\u003e If **TaskDescription** does not match, all tasks are printed by default.","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"jiexiong-zeng"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"jiexiong-zeng"},"content":"Step 6: The full command is carried out and the application returns to NoCap and waits for new User Input.\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"jiexiong-zeng"},"content":"The diagram below illustrates the `splitString` process:","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"jiexiong-zeng"},"content":"![alt_text](media/splitStringDiagram.JPG)","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"jiexiong-zeng"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"jiexiong-zeng"},"content":"## Storage","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"naijie2108"},"content":"**API** : `command.storage`","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"yapjoonsiong"},"content":"The Storage component saves data of NoCap into JSON format, and reads them back into corresponding objects when needed","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"yapjoonsiong"},"content":"using a 3rd party library Jackson Databind.","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"yapjoonsiong"},"content":"It consists of 2 utility classes StorageDecoder and StorageEncoder. StorageEncoder is used to encode the parent object","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"yapjoonsiong"},"content":"`SemesterList` into a JSON file. StorageDecoder decodes a JSON file into a `SemesterList `object","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"naijie2108"},"content":"How the `StorageEncoder` class works:","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"naijie2108"},"content":"![alt_text](media/StorageEncoderSequenceDiagram.png \"image_tooltip\")","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"yzhedwin"},"content":"1. The static method `encodeAndSaveSemesterListToJson()` from `StorageEncoder` is called when NoCap data needs to be","lastModifiedDate":"2021-11-06"},{"lineNumber":115,"author":{"gitId":"yzhedwin"},"content":"   saved","lastModifiedDate":"2021-11-06"},{"lineNumber":116,"author":{"gitId":"naijie2108"},"content":"2. If the save file directory has not been created yet, it is first created in order to store the save file","lastModifiedDate":"2021-11-05"},{"lineNumber":117,"author":{"gitId":"naijie2108"},"content":"3. Similarly, an empty file is created to store the data if it has not been created yet","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"naijie2108"},"content":"4. The parent object `SemesterList` is passed to the method to be converted into a JSON file with an `ObjectMapper`","lastModifiedDate":"2021-11-05"},{"lineNumber":119,"author":{"gitId":"yapjoonsiong"},"content":"   object from the  `jackson-databind` library","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"naijie2108"},"content":"5. Upon completion, the data file is saved in a default data directory.","lastModifiedDate":"2021-11-06"},{"lineNumber":121,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"naijie2108"},"content":"**How the `StorageDecoder` class works:**","lastModifiedDate":"2021-11-05"},{"lineNumber":123,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"naijie2108"},"content":"![alt_text](media/StorageDecoderSequenceDiagram.png \"image_tooltip\")","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"naijie2108"},"content":"1. The static method `decodeJsonToSemesterList()` from `StorageDecoder` is called when NoCap data needs to be loaded","lastModifiedDate":"2021-11-06"},{"lineNumber":127,"author":{"gitId":"yzhedwin"},"content":"   from the save file","lastModifiedDate":"2021-11-06"},{"lineNumber":128,"author":{"gitId":"yzhedwin"},"content":"2. If there is no save file available in the default data directory, a new `SemesterList `object is created and returned","lastModifiedDate":"2021-11-06"},{"lineNumber":129,"author":{"gitId":"yzhedwin"},"content":"   to the caller","lastModifiedDate":"2021-11-06"},{"lineNumber":130,"author":{"gitId":"naijie2108"},"content":"3. Otherwise, an `ObjectMapper` object from the  `jackson-databind` library is used to deserialize the JSON save file","lastModifiedDate":"2021-11-05"},{"lineNumber":131,"author":{"gitId":"naijie2108"},"content":"   into a `SemesterList` object to be returned to the caller","lastModifiedDate":"2021-11-05"},{"lineNumber":132,"author":{"gitId":"jiexiong-zeng"},"content":"   \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":133,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":134,"author":{"gitId":"jiexiong-zeng"},"content":"## Semester","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"yapjoonsiong"},"content":"**API** : `semester`","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"yapjoonsiong"},"content":"![alt_text](media/SemesterListDiagram.jpg)","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"yzhedwin"},"content":"The `Semester` component stores all NoCap data i.e., all `Semester` objects and their components and cumulative average","lastModifiedDate":"2021-10-28"},{"lineNumber":141,"author":{"gitId":"yzhedwin"},"content":"point (CAP) (which are contained in a SemesterList object)","lastModifiedDate":"2021-10-28"},{"lineNumber":142,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":143,"author":{"gitId":"yapjoonsiong"},"content":"* It consists of 2 utility classes `SemesterList` and `Semester`","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"yapjoonsiong"},"content":"* `SemesterList` is used to compute and store the cumulative CAP of all semesters and also stores 10 `Semester` objects","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"yzhedwin"},"content":"* Each `Semester` object stores and computes the individual CAP for the semester, while also storing a `ModuleList` of","lastModifiedDate":"2021-10-28"},{"lineNumber":146,"author":{"gitId":"yzhedwin"},"content":"  the `Module` objects taken during the semester","lastModifiedDate":"2021-10-28"},{"lineNumber":147,"author":{"gitId":"yzhedwin"},"content":"* The computation of the CAP for both `SemesterList` and `Semester` is automatically done when a grade/credit as added","lastModifiedDate":"2021-10-28"},{"lineNumber":148,"author":{"gitId":"yzhedwin"},"content":"  to a `Module` object within any semester","lastModifiedDate":"2021-10-28"},{"lineNumber":149,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":150,"author":{"gitId":"yapjoonsiong"},"content":"This is how CAP is computed:","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"yapjoonsiong"},"content":"![alt_text](media/capComputationSequenceDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":154,"author":{"gitId":"DmitriYam"},"content":"* When `commandAddGrade()` or `commandAddCredit()` is called in Parser, `addGrade(description)`","lastModifiedDate":"2021-11-04"},{"lineNumber":155,"author":{"gitId":"yzhedwin"},"content":"  or `addCredit(description)` respectively are called in `Module`, setting the module’s `grade`, `points` and `credits`","lastModifiedDate":"2021-10-28"},{"lineNumber":156,"author":{"gitId":"yzhedwin"},"content":"  to their corresponding values.","lastModifiedDate":"2021-10-28"},{"lineNumber":157,"author":{"gitId":"yzhedwin"},"content":"* Then, `updateCap()` is called in `Semester` with the newly set `grade`/`credits` values in `Module`, followed","lastModifiedDate":"2021-10-28"},{"lineNumber":158,"author":{"gitId":"yzhedwin"},"content":"  by `updateCap()` in `SemesterList` with the newly set `points`/`credits` values in `Semester`.","lastModifiedDate":"2021-10-28"},{"lineNumber":159,"author":{"gitId":"jiexiong-zeng"},"content":"  \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":160,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":161,"author":{"gitId":"jiexiong-zeng"},"content":"## Module","lastModifiedDate":"2021-11-05"},{"lineNumber":162,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"DmitriYam"},"content":"**API** : `module`","lastModifiedDate":"2021-11-05"},{"lineNumber":164,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"yzhedwin"},"content":"All data related to module is stored in the module class. An Arraylist of Module is used to store and manage the","lastModifiedDate":"2021-11-05"},{"lineNumber":166,"author":{"gitId":"yzhedwin"},"content":"modules. ModuleList is also responsible for constructing and printing out the Timetable.","lastModifiedDate":"2021-11-05"},{"lineNumber":167,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":168,"author":{"gitId":"DmitriYam"},"content":"![moduleListClassDiagram](media/moduleListClassDiagram.png)","lastModifiedDate":"2021-10-28"},{"lineNumber":169,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":170,"author":{"gitId":"DmitriYam"},"content":"The modules are stored in an ArrayList and ModuleList uses the Module.get(int index) method to access the target Module.","lastModifiedDate":"2021-10-28"},{"lineNumber":171,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":172,"author":{"gitId":"DmitriYam"},"content":"- ModuleList is responsible for printing the Time Table.","lastModifiedDate":"2021-10-28"},{"lineNumber":173,"author":{"gitId":"DmitriYam"},"content":"- ModuleList contains the getter method find(String input) which returns a module by the same name as the input.","lastModifiedDate":"2021-10-28"},{"lineNumber":174,"author":{"gitId":"DmitriYam"},"content":"- Module contains getter and setter methods to change or access its contents.","lastModifiedDate":"2021-10-28"},{"lineNumber":175,"author":{"gitId":"yzhedwin"},"content":"- When Module is constructed, an empty gradableTaskList, taskList and scheduleList wll be instantiated and stored in","lastModifiedDate":"2021-11-05"},{"lineNumber":176,"author":{"gitId":"yzhedwin"},"content":"  Module.","lastModifiedDate":"2021-11-05"},{"lineNumber":177,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":178,"author":{"gitId":"DmitriYam"},"content":"Data stored in Module includes:","lastModifiedDate":"2021-10-28"},{"lineNumber":179,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":180,"author":{"gitId":"DmitriYam"},"content":"1. moduleName","lastModifiedDate":"2021-10-22"},{"lineNumber":181,"author":{"gitId":"DmitriYam"},"content":"2. letterGrade","lastModifiedDate":"2021-10-22"},{"lineNumber":182,"author":{"gitId":"DmitriYam"},"content":"3. credits","lastModifiedDate":"2021-10-22"},{"lineNumber":183,"author":{"gitId":"DmitriYam"},"content":"4. points","lastModifiedDate":"2021-10-22"},{"lineNumber":184,"author":{"gitId":"DmitriYam"},"content":"5. TaskList","lastModifiedDate":"2021-10-22"},{"lineNumber":185,"author":{"gitId":"DmitriYam"},"content":"6. GradableTaskList","lastModifiedDate":"2021-10-22"},{"lineNumber":186,"author":{"gitId":"DmitriYam"},"content":"7. ScheduleList","lastModifiedDate":"2021-10-22"},{"lineNumber":187,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":188,"author":{"gitId":"jiexiong-zeng"},"content":"The modules are stored in an ArrayList and ModuleList uses the Module.get(int index) method to access the target Module.","lastModifiedDate":"2021-11-05"},{"lineNumber":189,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":190,"author":{"gitId":"yzhedwin"},"content":"- ModuleList is responsible for printing the Time Table. It accesses different schedules of different mods before","lastModifiedDate":"2021-10-28"},{"lineNumber":191,"author":{"gitId":"yzhedwin"},"content":"  constructing a Time Table.","lastModifiedDate":"2021-10-28"},{"lineNumber":192,"author":{"gitId":"DmitriYam"},"content":"- ModuleList contains getter method find(String input) which returns a module by the same name as the input.","lastModifiedDate":"2021-10-22"},{"lineNumber":193,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":194,"author":{"gitId":"DmitriYam"},"content":"How printing a timetable works:","lastModifiedDate":"2021-10-22"},{"lineNumber":195,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":196,"author":{"gitId":"DmitriYam"},"content":"1. ModuleList first extracts day of week and timeslot information from different schedules.","lastModifiedDate":"2021-10-22"},{"lineNumber":197,"author":{"gitId":"yzhedwin"},"content":"2. It then prints out the Timetable one line at a time. At the same time it checks if the day of week and the timeslot","lastModifiedDate":"2021-10-28"},{"lineNumber":198,"author":{"gitId":"yzhedwin"},"content":"   corresponds to the schedule.","lastModifiedDate":"2021-10-28"},{"lineNumber":199,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":200,"author":{"gitId":"DmitriYam"},"content":"- If day of week and timeslot corresponds, venue and comments information is printed out","lastModifiedDate":"2021-10-22"},{"lineNumber":201,"author":{"gitId":"yzhedwin"},"content":"- If day of week and timeslot does not correspond, and blank character \u0026quot; \u0026quot; is printed instead. \u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":202,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":203,"author":{"gitId":"DmitriYam"},"content":"# ![modulePrintTimetableSeq](media/modulePrintTimetableSeq.png)","lastModifiedDate":"2021-10-28"},{"lineNumber":204,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":205,"author":{"gitId":"DmitriYam"},"content":"How printing a timetable works:","lastModifiedDate":"2021-10-22"},{"lineNumber":206,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":207,"author":{"gitId":"yzhedwin"},"content":"1. When Timetable is called, ModuleList goes into a loop to print out the timetable. ModuleList iterates through the 207","lastModifiedDate":"2021-11-05"},{"lineNumber":208,"author":{"gitId":"yzhedwin"},"content":"   character long length and the 33 lines which makes up the entire timetable.","lastModifiedDate":"2021-11-05"},{"lineNumber":209,"author":{"gitId":"DmitriYam"},"content":"2. Each iteration of the loop can result in 1 of 3 cases:","lastModifiedDate":"2021-10-28"},{"lineNumber":210,"author":{"gitId":"DmitriYam"},"content":"1. It is at a border. When this happens a \u0026quot;#\u0026quot; character is printed to the console which denotes a border.","lastModifiedDate":"2021-10-28"},{"lineNumber":211,"author":{"gitId":"DmitriYam"},"content":"2. It is empty. When this happens a \u0026quot; \u0026quot;(blank) character is printed to the console.","lastModifiedDate":"2021-10-28"},{"lineNumber":212,"author":{"gitId":"yzhedwin"},"content":"3. It contains module information. When this happens, getMoudleName() , getModuleLocation() and getModuleComment() is","lastModifiedDate":"2021-11-05"},{"lineNumber":213,"author":{"gitId":"yzhedwin"},"content":"   called. The information is then printed onto the console.","lastModifiedDate":"2021-11-05"},{"lineNumber":214,"author":{"gitId":"jiexiong-zeng"},"content":"   \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":215,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":216,"author":{"gitId":"jiexiong-zeng"},"content":"## ScheduleList","lastModifiedDate":"2021-11-05"},{"lineNumber":217,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":218,"author":{"gitId":"DmitriYam"},"content":"**API** : `schedule`","lastModifiedDate":"2021-11-05"},{"lineNumber":219,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":220,"author":{"gitId":"DmitriYam"},"content":"ScheduleList consists of all data for the schedule for the module.","lastModifiedDate":"2021-10-22"},{"lineNumber":221,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":222,"author":{"gitId":"DmitriYam"},"content":"This includes:","lastModifiedDate":"2021-10-22"},{"lineNumber":223,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":224,"author":{"gitId":"DmitriYam"},"content":"1. `day`","lastModifiedDate":"2021-11-04"},{"lineNumber":225,"author":{"gitId":"DmitriYam"},"content":"2. `location`","lastModifiedDate":"2021-11-04"},{"lineNumber":226,"author":{"gitId":"DmitriYam"},"content":"3. `startTime`","lastModifiedDate":"2021-11-04"},{"lineNumber":227,"author":{"gitId":"DmitriYam"},"content":"4. `comments`","lastModifiedDate":"2021-11-04"},{"lineNumber":228,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":229,"author":{"gitId":"DmitriYam"},"content":"How ScheduleList works:","lastModifiedDate":"2021-10-22"},{"lineNumber":230,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":231,"author":{"gitId":"DmitriYam"},"content":"1. An empty `ScheduleList` is created when a module is constructed.","lastModifiedDate":"2021-11-04"},{"lineNumber":232,"author":{"gitId":"jiexiong-zeng"},"content":"2. When `addClass` is called in `module` , `ScheduleList` parses the input from the user and splits the information into","lastModifiedDate":"2021-11-05"},{"lineNumber":233,"author":{"gitId":"jiexiong-zeng"},"content":"   the relevant information. The information is then used to generate a new instance of `Schedule` which is then added","lastModifiedDate":"2021-11-05"},{"lineNumber":234,"author":{"gitId":"jiexiong-zeng"},"content":"   to the list.","lastModifiedDate":"2021-11-05"},{"lineNumber":235,"author":{"gitId":"jiexiong-zeng"},"content":"3. `toString()` prints out all relevant schedule information in a list format. This is done by going through the list","lastModifiedDate":"2021-11-05"},{"lineNumber":236,"author":{"gitId":"jiexiong-zeng"},"content":"   and printing `Schedule` one after another.","lastModifiedDate":"2021-11-05"},{"lineNumber":237,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":238,"author":{"gitId":"DmitriYam"},"content":"Notes about ScheduleList","lastModifiedDate":"2021-10-22"},{"lineNumber":239,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":240,"author":{"gitId":"jiexiong-zeng"},"content":"- ScheduleList checks that the input for the day of the week is only from the list of possible days: `MON`, `TUE`, `WED`","lastModifiedDate":"2021-11-05"},{"lineNumber":241,"author":{"gitId":"jiexiong-zeng"},"content":"  , `THU`,","lastModifiedDate":"2021-11-05"},{"lineNumber":242,"author":{"gitId":"DmitriYam"},"content":"  `FRI`, `SAT` ,`SUN`. All other inputs will result in an exception being thrown.","lastModifiedDate":"2021-11-04"},{"lineNumber":243,"author":{"gitId":"DmitriYam"},"content":"- When a new `Schedule` class is called, `ScheduleList` ensures that the length of venue and comments are less than 16","lastModifiedDate":"2021-11-04"},{"lineNumber":244,"author":{"gitId":"yzhedwin"},"content":"  characters in length. This is to ensure that it fits within its time slot within the Timetable when printed.","lastModifiedDate":"2021-10-28"},{"lineNumber":245,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":246,"author":{"gitId":"DmitriYam"},"content":"![scheduleseq](media/scheduleseq.png)","lastModifiedDate":"2021-10-28"},{"lineNumber":247,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":248,"author":{"gitId":"DmitriYam"},"content":"Adding Schedule to scheduleList","lastModifiedDate":"2021-10-28"},{"lineNumber":249,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":250,"author":{"gitId":"yzhedwin"},"content":"- When addclass() is called, schedule first checks if there is a duplicate schedule currently in the list. This is done","lastModifiedDate":"2021-11-05"},{"lineNumber":251,"author":{"gitId":"yzhedwin"},"content":"  by going through the whole list and checking if a schedule has the same time slot. If there exists a schedule in the","lastModifiedDate":"2021-11-05"},{"lineNumber":252,"author":{"gitId":"yzhedwin"},"content":"  same time slot, an error message is printed.","lastModifiedDate":"2021-11-05"},{"lineNumber":253,"author":{"gitId":"DmitriYam"},"content":"- If it is an empty timeslot, schedule list parses the input and checks for formatting errors within the input.","lastModifiedDate":"2021-10-28"},{"lineNumber":254,"author":{"gitId":"DmitriYam"},"content":"- A new instance of Schedule is generated and added to the schedule list.","lastModifiedDate":"2021-10-28"},{"lineNumber":255,"author":{"gitId":"jiexiong-zeng"},"content":"  \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":256,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":257,"author":{"gitId":"jiexiong-zeng"},"content":"## TaskList","lastModifiedDate":"2021-10-25"},{"lineNumber":258,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":259,"author":{"gitId":"yzhedwin"},"content":"**API** : `task.tasklist`","lastModifiedDate":"2021-10-22"},{"lineNumber":260,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":261,"author":{"gitId":"yzhedwin"},"content":"![alt_text](media/TaskClassDiagram.png)","lastModifiedDate":"2021-10-28"},{"lineNumber":262,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":263,"author":{"gitId":"yzhedwin"},"content":"How the `TaskList` component works:","lastModifiedDate":"2021-10-28"},{"lineNumber":264,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":265,"author":{"gitId":"yzhedwin"},"content":"![](media/TaskListSequenceDiagram.png)","lastModifiedDate":"2021-10-28"},{"lineNumber":266,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":267,"author":{"gitId":"yzhedwin"},"content":"1. `TaskList` stores all tasks in an `ArrayList\u003cTask\u003e`.","lastModifiedDate":"2021-11-05"},{"lineNumber":268,"author":{"gitId":"yzhedwin"},"content":"2. When the `addTask()` method is called, the method `getDate()` will return the `date` string from the user input","lastModifiedDate":"2021-11-05"},{"lineNumber":269,"author":{"gitId":"yzhedwin"},"content":"3. The method `removeDate()` will return the `description` string from the user input by removing the date component in","lastModifiedDate":"2021-11-05"},{"lineNumber":270,"author":{"gitId":"yzhedwin"},"content":"   the user input.","lastModifiedDate":"2021-11-05"},{"lineNumber":271,"author":{"gitId":"yzhedwin"},"content":"4. Then store it as a local variable of a `String` type.","lastModifiedDate":"2021-11-05"},{"lineNumber":272,"author":{"gitId":"yzhedwin"},"content":"5. The `String` variables will then be passed to instantialize a new `Task` object.","lastModifiedDate":"2021-11-05"},{"lineNumber":273,"author":{"gitId":"yzhedwin"},"content":"6. This `Task` object will then be stored in the `ArrayList` in the `TaskList` object.","lastModifiedDate":"2021-11-05"},{"lineNumber":274,"author":{"gitId":"yzhedwin"},"content":"7. The methods `weeklyTaskList()`, `monthlyTaskList` and `yearlyTaskList()` returns an `ArrayList` which contains","lastModifiedDate":"2021-11-05"},{"lineNumber":275,"author":{"gitId":"yzhedwin"},"content":"   the `Task` objects of deadline within a week, a month and a year respectively.","lastModifiedDate":"2021-10-28"},{"lineNumber":276,"author":{"gitId":"yzhedwin"},"content":"8. The methods `sortTaskListByDate()`  and `sortTaskListByStatus()` will sort the current `TaskList` object by ascending","lastModifiedDate":"2021-11-05"},{"lineNumber":277,"author":{"gitId":"yzhedwin"},"content":"   order of `Deadline` and completion status respectively","lastModifiedDate":"2021-10-28"},{"lineNumber":278,"author":{"gitId":"yzhedwin"},"content":"9. The `ArrayList` returned by the above methods can then be passed to `printTasks()` which will call `toString()` in","lastModifiedDate":"2021-11-05"},{"lineNumber":279,"author":{"gitId":"yzhedwin"},"content":"   each `Task` object and print to the `Output Stream`.","lastModifiedDate":"2021-10-28"},{"lineNumber":280,"author":{"gitId":"jiexiong-zeng"},"content":"   \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":281,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":282,"author":{"gitId":"jiexiong-zeng"},"content":"## Task","lastModifiedDate":"2021-10-25"},{"lineNumber":283,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":284,"author":{"gitId":"yzhedwin"},"content":"**API** : `task.task`","lastModifiedDate":"2021-10-22"},{"lineNumber":285,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":286,"author":{"gitId":"yzhedwin"},"content":"`Task` object stores the following for each task:","lastModifiedDate":"2021-10-22"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":288,"author":{"gitId":"yzhedwin"},"content":"1. `description`","lastModifiedDate":"2021-10-22"},{"lineNumber":289,"author":{"gitId":"yzhedwin"},"content":"2. `Date`","lastModifiedDate":"2021-10-22"},{"lineNumber":290,"author":{"gitId":"yzhedwin"},"content":"3. `isDone`","lastModifiedDate":"2021-10-22"},{"lineNumber":291,"author":{"gitId":"yzhedwin"},"content":"4. `isLate`","lastModifiedDate":"2021-10-22"},{"lineNumber":292,"author":{"gitId":"yzhedwin"},"content":"5. `deadline`","lastModifiedDate":"2021-10-22"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":294,"author":{"gitId":"yzhedwin"},"content":"How the `Task` component works:","lastModifiedDate":"2021-10-22"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":296,"author":{"gitId":"yzhedwin"},"content":"![](media/TaskSequenceDiagram.png)","lastModifiedDate":"2021-11-05"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":298,"author":{"gitId":"yzhedwin"},"content":"1. Whenever the `Task` object is instantiated, the `attributes` listed above will be initialized by the `setter`","lastModifiedDate":"2021-10-28"},{"lineNumber":299,"author":{"gitId":"yzhedwin"},"content":"   methods: `setDescription()`,  `setDate()`,  `setDone()`, `setLate()` and `setDeadline()`.","lastModifiedDate":"2021-10-28"},{"lineNumber":300,"author":{"gitId":"yzhedwin"},"content":"2. When calling `printAllTask()`, `printWeeklyTask()`, `printMonthlyTask()` in `OverallTaskList` the","lastModifiedDate":"2021-10-28"},{"lineNumber":301,"author":{"gitId":"yzhedwin"},"content":"   method  `updateOverdue()`will be called which checks for the truth value of the `boolean` attribute `isDone` and also","lastModifiedDate":"2021-10-28"},{"lineNumber":302,"author":{"gitId":"yzhedwin"},"content":"   whether the current date and time of the system clock is after the `deadline` of the `Task` object.","lastModifiedDate":"2021-10-28"},{"lineNumber":303,"author":{"gitId":"yzhedwin"},"content":"3. If `isDone` is `FALSE` and the `deadline` is later than the current date and time, `updateOverdue()` will set the","lastModifiedDate":"2021-10-28"},{"lineNumber":304,"author":{"gitId":"yzhedwin"},"content":"   attribute `isLate` of the current `Task` object to `TRUE`.","lastModifiedDate":"2021-10-28"},{"lineNumber":305,"author":{"gitId":"yzhedwin"},"content":"4. Calling the toString prints out the task information in the Task object.","lastModifiedDate":"2021-10-28"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":307,"author":{"gitId":"yzhedwin"},"content":"Note:","lastModifiedDate":"2021-11-05"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":309,"author":{"gitId":"yzhedwin"},"content":"* The printTask() call in the sequence diagram is a generalised method from: `OverallTaskList#addAllNormalTasks()`","lastModifiedDate":"2021-11-05"},{"lineNumber":310,"author":{"gitId":"yzhedwin"},"content":"  , `OverallTaskList#addAllGradableTasks()` and `TaskList#printTasks()`","lastModifiedDate":"2021-11-05"},{"lineNumber":311,"author":{"gitId":"yzhedwin"},"content":"* Any call from the methods above will result in the following sequence in the sequence diagram.","lastModifiedDate":"2021-11-05"},{"lineNumber":312,"author":{"gitId":"jiexiong-zeng"},"content":"  \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":314,"author":{"gitId":"jiexiong-zeng"},"content":"## OverallTaskList","lastModifiedDate":"2021-10-25"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":316,"author":{"gitId":"jiexiong-zeng"},"content":"**API** : `task.OverallTasklist`","lastModifiedDate":"2021-11-05"},{"lineNumber":317,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":318,"author":{"gitId":"naijie2108"},"content":"![alt_text](media/OverallTaskClassDiagram.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":319,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":320,"author":{"gitId":"naijie2108"},"content":"_Class diagram for OverallTask and OverallTaskList_","lastModifiedDate":"2021-10-25"},{"lineNumber":321,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":322,"author":{"gitId":"naijie2108"},"content":"**Note**: Some methods are omitted from the class diagram to improve clarity","lastModifiedDate":"2021-11-05"},{"lineNumber":323,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":324,"author":{"gitId":"naijie2108"},"content":"The `OverallTaskList` class is instantiated from `ListParser` only when the end user needs to list available tasks in","lastModifiedDate":"2021-11-05"},{"lineNumber":325,"author":{"gitId":"yzhedwin"},"content":"a `Semester`.","lastModifiedDate":"2021-10-28"},{"lineNumber":326,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":327,"author":{"gitId":"naijie2108"},"content":"How the `OverallTaskList` class works:","lastModifiedDate":"2021-11-04"},{"lineNumber":328,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":329,"author":{"gitId":"naijie2108"},"content":"1. `OverallTask` objects (explained further under `OverallTask`) are stored in an ArrayList `overallTaskList.`","lastModifiedDate":"2021-10-24"},{"lineNumber":330,"author":{"gitId":"naijie2108"},"content":"2. Both `Task` and `GradableTask` objects are converted to `OverallTask` objects first before being inserted into","lastModifiedDate":"2021-11-05"},{"lineNumber":331,"author":{"gitId":"naijie2108"},"content":"   `OverallTaskList`.","lastModifiedDate":"2021-11-05"},{"lineNumber":332,"author":{"gitId":"yzhedwin"},"content":"3. When the `OverallTaskList` object is instantiated, a `ModuleList` object from a semester is passed to its","lastModifiedDate":"2021-10-28"},{"lineNumber":333,"author":{"gitId":"naijie2108"},"content":"   constructor.","lastModifiedDate":"2021-11-06"},{"lineNumber":334,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":335,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":336,"author":{"gitId":"naijie2108"},"content":"   ![alt_text](media/OverallTaskListConstructorSequenceDiagram.png \"image_tooltip\")","lastModifiedDate":"2021-10-24"},{"lineNumber":337,"author":{"gitId":"yzhedwin"},"content":"4. The constructor calls the method `addAllModuleListTasks(module list)` which converts and adds all the tasks in the","lastModifiedDate":"2021-11-06"},{"lineNumber":338,"author":{"gitId":"yzhedwin"},"content":"   module list into `OverallTaskList`.","lastModifiedDate":"2021-11-06"},{"lineNumber":339,"author":{"gitId":"yzhedwin"},"content":"5. Once the object is instantiated, the following methods can be called to sort and print the tasks in the","lastModifiedDate":"2021-10-28"},{"lineNumber":340,"author":{"gitId":"naijie2108"},"content":"   ArrayList `overallTaskList`. All sorting and filtering is done via `Java Streams`, and method details are omitted.","lastModifiedDate":"2021-11-03"},{"lineNumber":341,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":342,"author":{"gitId":"naijie2108"},"content":"   * `sortByDateAndPrint() - Print all tasks sorted by deadline`","lastModifiedDate":"2021-10-24"},{"lineNumber":343,"author":{"gitId":"naijie2108"},"content":"   * `sortByStatusAndPrint() - Print all tasks sorted by status(done)`","lastModifiedDate":"2021-10-24"},{"lineNumber":344,"author":{"gitId":"naijie2108"},"content":"   * `printWeeklyTasks() - Print tasks due in a week`","lastModifiedDate":"2021-10-24"},{"lineNumber":345,"author":{"gitId":"naijie2108"},"content":"   * `printMonthlyTasks() - Print tasks due in a month`","lastModifiedDate":"2021-10-24"},{"lineNumber":346,"author":{"gitId":"naijie2108"},"content":"   * `printYearlyTasks() - Print tasks due in a year`","lastModifiedDate":"2021-10-24"},{"lineNumber":347,"author":{"gitId":"naijie2108"},"content":"   * `printAllTasks() - Print all tasks without sorting`","lastModifiedDate":"2021-10-24"},{"lineNumber":348,"author":{"gitId":"naijie2108"},"content":"   * `printGradableTasks() - Print all gradable tasks`","lastModifiedDate":"2021-11-04"},{"lineNumber":349,"author":{"gitId":"naijie2108"},"content":"   * `printNormalTasks() - Print all non-gradable tasks`","lastModifiedDate":"2021-11-04"},{"lineNumber":350,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":351,"author":{"gitId":"naijie2108"},"content":"Notes about `OverallTaskList`","lastModifiedDate":"2021-10-24"},{"lineNumber":352,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":353,"author":{"gitId":"yzhedwin"},"content":"* Once `ListParser` is done using the object, it is deleted and the task list is not stored anywhere. The reason for","lastModifiedDate":"2021-10-28"},{"lineNumber":354,"author":{"gitId":"yzhedwin"},"content":"  this is to reduce coupling between objects and remove the need to update separate task lists whenever tasks are added","lastModifiedDate":"2021-10-28"},{"lineNumber":355,"author":{"gitId":"yzhedwin"},"content":"  to `Modules`.","lastModifiedDate":"2021-10-28"},{"lineNumber":356,"author":{"gitId":"jiexiong-zeng"},"content":"  \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":357,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":358,"author":{"gitId":"jiexiong-zeng"},"content":"## OverallTask","lastModifiedDate":"2021-10-25"},{"lineNumber":359,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":360,"author":{"gitId":"naijie2108"},"content":"**API** : `task.OverallTask`","lastModifiedDate":"2021-10-24"},{"lineNumber":361,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":362,"author":{"gitId":"naijie2108"},"content":"`OverallTask` objects are stored in a `OverallTaskList` object when the end user needs to list available tasks in","lastModifiedDate":"2021-11-05"},{"lineNumber":363,"author":{"gitId":"yzhedwin"},"content":"a `Semester`. It stores information from `GradableTask/Task `objects together with their module name.","lastModifiedDate":"2021-10-28"},{"lineNumber":364,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":365,"author":{"gitId":"naijie2108"},"content":"`OverallTask` object stores the following for each task:","lastModifiedDate":"2021-10-24"},{"lineNumber":366,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":367,"author":{"gitId":"naijie2108"},"content":"1. `description`","lastModifiedDate":"2021-10-24"},{"lineNumber":368,"author":{"gitId":"naijie2108"},"content":"2. `Date`","lastModifiedDate":"2021-10-24"},{"lineNumber":369,"author":{"gitId":"naijie2108"},"content":"3. `isDone`","lastModifiedDate":"2021-10-24"},{"lineNumber":370,"author":{"gitId":"naijie2108"},"content":"4. `isLate`","lastModifiedDate":"2021-10-24"},{"lineNumber":371,"author":{"gitId":"naijie2108"},"content":"5. `Deadline`","lastModifiedDate":"2021-10-24"},{"lineNumber":372,"author":{"gitId":"naijie2108"},"content":"6. `isGradable`","lastModifiedDate":"2021-10-24"},{"lineNumber":373,"author":{"gitId":"naijie2108"},"content":"7. `Weightage`","lastModifiedDate":"2021-10-24"},{"lineNumber":374,"author":{"gitId":"naijie2108"},"content":"8. `moduleName`","lastModifiedDate":"2021-10-24"},{"lineNumber":375,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":376,"author":{"gitId":"naijie2108"},"content":"How the `OverallTask` component works:","lastModifiedDate":"2021-10-24"},{"lineNumber":377,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":378,"author":{"gitId":"naijie2108"},"content":"1. It inherits from `Task`, with additional attributes `isGradable`, `weightage` and `moduleName`.","lastModifiedDate":"2021-11-04"},{"lineNumber":379,"author":{"gitId":"naijie2108"},"content":"2. The attributes `isGradable`, `weightage` are added to provide more information for gradable tasks, while `moduleName`","lastModifiedDate":"2021-11-04"},{"lineNumber":380,"author":{"gitId":"yzhedwin"},"content":"   is added to display module information.","lastModifiedDate":"2021-10-28"},{"lineNumber":381,"author":{"gitId":"naijie2108"},"content":"3. It can be instantiated with 2 different constructors:","lastModifiedDate":"2021-10-24"},{"lineNumber":382,"author":{"gitId":"naijie2108"},"content":"    * `OverallTask(task: Task, moduleName: String)` - Instantiates using a `Task` object \u003cbr/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":383,"author":{"gitId":"naijie2108"},"content":"      ![alt_text](media/OverallTaskConstructorTaskSequenceDiagram.png \"image_tooltip\")","lastModifiedDate":"2021-10-26"},{"lineNumber":384,"author":{"gitId":"naijie2108"},"content":"    * `OverallTask(gradableTask:GradableTask, moduleName: String)` - Instantiates using a `GradableTask `object \u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":385,"author":{"gitId":"naijie2108"},"content":"      ![alt_text](media/OverallTaskConstructorGradableTaskSequenceDiagram.png \"image_tooltip\")","lastModifiedDate":"2021-10-26"},{"lineNumber":386,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":387,"author":{"gitId":"yzhedwin"},"content":"4. During instantiation, information from `Task/GradableTask` objects are added to the `OverallTask` object together","lastModifiedDate":"2021-10-28"},{"lineNumber":388,"author":{"gitId":"naijie2108"},"content":"   with their `moduleName` .","lastModifiedDate":"2021-11-04"},{"lineNumber":389,"author":{"gitId":"naijie2108"},"content":"5. Calling the `toString()` method generates a string containing task information together with its `moduleName`.","lastModifiedDate":"2021-11-03"},{"lineNumber":390,"author":{"gitId":"jiexiong-zeng"},"content":"   \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":391,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":392,"author":{"gitId":"jiexiong-zeng"},"content":"# Appendix A: Product Scope","lastModifiedDate":"2021-10-25"},{"lineNumber":393,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":394,"author":{"gitId":"naijie2108"},"content":"**Target User Profile:**","lastModifiedDate":"2021-11-04"},{"lineNumber":395,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":396,"author":{"gitId":"naijie2108"},"content":"* NUS student","lastModifiedDate":"2021-11-04"},{"lineNumber":397,"author":{"gitId":"naijie2108"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2021-11-04"},{"lineNumber":398,"author":{"gitId":"naijie2108"},"content":"* can type fast","lastModifiedDate":"2021-11-04"},{"lineNumber":399,"author":{"gitId":"naijie2108"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2021-11-04"},{"lineNumber":400,"author":{"gitId":"naijie2108"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2021-11-04"},{"lineNumber":401,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":402,"author":{"gitId":"naijie2108"},"content":"**Value Proposition:**","lastModifiedDate":"2021-11-04"},{"lineNumber":403,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":404,"author":{"gitId":"yzhedwin"},"content":"A centralized platform which allows NUS Students to carry out their learning management without needing to frequently","lastModifiedDate":"2021-11-05"},{"lineNumber":405,"author":{"gitId":"yzhedwin"},"content":"switch between multiple tools or applications such as NUSMods, Luminus, Sticky Notes etc.","lastModifiedDate":"2021-11-05"},{"lineNumber":406,"author":{"gitId":"jiexiong-zeng"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":407,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":408,"author":{"gitId":"jiexiong-zeng"},"content":"# Appendix B: User Stories","lastModifiedDate":"2021-10-25"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":410,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2021-10-26"},{"lineNumber":411,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2021-10-26"},{"lineNumber":412,"author":{"gitId":"jiexiong-zeng"},"content":"|v1.0|Forgetful student|have an app to automatically list out my deadlines for each week|prioritise my work.|","lastModifiedDate":"2021-10-26"},{"lineNumber":413,"author":{"gitId":"jiexiong-zeng"},"content":"|v1.0|Busy student|be reminded of my tasks|remember all my tasks.|","lastModifiedDate":"2021-10-26"},{"lineNumber":414,"author":{"gitId":"jiexiong-zeng"},"content":"|v1.0|Student|see which assignments are completed and which are not|know my progress in this module.|","lastModifiedDate":"2021-10-26"},{"lineNumber":415,"author":{"gitId":"jiexiong-zeng"},"content":"|v1.0|User|visualize my timetable|reference it easily.|","lastModifiedDate":"2021-10-26"},{"lineNumber":416,"author":{"gitId":"jiexiong-zeng"},"content":"|v1.0|User of a to-do app|see the deadline of each task|prioritise my work.| ","lastModifiedDate":"2021-10-26"},{"lineNumber":417,"author":{"gitId":"jiexiong-zeng"},"content":"|v2.0|Student|be able to update module details|update outdated information.|","lastModifiedDate":"2021-10-26"},{"lineNumber":418,"author":{"gitId":"jiexiong-zeng"},"content":"|v2.0|Student|easily track my CAP progression|  gauge how well I am doing.|","lastModifiedDate":"2021-10-26"},{"lineNumber":419,"author":{"gitId":"jiexiong-zeng"},"content":"|v2.0|Student|have quick access to upcoming gradable assignments|be sure everything is prepared for.|","lastModifiedDate":"2021-10-26"},{"lineNumber":420,"author":{"gitId":"jiexiong-zeng"},"content":"|v2.0|Student|be able to know what classes i have up next|  prepare for them in time.|","lastModifiedDate":"2021-10-26"},{"lineNumber":421,"author":{"gitId":"naijie2108"},"content":"|v2.1|University student| see the weightage of the modules| place emphasis/focus on certain work when there is a lack of time.|","lastModifiedDate":"2021-11-04"},{"lineNumber":422,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":423,"author":{"gitId":"jiexiong-zeng"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":424,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":425,"author":{"gitId":"jiexiong-zeng"},"content":"# Appendix C: Non Functional Requirements","lastModifiedDate":"2021-10-25"},{"lineNumber":426,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":427,"author":{"gitId":"yapjoonsiong"},"content":"1. Should work on any mainstream OS as long as it has Java 11 or above installed.","lastModifiedDate":"2021-11-05"},{"lineNumber":428,"author":{"gitId":"jiexiong-zeng"},"content":"2. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2021-11-05"},{"lineNumber":429,"author":{"gitId":"jiexiong-zeng"},"content":"   able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-11-05"},{"lineNumber":430,"author":{"gitId":"jiexiong-zeng"},"content":"   \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":431,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":432,"author":{"gitId":"jiexiong-zeng"},"content":"# Appendix D: Glossary","lastModifiedDate":"2021-10-25"},{"lineNumber":433,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":434,"author":{"gitId":"yzhedwin"},"content":"* **Command Line Interface(CLI)** - A command-line interface (CLI) processes commands to a computer program in the form","lastModifiedDate":"2021-11-06"},{"lineNumber":435,"author":{"gitId":"yzhedwin"},"content":"  of lines of text(From [Wikipedia](https://en.wikipedia.org/wiki/Command-line_interface)).","lastModifiedDate":"2021-11-06"},{"lineNumber":436,"author":{"gitId":"yzhedwin"},"content":"* **Mainstream Operating Systems(OS)** - Windows, Linux, Unix, OS-X","lastModifiedDate":"2021-11-06"},{"lineNumber":437,"author":{"gitId":"DmitriYam"},"content":"* **Visualise** - Snapshot of the graded components which the module is made up of and their individual percentages.","lastModifiedDate":"2021-11-06"},{"lineNumber":438,"author":{"gitId":"jiexiong-zeng"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":439,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":440,"author":{"gitId":"jiexiong-zeng"},"content":"# Appendix E: Instructions for Manual Testing","lastModifiedDate":"2021-10-25"},{"lineNumber":441,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":442,"author":{"gitId":"naijie2108"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2021-11-04"},{"lineNumber":443,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":444,"author":{"gitId":"yzhedwin"},"content":"**Note:** These instructions only provide a starting point for testers to work on, testers are expected to do more","lastModifiedDate":"2021-11-05"},{"lineNumber":445,"author":{"gitId":"yzhedwin"},"content":"exploratory testing.","lastModifiedDate":"2021-11-05"},{"lineNumber":446,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":447,"author":{"gitId":"naijie2108"},"content":"## Launch","lastModifiedDate":"2021-11-04"},{"lineNumber":448,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":449,"author":{"gitId":"naijie2108"},"content":"1. Initial launch","lastModifiedDate":"2021-11-04"},{"lineNumber":450,"author":{"gitId":"naijie2108"},"content":"    1. Download the JAR file and copy it into an empty folder","lastModifiedDate":"2021-11-04"},{"lineNumber":451,"author":{"gitId":"naijie2108"},"content":"    2. Open up your terminal, and navigate to the folder containing the JAR file","lastModifiedDate":"2021-11-04"},{"lineNumber":452,"author":{"gitId":"naijie2108"},"content":"    3. Type the following command:","lastModifiedDate":"2021-11-04"},{"lineNumber":453,"author":{"gitId":"naijie2108"},"content":"   ```","lastModifiedDate":"2021-11-04"},{"lineNumber":454,"author":{"gitId":"naijie2108"},"content":"   java -jar NoCap.jar","lastModifiedDate":"2021-11-04"},{"lineNumber":455,"author":{"gitId":"naijie2108"},"content":"   ```","lastModifiedDate":"2021-11-04"},{"lineNumber":456,"author":{"gitId":"naijie2108"},"content":"   **Note**: It is important that you navigate to the directory containing the JAR file first before running the","lastModifiedDate":"2021-11-05"},{"lineNumber":457,"author":{"gitId":"yzhedwin"},"content":"   application, as it may affect the location of the save file.","lastModifiedDate":"2021-11-05"},{"lineNumber":458,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":459,"author":{"gitId":"naijie2108"},"content":"## Saving/Loading data","lastModifiedDate":"2021-11-04"},{"lineNumber":460,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":461,"author":{"gitId":"naijie2108"},"content":"1. Automatic saving","lastModifiedDate":"2021-11-04"},{"lineNumber":462,"author":{"gitId":"yzhedwin"},"content":"    1. Carry out any command that adds/modifies data in the application, e.g `add CS2102`, or simply exit the","lastModifiedDate":"2021-11-05"},{"lineNumber":463,"author":{"gitId":"yzhedwin"},"content":"       application using the command `bye`.","lastModifiedDate":"2021-11-05"},{"lineNumber":464,"author":{"gitId":"yzhedwin"},"content":"    2. Expected: A JSON file is created/updated automatically in the data folder located in folder containing the JAR","lastModifiedDate":"2021-11-05"},{"lineNumber":465,"author":{"gitId":"yzhedwin"},"content":"       file, provided the instructions in `Launch` is followed correctly.","lastModifiedDate":"2021-11-05"},{"lineNumber":466,"author":{"gitId":"naijie2108"},"content":"2. No save file exists","lastModifiedDate":"2021-11-04"},{"lineNumber":467,"author":{"gitId":"naijie2108"},"content":"    1. Prerequisites: Make sure the data folder does not exist/is deleted from the folder containing the JAR file.","lastModifiedDate":"2021-11-04"},{"lineNumber":468,"author":{"gitId":"naijie2108"},"content":"    2. Run the application as stated in `Launch`","lastModifiedDate":"2021-11-04"},{"lineNumber":469,"author":{"gitId":"naijie2108"},"content":"    3. Expected: Application starts with an empty template and shows the following message","lastModifiedDate":"2021-11-04"},{"lineNumber":470,"author":{"gitId":"naijie2108"},"content":"       ```","lastModifiedDate":"2021-11-04"},{"lineNumber":471,"author":{"gitId":"naijie2108"},"content":"       No save file found, starting with an empty template","lastModifiedDate":"2021-11-04"},{"lineNumber":472,"author":{"gitId":"naijie2108"},"content":"       Welcome to NoCap","lastModifiedDate":"2021-11-04"},{"lineNumber":473,"author":{"gitId":"naijie2108"},"content":"       ```","lastModifiedDate":"2021-11-04"},{"lineNumber":474,"author":{"gitId":"naijie2108"},"content":"3. Save file exists","lastModifiedDate":"2021-11-04"},{"lineNumber":475,"author":{"gitId":"yzhedwin"},"content":"    1. Prerequisites: Make sure that a save file already exists in the data folder that is located in the folder","lastModifiedDate":"2021-11-05"},{"lineNumber":476,"author":{"gitId":"yzhedwin"},"content":"       containing the JAR file. If not, simply carry out any command that adds/modifies data in the application,","lastModifiedDate":"2021-11-05"},{"lineNumber":477,"author":{"gitId":"yzhedwin"},"content":"       e.g `add CS2102`(see 1. Automatic Saving), and the save file will be created automatically.","lastModifiedDate":"2021-11-05"},{"lineNumber":478,"author":{"gitId":"naijie2108"},"content":"    2. Run the application as stated in `Launch`","lastModifiedDate":"2021-11-04"},{"lineNumber":479,"author":{"gitId":"naijie2108"},"content":"    3. Expected: Application loads the save file when starting the application and shows the following message","lastModifiedDate":"2021-11-04"},{"lineNumber":480,"author":{"gitId":"naijie2108"},"content":"   ```","lastModifiedDate":"2021-11-04"},{"lineNumber":481,"author":{"gitId":"naijie2108"},"content":"   Data loaded successfully","lastModifiedDate":"2021-11-04"},{"lineNumber":482,"author":{"gitId":"naijie2108"},"content":"   Welcome to NoCap","lastModifiedDate":"2021-11-04"},{"lineNumber":483,"author":{"gitId":"naijie2108"},"content":"   ```","lastModifiedDate":"2021-11-04"},{"lineNumber":484,"author":{"gitId":"naijie2108"},"content":"4. Corrupted save file","lastModifiedDate":"2021-11-04"},{"lineNumber":485,"author":{"gitId":"yzhedwin"},"content":"    1. Prerequisites: Make sure that a save file already exists in the data folder that is located in the folder","lastModifiedDate":"2021-11-05"},{"lineNumber":486,"author":{"gitId":"yzhedwin"},"content":"       containing the JAR file If not, simply carry out any command that adds/modifies data in the application,","lastModifiedDate":"2021-11-05"},{"lineNumber":487,"author":{"gitId":"yzhedwin"},"content":"       e.g `add CS2102`(see 1. Automatic Saving), and the save file will be created automatically.","lastModifiedDate":"2021-11-05"},{"lineNumber":488,"author":{"gitId":"naijie2108"},"content":"    2. To simulate data corruption, remove lines to cause syntax errors in the JSON file, such as lines containing `{` and `}`.","lastModifiedDate":"2021-11-06"},{"lineNumber":489,"author":{"gitId":"naijie2108"},"content":"    3. Run the application","lastModifiedDate":"2021-11-04"},{"lineNumber":490,"author":{"gitId":"naijie2108"},"content":"    4. Expected: An error message is shown and application starts with an empty template, showing the message below:","lastModifiedDate":"2021-11-04"},{"lineNumber":491,"author":{"gitId":"naijie2108"},"content":"   ```","lastModifiedDate":"2021-11-04"},{"lineNumber":492,"author":{"gitId":"naijie2108"},"content":"   Error reading save file, creating new template","lastModifiedDate":"2021-11-04"},{"lineNumber":493,"author":{"gitId":"naijie2108"},"content":"   Welcome to NoCap","lastModifiedDate":"2021-11-04"},{"lineNumber":494,"author":{"gitId":"naijie2108"},"content":"   ```","lastModifiedDate":"2021-11-04"},{"lineNumber":495,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":496,"author":{"gitId":"yapjoonsiong"},"content":"## Listing semesters","lastModifiedDate":"2021-11-05"},{"lineNumber":497,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":498,"author":{"gitId":"yapjoonsiong"},"content":"1. Run the command `list semesters`","lastModifiedDate":"2021-11-05"},{"lineNumber":499,"author":{"gitId":"yapjoonsiong"},"content":"2. Expected: 10 pre-loaded semesters from Y1S1 to Y5S2 presented in the following message:","lastModifiedDate":"2021-11-05"},{"lineNumber":500,"author":{"gitId":"yapjoonsiong"},"content":"    ```","lastModifiedDate":"2021-11-05"},{"lineNumber":501,"author":{"gitId":"yapjoonsiong"},"content":"    1 : Y1S1","lastModifiedDate":"2021-11-05"},{"lineNumber":502,"author":{"gitId":"yapjoonsiong"},"content":"    2 : Y1S2","lastModifiedDate":"2021-11-05"},{"lineNumber":503,"author":{"gitId":"yapjoonsiong"},"content":"    3 : Y2S1","lastModifiedDate":"2021-11-05"},{"lineNumber":504,"author":{"gitId":"yapjoonsiong"},"content":"    4 : Y2S2","lastModifiedDate":"2021-11-05"},{"lineNumber":505,"author":{"gitId":"yapjoonsiong"},"content":"    5 : Y3S1","lastModifiedDate":"2021-11-05"},{"lineNumber":506,"author":{"gitId":"yapjoonsiong"},"content":"    6 : Y3S2","lastModifiedDate":"2021-11-05"},{"lineNumber":507,"author":{"gitId":"yapjoonsiong"},"content":"    7 : Y4S1","lastModifiedDate":"2021-11-05"},{"lineNumber":508,"author":{"gitId":"yapjoonsiong"},"content":"    8 : Y4S2","lastModifiedDate":"2021-11-05"},{"lineNumber":509,"author":{"gitId":"yapjoonsiong"},"content":"    9 : Y5S1","lastModifiedDate":"2021-11-05"},{"lineNumber":510,"author":{"gitId":"yapjoonsiong"},"content":"    10 : Y5S2","lastModifiedDate":"2021-11-05"},{"lineNumber":511,"author":{"gitId":"yapjoonsiong"},"content":"    ```","lastModifiedDate":"2021-11-05"},{"lineNumber":512,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":513,"author":{"gitId":"yapjoonsiong"},"content":"## Switching semesters","lastModifiedDate":"2021-11-05"},{"lineNumber":514,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":515,"author":{"gitId":"yapjoonsiong"},"content":"1. On first use, NoCap defaults to Y1S1 semester","lastModifiedDate":"2021-11-05"},{"lineNumber":516,"author":{"gitId":"yapjoonsiong"},"content":"2. On subsequent launches, NoCap defaults to the last accessed semester","lastModifiedDate":"2021-11-05"},{"lineNumber":517,"author":{"gitId":"yapjoonsiong"},"content":"3. Switching between semesters","lastModifiedDate":"2021-11-05"},{"lineNumber":518,"author":{"gitId":"yapjoonsiong"},"content":"    1. Choose a semester index from 1-10 with reference to `list semesters`","lastModifiedDate":"2021-11-05"},{"lineNumber":519,"author":{"gitId":"yapjoonsiong"},"content":"    2. Run the command `switch \u003cindex\u003e` to switch to the new semester","lastModifiedDate":"2021-11-05"},{"lineNumber":520,"author":{"gitId":"yapjoonsiong"},"content":"    3. For example, if \u00273\u0027 is chosen, running `switch 3` gives the following expected message:","lastModifiedDate":"2021-11-05"},{"lineNumber":521,"author":{"gitId":"yapjoonsiong"},"content":"       ```","lastModifiedDate":"2021-11-05"},{"lineNumber":522,"author":{"gitId":"yapjoonsiong"},"content":"       Semester successfully switched","lastModifiedDate":"2021-11-05"},{"lineNumber":523,"author":{"gitId":"yapjoonsiong"},"content":"       You are now accessing semester: Y2S1","lastModifiedDate":"2021-11-05"},{"lineNumber":524,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":525,"author":{"gitId":"jiexiong-zeng"},"content":"## Adding a module to a semester","lastModifiedDate":"2021-11-05"},{"lineNumber":526,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":527,"author":{"gitId":"DmitriYam"},"content":"1. Prerequisite: Semester should already exist.","lastModifiedDate":"2021-11-05"},{"lineNumber":528,"author":{"gitId":"DmitriYam"},"content":"2. Adding a module that does not exist.","lastModifiedDate":"2021-11-05"},{"lineNumber":529,"author":{"gitId":"DmitriYam"},"content":"    1. Run the command: `add CS2040C`","lastModifiedDate":"2021-11-05"},{"lineNumber":530,"author":{"gitId":"DmitriYam"},"content":"    2. Expected:","lastModifiedDate":"2021-11-05"},{"lineNumber":531,"author":{"gitId":"DmitriYam"},"content":"   ```","lastModifiedDate":"2021-11-05"},{"lineNumber":532,"author":{"gitId":"DmitriYam"},"content":"   Module successfully added: ","lastModifiedDate":"2021-11-05"},{"lineNumber":533,"author":{"gitId":"DmitriYam"},"content":"   1","lastModifiedDate":"2021-11-05"},{"lineNumber":534,"author":{"gitId":"DmitriYam"},"content":"    Module name: CS2040C","lastModifiedDate":"2021-11-05"},{"lineNumber":535,"author":{"gitId":"DmitriYam"},"content":"    CREDITS: 0","lastModifiedDate":"2021-11-05"},{"lineNumber":536,"author":{"gitId":"DmitriYam"},"content":"    --------------------------- ","lastModifiedDate":"2021-11-05"},{"lineNumber":537,"author":{"gitId":"DmitriYam"},"content":"    SCHEDULE:","lastModifiedDate":"2021-11-05"},{"lineNumber":538,"author":{"gitId":"DmitriYam"},"content":"    --------------------------- ","lastModifiedDate":"2021-11-05"},{"lineNumber":539,"author":{"gitId":"DmitriYam"},"content":"    GRADE: NIL","lastModifiedDate":"2021-11-05"},{"lineNumber":540,"author":{"gitId":"DmitriYam"},"content":"    TASKS: []","lastModifiedDate":"2021-11-05"},{"lineNumber":541,"author":{"gitId":"DmitriYam"},"content":"    BREAKDOWN:","lastModifiedDate":"2021-11-05"},{"lineNumber":542,"author":{"gitId":"DmitriYam"},"content":"   ```","lastModifiedDate":"2021-11-05"},{"lineNumber":543,"author":{"gitId":"DmitriYam"},"content":"3. Adding a module that already exists.","lastModifiedDate":"2021-11-05"},{"lineNumber":544,"author":{"gitId":"DmitriYam"},"content":"    1. Prerequisite: module with the same name exists in current semester list. e.g. CS2040C","lastModifiedDate":"2021-11-05"},{"lineNumber":545,"author":{"gitId":"DmitriYam"},"content":"    2. Run the command `add CS2040C`","lastModifiedDate":"2021-11-05"},{"lineNumber":546,"author":{"gitId":"DmitriYam"},"content":"    3. Expected:`This module already exists!`","lastModifiedDate":"2021-11-05"},{"lineNumber":547,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":548,"author":{"gitId":"DmitriYam"},"content":"4. Adding a module that is longer than 16 Characters.","lastModifiedDate":"2021-11-05"},{"lineNumber":549,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":550,"author":{"gitId":"DmitriYam"},"content":"   Expected: `Module name must be less than 17 characters`","lastModifiedDate":"2021-11-05"},{"lineNumber":551,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":552,"author":{"gitId":"DmitriYam"},"content":"## Deleting a module from a semester","lastModifiedDate":"2021-11-05"},{"lineNumber":553,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":554,"author":{"gitId":"DmitriYam"},"content":"1. Prerequisite: Module index should already exist in the ModuleList","lastModifiedDate":"2021-11-05"},{"lineNumber":555,"author":{"gitId":"DmitriYam"},"content":"2. Deleting a module with a valid index.","lastModifiedDate":"2021-11-05"},{"lineNumber":556,"author":{"gitId":"DmitriYam"},"content":"    1. Run the command: `delete 1`","lastModifiedDate":"2021-11-05"},{"lineNumber":557,"author":{"gitId":"DmitriYam"},"content":"    2. Expected:","lastModifiedDate":"2021-11-05"},{"lineNumber":558,"author":{"gitId":"DmitriYam"},"content":"   ```","lastModifiedDate":"2021-11-05"},{"lineNumber":559,"author":{"gitId":"DmitriYam"},"content":"    CS2040C has been successfully deleted","lastModifiedDate":"2021-11-05"},{"lineNumber":560,"author":{"gitId":"DmitriYam"},"content":"    Remaining Modules are:","lastModifiedDate":"2021-11-05"},{"lineNumber":561,"author":{"gitId":"DmitriYam"},"content":"   ```","lastModifiedDate":"2021-11-05"},{"lineNumber":562,"author":{"gitId":"DmitriYam"},"content":"3. Deleting a module with an invalid index","lastModifiedDate":"2021-11-05"},{"lineNumber":563,"author":{"gitId":"DmitriYam"},"content":"    1. Run the command: `delete 999`","lastModifiedDate":"2021-11-05"},{"lineNumber":564,"author":{"gitId":"DmitriYam"},"content":"    2. Expected","lastModifiedDate":"2021-11-05"},{"lineNumber":565,"author":{"gitId":"DmitriYam"},"content":"   ```","lastModifiedDate":"2021-11-05"},{"lineNumber":566,"author":{"gitId":"DmitriYam"},"content":"    Invalid number value","lastModifiedDate":"2021-11-05"},{"lineNumber":567,"author":{"gitId":"DmitriYam"},"content":"   ```   ","lastModifiedDate":"2021-11-05"},{"lineNumber":568,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":569,"author":{"gitId":"jiexiong-zeng"},"content":"## Listing all modules in a semester","lastModifiedDate":"2021-11-05"},{"lineNumber":570,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":571,"author":{"gitId":"DmitriYam"},"content":"1. Prerequisite: Semester should exist.","lastModifiedDate":"2021-11-05"},{"lineNumber":572,"author":{"gitId":"DmitriYam"},"content":"2. Run the command: `list module`","lastModifiedDate":"2021-11-05"},{"lineNumber":573,"author":{"gitId":"DmitriYam"},"content":"3. Expected:","lastModifiedDate":"2021-11-05"},{"lineNumber":574,"author":{"gitId":"DmitriYam"},"content":"    ```","lastModifiedDate":"2021-11-05"},{"lineNumber":575,"author":{"gitId":"DmitriYam"},"content":"    1","lastModifiedDate":"2021-11-05"},{"lineNumber":576,"author":{"gitId":"DmitriYam"},"content":"    Module name: CS2113T","lastModifiedDate":"2021-11-05"},{"lineNumber":577,"author":{"gitId":"DmitriYam"},"content":"    CREDITS: 4","lastModifiedDate":"2021-11-05"},{"lineNumber":578,"author":{"gitId":"DmitriYam"},"content":"    --------------------------- ","lastModifiedDate":"2021-11-05"},{"lineNumber":579,"author":{"gitId":"DmitriYam"},"content":"    SCHEDULE: ","lastModifiedDate":"2021-11-05"},{"lineNumber":580,"author":{"gitId":"DmitriYam"},"content":"    --------------------------- ","lastModifiedDate":"2021-11-05"},{"lineNumber":581,"author":{"gitId":"DmitriYam"},"content":"    GRADE: B+","lastModifiedDate":"2021-11-05"},{"lineNumber":582,"author":{"gitId":"DmitriYam"},"content":"    TASKS: []","lastModifiedDate":"2021-11-05"},{"lineNumber":583,"author":{"gitId":"DmitriYam"},"content":"    BREAKDOWN: ","lastModifiedDate":"2021-11-05"},{"lineNumber":584,"author":{"gitId":"DmitriYam"},"content":"    ","lastModifiedDate":"2021-11-05"},{"lineNumber":585,"author":{"gitId":"DmitriYam"},"content":"    2","lastModifiedDate":"2021-11-05"},{"lineNumber":586,"author":{"gitId":"DmitriYam"},"content":"    Module name: CS1010","lastModifiedDate":"2021-11-05"},{"lineNumber":587,"author":{"gitId":"DmitriYam"},"content":"    CREDITS: 0","lastModifiedDate":"2021-11-05"},{"lineNumber":588,"author":{"gitId":"DmitriYam"},"content":"    --------------------------- ","lastModifiedDate":"2021-11-05"},{"lineNumber":589,"author":{"gitId":"DmitriYam"},"content":"    SCHEDULE: ","lastModifiedDate":"2021-11-05"},{"lineNumber":590,"author":{"gitId":"DmitriYam"},"content":"    --------------------------- ","lastModifiedDate":"2021-11-05"},{"lineNumber":591,"author":{"gitId":"DmitriYam"},"content":"    GRADE: NIL","lastModifiedDate":"2021-11-05"},{"lineNumber":592,"author":{"gitId":"DmitriYam"},"content":"    TASKS: []","lastModifiedDate":"2021-11-05"},{"lineNumber":593,"author":{"gitId":"DmitriYam"},"content":"    BREAKDOWN: ","lastModifiedDate":"2021-11-05"},{"lineNumber":594,"author":{"gitId":"DmitriYam"},"content":"    ```","lastModifiedDate":"2021-11-05"},{"lineNumber":595,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":596,"author":{"gitId":"naijie2108"},"content":"## List tasks in a semester","lastModifiedDate":"2021-11-04"},{"lineNumber":597,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":598,"author":{"gitId":"naijie2108"},"content":"1. List tasks when there are no available tasks","lastModifiedDate":"2021-11-04"},{"lineNumber":599,"author":{"gitId":"naijie2108"},"content":"    1. Prerequisites: There should be no tasks added to modules in the current semester yet.","lastModifiedDate":"2021-11-04"},{"lineNumber":600,"author":{"gitId":"naijie2108"},"content":"    2. Run the command `list task`","lastModifiedDate":"2021-11-04"},{"lineNumber":601,"author":{"gitId":"naijie2108"},"content":"    3. Expected: No tasks are shown and the following message is shown:","lastModifiedDate":"2021-11-04"},{"lineNumber":602,"author":{"gitId":"naijie2108"},"content":"       ```","lastModifiedDate":"2021-11-04"},{"lineNumber":603,"author":{"gitId":"naijie2108"},"content":"       All tasks: ","lastModifiedDate":"2021-11-04"},{"lineNumber":604,"author":{"gitId":"naijie2108"},"content":"       You have no tasks","lastModifiedDate":"2021-11-04"},{"lineNumber":605,"author":{"gitId":"naijie2108"},"content":"       ```","lastModifiedDate":"2021-11-04"},{"lineNumber":606,"author":{"gitId":"naijie2108"},"content":"2. List tasks with optional arguments","lastModifiedDate":"2021-11-04"},{"lineNumber":607,"author":{"gitId":"yzhedwin"},"content":"    1. Prerequisites: There should be tasks added to modules in the semester beforehand. Can be checked by","lastModifiedDate":"2021-11-05"},{"lineNumber":608,"author":{"gitId":"yzhedwin"},"content":"       running `list task`. If there are no tasks in the semester, add in tasks first(including both gradable and","lastModifiedDate":"2021-11-05"},{"lineNumber":609,"author":{"gitId":"yzhedwin"},"content":"       non-gradable tasks)","lastModifiedDate":"2021-11-05"},{"lineNumber":610,"author":{"gitId":"naijie2108"},"content":"    2. Run list task command with optional arguments, as specified in the user guide, e.g. `list task gradable`","lastModifiedDate":"2021-11-04"},{"lineNumber":611,"author":{"gitId":"naijie2108"},"content":"    3. Expected: Tasks are shown accordingly, depending on the optional argument","lastModifiedDate":"2021-11-04"},{"lineNumber":612,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":613,"author":{"gitId":"jiexiong-zeng"},"content":"## Adding a task to a module","lastModifiedDate":"2021-11-05"},{"lineNumber":614,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":615,"author":{"gitId":"yzhedwin"},"content":"1. Prerequisite: Module CS1010 already exists.","lastModifiedDate":"2021-11-06"},{"lineNumber":616,"author":{"gitId":"yzhedwin"},"content":"2. Adding a valid Task to CS1010.","lastModifiedDate":"2021-11-06"},{"lineNumber":617,"author":{"gitId":"yzhedwin"},"content":"    1. Run the command: `/m cs1010 addtask as01 /by 11/12/2021 2359`","lastModifiedDate":"2021-11-06"},{"lineNumber":618,"author":{"gitId":"yzhedwin"},"content":"    2. Expected:","lastModifiedDate":"2021-11-06"},{"lineNumber":619,"author":{"gitId":"yzhedwin"},"content":"   ```","lastModifiedDate":"2021-11-06"},{"lineNumber":620,"author":{"gitId":"yzhedwin"},"content":"    Added new task to CS1010","lastModifiedDate":"2021-11-06"},{"lineNumber":621,"author":{"gitId":"yzhedwin"},"content":"    [ ] as01 by: 11 Dec 2021 11:59 PM","lastModifiedDate":"2021-11-06"},{"lineNumber":622,"author":{"gitId":"yzhedwin"},"content":"   ```","lastModifiedDate":"2021-11-06"},{"lineNumber":623,"author":{"gitId":"yzhedwin"},"content":"3. Adding a Task with an invalid syntax.","lastModifiedDate":"2021-11-06"},{"lineNumber":624,"author":{"gitId":"yzhedwin"},"content":"    1. Run the command : `/m cs1010 addtask as01 /by 11-12-21 2359`","lastModifiedDate":"2021-11-06"},{"lineNumber":625,"author":{"gitId":"yzhedwin"},"content":"    2. Expected:","lastModifiedDate":"2021-11-06"},{"lineNumber":626,"author":{"gitId":"yzhedwin"},"content":"    ```","lastModifiedDate":"2021-11-06"},{"lineNumber":627,"author":{"gitId":"yzhedwin"},"content":"    Wrong date format input!","lastModifiedDate":"2021-11-06"},{"lineNumber":628,"author":{"gitId":"yzhedwin"},"content":"    Format: dd/MM/yyyy hhmm","lastModifiedDate":"2021-11-06"},{"lineNumber":629,"author":{"gitId":"yzhedwin"},"content":"    ```","lastModifiedDate":"2021-11-06"},{"lineNumber":630,"author":{"gitId":"yzhedwin"},"content":"    3. Run the command: `/m cs1010 addtask /by 11/12/2021 2359`","lastModifiedDate":"2021-11-06"},{"lineNumber":631,"author":{"gitId":"yzhedwin"},"content":"    4. Expected:","lastModifiedDate":"2021-11-06"},{"lineNumber":632,"author":{"gitId":"yzhedwin"},"content":"    ```","lastModifiedDate":"2021-11-06"},{"lineNumber":633,"author":{"gitId":"yzhedwin"},"content":"    You are missing a description!","lastModifiedDate":"2021-11-06"},{"lineNumber":634,"author":{"gitId":"yzhedwin"},"content":"    ```","lastModifiedDate":"2021-11-06"},{"lineNumber":635,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":636,"author":{"gitId":"jiexiong-zeng"},"content":"## Adding a GradableTask to module","lastModifiedDate":"2021-11-05"},{"lineNumber":637,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":638,"author":{"gitId":"DmitriYam"},"content":"1. Prerequisite: Module CS2040C should already exist.","lastModifiedDate":"2021-11-05"},{"lineNumber":639,"author":{"gitId":"DmitriYam"},"content":"2. Adding a valid GradableTask to module.","lastModifiedDate":"2021-11-05"},{"lineNumber":640,"author":{"gitId":"DmitriYam"},"content":"    1. Run the command: `/m cs2040c addgradable finals /by 11/11/2021 1000 /w 50`","lastModifiedDate":"2021-11-05"},{"lineNumber":641,"author":{"gitId":"DmitriYam"},"content":"    2. Expected:","lastModifiedDate":"2021-11-05"},{"lineNumber":642,"author":{"gitId":"DmitriYam"},"content":"   ```","lastModifiedDate":"2021-11-05"},{"lineNumber":643,"author":{"gitId":"DmitriYam"},"content":"     Added new task to CS2040C","lastModifiedDate":"2021-11-05"},{"lineNumber":644,"author":{"gitId":"DmitriYam"},"content":"    finals by: 11 Nov 2021 10:00 AM Weightage 50% [ ]","lastModifiedDate":"2021-11-05"},{"lineNumber":645,"author":{"gitId":"DmitriYam"},"content":"    BREAKDOWN:","lastModifiedDate":"2021-11-05"},{"lineNumber":646,"author":{"gitId":"DmitriYam"},"content":"    \u003c\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d50%\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":647,"author":{"gitId":"DmitriYam"},"content":"    ##################################################","lastModifiedDate":"2021-11-05"},{"lineNumber":648,"author":{"gitId":"DmitriYam"},"content":"    |-----------------------1------------------------|","lastModifiedDate":"2021-11-05"},{"lineNumber":649,"author":{"gitId":"DmitriYam"},"content":"    1: finals","lastModifiedDate":"2021-11-05"},{"lineNumber":650,"author":{"gitId":"jiexiong-zeng"},"content":"    ","lastModifiedDate":"2021-11-05"},{"lineNumber":651,"author":{"gitId":"DmitriYam"},"content":"    1 finals by: 11 Nov 2021 10:00 AM Weightage 50% [ ]","lastModifiedDate":"2021-11-05"},{"lineNumber":652,"author":{"gitId":"DmitriYam"},"content":"   ```","lastModifiedDate":"2021-11-05"},{"lineNumber":653,"author":{"gitId":"DmitriYam"},"content":"3. Adding a GradableTask with an invalid syntax.","lastModifiedDate":"2021-11-05"},{"lineNumber":654,"author":{"gitId":"DmitriYam"},"content":"    1. Run the command : `/m cs2040c addgradable finals /by 00/00/00 /w 50`","lastModifiedDate":"2021-11-05"},{"lineNumber":655,"author":{"gitId":"DmitriYam"},"content":"    2. Run the command: `/m cs2040c addgradable finals /by 10/10/2021 1000 /w 1`","lastModifiedDate":"2021-11-05"},{"lineNumber":656,"author":{"gitId":"DmitriYam"},"content":"    3. Expected:","lastModifiedDate":"2021-11-05"},{"lineNumber":657,"author":{"gitId":"DmitriYam"},"content":"    ```","lastModifiedDate":"2021-11-05"},{"lineNumber":658,"author":{"gitId":"DmitriYam"},"content":"    Wrong date format input!","lastModifiedDate":"2021-11-05"},{"lineNumber":659,"author":{"gitId":"DmitriYam"},"content":"    Format: dd/MM/yyyy hhmm","lastModifiedDate":"2021-11-05"},{"lineNumber":660,"author":{"gitId":"DmitriYam"},"content":"    BREAKDOWN:","lastModifiedDate":"2021-11-05"},{"lineNumber":661,"author":{"gitId":"DmitriYam"},"content":"    ```","lastModifiedDate":"2021-11-05"},{"lineNumber":662,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":663,"author":{"gitId":"jiexiong-zeng"},"content":"## Listing all gradable tasks","lastModifiedDate":"2021-11-05"},{"lineNumber":664,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":665,"author":{"gitId":"DmitriYam"},"content":"1. Prerequisite: module CS2040C should already exist.","lastModifiedDate":"2021-11-05"},{"lineNumber":666,"author":{"gitId":"DmitriYam"},"content":"2. Run the command: `/m CS2040C list gradable`","lastModifiedDate":"2021-11-05"},{"lineNumber":667,"author":{"gitId":"jiexiong-zeng"},"content":"3. Expected:","lastModifiedDate":"2021-11-05"},{"lineNumber":668,"author":{"gitId":"jiexiong-zeng"},"content":"    ```","lastModifiedDate":"2021-11-05"},{"lineNumber":669,"author":{"gitId":"jiexiong-zeng"},"content":"   BREAKDOWN:","lastModifiedDate":"2021-11-05"},{"lineNumber":670,"author":{"gitId":"DmitriYam"},"content":"    \u003c\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d50%\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003e\u003c\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d50%\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":671,"author":{"gitId":"DmitriYam"},"content":"    ##################################################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@","lastModifiedDate":"2021-11-05"},{"lineNumber":672,"author":{"gitId":"DmitriYam"},"content":"    |-----------------------1------------------------||-----------------------2------------------------|","lastModifiedDate":"2021-11-05"},{"lineNumber":673,"author":{"gitId":"DmitriYam"},"content":"    1: finals","lastModifiedDate":"2021-11-05"},{"lineNumber":674,"author":{"gitId":"DmitriYam"},"content":"    2: midterms","lastModifiedDate":"2021-11-05"},{"lineNumber":675,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":676,"author":{"gitId":"DmitriYam"},"content":"    1 finals by: 11 Nov 2021 10:00 AM Weightage 50% [ ]","lastModifiedDate":"2021-11-05"},{"lineNumber":677,"author":{"gitId":"DmitriYam"},"content":"    2 midterms by: 11 Sep 2021 01:00 PM Weightage 50% [ ]","lastModifiedDate":"2021-11-05"},{"lineNumber":678,"author":{"gitId":"jiexiong-zeng"},"content":"    ``` ","lastModifiedDate":"2021-11-05"},{"lineNumber":679,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":680,"author":{"gitId":"jiexiong-zeng"},"content":"## Editing a task","lastModifiedDate":"2021-11-05"},{"lineNumber":681,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":682,"author":{"gitId":"jiexiong-zeng"},"content":"1. Prerequisites: module CS2040C exists without any existing task.","lastModifiedDate":"2021-11-05"},{"lineNumber":683,"author":{"gitId":"jiexiong-zeng"},"content":"2. Add a new task: `/m cs2040c addtask testcase 1 /by 11/11/2021 0000`.","lastModifiedDate":"2021-11-05"},{"lineNumber":684,"author":{"gitId":"jiexiong-zeng"},"content":"3. Editing description:","lastModifiedDate":"2021-11-05"},{"lineNumber":685,"author":{"gitId":"jiexiong-zeng"},"content":"    1. Run the command: `/m cs2040c editdesc 1 testcase 2`.","lastModifiedDate":"2021-11-05"},{"lineNumber":686,"author":{"gitId":"jiexiong-zeng"},"content":"    2. Run the command: `/m cs2040c list task`.","lastModifiedDate":"2021-11-05"},{"lineNumber":687,"author":{"gitId":"jiexiong-zeng"},"content":"    3. Expected:","lastModifiedDate":"2021-11-05"},{"lineNumber":688,"author":{"gitId":"jiexiong-zeng"},"content":"    ```","lastModifiedDate":"2021-11-05"},{"lineNumber":689,"author":{"gitId":"jiexiong-zeng"},"content":"    Task List for CS2040C:","lastModifiedDate":"2021-11-05"},{"lineNumber":690,"author":{"gitId":"jiexiong-zeng"},"content":"    There are 1 tasks","lastModifiedDate":"2021-11-05"},{"lineNumber":691,"author":{"gitId":"jiexiong-zeng"},"content":"    1.[ ] testcase 2 by: 11 Nov 2021 12:00 AM","lastModifiedDate":"2021-11-05"},{"lineNumber":692,"author":{"gitId":"jiexiong-zeng"},"content":"    ```","lastModifiedDate":"2021-11-05"},{"lineNumber":693,"author":{"gitId":"jiexiong-zeng"},"content":"4. Editing deadline:","lastModifiedDate":"2021-11-05"},{"lineNumber":694,"author":{"gitId":"jiexiong-zeng"},"content":"    1. Run the command: `/m cs2040c editdate 1 12/12/2022 1212`.","lastModifiedDate":"2021-11-05"},{"lineNumber":695,"author":{"gitId":"jiexiong-zeng"},"content":"    2. Run the command: `/m cs2040c list task`.","lastModifiedDate":"2021-11-05"},{"lineNumber":696,"author":{"gitId":"jiexiong-zeng"},"content":"    3. Expected:","lastModifiedDate":"2021-11-05"},{"lineNumber":697,"author":{"gitId":"jiexiong-zeng"},"content":"    ```","lastModifiedDate":"2021-11-05"},{"lineNumber":698,"author":{"gitId":"jiexiong-zeng"},"content":"    Task List for CS2040C:","lastModifiedDate":"2021-11-05"},{"lineNumber":699,"author":{"gitId":"jiexiong-zeng"},"content":"    There are 1 tasks","lastModifiedDate":"2021-11-05"},{"lineNumber":700,"author":{"gitId":"jiexiong-zeng"},"content":"    1.[ ] testcase 2 by: 12 Dec 2022 12:12 PM","lastModifiedDate":"2021-11-05"},{"lineNumber":701,"author":{"gitId":"jiexiong-zeng"},"content":"    ```","lastModifiedDate":"2021-11-05"},{"lineNumber":702,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":703,"author":{"gitId":"jiexiong-zeng"},"content":"## Deleting a task","lastModifiedDate":"2021-11-05"},{"lineNumber":704,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":705,"author":{"gitId":"jiexiong-zeng"},"content":"1. Prerequisites: module CS2040C exists without any existing task.","lastModifiedDate":"2021-11-05"},{"lineNumber":706,"author":{"gitId":"jiexiong-zeng"},"content":"2. Add a new task: `/m cs2040c addtask testcase 1 /by 11/11/2021 0000`.","lastModifiedDate":"2021-11-05"},{"lineNumber":707,"author":{"gitId":"jiexiong-zeng"},"content":"3. Deleting a task without matching keyword:","lastModifiedDate":"2021-11-05"},{"lineNumber":708,"author":{"gitId":"jiexiong-zeng"},"content":"    1. Run the command: `/m cs2040c deletetask apple`.","lastModifiedDate":"2021-11-05"},{"lineNumber":709,"author":{"gitId":"jiexiong-zeng"},"content":"    2. Expected: `Task with the specified keyword not found!`","lastModifiedDate":"2021-11-05"},{"lineNumber":710,"author":{"gitId":"jiexiong-zeng"},"content":"4. Deleting a task with the matching keyword:","lastModifiedDate":"2021-11-05"},{"lineNumber":711,"author":{"gitId":"jiexiong-zeng"},"content":"    1. Run the command: `/m cs2040c deletetask test`.","lastModifiedDate":"2021-11-05"},{"lineNumber":712,"author":{"gitId":"jiexiong-zeng"},"content":"    2. Expected:","lastModifiedDate":"2021-11-05"},{"lineNumber":713,"author":{"gitId":"jiexiong-zeng"},"content":"    ```","lastModifiedDate":"2021-11-05"},{"lineNumber":714,"author":{"gitId":"jiexiong-zeng"},"content":"    The following task(s) are found:","lastModifiedDate":"2021-11-05"},{"lineNumber":715,"author":{"gitId":"jiexiong-zeng"},"content":"    1: testcase 2","lastModifiedDate":"2021-11-05"},{"lineNumber":716,"author":{"gitId":"jiexiong-zeng"},"content":"    Please choose a task to perform the action, or press x to cancel:","lastModifiedDate":"2021-11-05"},{"lineNumber":717,"author":{"gitId":"jiexiong-zeng"},"content":"    ```","lastModifiedDate":"2021-11-05"},{"lineNumber":718,"author":{"gitId":"jiexiong-zeng"},"content":"    3. Enter input: `1`.","lastModifiedDate":"2021-11-05"},{"lineNumber":719,"author":{"gitId":"jiexiong-zeng"},"content":"    4. Expected: `testcase 1 has been deleted`.","lastModifiedDate":"2021-11-05"},{"lineNumber":720,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":721,"author":{"gitId":"jiexiong-zeng"},"content":"## Marking a task as complete","lastModifiedDate":"2021-11-05"},{"lineNumber":722,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":723,"author":{"gitId":"jiexiong-zeng"},"content":"1. Prerequisites: module CS2040C exists without any existing task.","lastModifiedDate":"2021-11-05"},{"lineNumber":724,"author":{"gitId":"jiexiong-zeng"},"content":"2. Add a new task: `/m cs2040c addtask testcase 1 /by 11/11/2021 0000`.","lastModifiedDate":"2021-11-05"},{"lineNumber":725,"author":{"gitId":"jiexiong-zeng"},"content":"3. Run the command: `/m cs2040c done 1`.","lastModifiedDate":"2021-11-05"},{"lineNumber":726,"author":{"gitId":"jiexiong-zeng"},"content":"4. Expected:","lastModifiedDate":"2021-11-05"},{"lineNumber":727,"author":{"gitId":"jiexiong-zeng"},"content":"    ```","lastModifiedDate":"2021-11-05"},{"lineNumber":728,"author":{"gitId":"jiexiong-zeng"},"content":"    Task is completed:","lastModifiedDate":"2021-11-05"},{"lineNumber":729,"author":{"gitId":"jiexiong-zeng"},"content":"    [X] testcase 1 by: 11 Nov 2021 12:00 AM","lastModifiedDate":"2021-11-05"},{"lineNumber":730,"author":{"gitId":"jiexiong-zeng"},"content":"    ```","lastModifiedDate":"2021-11-05"},{"lineNumber":731,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":732,"author":{"gitId":"jiexiong-zeng"},"content":"## Listing all tasks in a module","lastModifiedDate":"2021-11-05"},{"lineNumber":733,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":734,"author":{"gitId":"jiexiong-zeng"},"content":"1. Prerequisites: module CS2040C exists without any existing task.","lastModifiedDate":"2021-11-05"},{"lineNumber":735,"author":{"gitId":"jiexiong-zeng"},"content":"2. Add a new task: `/m cs2040c addtask testcase 1 /by 11/11/2021 0000`.","lastModifiedDate":"2021-11-05"},{"lineNumber":736,"author":{"gitId":"jiexiong-zeng"},"content":"3. Add a new task: `/m cs2040c addtask testcase 2 /by 12/12/2022 1212`.","lastModifiedDate":"2021-11-05"},{"lineNumber":737,"author":{"gitId":"jiexiong-zeng"},"content":"4. Run the command: `/m cs2040c list task`.","lastModifiedDate":"2021-11-05"},{"lineNumber":738,"author":{"gitId":"jiexiong-zeng"},"content":"5. Expected:","lastModifiedDate":"2021-11-05"},{"lineNumber":739,"author":{"gitId":"jiexiong-zeng"},"content":"    ```","lastModifiedDate":"2021-11-05"},{"lineNumber":740,"author":{"gitId":"jiexiong-zeng"},"content":"    Task List for CS2040C:","lastModifiedDate":"2021-11-05"},{"lineNumber":741,"author":{"gitId":"jiexiong-zeng"},"content":"    There are 2 tasks","lastModifiedDate":"2021-11-05"},{"lineNumber":742,"author":{"gitId":"jiexiong-zeng"},"content":"    1.[ ] testcase 1 by: 11 Nov 2021 12:00 AM","lastModifiedDate":"2021-11-05"},{"lineNumber":743,"author":{"gitId":"jiexiong-zeng"},"content":"    2.[ ] testcase 2 by: 12 Dec 2022 12:12 PM","lastModifiedDate":"2021-11-05"},{"lineNumber":744,"author":{"gitId":"jiexiong-zeng"},"content":"    ```","lastModifiedDate":"2021-11-05"},{"lineNumber":745,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":746,"author":{"gitId":"jiexiong-zeng"},"content":"## Adding a grade to a module","lastModifiedDate":"2021-11-05"},{"lineNumber":747,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":748,"author":{"gitId":"DmitriYam"},"content":"1. Prerequisites: module CS2040C exists","lastModifiedDate":"2021-11-05"},{"lineNumber":749,"author":{"gitId":"DmitriYam"},"content":"2. Run the command: `/m cs2040c addgrade A`","lastModifiedDate":"2021-11-05"},{"lineNumber":750,"author":{"gitId":"DmitriYam"},"content":"3. Expected:","lastModifiedDate":"2021-11-05"},{"lineNumber":751,"author":{"gitId":"DmitriYam"},"content":"    ```","lastModifiedDate":"2021-11-05"},{"lineNumber":752,"author":{"gitId":"DmitriYam"},"content":"    Module grade successfully added: ","lastModifiedDate":"2021-11-05"},{"lineNumber":753,"author":{"gitId":"DmitriYam"},"content":"    Module name: CS2040C","lastModifiedDate":"2021-11-05"},{"lineNumber":754,"author":{"gitId":"DmitriYam"},"content":"    CREDITS: 0","lastModifiedDate":"2021-11-05"},{"lineNumber":755,"author":{"gitId":"DmitriYam"},"content":"    --------------------------- ","lastModifiedDate":"2021-11-05"},{"lineNumber":756,"author":{"gitId":"DmitriYam"},"content":"    SCHEDULE: ","lastModifiedDate":"2021-11-05"},{"lineNumber":757,"author":{"gitId":"DmitriYam"},"content":"    --------------------------- ","lastModifiedDate":"2021-11-05"},{"lineNumber":758,"author":{"gitId":"DmitriYam"},"content":"    GRADE: A","lastModifiedDate":"2021-11-05"},{"lineNumber":759,"author":{"gitId":"DmitriYam"},"content":"    TASKS: []","lastModifiedDate":"2021-11-05"},{"lineNumber":760,"author":{"gitId":"DmitriYam"},"content":"    BREAKDOWN: ","lastModifiedDate":"2021-11-05"},{"lineNumber":761,"author":{"gitId":"DmitriYam"},"content":"    ```","lastModifiedDate":"2021-11-05"},{"lineNumber":762,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":763,"author":{"gitId":"jiexiong-zeng"},"content":"## Deleting a grade from a module","lastModifiedDate":"2021-11-05"},{"lineNumber":764,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":765,"author":{"gitId":"jiexiong-zeng"},"content":"1. Prerequisites: module CS2040C exists and has an assigned grade.","lastModifiedDate":"2021-11-05"},{"lineNumber":766,"author":{"gitId":"DmitriYam"},"content":"2. Run the command: `/m cs2040c deletegrade`.","lastModifiedDate":"2021-11-05"},{"lineNumber":767,"author":{"gitId":"jiexiong-zeng"},"content":"3. Expected: `Module grade has been successfully deleted`.","lastModifiedDate":"2021-11-05"},{"lineNumber":768,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":769,"author":{"gitId":"DmitriYam"},"content":"## Adding a credit to module","lastModifiedDate":"2021-11-05"},{"lineNumber":770,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":771,"author":{"gitId":"DmitriYam"},"content":"1. Prerequisites: module CS2040C exists.","lastModifiedDate":"2021-11-05"},{"lineNumber":772,"author":{"gitId":"DmitriYam"},"content":"2. Run the command: `/m cs2040c addcredit 4`","lastModifiedDate":"2021-11-05"},{"lineNumber":773,"author":{"gitId":"DmitriYam"},"content":"3. Expected:","lastModifiedDate":"2021-11-05"},{"lineNumber":774,"author":{"gitId":"DmitriYam"},"content":"    ```","lastModifiedDate":"2021-11-05"},{"lineNumber":775,"author":{"gitId":"DmitriYam"},"content":"    Module credits successfully added: ","lastModifiedDate":"2021-11-05"},{"lineNumber":776,"author":{"gitId":"DmitriYam"},"content":"    Module name: CS2040C","lastModifiedDate":"2021-11-05"},{"lineNumber":777,"author":{"gitId":"DmitriYam"},"content":"    CREDITS: 4","lastModifiedDate":"2021-11-05"},{"lineNumber":778,"author":{"gitId":"DmitriYam"},"content":"    --------------------------- ","lastModifiedDate":"2021-11-05"},{"lineNumber":779,"author":{"gitId":"DmitriYam"},"content":"    SCHEDULE: ","lastModifiedDate":"2021-11-05"},{"lineNumber":780,"author":{"gitId":"DmitriYam"},"content":"    --------------------------- ","lastModifiedDate":"2021-11-05"},{"lineNumber":781,"author":{"gitId":"DmitriYam"},"content":"    GRADE: A","lastModifiedDate":"2021-11-05"},{"lineNumber":782,"author":{"gitId":"DmitriYam"},"content":"    TASKS: []","lastModifiedDate":"2021-11-05"},{"lineNumber":783,"author":{"gitId":"DmitriYam"},"content":"    BREAKDOWN: ","lastModifiedDate":"2021-11-05"},{"lineNumber":784,"author":{"gitId":"DmitriYam"},"content":"    ```","lastModifiedDate":"2021-11-05"},{"lineNumber":785,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":786,"author":{"gitId":"DmitriYam"},"content":"## Adding a class to module","lastModifiedDate":"2021-11-05"},{"lineNumber":787,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":788,"author":{"gitId":"DmitriYam"},"content":"1. Prerequisite: module CS2040C exists","lastModifiedDate":"2021-11-05"},{"lineNumber":789,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":790,"author":{"gitId":"DmitriYam"},"content":"   Note:","lastModifiedDate":"2021-11-05"},{"lineNumber":791,"author":{"gitId":"DmitriYam"},"content":"    1. `\u003cday\u003e` can only take in the first 3 letters of the day, from monday to saturday.","lastModifiedDate":"2021-11-05"},{"lineNumber":792,"author":{"gitId":"DmitriYam"},"content":"    2. `\u003cperiod` can only be in blocks of 1 hour in 24-hour format (e.g. 1100 or 1300).","lastModifiedDate":"2021-11-05"},{"lineNumber":793,"author":{"gitId":"DmitriYam"},"content":"    3. `\u003clocation\u003e` and `\u003ccomment\u003e` cannot be empty and can take a maximum of 16 characters.","lastModifiedDate":"2021-11-05"},{"lineNumber":794,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":795,"author":{"gitId":"DmitriYam"},"content":"2. Adding a class with valid syntax.","lastModifiedDate":"2021-11-05"},{"lineNumber":796,"author":{"gitId":"DmitriYam"},"content":"    1. Run the command: `/m CS2040C addclass MON/1000/ZOOM/LECT`","lastModifiedDate":"2021-11-05"},{"lineNumber":797,"author":{"gitId":"DmitriYam"},"content":"    2. Expected:","lastModifiedDate":"2021-11-05"},{"lineNumber":798,"author":{"gitId":"DmitriYam"},"content":"    ```","lastModifiedDate":"2021-11-05"},{"lineNumber":799,"author":{"gitId":"DmitriYam"},"content":"    Module Class successfully added: ","lastModifiedDate":"2021-11-05"},{"lineNumber":800,"author":{"gitId":"DmitriYam"},"content":"    1.","lastModifiedDate":"2021-11-05"},{"lineNumber":801,"author":{"gitId":"DmitriYam"},"content":"    Day: MON","lastModifiedDate":"2021-11-05"},{"lineNumber":802,"author":{"gitId":"DmitriYam"},"content":"    Start Time: 1000","lastModifiedDate":"2021-11-05"},{"lineNumber":803,"author":{"gitId":"DmitriYam"},"content":"    Location: ZOOM","lastModifiedDate":"2021-11-05"},{"lineNumber":804,"author":{"gitId":"DmitriYam"},"content":"    Comments: LECT","lastModifiedDate":"2021-11-05"},{"lineNumber":805,"author":{"gitId":"DmitriYam"},"content":"    ```","lastModifiedDate":"2021-11-05"},{"lineNumber":806,"author":{"gitId":"DmitriYam"},"content":"5. Adding a class with invalid syntax","lastModifiedDate":"2021-11-05"},{"lineNumber":807,"author":{"gitId":"DmitriYam"},"content":"    1. Run the command: `/m CS2040C addclass MON/1000/ZOOM/TUT`","lastModifiedDate":"2021-11-05"},{"lineNumber":808,"author":{"gitId":"DmitriYam"},"content":"    2. Expected: `A class already exists in this timeslot!`","lastModifiedDate":"2021-11-05"},{"lineNumber":809,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":810,"author":{"gitId":"yapjoonsiong"},"content":"## Delete class from a module","lastModifiedDate":"2021-11-05"},{"lineNumber":811,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":812,"author":{"gitId":"yapjoonsiong"},"content":"1. Select an existing class index with reference to the command `/m \u003cmodule\u003e info`.","lastModifiedDate":"2021-11-05"},{"lineNumber":813,"author":{"gitId":"yapjoonsiong"},"content":"2. Run the command `/m \u003cmodule\u003e deleteclass \u003cindex\u003e`.","lastModifiedDate":"2021-11-05"},{"lineNumber":814,"author":{"gitId":"yapjoonsiong"},"content":"3. Expected: Corresponding class is deleted from module schedule.","lastModifiedDate":"2021-11-05"},{"lineNumber":815,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":816,"author":{"gitId":"yapjoonsiong"},"content":"## Show timetable","lastModifiedDate":"2021-11-05"},{"lineNumber":817,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":818,"author":{"gitId":"yapjoonsiong"},"content":"1. Run the command `timetable`","lastModifiedDate":"2021-11-05"},{"lineNumber":819,"author":{"gitId":"yapjoonsiong"},"content":"2. Expected: Prints out a timetable of all classes from 0800 to 1700 periods","lastModifiedDate":"2021-11-05"},{"lineNumber":820,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":821,"author":{"gitId":"yapjoonsiong"},"content":"## Show semester cap","lastModifiedDate":"2021-11-05"},{"lineNumber":822,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":823,"author":{"gitId":"yapjoonsiong"},"content":"1. Run the command `cap`","lastModifiedDate":"2021-11-05"},{"lineNumber":824,"author":{"gitId":"yapjoonsiong"},"content":"2. If no credit is added for any module in the semester, the following message is printed:","lastModifiedDate":"2021-11-05"},{"lineNumber":825,"author":{"gitId":"yapjoonsiong"},"content":"    ```","lastModifiedDate":"2021-11-05"},{"lineNumber":826,"author":{"gitId":"yapjoonsiong"},"content":"    Unable to calculate cap as no credit assigned to any existing module","lastModifiedDate":"2021-11-05"},{"lineNumber":827,"author":{"gitId":"yapjoonsiong"},"content":"    ```","lastModifiedDate":"2021-11-05"},{"lineNumber":828,"author":{"gitId":"yapjoonsiong"},"content":"3. Else, the cap is calculated accordingly and printed.","lastModifiedDate":"2021-11-05"},{"lineNumber":829,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":830,"author":{"gitId":"yapjoonsiong"},"content":"## Show all cap","lastModifiedDate":"2021-11-05"},{"lineNumber":831,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":832,"author":{"gitId":"yapjoonsiong"},"content":"1. Run the command `allcap`","lastModifiedDate":"2021-11-05"},{"lineNumber":833,"author":{"gitId":"yapjoonsiong"},"content":"2. Expected: prints out the aggregate cumulative CAP and respective CAP of each semester","lastModifiedDate":"2021-11-05"},{"lineNumber":834,"author":{"gitId":"yapjoonsiong"},"content":"3. Semesters with no credit assigned for any module will default to 0.00 CAP","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"yapjoonsiong":84,"naijie2108":138,"DmitriYam":216,"yzhedwin":160,"jiexiong-zeng":213,"-":23}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"# NoCap","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"## Introduction","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"NoCap (NC) is a **desktop app for managing modules taken in NUS, optimized for use via a Command Line Interface** (CLI).","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"If you can type fast, NC can get your module management tasks done faster than traditional GUI apps. It is the perfect","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"app for NUS students!","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"## Useful links","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"* [DeveloperGuide](DeveloperGuide.md)","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"## Downloads","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"naijie2108"},"content":"Download the latest version of **NoCap** [here](https://github.com/AY2122S1-CS2113T-F11-1/tp/releases)","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"## Acknowledgements","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"naijie2108"},"content":"Third party libraries used:","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"naijie2108"},"content":"- [Jackson Databind](https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind)","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"naijie2108"},"content":"- [Jackson Datatype-jsr310](https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310)","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"naijie2108"},"content":"- [Jackson Annotations](https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations)","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"naijie2108":15,"jiexiong-zeng":6,"-":4}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"yapjoonsiong"},"content":"NoCap (NC) is a **desktop app for managing modules taken in NUS, optimized for use via a Command Line Interface** (CLI).","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"If you can type fast, NC can get your module management tasks done faster than traditional GUI apps. It is the perfect","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":"app for NUS students!","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"2. Download the latest version of `NoCap` from [here](https://github.com/AY2122S1-CS2113T-F11-1/tp/releases).","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"jiexiong-zeng"},"content":"3. Move the downloaded NoCap.jar to an empty directory.","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"jiexiong-zeng"},"content":"4. Navigate to this directory on the Command Prompt.","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"jiexiong-zeng"},"content":"5. Run NoCap.jar using the command `java -jar NoCap.jar`.","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"yapjoonsiong"},"content":"### **Command format:**","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"DmitriYam"},"content":"* Words in `\u003c\u003e` are the parameters to be supplied by the user. \\","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"DmitriYam"},"content":"  e.g. `add \u003cmodule name\u003e` `\u003cmodule name\u003e` is the name of the module supplied by the user.","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"yapjoonsiong"},"content":"* Items in curved brackets describe the input format. \\","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"yzhedwin"},"content":"  e.g.`/m \u003cmodule name\u003e addtask \u003cdescription\u003e /by \u003cdeadline\u003e (dd/MM/yyyy hhmm)` \"dd/MM/yyyy hhmm\" refers to the","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"yzhedwin"},"content":"  date-month-year and 24 hour time of the description.","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"yapjoonsiong"},"content":"* Parameters must be in the exact order as seen in the user guide. \\","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"yzhedwin"},"content":"  e.g. if the command specifies `/m CG1111 addclass MON/0800/E1-03/tutorial`","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"yzhedwin"},"content":"  , `/m CG1111 addclass 0800/E1-03/tutorial/MON/`","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"DmitriYam"},"content":"  is not acceptable.","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"yzhedwin"},"content":"* Commands that require parameters must be supplied, if not an error will be thrown. e.g. if the command","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"yzhedwin"},"content":"  specifies `/m CG1111 addclass MON/0800/E1-03/tutorial` , `/m CG1111 addclass MON/0800/E1-03/` is not acceptable.","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"yzhedwin"},"content":"* All specifier commands are case-sensitive. e.g. `HELP`, `/M CG1111 ADDCLASS MON/0800/E1-03/tutorial` and `ADD CS2113T`","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"yzhedwin"},"content":"  are invalid commands.","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"jiexiong-zeng"},"content":"### Viewing help : `help`","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"jiexiong-zeng"},"content":"Shows a message explaining how to use NoCap.","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"yapjoonsiong"},"content":"### Listing semesters : `list semesters`","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"jiexiong-zeng"},"content":"Lists all preloaded semesters and their corresponding indexes.","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"yapjoonsiong"},"content":"Example output:","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"yapjoonsiong"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"yapjoonsiong"},"content":"    1 : Y1S1","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"yapjoonsiong"},"content":"    2 : Y1S2","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"yapjoonsiong"},"content":"    3 : Y2S1","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"yapjoonsiong"},"content":"    4 : Y2S2","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"yapjoonsiong"},"content":"    5 : Y3S1","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"yapjoonsiong"},"content":"    6 : Y3S2","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"yapjoonsiong"},"content":"    7 : Y4S1","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"yapjoonsiong"},"content":"    8 : Y4S2","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"yapjoonsiong"},"content":"    9 : Y5S1","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"yapjoonsiong"},"content":"    10 : Y5S2","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"yapjoonsiong"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"yapjoonsiong"},"content":"### Switching semesters : `switch \u003csemester index\u003e`","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"yapjoonsiong"},"content":"Switches the currently accessed semester to the corresponding input index. (refer to `list semesters` for the index).","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"yapjoonsiong"},"content":"The currently accessed semester on start up is your last accessed semester from any previous use.","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"yapjoonsiong"},"content":"Examples:","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"yapjoonsiong"},"content":"* `Switch 1`","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"yapjoonsiong"},"content":"* `Switch 2`","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"yapjoonsiong"},"content":"### Adding module: `add \u003cmodule\u003e`","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"DmitriYam"},"content":"Adds a module","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"DmitriYam"},"content":"Examples:","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"DmitriYam"},"content":"* `add CS2113T`","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"DmitriYam"},"content":"* `add MA1508`","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"yapjoonsiong"},"content":"Note:","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"yapjoonsiong"},"content":"* Module code can only contain up to 16 characters","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"DmitriYam"},"content":"### Delete module: `delete \u003cmodule index\u003e `","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"DmitriYam"},"content":"Deletes a module corresponding to the input index. (refer to `list module` for indexes )","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"DmitriYam"},"content":"Examples:","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"DmitriYam"},"content":"* `delete 1`","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"DmitriYam"},"content":"* `delete 2`","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"DmitriYam"},"content":"Example output:","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"DmitriYam"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"DmitriYam"},"content":"CS2113T has been successfully deleted","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"DmitriYam"},"content":"Remaining Modules are: ","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"DmitriYam"},"content":"1","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"DmitriYam"},"content":"Module name: CS2040C","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"DmitriYam"},"content":"CREDITS: 4","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"DmitriYam"},"content":"--------------------------- ","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"DmitriYam"},"content":"SCHEDULE: ","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"DmitriYam"},"content":"--------------------------- ","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"DmitriYam"},"content":"GRADE: A","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"DmitriYam"},"content":"TASKS: []","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"DmitriYam"},"content":"BREAKDOWN: ","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"DmitriYam"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":105,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":106,"author":{"gitId":"jiexiong-zeng"},"content":"### List module : `list module`","lastModifiedDate":"2021-10-28"},{"lineNumber":107,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"jiexiong-zeng"},"content":"Lists all added modules and their corresponding indexes.","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"jiexiong-zeng"},"content":"### Add task to module : `/m \u003cmodule\u003e addtask \u003cdescription\u003e /by \u003cdate\u003e \u003ctime\u003e`","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":112,"author":{"gitId":"yzhedwin"},"content":"* The `date` is in the format of dd/MM/yyyy.","lastModifiedDate":"2021-10-31"},{"lineNumber":113,"author":{"gitId":"jiexiong-zeng"},"content":"* The `time` is in the format of hhmm.","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"jiexiong-zeng"},"content":"* The `description` can contain white spaces.","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"jiexiong-zeng"},"content":"Note:","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"jiexiong-zeng"},"content":"* If time is omitted, time will default to 0000 hrs.","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"jiexiong-zeng"},"content":"* If duplicate task exist and has a different deadline, the existing task\u0027s deadline will be updated with the new","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"jiexiong-zeng"},"content":"  deadline.","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"jiexiong-zeng"},"content":"* If duplicate task has same deadline, new task will be rejected by the program.","lastModifiedDate":"2021-10-28"},{"lineNumber":122,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"jiexiong-zeng"},"content":"Example of usage:","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"jiexiong-zeng"},"content":"* `/m cs1010 addtask Remember to S/U /by 20/11/2020 0000`","lastModifiedDate":"2021-10-28"},{"lineNumber":126,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":127,"author":{"gitId":"jiexiong-zeng"},"content":"Example of expected output:","lastModifiedDate":"2021-10-28"},{"lineNumber":128,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":129,"author":{"gitId":"jiexiong-zeng"},"content":"![alt_text](media/AddTaskOutput.jpg)","lastModifiedDate":"2021-10-28"},{"lineNumber":130,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":131,"author":{"gitId":"yzhedwin"},"content":"Warning :","lastModifiedDate":"2021-10-31"},{"lineNumber":132,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":133,"author":{"gitId":"yzhedwin"},"content":"* For every month, the program will take in 01 - 31 as an input for the day of the month.","lastModifiedDate":"2021-10-31"},{"lineNumber":134,"author":{"gitId":"yzhedwin"},"content":"* In the case when the month does not have 31 days, the program will treat any input after the last day of the month","lastModifiedDate":"2021-10-31"},{"lineNumber":135,"author":{"gitId":"yzhedwin"},"content":"  until 31 as the last day.","lastModifiedDate":"2021-10-31"},{"lineNumber":136,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":137,"author":{"gitId":"yzhedwin"},"content":"Example:","lastModifiedDate":"2021-10-31"},{"lineNumber":138,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":139,"author":{"gitId":"yzhedwin"},"content":"* Date input as `31/02/2021` will be parsed as `28/02/2021` because there are only 28 days in the month of February.","lastModifiedDate":"2021-10-31"},{"lineNumber":140,"author":{"gitId":"yzhedwin"},"content":"* Date input as `31/04/2021` will be parsed as `30/04/2021` because there are only 30 days in the month of April","lastModifiedDate":"2021-10-31"},{"lineNumber":141,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":142,"author":{"gitId":"DmitriYam"},"content":"### Add gradable task to module : `/m \u003cmodule\u003e addgradable \u003cday/period/location/comments\u003e /w \u003cweightage\u003e`","lastModifiedDate":"2021-11-01"},{"lineNumber":143,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":144,"author":{"gitId":"jiexiong-zeng"},"content":"Adds a Gradable Task to the module.","lastModifiedDate":"2021-10-28"},{"lineNumber":145,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":146,"author":{"gitId":"jiexiong-zeng"},"content":"* Refer to Add Task for deadline format.","lastModifiedDate":"2021-10-28"},{"lineNumber":147,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":148,"author":{"gitId":"jiexiong-zeng"},"content":"Note:","lastModifiedDate":"2021-10-28"},{"lineNumber":149,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":150,"author":{"gitId":"DmitriYam"},"content":"* The weightage needs to be an Integer between 5 - 100.","lastModifiedDate":"2021-10-31"},{"lineNumber":151,"author":{"gitId":"yzhedwin"},"content":"* The total value of all gradable tasks within the module needs to be less than or equals to 100, else a error message","lastModifiedDate":"2021-11-06"},{"lineNumber":152,"author":{"gitId":"yzhedwin"},"content":"  will be shown.","lastModifiedDate":"2021-11-06"},{"lineNumber":153,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":154,"author":{"gitId":"jiexiong-zeng"},"content":"Examples:","lastModifiedDate":"2021-10-28"},{"lineNumber":155,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":156,"author":{"gitId":"yzhedwin"},"content":"* `/m CS2113 addgradable Finals /by 10/10/2010 1000 /w 30`","lastModifiedDate":"2021-10-31"},{"lineNumber":157,"author":{"gitId":"yzhedwin"},"content":"* `/m CS2113 addgradable assignments /by 10/10/2010 1000 /w 40`","lastModifiedDate":"2021-10-31"},{"lineNumber":158,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":159,"author":{"gitId":"jiexiong-zeng"},"content":"Expected output:","lastModifiedDate":"2021-10-28"},{"lineNumber":160,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":161,"author":{"gitId":"yzhedwin"},"content":"![](media/GradableTaskOutput.jpg)","lastModifiedDate":"2021-10-31"},{"lineNumber":162,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":163,"author":{"gitId":"yzhedwin"},"content":"Note:","lastModifiedDate":"2021-10-31"},{"lineNumber":164,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":165,"author":{"gitId":"yzhedwin"},"content":"* The suffix of the Gradable Task `[]` shows if the task is completed.","lastModifiedDate":"2021-10-31"},{"lineNumber":166,"author":{"gitId":"yzhedwin"},"content":"* If it is completed, the suffix will show `[X]`.","lastModifiedDate":"2021-10-31"},{"lineNumber":167,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":168,"author":{"gitId":"jiexiong-zeng"},"content":"### Edit description of task : `/m \u003cmodule\u003e editdesc \u003ctask index\u003e \u003cnew description\u003e`","lastModifiedDate":"2021-10-28"},{"lineNumber":169,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":170,"author":{"gitId":"jiexiong-zeng"},"content":"Edit the description of a task at the specified index in the given module.","lastModifiedDate":"2021-11-05"},{"lineNumber":171,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":172,"author":{"gitId":"yzhedwin"},"content":"Note:","lastModifiedDate":"2021-11-05"},{"lineNumber":173,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":174,"author":{"gitId":"yzhedwin"},"content":"* An error message will be shown if the user input a duplicate description of an existing task.","lastModifiedDate":"2021-11-05"},{"lineNumber":175,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":176,"author":{"gitId":"jiexiong-zeng"},"content":"### Edit deadline of task : `/m \u003cmodule\u003e editdate \u003ctask index\u003e \u003cnew date\u003e`","lastModifiedDate":"2021-10-28"},{"lineNumber":177,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":178,"author":{"gitId":"jiexiong-zeng"},"content":"Edit the deadline of a task at the specified index in the given module.","lastModifiedDate":"2021-11-05"},{"lineNumber":179,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":180,"author":{"gitId":"jiexiong-zeng"},"content":"### Delete task from module : `/m \u003cmodule\u003e deletetask \u003csubstring\u003e`","lastModifiedDate":"2021-10-28"},{"lineNumber":181,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":182,"author":{"gitId":"jiexiong-zeng"},"content":"Finds and list down tasks with the substring. Type corresponding index to delete the task.","lastModifiedDate":"2021-10-28"},{"lineNumber":183,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":184,"author":{"gitId":"jiexiong-zeng"},"content":"### Marks module task as done : `/m \u003cmodule\u003e done \u003ctask index\u003e`","lastModifiedDate":"2021-10-28"},{"lineNumber":185,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":186,"author":{"gitId":"jiexiong-zeng"},"content":"Mark task as done.","lastModifiedDate":"2021-10-28"},{"lineNumber":187,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":188,"author":{"gitId":"jiexiong-zeng"},"content":"Other similar commands include:  ","lastModifiedDate":"2021-10-28"},{"lineNumber":189,"author":{"gitId":"jiexiong-zeng"},"content":"Mark task as not done: `/m \u003cmodule\u003e notdone \u003ctask index\u003e`  ","lastModifiedDate":"2021-10-28"},{"lineNumber":190,"author":{"gitId":"jiexiong-zeng"},"content":"Mark gradable task as done:`/m \u003cmodule\u003e gradabledone \u003ctask index\u003e`  ","lastModifiedDate":"2021-10-28"},{"lineNumber":191,"author":{"gitId":"jiexiong-zeng"},"content":"Mark gradable task as not done:`/m \u003cmodule\u003e gradablenotdone \u003ctask index\u003e`","lastModifiedDate":"2021-10-28"},{"lineNumber":192,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":193,"author":{"gitId":"yzhedwin"},"content":"### Listing module tasks : `/m \u003cmodule\u003e list`","lastModifiedDate":"2021-11-03"},{"lineNumber":194,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":195,"author":{"gitId":"jiexiong-zeng"},"content":"Shows a list of task of specified module.","lastModifiedDate":"2021-10-28"},{"lineNumber":196,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":197,"author":{"gitId":"yzhedwin"},"content":"Additional Format: `/m \u003cmodule\u003e list \u003coptional argument\u003e`","lastModifiedDate":"2021-11-03"},{"lineNumber":198,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":199,"author":{"gitId":"jiexiong-zeng"},"content":"By default, all tasks in the module specified in the current semester are listed, but this can be customised by adding","lastModifiedDate":"2021-10-28"},{"lineNumber":200,"author":{"gitId":"jiexiong-zeng"},"content":"optional arguments.","lastModifiedDate":"2021-10-28"},{"lineNumber":201,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":202,"author":{"gitId":"jiexiong-zeng"},"content":"\u0026lt;optional argument\u003e includes:","lastModifiedDate":"2021-10-28"},{"lineNumber":203,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":204,"author":{"gitId":"yzhedwin"},"content":"* gradable - Shows a list of gradable tasks in the module.","lastModifiedDate":"2021-11-06"},{"lineNumber":205,"author":{"gitId":"jiexiong-zeng"},"content":"* sortbydate - Sort tasks by due date, the closest deadline have the higher priority in the list. does not print the","lastModifiedDate":"2021-10-28"},{"lineNumber":206,"author":{"gitId":"jiexiong-zeng"},"content":"  task list.","lastModifiedDate":"2021-10-28"},{"lineNumber":207,"author":{"gitId":"jiexiong-zeng"},"content":"* sortbystatus - Sort tasks by status, finished tasks of lower priority. Does not print task list.","lastModifiedDate":"2021-10-28"},{"lineNumber":208,"author":{"gitId":"jiexiong-zeng"},"content":"* w - list tasks due within the next week.","lastModifiedDate":"2021-10-28"},{"lineNumber":209,"author":{"gitId":"jiexiong-zeng"},"content":"* m - list tasks due within the next month.","lastModifiedDate":"2021-10-28"},{"lineNumber":210,"author":{"gitId":"jiexiong-zeng"},"content":"* y - list tasks due within the next year.","lastModifiedDate":"2021-10-28"},{"lineNumber":211,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":212,"author":{"gitId":"yzhedwin"},"content":"Task Prefixes:","lastModifiedDate":"2021-10-31"},{"lineNumber":213,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":214,"author":{"gitId":"yzhedwin"},"content":"* There are 2 prefixes in each Task defined as `[ ]`","lastModifiedDate":"2021-11-05"},{"lineNumber":215,"author":{"gitId":"yzhedwin"},"content":"* The first prefix is a `LATE` tag. If the task is overdue, the tag will show `[LATE]`","lastModifiedDate":"2021-10-31"},{"lineNumber":216,"author":{"gitId":"yzhedwin"},"content":"* The second prefix is a `DONE` tag. If the task is marked completed, the tag will show `[X]`","lastModifiedDate":"2021-10-31"},{"lineNumber":217,"author":{"gitId":"yzhedwin"},"content":"* Format will be as follows `[LATE][DONE] \u003ctask description\u003e \u003cdate\u003e \u003ctime\u003e`","lastModifiedDate":"2021-11-03"},{"lineNumber":218,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":219,"author":{"gitId":"jiexiong-zeng"},"content":"Examples with expected output:","lastModifiedDate":"2021-10-28"},{"lineNumber":220,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":221,"author":{"gitId":"jiexiong-zeng"},"content":"Assuming tasks have been added to modules beforehand:","lastModifiedDate":"2021-10-28"},{"lineNumber":222,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":223,"author":{"gitId":"yzhedwin"},"content":"* `/m cs1010 list`","lastModifiedDate":"2021-11-03"},{"lineNumber":224,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":225,"author":{"gitId":"jiexiong-zeng"},"content":"    ```","lastModifiedDate":"2021-10-28"},{"lineNumber":226,"author":{"gitId":"jiexiong-zeng"},"content":"    Task List for CS1010: ","lastModifiedDate":"2021-10-28"},{"lineNumber":227,"author":{"gitId":"jiexiong-zeng"},"content":"  1.[LATE][X] Remember to S/U by: 20 Nov 2020 12:00 AM","lastModifiedDate":"2021-10-28"},{"lineNumber":228,"author":{"gitId":"jiexiong-zeng"},"content":"  2.[LATE][ ] Remember to drop out by: 12 Dec 2020 11:59 PM","lastModifiedDate":"2021-10-28"},{"lineNumber":229,"author":{"gitId":"jiexiong-zeng"},"content":"  3.[ ] retake cs1010 by: 12 Dec 2021 11:59 PM","lastModifiedDate":"2021-10-28"},{"lineNumber":230,"author":{"gitId":"jiexiong-zeng"},"content":"  4.[ ] do assignment by: 30 Oct 2021 04:00 PM","lastModifiedDate":"2021-10-28"},{"lineNumber":231,"author":{"gitId":"jiexiong-zeng"},"content":"  ```","lastModifiedDate":"2021-10-28"},{"lineNumber":232,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":233,"author":{"gitId":"yzhedwin"},"content":"* `/m cs1010 list gradable`","lastModifiedDate":"2021-11-06"},{"lineNumber":234,"author":{"gitId":"yzhedwin"},"content":"  ```","lastModifiedDate":"2021-11-06"},{"lineNumber":235,"author":{"gitId":"yzhedwin"},"content":"  BREAKDOWN:","lastModifiedDate":"2021-11-06"},{"lineNumber":236,"author":{"gitId":"yzhedwin"},"content":"    \u003c\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d40%\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":237,"author":{"gitId":"yzhedwin"},"content":"    ########################################","lastModifiedDate":"2021-11-06"},{"lineNumber":238,"author":{"gitId":"yzhedwin"},"content":"    |------------------1-------------------|","lastModifiedDate":"2021-11-06"},{"lineNumber":239,"author":{"gitId":"yzhedwin"},"content":"    1: assignments","lastModifiedDate":"2021-11-06"},{"lineNumber":240,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":241,"author":{"gitId":"yzhedwin"},"content":"    1 assignments by: 10 Oct 2010 10:00 AM Weightage 40% [ ]","lastModifiedDate":"2021-11-06"},{"lineNumber":242,"author":{"gitId":"yzhedwin"},"content":"  ```","lastModifiedDate":"2021-11-06"},{"lineNumber":243,"author":{"gitId":"yzhedwin"},"content":"* `/m cs1010 list sortbydate`","lastModifiedDate":"2021-11-03"},{"lineNumber":244,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":245,"author":{"gitId":"jiexiong-zeng"},"content":"  ```","lastModifiedDate":"2021-10-28"},{"lineNumber":246,"author":{"gitId":"jiexiong-zeng"},"content":"  CS1010 successfully sorted by date","lastModifiedDate":"2021-10-28"},{"lineNumber":247,"author":{"gitId":"jiexiong-zeng"},"content":"  ```","lastModifiedDate":"2021-10-28"},{"lineNumber":248,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":249,"author":{"gitId":"jiexiong-zeng"},"content":"  ```","lastModifiedDate":"2021-10-28"},{"lineNumber":250,"author":{"gitId":"yzhedwin"},"content":"  /m cs1010 list","lastModifiedDate":"2021-11-03"},{"lineNumber":251,"author":{"gitId":"jiexiong-zeng"},"content":"  ```","lastModifiedDate":"2021-10-28"},{"lineNumber":252,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":253,"author":{"gitId":"jiexiong-zeng"},"content":"  ```","lastModifiedDate":"2021-10-28"},{"lineNumber":254,"author":{"gitId":"jiexiong-zeng"},"content":"  Task List for CS1010: ","lastModifiedDate":"2021-10-28"},{"lineNumber":255,"author":{"gitId":"jiexiong-zeng"},"content":"  1.[LATE][X] Remember to S/U by: 20 Nov 2020 12:00 AM","lastModifiedDate":"2021-10-28"},{"lineNumber":256,"author":{"gitId":"jiexiong-zeng"},"content":"  2.[LATE][ ] Remember to drop out by: 12 Dec 2020 11:59 PM","lastModifiedDate":"2021-10-28"},{"lineNumber":257,"author":{"gitId":"jiexiong-zeng"},"content":"  3.[ ] do assignment by: 30 Oct 2021 04:00 PM ","lastModifiedDate":"2021-10-28"},{"lineNumber":258,"author":{"gitId":"jiexiong-zeng"},"content":"  4.[ ] retake cs1010 by: 12 Dec 2021 11:59 PM","lastModifiedDate":"2021-10-28"},{"lineNumber":259,"author":{"gitId":"jiexiong-zeng"},"content":"  ","lastModifiedDate":"2021-10-28"},{"lineNumber":260,"author":{"gitId":"jiexiong-zeng"},"content":"  ```","lastModifiedDate":"2021-10-28"},{"lineNumber":261,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":262,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":263,"author":{"gitId":"yzhedwin"},"content":"* `/m cs1010 list w`","lastModifiedDate":"2021-11-03"},{"lineNumber":264,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":265,"author":{"gitId":"jiexiong-zeng"},"content":"  ```","lastModifiedDate":"2021-10-28"},{"lineNumber":266,"author":{"gitId":"jiexiong-zeng"},"content":"  Task List for CS1010: ","lastModifiedDate":"2021-10-28"},{"lineNumber":267,"author":{"gitId":"jiexiong-zeng"},"content":"  There are 3 tasks due within 7 days ","lastModifiedDate":"2021-10-28"},{"lineNumber":268,"author":{"gitId":"jiexiong-zeng"},"content":"  1.[LATE][X] Remember to S/U by: 20 Nov 2020 12:00 AM","lastModifiedDate":"2021-10-28"},{"lineNumber":269,"author":{"gitId":"jiexiong-zeng"},"content":"  2.[LATE][ ] Remember to drop out by: 12 Dec 2020 11:59 PM","lastModifiedDate":"2021-10-28"},{"lineNumber":270,"author":{"gitId":"jiexiong-zeng"},"content":"  3.[ ] do assignment by: 30 Oct 2021 04:00 PM ","lastModifiedDate":"2021-10-28"},{"lineNumber":271,"author":{"gitId":"jiexiong-zeng"},"content":"  ```","lastModifiedDate":"2021-10-28"},{"lineNumber":272,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":273,"author":{"gitId":"jiexiong-zeng"},"content":"NOTE:","lastModifiedDate":"2021-10-28"},{"lineNumber":274,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":275,"author":{"gitId":"yzhedwin"},"content":"* For optional arguments `w`, `m` and `y`, overdue tasks are listed together with the weekly/monthly/yearly tasks","lastModifiedDate":"2021-11-06"},{"lineNumber":276,"author":{"gitId":"yzhedwin"},"content":"  regardless of due date as a reminder that the user has forgotten to do the task.","lastModifiedDate":"2021-11-06"},{"lineNumber":277,"author":{"gitId":"yzhedwin"},"content":"* `/m \u003cmodule\u003e list` does not show gradable tasks.","lastModifiedDate":"2021-11-06"},{"lineNumber":278,"author":{"gitId":"yzhedwin"},"content":"* To show gradable task in module, have to input optional argument as shown above.","lastModifiedDate":"2021-11-06"},{"lineNumber":279,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":280,"author":{"gitId":"DmitriYam"},"content":"### Listing module gradable tasks : `/m \u003cmodule\u003e list gradable`","lastModifiedDate":"2021-11-01"},{"lineNumber":281,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":282,"author":{"gitId":"DmitriYam"},"content":"Shows the breakdown of the module, with all the gradable tasks.","lastModifiedDate":"2021-11-01"},{"lineNumber":283,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":284,"author":{"gitId":"DmitriYam"},"content":"Example with output:","lastModifiedDate":"2021-11-01"},{"lineNumber":285,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":286,"author":{"gitId":"DmitriYam"},"content":"`/m cs1010 list gradable`","lastModifiedDate":"2021-11-01"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":288,"author":{"gitId":"DmitriYam"},"content":"```","lastModifiedDate":"2021-11-01"},{"lineNumber":289,"author":{"gitId":"DmitriYam"},"content":"  BREAKDOWN:","lastModifiedDate":"2021-11-01"},{"lineNumber":290,"author":{"gitId":"DmitriYam"},"content":"\u003c\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d50%\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003e\u003c\u003d\u003d\u003d\u003d\u003d\u003d\u003d20%\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003e\u003c\u003d\u003d\u003d\u003d\u003d15%\u003d\u003d\u003d\u003d\u003d\u003e\u003c\u003d\u003d\u003d\u003d\u003d15%\u003d\u003d\u003d\u003d\u003d\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":291,"author":{"gitId":"DmitriYam"},"content":"##################################################@@@@@@@@@@@@@@@@@@@@\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026+++++++++++++++","lastModifiedDate":"2021-11-01"},{"lineNumber":292,"author":{"gitId":"DmitriYam"},"content":"|-----------------------1------------------------||--------2---------||------3------||------4------|","lastModifiedDate":"2021-11-01"},{"lineNumber":293,"author":{"gitId":"DmitriYam"},"content":"1: Finals","lastModifiedDate":"2021-11-01"},{"lineNumber":294,"author":{"gitId":"DmitriYam"},"content":"2: Midterms","lastModifiedDate":"2021-11-01"},{"lineNumber":295,"author":{"gitId":"DmitriYam"},"content":"3: Assignment 1","lastModifiedDate":"2021-11-01"},{"lineNumber":296,"author":{"gitId":"DmitriYam"},"content":"4: Assignment 2","lastModifiedDate":"2021-11-01"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":298,"author":{"gitId":"DmitriYam"},"content":"1 Finals by: 11 Nov 2021 04:00 PM Weightage 50% [ ]","lastModifiedDate":"2021-11-01"},{"lineNumber":299,"author":{"gitId":"DmitriYam"},"content":"2 Midterms by: 11 Oct 2021 10:00 AM Weightage 20% [ ]","lastModifiedDate":"2021-11-01"},{"lineNumber":300,"author":{"gitId":"DmitriYam"},"content":"3 Assignment 1 by: 21 Oct 2021 10:00 AM Weightage 15% [ ]","lastModifiedDate":"2021-11-01"},{"lineNumber":301,"author":{"gitId":"DmitriYam"},"content":"4 Assignment 2 by: 25 Oct 2021 11:59 PM Weightage 15% [ ]","lastModifiedDate":"2021-11-01"},{"lineNumber":302,"author":{"gitId":"DmitriYam"},"content":"  ","lastModifiedDate":"2021-11-01"},{"lineNumber":303,"author":{"gitId":"DmitriYam"},"content":"  ```","lastModifiedDate":"2021-11-01"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":305,"author":{"gitId":"DmitriYam"},"content":"Note:","lastModifiedDate":"2021-11-01"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":307,"author":{"gitId":"DmitriYam"},"content":"* The suffix of the Gradable Task `[ ]` shows if the task is completed.","lastModifiedDate":"2021-11-01"},{"lineNumber":308,"author":{"gitId":"DmitriYam"},"content":"* If it is completed, the suffix will show `[X]`.","lastModifiedDate":"2021-11-01"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":310,"author":{"gitId":"jiexiong-zeng"},"content":"### Add class to module : `/m \u003cmodule\u003e addclass \u003cday/period/location/comments\u003e`","lastModifiedDate":"2021-10-28"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":312,"author":{"gitId":"jiexiong-zeng"},"content":"Adds a class to a module","lastModifiedDate":"2021-10-28"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":314,"author":{"gitId":"yapjoonsiong"},"content":"Examples:","lastModifiedDate":"2021-10-27"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":316,"author":{"gitId":"yapjoonsiong"},"content":"* `/m CG1111 addclass MON/0800/E1-03/tutorial`","lastModifiedDate":"2021-10-27"},{"lineNumber":317,"author":{"gitId":"yapjoonsiong"},"content":"* `/m MA1508 addclass WED/1000/zoom/lecture`","lastModifiedDate":"2021-10-27"},{"lineNumber":318,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":319,"author":{"gitId":"yapjoonsiong"},"content":"Note:","lastModifiedDate":"2021-10-27"},{"lineNumber":320,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":321,"author":{"gitId":"yapjoonsiong"},"content":"* DAY can only take on the following inputs in both uppercase and lowercase: {MON, TUE, WED, THU, FRI, SAT, SUN}","lastModifiedDate":"2021-10-27"},{"lineNumber":322,"author":{"gitId":"yapjoonsiong"},"content":"* PERIOD is a 1hr block in 24hr format","lastModifiedDate":"2021-10-27"},{"lineNumber":323,"author":{"gitId":"yapjoonsiong"},"content":"* Examples:","lastModifiedDate":"2021-10-27"},{"lineNumber":324,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":325,"author":{"gitId":"yapjoonsiong"},"content":"\u003ctable\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":326,"author":{"gitId":"yapjoonsiong"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":327,"author":{"gitId":"yapjoonsiong"},"content":"   \u003ctd\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":328,"author":{"gitId":"yapjoonsiong"},"content":"Valid","lastModifiedDate":"2021-10-27"},{"lineNumber":329,"author":{"gitId":"yapjoonsiong"},"content":"   \u003c/td\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":330,"author":{"gitId":"yapjoonsiong"},"content":"   \u003ctd\u003eInvalid ","lastModifiedDate":"2021-10-27"},{"lineNumber":331,"author":{"gitId":"yapjoonsiong"},"content":"   \u003c/td\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":332,"author":{"gitId":"yapjoonsiong"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":333,"author":{"gitId":"yapjoonsiong"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":334,"author":{"gitId":"yapjoonsiong"},"content":"   \u003ctd\u003e0800","lastModifiedDate":"2021-10-27"},{"lineNumber":335,"author":{"gitId":"yapjoonsiong"},"content":"   \u003c/td\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":336,"author":{"gitId":"yapjoonsiong"},"content":"   \u003ctd\u003e0830","lastModifiedDate":"2021-10-27"},{"lineNumber":337,"author":{"gitId":"yapjoonsiong"},"content":"   \u003c/td\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":338,"author":{"gitId":"yapjoonsiong"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":339,"author":{"gitId":"yapjoonsiong"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":340,"author":{"gitId":"yapjoonsiong"},"content":"   \u003ctd\u003e1000","lastModifiedDate":"2021-10-27"},{"lineNumber":341,"author":{"gitId":"yapjoonsiong"},"content":"   \u003c/td\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":342,"author":{"gitId":"yapjoonsiong"},"content":"   \u003ctd\u003e2500","lastModifiedDate":"2021-10-27"},{"lineNumber":343,"author":{"gitId":"yapjoonsiong"},"content":"   \u003c/td\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":344,"author":{"gitId":"yapjoonsiong"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":345,"author":{"gitId":"yapjoonsiong"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":346,"author":{"gitId":"yapjoonsiong"},"content":"   \u003ctd\u003e0000","lastModifiedDate":"2021-10-27"},{"lineNumber":347,"author":{"gitId":"yapjoonsiong"},"content":"   \u003c/td\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":348,"author":{"gitId":"yapjoonsiong"},"content":"   \u003ctd\u003e11111","lastModifiedDate":"2021-10-27"},{"lineNumber":349,"author":{"gitId":"yapjoonsiong"},"content":"   \u003c/td\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":350,"author":{"gitId":"yapjoonsiong"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":351,"author":{"gitId":"yapjoonsiong"},"content":"\u003c/table\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":352,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":353,"author":{"gitId":"yapjoonsiong"},"content":"* LOCATION and COMMENTS can only take on a maximum of 16 characters and cannot be empty","lastModifiedDate":"2021-10-27"},{"lineNumber":354,"author":{"gitId":"yapjoonsiong"},"content":"* Only one class can be added in any period","lastModifiedDate":"2021-10-27"},{"lineNumber":355,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":356,"author":{"gitId":"jiexiong-zeng"},"content":"### Delete classes from module: `/m \u003cmodule\u003e deleteclass \u003cclass index\u003e`","lastModifiedDate":"2021-10-28"},{"lineNumber":357,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":358,"author":{"gitId":"DmitriYam"},"content":"Deletes a module corresponding to the input index.(refer to `/m \u003cmodule name\u003e info` or `list module` for indexes )","lastModifiedDate":"2021-10-28"},{"lineNumber":359,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":360,"author":{"gitId":"DmitriYam"},"content":"Examples:","lastModifiedDate":"2021-10-28"},{"lineNumber":361,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":362,"author":{"gitId":"DmitriYam"},"content":"* `/m CS2040C deleteclass 1`","lastModifiedDate":"2021-10-28"},{"lineNumber":363,"author":{"gitId":"DmitriYam"},"content":"* `/m CG1112 deleteclass 2`","lastModifiedDate":"2021-10-28"},{"lineNumber":364,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":365,"author":{"gitId":"DmitriYam"},"content":"Example output:","lastModifiedDate":"2021-10-28"},{"lineNumber":366,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":367,"author":{"gitId":"DmitriYam"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":368,"author":{"gitId":"DmitriYam"},"content":"Class: ","lastModifiedDate":"2021-10-28"},{"lineNumber":369,"author":{"gitId":"DmitriYam"},"content":"Day: TUE","lastModifiedDate":"2021-10-28"},{"lineNumber":370,"author":{"gitId":"DmitriYam"},"content":"Start Time: 1000","lastModifiedDate":"2021-10-28"},{"lineNumber":371,"author":{"gitId":"DmitriYam"},"content":"Location: zoom","lastModifiedDate":"2021-10-28"},{"lineNumber":372,"author":{"gitId":"DmitriYam"},"content":"Comments: lect","lastModifiedDate":"2021-10-28"},{"lineNumber":373,"author":{"gitId":"DmitriYam"},"content":"has been successfully deleted","lastModifiedDate":"2021-10-28"},{"lineNumber":374,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":375,"author":{"gitId":"DmitriYam"},"content":"Remaining Classes are: ","lastModifiedDate":"2021-10-28"},{"lineNumber":376,"author":{"gitId":"DmitriYam"},"content":"1.","lastModifiedDate":"2021-10-28"},{"lineNumber":377,"author":{"gitId":"DmitriYam"},"content":"Day: MON","lastModifiedDate":"2021-10-28"},{"lineNumber":378,"author":{"gitId":"DmitriYam"},"content":"Start Time: 1000","lastModifiedDate":"2021-10-28"},{"lineNumber":379,"author":{"gitId":"DmitriYam"},"content":"Location: zoom","lastModifiedDate":"2021-10-28"},{"lineNumber":380,"author":{"gitId":"DmitriYam"},"content":"Comments: lect","lastModifiedDate":"2021-10-28"},{"lineNumber":381,"author":{"gitId":"DmitriYam"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":382,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":383,"author":{"gitId":"yapjoonsiong"},"content":"### Add credit to module: `/m \u003cmodule\u003e addcredit `","lastModifiedDate":"2021-11-02"},{"lineNumber":384,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":385,"author":{"gitId":"yapjoonsiong"},"content":"Add credits to a module.","lastModifiedDate":"2021-11-02"},{"lineNumber":386,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":387,"author":{"gitId":"yapjoonsiong"},"content":"Examples:","lastModifiedDate":"2021-11-02"},{"lineNumber":388,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":389,"author":{"gitId":"yapjoonsiong"},"content":"* `/m CS2113 addcredit 4`","lastModifiedDate":"2021-11-02"},{"lineNumber":390,"author":{"gitId":"yapjoonsiong"},"content":"* `/m MA1511 addcredit 2`","lastModifiedDate":"2021-11-02"},{"lineNumber":391,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":392,"author":{"gitId":"yapjoonsiong"},"content":"Example output:","lastModifiedDate":"2021-11-02"},{"lineNumber":393,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":394,"author":{"gitId":"yapjoonsiong"},"content":"```","lastModifiedDate":"2021-11-02"},{"lineNumber":395,"author":{"gitId":"yapjoonsiong"},"content":"Module credits successfully added:","lastModifiedDate":"2021-11-02"},{"lineNumber":396,"author":{"gitId":"yapjoonsiong"},"content":"Module name: CS2040C","lastModifiedDate":"2021-11-02"},{"lineNumber":397,"author":{"gitId":"yapjoonsiong"},"content":"CREDITS: 4","lastModifiedDate":"2021-11-02"},{"lineNumber":398,"author":{"gitId":"yapjoonsiong"},"content":"--------------------------- ","lastModifiedDate":"2021-11-02"},{"lineNumber":399,"author":{"gitId":"yapjoonsiong"},"content":"SCHEDULE:","lastModifiedDate":"2021-11-02"},{"lineNumber":400,"author":{"gitId":"yapjoonsiong"},"content":"--------------------------- ","lastModifiedDate":"2021-11-02"},{"lineNumber":401,"author":{"gitId":"yapjoonsiong"},"content":"GRADE: A","lastModifiedDate":"2021-11-02"},{"lineNumber":402,"author":{"gitId":"yapjoonsiong"},"content":"TASKS: []","lastModifiedDate":"2021-11-02"},{"lineNumber":403,"author":{"gitId":"yapjoonsiong"},"content":"BREAKDOWN:","lastModifiedDate":"2021-11-02"},{"lineNumber":404,"author":{"gitId":"yapjoonsiong"},"content":"```","lastModifiedDate":"2021-11-02"},{"lineNumber":405,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":406,"author":{"gitId":"yapjoonsiong"},"content":"Note:","lastModifiedDate":"2021-11-02"},{"lineNumber":407,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":408,"author":{"gitId":"yapjoonsiong"},"content":"* Credit values must be positive integers","lastModifiedDate":"2021-11-02"},{"lineNumber":409,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":410,"author":{"gitId":"jiexiong-zeng"},"content":"### Add grade to module: `/m \u003cmodule\u003e addgrade \u003cgrade letter\u003e`","lastModifiedDate":"2021-10-28"},{"lineNumber":411,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":412,"author":{"gitId":"DmitriYam"},"content":"Adds a grade to a module","lastModifiedDate":"2021-10-28"},{"lineNumber":413,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":414,"author":{"gitId":"DmitriYam"},"content":"Examples:","lastModifiedDate":"2021-10-28"},{"lineNumber":415,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":416,"author":{"gitId":"DmitriYam"},"content":"* `/m CS2113 addgrade A`","lastModifiedDate":"2021-10-28"},{"lineNumber":417,"author":{"gitId":"DmitriYam"},"content":"* `/m MA1508 addgrade B-`","lastModifiedDate":"2021-10-28"},{"lineNumber":418,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":419,"author":{"gitId":"DmitriYam"},"content":"Example output:","lastModifiedDate":"2021-10-28"},{"lineNumber":420,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":421,"author":{"gitId":"yapjoonsiong"},"content":"    /m cs2040c addgrade A","lastModifiedDate":"2021-11-05"},{"lineNumber":422,"author":{"gitId":"DmitriYam"},"content":"    Module grade successfully added: ","lastModifiedDate":"2021-10-28"},{"lineNumber":423,"author":{"gitId":"DmitriYam"},"content":"    Module name: CS2040C","lastModifiedDate":"2021-10-28"},{"lineNumber":424,"author":{"gitId":"DmitriYam"},"content":"    CREDITS: 4","lastModifiedDate":"2021-10-28"},{"lineNumber":425,"author":{"gitId":"DmitriYam"},"content":"    --------------------------- ","lastModifiedDate":"2021-10-28"},{"lineNumber":426,"author":{"gitId":"DmitriYam"},"content":"    SCHEDULE: ","lastModifiedDate":"2021-10-28"},{"lineNumber":427,"author":{"gitId":"DmitriYam"},"content":"    --------------------------- ","lastModifiedDate":"2021-10-28"},{"lineNumber":428,"author":{"gitId":"DmitriYam"},"content":"    GRADE: A","lastModifiedDate":"2021-10-28"},{"lineNumber":429,"author":{"gitId":"DmitriYam"},"content":"    TASKS: []","lastModifiedDate":"2021-10-28"},{"lineNumber":430,"author":{"gitId":"DmitriYam"},"content":"    BREAKDOWN:","lastModifiedDate":"2021-10-28"},{"lineNumber":431,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":432,"author":{"gitId":"yapjoonsiong"},"content":"Note:","lastModifiedDate":"2021-11-02"},{"lineNumber":433,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":434,"author":{"gitId":"yapjoonsiong"},"content":"* A grade can be added to a module only after credit is assigned to the module.","lastModifiedDate":"2021-11-02"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":436,"author":{"gitId":"DmitriYam"},"content":"Note:","lastModifiedDate":"2021-11-01"},{"lineNumber":437,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":438,"author":{"gitId":"DmitriYam"},"content":"* The input for `\u003cgrade\u003e` is case-sensitive.","lastModifiedDate":"2021-11-01"},{"lineNumber":439,"author":{"gitId":"DmitriYam"},"content":"* The input for `\u003cgrade\u003e` must correspond to one of the following values:","lastModifiedDate":"2021-11-01"},{"lineNumber":440,"author":{"gitId":"DmitriYam"},"content":"    1. A+","lastModifiedDate":"2021-11-01"},{"lineNumber":441,"author":{"gitId":"DmitriYam"},"content":"    2. A","lastModifiedDate":"2021-11-01"},{"lineNumber":442,"author":{"gitId":"DmitriYam"},"content":"    3. A-","lastModifiedDate":"2021-11-01"},{"lineNumber":443,"author":{"gitId":"DmitriYam"},"content":"    4. B+","lastModifiedDate":"2021-11-01"},{"lineNumber":444,"author":{"gitId":"DmitriYam"},"content":"    5. B","lastModifiedDate":"2021-11-01"},{"lineNumber":445,"author":{"gitId":"DmitriYam"},"content":"    6. B-","lastModifiedDate":"2021-11-01"},{"lineNumber":446,"author":{"gitId":"DmitriYam"},"content":"    7. C+","lastModifiedDate":"2021-11-01"},{"lineNumber":447,"author":{"gitId":"DmitriYam"},"content":"    8. C","lastModifiedDate":"2021-11-01"},{"lineNumber":448,"author":{"gitId":"DmitriYam"},"content":"    9. D+","lastModifiedDate":"2021-11-01"},{"lineNumber":449,"author":{"gitId":"DmitriYam"},"content":"    10. D","lastModifiedDate":"2021-11-01"},{"lineNumber":450,"author":{"gitId":"DmitriYam"},"content":"    11. F","lastModifiedDate":"2021-11-01"},{"lineNumber":451,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":452,"author":{"gitId":"jiexiong-zeng"},"content":"### Delete grade from module: `/m \u003cmodule\u003e deletegrade`","lastModifiedDate":"2021-10-28"},{"lineNumber":453,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":454,"author":{"gitId":"jiexiong-zeng"},"content":"Deletes the grade, if any.","lastModifiedDate":"2021-10-28"},{"lineNumber":455,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":456,"author":{"gitId":"DmitriYam"},"content":"Examples:","lastModifiedDate":"2021-10-28"},{"lineNumber":457,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":458,"author":{"gitId":"DmitriYam"},"content":"* `/m CS2113 deletegrade`","lastModifiedDate":"2021-10-28"},{"lineNumber":459,"author":{"gitId":"DmitriYam"},"content":"* `/m MA1511 deletegrade`","lastModifiedDate":"2021-10-28"},{"lineNumber":460,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":461,"author":{"gitId":"DmitriYam"},"content":"Example output:","lastModifiedDate":"2021-10-28"},{"lineNumber":462,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":463,"author":{"gitId":"DmitriYam"},"content":"    Module grade has been successfully deleted","lastModifiedDate":"2021-10-28"},{"lineNumber":464,"author":{"gitId":"DmitriYam"},"content":"    Module name: CS1010","lastModifiedDate":"2021-10-28"},{"lineNumber":465,"author":{"gitId":"DmitriYam"},"content":"    CREDITS: 0","lastModifiedDate":"2021-10-28"},{"lineNumber":466,"author":{"gitId":"DmitriYam"},"content":"    --------------------------- ","lastModifiedDate":"2021-10-28"},{"lineNumber":467,"author":{"gitId":"DmitriYam"},"content":"    SCHEDULE: ","lastModifiedDate":"2021-10-28"},{"lineNumber":468,"author":{"gitId":"DmitriYam"},"content":"    --------------------------- ","lastModifiedDate":"2021-10-28"},{"lineNumber":469,"author":{"gitId":"DmitriYam"},"content":"    GRADE: null","lastModifiedDate":"2021-10-28"},{"lineNumber":470,"author":{"gitId":"DmitriYam"},"content":"    TASKS: []","lastModifiedDate":"2021-10-28"},{"lineNumber":471,"author":{"gitId":"DmitriYam"},"content":"    BREAKDOWN:","lastModifiedDate":"2021-10-28"},{"lineNumber":472,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":473,"author":{"gitId":"jiexiong-zeng"},"content":"### View Timetable : `timetable `","lastModifiedDate":"2021-10-28"},{"lineNumber":474,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":475,"author":{"gitId":"jiexiong-zeng"},"content":"Shows the timetable for the currently accessed semester.","lastModifiedDate":"2021-10-28"},{"lineNumber":476,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":477,"author":{"gitId":"jiexiong-zeng"},"content":"Example output:","lastModifiedDate":"2021-10-28"},{"lineNumber":478,"author":{"gitId":"jiexiong-zeng"},"content":"![alt_text](media/timetableExampleOutput.PNG \"image_tooltip\")","lastModifiedDate":"2021-10-28"},{"lineNumber":479,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":480,"author":{"gitId":"yzhedwin"},"content":"Note:","lastModifiedDate":"2021-10-28"},{"lineNumber":481,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":482,"author":{"gitId":"jiexiong-zeng"},"content":"* Timetable can only display classes from 0800 to 1700 periods","lastModifiedDate":"2021-10-28"},{"lineNumber":483,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":484,"author":{"gitId":"jiexiong-zeng"},"content":"### Listing all tasks : `list task`","lastModifiedDate":"2021-10-28"},{"lineNumber":485,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":486,"author":{"gitId":"naijie2108"},"content":"Shows a list of all tasks within the current semester","lastModifiedDate":"2021-11-04"},{"lineNumber":487,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":488,"author":{"gitId":"jiexiong-zeng"},"content":"Additional format: `list task \u003coptional argument\u003e`","lastModifiedDate":"2021-10-28"},{"lineNumber":489,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":490,"author":{"gitId":"naijie2108"},"content":"By default, all tasks in the current semester are listed, but this can be customised by adding optional arguments.","lastModifiedDate":"2021-10-27"},{"lineNumber":491,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":492,"author":{"gitId":"jiexiong-zeng"},"content":"\u0026lt;optional argument\u003e includes:","lastModifiedDate":"2021-10-28"},{"lineNumber":493,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":494,"author":{"gitId":"naijie2108"},"content":"* sortbydate - Sort tasks by due date.","lastModifiedDate":"2021-10-27"},{"lineNumber":495,"author":{"gitId":"naijie2108"},"content":"* sortbystatus - Sort tasks by status, displaying unfinished tasks first.","lastModifiedDate":"2021-11-01"},{"lineNumber":496,"author":{"gitId":"naijie2108"},"content":"* gradable - list gradable tasks only.","lastModifiedDate":"2021-11-02"},{"lineNumber":497,"author":{"gitId":"naijie2108"},"content":"* normal - list non-gradable tasks only.","lastModifiedDate":"2021-11-02"},{"lineNumber":498,"author":{"gitId":"naijie2108"},"content":"* w - list tasks due within the next week.","lastModifiedDate":"2021-10-27"},{"lineNumber":499,"author":{"gitId":"naijie2108"},"content":"* m - list tasks due within the next month.","lastModifiedDate":"2021-10-27"},{"lineNumber":500,"author":{"gitId":"naijie2108"},"content":"* y - list tasks due within the next year.","lastModifiedDate":"2021-10-27"},{"lineNumber":501,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":502,"author":{"gitId":"naijie2108"},"content":"Tasks are listed in the format:","lastModifiedDate":"2021-11-01"},{"lineNumber":503,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":504,"author":{"gitId":"naijie2108"},"content":"`[Module Code][Gradable][Lateness][Done] \u003cdescription\u003e by: \u003cdeadline\u003e [Weightage]`","lastModifiedDate":"2021-11-05"},{"lineNumber":505,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":506,"author":{"gitId":"naijie2108"},"content":"* [Module Name] - Name of the module","lastModifiedDate":"2021-11-01"},{"lineNumber":507,"author":{"gitId":"naijie2108"},"content":"* [Gradable] - Shows `[G]` if the task is gradable, and `[ ]` if the task is non-gradable.","lastModifiedDate":"2021-11-04"},{"lineNumber":508,"author":{"gitId":"naijie2108"},"content":"* [Lateness] - Shows `[LATE]` if the task is overdue. Only shows up for overdue tasks","lastModifiedDate":"2021-11-04"},{"lineNumber":509,"author":{"gitId":"naijie2108"},"content":"* [Done] - Shows `[X]` if the task is done, and `[ ]` if the task isn’t done yet.","lastModifiedDate":"2021-11-04"},{"lineNumber":510,"author":{"gitId":"naijie2108"},"content":"* \u0026lt;description\u003e - Description of the task","lastModifiedDate":"2021-11-01"},{"lineNumber":511,"author":{"gitId":"naijie2108"},"content":"* \u0026lt;deadline\u003e - Deadline of the task","lastModifiedDate":"2021-11-01"},{"lineNumber":512,"author":{"gitId":"naijie2108"},"content":"* [Weightage] - Weightage of the task, if it is gradable. Only shows up for gradable tasks.","lastModifiedDate":"2021-11-01"},{"lineNumber":513,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":514,"author":{"gitId":"naijie2108"},"content":"Example tasks:","lastModifiedDate":"2021-11-04"},{"lineNumber":515,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":516,"author":{"gitId":"naijie2108"},"content":"1. `[CS2132][G][ ] Assignment by: 16 Dec 2021 12:00 AM [Weightage: 50%]`","lastModifiedDate":"2021-11-04"},{"lineNumber":517,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":518,"author":{"gitId":"naijie2108"},"content":"    * Belongs to the module CS2132","lastModifiedDate":"2021-11-04"},{"lineNumber":519,"author":{"gitId":"naijie2108"},"content":"    * Gradable","lastModifiedDate":"2021-11-04"},{"lineNumber":520,"author":{"gitId":"naijie2108"},"content":"    * Not done yet","lastModifiedDate":"2021-11-04"},{"lineNumber":521,"author":{"gitId":"naijie2108"},"content":"    * Due on 16 Dec 2021 12:00 AM","lastModifiedDate":"2021-11-04"},{"lineNumber":522,"author":{"gitId":"naijie2108"},"content":"    * Has a weightage of 50%.","lastModifiedDate":"2021-11-04"},{"lineNumber":523,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":524,"author":{"gitId":"naijie2108"},"content":"2. `[CS2132][ ][X] Quiz by: 16 Nov 2021 12:00 AM`","lastModifiedDate":"2021-11-04"},{"lineNumber":525,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":526,"author":{"gitId":"naijie2108"},"content":"    * Belongs to the module CS2132","lastModifiedDate":"2021-11-04"},{"lineNumber":527,"author":{"gitId":"naijie2108"},"content":"    * Non-Gradable","lastModifiedDate":"2021-11-04"},{"lineNumber":528,"author":{"gitId":"naijie2108"},"content":"    * Done","lastModifiedDate":"2021-11-04"},{"lineNumber":529,"author":{"gitId":"naijie2108"},"content":"    * Due on 16 Nov 2021 12:00 AM","lastModifiedDate":"2021-11-04"},{"lineNumber":530,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":531,"author":{"gitId":"naijie2108"},"content":"Example commands with expected output:","lastModifiedDate":"2021-11-01"},{"lineNumber":532,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":533,"author":{"gitId":"naijie2108"},"content":"Assuming tasks have been added to modules beforehand:","lastModifiedDate":"2021-10-27"},{"lineNumber":534,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":535,"author":{"gitId":"naijie2108"},"content":"* `list task`","lastModifiedDate":"2021-10-27"},{"lineNumber":536,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":537,"author":{"gitId":"naijie2108"},"content":"    ```","lastModifiedDate":"2021-10-27"},{"lineNumber":538,"author":{"gitId":"naijie2108"},"content":"    All tasks: ","lastModifiedDate":"2021-10-27"},{"lineNumber":539,"author":{"gitId":"naijie2108"},"content":"    1. [CS2132][G][ ] Assignment by: 16 Dec 2021 12:00 AM [Weightage: 50%]","lastModifiedDate":"2021-10-27"},{"lineNumber":540,"author":{"gitId":"naijie2108"},"content":"    2. [CS2132][G][LATE][ ] asdf by: 10 Dec 2000 12:00 AM [Weightage: 50%]","lastModifiedDate":"2021-10-27"},{"lineNumber":541,"author":{"gitId":"naijie2108"},"content":"    ```","lastModifiedDate":"2021-10-27"},{"lineNumber":542,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":543,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":544,"author":{"gitId":"naijie2108"},"content":"* `list task sortbydate`","lastModifiedDate":"2021-10-27"},{"lineNumber":545,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":546,"author":{"gitId":"naijie2108"},"content":"  ```","lastModifiedDate":"2021-10-27"},{"lineNumber":547,"author":{"gitId":"naijie2108"},"content":"  Tasks sorted by date: ","lastModifiedDate":"2021-10-27"},{"lineNumber":548,"author":{"gitId":"naijie2108"},"content":"  1. [CS2132][G][LATE][ ] asdf by: 10 Dec 2000 12:00 AM [Weightage: 50%]","lastModifiedDate":"2021-10-27"},{"lineNumber":549,"author":{"gitId":"naijie2108"},"content":"  2. [CS2132][G][ ] Assignment by: 16 Dec 2021 12:00 AM [Weightage: 50%]","lastModifiedDate":"2021-10-27"},{"lineNumber":550,"author":{"gitId":"naijie2108"},"content":"  ```","lastModifiedDate":"2021-10-27"},{"lineNumber":551,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":552,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":553,"author":{"gitId":"naijie2108"},"content":"* `list task w`","lastModifiedDate":"2021-10-27"},{"lineNumber":554,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":555,"author":{"gitId":"naijie2108"},"content":"  ```","lastModifiedDate":"2021-10-27"},{"lineNumber":556,"author":{"gitId":"naijie2108"},"content":"  Weekly tasks: ","lastModifiedDate":"2021-10-27"},{"lineNumber":557,"author":{"gitId":"naijie2108"},"content":"  1. [CS2132][G][LATE][ ] asdf by: 10 Dec 2000 12:00 AM [Weightage: 50%]","lastModifiedDate":"2021-10-27"},{"lineNumber":558,"author":{"gitId":"naijie2108"},"content":"  ```","lastModifiedDate":"2021-10-27"},{"lineNumber":559,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":560,"author":{"gitId":"jiexiong-zeng"},"content":"NOTE:","lastModifiedDate":"2021-11-05"},{"lineNumber":561,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":562,"author":{"gitId":"yzhedwin"},"content":"* For optional arguments `w`, `m` and `y`, overdue tasks are listed together with the weekly/monthly/yearly tasks","lastModifiedDate":"2021-11-06"},{"lineNumber":563,"author":{"gitId":"yzhedwin"},"content":"  regardless of due date as a reminder that the user has forgotten to do the task.","lastModifiedDate":"2021-11-06"},{"lineNumber":564,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":565,"author":{"gitId":"yapjoonsiong"},"content":"### View CAP : `cap`","lastModifiedDate":"2021-10-27"},{"lineNumber":566,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":567,"author":{"gitId":"jiexiong-zeng"},"content":"Shows the CAP for the currently accessed semester.","lastModifiedDate":"2021-10-28"},{"lineNumber":568,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":569,"author":{"gitId":"yapjoonsiong"},"content":"Example output:","lastModifiedDate":"2021-10-27"},{"lineNumber":570,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":571,"author":{"gitId":"yapjoonsiong"},"content":"* `This semester\u0027s CAP: 4.25`","lastModifiedDate":"2021-10-27"},{"lineNumber":572,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":573,"author":{"gitId":"jiexiong-zeng"},"content":"NOTE:","lastModifiedDate":"2021-11-05"},{"lineNumber":574,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":575,"author":{"gitId":"jiexiong-zeng"},"content":"* Modules with a credit value of 0 will not be calculated towards overall CAP.","lastModifiedDate":"2021-11-05"},{"lineNumber":576,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":577,"author":{"gitId":"yapjoonsiong"},"content":"### View all CAP : `allcap`","lastModifiedDate":"2021-10-27"},{"lineNumber":578,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":579,"author":{"gitId":"jiexiong-zeng"},"content":"Shows the CAP for all semesters and aggregated CAP.","lastModifiedDate":"2021-10-28"},{"lineNumber":580,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":581,"author":{"gitId":"yapjoonsiong"},"content":"Format: `allcap`","lastModifiedDate":"2021-10-27"},{"lineNumber":582,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":583,"author":{"gitId":"yapjoonsiong"},"content":"Example output:","lastModifiedDate":"2021-10-27"},{"lineNumber":584,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":585,"author":{"gitId":"yapjoonsiong"},"content":"    Cumulative CAP: 4.25","lastModifiedDate":"2021-10-27"},{"lineNumber":586,"author":{"gitId":"yapjoonsiong"},"content":"    Y1S1: 4.25","lastModifiedDate":"2021-10-27"},{"lineNumber":587,"author":{"gitId":"yapjoonsiong"},"content":"    Y1S2: 0.0","lastModifiedDate":"2021-10-27"},{"lineNumber":588,"author":{"gitId":"yapjoonsiong"},"content":"    Y2S1: 0.0","lastModifiedDate":"2021-10-27"},{"lineNumber":589,"author":{"gitId":"yapjoonsiong"},"content":"    Y2S2: 0.0","lastModifiedDate":"2021-10-27"},{"lineNumber":590,"author":{"gitId":"yapjoonsiong"},"content":"    Y3S1: 0.0","lastModifiedDate":"2021-10-27"},{"lineNumber":591,"author":{"gitId":"yapjoonsiong"},"content":"    Y3S2: 0.0","lastModifiedDate":"2021-10-27"},{"lineNumber":592,"author":{"gitId":"yapjoonsiong"},"content":"    Y4S1: 0.0","lastModifiedDate":"2021-10-27"},{"lineNumber":593,"author":{"gitId":"yapjoonsiong"},"content":"    Y4S2: 0.0","lastModifiedDate":"2021-10-27"},{"lineNumber":594,"author":{"gitId":"yapjoonsiong"},"content":"    Y5S1: 0.0","lastModifiedDate":"2021-10-27"},{"lineNumber":595,"author":{"gitId":"yapjoonsiong"},"content":"    Y5S2: 0.0","lastModifiedDate":"2021-10-27"},{"lineNumber":596,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":597,"author":{"gitId":"yapjoonsiong"},"content":"### Exiting the program : `bye`","lastModifiedDate":"2021-10-27"},{"lineNumber":598,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":599,"author":{"gitId":"yapjoonsiong"},"content":"Exits the program.","lastModifiedDate":"2021-10-27"},{"lineNumber":600,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":601,"author":{"gitId":"naijie2108"},"content":"### Saving data","lastModifiedDate":"2021-11-04"},{"lineNumber":602,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":603,"author":{"gitId":"naijie2108"},"content":"Program data is saved whenever data is added or modified. The process is done automatically, so no user input is needed","lastModifiedDate":"2021-11-04"},{"lineNumber":604,"author":{"gitId":"naijie2108"},"content":"for this.","lastModifiedDate":"2021-11-04"},{"lineNumber":605,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":606,"author":{"gitId":"naijie2108"},"content":"### Loading data","lastModifiedDate":"2021-11-04"},{"lineNumber":607,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":608,"author":{"gitId":"yzhedwin"},"content":"Program data is loaded from the data folder during startup of the program. If the program can detect the data file","lastModifiedDate":"2021-11-06"},{"lineNumber":609,"author":{"gitId":"yzhedwin"},"content":"successfully, the data is loaded and the following message should appear:","lastModifiedDate":"2021-11-06"},{"lineNumber":610,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":611,"author":{"gitId":"naijie2108"},"content":"```","lastModifiedDate":"2021-11-04"},{"lineNumber":612,"author":{"gitId":"naijie2108"},"content":"Data loaded successfully","lastModifiedDate":"2021-11-04"},{"lineNumber":613,"author":{"gitId":"naijie2108"},"content":"Welcome to NoCap","lastModifiedDate":"2021-11-04"},{"lineNumber":614,"author":{"gitId":"naijie2108"},"content":"```","lastModifiedDate":"2021-11-04"},{"lineNumber":615,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":616,"author":{"gitId":"yzhedwin"},"content":"On the other hand, if no data file can be found, the program starts with an empty template, and the following message","lastModifiedDate":"2021-11-06"},{"lineNumber":617,"author":{"gitId":"yzhedwin"},"content":"should appear:","lastModifiedDate":"2021-11-06"},{"lineNumber":618,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":619,"author":{"gitId":"naijie2108"},"content":"```","lastModifiedDate":"2021-11-04"},{"lineNumber":620,"author":{"gitId":"naijie2108"},"content":"No save file found, starting with an empty template","lastModifiedDate":"2021-11-04"},{"lineNumber":621,"author":{"gitId":"naijie2108"},"content":"Welcome to NoCap","lastModifiedDate":"2021-11-04"},{"lineNumber":622,"author":{"gitId":"naijie2108"},"content":"```","lastModifiedDate":"2021-11-04"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":624,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":626,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer?","lastModifiedDate":"2020-05-24"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":628,"author":{"gitId":"DmitriYam"},"content":"**A**: Simply transfer your data.json file to the data folder of the operating system that you plan to use NoCap on.","lastModifiedDate":"2021-10-28"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":630,"author":{"gitId":"DmitriYam"},"content":"\u003e **WARNING**: Replacing data.json file in another NoCap folder results in the  existing data being erased!","lastModifiedDate":"2021-10-28"},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":632,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":634,"author":{"gitId":"jiexiong-zeng"},"content":"|Action|Format|","lastModifiedDate":"2021-10-28"},{"lineNumber":635,"author":{"gitId":"jiexiong-zeng"},"content":"|--------|----------|","lastModifiedDate":"2021-10-28"},{"lineNumber":636,"author":{"gitId":"jiexiong-zeng"},"content":"|show help| help |","lastModifiedDate":"2021-10-28"},{"lineNumber":637,"author":{"gitId":"jiexiong-zeng"},"content":"|Show all semesters| list semesters|","lastModifiedDate":"2021-10-28"},{"lineNumber":638,"author":{"gitId":"jiexiong-zeng"},"content":"|Change semester| switch \\\u003csemester index\u003e|","lastModifiedDate":"2021-10-28"},{"lineNumber":639,"author":{"gitId":"jiexiong-zeng"},"content":"|Add module| add \\\u003cmodule name\u003e|","lastModifiedDate":"2021-10-28"},{"lineNumber":640,"author":{"gitId":"jiexiong-zeng"},"content":"|Delete module| delete \\\u003cmodule index\u003e|","lastModifiedDate":"2021-10-28"},{"lineNumber":641,"author":{"gitId":"jiexiong-zeng"},"content":"|List all module| list module|","lastModifiedDate":"2021-10-28"},{"lineNumber":642,"author":{"gitId":"jiexiong-zeng"},"content":"|Add task| /m \\\u003cmodule\u003e addtask \\\u003cdescription\u003e /by \\\u003cdate\u003e \\\u003ctime\u003e|","lastModifiedDate":"2021-10-28"},{"lineNumber":643,"author":{"gitId":"jiexiong-zeng"},"content":"|Add gradable task | /m \\\u003cmodule\u003e addgradable \\\u003cdescription\u003e /by \\\u003cdate\u003e \\\u003ctime\u003e /w \\\u003cweightage\u003e|","lastModifiedDate":"2021-10-28"},{"lineNumber":644,"author":{"gitId":"jiexiong-zeng"},"content":"|Edit description| /m \\\u003cmodule\u003e editdesc \\\u003ctask index\u003e \\\u003cnew description\u003e|","lastModifiedDate":"2021-10-31"},{"lineNumber":645,"author":{"gitId":"jiexiong-zeng"},"content":"|Edit deadline| /m \\\u003cmodule\u003e editdate \\\u003ctask index\u003e \\\u003cnew deadline\u003e|","lastModifiedDate":"2021-10-31"},{"lineNumber":646,"author":{"gitId":"jiexiong-zeng"},"content":"|Delete task| /m \\\u003cmodule\u003e deletetask \\\u003csubstring\u003e|","lastModifiedDate":"2021-11-05"},{"lineNumber":647,"author":{"gitId":"jiexiong-zeng"},"content":"|Mark task as complete| /m \\\u003cmodule\u003e done \\\u003ctask index\u003e|","lastModifiedDate":"2021-10-28"},{"lineNumber":648,"author":{"gitId":"jiexiong-zeng"},"content":"|Mark task as incomplete| /m \\\u003cmodule\u003e notdone \\\u003ctask index\u003e|","lastModifiedDate":"2021-10-28"},{"lineNumber":649,"author":{"gitId":"jiexiong-zeng"},"content":"|Mark gradable task as complete| /m \\\u003cmodule\u003e gradabledone \\\u003ctask index\u003e|","lastModifiedDate":"2021-10-28"},{"lineNumber":650,"author":{"gitId":"jiexiong-zeng"},"content":"|Mark gradable task as incomplete| /m \\\u003cmodule\u003e gradablenotdone \\\u003ctask index\u003e|","lastModifiedDate":"2021-10-28"},{"lineNumber":651,"author":{"gitId":"jiexiong-zeng"},"content":"|List module tasks| /m \\\u003cmodule\u003e list task \\\u003coptional argument\u003e|","lastModifiedDate":"2021-10-28"},{"lineNumber":652,"author":{"gitId":"jiexiong-zeng"},"content":"|Add class | /m \\\u003cmodule\u003e addclass \\\u003cday/period/location/comments\u003e|","lastModifiedDate":"2021-10-28"},{"lineNumber":653,"author":{"gitId":"jiexiong-zeng"},"content":"|Delete class| /m \\\u003cmodule\u003e deleteclass \\\u003cclass index\u003e|","lastModifiedDate":"2021-10-28"},{"lineNumber":654,"author":{"gitId":"jiexiong-zeng"},"content":"|Add grade| /m \\\u003cmodule\u003e addgrade \\\u003cgrade letter\u003e|","lastModifiedDate":"2021-10-28"},{"lineNumber":655,"author":{"gitId":"jiexiong-zeng"},"content":"|Delete grade| /m \\\u003cmodule\u003e deletegrade|","lastModifiedDate":"2021-10-28"},{"lineNumber":656,"author":{"gitId":"jiexiong-zeng"},"content":"|Add credit| /m \\\u003cmodule\u003e addcredit|","lastModifiedDate":"2021-10-28"},{"lineNumber":657,"author":{"gitId":"jiexiong-zeng"},"content":"|Show timetable| timetable|","lastModifiedDate":"2021-10-28"},{"lineNumber":658,"author":{"gitId":"jiexiong-zeng"},"content":"|List all tasks| list task \\\u003coptional argument\u003e|","lastModifiedDate":"2021-10-28"},{"lineNumber":659,"author":{"gitId":"yapjoonsiong"},"content":"|Show semester cap| cap|","lastModifiedDate":"2021-11-05"},{"lineNumber":660,"author":{"gitId":"jiexiong-zeng"},"content":"|Show overall cap| allcap|","lastModifiedDate":"2021-10-28"},{"lineNumber":661,"author":{"gitId":"jiexiong-zeng"},"content":"|Exit NoCap|bye|","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"yapjoonsiong":141,"naijie2108":92,"DmitriYam":122,"yzhedwin":94,"jiexiong-zeng":183,"-":29}},{"path":"docs/media/ParserClassDiagram.drawio.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"jiexiong-zeng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"jiexiong-zeng"},"content":"\u003cmxfile host\u003d\"app.diagrams.net\" modified\u003d\"2021-10-25T07:20:01.553Z\" agent\u003d\"5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.54 Safari/537.36\" etag\u003d\"yjQIaG1W3Es8PBli0DQY\" version\u003d\"15.5.9\" type\u003d\"google\" pages\u003d\"2\"\u003e\u003cdiagram id\u003d\"kgpKYQtTHZ0yAKxKKP6v\" name\u003d\"Class Diagram\"\u003e7VrbctowEP0aHtPBNr7wmJCETHNtSSdNXjqqLbCKbFFZBMjXVw5yfJG4NBiLdvKEtVrb0jmro12ZltWL5n0KJuE1CSBume1g3rJOW6Zp2IbHf1LLYmnx2sIwoigQTrlhgF6gMLaFdYoCmJQcGSGYoUnZ6JM4hj4r2QClZFZ2GxJcfusEjKBkGPgAy9YHFLBQzMJu5/YLiEZh9majLXoikDkLQxKCgMwKJuusZfUoIWx5Fc17EKfgZbgs7ztf0fs2MApjts0N9CmkJ6Ob6y9g0R32neT3528PRxnMzwBPxYzFaNkig4CSaRzA9CntlnUyCxGDgwnw094ZJ53bQhZh3jL4pTwqMdBnSBmcF0xilH1IIsjogruIXssVgxIh0+mI9iwnwPKELSyAb2VQA0H66O3ZOS78QkDzNzBZEiow4HEimoSykIxIDPBZbj0p45b7XBEyEWj9gowtRNCDKSNlLOEcse/p7Z9s0Xos9JzOxZNfG4usEfP5Fm5Km4/Fvvy211Z230reEjKlPlyHjViVgI4gW+PXWfqluK2NAgoxYOi5vP7qZ1SK+xvS48GsO/g7Rjn4LUXwG6Yi+J19xb4lIcVVfsrx0Q2VWYGq4zUI1ctFuOg/3gUoGpzdh93+8dEROJK180Mlyqu/qBJKCA1dKnHZv/zx5NPx2LGHtxQ/xVcDopnQAp05uRsINUp05uyuJbSCdm0Mr9YTXbLfkcTsDtAEUu1iVtX9RsVMCZUtQXUKGDwQuOxuGS5HO1yGo1MrjPdoRfs9WvEeaXC2lIbuQaWIpt6kvwH1Tzgj7DitkrnBxyBJkJ+ZzxF+G1IcZE4xieHSIvqbCQxttYMyR7E3yF9t69j9BxayEqHDqvUcaSe7Qgk70J2s0Y1fmfS6hyN72y6Aiu65Daa9rrwklKhqrWOy5LLAaW0cmXviqBxSCaNkDHsEE8otARyCKWZ7Z1Lp5+nUMlfSsqWO9ULojxPtalYtY/Tn5Z4EWJ+CAPzE8B4kY+2AVQ+xbO2AdSXAbvl0AMYpXunGqR0z7+BqZUM+Ts7Si3YvzauhvDT5ZFkZmrLGiVR7yPPsiglgNIp50+cQ8ldYJyl0yAf4WHREKAhet2UVF2W26shgrM3faxwFG1YNbNzY+PLGv/0y6AZfn7x79+pi0FEseeP/Rb9b+VrWNZtDX5n7f3wqWwnNtp/KXGVWoyt57GgltI5c09xPPbATx01lkep6QBbEIqdC6Q6rqNtIYr0lwrbkai321g2ysP31SBSBONCeuFWrg0aT3XUHVQWsDjbLbRQsdVTr3Qlq2NqNDRJSOOnOj8Pzw245TdxVZVarxxZbiL2jyrzeyucLFgWHCUExSwpPvksNhYK1km+6XuVvZxV/x17rzy+WI8jD8m0qO0SqclnXsaSl9augeOtif5+nI7yZ/7dwiWv+D03r7A8\u003d\u003c/diagram\u003e\u003cdiagram id\u003d\"GpTZoK-_EEyQiMjIXh8K\" name\u003d\"splitString\"\u003e7Zldb5swFIZ/TaTtohLYIQmX+WjXm0qVsqlSbyYXO+DV2Mg4TdJfP7uY8GHarB9hUptWiuAF2/L7nAMnJwM4T7c/JMqSK4EJGwAPbwdwMQAgDAP9aYRdIfgesEosKbZaJSzpIylvtOqaYpI3blRCMEWzphgJzkmkGhqSUmyat60Ea66aoZg4wjJCzFVvKFZJoU7AuNIvCY2TcmV/FBZXUlTebHeSJwiLTU2C5wM4l0Ko4ijdzgkz5pW+nJ3BJZj+SX6PxttFNl/ni834rJjs4jVD9luQhKs3T72YXt3eXU4fb6YL/vgruAsuprd2iPeA2Nr6ZfeqdqWBm4QqssxQZM43OkgGcJaolOkzXx+iPCuwreiW6KVmuZLinswFE1KrXHA9bmaXIVKRbYvLgU35e6d1iBKREiV3elw5ize2W7DxCaA931SwR0OrJTXQexHZAIv3k1cm6gPr4ys89R1PGc2ViXuU3xtvhVR3O4wUcbyWYs2xcXHhadMOOL8SXJU2Y7JCa6Yc+yt9RRlz1aNx8YMmFzh2ucBJF5djYQHPYPkyCIaBi8AHfSKADoKvlBIgPMwDdD6qjsVj6PD4EiCGoAkiKEuaemL4fYIInkmMT4ugnQv/H8GoE8HPXeZmgjZDNb3urHnqlg4AXAXm31RMjMZca5F2kOiLM+Mv1RXr1F5IKcZmrU7CzRioQ9ZrFH9HfalMWg+x0AU36uAGj8Vt3MltQfJI0kxRwU/4avjgMGjh66gJYJ/8Jqe8+ydwfhNc0FFP95p34SnvXlNyQO8gvrBPfOW79aVv/oTjqenAVGwwypMnE/0mSKNfI6W58CcFeHCPt+y6gBcptGsOgp22ztsI1AwOOgwuNUkYUvShuWaX63aFa0G5qr8XW4CH7fZCLtYyInZYvU3TnikYHZhJIRkT5cz0FAb7jb8jMtz+xSkyPjAyAvBRkeHMdOzIcFsoecaoWipJefztuxmf6w/9TGYapWnWStP2Sog5prJogtH0nd8t+20wOunod1RMvXZRfLeN8jKGAkBOIsHxZyDQVbN+EAF9WjX0i7ypfhaB538B\u003c/diagram\u003e\u003c/mxfile\u003e","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"jiexiong-zeng":2}},{"path":"docs/team/DmitriYam.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DmitriYam"},"content":"# Yam Jin Ee Dmitri - Project Portfolio Page","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"DmitriYam"},"content":"## Overview","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"DmitriYam"},"content":"### Summary of Contributions","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"DmitriYam"},"content":"* **Code Contributed:** [RepoSense Link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003dDmitri\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dDmitriYam\u0026tabRepo\u003dAY2122S1-CS2113T-F11-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"DmitriYam"},"content":"* **Enhancement Implemented:** ","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"DmitriYam"},"content":"  ","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"DmitriYam"},"content":"  1. module package.","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"DmitriYam"},"content":"  ","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"DmitriYam"},"content":"     *Created base class for module. ","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"DmitriYam"},"content":"     *Implemented visualisation of module to command prompt.","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"DmitriYam"},"content":"  ","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"DmitriYam"},"content":"  2. schedule class","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"DmitriYam"},"content":"    * Implemented visualisation of schedule and schedule list to command prompt.","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"DmitriYam"},"content":"  ","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"DmitriYam"},"content":"  3. GradableTask GradableTaskList","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"DmitriYam"},"content":"    * Extended Task class to produce a class that stores gradable components.","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"DmitriYam"},"content":"    * Created constructors which checked for syntax errors or weightage overflow errors.","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"DmitriYam"},"content":"  ","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"DmitriYam"},"content":"  4. VisualiseGradable","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"DmitriYam"},"content":"     * Created a class to better visualise all gradable components by breaking them down into their individual componnents","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"DmitriYam"},"content":"     and labelling the percentages.","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"DmitriYam"},"content":"     ","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"DmitriYam"},"content":"* **Contributions to UG:**","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"DmitriYam"},"content":"    * Features: Add GradableTasks","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"DmitriYam"},"content":"    * Features: List GradableTasks","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"DmitriYam"},"content":"    * Features: Add class to module","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"DmitriYam"},"content":"    * Features: Delete class from module","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"DmitriYam"},"content":"    * Features: Add credit to module","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"DmitriYam"},"content":"    * Features: Add grade to module","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"DmitriYam"},"content":"    * Features: delete grade from module","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"DmitriYam"},"content":"    * ","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"DmitriYam"},"content":"* **Contributions to DG:** ","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"DmitriYam"},"content":"    * Design and implementation of ModuleList and ScheduleList classes.","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"DmitriYam"},"content":"    * Instruction for testing for features:","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"DmitriYam"},"content":"        * Add module","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"DmitriYam"},"content":"        * Add grade","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"DmitriYam"},"content":"        * Add class","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"DmitriYam"},"content":"        * Add credit","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"DmitriYam"},"content":"        * Add gradable","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"DmitriYam"},"content":"        * Visualise gradable","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"DmitriYam"},"content":"      ","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"DmitriYam"},"content":"* **Contributions to team-based tasks:**","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"DmitriYam"},"content":"    * Helped keep track of weekly deadlines and deliverables.","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"DmitriYam"},"content":"    * Contributed ideas to the team such as extending Tasks for module breakdown.","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"DmitriYam"},"content":"* **Review/Mentoring Contributions**","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"DmitriYam"},"content":"  * Helped teammates debug their code when they faced difficulties.","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"DmitriYam"},"content":"  * Remind the group of internal deadlines.","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"DmitriYam"},"content":"###Developer Guide Extract","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"DmitriYam"},"content":"# Module","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"DmitriYam"},"content":"**API** : `module`","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"DmitriYam"},"content":"All data related to module is stored in the module class. An Arraylist of Module is used to store and manage the","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"DmitriYam"},"content":"modules. ModuleList is also responsible for constructing and printing out the Timetable.","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"DmitriYam"},"content":"![moduleListClassDiagram](../media/moduleListClassDiagram.png)","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"DmitriYam"},"content":"The modules are stored in an ArrayList and ModuleList uses the Module.get(int index) method to access the target Module.","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"DmitriYam"},"content":"- ModuleList is responsible for printing the Time Table.","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"DmitriYam"},"content":"- ModuleList contains the getter method find(String input) which returns a module by the same name as the input.","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"DmitriYam"},"content":"- Module contains getter and setter methods to change or access its contents.","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"DmitriYam"},"content":"- When Module is constructed, an empty gradableTaskList, taskList and scheduleList wll be instantiated and stored in","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"DmitriYam"},"content":"  Module.","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"DmitriYam"},"content":"Data stored in Module includes:","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"DmitriYam"},"content":"1. moduleName","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"DmitriYam"},"content":"2. letterGrade","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"DmitriYam"},"content":"3. credits","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"DmitriYam"},"content":"4. points","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"DmitriYam"},"content":"5. TaskList","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"DmitriYam"},"content":"6. GradableTaskList","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"DmitriYam"},"content":"7. ScheduleList","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"DmitriYam"},"content":"The modules are stored in an ArrayList and ModuleList uses the Module.get(int index) method to access the","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"DmitriYam"},"content":"target Module.","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"DmitriYam"},"content":"- ModuleList is responsible for printing the Time Table. It accesses different schedules of different mods before","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"DmitriYam"},"content":"  constructing a Time Table.","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"DmitriYam"},"content":"- ModuleList contains getter method find(String input) which returns a module by the same name as the input.","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"DmitriYam"},"content":"How printing a timetable works:","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"DmitriYam"},"content":"1. ModuleList first extracts day of week and timeslot information from different schedules.","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"DmitriYam"},"content":"2. It then prints out the Timetable one line at a time. At the same time it checks if the day of week and the timeslot","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"DmitriYam"},"content":"   corresponds to the schedule.","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"DmitriYam"},"content":"- If day of week and timeslot corresponds, venue and comments information is printed out","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"DmitriYam"},"content":"- If day of week and timeslot does not correspond, and blank character \u0026quot; \u0026quot; is printed instead. \u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"DmitriYam"},"content":"# ![modulePrintTimetableSeq](../media/modulePrintTimetableSeq.png)","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"DmitriYam"},"content":"How printing a timetable works:","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"DmitriYam"},"content":"1. When Timetable is called, ModuleList goes into a loop to print out the timetable. ModuleList iterates through the 207","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"DmitriYam"},"content":"   character long length and the 33 lines which makes up the entire timetable.","lastModifiedDate":"2021-11-05"},{"lineNumber":106,"author":{"gitId":"DmitriYam"},"content":"2. Each iteration of the loop can result in 1 of 3 cases:","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"DmitriYam"},"content":"1. It is at a border. When this happens a \u0026quot;#\u0026quot; character is printed to the console which denotes a border.","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"DmitriYam"},"content":"2. It is empty. When this happens a \u0026quot; \u0026quot;(blank) character is printed to the console.","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"DmitriYam"},"content":"3. It contains module information. When this happens, getMoudleName() , getModuleLocation() and getModuleComment() is","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"DmitriYam"},"content":"   called. The information is then printed onto the console.","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":112,"author":{"gitId":"DmitriYam"},"content":"# ScheduleList","lastModifiedDate":"2021-11-05"},{"lineNumber":113,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"DmitriYam"},"content":"**API** : `schedule`","lastModifiedDate":"2021-11-05"},{"lineNumber":115,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"DmitriYam"},"content":"ScheduleList consists of all data for the schedule for the module.","lastModifiedDate":"2021-11-05"},{"lineNumber":117,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"DmitriYam"},"content":"This includes:","lastModifiedDate":"2021-11-05"},{"lineNumber":119,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"DmitriYam"},"content":"1. `day`","lastModifiedDate":"2021-11-05"},{"lineNumber":121,"author":{"gitId":"DmitriYam"},"content":"2. `location`","lastModifiedDate":"2021-11-05"},{"lineNumber":122,"author":{"gitId":"DmitriYam"},"content":"3. `startTime`","lastModifiedDate":"2021-11-05"},{"lineNumber":123,"author":{"gitId":"DmitriYam"},"content":"4. `comments`","lastModifiedDate":"2021-11-05"},{"lineNumber":124,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":125,"author":{"gitId":"DmitriYam"},"content":"How ScheduleList works:","lastModifiedDate":"2021-11-05"},{"lineNumber":126,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":127,"author":{"gitId":"DmitriYam"},"content":"1. An empty `ScheduleList` is created when a module is constructed.","lastModifiedDate":"2021-11-05"},{"lineNumber":128,"author":{"gitId":"DmitriYam"},"content":"2. When `addClass` is called in `module` , `ScheduleList` parses the input from the user and splits the information into the","lastModifiedDate":"2021-11-05"},{"lineNumber":129,"author":{"gitId":"DmitriYam"},"content":"   relevant information. The information is then used to generate a new instance of `Schedule` which is then added to the","lastModifiedDate":"2021-11-05"},{"lineNumber":130,"author":{"gitId":"DmitriYam"},"content":"   list.","lastModifiedDate":"2021-11-05"},{"lineNumber":131,"author":{"gitId":"DmitriYam"},"content":"3. `toString()` prints out all relevant schedule information in a list format. This is done by going through the list and","lastModifiedDate":"2021-11-05"},{"lineNumber":132,"author":{"gitId":"DmitriYam"},"content":"   printing `Schedule` one after another.","lastModifiedDate":"2021-11-05"},{"lineNumber":133,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":134,"author":{"gitId":"DmitriYam"},"content":"Notes about ScheduleList","lastModifiedDate":"2021-11-05"},{"lineNumber":135,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":136,"author":{"gitId":"DmitriYam"},"content":"- ScheduleList checks that the input for the day of the week is only from the list of possible days: `MON`, `TUE`, `WED`, `THU`,","lastModifiedDate":"2021-11-05"},{"lineNumber":137,"author":{"gitId":"DmitriYam"},"content":"  `FRI`, `SAT` ,`SUN`. All other inputs will result in an exception being thrown.","lastModifiedDate":"2021-11-05"},{"lineNumber":138,"author":{"gitId":"DmitriYam"},"content":"- When a new `Schedule` class is called, `ScheduleList` ensures that the length of venue and comments are less than 16","lastModifiedDate":"2021-11-05"},{"lineNumber":139,"author":{"gitId":"DmitriYam"},"content":"  characters in length. This is to ensure that it fits within its time slot within the Timetable when printed.","lastModifiedDate":"2021-11-05"},{"lineNumber":140,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":141,"author":{"gitId":"DmitriYam"},"content":"![scheduleseq](../media/scheduleseq.png)","lastModifiedDate":"2021-11-05"},{"lineNumber":142,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":143,"author":{"gitId":"DmitriYam"},"content":"Adding Schedule to scheduleList","lastModifiedDate":"2021-11-05"},{"lineNumber":144,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":145,"author":{"gitId":"DmitriYam"},"content":"- When addclass() is called, schedule first checks if there is a duplicate schedule currently in the list. This is done","lastModifiedDate":"2021-11-05"},{"lineNumber":146,"author":{"gitId":"DmitriYam"},"content":"  by going through the whole list and checking if a schedule has the same time slot. If there exists a schedule in the","lastModifiedDate":"2021-11-05"},{"lineNumber":147,"author":{"gitId":"DmitriYam"},"content":"  same time slot, an error message is printed.","lastModifiedDate":"2021-11-05"},{"lineNumber":148,"author":{"gitId":"DmitriYam"},"content":"- If it is an empty timeslot, schedule list parses the input and checks for formatting errors within the input.","lastModifiedDate":"2021-11-05"},{"lineNumber":149,"author":{"gitId":"DmitriYam"},"content":"- A new instance of Schedule is generated and added to the schedule list.","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"DmitriYam":149}},{"path":"docs/team/jiexiong-zeng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jiexiong-zeng"},"content":"# Zeng Jiexiong - Project Portfolio Page","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"jiexiong-zeng"},"content":"## Overview","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"jiexiong-zeng"},"content":"### Summary of Contributions","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"jiexiong-zeng"},"content":"* **Code Contributed:** [RepoSense Link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003df11-1\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabAuthor\u003djiexiong-zeng\u0026tabRepo\u003dAY2122S1-CS2113T-F11-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026tabType\u003dauthorship)","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"jiexiong-zeng"},"content":"* **Enhancement Implemented:** Parser package consisting of: Parser, ListParser, DateParser, ParserChecks, Command","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"jiexiong-zeng"},"content":"  * Processes all user inputs and parses them for information, calling the corresponding methods from other classes. Checks for input validity errors (Whether the desired input exists, eg: missing date time string).","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"jiexiong-zeng"},"content":"* **Contributions to UG:** Command Summary, Reorganise structure, clean up and uniform syntax. ","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"jiexiong-zeng"},"content":"* **Contributions to DG:** Design and Implementation Parser section, Appendix B: User Stories.","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"jiexiong-zeng"},"content":"* **Contributions to team-based tasks:** ","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"jiexiong-zeng"},"content":"  * Setting up the GitHub team org/repo.","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"jiexiong-zeng"},"content":"  * Scribing to-dos in team meetings and creating corresponding issue trackers.","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"jiexiong-zeng"},"content":"  * Managing team deadlines and creating releases.","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"jiexiong-zeng"},"content":"### Developer Guide Extract","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"jiexiong-zeng"},"content":"**API** : \u003ccode\u003ecommand.parser \u003c/code\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"jiexiong-zeng"},"content":"The Parser classes is responsible for receiving user input and converting it into commands which are directly passed to","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"jiexiong-zeng"},"content":"respective classes.","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"jiexiong-zeng"},"content":"The class diagram below is an overview of relationship between Parser classes and other classes.","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"jiexiong-zeng"},"content":"![alt_text](../media/ParserClassDiagram.JPG)","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"jiexiong-zeng"},"content":"How the parsing works:","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"jiexiong-zeng"},"content":"* `NoCap` passes the user input to `Parser` which separates the input into useful information such as taskType,","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"jiexiong-zeng"},"content":"  taskDescription, Module, etc.","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"jiexiong-zeng"},"content":"* When commands include **listing tasks**, the taskDescription is passed to `ListParser` which determines the method of","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"jiexiong-zeng"},"content":"  sorting and creates filtered `OverallTaskList` and `TaskList` accordingly.","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"jiexiong-zeng"},"content":"* Otherwise, the taskDescription is passed to `Command` which calls the corresponding commands in `SemesterList`,","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"jiexiong-zeng"},"content":"  `Semester` ,`ModuleList`, `Module` , `Task`, `Gradable Task`. For clarity purposes, associations are shown but","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"jiexiong-zeng"},"content":"  dependencies are not.","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"jiexiong-zeng"},"content":"* `ParserChecks` is a utility class that handles various error checking and string searching methods such as","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"jiexiong-zeng"},"content":"  `ParserSearch#getTaskFromIndex()` and `ParserSearch#getTaskFromKeyword()`. `Command` utilizes these methods to verify","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"jiexiong-zeng"},"content":"  the Strings before passing them to other classes.","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"jiexiong-zeng"},"content":"  *In NoCap, Parser verifies the validity of input (Whether it exists in the right format). Input content is verified by","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"jiexiong-zeng"},"content":"  individual classes for correctness.*","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"jiexiong-zeng"},"content":"* `DateParser` handles parsing String into LocalDateTime format and displaying LocalDateTime as String. It is utilized","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"jiexiong-zeng"},"content":"  by `Task`. Additional date formats can be added in `DateParser#inputFormatter()`","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"jiexiong-zeng"},"content":"Below is a step by step example of how the parser receives and decipher a user input. In this example, the user enters","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"jiexiong-zeng"},"content":"`list task sortbydate`.","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"jiexiong-zeng"},"content":"The Sequence Diagram below illustrates the process","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"jiexiong-zeng"},"content":"![alt_text](../media/ParserSequenceDiagram.png)  ","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"jiexiong-zeng"},"content":"**Note**: The alternate paths are omitted from the diagram for clarity.\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"jiexiong-zeng"},"content":"Step 1: The User launches the application. `NoCap` creates a new `Parser` instance through the constructor and `Parser`","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"jiexiong-zeng"},"content":"creates `ListParser`.\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"jiexiong-zeng"},"content":"Step 2: The application waits for User input. User enters `list task sortbydate`. `NoCap` passes the input to `Parser`","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"jiexiong-zeng"},"content":"through `Parser#chooseTask()`.\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"jiexiong-zeng"},"content":"Step 3: `splitInput` is called for the first time and splits the user input into `list` and `task sortbydate`.","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"jiexiong-zeng"},"content":"\u003e **TaskType** is set to `list`, and **TaskDescription** is set to `task sortbydate`.","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"jiexiong-zeng"},"content":"**TaskType** matches a possible command String.","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"jiexiong-zeng"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"jiexiong-zeng"},"content":"Step 4: `splitInput` is called for the second time and splits the user input into `task` and `sortbydate`.","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"jiexiong-zeng"},"content":"\u003e **TaskType** is set to `task`, and **TaskDescription** is set to `sortbydate`.","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"jiexiong-zeng"},"content":"**TaskType** and **TaskDescription** are passed to `ListParser` through `ListParser#overallListParser`.","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"jiexiong-zeng"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"jiexiong-zeng"},"content":"Step 5: `overallListParser` creates an `OverallTaskList`. Through nested switch cases, **TaskType** and **TaskDescription** are matched, and the corresponding method `OverallTaskList#sortByDateAndPrint()` is called. As the","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"jiexiong-zeng"},"content":"name implies, this method sorts all tasks by date and prints them.","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"jiexiong-zeng"},"content":"\u003e If **TaskType** does not match, then an error message is displayed.  ","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"jiexiong-zeng"},"content":"\u003e If **TaskDescription** does not match, all tasks are printed by default.","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"jiexiong-zeng"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"jiexiong-zeng"},"content":"Step 6: The full command is carried out and the application returns to NoCap and waits for new User Input.\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":79,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"jiexiong-zeng"},"content":"The diagram below illustrates the `splitString` process:","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"jiexiong-zeng"},"content":"![alt_text](../media/splitStringDiagram.JPG)","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"jiexiong-zeng":82}},{"path":"docs/team/naijie2108.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"# Yeat Nai Jie - Project Portfolio Page","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"## Overview","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"### Summary of Contributions","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"* **Code contributed:** [Reposense Link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dnaijie2108\u0026tabRepo\u003dAY2122S1-CS2113T-F11-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"* **Enhancements Implemented** : ","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"  * `storage` package","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"    * Consists of utility classes `StorageEncoder` and `StorageDecoder`, which deals with encoding and decoding the application data","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"      into a JSON file.","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"    * Implemented using a 3rd party library `Jackson Databind` ","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"    * Spent time learning how to use and integrate the 3rd party library with the application, such as adding appropriate getters and constructors to classes ","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"naijie2108"},"content":"      in order to bypass permission issues.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"naijie2108"},"content":"    * Integrated and modified the classes as the project went on, such as learning to deal with non-native","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"    data types like `LocalDateTime`","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"naijie2108"},"content":"  * `OverallTask` and `OverallTaskList` classes","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"naijie2108"},"content":"    * Classes used for listing all tasks in a semester","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"naijie2108"},"content":"    * Includes methods which allows multiple ways of filtering and sorting of semester tasks.","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"naijie2108"},"content":"    * Integrated and modified classes as project went on to fit with other classes","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"naijie2108"},"content":"    * Added constructors which construct `OverallTask` from either `Task` or `GradableTask` objects.","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"naijie2108"},"content":"    * Added custom comparators for better sorting of tasks","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"naijie2108"},"content":"  * `exceptions` package","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"naijie2108"},"content":"    * Created a framework for custom exceptions to be used by other team members.","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"naijie2108"},"content":"    * Consist of two classes `NoCapExceptions` and `ExceptionMessages`.","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"naijie2108"},"content":"* **Contributions to the UG** :","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"naijie2108"},"content":"  * Features: Listing all tasks ","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"naijie2108"},"content":"  * Features: Saving data section","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"naijie2108"},"content":"  * Features: Loading data section","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"naijie2108"},"content":"* **Contributions to the DG** :","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"naijie2108"},"content":"  * Acknowledgements ","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"naijie2108"},"content":"  * Design and implementation: Storage","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"naijie2108"},"content":"  * Design and implementation: OverallTaskList and OverallTask","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"naijie2108"},"content":"  * Appendix A: Product Scope","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"naijie2108"},"content":"  * Appendix D: Glossary","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"naijie2108"},"content":"  * Appendix E: Launch","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"naijie2108"},"content":"  * Appendix E: Saving/Loading data","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"naijie2108"},"content":"  * Appendix E: List tasks in a semester","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"naijie2108"},"content":"* **Contributions to team-based tasks** :","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"naijie2108"},"content":"  * Managing gradle build file (`build.gradle`) in adding 3rd party libraries and assertions","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"naijie2108"},"content":"  * Setting up milestone `v2.1`","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"naijie2108"},"content":"  * Contacting teaching team to enquire on doubts about project","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"naijie2108"},"content":"  * Keep track of deadlines and milestones.","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"naijie2108"},"content":"* **Review/Mentoring Contributions**","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"naijie2108"},"content":"  * Help teammates when faced with technical issues by meeting up and helping to debug, ","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"naijie2108"},"content":"    such as debugging failing IO redirection tests and failing JUNIT tests.","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"naijie2108"},"content":"  ","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"naijie2108"},"content":"---","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"naijie2108"},"content":"## Developer Guide Extract","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"naijie2108"},"content":"## Acknowledgements","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"naijie2108"},"content":"Third party libraries:","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"naijie2108"},"content":"- [Jackson Databind](https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind)","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"naijie2108"},"content":"- [Jackson Datatype-jsr310](https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310)","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"naijie2108"},"content":"- [Jackson Annotations](https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations)","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"naijie2108"},"content":"## Storage","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"naijie2108"},"content":"**API** : `command.storage`","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"naijie2108"},"content":"The Storage component saves data of NoCap into JSON format, and reads them back into corresponding objects when needed","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"naijie2108"},"content":"using a 3rd party library Jackson Databind.","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"naijie2108"},"content":"It consists of 2 utility classes StorageDecoder and StorageEncoder. StorageEncoder is used to encode the parent object","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"naijie2108"},"content":"`SemesterList` into a JSON file. StorageDecoder decodes a JSON file into a `SemesterList `object","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"naijie2108"},"content":"How the `StorageEncoder` class works:","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"naijie2108"},"content":"![alt_text](../media/StorageEncoderSequenceDiagram.png \"image_tooltip\")","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"naijie2108"},"content":"1. The static method `encodeAndSaveSemesterListToJson()` from `StorageEncoder` is called when NoCap data needs to be","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"naijie2108"},"content":"   saved","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"naijie2108"},"content":"2. If the save file directory has not been created yet, it is first created in order to store the save file","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"naijie2108"},"content":"3. Similarly, an empty file is created to store the data if it has not been created yet","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"naijie2108"},"content":"4. The parent object `SemesterList` is passed to the method to be converted into a JSON file with an `ObjectMapper`","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"naijie2108"},"content":"   object from the  `jackson-databind` library","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"naijie2108"},"content":"5. Upon completion, the data file is saved in a default data directory.","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"naijie2108"},"content":"**How the `StorageDecoder` class works:**","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"naijie2108"},"content":"![alt_text](../media/StorageDecoderSequenceDiagram.png \"image_tooltip\")","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"naijie2108"},"content":"1. The static method `decodeJsonToSemesterList()` from `StorageDecoder` is called when NoCap data needs to be loaded","lastModifiedDate":"2021-11-06"},{"lineNumber":87,"author":{"gitId":"naijie2108"},"content":"   from the save file","lastModifiedDate":"2021-11-06"},{"lineNumber":88,"author":{"gitId":"naijie2108"},"content":"2. If there is no save file available in the default data directory, a new `SemesterList `object is created and returned","lastModifiedDate":"2021-11-06"},{"lineNumber":89,"author":{"gitId":"naijie2108"},"content":"   to the caller","lastModifiedDate":"2021-11-06"},{"lineNumber":90,"author":{"gitId":"naijie2108"},"content":"3. Otherwise, an `ObjectMapper` object from the  `jackson-databind` library is used to deserialize the JSON save file","lastModifiedDate":"2021-11-06"},{"lineNumber":91,"author":{"gitId":"naijie2108"},"content":"   into a `SemesterList` object to be returned to the caller","lastModifiedDate":"2021-11-06"},{"lineNumber":92,"author":{"gitId":"naijie2108"},"content":"   \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":93,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"naijie2108"},"content":"## OverallTaskList","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"naijie2108"},"content":"**API** : `task.OverallTasklist`","lastModifiedDate":"2021-11-06"},{"lineNumber":97,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":98,"author":{"gitId":"naijie2108"},"content":"![alt_text](../media/OverallTaskClassDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"naijie2108"},"content":"_Class diagram for OverallTask and OverallTaskList_","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"naijie2108"},"content":"**Note**: Some methods are omitted from the class diagram to improve clarity","lastModifiedDate":"2021-11-06"},{"lineNumber":103,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":104,"author":{"gitId":"naijie2108"},"content":"The `OverallTaskList` class is instantiated from `ListParser` only when the end user needs to list available tasks in","lastModifiedDate":"2021-11-06"},{"lineNumber":105,"author":{"gitId":"naijie2108"},"content":"a `Semester`.","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"naijie2108"},"content":"How the `OverallTaskList` class works:","lastModifiedDate":"2021-11-06"},{"lineNumber":108,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"naijie2108"},"content":"1. `OverallTask` objects (explained further under `OverallTask`) are stored in an ArrayList `overallTaskList.`","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"naijie2108"},"content":"2. Both `Task` and `GradableTask` objects are converted to `OverallTask` objects first before being inserted into","lastModifiedDate":"2021-11-06"},{"lineNumber":111,"author":{"gitId":"naijie2108"},"content":"   `OverallTaskList`.","lastModifiedDate":"2021-11-06"},{"lineNumber":112,"author":{"gitId":"naijie2108"},"content":"3. When the `OverallTaskList` object is instantiated, a `ModuleList` object from a semester is passed to its","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"naijie2108"},"content":"   constructor.","lastModifiedDate":"2021-11-06"},{"lineNumber":114,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":115,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":116,"author":{"gitId":"naijie2108"},"content":"   ![alt_text](../media/OverallTaskListConstructorSequenceDiagram.png \"image_tooltip\")","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"naijie2108"},"content":"4. The constructor calls the method `addAllModuleListTasks(module list)` which converts and adds all the tasks in the","lastModifiedDate":"2021-11-06"},{"lineNumber":118,"author":{"gitId":"naijie2108"},"content":"   module list into `OverallTaskList`.","lastModifiedDate":"2021-11-06"},{"lineNumber":119,"author":{"gitId":"naijie2108"},"content":"5. Once the object is instantiated, the following methods can be called to sort and print the tasks in the","lastModifiedDate":"2021-11-06"},{"lineNumber":120,"author":{"gitId":"naijie2108"},"content":"   ArrayList `overallTaskList`. All sorting and filtering is done via `Java Streams`, and method details are omitted.","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"naijie2108"},"content":"   * `sortByDateAndPrint() - Print all tasks sorted by deadline`","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"naijie2108"},"content":"   * `sortByStatusAndPrint() - Print all tasks sorted by status(done)`","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"naijie2108"},"content":"   * `printWeeklyTasks() - Print tasks due in a week`","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"naijie2108"},"content":"   * `printMonthlyTasks() - Print tasks due in a month`","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"naijie2108"},"content":"   * `printYearlyTasks() - Print tasks due in a year`","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"naijie2108"},"content":"   * `printAllTasks() - Print all tasks without sorting`","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"naijie2108"},"content":"   * `printGradableTasks() - Print all gradable tasks`","lastModifiedDate":"2021-11-06"},{"lineNumber":129,"author":{"gitId":"naijie2108"},"content":"   * `printNormalTasks() - Print all non-gradable tasks`","lastModifiedDate":"2021-11-06"},{"lineNumber":130,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"naijie2108"},"content":"Notes about `OverallTaskList`","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"naijie2108"},"content":"* Once `ListParser` is done using the object, it is deleted and the task list is not stored anywhere. The reason for","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"naijie2108"},"content":"  this is to reduce coupling between objects and remove the need to update separate task lists whenever tasks are added","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"naijie2108"},"content":"  to `Modules`.","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"naijie2108"},"content":"  \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":137,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"naijie2108"},"content":"## OverallTask","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"naijie2108"},"content":"**API** : `task.OverallTask`","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"naijie2108"},"content":"`OverallTask` objects are stored in a `OverallTaskList` object when the end user needs to list available tasks in","lastModifiedDate":"2021-11-06"},{"lineNumber":143,"author":{"gitId":"naijie2108"},"content":"a `Semester`. It stores information from `GradableTask/Task `objects together with their module name.","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":145,"author":{"gitId":"naijie2108"},"content":"`OverallTask` object stores the following for each task:","lastModifiedDate":"2021-11-04"},{"lineNumber":146,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":147,"author":{"gitId":"naijie2108"},"content":"1. `description`","lastModifiedDate":"2021-11-04"},{"lineNumber":148,"author":{"gitId":"naijie2108"},"content":"2. `Date`","lastModifiedDate":"2021-11-04"},{"lineNumber":149,"author":{"gitId":"naijie2108"},"content":"3. `isDone`","lastModifiedDate":"2021-11-04"},{"lineNumber":150,"author":{"gitId":"naijie2108"},"content":"4. `isLate`","lastModifiedDate":"2021-11-04"},{"lineNumber":151,"author":{"gitId":"naijie2108"},"content":"5. `Deadline`","lastModifiedDate":"2021-11-04"},{"lineNumber":152,"author":{"gitId":"naijie2108"},"content":"6. `isGradable`","lastModifiedDate":"2021-11-04"},{"lineNumber":153,"author":{"gitId":"naijie2108"},"content":"7. `Weightage`","lastModifiedDate":"2021-11-04"},{"lineNumber":154,"author":{"gitId":"naijie2108"},"content":"8. `moduleName`","lastModifiedDate":"2021-11-04"},{"lineNumber":155,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":156,"author":{"gitId":"naijie2108"},"content":"How the `OverallTask` component works:","lastModifiedDate":"2021-11-04"},{"lineNumber":157,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":158,"author":{"gitId":"naijie2108"},"content":"1. It inherits from `Task`, with additional attributes `isGradable`, `weightage` and `moduleName`.","lastModifiedDate":"2021-11-06"},{"lineNumber":159,"author":{"gitId":"naijie2108"},"content":"2. The attributes `isGradable`, `weightage` are added to provide more information for gradable tasks, while `moduleName`","lastModifiedDate":"2021-11-06"},{"lineNumber":160,"author":{"gitId":"naijie2108"},"content":"   is added to display module information.","lastModifiedDate":"2021-11-04"},{"lineNumber":161,"author":{"gitId":"naijie2108"},"content":"3. It can be instantiated with 2 different constructors:","lastModifiedDate":"2021-11-04"},{"lineNumber":162,"author":{"gitId":"naijie2108"},"content":"    * `OverallTask(task: Task, moduleName: String)` - Instantiates using a `Task` object \u003cbr/\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":163,"author":{"gitId":"naijie2108"},"content":"      ![alt_text](../media/OverallTaskConstructorTaskSequenceDiagram.png \"image_tooltip\")","lastModifiedDate":"2021-11-04"},{"lineNumber":164,"author":{"gitId":"naijie2108"},"content":"    * `OverallTask(gradableTask:GradableTask, moduleName: String)` - Instantiates using a `GradableTask `object \u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":165,"author":{"gitId":"naijie2108"},"content":"      ![alt_text](../media/OverallTaskConstructorGradableTaskSequenceDiagram.png \"image_tooltip\")","lastModifiedDate":"2021-11-04"},{"lineNumber":166,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":167,"author":{"gitId":"naijie2108"},"content":"4. During instantiation, information from `Task/GradableTask` objects are added to the `OverallTask` object together","lastModifiedDate":"2021-11-04"},{"lineNumber":168,"author":{"gitId":"naijie2108"},"content":"   with their `moduleName` .","lastModifiedDate":"2021-11-06"},{"lineNumber":169,"author":{"gitId":"naijie2108"},"content":"5. Calling the `toString()` method generates a string containing task information together with its `moduleName`.","lastModifiedDate":"2021-11-04"},{"lineNumber":170,"author":{"gitId":"naijie2108"},"content":"   \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":171,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":172,"author":{"gitId":"naijie2108"},"content":"# Appendix A: Product Scope","lastModifiedDate":"2021-11-04"},{"lineNumber":173,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":174,"author":{"gitId":"naijie2108"},"content":"**Target User Profile:**","lastModifiedDate":"2021-11-04"},{"lineNumber":175,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":176,"author":{"gitId":"naijie2108"},"content":"* NUS student","lastModifiedDate":"2021-11-04"},{"lineNumber":177,"author":{"gitId":"naijie2108"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2021-11-04"},{"lineNumber":178,"author":{"gitId":"naijie2108"},"content":"* can type fast","lastModifiedDate":"2021-11-04"},{"lineNumber":179,"author":{"gitId":"naijie2108"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2021-11-04"},{"lineNumber":180,"author":{"gitId":"naijie2108"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2021-11-04"},{"lineNumber":181,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":182,"author":{"gitId":"naijie2108"},"content":"**Value Proposition:**","lastModifiedDate":"2021-11-04"},{"lineNumber":183,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":184,"author":{"gitId":"naijie2108"},"content":"A centralized platform which allows NUS Students to carry out their learning management without needing to frequently","lastModifiedDate":"2021-11-06"},{"lineNumber":185,"author":{"gitId":"naijie2108"},"content":"switch between multiple tools or applications such as NUSMods, Luminus, Sticky Notes etc.","lastModifiedDate":"2021-11-06"},{"lineNumber":186,"author":{"gitId":"naijie2108"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":187,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":188,"author":{"gitId":"naijie2108"},"content":"# Appendix D: Glossary","lastModifiedDate":"2021-11-06"},{"lineNumber":189,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":190,"author":{"gitId":"naijie2108"},"content":"* **Command Line Interface(CLI)** - A command-line interface (CLI) processes commands to a computer program in the form","lastModifiedDate":"2021-11-06"},{"lineNumber":191,"author":{"gitId":"naijie2108"},"content":"  of lines of text(From [Wikipedia](https://en.wikipedia.org/wiki/Command-line_interface)).","lastModifiedDate":"2021-11-06"},{"lineNumber":192,"author":{"gitId":"naijie2108"},"content":"* **Mainstream Operating Systems(OS)** - Windows, Linux, Unix, OS-X","lastModifiedDate":"2021-11-06"},{"lineNumber":193,"author":{"gitId":"naijie2108"},"content":"  \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":194,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":195,"author":{"gitId":"naijie2108"},"content":"# Appendix E: Instructions for Manual Testing","lastModifiedDate":"2021-11-06"},{"lineNumber":196,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":197,"author":{"gitId":"naijie2108"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2021-11-06"},{"lineNumber":198,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":199,"author":{"gitId":"naijie2108"},"content":"**Note:** These instructions only provide a starting point for testers to work on, testers are expected to do more","lastModifiedDate":"2021-11-06"},{"lineNumber":200,"author":{"gitId":"naijie2108"},"content":"exploratory testing.","lastModifiedDate":"2021-11-06"},{"lineNumber":201,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":202,"author":{"gitId":"naijie2108"},"content":"## Launch","lastModifiedDate":"2021-11-06"},{"lineNumber":203,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":204,"author":{"gitId":"naijie2108"},"content":"1. Initial launch","lastModifiedDate":"2021-11-06"},{"lineNumber":205,"author":{"gitId":"naijie2108"},"content":"    1. Download the JAR file and copy it into an empty folder","lastModifiedDate":"2021-11-06"},{"lineNumber":206,"author":{"gitId":"naijie2108"},"content":"    2. Open up your terminal, and navigate to the folder containing the JAR file","lastModifiedDate":"2021-11-06"},{"lineNumber":207,"author":{"gitId":"naijie2108"},"content":"    3. Type the following command:","lastModifiedDate":"2021-11-06"},{"lineNumber":208,"author":{"gitId":"naijie2108"},"content":"   ```","lastModifiedDate":"2021-11-06"},{"lineNumber":209,"author":{"gitId":"naijie2108"},"content":"   java -jar NoCap.jar","lastModifiedDate":"2021-11-06"},{"lineNumber":210,"author":{"gitId":"naijie2108"},"content":"   ```","lastModifiedDate":"2021-11-06"},{"lineNumber":211,"author":{"gitId":"naijie2108"},"content":"   **Note**: It is important that you navigate to the directory containing the JAR file first before running the","lastModifiedDate":"2021-11-06"},{"lineNumber":212,"author":{"gitId":"naijie2108"},"content":"   application, as it may affect the location of the save file.","lastModifiedDate":"2021-11-06"},{"lineNumber":213,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":214,"author":{"gitId":"naijie2108"},"content":"## Saving/Loading data","lastModifiedDate":"2021-11-06"},{"lineNumber":215,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":216,"author":{"gitId":"naijie2108"},"content":"1. Automatic saving","lastModifiedDate":"2021-11-06"},{"lineNumber":217,"author":{"gitId":"naijie2108"},"content":"    1. Carry out any command that adds/modifies data in the application, e.g `add CS2102`, or simply exit the","lastModifiedDate":"2021-11-06"},{"lineNumber":218,"author":{"gitId":"naijie2108"},"content":"       application using the command `bye`.","lastModifiedDate":"2021-11-06"},{"lineNumber":219,"author":{"gitId":"naijie2108"},"content":"    2. Expected: A JSON file is created/updated automatically in the data folder located in folder containing the JAR","lastModifiedDate":"2021-11-06"},{"lineNumber":220,"author":{"gitId":"naijie2108"},"content":"       file, provided the instructions in `Launch` is followed correctly.","lastModifiedDate":"2021-11-06"},{"lineNumber":221,"author":{"gitId":"naijie2108"},"content":"2. No save file exists","lastModifiedDate":"2021-11-06"},{"lineNumber":222,"author":{"gitId":"naijie2108"},"content":"    1. Prerequisites: Make sure the data folder does not exist/is deleted from the folder containing the JAR file.","lastModifiedDate":"2021-11-06"},{"lineNumber":223,"author":{"gitId":"naijie2108"},"content":"    2. Run the application as stated in `Launch`","lastModifiedDate":"2021-11-06"},{"lineNumber":224,"author":{"gitId":"naijie2108"},"content":"    3. Expected: Application starts with an empty template and shows the following message","lastModifiedDate":"2021-11-06"},{"lineNumber":225,"author":{"gitId":"naijie2108"},"content":"       ```","lastModifiedDate":"2021-11-06"},{"lineNumber":226,"author":{"gitId":"naijie2108"},"content":"       No save file found, starting with an empty template","lastModifiedDate":"2021-11-06"},{"lineNumber":227,"author":{"gitId":"naijie2108"},"content":"       Welcome to NoCap","lastModifiedDate":"2021-11-06"},{"lineNumber":228,"author":{"gitId":"naijie2108"},"content":"       ```","lastModifiedDate":"2021-11-06"},{"lineNumber":229,"author":{"gitId":"naijie2108"},"content":"3. Save file exists","lastModifiedDate":"2021-11-06"},{"lineNumber":230,"author":{"gitId":"naijie2108"},"content":"    1. Prerequisites: Make sure that a save file already exists in the data folder that is located in the folder","lastModifiedDate":"2021-11-06"},{"lineNumber":231,"author":{"gitId":"naijie2108"},"content":"       containing the JAR file. If not, simply carry out any command that adds/modifies data in the application,","lastModifiedDate":"2021-11-06"},{"lineNumber":232,"author":{"gitId":"naijie2108"},"content":"       e.g `add CS2102`(see 1. Automatic Saving), and the save file will be created automatically.","lastModifiedDate":"2021-11-06"},{"lineNumber":233,"author":{"gitId":"naijie2108"},"content":"    2. Run the application as stated in `Launch`","lastModifiedDate":"2021-11-06"},{"lineNumber":234,"author":{"gitId":"naijie2108"},"content":"    3. Expected: Application loads the save file when starting the application and shows the following message","lastModifiedDate":"2021-11-06"},{"lineNumber":235,"author":{"gitId":"naijie2108"},"content":"   ```","lastModifiedDate":"2021-11-06"},{"lineNumber":236,"author":{"gitId":"naijie2108"},"content":"   Data loaded successfully","lastModifiedDate":"2021-11-06"},{"lineNumber":237,"author":{"gitId":"naijie2108"},"content":"   Welcome to NoCap","lastModifiedDate":"2021-11-06"},{"lineNumber":238,"author":{"gitId":"naijie2108"},"content":"   ```","lastModifiedDate":"2021-11-06"},{"lineNumber":239,"author":{"gitId":"naijie2108"},"content":"4. Corrupted save file","lastModifiedDate":"2021-11-06"},{"lineNumber":240,"author":{"gitId":"naijie2108"},"content":"    1. Prerequisites: Make sure that a save file already exists in the data folder that is located in the folder","lastModifiedDate":"2021-11-06"},{"lineNumber":241,"author":{"gitId":"naijie2108"},"content":"       containing the JAR file If not, simply carry out any command that adds/modifies data in the application,","lastModifiedDate":"2021-11-06"},{"lineNumber":242,"author":{"gitId":"naijie2108"},"content":"       e.g `add CS2102`(see 1. Automatic Saving), and the save file will be created automatically.","lastModifiedDate":"2021-11-06"},{"lineNumber":243,"author":{"gitId":"naijie2108"},"content":"    2. To simulate data corruption, remove lines to cause syntax errors in the JSON file, such as lines containing `{` and `}`.","lastModifiedDate":"2021-11-06"},{"lineNumber":244,"author":{"gitId":"naijie2108"},"content":"    3. Run the application","lastModifiedDate":"2021-11-06"},{"lineNumber":245,"author":{"gitId":"naijie2108"},"content":"    4. Expected: An error message is shown and application starts with an empty template, showing the message below:","lastModifiedDate":"2021-11-06"},{"lineNumber":246,"author":{"gitId":"naijie2108"},"content":"   ```","lastModifiedDate":"2021-11-06"},{"lineNumber":247,"author":{"gitId":"naijie2108"},"content":"   Error reading save file, creating new template","lastModifiedDate":"2021-11-06"},{"lineNumber":248,"author":{"gitId":"naijie2108"},"content":"   Welcome to NoCap","lastModifiedDate":"2021-11-06"},{"lineNumber":249,"author":{"gitId":"naijie2108"},"content":"   ```","lastModifiedDate":"2021-11-06"},{"lineNumber":250,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":251,"author":{"gitId":"naijie2108"},"content":"## List tasks in a semester","lastModifiedDate":"2021-11-06"},{"lineNumber":252,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":253,"author":{"gitId":"naijie2108"},"content":"1. List tasks when there are no available tasks","lastModifiedDate":"2021-11-06"},{"lineNumber":254,"author":{"gitId":"naijie2108"},"content":"    1. Prerequisites: There should be no tasks added to modules in the current semester yet.","lastModifiedDate":"2021-11-06"},{"lineNumber":255,"author":{"gitId":"naijie2108"},"content":"    2. Run the command `list task`","lastModifiedDate":"2021-11-06"},{"lineNumber":256,"author":{"gitId":"naijie2108"},"content":"    3. Expected: No tasks are shown and the following message is shown:","lastModifiedDate":"2021-11-06"},{"lineNumber":257,"author":{"gitId":"naijie2108"},"content":"       ```","lastModifiedDate":"2021-11-06"},{"lineNumber":258,"author":{"gitId":"naijie2108"},"content":"       All tasks: ","lastModifiedDate":"2021-11-06"},{"lineNumber":259,"author":{"gitId":"naijie2108"},"content":"       You have no tasks","lastModifiedDate":"2021-11-06"},{"lineNumber":260,"author":{"gitId":"naijie2108"},"content":"       ```","lastModifiedDate":"2021-11-06"},{"lineNumber":261,"author":{"gitId":"naijie2108"},"content":"2. List tasks with optional arguments","lastModifiedDate":"2021-11-06"},{"lineNumber":262,"author":{"gitId":"naijie2108"},"content":"    1. Prerequisites: There should be tasks added to modules in the semester beforehand. Can be checked by","lastModifiedDate":"2021-11-06"},{"lineNumber":263,"author":{"gitId":"naijie2108"},"content":"       running `list task`. If there are no tasks in the semester, add in tasks first(including both gradable and","lastModifiedDate":"2021-11-06"},{"lineNumber":264,"author":{"gitId":"naijie2108"},"content":"       non-gradable tasks)","lastModifiedDate":"2021-11-06"},{"lineNumber":265,"author":{"gitId":"naijie2108"},"content":"    2. Run list task command with optional arguments, as specified in the user guide, e.g. `list task gradable`","lastModifiedDate":"2021-11-06"},{"lineNumber":266,"author":{"gitId":"naijie2108"},"content":"    3. Expected: Tasks are shown accordingly, depending on the optional argument","lastModifiedDate":"2021-11-06"},{"lineNumber":267,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":268,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":269,"author":{"gitId":"naijie2108"},"content":"## User Guide Extract","lastModifiedDate":"2021-11-04"},{"lineNumber":270,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":271,"author":{"gitId":"naijie2108"},"content":"### Listing all tasks : `list task`","lastModifiedDate":"2021-11-04"},{"lineNumber":272,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":273,"author":{"gitId":"naijie2108"},"content":"Shows a list of all tasks within the current semester","lastModifiedDate":"2021-11-06"},{"lineNumber":274,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":275,"author":{"gitId":"naijie2108"},"content":"Additional format: `list task \u003coptional argument\u003e`","lastModifiedDate":"2021-11-04"},{"lineNumber":276,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":277,"author":{"gitId":"naijie2108"},"content":"By default, all tasks in the current semester are listed, but this can be customised by adding optional arguments.","lastModifiedDate":"2021-11-04"},{"lineNumber":278,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":279,"author":{"gitId":"naijie2108"},"content":"\u0026lt;optional argument\u003e includes:","lastModifiedDate":"2021-11-04"},{"lineNumber":280,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":281,"author":{"gitId":"naijie2108"},"content":"* sortbydate - Sort tasks by due date.","lastModifiedDate":"2021-11-04"},{"lineNumber":282,"author":{"gitId":"naijie2108"},"content":"* sortbystatus - Sort tasks by status, displaying unfinished tasks first.","lastModifiedDate":"2021-11-04"},{"lineNumber":283,"author":{"gitId":"naijie2108"},"content":"* gradable - list gradable tasks only.","lastModifiedDate":"2021-11-04"},{"lineNumber":284,"author":{"gitId":"naijie2108"},"content":"* normal - list non-gradable tasks only.","lastModifiedDate":"2021-11-04"},{"lineNumber":285,"author":{"gitId":"naijie2108"},"content":"* w - list tasks due within the next week.","lastModifiedDate":"2021-11-04"},{"lineNumber":286,"author":{"gitId":"naijie2108"},"content":"* m - list tasks due within the next month.","lastModifiedDate":"2021-11-04"},{"lineNumber":287,"author":{"gitId":"naijie2108"},"content":"* y - list tasks due within the next year.","lastModifiedDate":"2021-11-04"},{"lineNumber":288,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":289,"author":{"gitId":"naijie2108"},"content":"Tasks are listed in the format:","lastModifiedDate":"2021-11-04"},{"lineNumber":290,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":291,"author":{"gitId":"naijie2108"},"content":"`[Module Code][Gradable][Lateness][Done] \u003cdescription\u003e by: \u003cdeadline\u003e [Weightage]`","lastModifiedDate":"2021-11-06"},{"lineNumber":292,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":293,"author":{"gitId":"naijie2108"},"content":"* [Module Name] - Name of the module","lastModifiedDate":"2021-11-04"},{"lineNumber":294,"author":{"gitId":"naijie2108"},"content":"* [Gradable] - Shows `[G]` if the task is gradable, and `[ ]` if the task is non-gradable.","lastModifiedDate":"2021-11-06"},{"lineNumber":295,"author":{"gitId":"naijie2108"},"content":"* [Lateness] - Shows `[LATE]` if the task is overdue. Only shows up for overdue tasks","lastModifiedDate":"2021-11-06"},{"lineNumber":296,"author":{"gitId":"naijie2108"},"content":"* [Done] - Shows `[X]` if the task is done, and `[ ]` if the task isn’t done yet.","lastModifiedDate":"2021-11-06"},{"lineNumber":297,"author":{"gitId":"naijie2108"},"content":"* \u0026lt;description\u003e - Description of the task","lastModifiedDate":"2021-11-04"},{"lineNumber":298,"author":{"gitId":"naijie2108"},"content":"* \u0026lt;deadline\u003e - Deadline of the task","lastModifiedDate":"2021-11-04"},{"lineNumber":299,"author":{"gitId":"naijie2108"},"content":"* [Weightage] - Weightage of the task, if it is gradable. Only shows up for gradable tasks.","lastModifiedDate":"2021-11-04"},{"lineNumber":300,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":301,"author":{"gitId":"naijie2108"},"content":"Example tasks:","lastModifiedDate":"2021-11-06"},{"lineNumber":302,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":303,"author":{"gitId":"naijie2108"},"content":"1. `[CS2132][G][ ] Assignment by: 16 Dec 2021 12:00 AM [Weightage: 50%]`","lastModifiedDate":"2021-11-06"},{"lineNumber":304,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":305,"author":{"gitId":"naijie2108"},"content":"    * Belongs to the module CS2132","lastModifiedDate":"2021-11-06"},{"lineNumber":306,"author":{"gitId":"naijie2108"},"content":"    * Gradable","lastModifiedDate":"2021-11-06"},{"lineNumber":307,"author":{"gitId":"naijie2108"},"content":"    * Not done yet","lastModifiedDate":"2021-11-06"},{"lineNumber":308,"author":{"gitId":"naijie2108"},"content":"    * Due on 16 Dec 2021 12:00 AM","lastModifiedDate":"2021-11-06"},{"lineNumber":309,"author":{"gitId":"naijie2108"},"content":"    * Has a weightage of 50%.","lastModifiedDate":"2021-11-06"},{"lineNumber":310,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":311,"author":{"gitId":"naijie2108"},"content":"2. `[CS2132][ ][X] Quiz by: 16 Nov 2021 12:00 AM`","lastModifiedDate":"2021-11-06"},{"lineNumber":312,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":313,"author":{"gitId":"naijie2108"},"content":"    * Belongs to the module CS2132","lastModifiedDate":"2021-11-06"},{"lineNumber":314,"author":{"gitId":"naijie2108"},"content":"    * Non-Gradable","lastModifiedDate":"2021-11-06"},{"lineNumber":315,"author":{"gitId":"naijie2108"},"content":"    * Done","lastModifiedDate":"2021-11-06"},{"lineNumber":316,"author":{"gitId":"naijie2108"},"content":"    * Due on 16 Nov 2021 12:00 AM","lastModifiedDate":"2021-11-06"},{"lineNumber":317,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":318,"author":{"gitId":"naijie2108"},"content":"Example commands with expected output:","lastModifiedDate":"2021-11-04"},{"lineNumber":319,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":320,"author":{"gitId":"naijie2108"},"content":"Assuming tasks have been added to modules beforehand:","lastModifiedDate":"2021-11-04"},{"lineNumber":321,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":322,"author":{"gitId":"naijie2108"},"content":"* `list task`","lastModifiedDate":"2021-11-04"},{"lineNumber":323,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":324,"author":{"gitId":"naijie2108"},"content":"    ```","lastModifiedDate":"2021-11-04"},{"lineNumber":325,"author":{"gitId":"naijie2108"},"content":"    All tasks: ","lastModifiedDate":"2021-11-04"},{"lineNumber":326,"author":{"gitId":"naijie2108"},"content":"    1. [CS2132][G][ ] Assignment by: 16 Dec 2021 12:00 AM [Weightage: 50%]","lastModifiedDate":"2021-11-04"},{"lineNumber":327,"author":{"gitId":"naijie2108"},"content":"    2. [CS2132][G][LATE][ ] asdf by: 10 Dec 2000 12:00 AM [Weightage: 50%]","lastModifiedDate":"2021-11-04"},{"lineNumber":328,"author":{"gitId":"naijie2108"},"content":"    ```","lastModifiedDate":"2021-11-04"},{"lineNumber":329,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":330,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":331,"author":{"gitId":"naijie2108"},"content":"* `list task sortbydate`","lastModifiedDate":"2021-11-04"},{"lineNumber":332,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":333,"author":{"gitId":"naijie2108"},"content":"  ```","lastModifiedDate":"2021-11-04"},{"lineNumber":334,"author":{"gitId":"naijie2108"},"content":"  Tasks sorted by date: ","lastModifiedDate":"2021-11-04"},{"lineNumber":335,"author":{"gitId":"naijie2108"},"content":"  1. [CS2132][G][LATE][ ] asdf by: 10 Dec 2000 12:00 AM [Weightage: 50%]","lastModifiedDate":"2021-11-04"},{"lineNumber":336,"author":{"gitId":"naijie2108"},"content":"  2. [CS2132][G][ ] Assignment by: 16 Dec 2021 12:00 AM [Weightage: 50%]","lastModifiedDate":"2021-11-04"},{"lineNumber":337,"author":{"gitId":"naijie2108"},"content":"  ```","lastModifiedDate":"2021-11-04"},{"lineNumber":338,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":339,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":340,"author":{"gitId":"naijie2108"},"content":"* `list task w`","lastModifiedDate":"2021-11-04"},{"lineNumber":341,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":342,"author":{"gitId":"naijie2108"},"content":"  ```","lastModifiedDate":"2021-11-04"},{"lineNumber":343,"author":{"gitId":"naijie2108"},"content":"  Weekly tasks: ","lastModifiedDate":"2021-11-04"},{"lineNumber":344,"author":{"gitId":"naijie2108"},"content":"  1. [CS2132][G][LATE][ ] asdf by: 10 Dec 2000 12:00 AM [Weightage: 50%]","lastModifiedDate":"2021-11-04"},{"lineNumber":345,"author":{"gitId":"naijie2108"},"content":"  ```","lastModifiedDate":"2021-11-04"},{"lineNumber":346,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":347,"author":{"gitId":"naijie2108"},"content":"NOTE:","lastModifiedDate":"2021-11-04"},{"lineNumber":348,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":349,"author":{"gitId":"naijie2108"},"content":"* For optional arguments `w`, `m` and `y`, overdue tasks are listed together with the weekly/monthly/yearly tasks","lastModifiedDate":"2021-11-06"},{"lineNumber":350,"author":{"gitId":"naijie2108"},"content":"  regardless of due date as a reminder that the user has forgotten to do the task.","lastModifiedDate":"2021-11-06"},{"lineNumber":351,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":352,"author":{"gitId":"naijie2108"},"content":"### Saving data","lastModifiedDate":"2021-11-04"},{"lineNumber":353,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":354,"author":{"gitId":"naijie2108"},"content":"Program data is saved whenever data is added or modified. The process is done automatically, so no user input is needed","lastModifiedDate":"2021-11-04"},{"lineNumber":355,"author":{"gitId":"naijie2108"},"content":"for this.","lastModifiedDate":"2021-11-04"},{"lineNumber":356,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":357,"author":{"gitId":"naijie2108"},"content":"### Loading data","lastModifiedDate":"2021-11-04"},{"lineNumber":358,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":359,"author":{"gitId":"naijie2108"},"content":"Program data is loaded from the data folder during startup of the program. If the program can detect the data file","lastModifiedDate":"2021-11-06"},{"lineNumber":360,"author":{"gitId":"naijie2108"},"content":"successfully, the data is loaded and the following message should appear:","lastModifiedDate":"2021-11-06"},{"lineNumber":361,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":362,"author":{"gitId":"naijie2108"},"content":"```","lastModifiedDate":"2021-11-04"},{"lineNumber":363,"author":{"gitId":"naijie2108"},"content":"Data loaded successfully","lastModifiedDate":"2021-11-04"},{"lineNumber":364,"author":{"gitId":"naijie2108"},"content":"Welcome to NoCap","lastModifiedDate":"2021-11-04"},{"lineNumber":365,"author":{"gitId":"naijie2108"},"content":"```","lastModifiedDate":"2021-11-04"},{"lineNumber":366,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":367,"author":{"gitId":"naijie2108"},"content":"On the other hand, if no data file can be found, the program starts with an empty template, and the following message","lastModifiedDate":"2021-11-06"},{"lineNumber":368,"author":{"gitId":"naijie2108"},"content":"should appear:","lastModifiedDate":"2021-11-06"},{"lineNumber":369,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":370,"author":{"gitId":"naijie2108"},"content":"```","lastModifiedDate":"2021-11-04"},{"lineNumber":371,"author":{"gitId":"naijie2108"},"content":"No save file found, starting with an empty template","lastModifiedDate":"2021-11-04"},{"lineNumber":372,"author":{"gitId":"naijie2108"},"content":"Welcome to NoCap","lastModifiedDate":"2021-11-04"},{"lineNumber":373,"author":{"gitId":"naijie2108"},"content":"```","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"naijie2108":373}},{"path":"docs/team/yapjoonsiong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yapjoonsiong"},"content":"# Yap Joon Siong - Project Portfolio Page","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"## Overview","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"yapjoonsiong"},"content":"### Summary of Contributions","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"yapjoonsiong"},"content":"* **Code contributed:** [Reposense Link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dyapjoonsiong\u0026tabRepo\u003dAY2122S1-CS2113T-F11-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026zFR\u003dfalse)","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"* **Enhancements Implemented** :","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":"    * `semester` package","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"yapjoonsiong"},"content":"        * Consists of utility classes `SemesterList` and `Semester`, where `SemesterList` computes and stores the ","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"yapjoonsiong"},"content":"          cumulative CAP of all semesters and also stores 10 `Semester` objects, and `Semester` stores and computes the ","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"yapjoonsiong"},"content":"          individual CAP for the semester, while also storing a ModuleList of the Module objects taken during the semester","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"yapjoonsiong"},"content":"        * Integrated and modified dependencies (`ModuleList` and `Module`) as the project went on","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"yapjoonsiong"},"content":"        * Implemented core functionalities such as `cap` and `allcap`","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"yapjoonsiong"},"content":"    * `schedule` package","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"yapjoonsiong"},"content":"        * Consists of utility classes `ScheduleList` and `Schedule`, where `ScheduleList` stores all `Schedule` objects,","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"yapjoonsiong"},"content":"          and `Schedule` stores all information for any schedule added to `Module`","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"yapjoonsiong"},"content":"        * Integrated and modified dependencies (namely `Module`) as the project went on","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"yapjoonsiong"},"content":"    * `ModuleList` and `Module` classes","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"yapjoonsiong"},"content":"        * Integrated classes and implemented core functionalities such as `timetable` and backend methods to calculate","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"yapjoonsiong"},"content":"          `cap` and `allcap`","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"yapjoonsiong"},"content":"        * Implemented core backend method to find modules by name","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"yapjoonsiong"},"content":"* **Contributions to the UG** :","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"yapjoonsiong"},"content":"    * Features: List Semesters","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"yapjoonsiong"},"content":"    * Features: Switching Semesters","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"yapjoonsiong"},"content":"    * Features: Adding a class","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"yapjoonsiong"},"content":"    * Features: Deleting a class","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"yapjoonsiong"},"content":"    * Features: Add credits to a module","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"yapjoonsiong"},"content":"    * Features: View CAP","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"yapjoonsiong"},"content":"    * Features: View all CAP","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"yapjoonsiong"},"content":"* **Contributions to the DG** :","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"yapjoonsiong"},"content":"    * Acknowledgements","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"yapjoonsiong"},"content":"    * Design and implementation: semester","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"yapjoonsiong"},"content":"    * Appendix C: Non Functional Requirements","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"yapjoonsiong"},"content":"* **Contributions to team-based tasks** :","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"yapjoonsiong"},"content":"    * Managing collaborative google drive folder","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"yapjoonsiong"},"content":"    * Setting up conference group to facilitate meetings","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"yapjoonsiong"},"content":"* **Review/Mentoring Contributions**","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"yapjoonsiong"},"content":"    * Help teammates when faced with technical issues by meeting up and helping to debug functional problems.","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"yapjoonsiong"},"content":"    * Integrated most core functional classes together at the start of the project to release a Minimum Viable Product","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"yapjoonsiong"},"content":"###Developer Guide Extract","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"yapjoonsiong"},"content":"## Semester","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"yapjoonsiong"},"content":"**API** : `semester`","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"yapjoonsiong"},"content":"![alt_text](../media/SemesterListDiagram.jpg)","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"yapjoonsiong"},"content":"The `Semester` component stores all NoCap data i.e., all `Semester` objects and their components and cumulative average","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"yapjoonsiong"},"content":"point (CAP) (which are contained in a SemesterList object)","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"yapjoonsiong"},"content":"* It consists of 2 utility classes `SemesterList` and `Semester`","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"yapjoonsiong"},"content":"* `SemesterList` is used to compute and store the cumulative CAP of all semesters and also stores 10 `Semester` objects","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"yapjoonsiong"},"content":"* Each `Semester` object stores and computes the individual CAP for the semester, while also storing a `ModuleList` of","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"yapjoonsiong"},"content":"  the `Module` objects taken during the semester","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"yapjoonsiong"},"content":"* The computation of the CAP for both `SemesterList` and `Semester` is automatically done when a grade/credit as added","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"yapjoonsiong"},"content":"  to a `Module` object within any semester","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"yapjoonsiong"},"content":"This is how CAP is computed:","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"yapjoonsiong"},"content":"![alt_text](../media/capComputationSequenceDiagram.png)","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"yapjoonsiong"},"content":"* When `commandAddGrade()` or `commandAddCredit()` is called in Parser, `addGrade(description)`","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"yapjoonsiong"},"content":"  or `addCredit(description)` respectively are called in `Module`, setting the module’s `grade`, `points` and `credits`","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"yapjoonsiong"},"content":"  to their corresponding values.","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"yapjoonsiong"},"content":"* Then, `updateCap()` is called in `Semester` with the newly set `grade`/`credits` values in `Module`, followed","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"yapjoonsiong"},"content":"  by `updateCap()` in `SemesterList` with the newly set `points`/`credits` values in `Semester`.","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"yapjoonsiong"},"content":"# Appendix C: Non Functional Requirements","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"yapjoonsiong"},"content":"1. Should work on any mainstream OS as long as it has Java 11 or above installed.","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"yapjoonsiong"},"content":"2. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"yapjoonsiong"},"content":"###User Guide Extract","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"yapjoonsiong"},"content":"### Listing semesters : `list semesters`","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"yapjoonsiong"},"content":"Lists all preloaded semesters and their corresponding indexes","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"yapjoonsiong"},"content":"Example output:","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"yapjoonsiong"},"content":"```","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"yapjoonsiong"},"content":"    1 : Y1S1","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"yapjoonsiong"},"content":"    2 : Y1S2","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"yapjoonsiong"},"content":"    3 : Y2S1","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"yapjoonsiong"},"content":"    4 : Y2S2","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"yapjoonsiong"},"content":"    5 : Y3S1","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"yapjoonsiong"},"content":"    6 : Y3S2","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"yapjoonsiong"},"content":"    7 : Y4S1","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"yapjoonsiong"},"content":"    8 : Y4S2","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"yapjoonsiong"},"content":"    9 : Y5S1","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"yapjoonsiong"},"content":"    10 : Y5S2","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"yapjoonsiong"},"content":"```","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"yapjoonsiong"},"content":"### Switching semesters : `switch \u003csemester index\u003e`","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"yapjoonsiong"},"content":"Switches the currently accessed semester to the corresponding input index. (refer to `list semesters` for the index).","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"yapjoonsiong"},"content":"The currently accessed semester on start up is your last accessed semester from any previous use.","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"yapjoonsiong"},"content":"Examples:","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"yapjoonsiong"},"content":"* `Switch 1`","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"yapjoonsiong"},"content":"* `Switch 2`","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"yapjoonsiong"},"content":"### Add class to module : `/m \u003cmodule\u003e addclass \u003cday/period/location/comments\u003e`","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"yapjoonsiong"},"content":"Adds a class to a module","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"yapjoonsiong"},"content":"Examples:","lastModifiedDate":"2021-11-05"},{"lineNumber":106,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"yapjoonsiong"},"content":"* `/m CG1111 addclass MON/0800/E1-03/tutorial`","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"yapjoonsiong"},"content":"* `/m MA1508 addclass WED/1000/zoom/lecture`","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"yapjoonsiong"},"content":"Note:","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":112,"author":{"gitId":"yapjoonsiong"},"content":"* DAY can only take on the following inputs in both uppercase and lowercase: {MON, TUE, WED, THU, FRI, SAT, SUN}","lastModifiedDate":"2021-11-05"},{"lineNumber":113,"author":{"gitId":"yapjoonsiong"},"content":"* PERIOD is a 1hr block in 24hr format","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"yapjoonsiong"},"content":"* Examples:","lastModifiedDate":"2021-11-05"},{"lineNumber":115,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"yapjoonsiong"},"content":"\u003ctable\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":117,"author":{"gitId":"yapjoonsiong"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"yapjoonsiong"},"content":"   \u003ctd\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":119,"author":{"gitId":"yapjoonsiong"},"content":"Valid","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"yapjoonsiong"},"content":"   \u003c/td\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":121,"author":{"gitId":"yapjoonsiong"},"content":"   \u003ctd\u003eInvalid ","lastModifiedDate":"2021-11-05"},{"lineNumber":122,"author":{"gitId":"yapjoonsiong"},"content":"   \u003c/td\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":123,"author":{"gitId":"yapjoonsiong"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":124,"author":{"gitId":"yapjoonsiong"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":125,"author":{"gitId":"yapjoonsiong"},"content":"   \u003ctd\u003e0800","lastModifiedDate":"2021-11-05"},{"lineNumber":126,"author":{"gitId":"yapjoonsiong"},"content":"   \u003c/td\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":127,"author":{"gitId":"yapjoonsiong"},"content":"   \u003ctd\u003e0830","lastModifiedDate":"2021-11-05"},{"lineNumber":128,"author":{"gitId":"yapjoonsiong"},"content":"   \u003c/td\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":129,"author":{"gitId":"yapjoonsiong"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":130,"author":{"gitId":"yapjoonsiong"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":131,"author":{"gitId":"yapjoonsiong"},"content":"   \u003ctd\u003e1000","lastModifiedDate":"2021-11-05"},{"lineNumber":132,"author":{"gitId":"yapjoonsiong"},"content":"   \u003c/td\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":133,"author":{"gitId":"yapjoonsiong"},"content":"   \u003ctd\u003e2500","lastModifiedDate":"2021-11-05"},{"lineNumber":134,"author":{"gitId":"yapjoonsiong"},"content":"   \u003c/td\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":135,"author":{"gitId":"yapjoonsiong"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":136,"author":{"gitId":"yapjoonsiong"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":137,"author":{"gitId":"yapjoonsiong"},"content":"   \u003ctd\u003e0000","lastModifiedDate":"2021-11-05"},{"lineNumber":138,"author":{"gitId":"yapjoonsiong"},"content":"   \u003c/td\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":139,"author":{"gitId":"yapjoonsiong"},"content":"   \u003ctd\u003e11111","lastModifiedDate":"2021-11-05"},{"lineNumber":140,"author":{"gitId":"yapjoonsiong"},"content":"   \u003c/td\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":141,"author":{"gitId":"yapjoonsiong"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":142,"author":{"gitId":"yapjoonsiong"},"content":"\u003c/table\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":143,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":144,"author":{"gitId":"yapjoonsiong"},"content":"* LOCATION and COMMENTS can only take on a maximum of 16 characters and cannot be empty","lastModifiedDate":"2021-11-05"},{"lineNumber":145,"author":{"gitId":"yapjoonsiong"},"content":"* Only one class can be added in any period","lastModifiedDate":"2021-11-05"},{"lineNumber":146,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":147,"author":{"gitId":"yapjoonsiong"},"content":"### Delete classes from module: `/m \u003cmodule\u003e deleteclass \u003cclass index\u003e`","lastModifiedDate":"2021-11-05"},{"lineNumber":148,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":149,"author":{"gitId":"yapjoonsiong"},"content":"Deletes a module corresponding to the input index.(refer to `/m \u003cmodule name\u003e info` or `list module` for indexes )","lastModifiedDate":"2021-11-05"},{"lineNumber":150,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":151,"author":{"gitId":"yapjoonsiong"},"content":"Examples:","lastModifiedDate":"2021-11-05"},{"lineNumber":152,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":153,"author":{"gitId":"yapjoonsiong"},"content":"* `/m CS2040C deleteclass 1`","lastModifiedDate":"2021-11-05"},{"lineNumber":154,"author":{"gitId":"yapjoonsiong"},"content":"* `/m CG1112 deleteclass 2`","lastModifiedDate":"2021-11-05"},{"lineNumber":155,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":156,"author":{"gitId":"yapjoonsiong"},"content":"Example output:","lastModifiedDate":"2021-11-05"},{"lineNumber":157,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":158,"author":{"gitId":"yapjoonsiong"},"content":"```","lastModifiedDate":"2021-11-05"},{"lineNumber":159,"author":{"gitId":"yapjoonsiong"},"content":"Class: ","lastModifiedDate":"2021-11-05"},{"lineNumber":160,"author":{"gitId":"yapjoonsiong"},"content":"Day: TUE","lastModifiedDate":"2021-11-05"},{"lineNumber":161,"author":{"gitId":"yapjoonsiong"},"content":"Start Time: 1000","lastModifiedDate":"2021-11-05"},{"lineNumber":162,"author":{"gitId":"yapjoonsiong"},"content":"Location: zoom","lastModifiedDate":"2021-11-05"},{"lineNumber":163,"author":{"gitId":"yapjoonsiong"},"content":"Comments: lect","lastModifiedDate":"2021-11-05"},{"lineNumber":164,"author":{"gitId":"yapjoonsiong"},"content":"has been successfully deleted","lastModifiedDate":"2021-11-05"},{"lineNumber":165,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":166,"author":{"gitId":"yapjoonsiong"},"content":"Remaining Classes are: ","lastModifiedDate":"2021-11-05"},{"lineNumber":167,"author":{"gitId":"yapjoonsiong"},"content":"1.","lastModifiedDate":"2021-11-05"},{"lineNumber":168,"author":{"gitId":"yapjoonsiong"},"content":"Day: MON","lastModifiedDate":"2021-11-05"},{"lineNumber":169,"author":{"gitId":"yapjoonsiong"},"content":"Start Time: 1000","lastModifiedDate":"2021-11-05"},{"lineNumber":170,"author":{"gitId":"yapjoonsiong"},"content":"Location: zoom","lastModifiedDate":"2021-11-05"},{"lineNumber":171,"author":{"gitId":"yapjoonsiong"},"content":"Comments: lect","lastModifiedDate":"2021-11-05"},{"lineNumber":172,"author":{"gitId":"yapjoonsiong"},"content":"```","lastModifiedDate":"2021-11-05"},{"lineNumber":173,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":174,"author":{"gitId":"yapjoonsiong"},"content":"### Add credit to module: `/m \u003cmodule\u003e addcredit `","lastModifiedDate":"2021-11-05"},{"lineNumber":175,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":176,"author":{"gitId":"yapjoonsiong"},"content":"Add credits to a module.","lastModifiedDate":"2021-11-05"},{"lineNumber":177,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":178,"author":{"gitId":"yapjoonsiong"},"content":"Examples:","lastModifiedDate":"2021-11-05"},{"lineNumber":179,"author":{"gitId":"yapjoonsiong"},"content":"* `/m CS2113 addcredit 4`","lastModifiedDate":"2021-11-05"},{"lineNumber":180,"author":{"gitId":"yapjoonsiong"},"content":"* `/m MA1511 addcredit 2`","lastModifiedDate":"2021-11-05"},{"lineNumber":181,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":182,"author":{"gitId":"yapjoonsiong"},"content":"Example output:","lastModifiedDate":"2021-11-05"},{"lineNumber":183,"author":{"gitId":"yapjoonsiong"},"content":"```","lastModifiedDate":"2021-11-05"},{"lineNumber":184,"author":{"gitId":"yapjoonsiong"},"content":"Module credits successfully added:","lastModifiedDate":"2021-11-05"},{"lineNumber":185,"author":{"gitId":"yapjoonsiong"},"content":"Module name: CS2040C","lastModifiedDate":"2021-11-05"},{"lineNumber":186,"author":{"gitId":"yapjoonsiong"},"content":"CREDITS: 4","lastModifiedDate":"2021-11-05"},{"lineNumber":187,"author":{"gitId":"yapjoonsiong"},"content":"--------------------------- ","lastModifiedDate":"2021-11-05"},{"lineNumber":188,"author":{"gitId":"yapjoonsiong"},"content":"SCHEDULE:","lastModifiedDate":"2021-11-05"},{"lineNumber":189,"author":{"gitId":"yapjoonsiong"},"content":"--------------------------- ","lastModifiedDate":"2021-11-05"},{"lineNumber":190,"author":{"gitId":"yapjoonsiong"},"content":"GRADE: A","lastModifiedDate":"2021-11-05"},{"lineNumber":191,"author":{"gitId":"yapjoonsiong"},"content":"TASKS: []","lastModifiedDate":"2021-11-05"},{"lineNumber":192,"author":{"gitId":"yapjoonsiong"},"content":"BREAKDOWN:","lastModifiedDate":"2021-11-05"},{"lineNumber":193,"author":{"gitId":"yapjoonsiong"},"content":"```","lastModifiedDate":"2021-11-05"},{"lineNumber":194,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":195,"author":{"gitId":"yapjoonsiong"},"content":"Note:","lastModifiedDate":"2021-11-05"},{"lineNumber":196,"author":{"gitId":"yapjoonsiong"},"content":"* Credit values must be positive integers","lastModifiedDate":"2021-11-05"},{"lineNumber":197,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":198,"author":{"gitId":"yapjoonsiong"},"content":"### View CAP : `cap`","lastModifiedDate":"2021-11-05"},{"lineNumber":199,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":200,"author":{"gitId":"yapjoonsiong"},"content":"Shows the CAP for the currently accessed semester.","lastModifiedDate":"2021-11-05"},{"lineNumber":201,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":202,"author":{"gitId":"yapjoonsiong"},"content":"Example output:","lastModifiedDate":"2021-11-05"},{"lineNumber":203,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":204,"author":{"gitId":"yapjoonsiong"},"content":"* `This semester\u0027s CAP: 4.25`","lastModifiedDate":"2021-11-05"},{"lineNumber":205,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":206,"author":{"gitId":"yapjoonsiong"},"content":"NOTE: Modules with a credit value of 0 will not be calculated towards overall CAP.","lastModifiedDate":"2021-11-05"},{"lineNumber":207,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":208,"author":{"gitId":"yapjoonsiong"},"content":"### View all CAP : `allcap`","lastModifiedDate":"2021-11-05"},{"lineNumber":209,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":210,"author":{"gitId":"yapjoonsiong"},"content":"Shows the CAP for all semesters and aggregated CAP.","lastModifiedDate":"2021-11-05"},{"lineNumber":211,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":212,"author":{"gitId":"yapjoonsiong"},"content":"Format: `allcap`","lastModifiedDate":"2021-11-05"},{"lineNumber":213,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":214,"author":{"gitId":"yapjoonsiong"},"content":"Example output:","lastModifiedDate":"2021-11-05"},{"lineNumber":215,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":216,"author":{"gitId":"yapjoonsiong"},"content":"    Cumulative CAP: 4.25","lastModifiedDate":"2021-11-05"},{"lineNumber":217,"author":{"gitId":"yapjoonsiong"},"content":"    Y1S1: 4.25","lastModifiedDate":"2021-11-05"},{"lineNumber":218,"author":{"gitId":"yapjoonsiong"},"content":"    Y1S2: 0.0","lastModifiedDate":"2021-11-05"},{"lineNumber":219,"author":{"gitId":"yapjoonsiong"},"content":"    Y2S1: 0.0","lastModifiedDate":"2021-11-05"},{"lineNumber":220,"author":{"gitId":"yapjoonsiong"},"content":"    Y2S2: 0.0","lastModifiedDate":"2021-11-05"},{"lineNumber":221,"author":{"gitId":"yapjoonsiong"},"content":"    Y3S1: 0.0","lastModifiedDate":"2021-11-05"},{"lineNumber":222,"author":{"gitId":"yapjoonsiong"},"content":"    Y3S2: 0.0","lastModifiedDate":"2021-11-05"},{"lineNumber":223,"author":{"gitId":"yapjoonsiong"},"content":"    Y4S1: 0.0","lastModifiedDate":"2021-11-05"},{"lineNumber":224,"author":{"gitId":"yapjoonsiong"},"content":"    Y4S2: 0.0","lastModifiedDate":"2021-11-05"},{"lineNumber":225,"author":{"gitId":"yapjoonsiong"},"content":"    Y5S1: 0.0","lastModifiedDate":"2021-11-05"},{"lineNumber":226,"author":{"gitId":"yapjoonsiong"},"content":"    Y5S2: 0.0","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"yapjoonsiong":226}},{"path":"docs/team/yzhedwin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yzhedwin"},"content":"# Yeo Zi Hao Edwin - Project Portfolio Page","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"yzhedwin"},"content":"## Overview","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"yzhedwin"},"content":"### Summary of Contributions","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"yzhedwin"},"content":"* **Code","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"yzhedwin"},"content":"  contributed:** [RepoSense Link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003df11\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dyzhedwin\u0026tabRepo\u003dAY2122S1-CS2113T-F11-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026zFR\u003dfalse\u0026until\u003d2021-11-03FileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"yzhedwin"},"content":"* **Enhancements Implemented** :","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"yzhedwin"},"content":"    * `Task` class","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"yzhedwin"},"content":"        * Class made to be used as a base class for `OverallTask` and `GradableTask`","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"yzhedwin"},"content":"        * Stores the information needed for each task added.","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"yzhedwin"},"content":"        * Implemented method to determine if task is overdue.","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"yzhedwin"},"content":"        * Implemented method to check if the task added is valid","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"yzhedwin"},"content":"        * Added a very readable toString() method.","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"yzhedwin"},"content":"        * Continued maintenance of the class for dependencies throughout the project.","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"yzhedwin"},"content":"    * `TaskList` class","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"yzhedwin"},"content":"        * Allowed class to be inheritable by `OverallTaskList` and `GradableTaskList`","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"yzhedwin"},"content":"        * Implemented custom comparators to sort the task list with special conditions.","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"yzhedwin"},"content":"        * Manipulated the user input to get desired data such as `deadline` and `task description`.","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"yzhedwin"},"content":"        * Added different ways to manipulate `LocalDateTime` data type such as filtering the list","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"yzhedwin"},"content":"        * for weekly, monthly and yearly tasks.","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"yzhedwin"},"content":"        * Added checks to see if there is duplication in the task list before adding or modifying tasks.","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"yzhedwin"},"content":"        * Made the code more defensive by catching errors from erroneous inputs.","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"yzhedwin"},"content":"        * Enhanced adding of task by automatically updating task deadline when user adds a duplicate task of different","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"yzhedwin"},"content":"          deadline.","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"yzhedwin"},"content":"        * Continued maintenance of the class for dependencies throughout the project.","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"yzhedwin"},"content":"    * Testing","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"yzhedwin"},"content":"        * Added a way to test output from print functions by using `ByteArrayOutputStream` and `PrintStream` and","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"yzhedwin"},"content":"        * verifying the actual and expected outputs.","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"yzhedwin"},"content":"* **Contributions to the UG** :","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"yzhedwin"},"content":"    * Features: Listing module tasks","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"yzhedwin"},"content":"    * Features: Adding tasks to module","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"yzhedwin"},"content":"* **Contributions to the DG** :","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"yzhedwin"},"content":"    * Design and implementation: Task","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"yzhedwin"},"content":"    * Design and implementation: TaskList","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"yzhedwin"},"content":"* **Contributions to team-based tasks** :","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"yzhedwin"},"content":"    * Contributed ideas during brainstorming about enhancement and bug fixes.","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"yzhedwin"},"content":"    * Maintained clean github environment.","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"yzhedwin"},"content":"* **Review/Mentoring Contributions**","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"yzhedwin"},"content":"    * Helped teammates debug code in a collaborative manner.","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"yzhedwin"},"content":"### Developer Guide Extract","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"yzhedwin"},"content":"## TaskList","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"yzhedwin"},"content":"**API** : `task.tasklist`","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"yzhedwin"},"content":"![](../media/TaskClassDiagram.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"yzhedwin"},"content":"How the `TaskList` component works:","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"yzhedwin"},"content":"![](../media/TaskListSequenceDiagram.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"yzhedwin"},"content":"1. `TaskList` stores all tasks in an `ArrayList\u003cTask\u003e`.","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"yzhedwin"},"content":"2. When the `addTask()` method is called, the method `getDate()` will return the `date` string from the user input","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"yzhedwin"},"content":"3. The method `removeDate()` will return the `description` string from the user input by removing the date component in","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"yzhedwin"},"content":"   the user input.","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"yzhedwin"},"content":"4. Then store it as a local variable of a `String` type.","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"yzhedwin"},"content":"5. The `String` variables will then be passed to instantialize a new `Task` object.","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"yzhedwin"},"content":"6. This `Task` object will then be stored in the `ArrayList` in the `TaskList` object.","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"yzhedwin"},"content":"7. The methods `weeklyTaskList()`, `monthlyTaskList` and `yearlyTaskList()` returns an `ArrayList` which contains","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"yzhedwin"},"content":"   the `Task` objects of deadline within a week, a month and a year respectively.","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"yzhedwin"},"content":"8. The methods `sortTaskListByDate()`  and `sortTaskListByStatus()` will sort the current `TaskList` object by ascending","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"yzhedwin"},"content":"   order of `Deadline` and completion status respectively","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"yzhedwin"},"content":"9. The `ArrayList` returned by the above methods can then be passed to `printTasks()` which will call `toString()` in","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"yzhedwin"},"content":"   each `Task` object and print to the `Output Stream`.","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"yzhedwin"},"content":"   \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"yzhedwin"},"content":"## Task","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"yzhedwin"},"content":"**API** : `task.task`","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"yzhedwin"},"content":"`Task` object stores the following for each task:","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"yzhedwin"},"content":"1. `description`","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"yzhedwin"},"content":"2. `Date`","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"yzhedwin"},"content":"3. `isDone`","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"yzhedwin"},"content":"4. `isLate`","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"yzhedwin"},"content":"5. `deadline`","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":82,"author":{"gitId":"yzhedwin"},"content":"How the `Task` component works:","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":84,"author":{"gitId":"yzhedwin"},"content":"![](../media/TaskSequenceDiagram.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":86,"author":{"gitId":"yzhedwin"},"content":"1. Whenever the `Task` object is instantiated, the `attributes` listed above will be initialized by the `setter`","lastModifiedDate":"2021-11-06"},{"lineNumber":87,"author":{"gitId":"yzhedwin"},"content":"   methods: `setDescription()`,  `setDate()`,  `setDone()`, `setLate()` and `setDeadline()`.","lastModifiedDate":"2021-11-06"},{"lineNumber":88,"author":{"gitId":"yzhedwin"},"content":"2. When calling `printAllTask()`, `printWeeklyTask()`, `printMonthlyTask()` in `OverallTaskList` the","lastModifiedDate":"2021-11-06"},{"lineNumber":89,"author":{"gitId":"yzhedwin"},"content":"   method  `updateOverdue()`will be called which checks for the truth value of the `boolean` attribute `isDone` and also","lastModifiedDate":"2021-11-06"},{"lineNumber":90,"author":{"gitId":"yzhedwin"},"content":"   whether the current date and time of the system clock is after the `deadline` of the `Task` object.","lastModifiedDate":"2021-11-06"},{"lineNumber":91,"author":{"gitId":"yzhedwin"},"content":"3. If `isDone` is `FALSE` and the `deadline` is later than the current date and time, `updateOverdue()` will set the","lastModifiedDate":"2021-11-06"},{"lineNumber":92,"author":{"gitId":"yzhedwin"},"content":"   attribute `isLate` of the current `Task` object to `TRUE`.","lastModifiedDate":"2021-11-06"},{"lineNumber":93,"author":{"gitId":"yzhedwin"},"content":"4. Calling the toString prints out the task information in the Task object.","lastModifiedDate":"2021-11-06"},{"lineNumber":94,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":95,"author":{"gitId":"yzhedwin"},"content":"Note:","lastModifiedDate":"2021-11-06"},{"lineNumber":96,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":97,"author":{"gitId":"yzhedwin"},"content":"* The printTask() call in the sequence diagram is a generalised method from: `OverallTaskList#addAllNormalTasks()`","lastModifiedDate":"2021-11-06"},{"lineNumber":98,"author":{"gitId":"yzhedwin"},"content":"  , `OverallTaskList#addAllGradableTasks()` and `TaskList#printTasks()`","lastModifiedDate":"2021-11-06"},{"lineNumber":99,"author":{"gitId":"yzhedwin"},"content":"* Any call from the methods above will result in the following sequence in the sequence diagram.","lastModifiedDate":"2021-11-06"},{"lineNumber":100,"author":{"gitId":"yzhedwin"},"content":"  \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":101,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":102,"author":{"gitId":"yzhedwin"},"content":"### User Guide Extract","lastModifiedDate":"2021-11-06"},{"lineNumber":103,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":104,"author":{"gitId":"yzhedwin"},"content":"### Add task to module : `/m \u003cmodule\u003e addtask \u003cdescription\u003e /by \u003cdate\u003e \u003ctime\u003e`","lastModifiedDate":"2021-11-06"},{"lineNumber":105,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":106,"author":{"gitId":"yzhedwin"},"content":"* The `date` is in the format of dd/MM/yyyy.","lastModifiedDate":"2021-11-06"},{"lineNumber":107,"author":{"gitId":"yzhedwin"},"content":"* The `time` is in the format of hhmm.","lastModifiedDate":"2021-11-06"},{"lineNumber":108,"author":{"gitId":"yzhedwin"},"content":"* The `description` can contain white spaces.","lastModifiedDate":"2021-11-06"},{"lineNumber":109,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":110,"author":{"gitId":"yzhedwin"},"content":"Note:","lastModifiedDate":"2021-11-06"},{"lineNumber":111,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":112,"author":{"gitId":"yzhedwin"},"content":"* If time is omitted, time will default to 0000 hrs.","lastModifiedDate":"2021-11-06"},{"lineNumber":113,"author":{"gitId":"yzhedwin"},"content":"* If duplicate task exist and has a different deadline, the existing task\u0027s deadline will be updated with the new","lastModifiedDate":"2021-11-06"},{"lineNumber":114,"author":{"gitId":"yzhedwin"},"content":"  deadline.","lastModifiedDate":"2021-11-06"},{"lineNumber":115,"author":{"gitId":"yzhedwin"},"content":"* If duplicate task has same deadline, new task will be rejected by the program.","lastModifiedDate":"2021-11-06"},{"lineNumber":116,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":117,"author":{"gitId":"yzhedwin"},"content":"Example of usage:","lastModifiedDate":"2021-11-06"},{"lineNumber":118,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":119,"author":{"gitId":"yzhedwin"},"content":"* `/m cs1010 addtask Remember to S/U /by 20/11/2020 0000`","lastModifiedDate":"2021-11-06"},{"lineNumber":120,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":121,"author":{"gitId":"yzhedwin"},"content":"Example of expected output:","lastModifiedDate":"2021-11-06"},{"lineNumber":122,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":123,"author":{"gitId":"yzhedwin"},"content":"![alt_text](../media/AddTaskOutput.jpg)","lastModifiedDate":"2021-11-06"},{"lineNumber":124,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":125,"author":{"gitId":"yzhedwin"},"content":"Warning :","lastModifiedDate":"2021-11-06"},{"lineNumber":126,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":127,"author":{"gitId":"yzhedwin"},"content":"* For every month, the program will take in 01 - 31 as an input for the day of the month.","lastModifiedDate":"2021-11-06"},{"lineNumber":128,"author":{"gitId":"yzhedwin"},"content":"* In the case when the month does not have 31 days, the program will treat any input after the last day of the month","lastModifiedDate":"2021-11-06"},{"lineNumber":129,"author":{"gitId":"yzhedwin"},"content":"  until 31 as the last day.","lastModifiedDate":"2021-11-06"},{"lineNumber":130,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":131,"author":{"gitId":"yzhedwin"},"content":"Example:","lastModifiedDate":"2021-11-06"},{"lineNumber":132,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":133,"author":{"gitId":"yzhedwin"},"content":"* Date input as `31/02/2021` will be parsed as `28/02/2021` because there are only 28 days in the month of February.","lastModifiedDate":"2021-11-06"},{"lineNumber":134,"author":{"gitId":"yzhedwin"},"content":"* Date input as `31/04/2021` will be parsed as `30/04/2021` because there are only 30 days in the month of April","lastModifiedDate":"2021-11-06"},{"lineNumber":135,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":136,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":137,"author":{"gitId":"yzhedwin"},"content":"### Listing module tasks : `/m \u003cmodule\u003e list`","lastModifiedDate":"2021-11-06"},{"lineNumber":138,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":139,"author":{"gitId":"yzhedwin"},"content":"Shows a list of task of specified module.","lastModifiedDate":"2021-11-06"},{"lineNumber":140,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":141,"author":{"gitId":"yzhedwin"},"content":"Additional Format: `/m \u003cmodule\u003e list \u003coptional argument\u003e`","lastModifiedDate":"2021-11-06"},{"lineNumber":142,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":143,"author":{"gitId":"yzhedwin"},"content":"By default, all tasks in the module specified in the current semester are listed, but this can be customised by adding","lastModifiedDate":"2021-11-06"},{"lineNumber":144,"author":{"gitId":"yzhedwin"},"content":"optional arguments.","lastModifiedDate":"2021-11-06"},{"lineNumber":145,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":146,"author":{"gitId":"yzhedwin"},"content":"\u0026lt;optional argument\u003e includes:","lastModifiedDate":"2021-11-06"},{"lineNumber":147,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":148,"author":{"gitId":"yzhedwin"},"content":"* gradable - Shows a list of gradable tasks in the module.","lastModifiedDate":"2021-11-06"},{"lineNumber":149,"author":{"gitId":"yzhedwin"},"content":"* sortbydate - Sort tasks by due date, the closest deadline have the higher priority in the list. does not print the","lastModifiedDate":"2021-11-06"},{"lineNumber":150,"author":{"gitId":"yzhedwin"},"content":"  task list.","lastModifiedDate":"2021-11-06"},{"lineNumber":151,"author":{"gitId":"yzhedwin"},"content":"* sortbystatus - Sort tasks by status, finished tasks of lower priority. Does not print task list.","lastModifiedDate":"2021-11-06"},{"lineNumber":152,"author":{"gitId":"yzhedwin"},"content":"* w - list tasks due within the next week.","lastModifiedDate":"2021-11-06"},{"lineNumber":153,"author":{"gitId":"yzhedwin"},"content":"* m - list tasks due within the next month.","lastModifiedDate":"2021-11-06"},{"lineNumber":154,"author":{"gitId":"yzhedwin"},"content":"* y - list tasks due within the next year.","lastModifiedDate":"2021-11-06"},{"lineNumber":155,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":156,"author":{"gitId":"yzhedwin"},"content":"Task Prefixes:","lastModifiedDate":"2021-11-06"},{"lineNumber":157,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":158,"author":{"gitId":"yzhedwin"},"content":"* There are 2 prefixes in each Task defined as `[ ]`","lastModifiedDate":"2021-11-06"},{"lineNumber":159,"author":{"gitId":"yzhedwin"},"content":"* The first prefix is a `LATE` tag. If the task is overdue, the tag will show `[LATE]`","lastModifiedDate":"2021-11-06"},{"lineNumber":160,"author":{"gitId":"yzhedwin"},"content":"* The second prefix is a `DONE` tag. If the task is marked completed, the tag will show `[X]`","lastModifiedDate":"2021-11-06"},{"lineNumber":161,"author":{"gitId":"yzhedwin"},"content":"* Format will be as follows `[LATE][DONE] \u003ctask description\u003e \u003cdate\u003e \u003ctime\u003e`","lastModifiedDate":"2021-11-06"},{"lineNumber":162,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":163,"author":{"gitId":"yzhedwin"},"content":"Examples with expected output:","lastModifiedDate":"2021-11-06"},{"lineNumber":164,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":165,"author":{"gitId":"yzhedwin"},"content":"Assuming tasks have been added to modules beforehand:","lastModifiedDate":"2021-11-06"},{"lineNumber":166,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":167,"author":{"gitId":"yzhedwin"},"content":"* `/m cs1010 list`","lastModifiedDate":"2021-11-06"},{"lineNumber":168,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":169,"author":{"gitId":"yzhedwin"},"content":"    ```","lastModifiedDate":"2021-11-06"},{"lineNumber":170,"author":{"gitId":"yzhedwin"},"content":"    Task List for CS1010: ","lastModifiedDate":"2021-11-06"},{"lineNumber":171,"author":{"gitId":"yzhedwin"},"content":"  1.[LATE][X] Remember to S/U by: 20 Nov 2020 12:00 AM","lastModifiedDate":"2021-11-06"},{"lineNumber":172,"author":{"gitId":"yzhedwin"},"content":"  2.[LATE][ ] Remember to drop out by: 12 Dec 2020 11:59 PM","lastModifiedDate":"2021-11-06"},{"lineNumber":173,"author":{"gitId":"yzhedwin"},"content":"  3.[ ] retake cs1010 by: 12 Dec 2021 11:59 PM","lastModifiedDate":"2021-11-06"},{"lineNumber":174,"author":{"gitId":"yzhedwin"},"content":"  4.[ ] do assignment by: 30 Oct 2021 04:00 PM","lastModifiedDate":"2021-11-06"},{"lineNumber":175,"author":{"gitId":"yzhedwin"},"content":"  ```","lastModifiedDate":"2021-11-06"},{"lineNumber":176,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":177,"author":{"gitId":"yzhedwin"},"content":"* `/m cs1010 list gradable`","lastModifiedDate":"2021-11-06"},{"lineNumber":178,"author":{"gitId":"yzhedwin"},"content":"  ```","lastModifiedDate":"2021-11-06"},{"lineNumber":179,"author":{"gitId":"yzhedwin"},"content":"  BREAKDOWN:","lastModifiedDate":"2021-11-06"},{"lineNumber":180,"author":{"gitId":"yzhedwin"},"content":"    \u003c\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d40%\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":181,"author":{"gitId":"yzhedwin"},"content":"    ########################################","lastModifiedDate":"2021-11-06"},{"lineNumber":182,"author":{"gitId":"yzhedwin"},"content":"    |------------------1-------------------|","lastModifiedDate":"2021-11-06"},{"lineNumber":183,"author":{"gitId":"yzhedwin"},"content":"    1: assignments","lastModifiedDate":"2021-11-06"},{"lineNumber":184,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":185,"author":{"gitId":"yzhedwin"},"content":"    1 assignments by: 10 Oct 2010 10:00 AM Weightage 40% [ ]","lastModifiedDate":"2021-11-06"},{"lineNumber":186,"author":{"gitId":"yzhedwin"},"content":"  ```","lastModifiedDate":"2021-11-06"},{"lineNumber":187,"author":{"gitId":"yzhedwin"},"content":"* `/m cs1010 list sortbydate`","lastModifiedDate":"2021-11-06"},{"lineNumber":188,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":189,"author":{"gitId":"yzhedwin"},"content":"  ```","lastModifiedDate":"2021-11-06"},{"lineNumber":190,"author":{"gitId":"yzhedwin"},"content":"  CS1010 successfully sorted by date","lastModifiedDate":"2021-11-06"},{"lineNumber":191,"author":{"gitId":"yzhedwin"},"content":"  ```","lastModifiedDate":"2021-11-06"},{"lineNumber":192,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":193,"author":{"gitId":"yzhedwin"},"content":"  ```","lastModifiedDate":"2021-11-06"},{"lineNumber":194,"author":{"gitId":"yzhedwin"},"content":"  /m cs1010 list","lastModifiedDate":"2021-11-06"},{"lineNumber":195,"author":{"gitId":"yzhedwin"},"content":"  ```","lastModifiedDate":"2021-11-06"},{"lineNumber":196,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":197,"author":{"gitId":"yzhedwin"},"content":"  ```","lastModifiedDate":"2021-11-06"},{"lineNumber":198,"author":{"gitId":"yzhedwin"},"content":"  Task List for CS1010: ","lastModifiedDate":"2021-11-06"},{"lineNumber":199,"author":{"gitId":"yzhedwin"},"content":"  1.[LATE][X] Remember to S/U by: 20 Nov 2020 12:00 AM","lastModifiedDate":"2021-11-06"},{"lineNumber":200,"author":{"gitId":"yzhedwin"},"content":"  2.[LATE][ ] Remember to drop out by: 12 Dec 2020 11:59 PM","lastModifiedDate":"2021-11-06"},{"lineNumber":201,"author":{"gitId":"yzhedwin"},"content":"  3.[ ] do assignment by: 30 Oct 2021 04:00 PM ","lastModifiedDate":"2021-11-06"},{"lineNumber":202,"author":{"gitId":"yzhedwin"},"content":"  4.[ ] retake cs1010 by: 12 Dec 2021 11:59 PM","lastModifiedDate":"2021-11-06"},{"lineNumber":203,"author":{"gitId":"yzhedwin"},"content":"  ","lastModifiedDate":"2021-11-06"},{"lineNumber":204,"author":{"gitId":"yzhedwin"},"content":"  ```","lastModifiedDate":"2021-11-06"},{"lineNumber":205,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":206,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":207,"author":{"gitId":"yzhedwin"},"content":"* `/m cs1010 list w`","lastModifiedDate":"2021-11-06"},{"lineNumber":208,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":209,"author":{"gitId":"yzhedwin"},"content":"  ```","lastModifiedDate":"2021-11-06"},{"lineNumber":210,"author":{"gitId":"yzhedwin"},"content":"  Task List for CS1010: ","lastModifiedDate":"2021-11-06"},{"lineNumber":211,"author":{"gitId":"yzhedwin"},"content":"  There are 3 tasks due within 7 days ","lastModifiedDate":"2021-11-06"},{"lineNumber":212,"author":{"gitId":"yzhedwin"},"content":"  1.[LATE][X] Remember to S/U by: 20 Nov 2020 12:00 AM","lastModifiedDate":"2021-11-06"},{"lineNumber":213,"author":{"gitId":"yzhedwin"},"content":"  2.[LATE][ ] Remember to drop out by: 12 Dec 2020 11:59 PM","lastModifiedDate":"2021-11-06"},{"lineNumber":214,"author":{"gitId":"yzhedwin"},"content":"  3.[ ] do assignment by: 30 Oct 2021 04:00 PM ","lastModifiedDate":"2021-11-06"},{"lineNumber":215,"author":{"gitId":"yzhedwin"},"content":"  ```","lastModifiedDate":"2021-11-06"},{"lineNumber":216,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":217,"author":{"gitId":"yzhedwin"},"content":"NOTE:","lastModifiedDate":"2021-11-06"},{"lineNumber":218,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":219,"author":{"gitId":"yzhedwin"},"content":"* For optional arguments w, m and y, overdue tasks are listed together with the weekly/monthly/yearly tasks regardless","lastModifiedDate":"2021-11-06"},{"lineNumber":220,"author":{"gitId":"yzhedwin"},"content":"  of due date as a reminder that the user has forgotten to do the task.","lastModifiedDate":"2021-11-06"},{"lineNumber":221,"author":{"gitId":"yzhedwin"},"content":"* /m \u003cmodule\u003e list does not show gradable tasks.","lastModifiedDate":"2021-11-06"},{"lineNumber":222,"author":{"gitId":"yzhedwin"},"content":"* To show gradable task in module, have to input optional argument as shown above.","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"yzhedwin":222}},{"path":"src/main/java/command/Logger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexiong-zeng"},"content":"package command;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"jiexiong-zeng"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"jiexiong-zeng"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"jiexiong-zeng"},"content":"public final class Logger {","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"jiexiong-zeng"},"content":"    public static String GLOBAL_LOGGER_NAME \u003d \"LOGGER\";","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"jiexiong-zeng"},"content":"    public static java.util.logging.Logger myLogger;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"jiexiong-zeng"},"content":"    private static LogManager logManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"jiexiong-zeng"},"content":"    public Logger() {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"jiexiong-zeng"},"content":"        myLogger \u003d java.util.logging.Logger.getLogger(GLOBAL_LOGGER_NAME);","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"jiexiong-zeng"},"content":"        logManager \u003d LogManager.getLogManager();","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"jiexiong-zeng"},"content":"        logManager.getLogger(GLOBAL_LOGGER_NAME).setLevel(Level.OFF);","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"jiexiong-zeng"},"content":"    public static java.util.logging.Logger myLogger() {","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"jiexiong-zeng"},"content":"        myLogger \u003d java.util.logging.Logger.getLogger(GLOBAL_LOGGER_NAME);","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"jiexiong-zeng"},"content":"        logManager \u003d LogManager.getLogManager();","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"jiexiong-zeng"},"content":"        logManager.getLogger(GLOBAL_LOGGER_NAME).setLevel(Level.OFF);","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"jiexiong-zeng"},"content":"        return myLogger;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"jiexiong-zeng"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"jiexiong-zeng":25}},{"path":"src/main/java/command/NoCap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexiong-zeng"},"content":"package command;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"jiexiong-zeng"},"content":"import command.parser.Parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"import command.storage.StorageDecoder;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"yapjoonsiong"},"content":"import module.ModuleList;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"import semester.SemesterList;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":"import semester.Semester;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"yzhedwin"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"jiexiong-zeng"},"content":"import command.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"jiexiong-zeng"},"content":"public class NoCap {","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"naijie2108"},"content":"    public static SemesterList semesterList \u003d StorageDecoder.decodeJsonToSemesterList();","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"yapjoonsiong"},"content":"    public static ModuleList moduleList;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"yapjoonsiong"},"content":"    public static Semester semester;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"yzhedwin"},"content":"    private void run() {","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"yapjoonsiong"},"content":"        Ui.printStartMessage(semesterList.get(semesterList.getAccessedSemesterIndex()).getSemester());","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"yzhedwin"},"content":"        Parser parse \u003d new Parser();","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"yzhedwin"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"yzhedwin"},"content":"        while (!parse.isExit()) {","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"yapjoonsiong"},"content":"            //System.out.println();","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"naijie2108"},"content":"            moduleList \u003d semesterList.extractAccessedSemester().getModuleList();","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"yapjoonsiong"},"content":"            semester \u003d semesterList.extractAccessedSemester();","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"yzhedwin"},"content":"            String input \u003d in.nextLine();","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"yzhedwin"},"content":"            parse.chooseTask(input);","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"yzhedwin"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"yzhedwin"},"content":"        Ui.printEndMessage();","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"jiexiong-zeng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"yzhedwin"},"content":"        new NoCap().run();","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"jiexiong-zeng"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"yapjoonsiong":8,"naijie2108":5,"yzhedwin":12,"jiexiong-zeng":10}},{"path":"src/main/java/command/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexiong-zeng"},"content":"package command;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"DmitriYam"},"content":"import module.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"DmitriYam"},"content":"import module.ModuleList;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"DmitriYam"},"content":"import schedule.Schedule;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"DmitriYam"},"content":"import schedule.ScheduleList;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"DmitriYam"},"content":"import task.GradableTaskList;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"import task.OverallTask;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"import task.Task;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"yzhedwin"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"DmitriYam"},"content":"import java.util.stream.StreamSupport;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"yzhedwin"},"content":"public class Ui {","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"yzhedwin"},"content":"    private static final String logo \u003d \"NoCap Logo\";","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"jiexiong-zeng"},"content":"    public static void printHelpMessage() {","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"jiexiong-zeng"},"content":"        System.out.println(\"Show help: help \\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"jiexiong-zeng"},"content":"                + \"Show all semesters: list semesters\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"jiexiong-zeng"},"content":"                + \"Change semester: switch \u003csemester index\u003e\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"jiexiong-zeng"},"content":"                + \"Add module: add \u003cmodule name\u003e\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"jiexiong-zeng"},"content":"                + \"Delete module: delete \u003cmodule index\u003e\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"jiexiong-zeng"},"content":"                + \"List all module: list module\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"jiexiong-zeng"},"content":"                + \"Add task: /m \u003cmodule\u003e addtask \u003cdescription\u003e /by \u003cdate\u003e \u003ctime\u003e\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"jiexiong-zeng"},"content":"                + \"Add gradable task:  /m \u003cmodule\u003e addgradable \u003cdescription\u003e /by \u003cdate\u003e \u003ctime\u003e /w \u003cweightage\u003e\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"jiexiong-zeng"},"content":"                + \"Edit description: /m \u003cmodule\u003e editdesc \u003ctask index\u003e \u003cnew description\u003e\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"jiexiong-zeng"},"content":"                + \"Edit deadline: /m \u003cmodule\u003e editdate \u003ctask index\u003e \u003cnew deadline\u003e\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"jiexiong-zeng"},"content":"                + \"Delete task: /m \u003cmodule\u003e deletetask \u003csub string\u003e\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"jiexiong-zeng"},"content":"                + \"Mark task as complete: /m \u003cmodule\u003e done \u003ctask index\u003e\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"jiexiong-zeng"},"content":"                + \"Mark task as incomplete: /m \u003cmodule\u003e notdone \u003ctask index\u003e\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"jiexiong-zeng"},"content":"                + \"Mark gradable task as complete: /m \u003cmodule\u003e gradabledone \u003ctask index\u003e\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"jiexiong-zeng"},"content":"                + \"Mark gradable task as incomplete: /m \u003cmodule\u003e gradablenotdone \u003ctask index\u003e\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"jiexiong-zeng"},"content":"                + \"List module tasks: /m \u003cmodule\u003e list task \u003coptional argument\u003e\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"jiexiong-zeng"},"content":"                + \"Add class:  /m \u003cmodule\u003e addclass \u003cday/period/location/comments\u003e\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"jiexiong-zeng"},"content":"                + \"Delete class: /m \u003cmodule\u003e deleteclass \u003cclass index\u003e\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"jiexiong-zeng"},"content":"                + \"Add grade: /m \u003cmodule\u003e addgrade \u003cgrade letter\u003e\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"jiexiong-zeng"},"content":"                + \"Delete grade: /m \u003cmodule\u003e deletegrade\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"jiexiong-zeng"},"content":"                + \"Add credit: /m \u003cmodule\u003e addcredit\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"jiexiong-zeng"},"content":"                + \"Show timetable: timetable\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"jiexiong-zeng"},"content":"                + \"List all tasks: list task \u003coptional argument\u003e\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"jiexiong-zeng"},"content":"                + \"Show module cap: cap\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"jiexiong-zeng"},"content":"                + \"Show overall cap: allcap\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"jiexiong-zeng"},"content":"                + \"Exit NoCap: bye\");","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"jiexiong-zeng"},"content":"    public static void missingDescription() {","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"jiexiong-zeng"},"content":"        System.out.println(\"You are missing a description!\");","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"yzhedwin"},"content":"    public static void missingDate() {","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"yzhedwin"},"content":"        System.out.println(\"You are missing a date!\");","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"yapjoonsiong"},"content":"    public static void printStartMessage(String semester) {","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"yzhedwin"},"content":"        System.out.println(\"Welcome to NoCap\");","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"yapjoonsiong"},"content":"        System.out.println(\"You are now accessing semester: \" + semester);","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"yzhedwin"},"content":"    public static void printEndMessage() {","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"yzhedwin"},"content":"        System.out.println(\"Thank you for using NoCap\");","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"yzhedwin"},"content":"    public static void invalidDate() {","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"jiexiong-zeng"},"content":"        System.out.println(\"Missing /by\");","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"jiexiong-zeng"},"content":"    public static void invalidWeightage() {","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"jiexiong-zeng"},"content":"        System.out.println(\"Missing /w\");","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"yzhedwin"},"content":"    public static void wrongDateTimeFormat() {","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"yzhedwin"},"content":"        System.out.println(\"Wrong date format input!\");","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"jiexiong-zeng"},"content":"        System.out.println(\"Format: dd/MM/yyyy hhmm\");","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"yapjoonsiong"},"content":"    public static void inputNotInteger() {","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"yapjoonsiong"},"content":"        System.out.println(\"Input must be an integer!\");","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"yapjoonsiong"},"content":"    public static void switchSemesterMessage(String semester) {","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"yapjoonsiong"},"content":"        System.out.println(\"Semester successfully switched\");","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"yapjoonsiong"},"content":"        System.out.println(\"You are now accessing semester: \" + semester);","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"DmitriYam"},"content":"    public static void addModuleNameMessage(ModuleList moduleList) {","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"Module successfully added: \");","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"DmitriYam"},"content":"        moduleList.printModules();","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"DmitriYam"},"content":"    public static void addModuleGradeMessage(Module module) {","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"Module grade successfully added: \");","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(module);","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"DmitriYam"},"content":"    public static void addModuleCreditsMessage(Module module) {","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"Module credits successfully added: \");","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(module);","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"DmitriYam"},"content":"    public static void addModuleClassMessage(Module module) {","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"Module Class successfully added: \");","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(module.getScheduleList());","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"yzhedwin"},"content":"    public static void addTaskMessage(Task task, String moduleName) {","lastModifiedDate":"2021-10-04"},{"lineNumber":111,"author":{"gitId":"yzhedwin"},"content":"        System.out.println(\"Added new task to \" + moduleName);","lastModifiedDate":"2021-10-04"},{"lineNumber":112,"author":{"gitId":"yzhedwin"},"content":"        System.out.println(task);","lastModifiedDate":"2021-10-04"},{"lineNumber":113,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":114,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"yzhedwin"},"content":"    public static void printTaskList(String module, int taskCount) {","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"yzhedwin"},"content":"        System.out.println(\"Task List for \" + module.toUpperCase(Locale.ROOT) + \":\");","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"yzhedwin"},"content":"        System.out.println(\"There are \" + taskCount + \" tasks\");","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"yzhedwin"},"content":"    public static void printWeeklyTaskList(String module, int taskCount) {","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"yzhedwin"},"content":"        System.out.println(\"Task List for \" + module.toUpperCase(Locale.ROOT) + \":\");","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"yzhedwin"},"content":"        System.out.println(\"There are \" + taskCount + \" tasks due within 7 days\");","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"yzhedwin"},"content":"    public static void printMonthlyTaskList(String module, int taskCount) {","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"yzhedwin"},"content":"        System.out.println(\"Task List for \" + module.toUpperCase(Locale.ROOT) + \":\");","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"yzhedwin"},"content":"        System.out.println(\"There are \" + taskCount + \" tasks due within a month\");","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"yzhedwin"},"content":"    public static void printYearlyTaskList(String module, int taskCount) {","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"yzhedwin"},"content":"        System.out.println(\"Task List for \" + module.toUpperCase(Locale.ROOT) + \":\");","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"yzhedwin"},"content":"        System.out.println(\"There are \" + taskCount + \" tasks due within a year\");","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"yzhedwin"},"content":"    public static void printEmptyTaskList(String module) {","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"yzhedwin"},"content":"        System.out.println(\"There are no tasks due in \" + module.toUpperCase(Locale.ROOT));","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"yzhedwin"},"content":"    public static void printSortListByDate(String module) {","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"yzhedwin"},"content":"        System.out.println(module.toUpperCase(Locale.ROOT) + \" successfully sorted by date\");","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":144,"author":{"gitId":"yzhedwin"},"content":"    public static void printSortListByStatus(String module) {","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"yzhedwin"},"content":"        System.out.println(module.toUpperCase(Locale.ROOT) + \" successfully sorted by status\");","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":149,"author":{"gitId":"naijie2108"},"content":"     * Method to print error when save file cannot be parsed.","lastModifiedDate":"2021-11-06"},{"lineNumber":150,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":151,"author":{"gitId":"naijie2108"},"content":"    public static void parseSaveFileError() {","lastModifiedDate":"2021-11-06"},{"lineNumber":152,"author":{"gitId":"naijie2108"},"content":"        System.out.println(\"Error parsing save file\");","lastModifiedDate":"2021-11-06"},{"lineNumber":153,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":154,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":155,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":156,"author":{"gitId":"naijie2108"},"content":"     * Method to print error when a save file could not be written.","lastModifiedDate":"2021-11-06"},{"lineNumber":157,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":158,"author":{"gitId":"naijie2108"},"content":"    public static void writeSaveFileError() {","lastModifiedDate":"2021-11-06"},{"lineNumber":159,"author":{"gitId":"naijie2108"},"content":"        System.out.println(\"Error writing to save file\");","lastModifiedDate":"2021-11-06"},{"lineNumber":160,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":161,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":162,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":163,"author":{"gitId":"naijie2108"},"content":"     * Method to print error if there are errors when trying to save the file.","lastModifiedDate":"2021-11-06"},{"lineNumber":164,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":165,"author":{"gitId":"naijie2108"},"content":"    public static void saveFileError() {","lastModifiedDate":"2021-11-06"},{"lineNumber":166,"author":{"gitId":"naijie2108"},"content":"        System.out.println(\"Error saving file\");","lastModifiedDate":"2021-11-06"},{"lineNumber":167,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":168,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":169,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":170,"author":{"gitId":"naijie2108"},"content":"     * Method to print message when data is loaded successfully from a save file.","lastModifiedDate":"2021-11-06"},{"lineNumber":171,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":172,"author":{"gitId":"naijie2108"},"content":"    public static void loadFileSuccessful() {","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"naijie2108"},"content":"        System.out.println(\"Data loaded successfully\");","lastModifiedDate":"2021-11-04"},{"lineNumber":174,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":177,"author":{"gitId":"naijie2108"},"content":"     * Method to print message when a save file cannot be found.","lastModifiedDate":"2021-11-06"},{"lineNumber":178,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":179,"author":{"gitId":"naijie2108"},"content":"    public static void printNoSaveFileMessage() {","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"naijie2108"},"content":"        System.out.println(\"No save file found, starting with an empty template\");","lastModifiedDate":"2021-10-10"},{"lineNumber":181,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":183,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":184,"author":{"gitId":"naijie2108"},"content":"     * Method to print message when a save file is corrupted.","lastModifiedDate":"2021-11-06"},{"lineNumber":185,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":186,"author":{"gitId":"naijie2108"},"content":"    public static void printCorruptFileMessage() {","lastModifiedDate":"2021-11-06"},{"lineNumber":187,"author":{"gitId":"naijie2108"},"content":"        System.out.println(\"Error reading save file, creating new template\");","lastModifiedDate":"2021-11-06"},{"lineNumber":188,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":189,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":190,"author":{"gitId":"jiexiong-zeng"},"content":"    public static void printInvalidListFormat() {","lastModifiedDate":"2021-10-11"},{"lineNumber":191,"author":{"gitId":"jiexiong-zeng"},"content":"        System.out.println(\"The list format is wrong! Please use list module/tasks \"","lastModifiedDate":"2021-10-11"},{"lineNumber":192,"author":{"gitId":"yzhedwin"},"content":"                + \"[ sortbydate | sortbystatus ] [ w | m | y]\");","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"jiexiong-zeng"},"content":"        System.out.println(\"Please refer to the user guide or help function for more details!\");","lastModifiedDate":"2021-10-11"},{"lineNumber":194,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":195,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":196,"author":{"gitId":"yzhedwin"},"content":"    public static void printInvalidIndex() {","lastModifiedDate":"2021-10-13"},{"lineNumber":197,"author":{"gitId":"yzhedwin"},"content":"        System.out.println(\"Task with the specified index not found!\");","lastModifiedDate":"2021-10-13"},{"lineNumber":198,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":199,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":200,"author":{"gitId":"jiexiong-zeng"},"content":"    public static void printInvalidKeyword() {","lastModifiedDate":"2021-10-18"},{"lineNumber":201,"author":{"gitId":"jiexiong-zeng"},"content":"        System.out.println(\"Task with the specified keyword not found!\");","lastModifiedDate":"2021-10-18"},{"lineNumber":202,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":203,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":204,"author":{"gitId":"jiexiong-zeng"},"content":"    public static void printTaskFound() {","lastModifiedDate":"2021-10-18"},{"lineNumber":205,"author":{"gitId":"jiexiong-zeng"},"content":"        System.out.println(\"The following task(s) are found:\");","lastModifiedDate":"2021-10-18"},{"lineNumber":206,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":207,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":208,"author":{"gitId":"jiexiong-zeng"},"content":"    public static void printSelectIndex() {","lastModifiedDate":"2021-10-18"},{"lineNumber":209,"author":{"gitId":"jiexiong-zeng"},"content":"        System.out.println(\"Please choose a task to perform the action, or press x to cancel:\");","lastModifiedDate":"2021-10-31"},{"lineNumber":210,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":211,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":212,"author":{"gitId":"jiexiong-zeng"},"content":"    public static void printTaskDeleted(Task task) {","lastModifiedDate":"2021-10-31"},{"lineNumber":213,"author":{"gitId":"jiexiong-zeng"},"content":"        System.out.println(task.getDescription() + \" has been deleted.\");","lastModifiedDate":"2021-10-31"},{"lineNumber":214,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":215,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":216,"author":{"gitId":"yzhedwin"},"content":"    public static void printMarkDoneMessage(Task task) {","lastModifiedDate":"2021-10-13"},{"lineNumber":217,"author":{"gitId":"yzhedwin"},"content":"        System.out.println(\"Task is completed:\" + System.lineSeparator() + task);","lastModifiedDate":"2021-10-13"},{"lineNumber":218,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":219,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":220,"author":{"gitId":"jiexiong-zeng"},"content":"    public static void printMarkNotDoneMessage(Task task) {","lastModifiedDate":"2021-10-19"},{"lineNumber":221,"author":{"gitId":"jiexiong-zeng"},"content":"        System.out.println(\"Task is marked not complete:\" + System.lineSeparator() + task);","lastModifiedDate":"2021-10-19"},{"lineNumber":222,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":223,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":224,"author":{"gitId":"jiexiong-zeng"},"content":"    public static void printExitMessage() {","lastModifiedDate":"2021-10-11"},{"lineNumber":225,"author":{"gitId":"jiexiong-zeng"},"content":"        System.out.println(\"Thank you for using NoCap!\");","lastModifiedDate":"2021-10-11"},{"lineNumber":226,"author":{"gitId":"jiexiong-zeng"},"content":"        System.out.println(\"Have a nice day!\");","lastModifiedDate":"2021-10-11"},{"lineNumber":227,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":228,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":229,"author":{"gitId":"jiexiong-zeng"},"content":"    public static void duplicateModuleError() {","lastModifiedDate":"2021-10-13"},{"lineNumber":230,"author":{"gitId":"jiexiong-zeng"},"content":"        System.out.println(\"This module already exists!\");","lastModifiedDate":"2021-10-13"},{"lineNumber":231,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":232,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":233,"author":{"gitId":"jiexiong-zeng"},"content":"    public static void printInvalidInputMessage() {","lastModifiedDate":"2021-10-18"},{"lineNumber":234,"author":{"gitId":"jiexiong-zeng"},"content":"        System.out.println(\"Invalid Input!\");","lastModifiedDate":"2021-10-18"},{"lineNumber":235,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":236,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":237,"author":{"gitId":"jiexiong-zeng"},"content":"    public static void printInvalidModuleNameMessage() {","lastModifiedDate":"2021-10-18"},{"lineNumber":238,"author":{"gitId":"jiexiong-zeng"},"content":"        System.out.println(\"Invalid Module name!\");","lastModifiedDate":"2021-10-18"},{"lineNumber":239,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":240,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":241,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":242,"author":{"gitId":"naijie2108"},"content":"     * Method to print overall task list that has been sorted by date.","lastModifiedDate":"2021-11-06"},{"lineNumber":243,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":244,"author":{"gitId":"naijie2108"},"content":"     * @param newTaskList Overall task list to be printed.","lastModifiedDate":"2021-11-06"},{"lineNumber":245,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":246,"author":{"gitId":"naijie2108"},"content":"    public static void printOverallListOrderedByDate(List\u003cOverallTask\u003e newTaskList) {","lastModifiedDate":"2021-10-18"},{"lineNumber":247,"author":{"gitId":"naijie2108"},"content":"        System.out.println(\"Tasks sorted by date: \");","lastModifiedDate":"2021-10-18"},{"lineNumber":248,"author":{"gitId":"naijie2108"},"content":"        if (newTaskList.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":249,"author":{"gitId":"naijie2108"},"content":"            System.out.println(\"You have no tasks\");","lastModifiedDate":"2021-10-19"},{"lineNumber":250,"author":{"gitId":"naijie2108"},"content":"            return;","lastModifiedDate":"2021-10-19"},{"lineNumber":251,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":252,"author":{"gitId":"naijie2108"},"content":"        for (int i \u003d 0; i \u003c newTaskList.size(); i++) {","lastModifiedDate":"2021-10-18"},{"lineNumber":253,"author":{"gitId":"naijie2108"},"content":"            System.out.println((i + 1) + \". \" + newTaskList.get(i));","lastModifiedDate":"2021-10-18"},{"lineNumber":254,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":255,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":256,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":257,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":258,"author":{"gitId":"naijie2108"},"content":"     * Method to print overall task list that has been sorted by status.","lastModifiedDate":"2021-11-06"},{"lineNumber":259,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":260,"author":{"gitId":"naijie2108"},"content":"     * @param newTaskList Overall task list to be printed.","lastModifiedDate":"2021-11-06"},{"lineNumber":261,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":262,"author":{"gitId":"naijie2108"},"content":"    public static void printOverallListOrderedByStatus(List\u003cOverallTask\u003e newTaskList) {","lastModifiedDate":"2021-10-18"},{"lineNumber":263,"author":{"gitId":"naijie2108"},"content":"        System.out.println(\"Tasks sorted by status: \");","lastModifiedDate":"2021-10-18"},{"lineNumber":264,"author":{"gitId":"naijie2108"},"content":"        if (newTaskList.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":265,"author":{"gitId":"naijie2108"},"content":"            System.out.println(\"You have no tasks\");","lastModifiedDate":"2021-10-19"},{"lineNumber":266,"author":{"gitId":"naijie2108"},"content":"            return;","lastModifiedDate":"2021-10-19"},{"lineNumber":267,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":268,"author":{"gitId":"naijie2108"},"content":"        for (int i \u003d 0; i \u003c newTaskList.size(); i++) {","lastModifiedDate":"2021-10-18"},{"lineNumber":269,"author":{"gitId":"naijie2108"},"content":"            System.out.println((i + 1) + \". \" + newTaskList.get(i));","lastModifiedDate":"2021-10-18"},{"lineNumber":270,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":271,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":272,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":273,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":274,"author":{"gitId":"naijie2108"},"content":"     * Method to print overall task list containing weekly tasks.","lastModifiedDate":"2021-11-06"},{"lineNumber":275,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":276,"author":{"gitId":"naijie2108"},"content":"     * @param newTaskList Overall task list to be printed.","lastModifiedDate":"2021-11-06"},{"lineNumber":277,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":278,"author":{"gitId":"naijie2108"},"content":"    public static void printOverallWeeklyTasks(List\u003cOverallTask\u003e newTaskList) {","lastModifiedDate":"2021-10-18"},{"lineNumber":279,"author":{"gitId":"naijie2108"},"content":"        System.out.println(\"Weekly tasks: \");","lastModifiedDate":"2021-10-18"},{"lineNumber":280,"author":{"gitId":"naijie2108"},"content":"        if (newTaskList.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":281,"author":{"gitId":"naijie2108"},"content":"            System.out.println(\"You have no weekly tasks\");","lastModifiedDate":"2021-10-19"},{"lineNumber":282,"author":{"gitId":"naijie2108"},"content":"            return;","lastModifiedDate":"2021-10-19"},{"lineNumber":283,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":284,"author":{"gitId":"naijie2108"},"content":"        for (int i \u003d 0; i \u003c newTaskList.size(); i++) {","lastModifiedDate":"2021-10-18"},{"lineNumber":285,"author":{"gitId":"naijie2108"},"content":"            System.out.println((i + 1) + \". \" + newTaskList.get(i));","lastModifiedDate":"2021-10-18"},{"lineNumber":286,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":287,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":288,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":289,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":290,"author":{"gitId":"naijie2108"},"content":"     * Method to print overall task list containing monthly tasks.","lastModifiedDate":"2021-11-06"},{"lineNumber":291,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":292,"author":{"gitId":"naijie2108"},"content":"     * @param newTaskList Overall task list to be printed.","lastModifiedDate":"2021-11-06"},{"lineNumber":293,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":294,"author":{"gitId":"naijie2108"},"content":"    public static void printOverallMonthlyTasks(List\u003cOverallTask\u003e newTaskList) {","lastModifiedDate":"2021-10-18"},{"lineNumber":295,"author":{"gitId":"naijie2108"},"content":"        System.out.println(\"Monthly tasks: \");","lastModifiedDate":"2021-10-18"},{"lineNumber":296,"author":{"gitId":"naijie2108"},"content":"        if (newTaskList.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":297,"author":{"gitId":"naijie2108"},"content":"            System.out.println(\"You have no monthly tasks\");","lastModifiedDate":"2021-10-19"},{"lineNumber":298,"author":{"gitId":"naijie2108"},"content":"            return;","lastModifiedDate":"2021-10-19"},{"lineNumber":299,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":300,"author":{"gitId":"naijie2108"},"content":"        for (int i \u003d 0; i \u003c newTaskList.size(); i++) {","lastModifiedDate":"2021-10-18"},{"lineNumber":301,"author":{"gitId":"naijie2108"},"content":"            System.out.println((i + 1) + \". \" + newTaskList.get(i));","lastModifiedDate":"2021-10-18"},{"lineNumber":302,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":303,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":304,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":305,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":306,"author":{"gitId":"naijie2108"},"content":"     * Method to print overall task list containing yearly tasks.","lastModifiedDate":"2021-11-06"},{"lineNumber":307,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":308,"author":{"gitId":"naijie2108"},"content":"     * @param newTaskList Overall task list to be printed.","lastModifiedDate":"2021-11-06"},{"lineNumber":309,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":310,"author":{"gitId":"naijie2108"},"content":"    public static void printOverallYearlyTasks(List\u003cOverallTask\u003e newTaskList) {","lastModifiedDate":"2021-10-18"},{"lineNumber":311,"author":{"gitId":"naijie2108"},"content":"        System.out.println(\"Yearly tasks: \");","lastModifiedDate":"2021-10-18"},{"lineNumber":312,"author":{"gitId":"naijie2108"},"content":"        if (newTaskList.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":313,"author":{"gitId":"naijie2108"},"content":"            System.out.println(\"You have no yearly tasks\");","lastModifiedDate":"2021-10-19"},{"lineNumber":314,"author":{"gitId":"naijie2108"},"content":"            return;","lastModifiedDate":"2021-10-19"},{"lineNumber":315,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":316,"author":{"gitId":"naijie2108"},"content":"        for (int i \u003d 0; i \u003c newTaskList.size(); i++) {","lastModifiedDate":"2021-10-18"},{"lineNumber":317,"author":{"gitId":"naijie2108"},"content":"            System.out.println((i + 1) + \". \" + newTaskList.get(i));","lastModifiedDate":"2021-10-18"},{"lineNumber":318,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":319,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":320,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":321,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":322,"author":{"gitId":"naijie2108"},"content":"     * Method to print all tasks in an overall task list.","lastModifiedDate":"2021-11-06"},{"lineNumber":323,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":324,"author":{"gitId":"naijie2108"},"content":"     * @param overallTaskList Overall task list to be printed.","lastModifiedDate":"2021-11-06"},{"lineNumber":325,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":326,"author":{"gitId":"naijie2108"},"content":"    public static void printAllOverallTasks(ArrayList\u003cOverallTask\u003e overallTaskList) {","lastModifiedDate":"2021-10-19"},{"lineNumber":327,"author":{"gitId":"naijie2108"},"content":"        System.out.println(\"All tasks: \");","lastModifiedDate":"2021-10-19"},{"lineNumber":328,"author":{"gitId":"naijie2108"},"content":"        if (overallTaskList.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":329,"author":{"gitId":"naijie2108"},"content":"            System.out.println(\"You have no tasks\");","lastModifiedDate":"2021-10-19"},{"lineNumber":330,"author":{"gitId":"naijie2108"},"content":"            return;","lastModifiedDate":"2021-10-19"},{"lineNumber":331,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":332,"author":{"gitId":"naijie2108"},"content":"        for (int i \u003d 0; i \u003c overallTaskList.size(); i++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":333,"author":{"gitId":"naijie2108"},"content":"            System.out.println((i + 1) + \". \" + overallTaskList.get(i));","lastModifiedDate":"2021-10-19"},{"lineNumber":334,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":335,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":336,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":337,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":338,"author":{"gitId":"naijie2108"},"content":"     * Method to print overall task list containing only gradable tasks.","lastModifiedDate":"2021-11-06"},{"lineNumber":339,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":340,"author":{"gitId":"naijie2108"},"content":"     * @param newTaskList Overall task list to be printed.","lastModifiedDate":"2021-11-06"},{"lineNumber":341,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":342,"author":{"gitId":"naijie2108"},"content":"    public static void printGradableTasks(List\u003cOverallTask\u003e newTaskList) {","lastModifiedDate":"2021-10-24"},{"lineNumber":343,"author":{"gitId":"naijie2108"},"content":"        System.out.println(\"Gradable tasks: \");","lastModifiedDate":"2021-10-24"},{"lineNumber":344,"author":{"gitId":"naijie2108"},"content":"        if (newTaskList.isEmpty()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":345,"author":{"gitId":"naijie2108"},"content":"            System.out.println(\"You have no gradable tasks\");","lastModifiedDate":"2021-10-24"},{"lineNumber":346,"author":{"gitId":"naijie2108"},"content":"            return;","lastModifiedDate":"2021-10-24"},{"lineNumber":347,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":348,"author":{"gitId":"naijie2108"},"content":"        for (int i \u003d 0; i \u003c newTaskList.size(); i++) {","lastModifiedDate":"2021-10-24"},{"lineNumber":349,"author":{"gitId":"naijie2108"},"content":"            System.out.println((i + 1) + \". \" + newTaskList.get(i));","lastModifiedDate":"2021-10-24"},{"lineNumber":350,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":351,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":352,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":353,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":354,"author":{"gitId":"naijie2108"},"content":"     * Method to print overall task list containing only non-gradable tasks.","lastModifiedDate":"2021-11-06"},{"lineNumber":355,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":356,"author":{"gitId":"naijie2108"},"content":"     * @param newTaskList Overall task list to be printed.","lastModifiedDate":"2021-11-06"},{"lineNumber":357,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":358,"author":{"gitId":"naijie2108"},"content":"    public static void printNormalTasks(List\u003cOverallTask\u003e newTaskList) {","lastModifiedDate":"2021-11-01"},{"lineNumber":359,"author":{"gitId":"naijie2108"},"content":"        System.out.println(\"Non-gradable tasks: \");","lastModifiedDate":"2021-11-01"},{"lineNumber":360,"author":{"gitId":"naijie2108"},"content":"        if (newTaskList.isEmpty()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":361,"author":{"gitId":"naijie2108"},"content":"            System.out.println(\"You have no non-gradable tasks\");","lastModifiedDate":"2021-11-01"},{"lineNumber":362,"author":{"gitId":"naijie2108"},"content":"            return;","lastModifiedDate":"2021-11-01"},{"lineNumber":363,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":364,"author":{"gitId":"naijie2108"},"content":"        for (int i \u003d 0; i \u003c newTaskList.size(); i++) {","lastModifiedDate":"2021-11-01"},{"lineNumber":365,"author":{"gitId":"naijie2108"},"content":"            System.out.println((i + 1) + \". \" + newTaskList.get(i));","lastModifiedDate":"2021-11-01"},{"lineNumber":366,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":367,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":368,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":369,"author":{"gitId":"DmitriYam"},"content":"    public static void visualiseGradableTask(GradableTaskList gl) {","lastModifiedDate":"2021-10-23"},{"lineNumber":370,"author":{"gitId":"DmitriYam"},"content":"        VisualiseGradable v \u003d new VisualiseGradable(gl);","lastModifiedDate":"2021-10-23"},{"lineNumber":371,"author":{"gitId":"DmitriYam"},"content":"        v.print();","lastModifiedDate":"2021-10-23"},{"lineNumber":372,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":373,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":374,"author":{"gitId":"DmitriYam"},"content":"    public static void wrongWeightage() {","lastModifiedDate":"2021-10-24"},{"lineNumber":375,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"Invalid Weightage, must be between 5 and 100 inclusive.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":376,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":377,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":378,"author":{"gitId":"DmitriYam"},"content":"    public static void wrongWeightageSplits() {","lastModifiedDate":"2021-10-24"},{"lineNumber":379,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"Sum of all weightages cannot exceed 100%\");","lastModifiedDate":"2021-10-24"},{"lineNumber":380,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":381,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":382,"author":{"gitId":"jiexiong-zeng"},"content":"    public static void moduleNameHasSpace() {","lastModifiedDate":"2021-10-26"},{"lineNumber":383,"author":{"gitId":"jiexiong-zeng"},"content":"        System.out.println(\"Module name cannot include space.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":384,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":385,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":386,"author":{"gitId":"yzhedwin"},"content":"    public static void duplicateTaskError() {","lastModifiedDate":"2021-10-27"},{"lineNumber":387,"author":{"gitId":"yzhedwin"},"content":"        System.out.println(\"Doing this will result in duplicate tasks!\");","lastModifiedDate":"2021-10-31"},{"lineNumber":388,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":389,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":390,"author":{"gitId":"yzhedwin"},"content":"    public static void taskUpdateMessage() {","lastModifiedDate":"2021-10-27"},{"lineNumber":391,"author":{"gitId":"yzhedwin"},"content":"        System.out.println(\"The task you are trying to add already exists\");","lastModifiedDate":"2021-10-27"},{"lineNumber":392,"author":{"gitId":"yzhedwin"},"content":"        System.out.println(\"Deadline for this task has been updated\");","lastModifiedDate":"2021-10-27"},{"lineNumber":393,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":394,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":395,"author":{"gitId":"yzhedwin"},"content":"    public static void printUpdateTaskDescription(Task t) {","lastModifiedDate":"2021-11-05"},{"lineNumber":396,"author":{"gitId":"yzhedwin"},"content":"        System.out.println(\"Task is updated with a new description.\"","lastModifiedDate":"2021-11-05"},{"lineNumber":397,"author":{"gitId":"yzhedwin"},"content":"                + System.lineSeparator() + \"This is your new Task:\"","lastModifiedDate":"2021-11-05"},{"lineNumber":398,"author":{"gitId":"yzhedwin"},"content":"                + System.lineSeparator() + t);","lastModifiedDate":"2021-11-05"},{"lineNumber":399,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":400,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":401,"author":{"gitId":"DmitriYam"},"content":"    public static void deleteModuleMessage(Module m) {","lastModifiedDate":"2021-10-28"},{"lineNumber":402,"author":{"gitId":"DmitriYam"},"content":"        System.out.print(m.getModuleName());","lastModifiedDate":"2021-10-28"},{"lineNumber":403,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\" has been successfully deleted\");","lastModifiedDate":"2021-10-28"},{"lineNumber":404,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":405,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":406,"author":{"gitId":"DmitriYam"},"content":"    public static void deleteScheduleMessage(Schedule s) {","lastModifiedDate":"2021-10-28"},{"lineNumber":407,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"Class: \");","lastModifiedDate":"2021-10-28"},{"lineNumber":408,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(s);","lastModifiedDate":"2021-10-28"},{"lineNumber":409,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"has been successfully deleted\");","lastModifiedDate":"2021-10-28"},{"lineNumber":410,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":411,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":412,"author":{"gitId":"DmitriYam"},"content":"    public static void printRemainingModules() {","lastModifiedDate":"2021-10-28"},{"lineNumber":413,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"Remaining Modules are: \");","lastModifiedDate":"2021-10-28"},{"lineNumber":414,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":415,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":416,"author":{"gitId":"DmitriYam"},"content":"    public static void printRemainingSchedules(ScheduleList sl) {","lastModifiedDate":"2021-10-28"},{"lineNumber":417,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"\\nRemaining Classes are: \");","lastModifiedDate":"2021-10-28"},{"lineNumber":418,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(sl);","lastModifiedDate":"2021-10-28"},{"lineNumber":419,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":420,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":421,"author":{"gitId":"DmitriYam"},"content":"    public static void deleteGradeMesage(Module m) {","lastModifiedDate":"2021-10-28"},{"lineNumber":422,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"Module grade has been successfully deleted\");","lastModifiedDate":"2021-10-28"},{"lineNumber":423,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(m);","lastModifiedDate":"2021-10-28"},{"lineNumber":424,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":425,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":426,"author":{"gitId":"DmitriYam"},"content":"    public static void emptyModuleListMessage() {","lastModifiedDate":"2021-10-31"},{"lineNumber":427,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"You currently have no Modules.\");","lastModifiedDate":"2021-10-31"},{"lineNumber":428,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":429,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":430,"author":{"gitId":"DmitriYam"},"content":"    public static void invalidGrade() {","lastModifiedDate":"2021-11-01"},{"lineNumber":431,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"Invalid grade!\");","lastModifiedDate":"2021-11-01"},{"lineNumber":432,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":433,"author":{"gitId":"jiexiong-zeng"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"yapjoonsiong":11,"naijie2108":173,"DmitriYam":72,"yzhedwin":79,"jiexiong-zeng":98}},{"path":"src/main/java/command/VisualiseGradable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DmitriYam"},"content":"package command;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"DmitriYam"},"content":"import task.GradableTask;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"DmitriYam"},"content":"import task.GradableTaskList;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"DmitriYam"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"DmitriYam"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"DmitriYam"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"DmitriYam"},"content":"public class VisualiseGradable {","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"    String[] signs \u003d new String[]{\"#\", \"@\", \"\u0026\", \"+\"};","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"DmitriYam"},"content":"    public GradableTaskList gradableTaskList;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"DmitriYam"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"DmitriYam"},"content":"     * Constructor for VisualiseGrdable.","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"DmitriYam"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"DmitriYam"},"content":"     * @param gl GradableTaskList to be visualised.","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"DmitriYam"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"DmitriYam"},"content":"    public VisualiseGradable(GradableTaskList gl) {","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"DmitriYam"},"content":"        assert (gl !\u003d null);","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"DmitriYam"},"content":"        this.gradableTaskList \u003d gl;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"DmitriYam"},"content":"    private int getLength(GradableTask gradableTask) {","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"DmitriYam"},"content":"        return gradableTask.getWeightage();","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"DmitriYam"},"content":"    private String printMidBar() {","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"DmitriYam"},"content":"        StringBuilder midLine \u003d new StringBuilder();","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"DmitriYam"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"DmitriYam"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"DmitriYam"},"content":"            while (count \u003c this.gradableTaskList.size()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"DmitriYam"},"content":"                for (int i \u003d 0; i \u003c getLength(this.gradableTaskList.getGradableTask(count)); i++) {","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"DmitriYam"},"content":"                    midLine.append(signs[count % 4]);","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"DmitriYam"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"DmitriYam"},"content":"                count++;","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"DmitriYam"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"DmitriYam"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"DmitriYam"},"content":"            System.out.println(e);","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"DmitriYam"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"DmitriYam"},"content":"        return midLine.toString();","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"DmitriYam"},"content":"    private String printBottomBar() {","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"DmitriYam"},"content":"        StringBuilder bottomLine \u003d new StringBuilder();","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"DmitriYam"},"content":"        StringBuilder legend \u003d new StringBuilder();","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"DmitriYam"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"DmitriYam"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"DmitriYam"},"content":"            while (count \u003c this.gradableTaskList.size()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"DmitriYam"},"content":"                StringBuilder bottomLinePart \u003d new StringBuilder();","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"DmitriYam"},"content":"                int descriptionLength \u003d this.gradableTaskList.getGradableTask(count).getDescription().length();","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"DmitriYam"},"content":"                int weightageLength \u003d getLength(this.gradableTaskList.getGradableTask(count));","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"DmitriYam"},"content":"                int dashLength \u003d (weightageLength - 3) / 2;","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"DmitriYam"},"content":"                bottomLinePart.append(\"|\");","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"DmitriYam"},"content":"                bottomLinePart.append(\"-\".repeat(Math.max(0, (dashLength))));","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"DmitriYam"},"content":"                bottomLinePart.append(count + 1);","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"DmitriYam"},"content":"                bottomLinePart.append(\"-\".repeat(Math.max(0, (dashLength))));","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"DmitriYam"},"content":"                while (bottomLinePart.toString().length() \u003c weightageLength - 1) {","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"DmitriYam"},"content":"                    bottomLinePart.append(\"-\");","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"DmitriYam"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"DmitriYam"},"content":"                bottomLinePart.append(\"|\");","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"DmitriYam"},"content":"                bottomLine.append(bottomLinePart);","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"DmitriYam"},"content":"                legend.append(count + 1);","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"DmitriYam"},"content":"                legend.append(\": \");","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"DmitriYam"},"content":"                legend.append(this.gradableTaskList.getGradableTask(count).getDescription());","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"DmitriYam"},"content":"                legend.append(System.lineSeparator());","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"DmitriYam"},"content":"                count++;","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"DmitriYam"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"DmitriYam"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"DmitriYam"},"content":"            System.out.println(e);","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"DmitriYam"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"DmitriYam"},"content":"        bottomLine.append(System.lineSeparator());","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"DmitriYam"},"content":"        bottomLine.append(legend);","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"DmitriYam"},"content":"        return bottomLine.toString();","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"DmitriYam"},"content":"    private String printTopBar() {","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"DmitriYam"},"content":"        StringBuilder topLine \u003d new StringBuilder();","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"DmitriYam"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"DmitriYam"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"DmitriYam"},"content":"            while (count \u003c this.gradableTaskList.size()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"DmitriYam"},"content":"                StringBuilder linePart \u003d new StringBuilder();","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"DmitriYam"},"content":"                int weightageLength \u003d getLength(this.gradableTaskList.getGradableTask(count));","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"DmitriYam"},"content":"                int dashLength \u003d (weightageLength - 5) / 2;","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"DmitriYam"},"content":"                linePart.append(\"\u003c\");","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"DmitriYam"},"content":"                linePart.append(\"\u003d\".repeat(Math.max(0, (dashLength))));","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"DmitriYam"},"content":"                linePart.append(this.gradableTaskList.getGradableTask(count).getWeightage());","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"DmitriYam"},"content":"                linePart.append(\"%\");","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"DmitriYam"},"content":"                linePart.append(\"\u003d\".repeat(Math.max(0, (dashLength))));","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"DmitriYam"},"content":"                while (linePart.toString().length() \u003c weightageLength - 1) {","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"DmitriYam"},"content":"                    linePart.append(\"\u003d\");","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"DmitriYam"},"content":"                }","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"DmitriYam"},"content":"                linePart.append(\"\u003e\");","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"DmitriYam"},"content":"                topLine.append(linePart);","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"DmitriYam"},"content":"                count++;","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"DmitriYam"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"DmitriYam"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"DmitriYam"},"content":"            System.out.println(e);","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"DmitriYam"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"DmitriYam"},"content":"        return topLine.toString();","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"DmitriYam"},"content":"    private List\u003cGradableTask\u003e sortByDone() {","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"DmitriYam"},"content":"        List\u003cGradableTask\u003e sorted \u003d new ArrayList\u003cGradableTask\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"DmitriYam"},"content":"        sorted.addAll(this.gradableTaskList.getGradableTaskList());","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"DmitriYam"},"content":"        sorted.sort(new Comparator\u003cGradableTask\u003e() {","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"DmitriYam"},"content":"            @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"DmitriYam"},"content":"            public int compare(GradableTask o1, GradableTask o2) {","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"DmitriYam"},"content":"                return Boolean.compare(o1.isDone(), o2.isDone());","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"DmitriYam"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"DmitriYam"},"content":"        });","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"DmitriYam"},"content":"        return sorted;","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"DmitriYam"},"content":"    private void showByDone() {","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"DmitriYam"},"content":"        List\u003cGradableTask\u003e sorted \u003d sortByDone();","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"DmitriYam"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"DmitriYam"},"content":"        for (GradableTask g : sorted) {","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"DmitriYam"},"content":"            if (!g.isDone()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"DmitriYam"},"content":"                count++;","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"DmitriYam"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"DmitriYam"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"naijie2108"},"content":"        List\u003cGradableTask\u003e undone \u003d sorted.subList(0, count);","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"naijie2108"},"content":"        System.out.println(\"Uncompleted:\");","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"naijie2108"},"content":"        for (GradableTask g : undone) {","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"naijie2108"},"content":"            System.out.println(g);","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"naijie2108"},"content":"        List\u003cGradableTask\u003e done \u003d sorted.subList(count, sorted.size());","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"naijie2108"},"content":"        System.out.println(\"Completed:\");","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"naijie2108"},"content":"        for (GradableTask g : done) {","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"naijie2108"},"content":"            System.out.println(g);","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"DmitriYam"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":138,"author":{"gitId":"DmitriYam"},"content":"     * Method to print the GradableTaskList to the terminal","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"DmitriYam"},"content":"     * Individual methods to print out each part of the visualised GradableTaskList is called in order.","lastModifiedDate":"2021-10-28"},{"lineNumber":140,"author":{"gitId":"DmitriYam"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":141,"author":{"gitId":"DmitriYam"},"content":"    public void print() {","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(\"BREAKDOWN:\");","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(printTopBar());","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(printMidBar());","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"DmitriYam"},"content":"        System.out.println(printBottomBar());","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"DmitriYam"},"content":"        System.out.print(this.gradableTaskList);","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"DmitriYam"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"naijie2108":12,"DmitriYam":137}},{"path":"src/main/java/command/parser/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexiong-zeng"},"content":"package command.parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"jiexiong-zeng"},"content":"import command.NoCap;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"jiexiong-zeng"},"content":"import command.Ui;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"jiexiong-zeng"},"content":"import command.storage.StorageEncoder;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"jiexiong-zeng"},"content":"import exceptions.NoCapExceptions;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"jiexiong-zeng"},"content":"import module.Module;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"jiexiong-zeng"},"content":"import task.GradableTask;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"jiexiong-zeng"},"content":"import task.Task;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"yzhedwin"},"content":"import task.TaskList;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"jiexiong-zeng"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"jiexiong-zeng"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"jiexiong-zeng"},"content":" * Class containing parser methods that calls commands to other classes.","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"jiexiong-zeng"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"jiexiong-zeng"},"content":"public class Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"jiexiong-zeng"},"content":"    private final ParserChecks parserChecks \u003d new ParserChecks();","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"jiexiong-zeng"},"content":"    public Command() {","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"jiexiong-zeng"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"jiexiong-zeng"},"content":"     * Takes in an input string and parse it for semester index.","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"jiexiong-zeng"},"content":"     * Checks input is indeed an integer and not empty.","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param taskDescription string index of Semester to switch to.","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"jiexiong-zeng"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"jiexiong-zeng"},"content":"    void commandSwitchSemester(String taskDescription) {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"jiexiong-zeng"},"content":"        if (parserChecks.isEmptyDescription(taskDescription)","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"jiexiong-zeng"},"content":"                | parserChecks.isNotInteger(taskDescription)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"jiexiong-zeng"},"content":"            return;","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"jiexiong-zeng"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"jiexiong-zeng"},"content":"            NoCap.semesterList.setAccessedSemesterIndex(Integer.parseInt(taskDescription) - 1);","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"jiexiong-zeng"},"content":"            Ui.switchSemesterMessage(NoCap.semesterList","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"jiexiong-zeng"},"content":"                    .get(Integer.parseInt(taskDescription) - 1).getSemester());","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"naijie2108"},"content":"            StorageEncoder.encodeAndSaveSemesterListToJson(NoCap.semesterList);","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"jiexiong-zeng"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"jiexiong-zeng"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"jiexiong-zeng"},"content":"    void commandPrintCap() {","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"jiexiong-zeng"},"content":"            NoCap.semester.printCap();","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"naijie2108"},"content":"            StorageEncoder.encodeAndSaveSemesterListToJson(NoCap.semesterList);","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"yapjoonsiong"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"jiexiong-zeng"},"content":"    void commandPrintAllCap() {","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"jiexiong-zeng"},"content":"            NoCap.semesterList.printAllCap();","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"naijie2108"},"content":"            StorageEncoder.encodeAndSaveSemesterListToJson(NoCap.semesterList);","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"yapjoonsiong"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"jiexiong-zeng"},"content":"    void commandPrintTimeTable() {","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"jiexiong-zeng"},"content":"        NoCap.moduleList.printTimeTable();","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"naijie2108"},"content":"        StorageEncoder.encodeAndSaveSemesterListToJson(NoCap.semesterList);","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"jiexiong-zeng"},"content":"    void commandShowInfo(Module module) {","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"jiexiong-zeng"},"content":"        module.showInformation();","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"jiexiong-zeng"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"jiexiong-zeng"},"content":"     * Takes in an input string and parse it for module name","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"jiexiong-zeng"},"content":"     * Checks input is not empty, module name does not already exists and does not include spaces.","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param taskDescription module name to add.","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"jiexiong-zeng"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"jiexiong-zeng"},"content":"    void commandAddModule(String taskDescription) {","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"jiexiong-zeng"},"content":"        if (parserChecks.isEmptyDescription(taskDescription)","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"jiexiong-zeng"},"content":"                || parserChecks.isDuplicateModule(taskDescription)","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"jiexiong-zeng"},"content":"                || parserChecks.includeSpace(taskDescription)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"jiexiong-zeng"},"content":"            return;","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"jiexiong-zeng"},"content":"            NoCap.moduleList.add(taskDescription.toUpperCase(Locale.ROOT));","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"jiexiong-zeng"},"content":"            Ui.addModuleNameMessage(NoCap.moduleList);","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"jiexiong-zeng"},"content":"            StorageEncoder.encodeAndSaveSemesterListToJson(NoCap.semesterList);","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"yapjoonsiong"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"jiexiong-zeng"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":94,"author":{"gitId":"jiexiong-zeng"},"content":"     * Takes in an input string and parse it for class information.","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"jiexiong-zeng"},"content":"     * Checks input is not empty.","lastModifiedDate":"2021-11-02"},{"lineNumber":96,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param module module in which the class is to be added to.","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param taskDescription class to add.","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"jiexiong-zeng"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":100,"author":{"gitId":"jiexiong-zeng"},"content":"    void commandAddClass(Module module, String taskDescription) {","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"jiexiong-zeng"},"content":"        if (parserChecks.isEmptyDescription(taskDescription)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"jiexiong-zeng"},"content":"            return;","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"jiexiong-zeng"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"jiexiong-zeng"},"content":"            module.addClass(taskDescription);","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"jiexiong-zeng"},"content":"            Ui.addModuleClassMessage(module);","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"jiexiong-zeng"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"jiexiong-zeng"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"jiexiong-zeng"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":113,"author":{"gitId":"jiexiong-zeng"},"content":"     * Takes in an input string and parse it for task information","lastModifiedDate":"2021-11-02"},{"lineNumber":114,"author":{"gitId":"jiexiong-zeng"},"content":"     * Checks input is not empty and contains /by.","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":116,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param module module in which the task is to be added to.","lastModifiedDate":"2021-11-02"},{"lineNumber":117,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param taskDescription module name to add.","lastModifiedDate":"2021-11-02"},{"lineNumber":118,"author":{"gitId":"jiexiong-zeng"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"jiexiong-zeng"},"content":"    void commandAddTask(Module module, String taskDescription) {","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"jiexiong-zeng"},"content":"        if (parserChecks.isEmptyDescription(taskDescription)","lastModifiedDate":"2021-11-02"},{"lineNumber":121,"author":{"gitId":"jiexiong-zeng"},"content":"                || !parserChecks.hasDateDescription(taskDescription)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":122,"author":{"gitId":"jiexiong-zeng"},"content":"            return;","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"jiexiong-zeng"},"content":"        module.addTask(taskDescription);","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"jiexiong-zeng"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":128,"author":{"gitId":"jiexiong-zeng"},"content":"     * Takes in an input string and parse it for task information","lastModifiedDate":"2021-11-02"},{"lineNumber":129,"author":{"gitId":"jiexiong-zeng"},"content":"     * Checks input is not empty and contains /by and /w.","lastModifiedDate":"2021-11-02"},{"lineNumber":130,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":131,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param module module in which the gradable task is to be added to.","lastModifiedDate":"2021-11-02"},{"lineNumber":132,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param taskDescription module name to add.","lastModifiedDate":"2021-11-02"},{"lineNumber":133,"author":{"gitId":"jiexiong-zeng"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":134,"author":{"gitId":"jiexiong-zeng"},"content":"    void commandAddGradable(Module module, String taskDescription) {","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"jiexiong-zeng"},"content":"        if (parserChecks.isEmptyDescription(taskDescription)","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"jiexiong-zeng"},"content":"                || !parserChecks.hasDateDescription(taskDescription)","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"jiexiong-zeng"},"content":"                || !parserChecks.hasWeightageDescription(taskDescription)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"jiexiong-zeng"},"content":"            return;","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"jiexiong-zeng"},"content":"        module.addGradableTask(taskDescription);","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"DmitriYam"},"content":"        Ui.visualiseGradableTask(module.getGradableTaskList());","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"jiexiong-zeng"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":145,"author":{"gitId":"jiexiong-zeng"},"content":"     * Takes in an input string and parse it for grade information","lastModifiedDate":"2021-11-02"},{"lineNumber":146,"author":{"gitId":"jiexiong-zeng"},"content":"     * Checks input is not empty and contains a valid grade digit.","lastModifiedDate":"2021-11-02"},{"lineNumber":147,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":148,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param module module in which the grade is to be added to.","lastModifiedDate":"2021-11-02"},{"lineNumber":149,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param taskDescription grade to add","lastModifiedDate":"2021-11-02"},{"lineNumber":150,"author":{"gitId":"jiexiong-zeng"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":151,"author":{"gitId":"jiexiong-zeng"},"content":"    void commandAddGrade(Module module, String taskDescription) {","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"DmitriYam"},"content":"        if (parserChecks.isEmptyDescription(taskDescription) || !parserChecks.validGrade(taskDescription)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":153,"author":{"gitId":"jiexiong-zeng"},"content":"            return;","lastModifiedDate":"2021-10-23"},{"lineNumber":154,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":155,"author":{"gitId":"jiexiong-zeng"},"content":"        module.addGrade(taskDescription);","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"jiexiong-zeng"},"content":"        Ui.addModuleGradeMessage(module);","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":158,"author":{"gitId":"jiexiong-zeng"},"content":"            NoCap.semester.updateCap();","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":160,"author":{"gitId":"yapjoonsiong"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-11-02"},{"lineNumber":161,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":162,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":163,"author":{"gitId":"jiexiong-zeng"},"content":"            NoCap.semesterList.updateCap();","lastModifiedDate":"2021-10-23"},{"lineNumber":164,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":165,"author":{"gitId":"yapjoonsiong"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-11-02"},{"lineNumber":166,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":167,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":168,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":169,"author":{"gitId":"jiexiong-zeng"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":170,"author":{"gitId":"jiexiong-zeng"},"content":"     * Takes in an input string and parse it for credit information","lastModifiedDate":"2021-11-02"},{"lineNumber":171,"author":{"gitId":"jiexiong-zeng"},"content":"     * Checks input is not empty and is an integer.","lastModifiedDate":"2021-11-02"},{"lineNumber":172,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":173,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param module module in which the credit is to be assigned to.","lastModifiedDate":"2021-11-02"},{"lineNumber":174,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param taskDescription credit value to add","lastModifiedDate":"2021-11-02"},{"lineNumber":175,"author":{"gitId":"jiexiong-zeng"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":176,"author":{"gitId":"jiexiong-zeng"},"content":"    void commandAddCredit(Module module, String taskDescription) {","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"yapjoonsiong"},"content":"        if (parserChecks.isEmptyDescription(taskDescription)","lastModifiedDate":"2021-11-02"},{"lineNumber":178,"author":{"gitId":"yapjoonsiong"},"content":"                || parserChecks.isNotInteger(taskDescription)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":179,"author":{"gitId":"jiexiong-zeng"},"content":"            return;","lastModifiedDate":"2021-10-23"},{"lineNumber":180,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":181,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":182,"author":{"gitId":"jiexiong-zeng"},"content":"            module.addCredits(Integer.parseInt(taskDescription));","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"jiexiong-zeng"},"content":"            Ui.addModuleCreditsMessage(module);","lastModifiedDate":"2021-10-23"},{"lineNumber":184,"author":{"gitId":"jiexiong-zeng"},"content":"            NoCap.semester.updateCap();","lastModifiedDate":"2021-10-23"},{"lineNumber":185,"author":{"gitId":"jiexiong-zeng"},"content":"            NoCap.semesterList.updateCap();","lastModifiedDate":"2021-10-23"},{"lineNumber":186,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":187,"author":{"gitId":"yapjoonsiong"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-11-02"},{"lineNumber":188,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":189,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":190,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":191,"author":{"gitId":"jiexiong-zeng"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":192,"author":{"gitId":"jiexiong-zeng"},"content":"     * Takes in a module index and deletes it from module list.","lastModifiedDate":"2021-11-02"},{"lineNumber":193,"author":{"gitId":"jiexiong-zeng"},"content":"     * Checks input is not empty and contains an index.","lastModifiedDate":"2021-11-02"},{"lineNumber":194,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":195,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param taskDescription string index of module to delete.","lastModifiedDate":"2021-11-02"},{"lineNumber":196,"author":{"gitId":"jiexiong-zeng"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":197,"author":{"gitId":"jiexiong-zeng"},"content":"    void commandDeleteModule(String taskDescription) {","lastModifiedDate":"2021-10-24"},{"lineNumber":198,"author":{"gitId":"jiexiong-zeng"},"content":"        if (parserChecks.isEmptyDescription(taskDescription)","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"jiexiong-zeng"},"content":"                || parserChecks.isNotInteger(taskDescription)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":200,"author":{"gitId":"jiexiong-zeng"},"content":"            return;","lastModifiedDate":"2021-10-23"},{"lineNumber":201,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":202,"author":{"gitId":"jiexiong-zeng"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":203,"author":{"gitId":"jiexiong-zeng"},"content":"            NoCap.moduleList.delete(taskDescription);","lastModifiedDate":"2021-10-24"},{"lineNumber":204,"author":{"gitId":"DmitriYam"},"content":"            Ui.printRemainingModules();","lastModifiedDate":"2021-10-28"},{"lineNumber":205,"author":{"gitId":"DmitriYam"},"content":"            NoCap.moduleList.printModules();","lastModifiedDate":"2021-10-28"},{"lineNumber":206,"author":{"gitId":"jiexiong-zeng"},"content":"            StorageEncoder.encodeAndSaveSemesterListToJson(NoCap.semesterList);","lastModifiedDate":"2021-10-23"},{"lineNumber":207,"author":{"gitId":"jiexiong-zeng"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":208,"author":{"gitId":"jiexiong-zeng"},"content":"            System.out.println(\"Invalid number value\");","lastModifiedDate":"2021-10-23"},{"lineNumber":209,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":210,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":211,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":212,"author":{"gitId":"jiexiong-zeng"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":213,"author":{"gitId":"jiexiong-zeng"},"content":"     * Deletes a class at the specified index from the module given.","lastModifiedDate":"2021-11-02"},{"lineNumber":214,"author":{"gitId":"jiexiong-zeng"},"content":"     * Checks input is not empty and contains an index.","lastModifiedDate":"2021-11-02"},{"lineNumber":215,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":216,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param module module in which the class is to be deleted from.","lastModifiedDate":"2021-11-02"},{"lineNumber":217,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param taskDescription string index of class to delete.","lastModifiedDate":"2021-11-02"},{"lineNumber":218,"author":{"gitId":"jiexiong-zeng"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":219,"author":{"gitId":"DmitriYam"},"content":"    void commandDeleteClass(Module module, String taskDescription) {","lastModifiedDate":"2021-10-28"},{"lineNumber":220,"author":{"gitId":"DmitriYam"},"content":"        if (parserChecks.isEmptyDescription(taskDescription)","lastModifiedDate":"2021-10-28"},{"lineNumber":221,"author":{"gitId":"DmitriYam"},"content":"                || parserChecks.isNotInteger(taskDescription)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":222,"author":{"gitId":"DmitriYam"},"content":"            return;","lastModifiedDate":"2021-10-28"},{"lineNumber":223,"author":{"gitId":"DmitriYam"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":224,"author":{"gitId":"DmitriYam"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":225,"author":{"gitId":"DmitriYam"},"content":"            module.deleteClass(taskDescription);","lastModifiedDate":"2021-10-28"},{"lineNumber":226,"author":{"gitId":"DmitriYam"},"content":"            Ui.printRemainingSchedules(module.getScheduleList());","lastModifiedDate":"2021-10-28"},{"lineNumber":227,"author":{"gitId":"DmitriYam"},"content":"            StorageEncoder.encodeAndSaveSemesterListToJson(NoCap.semesterList);","lastModifiedDate":"2021-10-28"},{"lineNumber":228,"author":{"gitId":"DmitriYam"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":229,"author":{"gitId":"DmitriYam"},"content":"            System.out.println(\"Invalid number value\");","lastModifiedDate":"2021-10-28"},{"lineNumber":230,"author":{"gitId":"DmitriYam"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":231,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":232,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":233,"author":{"gitId":"jiexiong-zeng"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":234,"author":{"gitId":"jiexiong-zeng"},"content":"     * Deletes a task from a module by searching for keyword matches.","lastModifiedDate":"2021-11-02"},{"lineNumber":235,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":236,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param module module in which the task is to be deleted from.","lastModifiedDate":"2021-11-02"},{"lineNumber":237,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param taskDescription keyword to search for.","lastModifiedDate":"2021-11-02"},{"lineNumber":238,"author":{"gitId":"jiexiong-zeng"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":239,"author":{"gitId":"jiexiong-zeng"},"content":"    void commandDeleteTask(Module module, String taskDescription) {","lastModifiedDate":"2021-10-24"},{"lineNumber":240,"author":{"gitId":"jiexiong-zeng"},"content":"        if (parserChecks.isEmptyDescription(taskDescription)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":241,"author":{"gitId":"jiexiong-zeng"},"content":"            return;","lastModifiedDate":"2021-10-23"},{"lineNumber":242,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":243,"author":{"gitId":"jiexiong-zeng"},"content":"        Task selectedTask \u003d parserChecks.getTaskFromKeyword(taskDescription, module.taskList.getTaskList());","lastModifiedDate":"2021-10-24"},{"lineNumber":244,"author":{"gitId":"jiexiong-zeng"},"content":"        if (selectedTask !\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":245,"author":{"gitId":"jiexiong-zeng"},"content":"            Ui.printTaskDeleted(selectedTask);","lastModifiedDate":"2021-10-31"},{"lineNumber":246,"author":{"gitId":"jiexiong-zeng"},"content":"            module.deleteTask(selectedTask);","lastModifiedDate":"2021-10-23"},{"lineNumber":247,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":248,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":249,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":250,"author":{"gitId":"jiexiong-zeng"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":251,"author":{"gitId":"jiexiong-zeng"},"content":"     * Deletes an assigned grade from a module.","lastModifiedDate":"2021-11-02"},{"lineNumber":252,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":253,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param module module in which the grade is to be deleted from.","lastModifiedDate":"2021-11-02"},{"lineNumber":254,"author":{"gitId":"jiexiong-zeng"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":255,"author":{"gitId":"jiexiong-zeng"},"content":"    void commandDeleteGrade(Module module) {","lastModifiedDate":"2021-10-24"},{"lineNumber":256,"author":{"gitId":"jiexiong-zeng"},"content":"        module.deleteGrade();","lastModifiedDate":"2021-10-23"},{"lineNumber":257,"author":{"gitId":"DmitriYam"},"content":"        Ui.deleteGradeMesage(module);","lastModifiedDate":"2021-10-28"},{"lineNumber":258,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":259,"author":{"gitId":"jiexiong-zeng"},"content":"            NoCap.semester.updateCap();","lastModifiedDate":"2021-10-23"},{"lineNumber":260,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":261,"author":{"gitId":"yapjoonsiong"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-11-02"},{"lineNumber":262,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":263,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":264,"author":{"gitId":"jiexiong-zeng"},"content":"            NoCap.semesterList.updateCap();","lastModifiedDate":"2021-10-23"},{"lineNumber":265,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":266,"author":{"gitId":"yapjoonsiong"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-11-02"},{"lineNumber":267,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":268,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":269,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":270,"author":{"gitId":"jiexiong-zeng"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":271,"author":{"gitId":"jiexiong-zeng"},"content":"     * Edits the description of a task.","lastModifiedDate":"2021-11-02"},{"lineNumber":272,"author":{"gitId":"jiexiong-zeng"},"content":"     * Perform additional checks to verify that a task of that index can be found,","lastModifiedDate":"2021-11-02"},{"lineNumber":273,"author":{"gitId":"jiexiong-zeng"},"content":"     * and the provided description is not the same as an existing task.","lastModifiedDate":"2021-11-02"},{"lineNumber":274,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":275,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param module module of the task to be edited.","lastModifiedDate":"2021-11-02"},{"lineNumber":276,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param taskType index of the task in the module.","lastModifiedDate":"2021-11-02"},{"lineNumber":277,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param taskDescription new description to replace the old description.","lastModifiedDate":"2021-11-02"},{"lineNumber":278,"author":{"gitId":"jiexiong-zeng"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":279,"author":{"gitId":"jiexiong-zeng"},"content":"    void commandEditDescription(Module module, String taskType, String taskDescription) {","lastModifiedDate":"2021-10-24"},{"lineNumber":280,"author":{"gitId":"yzhedwin"},"content":"        TaskList list \u003d module.getTaskList();","lastModifiedDate":"2021-10-31"},{"lineNumber":281,"author":{"gitId":"jiexiong-zeng"},"content":"        Task selectedTask \u003d parserChecks.getTaskFromIndex(taskType, module.taskList.getTaskList());","lastModifiedDate":"2021-10-24"},{"lineNumber":282,"author":{"gitId":"yzhedwin"},"content":"        if (selectedTask !\u003d null \u0026\u0026 !list.hasDuplicateDescription(taskDescription)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":283,"author":{"gitId":"jiexiong-zeng"},"content":"            selectedTask.setDescription(taskDescription);","lastModifiedDate":"2021-10-24"},{"lineNumber":284,"author":{"gitId":"yzhedwin"},"content":"            Ui.printUpdateTaskDescription(selectedTask);","lastModifiedDate":"2021-11-05"},{"lineNumber":285,"author":{"gitId":"yzhedwin"},"content":"        } else if (list.hasDuplicateDescription(taskDescription)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":286,"author":{"gitId":"yzhedwin"},"content":"            Ui.duplicateTaskError();","lastModifiedDate":"2021-10-31"},{"lineNumber":287,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":288,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":289,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":290,"author":{"gitId":"jiexiong-zeng"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":291,"author":{"gitId":"jiexiong-zeng"},"content":"     * Edits the deadline of a task.","lastModifiedDate":"2021-11-02"},{"lineNumber":292,"author":{"gitId":"jiexiong-zeng"},"content":"     * Perform additional checks to verify that a task of that index can be found.","lastModifiedDate":"2021-11-02"},{"lineNumber":293,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":294,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param module module of the task to be edited.","lastModifiedDate":"2021-11-02"},{"lineNumber":295,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param taskType index of the task in the module.","lastModifiedDate":"2021-11-02"},{"lineNumber":296,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param taskDescription new deadline to replace the old deadline.","lastModifiedDate":"2021-11-02"},{"lineNumber":297,"author":{"gitId":"jiexiong-zeng"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":298,"author":{"gitId":"jiexiong-zeng"},"content":"    void commandEditDeadline(Module module, String taskType, String taskDescription) {","lastModifiedDate":"2021-10-24"},{"lineNumber":299,"author":{"gitId":"jiexiong-zeng"},"content":"        Task selectedTask \u003d parserChecks.getTaskFromIndex(taskType, module.taskList.getTaskList());","lastModifiedDate":"2021-10-24"},{"lineNumber":300,"author":{"gitId":"jiexiong-zeng"},"content":"        if (selectedTask !\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":301,"author":{"gitId":"jiexiong-zeng"},"content":"            selectedTask.parseDeadline(taskDescription);","lastModifiedDate":"2021-10-24"},{"lineNumber":302,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":303,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":304,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":305,"author":{"gitId":"jiexiong-zeng"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":306,"author":{"gitId":"jiexiong-zeng"},"content":"     * Edit the status of a task to be completed.","lastModifiedDate":"2021-11-02"},{"lineNumber":307,"author":{"gitId":"jiexiong-zeng"},"content":"     * Checks taskDescription is not empty","lastModifiedDate":"2021-11-02"},{"lineNumber":308,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":309,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param module module of the task to be edited.","lastModifiedDate":"2021-11-02"},{"lineNumber":310,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param taskDescription index of task in module.","lastModifiedDate":"2021-11-02"},{"lineNumber":311,"author":{"gitId":"jiexiong-zeng"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":312,"author":{"gitId":"jiexiong-zeng"},"content":"    void commandMarkDone(Module module, String taskDescription) {","lastModifiedDate":"2021-10-24"},{"lineNumber":313,"author":{"gitId":"jiexiong-zeng"},"content":"        if (parserChecks.isEmptyDescription(taskDescription)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":314,"author":{"gitId":"jiexiong-zeng"},"content":"            return;","lastModifiedDate":"2021-10-23"},{"lineNumber":315,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":316,"author":{"gitId":"jiexiong-zeng"},"content":"        Task selectedTask \u003d parserChecks.getTaskFromIndex(taskDescription, module.taskList.getTaskList());","lastModifiedDate":"2021-10-24"},{"lineNumber":317,"author":{"gitId":"jiexiong-zeng"},"content":"        if (selectedTask !\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":318,"author":{"gitId":"jiexiong-zeng"},"content":"            selectedTask.markDone();","lastModifiedDate":"2021-10-23"},{"lineNumber":319,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":320,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":321,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":322,"author":{"gitId":"jiexiong-zeng"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":323,"author":{"gitId":"jiexiong-zeng"},"content":"     * Edit the status of a task to be not completed.","lastModifiedDate":"2021-11-02"},{"lineNumber":324,"author":{"gitId":"jiexiong-zeng"},"content":"     * Checks taskDescription is not empty","lastModifiedDate":"2021-11-02"},{"lineNumber":325,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":326,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param module module of the task to be edited.","lastModifiedDate":"2021-11-02"},{"lineNumber":327,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param taskDescription index of task in module.","lastModifiedDate":"2021-11-02"},{"lineNumber":328,"author":{"gitId":"jiexiong-zeng"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":329,"author":{"gitId":"jiexiong-zeng"},"content":"    void commandMarkNotDone(Module module, String taskDescription) {","lastModifiedDate":"2021-10-24"},{"lineNumber":330,"author":{"gitId":"jiexiong-zeng"},"content":"        if (parserChecks.isEmptyDescription(taskDescription)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":331,"author":{"gitId":"jiexiong-zeng"},"content":"            return;","lastModifiedDate":"2021-10-23"},{"lineNumber":332,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":333,"author":{"gitId":"jiexiong-zeng"},"content":"        Task selectedTask \u003d parserChecks.getTaskFromIndex(taskDescription, module.taskList.getTaskList());","lastModifiedDate":"2021-10-24"},{"lineNumber":334,"author":{"gitId":"jiexiong-zeng"},"content":"        if (selectedTask !\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":335,"author":{"gitId":"jiexiong-zeng"},"content":"            selectedTask.markNotDone();","lastModifiedDate":"2021-10-23"},{"lineNumber":336,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":337,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":338,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":339,"author":{"gitId":"jiexiong-zeng"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":340,"author":{"gitId":"jiexiong-zeng"},"content":"     * Edit the status of a gradable task to be completed.","lastModifiedDate":"2021-11-02"},{"lineNumber":341,"author":{"gitId":"jiexiong-zeng"},"content":"     * Checks taskDescription is not empty","lastModifiedDate":"2021-11-02"},{"lineNumber":342,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":343,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param module module of the task to be edited.","lastModifiedDate":"2021-11-02"},{"lineNumber":344,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param taskDescription index of task in module.","lastModifiedDate":"2021-11-02"},{"lineNumber":345,"author":{"gitId":"jiexiong-zeng"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":346,"author":{"gitId":"jiexiong-zeng"},"content":"    void commandMarkGradableDone(Module module, String taskDescription) {","lastModifiedDate":"2021-10-24"},{"lineNumber":347,"author":{"gitId":"jiexiong-zeng"},"content":"        if (parserChecks.isEmptyDescription(taskDescription)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":348,"author":{"gitId":"jiexiong-zeng"},"content":"            return;","lastModifiedDate":"2021-10-24"},{"lineNumber":349,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":350,"author":{"gitId":"naijie2108"},"content":"        GradableTask selectedTask \u003d parserChecks.getGradableTaskFromIndex(taskDescription,","lastModifiedDate":"2021-10-24"},{"lineNumber":351,"author":{"gitId":"naijie2108"},"content":"                module.gradableTaskList.getGradableTaskList());","lastModifiedDate":"2021-10-24"},{"lineNumber":352,"author":{"gitId":"jiexiong-zeng"},"content":"        if (selectedTask !\u003d null) {","lastModifiedDate":"2021-10-24"},{"lineNumber":353,"author":{"gitId":"jiexiong-zeng"},"content":"            selectedTask.markDone();","lastModifiedDate":"2021-10-24"},{"lineNumber":354,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":355,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":356,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":357,"author":{"gitId":"jiexiong-zeng"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":358,"author":{"gitId":"jiexiong-zeng"},"content":"     * Edit the status of a gradable task to be not completed.","lastModifiedDate":"2021-11-02"},{"lineNumber":359,"author":{"gitId":"jiexiong-zeng"},"content":"     * Checks taskDescription is not empty","lastModifiedDate":"2021-11-02"},{"lineNumber":360,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":361,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param module module of the task to be edited.","lastModifiedDate":"2021-11-02"},{"lineNumber":362,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param taskDescription index of task in module.","lastModifiedDate":"2021-11-02"},{"lineNumber":363,"author":{"gitId":"jiexiong-zeng"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":364,"author":{"gitId":"jiexiong-zeng"},"content":"    void commandMarkGradableNotDone(Module module, String taskDescription) {","lastModifiedDate":"2021-10-24"},{"lineNumber":365,"author":{"gitId":"jiexiong-zeng"},"content":"        if (parserChecks.isEmptyDescription(taskDescription)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":366,"author":{"gitId":"jiexiong-zeng"},"content":"            return;","lastModifiedDate":"2021-10-24"},{"lineNumber":367,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":368,"author":{"gitId":"naijie2108"},"content":"        GradableTask selectedTask \u003d parserChecks.getGradableTaskFromIndex(taskDescription,","lastModifiedDate":"2021-10-24"},{"lineNumber":369,"author":{"gitId":"naijie2108"},"content":"                module.gradableTaskList.getGradableTaskList());","lastModifiedDate":"2021-10-24"},{"lineNumber":370,"author":{"gitId":"jiexiong-zeng"},"content":"        if (selectedTask !\u003d null) {","lastModifiedDate":"2021-10-24"},{"lineNumber":371,"author":{"gitId":"jiexiong-zeng"},"content":"            selectedTask.markNotDone();","lastModifiedDate":"2021-10-24"},{"lineNumber":372,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":373,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":374,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":375,"author":{"gitId":"jiexiong-zeng"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"yapjoonsiong":34,"naijie2108":8,"DmitriYam":17,"yzhedwin":6,"jiexiong-zeng":310}},{"path":"src/main/java/command/parser/DateParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexiong-zeng"},"content":"package command.parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"jiexiong-zeng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"jiexiong-zeng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"jiexiong-zeng"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"jiexiong-zeng"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"jiexiong-zeng"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"jiexiong-zeng"},"content":" * Class containing parser methods that specifically handles dateTime input.","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"jiexiong-zeng"},"content":" * Additional dateTime Format can be added to DateTimeFormatter.","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"jiexiong-zeng"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"jiexiong-zeng"},"content":"public class DateParser {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"jiexiong-zeng"},"content":"    private static DateTimeFormatter inputFormatter \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"jiexiong-zeng"},"content":"            .appendOptional(DateTimeFormatter.ISO_LOCAL_DATE)","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"jiexiong-zeng"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"d M yyyy HH:mm\"))","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"jiexiong-zeng"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"d M yyyy HHmm\"))","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"jiexiong-zeng"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"d M yyyy\"))","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"jiexiong-zeng"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"d M yy\"))","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"jiexiong-zeng"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"d/M/yyyy HH:mm\"))","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"jiexiong-zeng"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"))","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"jiexiong-zeng"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"d/M/yyyy\"))","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"jiexiong-zeng"},"content":"            .appendOptional(DateTimeFormatter.ofPattern(\"d/M/yy\"))","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"jiexiong-zeng"},"content":"            .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"jiexiong-zeng"},"content":"            .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"jiexiong-zeng"},"content":"            .parseDefaulting(ChronoField.SECOND_OF_MINUTE, 0)","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"jiexiong-zeng"},"content":"            .toFormatter();","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"jiexiong-zeng"},"content":"    public static DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy hh:mm a\");","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"jiexiong-zeng"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"jiexiong-zeng"},"content":"     * Takes in an input string and parse it for LocalDateTime.","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"jiexiong-zeng"},"content":"     * Throws DateTimeException if invalid string.","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param string input string to be parsed. Assumes not empty.","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"jiexiong-zeng"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"jiexiong-zeng"},"content":"    public static LocalDateTime parseDate(String string) {","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"jiexiong-zeng"},"content":"        return LocalDateTime.parse(string, inputFormatter);","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"jiexiong-zeng"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"jiexiong-zeng"},"content":"     * Takes in a LocalDateTime variable and returns String based on outputFormatter.","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param dateTime LocaleDateTime to be parsed into String","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"jiexiong-zeng"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"jiexiong-zeng"},"content":"    public static String dateStringOutput(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"jiexiong-zeng"},"content":"        return dateTime.format(outputFormatter);","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"jiexiong-zeng"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"jiexiong-zeng":49}},{"path":"src/main/java/command/parser/ListParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexiong-zeng"},"content":"package command.parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"jiexiong-zeng"},"content":"import command.NoCap;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"jiexiong-zeng"},"content":"import command.Ui;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"jiexiong-zeng"},"content":"import module.Module;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"jiexiong-zeng"},"content":"import task.OverallTaskList;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"yzhedwin"},"content":"import task.TaskList;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"jiexiong-zeng"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"yzhedwin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"jiexiong-zeng"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"jiexiong-zeng"},"content":" * Class containing parser methods that specifically handles list methods.","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"jiexiong-zeng"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"jiexiong-zeng"},"content":"public class ListParser {","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String SORT_BY_DATE \u003d \"sortbydate\";","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String SORT_BY_STATUS \u003d \"sortbystatus\";","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String SHOW_WEEK \u003d \"w\";","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String SHOW_MONTH \u003d \"m\";","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String SHOW_YEAR \u003d \"y\";","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"naijie2108"},"content":"    public static final String SHOW_GRADABLE \u003d \"gradable\";","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"naijie2108"},"content":"    public static final String SHOW_NORMAL \u003d \"normal\";","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"jiexiong-zeng"},"content":"    private static final Logger logger \u003d command.Logger.myLogger();","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"jiexiong-zeng"},"content":"    public ListParser() {","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"jiexiong-zeng"},"content":"    private boolean isEmpty(Module module) {","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"jiexiong-zeng"},"content":"        if (module.taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"jiexiong-zeng"},"content":"            Ui.printEmptyTaskList(module.getModuleName());","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"jiexiong-zeng"},"content":"            return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"jiexiong-zeng"},"content":"        return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"jiexiong-zeng"},"content":"    private void sortByDate(Module module) {","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"yzhedwin"},"content":"        TaskList list \u003d module.getTaskList();","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"jiexiong-zeng"},"content":"        if (!isEmpty(module)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"yzhedwin"},"content":"            list.sortTaskListByDate(module.getModuleName());","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"jiexiong-zeng"},"content":"    private void sortByStatus(Module module) {","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"yzhedwin"},"content":"        TaskList list \u003d module.getTaskList();","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"jiexiong-zeng"},"content":"        if (!isEmpty(module)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"yzhedwin"},"content":"            list.sortTaskListByStatus(module.getModuleName());","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"jiexiong-zeng"},"content":"    private void listWeekly(Module module) {","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"yzhedwin"},"content":"        TaskList list \u003d module.getTaskList();","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"jiexiong-zeng"},"content":"        if (!isEmpty(module)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"yzhedwin"},"content":"            list.showAllWeekly(module.getModuleName());","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"jiexiong-zeng"},"content":"    private void listAll(Module module) {","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"yzhedwin"},"content":"        TaskList list \u003d module.getTaskList();","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"jiexiong-zeng"},"content":"        if (!isEmpty(module)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"yzhedwin"},"content":"            Ui.printTaskList(module.getModuleName(), list.getTaskCount());","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"yzhedwin"},"content":"            list.printTasks(list.getTaskList());","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"jiexiong-zeng"},"content":"    private void listMonthly(Module module) {","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"yzhedwin"},"content":"        TaskList list \u003d module.getTaskList();","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"jiexiong-zeng"},"content":"        if (!isEmpty(module)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"yzhedwin"},"content":"            list.showAllMonthly(module.getModuleName());","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"jiexiong-zeng"},"content":"    private void listYearly(Module module) {","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"yzhedwin"},"content":"        TaskList list \u003d module.getTaskList();","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"jiexiong-zeng"},"content":"        if (!isEmpty(module)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"yzhedwin"},"content":"            list.showAllYearly(module.getModuleName());","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"jiexiong-zeng"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"jiexiong-zeng"},"content":"     * Parser method for listing outside of modules.","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"jiexiong-zeng"},"content":"     * Check if taskType is MODULE, SEMESTER or TASK. If not, print error message.","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"jiexiong-zeng"},"content":"     * If taskType is Task, taskDescription is checked for optional sorting methods. If none matches,","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"jiexiong-zeng"},"content":"     * a default listing method is used.","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param taskType string indicating type of listing.","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param taskDescription string indicating sorting methods if taskType is task. Ignored otherwise.","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"jiexiong-zeng"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"jiexiong-zeng"},"content":"    public void overallListParser(String taskType, String taskDescription) {","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"jiexiong-zeng"},"content":"        switch (taskType) {","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"jiexiong-zeng"},"content":"        case Parser.MODULE:","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"DmitriYam"},"content":"            if (NoCap.moduleList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"DmitriYam"},"content":"                Ui.emptyModuleListMessage();","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"DmitriYam"},"content":"            } else {","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"jiexiong-zeng"},"content":"                NoCap.moduleList.printModules();","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"DmitriYam"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"jiexiong-zeng"},"content":"        case Parser.SEMESTERS:","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.printSemesters();","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"jiexiong-zeng"},"content":"        case Parser.TASK:","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"jiexiong-zeng"},"content":"            OverallTaskList allTaskList \u003d new OverallTaskList(NoCap.moduleList);","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"jiexiong-zeng"},"content":"            switch (taskDescription) {","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"jiexiong-zeng"},"content":"            case SORT_BY_DATE:","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"yzhedwin"},"content":"                logger.log(Level.INFO, \"Sort TaskList by date\");","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"jiexiong-zeng"},"content":"                allTaskList.sortByDateAndPrint();","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"jiexiong-zeng"},"content":"                break;","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"jiexiong-zeng"},"content":"            case SORT_BY_STATUS:","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"yzhedwin"},"content":"                logger.log(Level.INFO, \"Sort TaskList by status\");","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"jiexiong-zeng"},"content":"                allTaskList.sortByStatusAndPrint();","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"jiexiong-zeng"},"content":"                break;","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"jiexiong-zeng"},"content":"            case SHOW_WEEK:","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"yzhedwin"},"content":"                logger.log(Level.INFO, \"Print weekly TaskList\");","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"jiexiong-zeng"},"content":"                allTaskList.printWeeklyTasks();","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"jiexiong-zeng"},"content":"                break;","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"jiexiong-zeng"},"content":"            case SHOW_MONTH:","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"yzhedwin"},"content":"                logger.log(Level.INFO, \"Print monthly TaskList\");","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"jiexiong-zeng"},"content":"                allTaskList.printMonthlyTasks();","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"jiexiong-zeng"},"content":"                break;","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"jiexiong-zeng"},"content":"            case SHOW_YEAR:","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"jiexiong-zeng"},"content":"                allTaskList.printYearlyTasks();","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"yzhedwin"},"content":"                logger.log(Level.INFO, \"Print yearly TaskList\");","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"jiexiong-zeng"},"content":"                break;","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"naijie2108"},"content":"            case SHOW_GRADABLE:","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"naijie2108"},"content":"                allTaskList.printGradableTasks();","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"naijie2108"},"content":"                logger.log(Level.INFO, \"Print gradable TaskList\");","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"naijie2108"},"content":"                break;","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"naijie2108"},"content":"            case SHOW_NORMAL:","lastModifiedDate":"2021-11-01"},{"lineNumber":128,"author":{"gitId":"naijie2108"},"content":"                allTaskList.printNormalTasks();","lastModifiedDate":"2021-11-01"},{"lineNumber":129,"author":{"gitId":"naijie2108"},"content":"                logger.log(Level.INFO, \"Print normal TaskList\");","lastModifiedDate":"2021-11-01"},{"lineNumber":130,"author":{"gitId":"naijie2108"},"content":"                break;","lastModifiedDate":"2021-11-01"},{"lineNumber":131,"author":{"gitId":"jiexiong-zeng"},"content":"            default:","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"naijie2108"},"content":"                allTaskList.printAllTasks();","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"jiexiong-zeng"},"content":"                break;","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"jiexiong-zeng"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"jiexiong-zeng"},"content":"        default:","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"jiexiong-zeng"},"content":"            Ui.printInvalidListFormat();","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"jiexiong-zeng"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":143,"author":{"gitId":"jiexiong-zeng"},"content":"     * Parser method for listing tasks within a module.","lastModifiedDate":"2021-11-02"},{"lineNumber":144,"author":{"gitId":"jiexiong-zeng"},"content":"     * if input matches a specific sorting method, then a specified list is printed. If not,","lastModifiedDate":"2021-11-02"},{"lineNumber":145,"author":{"gitId":"jiexiong-zeng"},"content":"     * a default listing method is used.","lastModifiedDate":"2021-11-02"},{"lineNumber":146,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":147,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param module the module in which the tasks are being accessed.","lastModifiedDate":"2021-11-02"},{"lineNumber":148,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param input string indicating sorting methods. Default sorting is used if sorting method stated is invalid.","lastModifiedDate":"2021-11-02"},{"lineNumber":149,"author":{"gitId":"jiexiong-zeng"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":150,"author":{"gitId":"jiexiong-zeng"},"content":"    public void moduleListParser(Module module, String input) {","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"jiexiong-zeng"},"content":"        switch (input) {","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"jiexiong-zeng"},"content":"        case SORT_BY_DATE:","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"jiexiong-zeng"},"content":"            sortByDate(module);","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"jiexiong-zeng"},"content":"        case SORT_BY_STATUS:","lastModifiedDate":"2021-10-23"},{"lineNumber":156,"author":{"gitId":"jiexiong-zeng"},"content":"            sortByStatus(module);","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"jiexiong-zeng"},"content":"        case SHOW_WEEK:","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"jiexiong-zeng"},"content":"            listWeekly(module);","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"jiexiong-zeng"},"content":"        case SHOW_MONTH:","lastModifiedDate":"2021-10-23"},{"lineNumber":162,"author":{"gitId":"jiexiong-zeng"},"content":"            listMonthly(module);","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"jiexiong-zeng"},"content":"        case SHOW_YEAR:","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"jiexiong-zeng"},"content":"            listYearly(module);","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"DmitriYam"},"content":"        case SHOW_GRADABLE:","lastModifiedDate":"2021-11-01"},{"lineNumber":168,"author":{"gitId":"DmitriYam"},"content":"            Ui.visualiseGradableTask(module.getGradableTaskList());","lastModifiedDate":"2021-11-01"},{"lineNumber":169,"author":{"gitId":"DmitriYam"},"content":"            break;","lastModifiedDate":"2021-11-01"},{"lineNumber":170,"author":{"gitId":"jiexiong-zeng"},"content":"        default:","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"jiexiong-zeng"},"content":"            listAll(module);","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"jiexiong-zeng"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"yapjoonsiong":1,"naijie2108":11,"DmitriYam":7,"yzhedwin":21,"jiexiong-zeng":135}},{"path":"src/main/java/command/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexiong-zeng"},"content":"package command.parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"jiexiong-zeng"},"content":"import command.NoCap;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"jiexiong-zeng"},"content":"import command.Ui;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"import command.storage.StorageEncoder;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"import module.Module;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"jiexiong-zeng"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"jiexiong-zeng"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"jiexiong-zeng"},"content":" * Class containing initial commands to parse the user input.","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"jiexiong-zeng"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"jiexiong-zeng"},"content":"public class Parser {","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"yzhedwin"},"content":"    public static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String SPACE_STRING \u003d \" \";","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String SWITCHSEMESTER \u003d \"switch\";","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"yapjoonsiong"},"content":"    public static final String SEMESTERS \u003d \"semesters\";","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"yapjoonsiong"},"content":"    public static final String CAP \u003d \"cap\";","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"yapjoonsiong"},"content":"    public static final String ALLCAP \u003d \"allcap\";","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String TASK \u003d \"task\";","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"DmitriYam"},"content":"    public static final String GRADABLE \u003d \"gradable\";","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String MODULE \u003d \"module\";","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String HELP \u003d \"help\";","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String ADD \u003d \"add\";","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String DELETE \u003d \"delete\";","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String LIST \u003d \"list\";","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String TIMETABLE \u003d \"timetable\";","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String MODULETYPE \u003d \"/m\";","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String EXIT \u003d \"bye\";","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String ADDCLASS \u003d \"addclass\";","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String ADDTASK \u003d \"addtask\";","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String ADDGRADABLE \u003d \"addgradable\";","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String ADDGRADE \u003d \"addgrade\";","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"DmitriYam"},"content":"    public static final String ADDCREDIT \u003d \"addcredit\";","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String DELETECLASS \u003d \"deleteclass\";","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String DELETETASK \u003d \"deletetask\";","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String DELETEGRADE \u003d \"deletegrade\";","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String EDITDESCRIPTION \u003d \"editdesc\";","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String EDITDEADLINE \u003d \"editdate\";","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"yzhedwin"},"content":"    public static final String DONE \u003d \"done\";","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String NOTDONE \u003d \"notdone\";","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String GRADABLEDONE \u003d \"gradabledone\";","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String GRADABLENOTDONE \u003d \"gradablenotdone\";","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String INFO \u003d \"info\";","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"jiexiong-zeng"},"content":"    private String taskType;","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"jiexiong-zeng"},"content":"    private String taskDescription;","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"jiexiong-zeng"},"content":"    private final Command command \u003d new Command();","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"jiexiong-zeng"},"content":"    private final ListParser list \u003d new ListParser();","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"yzhedwin"},"content":"    protected boolean isExit;","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"yzhedwin"},"content":"    public Parser() {","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"yzhedwin"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"jiexiong-zeng"},"content":"     * Takes in the initial user input and splits it into taskType and taskDescription","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"jiexiong-zeng"},"content":"     * to be further processed.","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"naijie2108"},"content":"     * @param line User input","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"yzhedwin"},"content":"    public void chooseTask(String line) {","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"jiexiong-zeng"},"content":"        splitInput(line);","lastModifiedDate":"2021-10-03"},{"lineNumber":64,"author":{"gitId":"jiexiong-zeng"},"content":"        switch (taskType) {","lastModifiedDate":"2021-10-03"},{"lineNumber":65,"author":{"gitId":"jiexiong-zeng"},"content":"        case HELP:","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"jiexiong-zeng"},"content":"            Ui.printHelpMessage();","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"yapjoonsiong"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"jiexiong-zeng"},"content":"        case SWITCHSEMESTER:","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"jiexiong-zeng"},"content":"            command.commandSwitchSemester(taskDescription);","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"yapjoonsiong"},"content":"            break;","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"yapjoonsiong"},"content":"        case CAP:","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"jiexiong-zeng"},"content":"            command.commandPrintCap();","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"yapjoonsiong"},"content":"            break;","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"yapjoonsiong"},"content":"        case ALLCAP:","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"jiexiong-zeng"},"content":"            command.commandPrintAllCap();","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-03"},{"lineNumber":77,"author":{"gitId":"jiexiong-zeng"},"content":"        case ADD:","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"jiexiong-zeng"},"content":"            command.commandAddModule(taskDescription);","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-03"},{"lineNumber":80,"author":{"gitId":"jiexiong-zeng"},"content":"        case DELETE:","lastModifiedDate":"2021-10-03"},{"lineNumber":81,"author":{"gitId":"jiexiong-zeng"},"content":"            command.commandDeleteModule(taskDescription);","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-03"},{"lineNumber":83,"author":{"gitId":"jiexiong-zeng"},"content":"        case TIMETABLE:","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"jiexiong-zeng"},"content":"            command.commandPrintTimeTable();","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-03"},{"lineNumber":86,"author":{"gitId":"jiexiong-zeng"},"content":"        case LIST:","lastModifiedDate":"2021-10-03"},{"lineNumber":87,"author":{"gitId":"jiexiong-zeng"},"content":"            splitInput(taskDescription);","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"jiexiong-zeng"},"content":"            list.overallListParser(taskType, taskDescription);","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"naijie2108"},"content":"            StorageEncoder.encodeAndSaveSemesterListToJson(NoCap.semesterList);","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-03"},{"lineNumber":91,"author":{"gitId":"jiexiong-zeng"},"content":"        case MODULETYPE:","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"jiexiong-zeng"},"content":"            moduleParser(taskDescription);","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"jiexiong-zeng"},"content":"            StorageEncoder.encodeAndSaveSemesterListToJson(NoCap.semesterList);","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-03"},{"lineNumber":95,"author":{"gitId":"jiexiong-zeng"},"content":"        case EXIT:","lastModifiedDate":"2021-10-03"},{"lineNumber":96,"author":{"gitId":"jiexiong-zeng"},"content":"            Ui.printExitMessage();","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"naijie2108"},"content":"            StorageEncoder.encodeAndSaveSemesterListToJson(NoCap.semesterList);","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"yzhedwin"},"content":"            this.isExit \u003d true;","lastModifiedDate":"2021-10-04"},{"lineNumber":99,"author":{"gitId":"yzhedwin"},"content":"            break;","lastModifiedDate":"2021-10-04"},{"lineNumber":100,"author":{"gitId":"jiexiong-zeng"},"content":"        default:","lastModifiedDate":"2021-10-03"},{"lineNumber":101,"author":{"gitId":"jiexiong-zeng"},"content":"            Ui.printInvalidInputMessage();","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"yzhedwin"},"content":"            break;","lastModifiedDate":"2021-10-04"},{"lineNumber":103,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":104,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":105,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":106,"author":{"gitId":"jiexiong-zeng"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":107,"author":{"gitId":"jiexiong-zeng"},"content":"     * Parser group for user inputs starting with /m","lastModifiedDate":"2021-11-02"},{"lineNumber":108,"author":{"gitId":"yapjoonsiong"},"content":"     * First separate the input int part is saved as module.","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"jiexiong-zeng"},"content":"     * The next part is split again to obtain the new taskType and taskDescription","lastModifiedDate":"2021-10-03"},{"lineNumber":110,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":111,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param input string after removing /m","lastModifiedDate":"2021-11-02"},{"lineNumber":112,"author":{"gitId":"jiexiong-zeng"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":113,"author":{"gitId":"yzhedwin"},"content":"    void moduleParser(String input) {","lastModifiedDate":"2021-10-04"},{"lineNumber":114,"author":{"gitId":"jiexiong-zeng"},"content":"        splitInput(input);","lastModifiedDate":"2021-10-03"},{"lineNumber":115,"author":{"gitId":"jiexiong-zeng"},"content":"        Module module;","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"jiexiong-zeng"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"jiexiong-zeng"},"content":"            module \u003d NoCap.moduleList.find(taskType.toUpperCase(Locale.ROOT));","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"jiexiong-zeng"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"jiexiong-zeng"},"content":"            Ui.printInvalidModuleNameMessage();","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"jiexiong-zeng"},"content":"            return;","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":123,"author":{"gitId":"jiexiong-zeng"},"content":"        splitInput(taskDescription);","lastModifiedDate":"2021-10-03"},{"lineNumber":124,"author":{"gitId":"jiexiong-zeng"},"content":"        switch (taskType) {","lastModifiedDate":"2021-10-03"},{"lineNumber":125,"author":{"gitId":"jiexiong-zeng"},"content":"        case LIST:","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"DmitriYam"},"content":"            //splitInput(taskDescription);","lastModifiedDate":"2021-11-01"},{"lineNumber":127,"author":{"gitId":"jiexiong-zeng"},"content":"            list.moduleListParser(module, taskDescription);","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"jiexiong-zeng"},"content":"        case ADDCLASS:","lastModifiedDate":"2021-10-03"},{"lineNumber":130,"author":{"gitId":"jiexiong-zeng"},"content":"            command.commandAddClass(module, taskDescription);","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-03"},{"lineNumber":132,"author":{"gitId":"jiexiong-zeng"},"content":"        case ADDTASK:","lastModifiedDate":"2021-10-03"},{"lineNumber":133,"author":{"gitId":"jiexiong-zeng"},"content":"            command.commandAddTask(module, taskDescription);","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-03"},{"lineNumber":135,"author":{"gitId":"jiexiong-zeng"},"content":"        case ADDGRADABLE:","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"jiexiong-zeng"},"content":"            command.commandAddGradable(module, taskDescription);","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"yzhedwin"},"content":"            break;","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"jiexiong-zeng"},"content":"        case ADDGRADE:","lastModifiedDate":"2021-10-03"},{"lineNumber":139,"author":{"gitId":"jiexiong-zeng"},"content":"            command.commandAddGrade(module, taskDescription);","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-03"},{"lineNumber":141,"author":{"gitId":"DmitriYam"},"content":"        case ADDCREDIT:","lastModifiedDate":"2021-10-16"},{"lineNumber":142,"author":{"gitId":"jiexiong-zeng"},"content":"            command.commandAddCredit(module, taskDescription);","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-03"},{"lineNumber":144,"author":{"gitId":"jiexiong-zeng"},"content":"        case DELETECLASS:","lastModifiedDate":"2021-10-03"},{"lineNumber":145,"author":{"gitId":"DmitriYam"},"content":"            command.commandDeleteClass(module, taskDescription);","lastModifiedDate":"2021-10-28"},{"lineNumber":146,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-03"},{"lineNumber":147,"author":{"gitId":"jiexiong-zeng"},"content":"        case DELETETASK:","lastModifiedDate":"2021-10-03"},{"lineNumber":148,"author":{"gitId":"jiexiong-zeng"},"content":"            command.commandDeleteTask(module, taskDescription);","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-16"},{"lineNumber":150,"author":{"gitId":"jiexiong-zeng"},"content":"        case DELETEGRADE:","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"jiexiong-zeng"},"content":"            command.commandDeleteGrade(module);","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"jiexiong-zeng"},"content":"        case EDITDESCRIPTION:","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"jiexiong-zeng"},"content":"            splitInput(taskDescription);","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"jiexiong-zeng"},"content":"            command.commandEditDescription(module,taskType,taskDescription);","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"jiexiong-zeng"},"content":"        case EDITDEADLINE:","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"jiexiong-zeng"},"content":"            splitInput(taskDescription);","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"jiexiong-zeng"},"content":"            command.commandEditDeadline(module,taskType,taskDescription);","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"jiexiong-zeng"},"content":"        case DONE:","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"jiexiong-zeng"},"content":"            command.commandMarkDone(module, taskDescription);","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-03"},{"lineNumber":164,"author":{"gitId":"jiexiong-zeng"},"content":"        case NOTDONE:","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"jiexiong-zeng"},"content":"            command.commandMarkNotDone(module, taskDescription);","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-03"},{"lineNumber":167,"author":{"gitId":"jiexiong-zeng"},"content":"        case GRADABLEDONE:","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"jiexiong-zeng"},"content":"            command.commandMarkGradableDone(module, taskDescription);","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"jiexiong-zeng"},"content":"        case GRADABLENOTDONE:","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"jiexiong-zeng"},"content":"            command.commandMarkGradableNotDone(module, taskDescription);","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"jiexiong-zeng"},"content":"        case INFO:","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"jiexiong-zeng"},"content":"            command.commandShowInfo(module);","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"jiexiong-zeng"},"content":"            break;","lastModifiedDate":"2021-10-11"},{"lineNumber":176,"author":{"gitId":"jiexiong-zeng"},"content":"        default:","lastModifiedDate":"2021-10-03"},{"lineNumber":177,"author":{"gitId":"jiexiong-zeng"},"content":"            Ui.printInvalidInputMessage();","lastModifiedDate":"2021-10-18"},{"lineNumber":178,"author":{"gitId":"yzhedwin"},"content":"            break;","lastModifiedDate":"2021-10-04"},{"lineNumber":179,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":180,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":181,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":182,"author":{"gitId":"jiexiong-zeng"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":183,"author":{"gitId":"jiexiong-zeng"},"content":"     * Splits inputs string and store them into taskType and taskDescription.","lastModifiedDate":"2021-11-02"},{"lineNumber":184,"author":{"gitId":"jiexiong-zeng"},"content":"     * If there are no SPACE_STRING, taskType is the input String and taskDescription is EMPTY_STRING.","lastModifiedDate":"2021-11-02"},{"lineNumber":185,"author":{"gitId":"jiexiong-zeng"},"content":"     * If the input string is empty, both variables are set to empty.","lastModifiedDate":"2021-11-02"},{"lineNumber":186,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":187,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param input string to be split","lastModifiedDate":"2021-11-02"},{"lineNumber":188,"author":{"gitId":"jiexiong-zeng"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":189,"author":{"gitId":"jiexiong-zeng"},"content":"    void splitInput(String input) {","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"jiexiong-zeng"},"content":"        try {","lastModifiedDate":"2021-10-03"},{"lineNumber":191,"author":{"gitId":"jiexiong-zeng"},"content":"            int typePos \u003d input.indexOf(SPACE_STRING);","lastModifiedDate":"2021-10-03"},{"lineNumber":192,"author":{"gitId":"jiexiong-zeng"},"content":"            taskType \u003d input.substring(0, typePos);","lastModifiedDate":"2021-10-03"},{"lineNumber":193,"author":{"gitId":"jiexiong-zeng"},"content":"            taskDescription \u003d input.substring(typePos).trim();","lastModifiedDate":"2021-10-03"},{"lineNumber":194,"author":{"gitId":"jiexiong-zeng"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":195,"author":{"gitId":"jiexiong-zeng"},"content":"            taskType \u003d input.trim();","lastModifiedDate":"2021-10-10"},{"lineNumber":196,"author":{"gitId":"jiexiong-zeng"},"content":"            taskDescription \u003d EMPTY_STRING;","lastModifiedDate":"2021-10-03"},{"lineNumber":197,"author":{"gitId":"jiexiong-zeng"},"content":"            assert (taskType.equals(input.trim()));","lastModifiedDate":"2021-10-10"},{"lineNumber":198,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":199,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":200,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":201,"author":{"gitId":"yzhedwin"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-10-04"},{"lineNumber":202,"author":{"gitId":"yzhedwin"},"content":"        return this.isExit;","lastModifiedDate":"2021-10-04"},{"lineNumber":203,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":204,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":205,"author":{"gitId":"jiexiong-zeng"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-10-10"},{"lineNumber":206,"author":{"gitId":"jiexiong-zeng"},"content":"        return taskType;","lastModifiedDate":"2021-10-10"},{"lineNumber":207,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":208,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":209,"author":{"gitId":"jiexiong-zeng"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2021-10-10"},{"lineNumber":210,"author":{"gitId":"jiexiong-zeng"},"content":"        return taskDescription;","lastModifiedDate":"2021-10-10"},{"lineNumber":211,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":212,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":213,"author":{"gitId":"jiexiong-zeng"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"yapjoonsiong":10,"naijie2108":7,"DmitriYam":6,"yzhedwin":16,"jiexiong-zeng":174}},{"path":"src/main/java/command/parser/ParserChecks.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexiong-zeng"},"content":"package command.parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"jiexiong-zeng"},"content":"import command.NoCap;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"jiexiong-zeng"},"content":"import command.Ui;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"jiexiong-zeng"},"content":"import task.GradableTask;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"jiexiong-zeng"},"content":"import task.Task;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"jiexiong-zeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"jiexiong-zeng"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"jiexiong-zeng"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"jiexiong-zeng"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"jiexiong-zeng"},"content":" * Class containing parser methods that specifically handles error checking.","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"jiexiong-zeng"},"content":" * Also includes methods for getting Task from index or string.","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"jiexiong-zeng"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"jiexiong-zeng"},"content":"public class ParserChecks {","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String START_OF_DATE \u003d \"/by\";","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"jiexiong-zeng"},"content":"    public static final String START_OF_WEIGHTAGE \u003d \"/w\";","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"jiexiong-zeng"},"content":"    public ParserChecks() {","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"jiexiong-zeng"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"jiexiong-zeng"},"content":"     * Returns a task at the specified index from a tasklist.","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"jiexiong-zeng"},"content":"     * If input is not an index, error message is printed.","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"jiexiong-zeng"},"content":"     * Returns null if task cannot be found.","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param input index to be accessed.","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param taskList arraylist with tasks.","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"jiexiong-zeng"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"jiexiong-zeng"},"content":"    public Task getTaskFromIndex(String input, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"jiexiong-zeng"},"content":"        int index;","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"jiexiong-zeng"},"content":"        Task task \u003d null;","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"jiexiong-zeng"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"jiexiong-zeng"},"content":"            index \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"jiexiong-zeng"},"content":"            if (isValidIndex(index)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"jiexiong-zeng"},"content":"                task \u003d taskList.get(index);","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"jiexiong-zeng"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"jiexiong-zeng"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"jiexiong-zeng"},"content":"            Ui.printInvalidIndex();","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"jiexiong-zeng"},"content":"        return task;","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"jiexiong-zeng"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"jiexiong-zeng"},"content":"     * Returns a gradable task at the specified index from a tasklist.","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"jiexiong-zeng"},"content":"     * If input is not an index, error message is printed.","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"jiexiong-zeng"},"content":"     * Returns null if task cannot be found.","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param input index to be accessed.","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param taskList arraylist with gradable tasks.","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"jiexiong-zeng"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"jiexiong-zeng"},"content":"    public GradableTask getGradableTaskFromIndex(String input, ArrayList\u003cGradableTask\u003e taskList) {","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"jiexiong-zeng"},"content":"        int index;","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"jiexiong-zeng"},"content":"        GradableTask task \u003d null;","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"jiexiong-zeng"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"jiexiong-zeng"},"content":"            index \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"jiexiong-zeng"},"content":"            if (isValidIndex(index)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"jiexiong-zeng"},"content":"                task \u003d taskList.get(index);","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"jiexiong-zeng"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"jiexiong-zeng"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"jiexiong-zeng"},"content":"            Ui.printInvalidIndex();","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"jiexiong-zeng"},"content":"        return task;","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"jiexiong-zeng"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"jiexiong-zeng"},"content":"     * Searches for tasks containing keyword from an arraylist of tasks and creates a filtered arraylist.","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"jiexiong-zeng"},"content":"     * Prints out this filtered list and request for user input to select an index.","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"jiexiong-zeng"},"content":"     * Calls getTaskFromIndex to get task from the filtered list.","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param keyword keyword to search for.","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param allTaskList arraylist with all tasks.","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"jiexiong-zeng"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"jiexiong-zeng"},"content":"    public Task getTaskFromKeyword(String keyword, ArrayList\u003cTask\u003e allTaskList) {","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"jiexiong-zeng"},"content":"        Task task \u003d null;","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"jiexiong-zeng"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"jiexiong-zeng"},"content":"        for (Task item : allTaskList) {","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"jiexiong-zeng"},"content":"            if (item.getDescription().contains(keyword)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"jiexiong-zeng"},"content":"                taskList.add(item);","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"jiexiong-zeng"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"jiexiong-zeng"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"jiexiong-zeng"},"content":"            Ui.printInvalidKeyword();","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"jiexiong-zeng"},"content":"            return task;","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"jiexiong-zeng"},"content":"        assert (!taskList.isEmpty());","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"jiexiong-zeng"},"content":"        Ui.printTaskFound();","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"jiexiong-zeng"},"content":"        int counter \u003d 1;","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"jiexiong-zeng"},"content":"        for (Task item : taskList) {","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"jiexiong-zeng"},"content":"            System.out.println(counter + \": \" + item.getDescription());","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"jiexiong-zeng"},"content":"            counter++;","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"jiexiong-zeng"},"content":"        String input \u003d requestUserInput();","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"jiexiong-zeng"},"content":"        if (input.equals(\"x\")) {","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"jiexiong-zeng"},"content":"            return task;","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"jiexiong-zeng"},"content":"        task \u003d getTaskFromIndex(input, taskList);","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"jiexiong-zeng"},"content":"        return task;","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"jiexiong-zeng"},"content":"    private String requestUserInput() {","lastModifiedDate":"2021-11-02"},{"lineNumber":106,"author":{"gitId":"jiexiong-zeng"},"content":"        Ui.printSelectIndex();","lastModifiedDate":"2021-11-02"},{"lineNumber":107,"author":{"gitId":"jiexiong-zeng"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-11-02"},{"lineNumber":108,"author":{"gitId":"jiexiong-zeng"},"content":"        String input \u003d in.nextLine();","lastModifiedDate":"2021-11-02"},{"lineNumber":109,"author":{"gitId":"jiexiong-zeng"},"content":"        return input;","lastModifiedDate":"2021-11-02"},{"lineNumber":110,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":111,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":112,"author":{"gitId":"jiexiong-zeng"},"content":"    boolean isValidIndex(int index) {","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"jiexiong-zeng"},"content":"        if (index \u003c 0) {","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"jiexiong-zeng"},"content":"            Ui.printInvalidIndex();","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"jiexiong-zeng"},"content":"            return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"jiexiong-zeng"},"content":"        return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"jiexiong-zeng"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"jiexiong-zeng"},"content":"     * Used in add to verify module does not exist. Prevent duplicate module entries.","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param input moduleName to be checked against.","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"jiexiong-zeng"},"content":"     * @return true if input is existing module.","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"jiexiong-zeng"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"jiexiong-zeng"},"content":"    boolean isDuplicateModule(String input) {","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"jiexiong-zeng"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"jiexiong-zeng"},"content":"            NoCap.moduleList.find(input.toUpperCase(Locale.ROOT));","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"jiexiong-zeng"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"jiexiong-zeng"},"content":"            return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"jiexiong-zeng"},"content":"        Ui.duplicateModuleError();","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"jiexiong-zeng"},"content":"        return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"jiexiong-zeng"},"content":"    boolean isEmptyDescription(String input) {","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"jiexiong-zeng"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"jiexiong-zeng"},"content":"            Ui.missingDescription();","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"jiexiong-zeng"},"content":"            return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"jiexiong-zeng"},"content":"        return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"jiexiong-zeng"},"content":"    boolean isNotInteger(String input) {","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"jiexiong-zeng"},"content":"        if (input \u003d\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":146,"author":{"gitId":"jiexiong-zeng"},"content":"            Ui.inputNotInteger();","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"jiexiong-zeng"},"content":"            return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"jiexiong-zeng"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"jiexiong-zeng"},"content":"            int in \u003d Integer.parseInt(input);","lastModifiedDate":"2021-10-23"},{"lineNumber":151,"author":{"gitId":"jiexiong-zeng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"jiexiong-zeng"},"content":"            Ui.inputNotInteger();","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"jiexiong-zeng"},"content":"            return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":154,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":155,"author":{"gitId":"jiexiong-zeng"},"content":"        return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":156,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":158,"author":{"gitId":"jiexiong-zeng"},"content":"    boolean hasDateDescription(String input) {","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"jiexiong-zeng"},"content":"        if (!input.contains(START_OF_DATE)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"jiexiong-zeng"},"content":"            Ui.invalidDate();","lastModifiedDate":"2021-10-23"},{"lineNumber":161,"author":{"gitId":"jiexiong-zeng"},"content":"            return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":162,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":163,"author":{"gitId":"jiexiong-zeng"},"content":"        return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"jiexiong-zeng"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":167,"author":{"gitId":"jiexiong-zeng"},"content":"     * Checks if /w exists after /by.","lastModifiedDate":"2021-11-02"},{"lineNumber":168,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":169,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param input string to be checked","lastModifiedDate":"2021-11-02"},{"lineNumber":170,"author":{"gitId":"jiexiong-zeng"},"content":"     * @return true if checks passes.","lastModifiedDate":"2021-11-02"},{"lineNumber":171,"author":{"gitId":"jiexiong-zeng"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":172,"author":{"gitId":"jiexiong-zeng"},"content":"    boolean hasWeightageDescription(String input) {","lastModifiedDate":"2021-10-23"},{"lineNumber":173,"author":{"gitId":"jiexiong-zeng"},"content":"        int typePos \u003d input.indexOf(START_OF_DATE);","lastModifiedDate":"2021-10-23"},{"lineNumber":174,"author":{"gitId":"jiexiong-zeng"},"content":"        String secondPart \u003d input.substring(typePos);","lastModifiedDate":"2021-10-23"},{"lineNumber":175,"author":{"gitId":"jiexiong-zeng"},"content":"        if (secondPart.contains(START_OF_WEIGHTAGE)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":176,"author":{"gitId":"jiexiong-zeng"},"content":"            return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":177,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":178,"author":{"gitId":"jiexiong-zeng"},"content":"        Ui.invalidWeightage();","lastModifiedDate":"2021-10-23"},{"lineNumber":179,"author":{"gitId":"jiexiong-zeng"},"content":"        return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":180,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":181,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"jiexiong-zeng"},"content":"    boolean includeSpace(String input) {","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"jiexiong-zeng"},"content":"        if (input.trim().contains(Parser.SPACE_STRING)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"jiexiong-zeng"},"content":"            Ui.moduleNameHasSpace();","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"jiexiong-zeng"},"content":"            return true;","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"jiexiong-zeng"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"jiexiong-zeng"},"content":"        return false;","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":190,"author":{"gitId":"jiexiong-zeng"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":191,"author":{"gitId":"jiexiong-zeng"},"content":"     * Checks the input string is a valid grade.","lastModifiedDate":"2021-11-02"},{"lineNumber":192,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":193,"author":{"gitId":"jiexiong-zeng"},"content":"     * @param input string to be checked.","lastModifiedDate":"2021-11-02"},{"lineNumber":194,"author":{"gitId":"jiexiong-zeng"},"content":"     * @return true if checks passes.","lastModifiedDate":"2021-11-02"},{"lineNumber":195,"author":{"gitId":"jiexiong-zeng"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":196,"author":{"gitId":"DmitriYam"},"content":"    boolean validGrade(String input) {","lastModifiedDate":"2021-11-01"},{"lineNumber":197,"author":{"gitId":"DmitriYam"},"content":"        String grade \u003d input.trim();","lastModifiedDate":"2021-11-01"},{"lineNumber":198,"author":{"gitId":"DmitriYam"},"content":"        switch (grade) {","lastModifiedDate":"2021-11-01"},{"lineNumber":199,"author":{"gitId":"DmitriYam"},"content":"        case \"A+\":","lastModifiedDate":"2021-11-01"},{"lineNumber":200,"author":{"gitId":"DmitriYam"},"content":"        case \"A\":","lastModifiedDate":"2021-11-01"},{"lineNumber":201,"author":{"gitId":"DmitriYam"},"content":"        case \"A-\":","lastModifiedDate":"2021-11-01"},{"lineNumber":202,"author":{"gitId":"DmitriYam"},"content":"        case \"B+\":","lastModifiedDate":"2021-11-01"},{"lineNumber":203,"author":{"gitId":"DmitriYam"},"content":"        case \"B\":","lastModifiedDate":"2021-11-01"},{"lineNumber":204,"author":{"gitId":"DmitriYam"},"content":"        case \"B-\":","lastModifiedDate":"2021-11-01"},{"lineNumber":205,"author":{"gitId":"DmitriYam"},"content":"        case \"C+\":","lastModifiedDate":"2021-11-01"},{"lineNumber":206,"author":{"gitId":"DmitriYam"},"content":"        case \"C\":","lastModifiedDate":"2021-11-01"},{"lineNumber":207,"author":{"gitId":"DmitriYam"},"content":"        case \"D+\":","lastModifiedDate":"2021-11-01"},{"lineNumber":208,"author":{"gitId":"DmitriYam"},"content":"        case \"D\":","lastModifiedDate":"2021-11-01"},{"lineNumber":209,"author":{"gitId":"DmitriYam"},"content":"        case \"F\":","lastModifiedDate":"2021-11-01"},{"lineNumber":210,"author":{"gitId":"DmitriYam"},"content":"            return true;","lastModifiedDate":"2021-11-01"},{"lineNumber":211,"author":{"gitId":"DmitriYam"},"content":"        default:","lastModifiedDate":"2021-11-01"},{"lineNumber":212,"author":{"gitId":"DmitriYam"},"content":"            Ui.invalidGrade();","lastModifiedDate":"2021-11-01"},{"lineNumber":213,"author":{"gitId":"DmitriYam"},"content":"            return false;","lastModifiedDate":"2021-11-01"},{"lineNumber":214,"author":{"gitId":"DmitriYam"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":215,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":216,"author":{"gitId":"jiexiong-zeng"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"DmitriYam":21,"jiexiong-zeng":195}},{"path":"src/main/java/command/storage/StorageDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package command.storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"import command.Ui;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"import semester.SemesterList;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"import java.io.File;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"naijie2108"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"naijie2108"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"naijie2108"},"content":"public class StorageDecoder {","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"naijie2108"},"content":"    //Constants","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"naijie2108"},"content":"    private static final String ROOT \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"naijie2108"},"content":"    private static final Path FILE_PATH \u003d Paths.get(ROOT, \"data\", \"data.json\");","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"naijie2108"},"content":"    //Logger object","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"jiexiong-zeng"},"content":"    private static final Logger logger \u003d command.Logger.myLogger();","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"naijie2108"},"content":"     * Decodes a json file located at a specified path into a SemesterList object.","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"naijie2108"},"content":"     * Is implemented using the jackson databind library.","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"naijie2108"},"content":"     * @return A SemesterList containing information from previous runs.","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"naijie2108"},"content":"    public static SemesterList decodeJsonToSemesterList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"naijie2108"},"content":"        ObjectMapper objectMapper \u003d new ObjectMapper().enable(SerializationFeature.INDENT_OUTPUT);","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"naijie2108"},"content":"        objectMapper.registerModule(new JavaTimeModule());","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"naijie2108"},"content":"        SemesterList semesters \u003d new SemesterList();","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"naijie2108"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"naijie2108"},"content":"            if (!Files.exists(FILE_PATH)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"naijie2108"},"content":"                Ui.printNoSaveFileMessage();","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"naijie2108"},"content":"                assert semesters.toString().equals(new SemesterList().toString());","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"naijie2108"},"content":"                return semesters;","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"naijie2108"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"naijie2108"},"content":"            semesters \u003d objectMapper.readValue(new File(FILE_PATH.toString()), SemesterList.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"naijie2108"},"content":"            Ui.loadFileSuccessful();","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"naijie2108"},"content":"            logger.log(Level.INFO, \"Load file successful\");","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"naijie2108"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"naijie2108"},"content":"            Ui.printCorruptFileMessage();","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"naijie2108"},"content":"            // Create a new save file if save file is corrupted","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"naijie2108"},"content":"            assert semesters.toString().equals(new SemesterList().toString());","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"naijie2108"},"content":"            StorageEncoder.encodeAndSaveSemesterListToJson(semesters);","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"naijie2108"},"content":"        return semesters;","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"naijie2108"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"naijie2108":53,"jiexiong-zeng":1}},{"path":"src/main/java/command/storage/StorageEncoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package command.storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"import com.fasterxml.jackson.databind.DatabindException;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"import command.Ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"import exceptions.ExceptionMessages;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"import exceptions.NoCapExceptions;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"import semester.SemesterList;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"import java.io.File;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"naijie2108"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"naijie2108"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"naijie2108"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"naijie2108"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"naijie2108"},"content":"public class StorageEncoder {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"naijie2108"},"content":"    //Constants","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"naijie2108"},"content":"    private static final String ROOT \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"naijie2108"},"content":"    private static final Path FILE_PATH \u003d Paths.get(ROOT, \"data\", \"data.json\");","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"naijie2108"},"content":"    private static final Path DIRECTORY_PATH \u003d Paths.get(ROOT, \"data\");","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"naijie2108"},"content":"    //Logger object","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"jiexiong-zeng"},"content":"    private static final Logger logger \u003d command.Logger.myLogger();","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"naijie2108"},"content":"     * Takes in a SemesterList object and converts it into json format.","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"naijie2108"},"content":"     * Then, stores it in a specified file path. If the specified directory does","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"naijie2108"},"content":"     * not exist, this method will attempt to create the directory first before saving the","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"naijie2108"},"content":"     * SemesterList object. Is implemented using the jackson databind library.","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"naijie2108"},"content":"     * @param semesterList The SemesterList object to be converted into json format.","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"naijie2108"},"content":"    public static void encodeAndSaveSemesterListToJson(SemesterList semesterList) {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"naijie2108"},"content":"        ObjectMapper objectMapper \u003d new ObjectMapper().enable(SerializationFeature.INDENT_OUTPUT);","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"naijie2108"},"content":"        objectMapper.registerModule(new JavaTimeModule());","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"naijie2108"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"naijie2108"},"content":"            if (!Files.exists(DIRECTORY_PATH)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"naijie2108"},"content":"                createDataDirectory();","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"naijie2108"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"naijie2108"},"content":"            if (!Files.exists(FILE_PATH)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"naijie2108"},"content":"                createFile();","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"naijie2108"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"naijie2108"},"content":"            objectMapper.writeValue(new File(FILE_PATH.toString()), semesterList);","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"naijie2108"},"content":"            logger.log(Level.INFO, \"File saved\");","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"naijie2108"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"naijie2108"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"naijie2108"},"content":"        } catch (DatabindException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"naijie2108"},"content":"            Ui.parseSaveFileError();","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"naijie2108"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"naijie2108"},"content":"            Ui.writeSaveFileError();","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"naijie2108"},"content":"    private static void createDataDirectory() throws NoCapExceptions {","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"naijie2108"},"content":"        File newDirectory \u003d new File(DIRECTORY_PATH.toString());","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"naijie2108"},"content":"        boolean createSuccess \u003d newDirectory.mkdir();","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"naijie2108"},"content":"        logger.log(Level.INFO, \"New data directory being created\");","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"naijie2108"},"content":"        assert Files.exists(DIRECTORY_PATH);","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"naijie2108"},"content":"        if (!createSuccess) {","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"naijie2108"},"content":"            throw new NoCapExceptions(ExceptionMessages.EXCEPTION_CREATE_DIRECTORY_FAIL);","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"naijie2108"},"content":"    private static void createFile() throws NoCapExceptions {","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"naijie2108"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"naijie2108"},"content":"            File newFile \u003d new File(FILE_PATH.toString());","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"naijie2108"},"content":"            logger.log(Level.INFO, \"New data file being created\");","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"naijie2108"},"content":"            boolean createSuccess \u003d newFile.createNewFile();","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"naijie2108"},"content":"            if (!createSuccess) {","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"naijie2108"},"content":"                throw new NoCapExceptions(ExceptionMessages.EXCEPTION_CREATE_FILE_FAIL);","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"naijie2108"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"naijie2108"},"content":"            assert Files.exists(FILE_PATH);","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"naijie2108"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"naijie2108"},"content":"            Ui.saveFileError();","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"naijie2108"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"naijie2108":81,"jiexiong-zeng":1}},{"path":"src/main/java/exceptions/ExceptionMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package exceptions;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":" * Class used to store exception messages used in NoCapExceptions.","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"public class ExceptionMessages {","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"    public static final String EXCEPTION_CREATE_DIRECTORY_FAIL \u003d \"Error creating directory\";","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"    public static final String EXCEPTION_CREATE_FILE_FAIL \u003d \"Error creating save file\";","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"naijie2108":9}},{"path":"src/main/java/exceptions/NoCapExceptions.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package exceptions;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":" * Custom exception class to handle NoCap specific exceptions.","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"public class NoCapExceptions extends Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"    public NoCapExceptions(String message) {","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"        super(message);","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"naijie2108":10}},{"path":"src/main/java/module/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexiong-zeng"},"content":"package module;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"jiexiong-zeng"},"content":"import command.NoCap;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"DmitriYam"},"content":"import command.VisualiseGradable;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"yapjoonsiong"},"content":"import exceptions.NoCapExceptions;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"yapjoonsiong"},"content":"import schedule.Schedule;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"yapjoonsiong"},"content":"import schedule.ScheduleList;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"DmitriYam"},"content":"import task.GradableTaskList;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"DmitriYam"},"content":"import task.Task;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"yzhedwin"},"content":"import task.TaskList;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"DmitriYam"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"DmitriYam"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"jiexiong-zeng"},"content":"public class Module {","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"DmitriYam"},"content":"    protected String letterGrade;","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"yapjoonsiong"},"content":"    protected double points;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"DmitriYam"},"content":"    protected String moduleName;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"yapjoonsiong"},"content":"    public TaskList taskList;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"DmitriYam"},"content":"    private ScheduleList scheduleList;","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"DmitriYam"},"content":"    protected int credits;","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"DmitriYam"},"content":"    public GradableTaskList gradableTaskList;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"jiexiong-zeng"},"content":"    private static final Logger logger \u003d command.Logger.myLogger();","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"DmitriYam"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"DmitriYam"},"content":"     * Constructor to create an instance of Module.","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"DmitriYam"},"content":"     * Empty SchdeuleList, TaskList and GradableTaskList is created","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"DmitriYam"},"content":"     * Credits is automatically assigned 0","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"DmitriYam"},"content":"     * LetterGrade automatically assigned to null","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"DmitriYam"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"DmitriYam"},"content":"     * @param moduleName Name of module to be created","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"DmitriYam"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"yapjoonsiong"},"content":"    public Module(String moduleName) throws NoCapExceptions {","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"yapjoonsiong"},"content":"        if (moduleName.length() \u003e 16) {","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"yapjoonsiong"},"content":"            throw new NoCapExceptions(\"Module name must be less than 17 characters\");","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"DmitriYam"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"yapjoonsiong"},"content":"        this.letterGrade \u003d \"NIL\";","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"DmitriYam"},"content":"        this.scheduleList \u003d new ScheduleList();","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"DmitriYam"},"content":"        this.credits \u003d 0;","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"yapjoonsiong"},"content":"        this.points \u003d 0;","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"DmitriYam"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"DmitriYam"},"content":"        this.gradableTaskList \u003d new GradableTaskList();","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"naijie2108"},"content":"     * For deserialization from JSON file.","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"naijie2108"},"content":"    public Module() {","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"naijie2108"},"content":"    //Getters and Setters","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"naijie2108"},"content":"    public String getLetterGrade() {","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"naijie2108"},"content":"        return letterGrade;","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"naijie2108"},"content":"    public void setLetterGrade(String letterGrade) {","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"naijie2108"},"content":"        this.letterGrade \u003d letterGrade;","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"naijie2108"},"content":"    public String getModuleName() {","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"naijie2108"},"content":"        return moduleName;","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"naijie2108"},"content":"    public void setModuleName(String moduleName) {","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"naijie2108"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"naijie2108"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"naijie2108"},"content":"        return taskList;","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"naijie2108"},"content":"    public void setTaskList(TaskList taskList) {","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"naijie2108"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"DmitriYam"},"content":"    public ScheduleList getScheduleList() {","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"DmitriYam"},"content":"        return this.scheduleList;","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"DmitriYam"},"content":"    public void setScheduleList(ScheduleList scheduleList) {","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"naijie2108"},"content":"        this.scheduleList \u003d scheduleList;","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"DmitriYam"},"content":"    public GradableTaskList getGradableTaskList() {","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"DmitriYam"},"content":"        return this.gradableTaskList;","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"DmitriYam"},"content":"    public void addGradableTask(String userInput) {","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"DmitriYam"},"content":"        this.gradableTaskList.addGradableTask(this.moduleName, userInput);","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"naijie2108"},"content":"    public int getCredits() {","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"naijie2108"},"content":"        return credits;","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"naijie2108"},"content":"    public void setCredits(int credits) {","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"naijie2108"},"content":"        this.credits \u003d credits;","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"naijie2108"},"content":"    //Methods","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"yapjoonsiong"},"content":"    public int size() {","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"yapjoonsiong"},"content":"        return this.scheduleList.size();","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"yapjoonsiong"},"content":"    public Schedule get(int index) {","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"DmitriYam"},"content":"        assert index \u003e\u003d 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"DmitriYam"},"content":"        return this.scheduleList.getSchedule(index);","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":116,"author":{"gitId":"DmitriYam"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"DmitriYam"},"content":"     * +","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"DmitriYam"},"content":"     * Add grade to the module.","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"DmitriYam"},"content":"     * Points are automatically update when the grade is added.","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"DmitriYam"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"DmitriYam"},"content":"     * @param letterGrade grade of module","lastModifiedDate":"2021-10-28"},{"lineNumber":122,"author":{"gitId":"DmitriYam"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"DmitriYam"},"content":"    public void addGrade(String letterGrade) {","lastModifiedDate":"2021-10-04"},{"lineNumber":125,"author":{"gitId":"DmitriYam"},"content":"        this.letterGrade \u003d letterGrade;","lastModifiedDate":"2021-10-04"},{"lineNumber":126,"author":{"gitId":"yapjoonsiong"},"content":"        updatePoints();","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":128,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":129,"author":{"gitId":"yapjoonsiong"},"content":"    public void deleteGrade() {","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"yapjoonsiong"},"content":"        this.letterGrade \u003d \"NIL\";","lastModifiedDate":"2021-11-02"},{"lineNumber":131,"author":{"gitId":"yapjoonsiong"},"content":"        updatePoints();","lastModifiedDate":"2021-11-02"},{"lineNumber":132,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"yapjoonsiong"},"content":"    private void updatePoints() {","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"yapjoonsiong"},"content":"        switch (letterGrade) {","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"yapjoonsiong"},"content":"        case \"A+\":","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"yapjoonsiong"},"content":"        case \"A\":","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"yapjoonsiong"},"content":"            points \u003d 5;","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"yapjoonsiong"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"yapjoonsiong"},"content":"        case \"A-\":","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"yapjoonsiong"},"content":"            points \u003d 4.5;","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"yapjoonsiong"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"yapjoonsiong"},"content":"        case \"B+\":","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"yapjoonsiong"},"content":"            points \u003d 4.0;","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"yapjoonsiong"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"yapjoonsiong"},"content":"        case \"B\":","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"yapjoonsiong"},"content":"            points \u003d 3.5;","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"yapjoonsiong"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"yapjoonsiong"},"content":"        case \"B-\":","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"yapjoonsiong"},"content":"            points \u003d 3.0;","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"yapjoonsiong"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"yapjoonsiong"},"content":"        case \"C+\":","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"yapjoonsiong"},"content":"            points \u003d 2.5;","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"yapjoonsiong"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"yapjoonsiong"},"content":"        case \"C\":","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"yapjoonsiong"},"content":"            points \u003d 2.0;","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"yapjoonsiong"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"yapjoonsiong"},"content":"        case \"D+\":","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"yapjoonsiong"},"content":"            points \u003d 1.5;","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"yapjoonsiong"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"yapjoonsiong"},"content":"        case \"D\":","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"yapjoonsiong"},"content":"            points \u003d 1.0;","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"yapjoonsiong"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"yapjoonsiong"},"content":"        case \"F\":","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"yapjoonsiong"},"content":"        default:","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"yapjoonsiong"},"content":"            points \u003d 0;","lastModifiedDate":"2021-11-02"},{"lineNumber":167,"author":{"gitId":"yapjoonsiong"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"yapjoonsiong"},"content":"    public double getPoints() {","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"yapjoonsiong"},"content":"        return points;","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"DmitriYam"},"content":"    public void addClass(Schedule schedule) {","lastModifiedDate":"2021-10-04"},{"lineNumber":176,"author":{"gitId":"DmitriYam"},"content":"        this.scheduleList.addClass(schedule);","lastModifiedDate":"2021-10-17"},{"lineNumber":177,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":178,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":179,"author":{"gitId":"jiexiong-zeng"},"content":"    //overloading to take in String input * Added by jiexiong to keep Parser clean","lastModifiedDate":"2021-10-11"},{"lineNumber":180,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"yapjoonsiong"},"content":"     * Overload addClass method to take in String input.","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"yapjoonsiong"},"content":"     * Adds a Class object with corresponding details.","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"yapjoonsiong"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"yapjoonsiong"},"content":"     * @param input User input class details.","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"yapjoonsiong"},"content":"     * @throws NoCapExceptions Throws exception when Class exists in a slot or when input is wrongly formatted.","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"yapjoonsiong"},"content":"    public void addClass(String input) throws NoCapExceptions {","lastModifiedDate":"2021-10-23"},{"lineNumber":189,"author":{"gitId":"DmitriYam"},"content":"        this.scheduleList.addClass(input);","lastModifiedDate":"2021-10-22"},{"lineNumber":190,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":191,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"DmitriYam"},"content":"    public void deleteClass(String input) {","lastModifiedDate":"2021-10-28"},{"lineNumber":193,"author":{"gitId":"DmitriYam"},"content":"        this.scheduleList.deleteClass(input);","lastModifiedDate":"2021-10-28"},{"lineNumber":194,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":196,"author":{"gitId":"DmitriYam"},"content":"    public void addTask(String userInput) {","lastModifiedDate":"2021-10-05"},{"lineNumber":197,"author":{"gitId":"yzhedwin"},"content":"        this.taskList.addTask(this.moduleName, userInput);","lastModifiedDate":"2021-10-11"},{"lineNumber":198,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":199,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":200,"author":{"gitId":"yapjoonsiong"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"yapjoonsiong"},"content":"        this.taskList.delete(task);","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"yapjoonsiong"},"content":"    public void addCredits(int credits) throws NoCapExceptions {","lastModifiedDate":"2021-11-02"},{"lineNumber":205,"author":{"gitId":"yapjoonsiong"},"content":"        if (credits \u003c 0) {","lastModifiedDate":"2021-11-02"},{"lineNumber":206,"author":{"gitId":"yapjoonsiong"},"content":"            throw new NoCapExceptions(\"credit must be an integer \u003e 0\");","lastModifiedDate":"2021-11-02"},{"lineNumber":207,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":208,"author":{"gitId":"DmitriYam"},"content":"        this.credits \u003d credits;","lastModifiedDate":"2021-10-04"},{"lineNumber":209,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":210,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":211,"author":{"gitId":"jiexiong-zeng"},"content":"    public void showInformation() {","lastModifiedDate":"2021-10-11"},{"lineNumber":212,"author":{"gitId":"jiexiong-zeng"},"content":"        System.out.println(toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":213,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":214,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":215,"author":{"gitId":"DmitriYam"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":216,"author":{"gitId":"DmitriYam"},"content":"     * Reformats Module for easier viewing.","lastModifiedDate":"2021-10-28"},{"lineNumber":217,"author":{"gitId":"DmitriYam"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":218,"author":{"gitId":"DmitriYam"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":219,"author":{"gitId":"DmitriYam"},"content":"    public String toString() {","lastModifiedDate":"2021-10-16"},{"lineNumber":220,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":221,"author":{"gitId":"jiexiong-zeng"},"content":"        return \"Module name: \" + moduleName","lastModifiedDate":"2021-10-06"},{"lineNumber":222,"author":{"gitId":"DmitriYam"},"content":"                + \"\\nCREDITS: \" + credits","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"DmitriYam"},"content":"                + \"\\n--------------------------- \"","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"DmitriYam"},"content":"                + \"\\nSCHEDULE: \\n\" + scheduleList","lastModifiedDate":"2021-10-17"},{"lineNumber":225,"author":{"gitId":"DmitriYam"},"content":"                + \"--------------------------- \"","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"DmitriYam"},"content":"                + \"\\nGRADE: \" + letterGrade","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"DmitriYam"},"content":"                + \"\\nTASKS: \" + taskList","lastModifiedDate":"2021-10-17"},{"lineNumber":228,"author":{"gitId":"DmitriYam"},"content":"                + \"\\nBREAKDOWN: \\n\" + gradableTaskList;","lastModifiedDate":"2021-10-17"},{"lineNumber":229,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":230,"author":{"gitId":"jiexiong-zeng"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"yapjoonsiong":86,"naijie2108":45,"DmitriYam":81,"yzhedwin":2,"jiexiong-zeng":16}},{"path":"src/main/java/module/ModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yapjoonsiong"},"content":"package module;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"DmitriYam"},"content":"import command.Ui;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"yapjoonsiong"},"content":"import command.storage.StorageDecoder;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"yapjoonsiong"},"content":"import exceptions.NoCapExceptions;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"yapjoonsiong"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"yapjoonsiong"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"yapjoonsiong"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"yapjoonsiong"},"content":"public class ModuleList {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"jiexiong-zeng"},"content":"    private static final Logger logger \u003d command.Logger.myLogger();","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"yapjoonsiong"},"content":"    private static final int HEIGHT \u003d 33;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"yapjoonsiong"},"content":"    private static final int LENGTH \u003d 207;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"yapjoonsiong"},"content":"    private static final int BOXWIDTH \u003d 20;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"yapjoonsiong"},"content":"    private static final int BOXHEIGHT \u003d 5;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"yapjoonsiong"},"content":"    private ArrayList\u003cModule\u003e moduleList;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"naijie2108"},"content":"    public ModuleList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"naijie2108"},"content":"        this.moduleList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"naijie2108"},"content":"    //Getters","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"naijie2108"},"content":"    public ArrayList\u003cModule\u003e getModuleList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"naijie2108"},"content":"        return moduleList;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"naijie2108"},"content":"    //Setters","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"naijie2108"},"content":"    public void setModuleList(ArrayList\u003cModule\u003e moduleList) {","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"naijie2108"},"content":"        this.moduleList \u003d moduleList;","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"yapjoonsiong"},"content":"    public void add(Module module) {","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"yapjoonsiong"},"content":"        this.moduleList.add(module);","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"yapjoonsiong"},"content":"     * Overload add method to take in String input.","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"yapjoonsiong"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"yapjoonsiong"},"content":"     * @param input User input for Module name.","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"yapjoonsiong"},"content":"    public void add(String input) throws NoCapExceptions {","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"jiexiong-zeng"},"content":"        Module module \u003d new Module(input);","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"jiexiong-zeng"},"content":"        this.moduleList.add(module);","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"yapjoonsiong"},"content":"        logger.log(Level.INFO, \"Module added successfully\");","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"yapjoonsiong"},"content":"    public void delete(Module module) {","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"yapjoonsiong"},"content":"        moduleList.remove(module);","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"yapjoonsiong"},"content":"     * Overload delete method to take in String input.","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"DmitriYam"},"content":"     * input index validity is checked.","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"yapjoonsiong"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"yapjoonsiong"},"content":"     * @param input User input for Module name.","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"jiexiong-zeng"},"content":"    public void delete(String input) {","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"jiexiong-zeng"},"content":"        int moduleIndex \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"yapjoonsiong"},"content":"        if (moduleIndex \u003c 0 || moduleIndex \u003e\u003d moduleList.size()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"yapjoonsiong"},"content":"            throw new ArrayIndexOutOfBoundsException(\"Invalid number value\");","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"DmitriYam"},"content":"        Ui.deleteModuleMessage(moduleList.get(moduleIndex));","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"jiexiong-zeng"},"content":"        moduleList.remove(get(moduleIndex));","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"yapjoonsiong"},"content":"        logger.log(Level.INFO, \"Module deleted successfully\");","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"yapjoonsiong"},"content":"    public int size() {","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"yapjoonsiong"},"content":"        return this.moduleList.size();","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"yapjoonsiong"},"content":"    public Module get(int index) {","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"yapjoonsiong"},"content":"        assert index \u003e\u003d 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"yapjoonsiong"},"content":"        return this.moduleList.get(index);","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"yapjoonsiong"},"content":"     * Method to find Module objects by their description.","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"yapjoonsiong"},"content":"     * Iterates through every Module object in moduleList and returns Module with a matching description.","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"yapjoonsiong"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"yapjoonsiong"},"content":"     * @param input User input Module description.","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"yapjoonsiong"},"content":"     * @return Module object.","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"yapjoonsiong"},"content":"    public Module find(String input) {","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"yapjoonsiong"},"content":"        String moduleName \u003d input.trim();","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"yapjoonsiong"},"content":"        int index \u003d -1;","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"yapjoonsiong"},"content":"        for (int i \u003d 0; i \u003c moduleList.size(); i++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"yapjoonsiong"},"content":"            if (Objects.equals(moduleList.get(i).moduleName, moduleName)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"yapjoonsiong"},"content":"                index \u003d i;","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"yapjoonsiong"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"yapjoonsiong"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"yapjoonsiong"},"content":"            throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"yapjoonsiong"},"content":"        logger.log(Level.INFO, \"Module found successfully\");","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"yapjoonsiong"},"content":"        return moduleList.get(index);","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"yapjoonsiong"},"content":"     * Method to print all existing Modules and their details in moduleList.","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"yapjoonsiong"},"content":"    public void printModules() {","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"yapjoonsiong"},"content":"        for (int i \u003d 0; i \u003c moduleList.size(); i++) {","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"yapjoonsiong"},"content":"            System.out.println(i + 1);","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"yapjoonsiong"},"content":"            System.out.println(moduleList.get(i));","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"yapjoonsiong"},"content":"    private String formatTimeString(int time) {","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"yapjoonsiong"},"content":"        String timeString;","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"yapjoonsiong"},"content":"        assert (time \u003c 24 \u0026\u0026 time \u003e\u003d 0);","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"yapjoonsiong"},"content":"        if (time \u003c 10) {","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"yapjoonsiong"},"content":"            timeString \u003d \"0\" + time + \"00\";","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"yapjoonsiong"},"content":"        } else {","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"yapjoonsiong"},"content":"            timeString \u003d time + \"00\";","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"yapjoonsiong"},"content":"        assert timeString.length() \u003d\u003d 4;","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"yapjoonsiong"},"content":"        return timeString;","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"yapjoonsiong"},"content":"    private int moduleAtTime(String timeString, int r) {","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"yapjoonsiong"},"content":"        int moduleIndex \u003d -1;","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"yapjoonsiong"},"content":"        String day;","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"yapjoonsiong"},"content":"        if (r \u003c\u003d 6) {","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"yapjoonsiong"},"content":"            day \u003d \"MON\";","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"yapjoonsiong"},"content":"        } else if (r \u003c\u003d 11) {","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"yapjoonsiong"},"content":"            day \u003d \"TUE\";","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"yapjoonsiong"},"content":"        } else if (r \u003c\u003d 16) {","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"yapjoonsiong"},"content":"            day \u003d \"WED\";","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"yapjoonsiong"},"content":"        } else if (r \u003c\u003d 21) {","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"yapjoonsiong"},"content":"            day \u003d \"THU\";","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"yapjoonsiong"},"content":"        } else if (r \u003c\u003d 26) {","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"yapjoonsiong"},"content":"            day \u003d \"FRI\";","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"yapjoonsiong"},"content":"        } else {","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"yapjoonsiong"},"content":"            day \u003d \"SAT\";","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"yapjoonsiong"},"content":"        for (int i \u003d 0; i \u003c moduleList.size(); i++) {","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"yapjoonsiong"},"content":"            for (int j \u003d 0; j \u003c moduleList.get(i).size(); j++) {","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"jiexiong-zeng"},"content":"                if (Objects.equals(moduleList.get(i).get(j).getDay(), day)","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"jiexiong-zeng"},"content":"                        \u0026\u0026 Objects.equals(moduleList.get(i).get(j).getStartTime(), timeString)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":143,"author":{"gitId":"yapjoonsiong"},"content":"                    moduleIndex \u003d i;","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"yapjoonsiong"},"content":"                    break;","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"yapjoonsiong"},"content":"                }","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"yapjoonsiong"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"yapjoonsiong"},"content":"        return moduleIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":150,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"yapjoonsiong"},"content":"    private int classAtTime(String timeString, int r) {","lastModifiedDate":"2021-10-05"},{"lineNumber":152,"author":{"gitId":"yapjoonsiong"},"content":"        int classIndex \u003d 0;","lastModifiedDate":"2021-10-05"},{"lineNumber":153,"author":{"gitId":"yapjoonsiong"},"content":"        String day;","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"yapjoonsiong"},"content":"        day \u003d dayOfRow(r);","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"yapjoonsiong"},"content":"        for (Module module : moduleList) {","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"yapjoonsiong"},"content":"            for (int j \u003d 0; j \u003c module.size(); j++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"yapjoonsiong"},"content":"                if (Objects.equals(module.get(j).getDay(), day)","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"yapjoonsiong"},"content":"                        \u0026\u0026 Objects.equals(module.get(j).getStartTime(), timeString)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"yapjoonsiong"},"content":"                    classIndex \u003d j;","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"yapjoonsiong"},"content":"                    break;","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"yapjoonsiong"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"yapjoonsiong"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"yapjoonsiong"},"content":"        return classIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"yapjoonsiong"},"content":"    private String dayOfRow(int r) {","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"yapjoonsiong"},"content":"        String day;","lastModifiedDate":"2021-10-05"},{"lineNumber":169,"author":{"gitId":"yapjoonsiong"},"content":"        if (r \u003e\u003d 3 \u0026\u0026 r \u003c\u003d 6) {","lastModifiedDate":"2021-10-05"},{"lineNumber":170,"author":{"gitId":"yapjoonsiong"},"content":"            day \u003d \"MON\";","lastModifiedDate":"2021-10-05"},{"lineNumber":171,"author":{"gitId":"yapjoonsiong"},"content":"        } else if (r \u003e\u003d 8 \u0026\u0026 r \u003c\u003d 11) {","lastModifiedDate":"2021-10-05"},{"lineNumber":172,"author":{"gitId":"yapjoonsiong"},"content":"            day \u003d \"TUE\";","lastModifiedDate":"2021-10-05"},{"lineNumber":173,"author":{"gitId":"yapjoonsiong"},"content":"        } else if (r \u003e\u003d 13 \u0026\u0026 r \u003c\u003d 16) {","lastModifiedDate":"2021-10-05"},{"lineNumber":174,"author":{"gitId":"yapjoonsiong"},"content":"            day \u003d \"WED\";","lastModifiedDate":"2021-10-05"},{"lineNumber":175,"author":{"gitId":"yapjoonsiong"},"content":"        } else if (r \u003e\u003d 18 \u0026\u0026 r \u003c\u003d 21) {","lastModifiedDate":"2021-10-05"},{"lineNumber":176,"author":{"gitId":"yapjoonsiong"},"content":"            day \u003d \"THU\";","lastModifiedDate":"2021-10-05"},{"lineNumber":177,"author":{"gitId":"yapjoonsiong"},"content":"        } else if (r \u003e\u003d 23 \u0026\u0026 r \u003c\u003d 26) {","lastModifiedDate":"2021-10-05"},{"lineNumber":178,"author":{"gitId":"yapjoonsiong"},"content":"            day \u003d \"FRI\";","lastModifiedDate":"2021-10-05"},{"lineNumber":179,"author":{"gitId":"yapjoonsiong"},"content":"        } else {","lastModifiedDate":"2021-10-05"},{"lineNumber":180,"author":{"gitId":"yapjoonsiong"},"content":"            day \u003d \"SAT\";","lastModifiedDate":"2021-10-05"},{"lineNumber":181,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":182,"author":{"gitId":"yapjoonsiong"},"content":"        return day;","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"yapjoonsiong"},"content":"     * Method to print timetable containing classes for every Module.","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"yapjoonsiong"},"content":"     * Iterates through each Module and their Schedule to check for existing classes in a timeslot.","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"yapjoonsiong"},"content":"     * Prints out class details in the allocated time slot if a class exists in the slot.","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"yapjoonsiong"},"content":"    public void printTimeTable() {","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"yapjoonsiong"},"content":"        for (int r \u003d 0; r \u003c HEIGHT; r++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"yapjoonsiong"},"content":"            for (int c \u003d 0; c \u003c LENGTH; c++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"yapjoonsiong"},"content":"                if ((c + 12) % BOXWIDTH \u003d\u003d 0) {","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"yapjoonsiong"},"content":"                    int time \u003d ((c + 12) / BOXWIDTH) + 7;","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"yapjoonsiong"},"content":"                    String timeString \u003d formatTimeString(time);","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"yapjoonsiong"},"content":"                    c \u003d printTimeColumns(r, c, timeString);","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"yapjoonsiong"},"content":"                } else if ((r + 2) % BOXHEIGHT \u003d\u003d 0 \u0026\u0026 c \u003d\u003d 2) { //print day","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"yapjoonsiong"},"content":"                    c \u003d printRowDay(r, c);","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"yapjoonsiong"},"content":"                } else if (c \u003d\u003d LENGTH - 1) {","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"yapjoonsiong"},"content":"                    System.out.println(\"#\");","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"yapjoonsiong"},"content":"                } else if ((r - 2) % BOXHEIGHT \u003d\u003d 0 || r \u003d\u003d 0 || r \u003d\u003d HEIGHT - 1 || (c - 6) % BOXWIDTH \u003d\u003d 0 || c \u003d\u003d 0) {","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"yapjoonsiong"},"content":"                    System.out.print(\"#\");","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"yapjoonsiong"},"content":"                } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"yapjoonsiong"},"content":"                    System.out.print(\" \");","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"yapjoonsiong"},"content":"                }","lastModifiedDate":"2021-10-05"},{"lineNumber":206,"author":{"gitId":"yapjoonsiong"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":207,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":208,"author":{"gitId":"yapjoonsiong"},"content":"        logger.log(Level.INFO, \"Timetable printed successfully\");","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":210,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":211,"author":{"gitId":"yapjoonsiong"},"content":"    private int printTimeColumns(int r, int c, String timeString) {","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"yapjoonsiong"},"content":"        if (r \u003d\u003d 1) { // print time header","lastModifiedDate":"2021-10-05"},{"lineNumber":213,"author":{"gitId":"yapjoonsiong"},"content":"            System.out.print(timeString);","lastModifiedDate":"2021-10-05"},{"lineNumber":214,"author":{"gitId":"yapjoonsiong"},"content":"            c +\u003d 4;","lastModifiedDate":"2021-10-05"},{"lineNumber":215,"author":{"gitId":"yapjoonsiong"},"content":"        } else if ((r + 2) % BOXHEIGHT \u003d\u003d 0) { //print module name if class exists in timeslot","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"yapjoonsiong"},"content":"            c \u003d printSlotModuleName(r, c, timeString);","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"yapjoonsiong"},"content":"        } else if ((r + 1) % BOXHEIGHT \u003d\u003d 0) { //print class location","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"yapjoonsiong"},"content":"            c \u003d printSlotClassLocation(r, c, timeString);","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"yapjoonsiong"},"content":"        } else if (r \u003e 0 \u0026\u0026 r % BOXHEIGHT \u003d\u003d 0) { //print class comment","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"yapjoonsiong"},"content":"            c \u003d printSlotClassComment(r, c, timeString);","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":222,"author":{"gitId":"yapjoonsiong"},"content":"        return c;","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":224,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"yapjoonsiong"},"content":"    private int printRowDay(int r, int c) {","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"yapjoonsiong"},"content":"        int day \u003d (r + 2) / BOXHEIGHT;","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"yapjoonsiong"},"content":"        switch (day) {","lastModifiedDate":"2021-10-05"},{"lineNumber":228,"author":{"gitId":"yapjoonsiong"},"content":"        case 1:","lastModifiedDate":"2021-10-05"},{"lineNumber":229,"author":{"gitId":"yapjoonsiong"},"content":"            System.out.print(\"MON\");","lastModifiedDate":"2021-10-05"},{"lineNumber":230,"author":{"gitId":"yapjoonsiong"},"content":"            break;","lastModifiedDate":"2021-10-05"},{"lineNumber":231,"author":{"gitId":"yapjoonsiong"},"content":"        case 2:","lastModifiedDate":"2021-10-05"},{"lineNumber":232,"author":{"gitId":"yapjoonsiong"},"content":"            System.out.print(\"TUE\");","lastModifiedDate":"2021-10-05"},{"lineNumber":233,"author":{"gitId":"yapjoonsiong"},"content":"            break;","lastModifiedDate":"2021-10-05"},{"lineNumber":234,"author":{"gitId":"yapjoonsiong"},"content":"        case 3:","lastModifiedDate":"2021-10-05"},{"lineNumber":235,"author":{"gitId":"yapjoonsiong"},"content":"            System.out.print(\"WED\");","lastModifiedDate":"2021-10-05"},{"lineNumber":236,"author":{"gitId":"yapjoonsiong"},"content":"            break;","lastModifiedDate":"2021-10-05"},{"lineNumber":237,"author":{"gitId":"yapjoonsiong"},"content":"        case 4:","lastModifiedDate":"2021-10-05"},{"lineNumber":238,"author":{"gitId":"yapjoonsiong"},"content":"            System.out.print(\"THU\");","lastModifiedDate":"2021-10-05"},{"lineNumber":239,"author":{"gitId":"yapjoonsiong"},"content":"            break;","lastModifiedDate":"2021-10-05"},{"lineNumber":240,"author":{"gitId":"yapjoonsiong"},"content":"        case 5:","lastModifiedDate":"2021-10-05"},{"lineNumber":241,"author":{"gitId":"yapjoonsiong"},"content":"            System.out.print(\"FRI\");","lastModifiedDate":"2021-10-05"},{"lineNumber":242,"author":{"gitId":"yapjoonsiong"},"content":"            break;","lastModifiedDate":"2021-10-05"},{"lineNumber":243,"author":{"gitId":"yapjoonsiong"},"content":"        case 6:","lastModifiedDate":"2021-10-05"},{"lineNumber":244,"author":{"gitId":"yapjoonsiong"},"content":"            System.out.print(\"SAT\");","lastModifiedDate":"2021-10-05"},{"lineNumber":245,"author":{"gitId":"yapjoonsiong"},"content":"            break;","lastModifiedDate":"2021-10-05"},{"lineNumber":246,"author":{"gitId":"jiexiong-zeng"},"content":"        default:","lastModifiedDate":"2021-10-06"},{"lineNumber":247,"author":{"gitId":"jiexiong-zeng"},"content":"            System.out.print(\"INVALID\");","lastModifiedDate":"2021-10-06"},{"lineNumber":248,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":249,"author":{"gitId":"yapjoonsiong"},"content":"        c +\u003d 2;","lastModifiedDate":"2021-10-05"},{"lineNumber":250,"author":{"gitId":"yapjoonsiong"},"content":"        return c;","lastModifiedDate":"2021-10-12"},{"lineNumber":251,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":252,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":253,"author":{"gitId":"yapjoonsiong"},"content":"    private int printSlotClassComment(int r, int c, String timeString) {","lastModifiedDate":"2021-10-12"},{"lineNumber":254,"author":{"gitId":"yapjoonsiong"},"content":"        int moduleIndex \u003d moduleAtTime(timeString, r);","lastModifiedDate":"2021-10-12"},{"lineNumber":255,"author":{"gitId":"yapjoonsiong"},"content":"        int classIndex \u003d classAtTime(timeString, r);","lastModifiedDate":"2021-10-12"},{"lineNumber":256,"author":{"gitId":"yapjoonsiong"},"content":"        if (moduleIndex \u003e\u003d 0) {","lastModifiedDate":"2021-10-12"},{"lineNumber":257,"author":{"gitId":"yapjoonsiong"},"content":"            System.out.print(moduleList.get(moduleIndex).get(classIndex).getComment());","lastModifiedDate":"2021-10-12"},{"lineNumber":258,"author":{"gitId":"yapjoonsiong"},"content":"            c +\u003d moduleList.get(moduleIndex).get(classIndex).getComment().length();","lastModifiedDate":"2021-10-12"},{"lineNumber":259,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":260,"author":{"gitId":"yapjoonsiong"},"content":"        return c;","lastModifiedDate":"2021-10-12"},{"lineNumber":261,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":262,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":263,"author":{"gitId":"yapjoonsiong"},"content":"    private int printSlotClassLocation(int r, int c, String timeString) {","lastModifiedDate":"2021-10-12"},{"lineNumber":264,"author":{"gitId":"yapjoonsiong"},"content":"        int moduleIndex \u003d moduleAtTime(timeString, r);","lastModifiedDate":"2021-10-12"},{"lineNumber":265,"author":{"gitId":"yapjoonsiong"},"content":"        int classIndex \u003d classAtTime(timeString, r);","lastModifiedDate":"2021-10-12"},{"lineNumber":266,"author":{"gitId":"yapjoonsiong"},"content":"        if (moduleIndex \u003e\u003d 0) {","lastModifiedDate":"2021-10-12"},{"lineNumber":267,"author":{"gitId":"yapjoonsiong"},"content":"            System.out.print(moduleList.get(moduleIndex).get(classIndex).getLocation());","lastModifiedDate":"2021-10-12"},{"lineNumber":268,"author":{"gitId":"yapjoonsiong"},"content":"            c +\u003d moduleList.get(moduleIndex).get(classIndex).getLocation().length();","lastModifiedDate":"2021-10-12"},{"lineNumber":269,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":270,"author":{"gitId":"yapjoonsiong"},"content":"        return c;","lastModifiedDate":"2021-10-12"},{"lineNumber":271,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":272,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":273,"author":{"gitId":"yapjoonsiong"},"content":"    private int printSlotModuleName(int r, int c, String timeString) {","lastModifiedDate":"2021-10-12"},{"lineNumber":274,"author":{"gitId":"yapjoonsiong"},"content":"        int moduleIndex \u003d moduleAtTime(timeString, r);","lastModifiedDate":"2021-10-12"},{"lineNumber":275,"author":{"gitId":"yapjoonsiong"},"content":"        if (moduleIndex \u003e\u003d 0) {","lastModifiedDate":"2021-10-12"},{"lineNumber":276,"author":{"gitId":"yapjoonsiong"},"content":"            System.out.print(moduleList.get(moduleIndex).moduleName);","lastModifiedDate":"2021-10-12"},{"lineNumber":277,"author":{"gitId":"yapjoonsiong"},"content":"            c +\u003d moduleList.get(moduleIndex).moduleName.length();","lastModifiedDate":"2021-10-12"},{"lineNumber":278,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":279,"author":{"gitId":"yapjoonsiong"},"content":"        return c;","lastModifiedDate":"2021-10-12"},{"lineNumber":280,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":281,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":282,"author":{"gitId":"DmitriYam"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":283,"author":{"gitId":"DmitriYam"},"content":"     * Overrides toString() to show a formatted ModuelList when printed.","lastModifiedDate":"2021-10-28"},{"lineNumber":284,"author":{"gitId":"DmitriYam"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":285,"author":{"gitId":"DmitriYam"},"content":"     * @return String of formatted ModuleList","lastModifiedDate":"2021-10-28"},{"lineNumber":286,"author":{"gitId":"DmitriYam"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":287,"author":{"gitId":"naijie2108"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":288,"author":{"gitId":"naijie2108"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":289,"author":{"gitId":"naijie2108"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2021-10-09"},{"lineNumber":290,"author":{"gitId":"naijie2108"},"content":"        for (int i \u003d 0; i \u003c moduleList.size(); i++) {","lastModifiedDate":"2021-10-09"},{"lineNumber":291,"author":{"gitId":"jiexiong-zeng"},"content":"            output.append(i + 1).append(System.lineSeparator())","lastModifiedDate":"2021-10-09"},{"lineNumber":292,"author":{"gitId":"jiexiong-zeng"},"content":"                    .append(moduleList.get(i)).append(System.lineSeparator());","lastModifiedDate":"2021-10-09"},{"lineNumber":293,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":294,"author":{"gitId":"naijie2108"},"content":"        return output.toString();","lastModifiedDate":"2021-10-09"},{"lineNumber":295,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":296,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":297,"author":{"gitId":"yapjoonsiong"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"yapjoonsiong":243,"naijie2108":22,"DmitriYam":8,"jiexiong-zeng":24}},{"path":"src/main/java/schedule/Schedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yapjoonsiong"},"content":"package schedule;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"import exceptions.NoCapExceptions;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"DmitriYam"},"content":"import java.time.Duration;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"DmitriYam"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"DmitriYam"},"content":"public class Schedule {","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"yapjoonsiong"},"content":"    protected String startTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"yapjoonsiong"},"content":"    protected String location;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"DmitriYam"},"content":"    protected String day;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"yapjoonsiong"},"content":"    protected String comment;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"DmitriYam"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"DmitriYam"},"content":"     * Constructor for Schdeule","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"DmitriYam"},"content":"     * During construction of Schedule, input format is checked.","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"DmitriYam"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"DmitriYam"},"content":"     * @param day       Day of class","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"DmitriYam"},"content":"     * @param startTime timeslot of class","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"DmitriYam"},"content":"     * @param location  location of the class","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"DmitriYam"},"content":"     * @param comment   additional comments for the class","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"DmitriYam"},"content":"     * @throws NoCapExceptions Throws an exception when a input format error is triggered.","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"DmitriYam"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"yapjoonsiong"},"content":"    public Schedule(String day, String startTime, String location, String comment) throws NoCapExceptions {","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"yapjoonsiong"},"content":"        if (location.length() \u003e 16 || comment.length() \u003e 16) {","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"yapjoonsiong"},"content":"            throw new NoCapExceptions(\"location and comment must be less than 17 characters\");","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"yapjoonsiong"},"content":"        if (!isCorrectDayFormat(day)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"yapjoonsiong"},"content":"            throw new NoCapExceptions(\"Wrong day format. Please key in mon/tue/wed/thu/fri/sat in either LOWERCASE or \"","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"yapjoonsiong"},"content":"                    + \"UPPERCASE\");","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"yapjoonsiong"},"content":"        if (!isCorrectTimeFormat(startTime)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"yapjoonsiong"},"content":"            throw new NoCapExceptions(\"Wrong time format. Please key in 1 hour blocks of time (eg. 1000/1300)\");","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"DmitriYam"},"content":"        this.day \u003d day;","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"DmitriYam"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"yapjoonsiong"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"yapjoonsiong"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"yapjoonsiong"},"content":"    private boolean isCorrectTimeFormat(String time) {","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"yapjoonsiong"},"content":"        return time.length() \u003d\u003d 4 \u0026\u0026 time.substring(2).equals(\"00\") \u0026\u0026 Integer.parseInt(time.substring(0, 2)) \u003c 24;","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"yapjoonsiong"},"content":"    private boolean isCorrectDayFormat(String day) {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"yapjoonsiong"},"content":"        return Objects.equals(day, \"MON\") || Objects.equals(day, \"TUE\") || Objects.equals(day, \"WED\")","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"yapjoonsiong"},"content":"                || Objects.equals(day, \"THU\") || Objects.equals(day, \"FRI\") || Objects.equals(day, \"SAT\");","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"naijie2108"},"content":"     * For deserialization from JSON file.","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"naijie2108"},"content":"    public Schedule() {","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"naijie2108"},"content":"    //Getters","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"yapjoonsiong"},"content":"    public String getLocation() {","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"yapjoonsiong"},"content":"        return this.location;","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"yapjoonsiong"},"content":"    public String getComment() {","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"yapjoonsiong"},"content":"        return this.comment;","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"DmitriYam"},"content":"    public String getDay() {","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"DmitriYam"},"content":"        return day;","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"yapjoonsiong"},"content":"    public String getStartTime() {","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"DmitriYam"},"content":"        return startTime;","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"naijie2108"},"content":"    //Setters","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"naijie2108"},"content":"    public void setStartTime(String startTime) {","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"naijie2108"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"naijie2108"},"content":"    public void setLocation(String location) {","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"naijie2108"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"naijie2108"},"content":"    public void setDay(String day) {","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"naijie2108"},"content":"        this.day \u003d day;","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"naijie2108"},"content":"    public void setComment(String comment) {","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"naijie2108"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"DmitriYam"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"DmitriYam"},"content":"     * Reformats Schedule for easier viewing.","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"DmitriYam"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"DmitriYam"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"DmitriYam"},"content":"    public String toString() {","lastModifiedDate":"2021-10-04"},{"lineNumber":98,"author":{"gitId":"jiexiong-zeng"},"content":"        return \"Day: \" + day","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"jiexiong-zeng"},"content":"                + \"\\nStart Time: \" + startTime","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"DmitriYam"},"content":"                + \"\\nLocation: \" + location","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"DmitriYam"},"content":"                + \"\\nComments: \" + comment;","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":103,"author":{"gitId":"DmitriYam"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"yapjoonsiong":36,"naijie2108":24,"DmitriYam":38,"jiexiong-zeng":5}},{"path":"src/main/java/schedule/ScheduleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yapjoonsiong"},"content":"package schedule;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"import command.NoCap;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"DmitriYam"},"content":"import command.Ui;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"yapjoonsiong"},"content":"import exceptions.NoCapExceptions;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"import module.Module;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"DmitriYam"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"yapjoonsiong"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"yapjoonsiong"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"DmitriYam"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"DmitriYam"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"DmitriYam"},"content":"public class ScheduleList {","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"DmitriYam"},"content":"    protected ArrayList\u003cSchedule\u003e scheduleList;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"jiexiong-zeng"},"content":"    private static final Logger logger \u003d command.Logger.myLogger();","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"DmitriYam"},"content":"    public ScheduleList() {","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"DmitriYam"},"content":"        this.scheduleList \u003d new ArrayList\u003cSchedule\u003e();","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"DmitriYam"},"content":"    public void addClass(Schedule schedule) {","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"DmitriYam"},"content":"        this.scheduleList.add(schedule);","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"yapjoonsiong"},"content":"     * Overload addClass method to take in String input.","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"yapjoonsiong"},"content":"     * Method to add new Class object to scheduleList.","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"yapjoonsiong"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"yapjoonsiong"},"content":"     * @param input User input class details.","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"yapjoonsiong"},"content":"     * @throws NoCapExceptions Exception thrown when class already exists in timeslot or wrong formatting of input.","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"yapjoonsiong"},"content":"    public void addClass(String input) throws NoCapExceptions {","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"DmitriYam"},"content":"        String[] scheduleInfo \u003d input.split(\"/\");","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"DmitriYam"},"content":"        if (!checkInput(scheduleInfo)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"yapjoonsiong"},"content":"            throw new NoCapExceptions(\"Please key in 4 variables for class details\");","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"yapjoonsiong"},"content":"        String day \u003d scheduleInfo[0].toUpperCase(Locale.ROOT);","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"yapjoonsiong"},"content":"        String time \u003d scheduleInfo[1];","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"yapjoonsiong"},"content":"        String location \u003d scheduleInfo[2];","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"yapjoonsiong"},"content":"        String comment \u003d scheduleInfo[3];","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"yapjoonsiong"},"content":"        if (isSlotFilled(day, time)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"yapjoonsiong"},"content":"            throw new NoCapExceptions(\"A class already exists in this timeslot!\");","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"yapjoonsiong"},"content":"        Schedule schedule \u003d new Schedule(day, time, location, comment);","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"DmitriYam"},"content":"        this.scheduleList.add(schedule);","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"DmitriYam"},"content":"        logger.log(Level.INFO, \"Schedule added successfully\");","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"DmitriYam"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"DmitriYam"},"content":"     * Method to remove a single schedule from schedulelist based on index.","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"DmitriYam"},"content":"     * input index validity is checked.","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"DmitriYam"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"DmitriYam"},"content":"     * @param input index of class to be deleted.","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"DmitriYam"},"content":"     * @throws ArrayIndexOutOfBoundsException Exception thrown when invalid index is given.","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"DmitriYam"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"DmitriYam"},"content":"    public void deleteClass(String input) {","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"DmitriYam"},"content":"        int scheduleIndex \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"DmitriYam"},"content":"        if (scheduleIndex \u003c 0 || scheduleIndex \u003e\u003d scheduleList.size()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"DmitriYam"},"content":"            throw new ArrayIndexOutOfBoundsException(\"Invalid number value\");","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"DmitriYam"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"DmitriYam"},"content":"        Ui.deleteScheduleMessage(scheduleList.get(scheduleIndex));","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"DmitriYam"},"content":"        scheduleList.remove(get(scheduleIndex));","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"DmitriYam"},"content":"        logger.log(Level.INFO, \"Schedule deleted successfully\");","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"DmitriYam"},"content":"    public Schedule get(int index) {","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"DmitriYam"},"content":"        assert index \u003e\u003d 0;","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"DmitriYam"},"content":"        return this.scheduleList.get(index);","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"DmitriYam"},"content":"    private boolean checkInput(String[] input) {","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"DmitriYam"},"content":"        return input.length \u003d\u003d 4;","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"DmitriYam"},"content":"    public int size() {","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"DmitriYam"},"content":"        return this.scheduleList.size();","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"DmitriYam"},"content":"    public Schedule getSchedule(int index) {","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"DmitriYam"},"content":"        return this.scheduleList.get(index);","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"DmitriYam"},"content":"    public ArrayList\u003cSchedule\u003e getScheduleList() {","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"DmitriYam"},"content":"        return this.scheduleList;","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"yapjoonsiong"},"content":"     * Checks for whether a class already exists with the input day and time.","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"yapjoonsiong"},"content":"     * Iterates through each module object in the moduleList and each schedule within the scheduleList of each module.","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"yapjoonsiong"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"yapjoonsiong"},"content":"     * @param day  User input.","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"yapjoonsiong"},"content":"     * @param time User input.","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"yapjoonsiong"},"content":"     * @return true if a class with matching day and time is found.","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"yapjoonsiong"},"content":"    private boolean isSlotFilled(String day, String time) {","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"yapjoonsiong"},"content":"        for (Module m : NoCap.moduleList.getModuleList()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"yapjoonsiong"},"content":"            for (Schedule s : m.getScheduleList().scheduleList) {","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"yapjoonsiong"},"content":"                if (Objects.equals(s.getDay(), day) \u0026\u0026 Objects.equals(s.getStartTime(), time)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"yapjoonsiong"},"content":"                    return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"yapjoonsiong"},"content":"                }","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"yapjoonsiong"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"yapjoonsiong"},"content":"        return false;","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"DmitriYam"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":108,"author":{"gitId":"DmitriYam"},"content":"     * Overrides toString() to show a formatted ScheduleList when printed.","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"DmitriYam"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"DmitriYam"},"content":"     * @return String of formatted ScheduleList","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"DmitriYam"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":112,"author":{"gitId":"DmitriYam"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"DmitriYam"},"content":"    public String toString() {","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"DmitriYam"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"DmitriYam"},"content":"        String schedulePrint \u003d \"\";","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"DmitriYam"},"content":"        for (Schedule s : scheduleList) {","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"DmitriYam"},"content":"            if (s !\u003d null) {","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"DmitriYam"},"content":"                schedulePrint \u003d schedulePrint + String.valueOf(index) + \".\\n\";","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"DmitriYam"},"content":"                schedulePrint \u003d schedulePrint + s.toString() + \"\\n\";","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"DmitriYam"},"content":"                index++;","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"DmitriYam"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"DmitriYam"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"DmitriYam"},"content":"        return schedulePrint;","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"DmitriYam"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"yapjoonsiong":44,"DmitriYam":80,"jiexiong-zeng":1}},{"path":"src/main/java/semester/Semester.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yapjoonsiong"},"content":"package semester;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"import command.NoCap;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"yapjoonsiong"},"content":"import exceptions.NoCapExceptions;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"yapjoonsiong"},"content":"import module.ModuleList;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"import module.Module;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"yapjoonsiong"},"content":"public class Semester {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"yapjoonsiong"},"content":"    protected int credits;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"yapjoonsiong"},"content":"    protected double points;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"yapjoonsiong"},"content":"    protected double cap;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"yapjoonsiong"},"content":"    protected String semester;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"yapjoonsiong"},"content":"    public ModuleList moduleList;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"yapjoonsiong"},"content":"    public Semester(String semester) {","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"yapjoonsiong"},"content":"        this.semester \u003d semester;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"yapjoonsiong"},"content":"        this.credits \u003d 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"yapjoonsiong"},"content":"        this.points \u003d 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"yapjoonsiong"},"content":"        this.cap \u003d 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"yapjoonsiong"},"content":"        this.moduleList \u003d new ModuleList();","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"yapjoonsiong"},"content":"     * For deserialization from JSON file.","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"yapjoonsiong"},"content":"    public Semester() {","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"yapjoonsiong"},"content":"     * Method to update number of credits taken in the Semester.","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"yapjoonsiong"},"content":"     * Iterates through every Module object in ModuleList and adds up each module\u0027s credits.","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"naijie2108"},"content":"    protected void updateCredits() {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"yapjoonsiong"},"content":"        int c \u003d 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"yapjoonsiong"},"content":"        for (Module module : moduleList.getModuleList()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"yapjoonsiong"},"content":"            if (module.getCredits() \u003e 0) {","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"yapjoonsiong"},"content":"                c +\u003d module.getCredits();","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"yapjoonsiong"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"yapjoonsiong"},"content":"        credits \u003d c;","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"yapjoonsiong"},"content":"     * Method to update the weighted points earned in the Semester.","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"yapjoonsiong"},"content":"     * Iterates through every Module Object in ModuleList to return their grade points.","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"yapjoonsiong"},"content":"     * Multiplies grade points with the number of credits to get weighted points earned.","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"naijie2108"},"content":"    protected void updatePoints() {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"yapjoonsiong"},"content":"        double p \u003d 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"yapjoonsiong"},"content":"        for (Module module : moduleList.getModuleList()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"yapjoonsiong"},"content":"            if (module.getCredits() \u003e 0) {","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"yapjoonsiong"},"content":"                p +\u003d module.getCredits() * module.getPoints();","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"yapjoonsiong"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"yapjoonsiong"},"content":"        points \u003d p;","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"yapjoonsiong"},"content":"    public void updateCap() throws NoCapExceptions {","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"yapjoonsiong"},"content":"        updateCredits();","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"yapjoonsiong"},"content":"        updatePoints();","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"yapjoonsiong"},"content":"        if (credits \u003d\u003d 0) {","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"yapjoonsiong"},"content":"            throw new NoCapExceptions(\"Unable to calculate cap as no credit assigned to any existing module\");","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"yapjoonsiong"},"content":"        cap \u003d points / credits;","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"yapjoonsiong"},"content":"    public int getCredits() {","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"yapjoonsiong"},"content":"        return credits;","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"yapjoonsiong"},"content":"    public double getPoints() {","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"yapjoonsiong"},"content":"        return points;","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"yapjoonsiong"},"content":"    public double getCap() {","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"yapjoonsiong"},"content":"        return cap;","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"yapjoonsiong"},"content":"    public ModuleList getModuleList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"yapjoonsiong"},"content":"        return this.moduleList;","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"naijie2108"},"content":"    public String getSemester() {","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"yapjoonsiong"},"content":"        return this.semester;","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"yapjoonsiong"},"content":"    public void printCap() throws NoCapExceptions {","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"yapjoonsiong"},"content":"        updateCap();","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"yapjoonsiong"},"content":"        System.out.println(\"This semester\u0027s CAP: \" + (String)String.format(\"%.2f\", getCap()));","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"naijie2108"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"naijie2108"},"content":"    public String toString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"naijie2108"},"content":"        return \"Credits: \" + this.credits + System.lineSeparator()","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"naijie2108"},"content":"                + \"Points: \" + this.points + System.lineSeparator()","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"naijie2108"},"content":"                + \"CAP: \" + (this.cap) + System.lineSeparator()","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"naijie2108"},"content":"                + \"Semester: \" + this.semester + System.lineSeparator()","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"naijie2108"},"content":"                + \"Modules: \" + this.moduleList + System.lineSeparator();","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"yapjoonsiong"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"yapjoonsiong":89,"naijie2108":12}},{"path":"src/main/java/semester/SemesterList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yapjoonsiong"},"content":"package semester;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"import exceptions.NoCapExceptions;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"yapjoonsiong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":"public class SemesterList {","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"yapjoonsiong"},"content":"    protected int credits;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"yapjoonsiong"},"content":"    protected double points;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"yapjoonsiong"},"content":"    protected double cap;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"yapjoonsiong"},"content":"    protected int accessedSemesterIndex;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"yapjoonsiong"},"content":"    private ArrayList\u003cSemester\u003e semesterList;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"yapjoonsiong"},"content":"    public SemesterList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"yapjoonsiong"},"content":"        this.accessedSemesterIndex \u003d 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"yapjoonsiong"},"content":"        this.credits \u003d 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"yapjoonsiong"},"content":"        this.points \u003d 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"yapjoonsiong"},"content":"        this.cap \u003d 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"yapjoonsiong"},"content":"        this.semesterList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"yapjoonsiong"},"content":"        setUp();","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"naijie2108"},"content":"    //Getters fo Json serialization and deserialization","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"naijie2108"},"content":"    public int getCredits() {","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"naijie2108"},"content":"        return credits;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"naijie2108"},"content":"    public double getPoints() {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"naijie2108"},"content":"        return points;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"naijie2108"},"content":"    public ArrayList\u003cSemester\u003e getSemesterList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"naijie2108"},"content":"        return semesterList;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"yapjoonsiong"},"content":"     * Method to add 10 Semesters to semesterList by default in the constructor.","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"yapjoonsiong"},"content":"    private void setUp() {","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"yapjoonsiong"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"yapjoonsiong"},"content":"            int year \u003d (i / 2) + 1;","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"yapjoonsiong"},"content":"            int sem \u003d (i % 2) + 1;","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"yapjoonsiong"},"content":"            String semesterDescription \u003d \"Y\" + year + \"S\" + sem;","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"yapjoonsiong"},"content":"            add(semesterDescription);","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"yapjoonsiong"},"content":"    private void add(Semester semester) {","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"yapjoonsiong"},"content":"        this.semesterList.add(semester);","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"yapjoonsiong"},"content":"     * Method to add a Semester to semesterList.","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"yapjoonsiong"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"yapjoonsiong"},"content":"     * @param semesterDescription User input description of the semester.","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"yapjoonsiong"},"content":"    public void add(String semesterDescription) {","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"yapjoonsiong"},"content":"        Semester semester \u003d new Semester(semesterDescription);","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"yapjoonsiong"},"content":"        this.semesterList.add(semester);","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"yapjoonsiong"},"content":"     * Method to print existing semesters in the semesterList.","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"yapjoonsiong"},"content":"    public void printSemesters() {","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"yapjoonsiong"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"yapjoonsiong"},"content":"        for (Semester semester : semesterList) {","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"naijie2108"},"content":"            System.out.println(i + \" : \" + semester.getSemester());","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"yapjoonsiong"},"content":"            i++;","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"yapjoonsiong"},"content":"     * Method to return the Semester with the corresponding accessedSemesterIndex.","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"yapjoonsiong"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"yapjoonsiong"},"content":"     * @return Semester object.","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"naijie2108"},"content":"    public Semester extractAccessedSemester() {","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"yapjoonsiong"},"content":"        return this.semesterList.get(getAccessedSemesterIndex());","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"yapjoonsiong"},"content":"    private void updateCredits() {","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"yapjoonsiong"},"content":"        int c \u003d 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"yapjoonsiong"},"content":"        for (Semester semester : semesterList) {","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"naijie2108"},"content":"            semester.updateCredits();","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"yapjoonsiong"},"content":"            c +\u003d semester.getCredits();","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"yapjoonsiong"},"content":"        credits \u003d c;","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"yapjoonsiong"},"content":"    private void updatePoints() {","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"yapjoonsiong"},"content":"        double p \u003d 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"yapjoonsiong"},"content":"        for (Semester semester : semesterList) {","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"naijie2108"},"content":"            semester.updatePoints();","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"yapjoonsiong"},"content":"            p +\u003d semester.getPoints();","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"yapjoonsiong"},"content":"        points \u003d p;","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"yapjoonsiong"},"content":"     * Method to update the aggregate CAP of all Semesters in semesterList.","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"yapjoonsiong"},"content":"    public void updateCap() throws NoCapExceptions {","lastModifiedDate":"2021-11-02"},{"lineNumber":104,"author":{"gitId":"yapjoonsiong"},"content":"        updateCredits();","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"yapjoonsiong"},"content":"        updatePoints();","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"yapjoonsiong"},"content":"        if (credits \u003d\u003d 0) {","lastModifiedDate":"2021-11-02"},{"lineNumber":107,"author":{"gitId":"yapjoonsiong"},"content":"            throw new NoCapExceptions(\"Unable to calculate cap as no credit assigned to any existing module\");","lastModifiedDate":"2021-11-02"},{"lineNumber":108,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":109,"author":{"gitId":"yapjoonsiong"},"content":"        cap \u003d points / credits;","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"yapjoonsiong"},"content":"     * Method to set accessedSemesterIndex.","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"yapjoonsiong"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"yapjoonsiong"},"content":"     * @param i User input index.","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"yapjoonsiong"},"content":"    public void setAccessedSemesterIndex(int i) {","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"yapjoonsiong"},"content":"        if (i \u003c 0 || i \u003e 9) {","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"yapjoonsiong"},"content":"            throw new ArrayIndexOutOfBoundsException(\"Please key in a number from 1-10\");","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"naijie2108"},"content":"        this.accessedSemesterIndex \u003d i;","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"yapjoonsiong"},"content":"    public double getCap() {","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"yapjoonsiong"},"content":"        return cap;","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"yapjoonsiong"},"content":"    public int getAccessedSemesterIndex() {","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"yapjoonsiong"},"content":"        return accessedSemesterIndex;","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"yapjoonsiong"},"content":"     * Method to get the Semester with the corresponding index in semesterList.","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"yapjoonsiong"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"yapjoonsiong"},"content":"     * @param index User input.","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"yapjoonsiong"},"content":"     * @return Semester object.","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"yapjoonsiong"},"content":"    public Semester get(int index) {","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"yapjoonsiong"},"content":"        if (index \u003c 0 || index \u003e 9) {","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"yapjoonsiong"},"content":"            throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"yapjoonsiong"},"content":"        return this.semesterList.get(index);","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"yapjoonsiong"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"yapjoonsiong"},"content":"     * Method to print aggregated CAP and CAP of each Semester.","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"yapjoonsiong"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"yapjoonsiong"},"content":"    public void printAllCap() throws NoCapExceptions {","lastModifiedDate":"2021-11-02"},{"lineNumber":149,"author":{"gitId":"yapjoonsiong"},"content":"        updateCap();","lastModifiedDate":"2021-11-02"},{"lineNumber":150,"author":{"gitId":"yapjoonsiong"},"content":"        System.out.println(\"Cumulative CAP: \" + (String)String.format(\"%.2f\", getCap()));","lastModifiedDate":"2021-11-02"},{"lineNumber":151,"author":{"gitId":"yapjoonsiong"},"content":"        for (Semester semester : semesterList) {","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"yapjoonsiong"},"content":"            if (semester.getCredits() \u003e 0) {","lastModifiedDate":"2021-11-02"},{"lineNumber":153,"author":{"gitId":"yapjoonsiong"},"content":"                System.out.println(semester.getSemester() + \": \" + (String)String.format(\"%.2f\", semester.getCap()));","lastModifiedDate":"2021-11-02"},{"lineNumber":154,"author":{"gitId":"yapjoonsiong"},"content":"            } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":155,"author":{"gitId":"yapjoonsiong"},"content":"                System.out.println(semester.getSemester() + \": 0.00\");","lastModifiedDate":"2021-11-02"},{"lineNumber":156,"author":{"gitId":"yapjoonsiong"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":157,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"naijie2108"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"naijie2108"},"content":"    public String toString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"naijie2108"},"content":"        StringBuilder string \u003d new StringBuilder();","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"naijie2108"},"content":"        string.append(\"Cumulative Credits: \").append(this.credits).append(System.lineSeparator())","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"naijie2108"},"content":"                .append(\"Points: \").append(this.points).append(System.lineSeparator())","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"naijie2108"},"content":"                .append(\"CAP: \").append(this.cap).append(System.lineSeparator())","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"naijie2108"},"content":"                .append(\"Semesters: \").append(System.lineSeparator());","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"naijie2108"},"content":"        int semesterCount \u003d 1;","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"naijie2108"},"content":"        for (Semester semester : semesterList) {","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"naijie2108"},"content":"            string.append(semesterCount).append(\". \").append(System.lineSeparator())","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"naijie2108"},"content":"                    .append(semester).append(System.lineSeparator());","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"naijie2108"},"content":"        return string.toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"yapjoonsiong"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"yapjoonsiong":141,"naijie2108":33}},{"path":"src/main/java/task/GradableTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DmitriYam"},"content":"package task;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"DmitriYam"},"content":"import exceptions.NoCapExceptions;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"DmitriYam"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"DmitriYam"},"content":"public class GradableTask extends Task {","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"DmitriYam"},"content":"    protected int weightage;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"DmitriYam"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"DmitriYam"},"content":"     * Constructor for GradableTask, which inherits from Task.","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"DmitriYam"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"DmitriYam"},"content":"     * @param description Description of GradableTask","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"DmitriYam"},"content":"     * @param date        Deadline of GradableTask","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"DmitriYam"},"content":"     * @param weightage   Weightage of GradableTask","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"DmitriYam"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"DmitriYam"},"content":"    public GradableTask(String description, String date, int weightage) {","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"DmitriYam"},"content":"        super(description, date);","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"DmitriYam"},"content":"        this.weightage \u003d weightage;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"naijie2108"},"content":"     * For deserialization from JSON file.","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"naijie2108"},"content":"    public GradableTask() {","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"DmitriYam"},"content":"    public int getWeightage() {","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"DmitriYam"},"content":"        return this.weightage;","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"DmitriYam"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"DmitriYam"},"content":"        return isDone;","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"DmitriYam"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"DmitriYam"},"content":"     * Reformats GradableTask for easier viewing.","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"DmitriYam"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"DmitriYam"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"DmitriYam"},"content":"    public String toString() {","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"naijie2108"},"content":"        return getDescription() + \" by: \" + createFormattedDeadline() + \" Weightage \"","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"naijie2108"},"content":"                + this.weightage + \"% \" + createStatusIcon();","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"DmitriYam"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"naijie2108":8,"DmitriYam":36}},{"path":"src/main/java/task/GradableTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DmitriYam"},"content":"package task;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"DmitriYam"},"content":"import command.NoCap;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"DmitriYam"},"content":"import command.VisualiseGradable;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"DmitriYam"},"content":"import command.parser.DateParser;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"jiexiong-zeng"},"content":"import command.parser.Parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"DmitriYam"},"content":"import command.Ui;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"DmitriYam"},"content":"import exceptions.NoCapExceptions;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"DmitriYam"},"content":"import command.Ui;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"jiexiong-zeng"},"content":"import command.parser.ParserChecks;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"DmitriYam"},"content":"import java.net.StandardSocketOptions;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"DmitriYam"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"DmitriYam"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"DmitriYam"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"DmitriYam"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"DmitriYam"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"DmitriYam"},"content":"public class GradableTaskList extends TaskList {","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"DmitriYam"},"content":"    public static final int MAXWEIGHTAGE \u003d 100;","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"DmitriYam"},"content":"    public static final int MINWEIGHTAGE \u003d 5;","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"DmitriYam"},"content":"    protected ArrayList\u003cGradableTask\u003e gradableTaskList;","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"jiexiong-zeng"},"content":"    private static final Logger logger \u003d command.Logger.myLogger();","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"DmitriYam"},"content":"    public GradableTaskList() {","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"DmitriYam"},"content":"        this.gradableTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"DmitriYam"},"content":"    public ArrayList\u003cGradableTask\u003e getGradableTaskList() {","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"DmitriYam"},"content":"        return gradableTaskList;","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"yzhedwin"},"content":"    protected static String getDate(String description) {","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"DmitriYam"},"content":"        try {","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"jiexiong-zeng"},"content":"            int datePos \u003d description.indexOf(ParserChecks.START_OF_DATE);","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"jiexiong-zeng"},"content":"            int weightagePos \u003d description.indexOf(ParserChecks.START_OF_WEIGHTAGE);","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"jiexiong-zeng"},"content":"            return description.substring(datePos, weightagePos).replace(ParserChecks.START_OF_DATE, \"\").trim();","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"DmitriYam"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"DmitriYam"},"content":"            return \"\";","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"DmitriYam"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"DmitriYam"},"content":"    private static int getWeightage(String description) {","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"DmitriYam"},"content":"        try {","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"jiexiong-zeng"},"content":"            int weightagePos \u003d description.indexOf(ParserChecks.START_OF_WEIGHTAGE);","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"DmitriYam"},"content":"            int weightage \u003d Integer.parseInt(description.substring(weightagePos)","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"jiexiong-zeng"},"content":"                    .replace(ParserChecks.START_OF_WEIGHTAGE, \"\").trim());","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"DmitriYam"},"content":"            if (weightage \u003c MINWEIGHTAGE || weightage \u003e MAXWEIGHTAGE) {","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"DmitriYam"},"content":"                throw new NoCapExceptions(\"wrong weightage\");","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"DmitriYam"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"DmitriYam"},"content":"            return weightage;","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"DmitriYam"},"content":"        } catch (NumberFormatException | NoCapExceptions e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"DmitriYam"},"content":"            Ui.wrongWeightage();","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"DmitriYam"},"content":"            return 0;","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"DmitriYam"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"DmitriYam"},"content":"    private boolean checkTotalWeightage(int w) {","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"DmitriYam"},"content":"        int total \u003d 0;","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"DmitriYam"},"content":"        for (GradableTask g : gradableTaskList) {","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"DmitriYam"},"content":"            total +\u003d g.getWeightage();","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"DmitriYam"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"DmitriYam"},"content":"        total +\u003d w;","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"DmitriYam"},"content":"        return total \u003c\u003d MAXWEIGHTAGE;","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"DmitriYam"},"content":"    private boolean inputChecks(int weightage, String date) {","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"DmitriYam"},"content":"        if (weightage \u003d\u003d 0) {","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"DmitriYam"},"content":"            return false;","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"DmitriYam"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"DmitriYam"},"content":"        if (!checkTotalWeightage(weightage)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"DmitriYam"},"content":"            Ui.wrongWeightageSplits();","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"DmitriYam"},"content":"            return false;","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"DmitriYam"},"content":"        } else if (date.isBlank()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"DmitriYam"},"content":"            Ui.missingDate();","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"DmitriYam"},"content":"            return false;","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"DmitriYam"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"DmitriYam"},"content":"        return true;","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"DmitriYam"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"DmitriYam"},"content":"     * Method to add a gradableTask to GradableTaskList.","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"DmitriYam"},"content":"     * Input format is checked before calling the constructor for GradableTask.","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"DmitriYam"},"content":"     * Total weightage for all GradableTasks in GradableTaskList is checked. If total weightage is more than 100","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"DmitriYam"},"content":"     * an error message is shown.","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"DmitriYam"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"DmitriYam"},"content":"     * @param module    Name of module GradableTask is apart of","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"DmitriYam"},"content":"     * @param userInput Input of GradableTask data from User.","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"DmitriYam"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"DmitriYam"},"content":"    public void addGradableTask(String module, String userInput) {","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"DmitriYam"},"content":"        logger.log(Level.INFO, \"Successfully added task\");","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"DmitriYam"},"content":"        String date \u003d getDate(userInput);","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"DmitriYam"},"content":"        int weightage \u003d getWeightage(userInput);","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"DmitriYam"},"content":"        if (inputChecks(weightage, date)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"DmitriYam"},"content":"            try {","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"DmitriYam"},"content":"                String description \u003d removeDate(userInput);","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"DmitriYam"},"content":"                DateParser.parseDate(date);","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"DmitriYam"},"content":"                GradableTask newGradableTask \u003d new GradableTask(description, date, weightage);","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"DmitriYam"},"content":"                this.gradableTaskList.add(taskCount, newGradableTask);","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"DmitriYam"},"content":"                this.taskCount \u003d gradableTaskList.size();","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"DmitriYam"},"content":"                Ui.addTaskMessage(newGradableTask, module);","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"DmitriYam"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"DmitriYam"},"content":"                Ui.wrongDateTimeFormat();","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"DmitriYam"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"DmitriYam"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"DmitriYam"},"content":"    public GradableTask getGradableTask(int index) {","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"DmitriYam"},"content":"        logger.log(Level.INFO, \"Get GradableTask\");","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"DmitriYam"},"content":"        return this.gradableTaskList.get(index);","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"DmitriYam"},"content":"    public int size() {","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"DmitriYam"},"content":"        logger.log(Level.INFO, \"Get size of task list\");","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"DmitriYam"},"content":"        return this.gradableTaskList.size();","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"DmitriYam"},"content":"    public GradableTask getGradableTaskFromIndex(String input) {","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"DmitriYam"},"content":"        int index;","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"DmitriYam"},"content":"        GradableTask g \u003d null;","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"DmitriYam"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"DmitriYam"},"content":"            index \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"DmitriYam"},"content":"            if (isValidIndex(index)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"DmitriYam"},"content":"                g \u003d gradableTaskList.get(index);","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"DmitriYam"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"DmitriYam"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"DmitriYam"},"content":"            Ui.printInvalidIndex();","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"DmitriYam"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"DmitriYam"},"content":"        return g;","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"DmitriYam"},"content":"    boolean isValidIndex(int index) {","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"DmitriYam"},"content":"        if (index \u003c 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"DmitriYam"},"content":"            Ui.printInvalidIndex();","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"DmitriYam"},"content":"            return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"DmitriYam"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"DmitriYam"},"content":"        return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"DmitriYam"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":145,"author":{"gitId":"DmitriYam"},"content":"     * Overrides toString() to show a formatted GradableTaskList when printed.","lastModifiedDate":"2021-10-28"},{"lineNumber":146,"author":{"gitId":"DmitriYam"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":147,"author":{"gitId":"DmitriYam"},"content":"     * @return String of formatted GradableTaskList","lastModifiedDate":"2021-10-28"},{"lineNumber":148,"author":{"gitId":"DmitriYam"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":149,"author":{"gitId":"DmitriYam"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":150,"author":{"gitId":"DmitriYam"},"content":"    public String toString() {","lastModifiedDate":"2021-10-17"},{"lineNumber":151,"author":{"gitId":"DmitriYam"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-10-17"},{"lineNumber":152,"author":{"gitId":"DmitriYam"},"content":"        String gradableTaskPrint \u003d \"\";","lastModifiedDate":"2021-10-17"},{"lineNumber":153,"author":{"gitId":"DmitriYam"},"content":"        for (GradableTask g : gradableTaskList) {","lastModifiedDate":"2021-10-17"},{"lineNumber":154,"author":{"gitId":"DmitriYam"},"content":"            if (g !\u003d null) {","lastModifiedDate":"2021-10-17"},{"lineNumber":155,"author":{"gitId":"DmitriYam"},"content":"                gradableTaskPrint \u003d gradableTaskPrint + String.valueOf(index) + \" \";","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"DmitriYam"},"content":"                gradableTaskPrint \u003d gradableTaskPrint + g.toString() + \"\\r\\n\";","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"DmitriYam"},"content":"                index++;","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"DmitriYam"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":159,"author":{"gitId":"DmitriYam"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":160,"author":{"gitId":"DmitriYam"},"content":"        return gradableTaskPrint;","lastModifiedDate":"2021-10-17"},{"lineNumber":161,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":162,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":163,"author":{"gitId":"DmitriYam"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"DmitriYam":154,"yzhedwin":1,"jiexiong-zeng":8}},{"path":"src/main/java/task/OverallTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package task;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":" * Task class used for listing out all available tasks in a semester.","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":" * Inherits from task class but adds a moduleName, weightage and gradable attribute.","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"public class OverallTask extends Task {","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"    //Constants for comparators","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"    private static final int RIGHT_HEAVY \u003d -1;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"    private static final int LEFT_HEAVY \u003d 1;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"    private static final int EQUAL \u003d 0;","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"naijie2108"},"content":"    private final String moduleName;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"    private final boolean isGradable;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"naijie2108"},"content":"    private int weightage;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"naijie2108"},"content":"     * Constructor for overall task which takes in a Task object.","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"naijie2108"},"content":"     * @param task Task object used to construct the OverallTask object","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"naijie2108"},"content":"     * @param moduleName Name of the module of the task","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"naijie2108"},"content":"    public OverallTask(Task task, String moduleName) {","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"naijie2108"},"content":"        super(task.description, task.date);","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"naijie2108"},"content":"        this.isDone \u003d task.isDone;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"naijie2108"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"naijie2108"},"content":"        this.isGradable \u003d false;","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"naijie2108"},"content":"        this.isLate \u003d task.isLate;","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"naijie2108"},"content":"     * Constructor for overall task which takes in a GradableTask object.","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"naijie2108"},"content":"     * @param task GradableTask object used to construct the OverallTask object","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"naijie2108"},"content":"     * @param moduleName Name of the module of the task","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"naijie2108"},"content":"    public OverallTask(GradableTask task, String moduleName) {","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"naijie2108"},"content":"        super(task.description, task.date);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"naijie2108"},"content":"        this.isDone \u003d task.isDone;","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"naijie2108"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"naijie2108"},"content":"        this.isGradable \u003d true;","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"naijie2108"},"content":"        this.weightage \u003d task.weightage;","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"naijie2108"},"content":"        this.isLate \u003d task.isLate;","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"naijie2108"},"content":"    public boolean isGradable() {","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"naijie2108"},"content":"        return isGradable;","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"naijie2108"},"content":"     * Comparator used to compare deadlines between OverallTask objects.","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"naijie2108"},"content":"     * An overall task that has an earlier deadline is considered less than an overall task with a","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"naijie2108"},"content":"     * later deadline, and vice versa. If both tasks have the same deadline, they are","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"naijie2108"},"content":"     * considered equal.","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"naijie2108"},"content":"    public static Comparator\u003cOverallTask\u003e dateComparator \u003d Comparator.comparing(t -\u003e t.deadline);","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"naijie2108"},"content":"     * Comparator used to compare \"done\" status between OverallTask objects.","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"naijie2108"},"content":"     * If task1 is done while task2 is not, task1 is greater than task2 and vice versa.","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"naijie2108"},"content":"     * If both task1 and task2 have the same status, they are considered equal.","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"naijie2108"},"content":"    public static Comparator\u003cOverallTask\u003e statusComparator \u003d (task1, task2) -\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"naijie2108"},"content":"        if (task1.isDone \u0026\u0026 !task2.isDone) {","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"naijie2108"},"content":"            return LEFT_HEAVY;","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"naijie2108"},"content":"        } else if (!task1.isDone \u0026\u0026 task2.isDone) {","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"naijie2108"},"content":"            return RIGHT_HEAVY;","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"naijie2108"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"naijie2108"},"content":"            return EQUAL;","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"naijie2108"},"content":"    };","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"naijie2108"},"content":"    private String getGradableString() {","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"naijie2108"},"content":"        return isGradable ? \"[G]\" : \"[ ]\";","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"naijie2108"},"content":"    private String getWeightageString() {","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"naijie2108"},"content":"        return isGradable ? \"[Weightage: \" + this.weightage + \"%]\" : \"\";","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"naijie2108"},"content":"    private String getModuleNameString() {","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"naijie2108"},"content":"        return \"[\" + moduleName + \"]\";","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"naijie2108"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"naijie2108"},"content":"    public String toString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"naijie2108"},"content":"        return getModuleNameString() + getGradableString() + super.toString() + \" \" + getWeightageString();","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"naijie2108"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"naijie2108":95}},{"path":"src/main/java/task/OverallTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package task;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"import command.Ui;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"import module.Module;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"import module.ModuleList;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"naijie2108"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"naijie2108"},"content":" * Represents a list of OverallTask objects. Used for listing all tasks in a semester.","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"naijie2108"},"content":"public class OverallTaskList extends TaskList {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"jiexiong-zeng"},"content":"    private static final Logger logger \u003d command.Logger.myLogger();","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"naijie2108"},"content":"    protected ArrayList\u003cOverallTask\u003e overallTaskList;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"naijie2108"},"content":"     * Constructor which takes in a ModuleList object.","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"naijie2108"},"content":"     * Adds in all tasks in the ModuleList object into OverallTaskList.","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"naijie2108"},"content":"     * @param moduleList The ModuleList object containing the tasks to be added.","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"naijie2108"},"content":"    public OverallTaskList(ModuleList moduleList) {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"naijie2108"},"content":"        this.overallTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"naijie2108"},"content":"        addAllModuleListTasks(moduleList);","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"naijie2108"},"content":"    private void addAllModuleListTasks(ModuleList moduleList) {","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"naijie2108"},"content":"        for (Module module : moduleList.getModuleList()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"naijie2108"},"content":"            String moduleName \u003d module.getModuleName();","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"naijie2108"},"content":"            addAllNormalTasks(module, moduleName);","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"naijie2108"},"content":"            addAllGradableTasks(module, moduleName);","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"naijie2108"},"content":"        logger.log(Level.INFO, \"Add all tasks from module list to overall task list\");","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"naijie2108"},"content":"    private void addAllGradableTasks(Module module, String moduleName) {","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"naijie2108"},"content":"        for (GradableTask gradableTask : module.getGradableTaskList().gradableTaskList) {","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"naijie2108"},"content":"            gradableTask.updateOverdue();","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"naijie2108"},"content":"            overallTaskList.add(new OverallTask(gradableTask, moduleName));","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"naijie2108"},"content":"    private void addAllNormalTasks(Module module, String moduleName) {","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"naijie2108"},"content":"        for (Task task : module.getTaskList().taskList) {","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"naijie2108"},"content":"            task.updateOverdue();","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"naijie2108"},"content":"            overallTaskList.add(new OverallTask(task, moduleName));","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"naijie2108"},"content":"     * Sorts all tasks by deadline in the task list and prints it out to output.","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"naijie2108"},"content":"     * The method lists tasks in ascending order of deadlines.","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"naijie2108"},"content":"    public void sortByDateAndPrint() {","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"naijie2108"},"content":"        List\u003cOverallTask\u003e newTaskList \u003d overallTaskList","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"naijie2108"},"content":"                .stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"naijie2108"},"content":"                .sorted(OverallTask.dateComparator)","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"naijie2108"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"naijie2108"},"content":"        Ui.printOverallListOrderedByDate(newTaskList);","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"naijie2108"},"content":"        logger.log(Level.INFO, \"Sort overall task by date\");","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"naijie2108"},"content":"     * Sorts all tasks in task list by status and prints it out to the output.","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"naijie2108"},"content":"     * The method lists unfinished tasks first, then followed by tasks that have been done.","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"naijie2108"},"content":"    public void sortByStatusAndPrint() {","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"naijie2108"},"content":"        List\u003cOverallTask\u003e newTaskList \u003d overallTaskList","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"naijie2108"},"content":"                .stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"naijie2108"},"content":"                .sorted(OverallTask.statusComparator)","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"naijie2108"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"naijie2108"},"content":"        Ui.printOverallListOrderedByStatus(newTaskList);","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"naijie2108"},"content":"        logger.log(Level.INFO, \"Sort overall task by status\");","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"naijie2108"},"content":"     * Prints all tasks due within the next week.Uses isWeekly() method","lastModifiedDate":"2021-11-06"},{"lineNumber":84,"author":{"gitId":"naijie2108"},"content":"     * inherited from TaskList.","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"naijie2108"},"content":"    public void printWeeklyTasks() {","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"naijie2108"},"content":"        List\u003cOverallTask\u003e newTaskList \u003d overallTaskList","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"naijie2108"},"content":"                .stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"yzhedwin"},"content":"                .filter(this::isWeekly)","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"naijie2108"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"naijie2108"},"content":"        Ui.printOverallWeeklyTasks(newTaskList);","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"naijie2108"},"content":"        logger.log(Level.INFO, \"print overall weekly tasks\");","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"naijie2108"},"content":"     * Prints all tasks due within the month. Uses isMonthly() method","lastModifiedDate":"2021-11-06"},{"lineNumber":97,"author":{"gitId":"naijie2108"},"content":"     * inherited from TaskList.","lastModifiedDate":"2021-11-06"},{"lineNumber":98,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"naijie2108"},"content":"    public void printMonthlyTasks() {","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"naijie2108"},"content":"        List\u003cOverallTask\u003e newTaskList \u003d overallTaskList","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"naijie2108"},"content":"                .stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"yzhedwin"},"content":"                .filter(this::isMonthly)","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"naijie2108"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"naijie2108"},"content":"        Ui.printOverallMonthlyTasks(newTaskList);","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"naijie2108"},"content":"        logger.log(Level.INFO, \"print overall monthly tasks\");","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"naijie2108"},"content":"     * Prints all tasks due within a year. Uses isYearly() method","lastModifiedDate":"2021-11-06"},{"lineNumber":110,"author":{"gitId":"naijie2108"},"content":"     * inherited from TaskList.","lastModifiedDate":"2021-11-06"},{"lineNumber":111,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"naijie2108"},"content":"    public void printYearlyTasks() {","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"naijie2108"},"content":"        List\u003cOverallTask\u003e newTaskList \u003d overallTaskList","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"naijie2108"},"content":"                .stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"yzhedwin"},"content":"                .filter(this::isYearly)","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"naijie2108"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"naijie2108"},"content":"        Ui.printOverallYearlyTasks(newTaskList);","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"naijie2108"},"content":"        logger.log(Level.INFO, \"print overall yearly tasks\");","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"naijie2108"},"content":"     * Prints all gradable tasks in the task list.","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"naijie2108"},"content":"    public void printGradableTasks() {","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"naijie2108"},"content":"        List\u003cOverallTask\u003e newTaskList \u003d overallTaskList","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"naijie2108"},"content":"                .stream()","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"naijie2108"},"content":"                .filter(OverallTask::isGradable)","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"naijie2108"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"naijie2108"},"content":"        Ui.printGradableTasks(newTaskList);","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"naijie2108"},"content":"        logger.log(Level.INFO, \"print gradable tasks\");","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":134,"author":{"gitId":"naijie2108"},"content":"     * Prints all non-gradable tasks in the task list.","lastModifiedDate":"2021-11-01"},{"lineNumber":135,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":136,"author":{"gitId":"naijie2108"},"content":"    public void printNormalTasks() {","lastModifiedDate":"2021-11-01"},{"lineNumber":137,"author":{"gitId":"naijie2108"},"content":"        List\u003cOverallTask\u003e newTaskList \u003d overallTaskList","lastModifiedDate":"2021-11-01"},{"lineNumber":138,"author":{"gitId":"naijie2108"},"content":"                .stream()","lastModifiedDate":"2021-11-01"},{"lineNumber":139,"author":{"gitId":"naijie2108"},"content":"                .filter(t -\u003e (","lastModifiedDate":"2021-11-01"},{"lineNumber":140,"author":{"gitId":"naijie2108"},"content":"                        !t.isGradable()","lastModifiedDate":"2021-11-01"},{"lineNumber":141,"author":{"gitId":"naijie2108"},"content":"                ))","lastModifiedDate":"2021-11-01"},{"lineNumber":142,"author":{"gitId":"naijie2108"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-11-01"},{"lineNumber":143,"author":{"gitId":"naijie2108"},"content":"        Ui.printNormalTasks(newTaskList);","lastModifiedDate":"2021-11-01"},{"lineNumber":144,"author":{"gitId":"naijie2108"},"content":"        logger.log(Level.INFO, \"print normal tasks\");","lastModifiedDate":"2021-11-01"},{"lineNumber":145,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":146,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":147,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"naijie2108"},"content":"     * Prints all the tasks in the task list without any sorting.","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"naijie2108"},"content":"    public void printAllTasks() {","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"naijie2108"},"content":"        Ui.printAllOverallTasks(overallTaskList);","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"naijie2108"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"naijie2108"},"content":"    public String toString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"naijie2108"},"content":"        StringBuilder out \u003d new StringBuilder();","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"naijie2108"},"content":"        for (OverallTask task : overallTaskList) {","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"naijie2108"},"content":"            out.append(task.toString()).append(System.lineSeparator());","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"naijie2108"},"content":"        return out.toString();","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"naijie2108"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"naijie2108":160,"yzhedwin":3,"jiexiong-zeng":1}},{"path":"src/main/java/task/Priority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yzhedwin"},"content":"package task;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"yzhedwin"},"content":"public enum Priority {","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"yzhedwin"},"content":"    EQUAL,","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"yzhedwin"},"content":"    LOW,","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"yzhedwin"},"content":"    HIGH","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"yzhedwin"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"yzhedwin":7}},{"path":"src/main/java/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yzhedwin"},"content":"package task;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"jiexiong-zeng"},"content":"import command.parser.DateParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"jiexiong-zeng"},"content":"import command.Ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"yzhedwin"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"yzhedwin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"yzhedwin"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"yzhedwin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"yzhedwin"},"content":"public class Task {","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"jiexiong-zeng"},"content":"    private static final Logger logger \u003d command.Logger.myLogger();","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"yzhedwin"},"content":"    private static final String LATE_SYMBOL \u003d \"[LATE]\";","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"yzhedwin"},"content":"    private static final String DONE_SYMBOL \u003d \"[X]\";","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"yzhedwin"},"content":"    private static final String EMPTY_SYMBOL \u003d \"[ ]\";","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"yzhedwin"},"content":"    private static final String EMPTY_SPACE \u003d \" \";","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"yzhedwin"},"content":"    protected String description;","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"yzhedwin"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"yzhedwin"},"content":"    protected boolean isLate;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"yzhedwin"},"content":"    protected String date;","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"yzhedwin"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"yzhedwin"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"jiexiong-zeng"},"content":"     * temp message.","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"jiexiong-zeng"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"yzhedwin"},"content":"     * @param description The description of the task given by the user","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"yzhedwin"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"yzhedwin"},"content":"    public Task(String description, String date) {","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"yzhedwin"},"content":"        setDescription(description);","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"yzhedwin"},"content":"        setDate(date);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"yzhedwin"},"content":"        setDone(false);","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"yzhedwin"},"content":"        setLate(false);","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"yzhedwin"},"content":"        parseDeadline(date);","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"naijie2108"},"content":"     * For deserialization from JSON file.","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"naijie2108"},"content":"    public Task() {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"naijie2108"},"content":"    //Getters","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"yzhedwin"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"yzhedwin"},"content":"        return this.description;","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"yzhedwin"},"content":"    public String getDate() {","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"naijie2108"},"content":"        return this.date;","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"naijie2108"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"naijie2108"},"content":"        return isDone;","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"naijie2108"},"content":"     * Needed for serialization of data.","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"yzhedwin"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"naijie2108"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"naijie2108"},"content":"        return deadline;","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"yzhedwin"},"content":"    private void setDeadline(LocalDateTime deadline) {","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"yzhedwin"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"naijie2108"},"content":"    //Setters","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"naijie2108"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"naijie2108"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"naijie2108"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"naijie2108"},"content":"        isDone \u003d done;","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"yzhedwin"},"content":"    public void setDate(String date) {","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"naijie2108"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"yzhedwin"},"content":"    public void parseDeadline(String date) throws DateTimeException {","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"yzhedwin"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"yzhedwin"},"content":"            logger.log(Level.INFO, \"Successfully set Task deadline...\");","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"yzhedwin"},"content":"            setDeadline(DateParser.parseDate(date));","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"yzhedwin"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"yzhedwin"},"content":"            Ui.missingDate();","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"yzhedwin"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"yzhedwin"},"content":"    public String createFormattedDeadline() throws NullPointerException {","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"yzhedwin"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"jiexiong-zeng"},"content":"            return DateParser.dateStringOutput(this.deadline);","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"yzhedwin"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"yzhedwin"},"content":"            Ui.invalidDate();","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"yzhedwin"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"yzhedwin"},"content":"        return \"\";","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"yzhedwin"},"content":"    public void markDone() {","lastModifiedDate":"2021-10-04"},{"lineNumber":101,"author":{"gitId":"yzhedwin"},"content":"        logger.log(Level.INFO, \"Successfully marked Task as done...\");","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"yzhedwin"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-10-04"},{"lineNumber":103,"author":{"gitId":"jiexiong-zeng"},"content":"        Ui.printMarkDoneMessage(this);","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"jiexiong-zeng"},"content":"    public void markNotDone() {","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"jiexiong-zeng"},"content":"        logger.log(Level.INFO, \"Successfully marked Task as not done...\");","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"jiexiong-zeng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"jiexiong-zeng"},"content":"        Ui.printMarkNotDoneMessage(this);","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"yzhedwin"},"content":"    public void setLate(boolean isLate) {","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"yzhedwin"},"content":"        this.isLate \u003d isLate;","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"yzhedwin"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":117,"author":{"gitId":"yzhedwin"},"content":"     * Checks if the task is overdue by checking the deadline of the task","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"yzhedwin"},"content":"     * against the system clock. If it is overdue, update the task attribute.","lastModifiedDate":"2021-11-05"},{"lineNumber":119,"author":{"gitId":"yzhedwin"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"yzhedwin"},"content":"    public void updateOverdue() throws NullPointerException {","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"yzhedwin"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"yzhedwin"},"content":"            LocalDateTime currentDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"yzhedwin"},"content":"            if (!(this.isDone) \u0026\u0026 currentDateTime.isAfter(this.deadline)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"yzhedwin"},"content":"                this.isLate \u003d true;","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"yzhedwin"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"yzhedwin"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"yzhedwin"},"content":"            Ui.printInvalidIndex();","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"yzhedwin"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"yzhedwin"},"content":"    private String createLateIcon() {","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"yzhedwin"},"content":"        return this.isLate ? LATE_SYMBOL : \"\";","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":134,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"naijie2108"},"content":"    public String createStatusIcon() {","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"yzhedwin"},"content":"        return this.isDone ? DONE_SYMBOL : EMPTY_SYMBOL;","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"yzhedwin"},"content":"    public String toString() {","lastModifiedDate":"2021-10-04"},{"lineNumber":140,"author":{"gitId":"yzhedwin"},"content":"        return createLateIcon() + createStatusIcon() + EMPTY_SPACE + getDescription()","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"yzhedwin"},"content":"                + \" by: \" + createFormattedDeadline();","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":143,"author":{"gitId":"yzhedwin"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"naijie2108":34,"yzhedwin":94,"jiexiong-zeng":15}},{"path":"src/main/java/task/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yzhedwin"},"content":"package task;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"yzhedwin"},"content":"import command.Ui;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"yzhedwin"},"content":"import command.parser.DateParser;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"jiexiong-zeng"},"content":"import command.parser.ParserChecks;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"yzhedwin"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"yzhedwin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"yzhedwin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"yzhedwin"},"content":"import java.time.Period;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"yzhedwin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"yzhedwin"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"yzhedwin"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"yzhedwin"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"yzhedwin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"jiexiong-zeng"},"content":"public class TaskList {","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"yzhedwin"},"content":"    protected static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"yzhedwin"},"content":"    protected static final int DAYS_IN_A_WEEK \u003d 7;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"yzhedwin"},"content":"    protected static final int DAYS_IN_A_MONTH \u003d 31;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"yzhedwin"},"content":"    protected static final int DAYS_IN_A_YEAR \u003d 366;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"jiexiong-zeng"},"content":"    private static final Logger logger \u003d command.Logger.myLogger();","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"yzhedwin"},"content":"    protected ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"yzhedwin"},"content":"    protected int taskCount;","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"yzhedwin"},"content":"    public TaskList() {","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"yzhedwin"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"naijie2108"},"content":"    //Getters","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"yzhedwin"},"content":"    public int getTaskCount() {","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"yzhedwin"},"content":"        logger.log(Level.INFO, \"Get task count\");","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"yzhedwin"},"content":"        return taskCount;","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"naijie2108"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"yzhedwin"},"content":"        logger.log(Level.INFO, \"Get task list\");","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"naijie2108"},"content":"        return taskList;","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"yapjoonsiong"},"content":"    public int size() {","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"yzhedwin"},"content":"        logger.log(Level.INFO, \"Get size of task list\");","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"yapjoonsiong"},"content":"        return this.taskList.size();","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"naijie2108"},"content":"    //Setters","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"naijie2108"},"content":"    public void setTaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"yzhedwin"},"content":"        logger.log(Level.INFO, \"Set task list\");","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"naijie2108"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"naijie2108"},"content":"    public void setTaskCount(int taskCount) {","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"yzhedwin"},"content":"        logger.log(Level.INFO, \"Set task count\");","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"naijie2108"},"content":"        this.taskCount \u003d taskCount;","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"jiexiong-zeng"},"content":"    //assert index is valid","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"yzhedwin"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"yzhedwin"},"content":"        logger.log(Level.INFO, \"Get task\");","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"yzhedwin"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"yzhedwin"},"content":"    public void delete(Task task) {","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"yzhedwin"},"content":"        logger.log(Level.INFO, \"Successfully deleted task\");","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"yzhedwin"},"content":"        taskList.remove(task);","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"yzhedwin"},"content":"        this.taskCount \u003d taskList.size();","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"yzhedwin"},"content":"    protected static String getDate(String description) {","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"yzhedwin"},"content":"        try {","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"jiexiong-zeng"},"content":"            int datePos \u003d description.indexOf(ParserChecks.START_OF_DATE);","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"jiexiong-zeng"},"content":"            return description.substring(datePos).replace(ParserChecks.START_OF_DATE, EMPTY_STRING).trim();","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"yzhedwin"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"yzhedwin"},"content":"            return EMPTY_STRING;","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"yzhedwin"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"yzhedwin"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"yzhedwin"},"content":"     * Trims the user input to get the description of the task.","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"yzhedwin"},"content":"     * This is done by removing the date component from the input string.","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"yzhedwin"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"yzhedwin"},"content":"     * @param description the task description input by the user that also contains the deadline of the task.","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"yzhedwin"},"content":"     * @return a string that contains only the task description.","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"yzhedwin"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"yzhedwin"},"content":"    protected static String removeDate(String description) {","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"yzhedwin"},"content":"        try {","lastModifiedDate":"2021-10-04"},{"lineNumber":87,"author":{"gitId":"jiexiong-zeng"},"content":"            int datePos \u003d description.indexOf(ParserChecks.START_OF_DATE);","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"yzhedwin"},"content":"            return description.substring(0, datePos).trim();","lastModifiedDate":"2021-10-04"},{"lineNumber":89,"author":{"gitId":"yzhedwin"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-04"},{"lineNumber":90,"author":{"gitId":"yzhedwin"},"content":"            return EMPTY_STRING;","lastModifiedDate":"2021-10-04"},{"lineNumber":91,"author":{"gitId":"yzhedwin"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":92,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":93,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":94,"author":{"gitId":"yzhedwin"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":95,"author":{"gitId":"yzhedwin"},"content":"     * Checks for the validity of the new task input and trim the input for the","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"yzhedwin"},"content":"     * important components such as date and task description.","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"yzhedwin"},"content":"     * If there is no error, then update the task list with the new task.","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"yzhedwin"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":99,"author":{"gitId":"yzhedwin"},"content":"     * @param module    module that the task is for","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"yzhedwin"},"content":"     * @param userInput user input that consist of the task description and deadline of the task","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"yzhedwin"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":102,"author":{"gitId":"jiexiong-zeng"},"content":"    public void addTask(String module, String userInput) {","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"yzhedwin"},"content":"        String date \u003d getDate(userInput);","lastModifiedDate":"2021-10-04"},{"lineNumber":104,"author":{"gitId":"yzhedwin"},"content":"        if (date.isBlank()) {","lastModifiedDate":"2021-10-04"},{"lineNumber":105,"author":{"gitId":"yzhedwin"},"content":"            Ui.missingDate();","lastModifiedDate":"2021-10-04"},{"lineNumber":106,"author":{"gitId":"yzhedwin"},"content":"            return;","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"yzhedwin"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"yzhedwin"},"content":"        String description \u003d removeDate(userInput);","lastModifiedDate":"2021-10-04"},{"lineNumber":109,"author":{"gitId":"yzhedwin"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"yzhedwin"},"content":"            Ui.missingDescription();","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"yzhedwin"},"content":"            return;","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"yzhedwin"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"yzhedwin"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"yzhedwin"},"content":"            LocalDateTime newTaskDeadline \u003d DateParser.parseDate(date);","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"yzhedwin"},"content":"            if (hasDuplicateDescription(description) \u0026\u0026 hasDuplicateDeadline(newTaskDeadline)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"yzhedwin"},"content":"                Ui.duplicateTaskError();","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"yzhedwin"},"content":"                return;","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"yzhedwin"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"yzhedwin"},"content":"            if (hasDuplicateDescription(description)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"yzhedwin"},"content":"                updateTaskDeadline(date, description);","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"yzhedwin"},"content":"                Ui.taskUpdateMessage();","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"yzhedwin"},"content":"                return;","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"yzhedwin"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"yzhedwin"},"content":"            updateTaskList(module, date, description);","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"yzhedwin"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"yzhedwin"},"content":"            Ui.wrongDateTimeFormat();","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"yzhedwin"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"yzhedwin"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":131,"author":{"gitId":"yzhedwin"},"content":"     * Update the selected task deadline with a new user input deadline.","lastModifiedDate":"2021-11-05"},{"lineNumber":132,"author":{"gitId":"yzhedwin"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":133,"author":{"gitId":"yzhedwin"},"content":"     * @param date        the deadline of the task","lastModifiedDate":"2021-11-05"},{"lineNumber":134,"author":{"gitId":"yzhedwin"},"content":"     * @param description the description of the task","lastModifiedDate":"2021-11-05"},{"lineNumber":135,"author":{"gitId":"yzhedwin"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":136,"author":{"gitId":"yzhedwin"},"content":"    private void updateTaskDeadline(String date, String description) {","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"yzhedwin"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"yzhedwin"},"content":"            if (description.toLowerCase(Locale.ROOT).equals(task.getDescription().toLowerCase(Locale.ROOT))) {","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"yzhedwin"},"content":"                this.taskList.remove(task);","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"yzhedwin"},"content":"                Task newTask \u003d new Task(description, date);","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"yzhedwin"},"content":"                this.taskList.add(newTask);","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"yzhedwin"},"content":"                return;","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"yzhedwin"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"yzhedwin"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"yzhedwin"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":148,"author":{"gitId":"yzhedwin"},"content":"     * Add new task to the task list.","lastModifiedDate":"2021-11-05"},{"lineNumber":149,"author":{"gitId":"yzhedwin"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":150,"author":{"gitId":"yzhedwin"},"content":"     * @param module      the module that is currently accessed","lastModifiedDate":"2021-11-05"},{"lineNumber":151,"author":{"gitId":"yzhedwin"},"content":"     * @param date        the deadline that the user input for the task","lastModifiedDate":"2021-11-05"},{"lineNumber":152,"author":{"gitId":"yzhedwin"},"content":"     * @param description the description of the task that the user added","lastModifiedDate":"2021-11-05"},{"lineNumber":153,"author":{"gitId":"yzhedwin"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":154,"author":{"gitId":"yzhedwin"},"content":"    private void updateTaskList(String module, String date, String description) {","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"yzhedwin"},"content":"        Task newTask \u003d new Task(description, date);","lastModifiedDate":"2021-10-04"},{"lineNumber":156,"author":{"gitId":"yzhedwin"},"content":"        this.taskList.add(taskCount, newTask);","lastModifiedDate":"2021-10-04"},{"lineNumber":157,"author":{"gitId":"yzhedwin"},"content":"        this.taskCount \u003d taskList.size();","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"yzhedwin"},"content":"        Ui.addTaskMessage(newTask, module);","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"yzhedwin"},"content":"        logger.log(Level.INFO, \"Successfully added task\");","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"yzhedwin"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":163,"author":{"gitId":"yzhedwin"},"content":"     * Checks if there is duplication in the task list.","lastModifiedDate":"2021-11-05"},{"lineNumber":164,"author":{"gitId":"yzhedwin"},"content":"     * This is done by iterating through the task list.","lastModifiedDate":"2021-11-05"},{"lineNumber":165,"author":{"gitId":"yzhedwin"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":166,"author":{"gitId":"yzhedwin"},"content":"     * @param newTaskDescription the new task description input by user","lastModifiedDate":"2021-11-05"},{"lineNumber":167,"author":{"gitId":"yzhedwin"},"content":"     * @return a boolean value, true if there is duplication found","lastModifiedDate":"2021-11-05"},{"lineNumber":168,"author":{"gitId":"yzhedwin"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":169,"author":{"gitId":"yzhedwin"},"content":"    public boolean hasDuplicateDescription(String newTaskDescription) {","lastModifiedDate":"2021-10-31"},{"lineNumber":170,"author":{"gitId":"yzhedwin"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"yzhedwin"},"content":"            String taskDescription \u003d task.getDescription().toLowerCase(Locale.ROOT);","lastModifiedDate":"2021-10-27"},{"lineNumber":172,"author":{"gitId":"yzhedwin"},"content":"            if (newTaskDescription.toLowerCase(Locale.ROOT).equals(taskDescription)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":173,"author":{"gitId":"yzhedwin"},"content":"                return true;","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"yzhedwin"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"yzhedwin"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"yzhedwin"},"content":"        return false;","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"yzhedwin"},"content":"    private boolean hasDuplicateDeadline(LocalDateTime newTaskDate) {","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"yzhedwin"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2021-10-27"},{"lineNumber":181,"author":{"gitId":"yzhedwin"},"content":"            LocalDateTime taskDate \u003d task.getDeadline();","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"yzhedwin"},"content":"            if (newTaskDate.equals(taskDate)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"yzhedwin"},"content":"                return true;","lastModifiedDate":"2021-10-27"},{"lineNumber":184,"author":{"gitId":"yzhedwin"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":185,"author":{"gitId":"yzhedwin"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":186,"author":{"gitId":"yzhedwin"},"content":"        return false;","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":188,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":189,"author":{"gitId":"yzhedwin"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":190,"author":{"gitId":"yzhedwin"},"content":"     * Custom comparator to determine if the task is of higher priority than the other based on custom condition","lastModifiedDate":"2021-11-05"},{"lineNumber":191,"author":{"gitId":"yzhedwin"},"content":"     * such as task deadline. The task deadline is of LocalDateTime data type.","lastModifiedDate":"2021-11-05"},{"lineNumber":192,"author":{"gitId":"yzhedwin"},"content":"     * A task with a more recent deadline will be \u0027greater\u0027 than a task with a later deadline.","lastModifiedDate":"2021-11-05"},{"lineNumber":193,"author":{"gitId":"yzhedwin"},"content":"     * Therefore, tasks with deadline closer to the current system date will be sorted to","lastModifiedDate":"2021-11-05"},{"lineNumber":194,"author":{"gitId":"yzhedwin"},"content":"     * the top of the list if this comparator is used for sorting.","lastModifiedDate":"2021-11-05"},{"lineNumber":195,"author":{"gitId":"yzhedwin"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":196,"author":{"gitId":"yzhedwin"},"content":"    protected static final Comparator\u003cTask\u003e sortByDate \u003d Comparator.comparing(t -\u003e t.deadline);","lastModifiedDate":"2021-10-19"},{"lineNumber":197,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":198,"author":{"gitId":"yzhedwin"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":199,"author":{"gitId":"yzhedwin"},"content":"     * Custom comparator to determine if the task is of higher priority than the other based on custom condition","lastModifiedDate":"2021-11-05"},{"lineNumber":200,"author":{"gitId":"yzhedwin"},"content":"     * such as completion status. If the task is completed, it will have a LOW priority.","lastModifiedDate":"2021-11-05"},{"lineNumber":201,"author":{"gitId":"yzhedwin"},"content":"     * If a task is not completed, it will have a HIGH priority.","lastModifiedDate":"2021-11-05"},{"lineNumber":202,"author":{"gitId":"yzhedwin"},"content":"     * Sorting a list of task using this comparator to sort will put the tasks that is not completed","lastModifiedDate":"2021-11-05"},{"lineNumber":203,"author":{"gitId":"yzhedwin"},"content":"     * at the top of the list while the tasks that are done will be sorted to the bottom of the list.","lastModifiedDate":"2021-11-05"},{"lineNumber":204,"author":{"gitId":"yzhedwin"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":205,"author":{"gitId":"yzhedwin"},"content":"    protected static final Comparator\u003cTask\u003e sortByStatus \u003d (t1, t2) -\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":206,"author":{"gitId":"yzhedwin"},"content":"        if (t1.isDone \u0026\u0026 !t2.isDone) {","lastModifiedDate":"2021-10-11"},{"lineNumber":207,"author":{"gitId":"yzhedwin"},"content":"            return Priority.HIGH.compareTo(Priority.LOW);","lastModifiedDate":"2021-11-05"},{"lineNumber":208,"author":{"gitId":"yzhedwin"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":209,"author":{"gitId":"yzhedwin"},"content":"        if (!t1.isDone \u0026\u0026 t2.isDone) {","lastModifiedDate":"2021-10-11"},{"lineNumber":210,"author":{"gitId":"yzhedwin"},"content":"            return Priority.LOW.compareTo(Priority.HIGH);","lastModifiedDate":"2021-11-05"},{"lineNumber":211,"author":{"gitId":"yzhedwin"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":212,"author":{"gitId":"yzhedwin"},"content":"        return Priority.EQUAL.ordinal();","lastModifiedDate":"2021-11-05"},{"lineNumber":213,"author":{"gitId":"yzhedwin"},"content":"    };","lastModifiedDate":"2021-10-11"},{"lineNumber":214,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":215,"author":{"gitId":"yzhedwin"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":216,"author":{"gitId":"yzhedwin"},"content":"     * Determines if the task fits under the weekly task list by checking its deadline against the system clock.","lastModifiedDate":"2021-11-05"},{"lineNumber":217,"author":{"gitId":"yzhedwin"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":218,"author":{"gitId":"yzhedwin"},"content":"     * @param t the task in the task list.","lastModifiedDate":"2021-11-05"},{"lineNumber":219,"author":{"gitId":"yzhedwin"},"content":"     * @return true if the period of the current date to the task\u0027s deadline is within 7 days.","lastModifiedDate":"2021-11-05"},{"lineNumber":220,"author":{"gitId":"yzhedwin"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":221,"author":{"gitId":"yzhedwin"},"content":"    protected boolean isWeekly(Task t) {","lastModifiedDate":"2021-10-19"},{"lineNumber":222,"author":{"gitId":"yzhedwin"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"yzhedwin"},"content":"        Period p \u003d Period.between(date, t.deadline.toLocalDate()).normalized();","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"yzhedwin"},"content":"        int day \u003d p.getYears() * DAYS_IN_A_YEAR + p.getMonths() * DAYS_IN_A_MONTH + p.getDays();","lastModifiedDate":"2021-10-19"},{"lineNumber":225,"author":{"gitId":"yzhedwin"},"content":"        return day \u003c\u003d DAYS_IN_A_WEEK;","lastModifiedDate":"2021-10-18"},{"lineNumber":226,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":227,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":228,"author":{"gitId":"yzhedwin"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":229,"author":{"gitId":"yzhedwin"},"content":"     * Determines if the task fits under the monthly task list by checking its deadline against the system clock.","lastModifiedDate":"2021-11-05"},{"lineNumber":230,"author":{"gitId":"yzhedwin"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":231,"author":{"gitId":"yzhedwin"},"content":"     * @param t the task in the task list.","lastModifiedDate":"2021-11-05"},{"lineNumber":232,"author":{"gitId":"yzhedwin"},"content":"     * @return true if the period of the current date to the task\u0027s deadline is within 30 days.","lastModifiedDate":"2021-11-05"},{"lineNumber":233,"author":{"gitId":"yzhedwin"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":234,"author":{"gitId":"yzhedwin"},"content":"    protected boolean isMonthly(Task t) {","lastModifiedDate":"2021-10-19"},{"lineNumber":235,"author":{"gitId":"yzhedwin"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"yzhedwin"},"content":"        Period p \u003d Period.between(date, t.deadline.toLocalDate()).normalized();","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"yzhedwin"},"content":"        int day \u003d p.getYears() * DAYS_IN_A_YEAR + p.getMonths() * DAYS_IN_A_MONTH + p.getDays();","lastModifiedDate":"2021-10-19"},{"lineNumber":238,"author":{"gitId":"yzhedwin"},"content":"        return day \u003c\u003d DAYS_IN_A_MONTH;","lastModifiedDate":"2021-10-18"},{"lineNumber":239,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":240,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":241,"author":{"gitId":"yzhedwin"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":242,"author":{"gitId":"yzhedwin"},"content":"     * Determines if the task fits under the yearly task list by checking its deadline against the system clock.","lastModifiedDate":"2021-11-05"},{"lineNumber":243,"author":{"gitId":"yzhedwin"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":244,"author":{"gitId":"yzhedwin"},"content":"     * @param t the task in the task list.","lastModifiedDate":"2021-11-05"},{"lineNumber":245,"author":{"gitId":"yzhedwin"},"content":"     * @return true if the period of the current date to the task\u0027s deadline is within a year.","lastModifiedDate":"2021-11-05"},{"lineNumber":246,"author":{"gitId":"yzhedwin"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":247,"author":{"gitId":"yzhedwin"},"content":"    protected boolean isYearly(Task t) {","lastModifiedDate":"2021-10-19"},{"lineNumber":248,"author":{"gitId":"yzhedwin"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2021-10-12"},{"lineNumber":249,"author":{"gitId":"yzhedwin"},"content":"        Period p \u003d Period.between(date, t.deadline.toLocalDate()).normalized();","lastModifiedDate":"2021-10-12"},{"lineNumber":250,"author":{"gitId":"yzhedwin"},"content":"        int day \u003d p.getYears() * DAYS_IN_A_YEAR + p.getMonths() * DAYS_IN_A_MONTH + p.getDays();","lastModifiedDate":"2021-10-19"},{"lineNumber":251,"author":{"gitId":"yzhedwin"},"content":"        return day \u003c\u003d DAYS_IN_A_YEAR;","lastModifiedDate":"2021-10-18"},{"lineNumber":252,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":253,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":254,"author":{"gitId":"yzhedwin"},"content":"    public void showAllWeekly(String module) {","lastModifiedDate":"2021-10-11"},{"lineNumber":255,"author":{"gitId":"yzhedwin"},"content":"        logger.log(Level.INFO, \"Printing weekly tasks list...\");","lastModifiedDate":"2021-11-03"},{"lineNumber":256,"author":{"gitId":"yzhedwin"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e(weeklyTaskList());","lastModifiedDate":"2021-10-13"},{"lineNumber":257,"author":{"gitId":"yzhedwin"},"content":"        Ui.printWeeklyTaskList(module, list.size());","lastModifiedDate":"2021-10-12"},{"lineNumber":258,"author":{"gitId":"yzhedwin"},"content":"        printTasks(list);","lastModifiedDate":"2021-10-12"},{"lineNumber":259,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":260,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":261,"author":{"gitId":"yzhedwin"},"content":"    public void showAllMonthly(String module) {","lastModifiedDate":"2021-10-12"},{"lineNumber":262,"author":{"gitId":"yzhedwin"},"content":"        logger.log(Level.INFO, \"Printing monthly tasks list...\");","lastModifiedDate":"2021-10-12"},{"lineNumber":263,"author":{"gitId":"yzhedwin"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e(monthlyTaskList());","lastModifiedDate":"2021-10-13"},{"lineNumber":264,"author":{"gitId":"yzhedwin"},"content":"        Ui.printMonthlyTaskList(module, list.size());","lastModifiedDate":"2021-10-12"},{"lineNumber":265,"author":{"gitId":"yzhedwin"},"content":"        printTasks(list);","lastModifiedDate":"2021-10-12"},{"lineNumber":266,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":267,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":268,"author":{"gitId":"yzhedwin"},"content":"    public void showAllYearly(String module) {","lastModifiedDate":"2021-10-12"},{"lineNumber":269,"author":{"gitId":"yzhedwin"},"content":"        logger.log(Level.INFO, \"Printing yearly tasks list...\");","lastModifiedDate":"2021-10-12"},{"lineNumber":270,"author":{"gitId":"yzhedwin"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e(yearlyTaskList());","lastModifiedDate":"2021-10-13"},{"lineNumber":271,"author":{"gitId":"yzhedwin"},"content":"        Ui.printYearlyTaskList(module, list.size());","lastModifiedDate":"2021-10-12"},{"lineNumber":272,"author":{"gitId":"yzhedwin"},"content":"        printTasks(list);","lastModifiedDate":"2021-10-12"},{"lineNumber":273,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":274,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":275,"author":{"gitId":"yzhedwin"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":276,"author":{"gitId":"yzhedwin"},"content":"     * Get all weekly tasks in a list.","lastModifiedDate":"2021-11-05"},{"lineNumber":277,"author":{"gitId":"yzhedwin"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":278,"author":{"gitId":"yzhedwin"},"content":"     * @return an arraylist which is the list of weekly tasks","lastModifiedDate":"2021-11-05"},{"lineNumber":279,"author":{"gitId":"yzhedwin"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":280,"author":{"gitId":"yzhedwin"},"content":"    public ArrayList\u003cTask\u003e weeklyTaskList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":281,"author":{"gitId":"yzhedwin"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":282,"author":{"gitId":"yzhedwin"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-10-11"},{"lineNumber":283,"author":{"gitId":"yzhedwin"},"content":"            assert (task !\u003d null);","lastModifiedDate":"2021-10-12"},{"lineNumber":284,"author":{"gitId":"yzhedwin"},"content":"            if (isWeekly(task)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":285,"author":{"gitId":"yzhedwin"},"content":"                list.add(task);","lastModifiedDate":"2021-10-12"},{"lineNumber":286,"author":{"gitId":"yzhedwin"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":287,"author":{"gitId":"yzhedwin"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":288,"author":{"gitId":"yzhedwin"},"content":"        return list;","lastModifiedDate":"2021-10-12"},{"lineNumber":289,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":290,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":291,"author":{"gitId":"yzhedwin"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":292,"author":{"gitId":"yzhedwin"},"content":"     * Get all monthly tasks in a list.","lastModifiedDate":"2021-11-05"},{"lineNumber":293,"author":{"gitId":"yzhedwin"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":294,"author":{"gitId":"yzhedwin"},"content":"     * @return an arraylist which is the list of monthly tasks","lastModifiedDate":"2021-11-05"},{"lineNumber":295,"author":{"gitId":"yzhedwin"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":296,"author":{"gitId":"yzhedwin"},"content":"    public ArrayList\u003cTask\u003e monthlyTaskList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":297,"author":{"gitId":"yzhedwin"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":298,"author":{"gitId":"yzhedwin"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-10-11"},{"lineNumber":299,"author":{"gitId":"yzhedwin"},"content":"            assert (task !\u003d null);","lastModifiedDate":"2021-10-12"},{"lineNumber":300,"author":{"gitId":"yzhedwin"},"content":"            if (isMonthly(task)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":301,"author":{"gitId":"yzhedwin"},"content":"                list.add(task);","lastModifiedDate":"2021-10-12"},{"lineNumber":302,"author":{"gitId":"yzhedwin"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":303,"author":{"gitId":"yzhedwin"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":304,"author":{"gitId":"yzhedwin"},"content":"        return list;","lastModifiedDate":"2021-10-12"},{"lineNumber":305,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":306,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":307,"author":{"gitId":"yzhedwin"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":308,"author":{"gitId":"yzhedwin"},"content":"     * Get all yearly tasks in a list.","lastModifiedDate":"2021-11-05"},{"lineNumber":309,"author":{"gitId":"yzhedwin"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":310,"author":{"gitId":"yzhedwin"},"content":"     * @return an arraylist which is the list of yearly tasks","lastModifiedDate":"2021-11-05"},{"lineNumber":311,"author":{"gitId":"yzhedwin"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":312,"author":{"gitId":"yzhedwin"},"content":"    public ArrayList\u003cTask\u003e yearlyTaskList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":313,"author":{"gitId":"yzhedwin"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":314,"author":{"gitId":"yzhedwin"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-10-11"},{"lineNumber":315,"author":{"gitId":"yzhedwin"},"content":"            assert (task !\u003d null);","lastModifiedDate":"2021-10-12"},{"lineNumber":316,"author":{"gitId":"yzhedwin"},"content":"            if (isYearly(task)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":317,"author":{"gitId":"yzhedwin"},"content":"                list.add(task);","lastModifiedDate":"2021-10-12"},{"lineNumber":318,"author":{"gitId":"yzhedwin"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":319,"author":{"gitId":"yzhedwin"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":320,"author":{"gitId":"yzhedwin"},"content":"        return list;","lastModifiedDate":"2021-10-12"},{"lineNumber":321,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":322,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":323,"author":{"gitId":"yzhedwin"},"content":"    public void printTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-10-12"},{"lineNumber":324,"author":{"gitId":"yzhedwin"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":325,"author":{"gitId":"yzhedwin"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-10-06"},{"lineNumber":326,"author":{"gitId":"yzhedwin"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":327,"author":{"gitId":"yzhedwin"},"content":"                task.updateOverdue();","lastModifiedDate":"2021-10-18"},{"lineNumber":328,"author":{"gitId":"yzhedwin"},"content":"                System.out.print(index + \".\");","lastModifiedDate":"2021-10-06"},{"lineNumber":329,"author":{"gitId":"yzhedwin"},"content":"                System.out.println(task);","lastModifiedDate":"2021-10-06"},{"lineNumber":330,"author":{"gitId":"yzhedwin"},"content":"                index++;","lastModifiedDate":"2021-10-06"},{"lineNumber":331,"author":{"gitId":"yzhedwin"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":332,"author":{"gitId":"yzhedwin"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":333,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":334,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":335,"author":{"gitId":"yzhedwin"},"content":"    public void sortTaskListByDate(String module) {","lastModifiedDate":"2021-10-12"},{"lineNumber":336,"author":{"gitId":"yzhedwin"},"content":"        logger.log(Level.INFO, \"Sorting tasks list by date...\");","lastModifiedDate":"2021-10-12"},{"lineNumber":337,"author":{"gitId":"yzhedwin"},"content":"        taskList.sort(sortByDate);","lastModifiedDate":"2021-10-12"},{"lineNumber":338,"author":{"gitId":"yzhedwin"},"content":"        Ui.printSortListByDate(module);","lastModifiedDate":"2021-10-12"},{"lineNumber":339,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":340,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":341,"author":{"gitId":"yzhedwin"},"content":"    public void sortTaskListByStatus(String module) {","lastModifiedDate":"2021-10-12"},{"lineNumber":342,"author":{"gitId":"yzhedwin"},"content":"        logger.log(Level.INFO, \"Sorting tasks list by status...\");","lastModifiedDate":"2021-10-12"},{"lineNumber":343,"author":{"gitId":"yzhedwin"},"content":"        taskList.sort(sortByStatus);","lastModifiedDate":"2021-10-12"},{"lineNumber":344,"author":{"gitId":"yzhedwin"},"content":"        Ui.printSortListByStatus(module);","lastModifiedDate":"2021-10-12"},{"lineNumber":345,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":346,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":347,"author":{"gitId":"naijie2108"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":348,"author":{"gitId":"naijie2108"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":349,"author":{"gitId":"naijie2108"},"content":"        return taskList.toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":350,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":351,"author":{"gitId":"yzhedwin"},"content":"}","lastModifiedDate":"2021-10-04"},{"lineNumber":352,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":353,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"yapjoonsiong":3,"naijie2108":20,"yzhedwin":317,"jiexiong-zeng":13}},{"path":"src/test/java/command/VisualiseGradableTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DmitriYam"},"content":"package command;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"DmitriYam"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"DmitriYam"},"content":"import task.GradableTaskList;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"DmitriYam"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"DmitriYam"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"DmitriYam"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"DmitriYam"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"import static org.junit.jupiter.api.Assertions.assertLinesMatch;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"DmitriYam"},"content":"class VisualiseGradableTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"DmitriYam"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"DmitriYam"},"content":"    void print() {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"DmitriYam"},"content":"        GradableTaskList gradableTaskList \u003d new GradableTaskList();","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"DmitriYam"},"content":"        gradableTaskList.addGradableTask(\"cs1010\", \"lecture quizzes /by 12/12/2021 1600 /w 10\");","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"DmitriYam"},"content":"        gradableTaskList.addGradableTask(\"cs1010\", \"classPart /by 12/12/2021 1600 /w 15\");","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"DmitriYam"},"content":"        gradableTaskList.addGradableTask(\"cs1010\", \"Finals /by 12/12/2021 1600 /w 55\");","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"DmitriYam"},"content":"        gradableTaskList.addGradableTask(\"cs1010\", \"att /by 12/12/2021 1600 /w 15\");","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"DmitriYam"},"content":"        gradableTaskList.addGradableTask(\"cs1010\", \"labs /by 12/12/2021 1600 /w 5\");","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"DmitriYam"},"content":"        gradableTaskList.getGradableTask(1).setDone(true);","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"DmitriYam"},"content":"        gradableTaskList.getGradableTask(2).setDone(true);","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"DmitriYam"},"content":"        VisualiseGradable v \u003d new VisualiseGradable(gradableTaskList);","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"DmitriYam"},"content":"        ByteArrayOutputStream read \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"DmitriYam"},"content":"        PrintStream save \u003d new PrintStream(read);","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"DmitriYam"},"content":"        System.setOut(save);","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"DmitriYam"},"content":"        v.print();","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"DmitriYam"},"content":"        List\u003cString\u003e actualLines \u003d List.of(read.toString().split(\"\\r\\n\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"DmitriYam"},"content":"        List\u003cString\u003e expectedLines \u003d Collections.singletonList(","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"DmitriYam"},"content":"                \"BREAKDOWN:\" + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"DmitriYam"},"content":"                        + \"\u003c\u003d\u003d10%\u003d\u003d\u003d\u003e\u003c\u003d\u003d\u003d\u003d\u003d15%\u003d\u003d\u003d\u003d\u003d\u003e\u003c\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d55%\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003e\"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"naijie2108"},"content":"                        + \"\u003c\u003d\u003d\u003d\u003d\u003d15%\u003d\u003d\u003d\u003d\u003d\u003e\u003c5%\u003d\u003e\" + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"naijie2108"},"content":"                        + \"##########@@@@@@@@@@@@@@@\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"naijie2108"},"content":"                        + \"\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026\u0026+++++++++++++++#####\" + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"naijie2108"},"content":"                        + \"|---1----||------2------||--------------------------3------------------\"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"naijie2108"},"content":"                        + \"--------||------4------||-5-|\" + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"DmitriYam"},"content":"                        + \"1: lecture quizzes\" + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"DmitriYam"},"content":"                        + \"2: classPart\" + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"DmitriYam"},"content":"                        + \"3: Finals\" + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"DmitriYam"},"content":"                        + \"4: att\" + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"DmitriYam"},"content":"                        + \"5: labs\" + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"DmitriYam"},"content":"                        + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"DmitriYam"},"content":"                        + \"1 lecture quizzes by: 12 Dec 2021 04:00 PM Weightage 10% [ ]\\r\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"DmitriYam"},"content":"                        + \"2 classPart by: 12 Dec 2021 04:00 PM Weightage 15% [X]\\r\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"DmitriYam"},"content":"                        + \"3 Finals by: 12 Dec 2021 04:00 PM Weightage 55% [X]\\r\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"DmitriYam"},"content":"                        + \"4 att by: 12 Dec 2021 04:00 PM Weightage 15% [ ]\\r\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"DmitriYam"},"content":"                        + \"5 labs by: 12 Dec 2021 04:00 PM Weightage 5% [ ]\");","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"DmitriYam"},"content":"        assertLinesMatch(actualLines, actualLines);","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"DmitriYam"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"naijie2108":6,"DmitriYam":46}},{"path":"src/test/java/command/parser/CommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexiong-zeng"},"content":"package command.parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"jiexiong-zeng"},"content":"import command.Logger;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"jiexiong-zeng"},"content":"import command.NoCap;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"jiexiong-zeng"},"content":"import command.storage.StorageDecoder;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"jiexiong-zeng"},"content":"import module.Module;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"jiexiong-zeng"},"content":"import module.ModuleList;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"jiexiong-zeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"jiexiong-zeng"},"content":"import semester.Semester;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"jiexiong-zeng"},"content":"import semester.SemesterList;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"jiexiong-zeng"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"jiexiong-zeng"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"jiexiong-zeng"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"jiexiong-zeng"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"jiexiong-zeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"jiexiong-zeng"},"content":"public class CommandTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"jiexiong-zeng"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"jiexiong-zeng"},"content":"    public void variousCommands_missingDescription_ErrorMessage() {","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"jiexiong-zeng"},"content":"        NoCap.moduleList \u003d new ModuleList();","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"jiexiong-zeng"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"jiexiong-zeng"},"content":"        parser.chooseTask(\"add\");","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"jiexiong-zeng"},"content":"        parser.chooseTask(\"delete\");","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"jiexiong-zeng"},"content":"        parser.chooseTask(\"list\");","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"jiexiong-zeng"},"content":"        parser.chooseTask(\"/m CS1010 addclass\");","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"jiexiong-zeng"},"content":"        parser.chooseTask(\"/m CS1010 addtask\");","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"jiexiong-zeng"},"content":"        parser.chooseTask(\"/m CS1010 addgradable\");","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"jiexiong-zeng"},"content":"        parser.chooseTask(\"/m CS1010 addgrade\");","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"jiexiong-zeng"},"content":"        parser.chooseTask(\"/m CS1010 addcredit\");","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"jiexiong-zeng"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"jiexiong-zeng"},"content":"    public void commandEdit_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"jiexiong-zeng"},"content":"        NoCap.moduleList \u003d new ModuleList();","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"jiexiong-zeng"},"content":"        Command command \u003d new Command();","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"jiexiong-zeng"},"content":"        command.commandAddModule(\"cs1010\");","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"jiexiong-zeng"},"content":"        Module module \u003d NoCap.moduleList.get(0);","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"jiexiong-zeng"},"content":"        command.commandAddTask(module, \"test1 /by 10 10 10\");","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"jiexiong-zeng"},"content":"        command.commandEditDescription(module, \"0\", \"invalid index\");","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"jiexiong-zeng"},"content":"        assertEquals(module.getTaskList().toString(), \"[[ ] test1 by: 10 Oct 2010 12:00 AM]\");","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"jiexiong-zeng"},"content":"        command.commandEditDescription(module, \"1\", \"test2\");","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"jiexiong-zeng"},"content":"        assertEquals(module.getTaskList().toString(), \"[[ ] test2 by: 10 Oct 2010 12:00 AM]\");","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"jiexiong-zeng"},"content":"        command.commandEditDeadline(module, \"1\", \"invalid date\");","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"jiexiong-zeng"},"content":"        assertEquals(module.getTaskList().toString(), \"[[ ] test2 by: 10 Oct 2010 12:00 AM]\");","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"jiexiong-zeng"},"content":"        command.commandEditDeadline(module, \"1\", \"11 11 11\");","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"jiexiong-zeng"},"content":"        assertEquals(module.getTaskList().toString(), \"[[ ] test2 by: 11 Nov 2011 12:00 AM]\");","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"jiexiong-zeng"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"jiexiong-zeng"},"content":"    public void variousCommands_Success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"jiexiong-zeng"},"content":"        NoCap.moduleList \u003d new ModuleList();","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"jiexiong-zeng"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"jiexiong-zeng"},"content":"        parser.chooseTask(\"add cs1010\");","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"jiexiong-zeng"},"content":"        parser.chooseTask(\"add cs1010\");","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"jiexiong-zeng"},"content":"        parser.chooseTask(\"/m cs1010 addgradable finalss dasda sda asdasd /by 10/10/10 /w 70\");","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"jiexiong-zeng"},"content":"        parser.chooseTask(\"/m cs1010 addgradable assignment /by 10/10/10 /w 70\");","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"jiexiong-zeng"},"content":"        parser.chooseTask(\"/m cs1010 gradabledone 2\");","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"jiexiong-zeng"},"content":"        parser.chooseTask(\"list task\");","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"jiexiong-zeng"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"jiexiong-zeng":79}},{"path":"src/test/java/command/parser/DateParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexiong-zeng"},"content":"package command.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"jiexiong-zeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"jiexiong-zeng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"jiexiong-zeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"jiexiong-zeng"},"content":"public class DateParserTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"jiexiong-zeng"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"jiexiong-zeng"},"content":"    public void parseDate_variousFormat_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"jiexiong-zeng"},"content":"        assertEquals(\"2020-12-01T00:00\", DateParser.parseDate(\"2020-12-01\").toString());","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"jiexiong-zeng"},"content":"        assertEquals(\"2020-12-01T18:12\", DateParser.parseDate(\"01 12 2020 18:12\").toString());","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"jiexiong-zeng"},"content":"        assertEquals(\"2020-12-01T18:12\", DateParser.parseDate(\"01 12 2020 1812\").toString());","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"jiexiong-zeng"},"content":"        assertEquals(\"2020-12-01T00:00\", DateParser.parseDate(\"01 12 2020\").toString());","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"jiexiong-zeng"},"content":"        assertEquals(\"2020-12-01T00:00\", DateParser.parseDate(\"01 12 20\").toString());","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"jiexiong-zeng"},"content":"        assertEquals(\"2020-12-01T00:00\", DateParser.parseDate(\"01 12 20\").toString());","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"jiexiong-zeng"},"content":"        assertEquals(\"2020-12-01T18:12\", DateParser.parseDate(\"01/12/2020 18:12\").toString());","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"jiexiong-zeng"},"content":"        assertEquals(\"2020-12-01T18:12\", DateParser.parseDate(\"01/12/2020 1812\").toString());","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"jiexiong-zeng"},"content":"        assertEquals(\"2020-12-01T00:00\", DateParser.parseDate(\"01/12/2020\").toString());","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"jiexiong-zeng"},"content":"        assertEquals(\"2021-12-01T00:00\", DateParser.parseDate(\"01/12/21\").toString());","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"jiexiong-zeng"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"jiexiong-zeng"},"content":"    public void dateStringOutput_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"jiexiong-zeng"},"content":"        LocalDateTime testCase \u003d DateParser.parseDate(\"01/12/20\");","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"jiexiong-zeng"},"content":"        assertEquals(\"1 Dec 2020 12:00 AM\", DateParser.dateStringOutput(testCase));","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"jiexiong-zeng"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"jiexiong-zeng":28}},{"path":"src/test/java/command/parser/ParserChecksTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexiong-zeng"},"content":"package command.parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"jiexiong-zeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"jiexiong-zeng"},"content":"import task.TaskList;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"jiexiong-zeng"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"jiexiong-zeng"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"jiexiong-zeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"jiexiong-zeng"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"jiexiong-zeng"},"content":"public class ParserChecksTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"jiexiong-zeng"},"content":"    ParserChecks testParserChecks \u003d new ParserChecks();","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"jiexiong-zeng"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"jiexiong-zeng"},"content":"    public void getTaskFromIndex_invalidIndex_returnNull() {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"jiexiong-zeng"},"content":"        TaskList a \u003d new TaskList();","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"jiexiong-zeng"},"content":"        a.addTask(\"cs1010\", \"Read Book A /by 12/12/2021 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"jiexiong-zeng"},"content":"        a.addTask(\"cs1010\", \"Read Book B /by 13/12/2021 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"jiexiong-zeng"},"content":"        assertNull(testParserChecks.getTaskFromIndex(\"0\", a.getTaskList()));","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"jiexiong-zeng"},"content":"        assertNull(testParserChecks.getTaskFromIndex(\"3\", a.getTaskList()));","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"jiexiong-zeng"},"content":"        assertNull(testParserChecks.getTaskFromIndex(\"abc\", a.getTaskList()));","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"jiexiong-zeng"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"jiexiong-zeng"},"content":"    public void getTaskFromIndex_validIndex_returnTask() {","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"jiexiong-zeng"},"content":"        TaskList a \u003d new TaskList();","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"jiexiong-zeng"},"content":"        a.addTask(\"cs1010\", \"Read Book A /by 12/12/2021 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"jiexiong-zeng"},"content":"        a.addTask(\"cs1010\", \"Read Book B /by 13/12/2021 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"jiexiong-zeng"},"content":"        assertEquals(testParserChecks.getTaskFromIndex(\"1\", a.getTaskList()), a.get(0));","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"jiexiong-zeng"},"content":"        assertEquals(testParserChecks.getTaskFromIndex(\"2\", a.getTaskList()), a.get(1));","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"jiexiong-zeng"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"jiexiong-zeng"},"content":"    public void getTaskFromKeyword_keywordNotFound_returnNull() {","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"jiexiong-zeng"},"content":"        TaskList a \u003d new TaskList();","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"jiexiong-zeng"},"content":"        a.addTask(\"cs1010\", \"Read Book A /by 12/12/2021 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"jiexiong-zeng"},"content":"        a.addTask(\"cs1010\", \"Read Book B /by 13/12/2021 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"jiexiong-zeng"},"content":"        assertNull(testParserChecks.getTaskFromKeyword(\"xyz\", a.getTaskList()));","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"jiexiong-zeng"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"jiexiong-zeng"},"content":"    public void getTaskFromKeyword_EmptyTaskList_returnNull() {","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"jiexiong-zeng"},"content":"        TaskList a \u003d new TaskList();","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"jiexiong-zeng"},"content":"        assertNull(testParserChecks.getTaskFromKeyword(\"xyz\", a.getTaskList()));","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"jiexiong-zeng"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"jiexiong-zeng"},"content":"    public void getTaskFromKeyword_MatchOne_returnMatch() {","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"jiexiong-zeng"},"content":"        TaskList a \u003d new TaskList();","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"jiexiong-zeng"},"content":"        a.addTask(\"cs1010\", \"Read Book A /by 12/12/2021 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"jiexiong-zeng"},"content":"        a.addTask(\"cs1010\", \"Read Book B /by 13/12/2021 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"jiexiong-zeng"},"content":"        String input \u003d \"1\";","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"jiexiong-zeng"},"content":"        InputStream in;","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"jiexiong-zeng"},"content":"        in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"jiexiong-zeng"},"content":"        System.setIn(in);","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"jiexiong-zeng"},"content":"        assertEquals(testParserChecks.getTaskFromKeyword(\"Book A\", a.getTaskList()), a.get(0));","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"jiexiong-zeng"},"content":"        in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"jiexiong-zeng"},"content":"        System.setIn(in);","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"jiexiong-zeng"},"content":"        assertEquals(testParserChecks.getTaskFromKeyword(\"Book B\", a.getTaskList()), a.get(1));","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"jiexiong-zeng"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"jiexiong-zeng"},"content":"    public void getTaskFromKeyword_MatchBoth_returnIndexChoice() {","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"jiexiong-zeng"},"content":"        TaskList a \u003d new TaskList();","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"jiexiong-zeng"},"content":"        a.addTask(\"cs1010\", \"Read Book A /by 12/12/2021 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"jiexiong-zeng"},"content":"        a.addTask(\"cs1010\", \"Read Book B /by 13/12/2021 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"jiexiong-zeng"},"content":"        String input;","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"jiexiong-zeng"},"content":"        InputStream in;","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"jiexiong-zeng"},"content":"        input \u003d \"1\";","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"jiexiong-zeng"},"content":"        in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"jiexiong-zeng"},"content":"        System.setIn(in);","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"jiexiong-zeng"},"content":"        assertEquals(testParserChecks.getTaskFromKeyword(\"Book\", a.getTaskList()), a.get(0));","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"jiexiong-zeng"},"content":"        input \u003d \"2\";","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"jiexiong-zeng"},"content":"        in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"jiexiong-zeng"},"content":"        System.setIn(in);","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"jiexiong-zeng"},"content":"        assertEquals(testParserChecks.getTaskFromKeyword(\"Book\", a.getTaskList()), a.get(1));","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"jiexiong-zeng"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"jiexiong-zeng":84}},{"path":"src/test/java/command/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package command.parser;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"jiexiong-zeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"jiexiong-zeng"},"content":"import task.TaskList;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"jiexiong-zeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"jiexiong-zeng"},"content":"public class ParserTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"jiexiong-zeng"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"jiexiong-zeng"},"content":"    public void splitInput_withDescription_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"jiexiong-zeng"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"jiexiong-zeng"},"content":"        testParser.chooseTask(\"Add taskDescription\");","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"jiexiong-zeng"},"content":"        assertEquals(\"Add\", testParser.getTaskType());","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"jiexiong-zeng"},"content":"        assertEquals(\"taskDescription\", testParser.getTaskDescription());","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"jiexiong-zeng"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"jiexiong-zeng"},"content":"    public void splitInput_withoutDescription_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"jiexiong-zeng"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"jiexiong-zeng"},"content":"        testParser.chooseTask(\"Help\");","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"jiexiong-zeng"},"content":"        assertEquals(\"Help\", testParser.getTaskType());","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"jiexiong-zeng"},"content":"        assertEquals(\"\", testParser.getTaskDescription());","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"jiexiong-zeng"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"jiexiong-zeng"},"content":"    public void splitInput_EmptyString_success() {","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"jiexiong-zeng"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"jiexiong-zeng"},"content":"        testParser.chooseTask(\"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"jiexiong-zeng"},"content":"        assertEquals(\"\", testParser.getTaskType());","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"jiexiong-zeng"},"content":"        assertEquals(\"\", testParser.getTaskDescription());","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"jiexiong-zeng"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"jiexiong-zeng"},"content":"    public void getTaskFromKeyword_keywordNotFound_printError() {","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"jiexiong-zeng"},"content":"        TaskList a \u003d new TaskList();","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"jiexiong-zeng"},"content":"        a.addTask(\"cs1010\", \"Read Book A /by 12/12/2021 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"jiexiong-zeng"},"content":"        a.addTask(\"cs1010\", \"Read Book B /by 13/12/2021 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"jiexiong-zeng"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"jiexiong-zeng"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"naijie2108":1,"jiexiong-zeng":41}},{"path":"src/test/java/command/storage/StorageDecoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package command.storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"import exceptions.NoCapExceptions;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"import module.Module;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"import module.ModuleList;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"import schedule.Schedule;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"import semester.SemesterList;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"naijie2108"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"naijie2108"},"content":"class StorageDecoderTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"naijie2108"},"content":"    private static final String ROOT \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"naijie2108"},"content":"    private static final Path FILE_PATH \u003d Paths.get(ROOT, \"data\", \"data.json\");","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"naijie2108"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"naijie2108"},"content":"    public void decodeSemesterList_normalSemesterList_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"naijie2108"},"content":"        SemesterList semesters \u003d new SemesterList();","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"naijie2108"},"content":"        ModuleList modules \u003d semesters.extractAccessedSemester().getModuleList();","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2102\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"naijie2108"},"content":"        modules.get(0).addTask(\"sleep /by 21/08/2022 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"naijie2108"},"content":"        //Change semester index","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"naijie2108"},"content":"        semesters.setAccessedSemesterIndex(1);","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"naijie2108"},"content":"        modules \u003d semesters.extractAccessedSemester().getModuleList();","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2112\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"naijie2108"},"content":"            modules.get(0).addCredits(4);","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"naijie2108"},"content":"            modules.get(0).addClass(new Schedule(\"WED\", \"1200\", \"E3\", \"Tutorial\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"naijie2108"},"content":"        //Change semester index","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"naijie2108"},"content":"        semesters.setAccessedSemesterIndex(2);","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"naijie2108"},"content":"        modules \u003d semesters.extractAccessedSemester().getModuleList();","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2132\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"naijie2108"},"content":"            modules.get(0).addClass(new Schedule(\"MON\", \"1200\", \"D3\", \"Lecture\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"naijie2108"},"content":"            modules.get(0).addClass(new Schedule(\"TUE\", \"1200\", \"D3\", \"Lecture\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"naijie2108"},"content":"        StorageEncoder.encodeAndSaveSemesterListToJson(semesters);","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"naijie2108"},"content":"        SemesterList loadedSemesters \u003d StorageDecoder.decodeJsonToSemesterList();","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"naijie2108"},"content":"        assertEquals(semesters.toString(), loadedSemesters.toString());","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"naijie2108"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"naijie2108"},"content":"    public void decodeSemesterList_emptyList_success() {","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"naijie2108"},"content":"        SemesterList modules \u003d new SemesterList();","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"naijie2108"},"content":"        StorageEncoder.encodeAndSaveSemesterListToJson(modules);","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"naijie2108"},"content":"        SemesterList loadedSemesters \u003d StorageDecoder.decodeJsonToSemesterList();","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"naijie2108"},"content":"        assertEquals(loadedSemesters.toString(), modules.toString());","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"naijie2108"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"naijie2108"},"content":"    public void decodeSemesterList_noFile_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"naijie2108"},"content":"        try {","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"naijie2108"},"content":"            if (Files.exists(FILE_PATH)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"naijie2108"},"content":"                Files.delete(FILE_PATH);","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"naijie2108"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"naijie2108"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"naijie2108"},"content":"            fail(e);","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"naijie2108"},"content":"        SemesterList loadedSemesters \u003d StorageDecoder.decodeJsonToSemesterList();","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"naijie2108"},"content":"        assertEquals(loadedSemesters.toString(), new SemesterList().toString());","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"naijie2108"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"yapjoonsiong":30,"naijie2108":64}},{"path":"src/test/java/command/storage/StorageEncoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package command.storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"import exceptions.NoCapExceptions;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"import module.Module;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"import module.ModuleList;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"import schedule.Schedule;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"import semester.SemesterList;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"naijie2108"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"naijie2108"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"naijie2108"},"content":"class StorageEncoderTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"naijie2108"},"content":"    private static final String ROOT \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"naijie2108"},"content":"    private static final Path FILE_PATH \u003d Paths.get(ROOT, \"data\", \"data.json\");","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"naijie2108"},"content":"    private static final Path DIRECTORY_PATH \u003d Paths.get(ROOT, \"data\");","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"naijie2108"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"naijie2108"},"content":"    public void encodeModuleList_normalModuleList_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"naijie2108"},"content":"        SemesterList semesters \u003d new SemesterList();","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"naijie2108"},"content":"        ModuleList modules \u003d semesters.extractAccessedSemester().getModuleList();","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2102\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2112\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2132\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"naijie2108"},"content":"        modules.get(0).addTask(\"sleep /by 21/08/2022 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"naijie2108"},"content":"            modules.get(0).addCredits(4);","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"yapjoonsiong"},"content":"            modules.get(2).addClass(new Schedule(\"MON\", \"1200\", \"E3\", \"Bad\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"yapjoonsiong"},"content":"            modules.get(0).addClass(new Schedule(\"MON\", \"1200\", \"D3\", \"Bad\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"yapjoonsiong"},"content":"            modules.get(0).addClass(new Schedule(\"TUE\", \"1200\", \"D3\", \"Bad\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"naijie2108"},"content":"        StorageEncoder.encodeAndSaveSemesterListToJson(semesters);","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"naijie2108"},"content":"        assertTrue(Files.exists(FILE_PATH));","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"naijie2108"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"naijie2108"},"content":"            String fileContent \u003d Files.readString(FILE_PATH);","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"naijie2108"},"content":"            String expectedString \u003d \"{\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"naijie2108"},"content":"                    + \"  \\\"credits\\\" : 0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"naijie2108"},"content":"                    + \"  \\\"points\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"naijie2108"},"content":"                    + \"  \\\"cap\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"naijie2108"},"content":"                    + \"  \\\"accessedSemesterIndex\\\" : 0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"naijie2108"},"content":"                    + \"  \\\"semesterList\\\" : [ {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"credits\\\" : 0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"points\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"cap\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"semester\\\" : \\\"Y1S1\\\",\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"moduleList\\\" : {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"naijie2108"},"content":"                    + \"      \\\"moduleList\\\" : [ {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"yapjoonsiong"},"content":"                    + \"        \\\"letterGrade\\\" : \\\"NIL\\\",\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"naijie2108"},"content":"                    + \"        \\\"points\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"naijie2108"},"content":"                    + \"        \\\"moduleName\\\" : \\\"CS2102\\\",\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"naijie2108"},"content":"                    + \"        \\\"taskList\\\" : {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"naijie2108"},"content":"                    + \"          \\\"taskList\\\" : [ {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"naijie2108"},"content":"                    + \"            \\\"description\\\" : \\\"sleep\\\",\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"naijie2108"},"content":"                    + \"            \\\"date\\\" : \\\"21/08/2022 1600\\\",\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"naijie2108"},"content":"                    + \"            \\\"deadline\\\" : [ 2022, 8, 21, 16, 0 ],\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"naijie2108"},"content":"                    + \"            \\\"done\\\" : false\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"naijie2108"},"content":"                    + \"          } ],\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"naijie2108"},"content":"                    + \"          \\\"taskCount\\\" : 1\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"naijie2108"},"content":"                    + \"        },\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"naijie2108"},"content":"                    + \"        \\\"scheduleList\\\" : {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"naijie2108"},"content":"                    + \"          \\\"scheduleList\\\" : [ {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"yapjoonsiong"},"content":"                    + \"            \\\"startTime\\\" : \\\"1200\\\",\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"naijie2108"},"content":"                    + \"            \\\"location\\\" : \\\"D3\\\",\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"yapjoonsiong"},"content":"                    + \"            \\\"day\\\" : \\\"MON\\\",\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"naijie2108"},"content":"                    + \"            \\\"comment\\\" : \\\"Bad\\\"\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"naijie2108"},"content":"                    + \"          }, {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"yapjoonsiong"},"content":"                    + \"            \\\"startTime\\\" : \\\"1200\\\",\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"naijie2108"},"content":"                    + \"            \\\"location\\\" : \\\"D3\\\",\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"yapjoonsiong"},"content":"                    + \"            \\\"day\\\" : \\\"TUE\\\",\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"naijie2108"},"content":"                    + \"            \\\"comment\\\" : \\\"Bad\\\"\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"naijie2108"},"content":"                    + \"          } ]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"naijie2108"},"content":"                    + \"        },\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"naijie2108"},"content":"                    + \"        \\\"credits\\\" : 4,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"naijie2108"},"content":"                    + \"        \\\"gradableTaskList\\\" : {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"naijie2108"},"content":"                    + \"          \\\"taskList\\\" : [ ],\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"naijie2108"},"content":"                    + \"          \\\"taskCount\\\" : 0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"naijie2108"},"content":"                    + \"          \\\"gradableTaskList\\\" : [ ]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"naijie2108"},"content":"                    + \"        }\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"naijie2108"},"content":"                    + \"      }, {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"yapjoonsiong"},"content":"                    + \"        \\\"letterGrade\\\" : \\\"NIL\\\",\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"naijie2108"},"content":"                    + \"        \\\"points\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"naijie2108"},"content":"                    + \"        \\\"moduleName\\\" : \\\"CS2112\\\",\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"naijie2108"},"content":"                    + \"        \\\"taskList\\\" : {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"naijie2108"},"content":"                    + \"          \\\"taskList\\\" : [ ],\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"naijie2108"},"content":"                    + \"          \\\"taskCount\\\" : 0\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"naijie2108"},"content":"                    + \"        },\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"naijie2108"},"content":"                    + \"        \\\"scheduleList\\\" : {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"naijie2108"},"content":"                    + \"          \\\"scheduleList\\\" : [ ]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"naijie2108"},"content":"                    + \"        },\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"naijie2108"},"content":"                    + \"        \\\"credits\\\" : 0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"naijie2108"},"content":"                    + \"        \\\"gradableTaskList\\\" : {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"naijie2108"},"content":"                    + \"          \\\"taskList\\\" : [ ],\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"naijie2108"},"content":"                    + \"          \\\"taskCount\\\" : 0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"naijie2108"},"content":"                    + \"          \\\"gradableTaskList\\\" : [ ]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"naijie2108"},"content":"                    + \"        }\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"naijie2108"},"content":"                    + \"      }, {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"yapjoonsiong"},"content":"                    + \"        \\\"letterGrade\\\" : \\\"NIL\\\",\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":132,"author":{"gitId":"naijie2108"},"content":"                    + \"        \\\"points\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"naijie2108"},"content":"                    + \"        \\\"moduleName\\\" : \\\"CS2132\\\",\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"naijie2108"},"content":"                    + \"        \\\"taskList\\\" : {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"naijie2108"},"content":"                    + \"          \\\"taskList\\\" : [ ],\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"naijie2108"},"content":"                    + \"          \\\"taskCount\\\" : 0\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"naijie2108"},"content":"                    + \"        },\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"naijie2108"},"content":"                    + \"        \\\"scheduleList\\\" : {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"naijie2108"},"content":"                    + \"          \\\"scheduleList\\\" : [ {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"yapjoonsiong"},"content":"                    + \"            \\\"startTime\\\" : \\\"1200\\\",\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"naijie2108"},"content":"                    + \"            \\\"location\\\" : \\\"E3\\\",\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"yapjoonsiong"},"content":"                    + \"            \\\"day\\\" : \\\"MON\\\",\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"naijie2108"},"content":"                    + \"            \\\"comment\\\" : \\\"Bad\\\"\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"naijie2108"},"content":"                    + \"          } ]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"naijie2108"},"content":"                    + \"        },\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"naijie2108"},"content":"                    + \"        \\\"credits\\\" : 0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"naijie2108"},"content":"                    + \"        \\\"gradableTaskList\\\" : {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"naijie2108"},"content":"                    + \"          \\\"taskList\\\" : [ ],\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"naijie2108"},"content":"                    + \"          \\\"taskCount\\\" : 0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"naijie2108"},"content":"                    + \"          \\\"gradableTaskList\\\" : [ ]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"naijie2108"},"content":"                    + \"        }\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"naijie2108"},"content":"                    + \"      } ]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"naijie2108"},"content":"                    + \"    }\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"naijie2108"},"content":"                    + \"  }, {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"credits\\\" : 0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"points\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"cap\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"semester\\\" : \\\"Y1S2\\\",\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"moduleList\\\" : {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"naijie2108"},"content":"                    + \"      \\\"moduleList\\\" : [ ]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"naijie2108"},"content":"                    + \"    }\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"naijie2108"},"content":"                    + \"  }, {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"credits\\\" : 0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"points\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"cap\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"semester\\\" : \\\"Y2S1\\\",\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"moduleList\\\" : {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"naijie2108"},"content":"                    + \"      \\\"moduleList\\\" : [ ]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"naijie2108"},"content":"                    + \"    }\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"naijie2108"},"content":"                    + \"  }, {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"credits\\\" : 0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"points\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"cap\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"semester\\\" : \\\"Y2S2\\\",\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"moduleList\\\" : {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"naijie2108"},"content":"                    + \"      \\\"moduleList\\\" : [ ]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"naijie2108"},"content":"                    + \"    }\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"naijie2108"},"content":"                    + \"  }, {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"credits\\\" : 0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"points\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":181,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"cap\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":182,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"semester\\\" : \\\"Y3S1\\\",\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":183,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"moduleList\\\" : {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":184,"author":{"gitId":"naijie2108"},"content":"                    + \"      \\\"moduleList\\\" : [ ]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"naijie2108"},"content":"                    + \"    }\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"naijie2108"},"content":"                    + \"  }, {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":187,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"credits\\\" : 0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":188,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"points\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":189,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"cap\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"semester\\\" : \\\"Y3S2\\\",\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"moduleList\\\" : {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"naijie2108"},"content":"                    + \"      \\\"moduleList\\\" : [ ]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":193,"author":{"gitId":"naijie2108"},"content":"                    + \"    }\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":194,"author":{"gitId":"naijie2108"},"content":"                    + \"  }, {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":195,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"credits\\\" : 0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"points\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":197,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"cap\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":198,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"semester\\\" : \\\"Y4S1\\\",\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":199,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"moduleList\\\" : {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":200,"author":{"gitId":"naijie2108"},"content":"                    + \"      \\\"moduleList\\\" : [ ]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":201,"author":{"gitId":"naijie2108"},"content":"                    + \"    }\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":202,"author":{"gitId":"naijie2108"},"content":"                    + \"  }, {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":203,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"credits\\\" : 0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":204,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"points\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":205,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"cap\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":206,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"semester\\\" : \\\"Y4S2\\\",\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":207,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"moduleList\\\" : {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":208,"author":{"gitId":"naijie2108"},"content":"                    + \"      \\\"moduleList\\\" : [ ]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":209,"author":{"gitId":"naijie2108"},"content":"                    + \"    }\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":210,"author":{"gitId":"naijie2108"},"content":"                    + \"  }, {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":211,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"credits\\\" : 0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":212,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"points\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":213,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"cap\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":214,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"semester\\\" : \\\"Y5S1\\\",\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":215,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"moduleList\\\" : {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":216,"author":{"gitId":"naijie2108"},"content":"                    + \"      \\\"moduleList\\\" : [ ]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":217,"author":{"gitId":"naijie2108"},"content":"                    + \"    }\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":218,"author":{"gitId":"naijie2108"},"content":"                    + \"  }, {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":219,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"credits\\\" : 0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":220,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"points\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":221,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"cap\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":222,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"semester\\\" : \\\"Y5S2\\\",\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":223,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"moduleList\\\" : {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":224,"author":{"gitId":"naijie2108"},"content":"                    + \"      \\\"moduleList\\\" : [ ]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":225,"author":{"gitId":"naijie2108"},"content":"                    + \"    }\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":226,"author":{"gitId":"naijie2108"},"content":"                    + \"  } ]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":227,"author":{"gitId":"naijie2108"},"content":"                    + \"}\";","lastModifiedDate":"2021-10-19"},{"lineNumber":228,"author":{"gitId":"naijie2108"},"content":"            String expectedOutput \u003d expectedString.replaceAll(\"\\n\", System.lineSeparator());","lastModifiedDate":"2021-10-19"},{"lineNumber":229,"author":{"gitId":"naijie2108"},"content":"            assertEquals(expectedOutput, fileContent);","lastModifiedDate":"2021-10-18"},{"lineNumber":230,"author":{"gitId":"naijie2108"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":231,"author":{"gitId":"naijie2108"},"content":"            fail(e.getMessage());","lastModifiedDate":"2021-10-07"},{"lineNumber":232,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":233,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":234,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"naijie2108"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"naijie2108"},"content":"    public void encodeSemesterList_emptySemesterList_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":237,"author":{"gitId":"naijie2108"},"content":"        SemesterList semesters \u003d new SemesterList();","lastModifiedDate":"2021-10-19"},{"lineNumber":238,"author":{"gitId":"naijie2108"},"content":"        StorageEncoder.encodeAndSaveSemesterListToJson(semesters);","lastModifiedDate":"2021-10-19"},{"lineNumber":239,"author":{"gitId":"naijie2108"},"content":"        assertTrue(Files.exists(FILE_PATH));","lastModifiedDate":"2021-10-12"},{"lineNumber":240,"author":{"gitId":"naijie2108"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":241,"author":{"gitId":"naijie2108"},"content":"            String fileContent \u003d Files.readString(FILE_PATH);","lastModifiedDate":"2021-10-12"},{"lineNumber":242,"author":{"gitId":"naijie2108"},"content":"            String expectedString \u003d \"{\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":243,"author":{"gitId":"naijie2108"},"content":"                    + \"  \\\"credits\\\" : 0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":244,"author":{"gitId":"naijie2108"},"content":"                    + \"  \\\"points\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":245,"author":{"gitId":"naijie2108"},"content":"                    + \"  \\\"cap\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":246,"author":{"gitId":"naijie2108"},"content":"                    + \"  \\\"accessedSemesterIndex\\\" : 0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":247,"author":{"gitId":"naijie2108"},"content":"                    + \"  \\\"semesterList\\\" : [ {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":248,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"credits\\\" : 0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":249,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"points\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":250,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"cap\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":251,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"semester\\\" : \\\"Y1S1\\\",\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":252,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"moduleList\\\" : {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":253,"author":{"gitId":"naijie2108"},"content":"                    + \"      \\\"moduleList\\\" : [ ]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":254,"author":{"gitId":"naijie2108"},"content":"                    + \"    }\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":255,"author":{"gitId":"naijie2108"},"content":"                    + \"  }, {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":256,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"credits\\\" : 0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":257,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"points\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":258,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"cap\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":259,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"semester\\\" : \\\"Y1S2\\\",\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":260,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"moduleList\\\" : {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":261,"author":{"gitId":"naijie2108"},"content":"                    + \"      \\\"moduleList\\\" : [ ]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":262,"author":{"gitId":"naijie2108"},"content":"                    + \"    }\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":263,"author":{"gitId":"naijie2108"},"content":"                    + \"  }, {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":264,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"credits\\\" : 0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":265,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"points\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":266,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"cap\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":267,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"semester\\\" : \\\"Y2S1\\\",\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":268,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"moduleList\\\" : {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":269,"author":{"gitId":"naijie2108"},"content":"                    + \"      \\\"moduleList\\\" : [ ]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":270,"author":{"gitId":"naijie2108"},"content":"                    + \"    }\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":271,"author":{"gitId":"naijie2108"},"content":"                    + \"  }, {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":272,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"credits\\\" : 0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":273,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"points\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":274,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"cap\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":275,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"semester\\\" : \\\"Y2S2\\\",\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":276,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"moduleList\\\" : {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":277,"author":{"gitId":"naijie2108"},"content":"                    + \"      \\\"moduleList\\\" : [ ]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":278,"author":{"gitId":"naijie2108"},"content":"                    + \"    }\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":279,"author":{"gitId":"naijie2108"},"content":"                    + \"  }, {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":280,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"credits\\\" : 0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":281,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"points\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":282,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"cap\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":283,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"semester\\\" : \\\"Y3S1\\\",\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":284,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"moduleList\\\" : {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":285,"author":{"gitId":"naijie2108"},"content":"                    + \"      \\\"moduleList\\\" : [ ]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":286,"author":{"gitId":"naijie2108"},"content":"                    + \"    }\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":287,"author":{"gitId":"naijie2108"},"content":"                    + \"  }, {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":288,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"credits\\\" : 0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":289,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"points\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":290,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"cap\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":291,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"semester\\\" : \\\"Y3S2\\\",\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":292,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"moduleList\\\" : {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":293,"author":{"gitId":"naijie2108"},"content":"                    + \"      \\\"moduleList\\\" : [ ]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":294,"author":{"gitId":"naijie2108"},"content":"                    + \"    }\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":295,"author":{"gitId":"naijie2108"},"content":"                    + \"  }, {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":296,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"credits\\\" : 0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":297,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"points\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":298,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"cap\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":299,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"semester\\\" : \\\"Y4S1\\\",\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":300,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"moduleList\\\" : {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":301,"author":{"gitId":"naijie2108"},"content":"                    + \"      \\\"moduleList\\\" : [ ]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":302,"author":{"gitId":"naijie2108"},"content":"                    + \"    }\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":303,"author":{"gitId":"naijie2108"},"content":"                    + \"  }, {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":304,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"credits\\\" : 0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":305,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"points\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":306,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"cap\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":307,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"semester\\\" : \\\"Y4S2\\\",\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":308,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"moduleList\\\" : {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":309,"author":{"gitId":"naijie2108"},"content":"                    + \"      \\\"moduleList\\\" : [ ]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":310,"author":{"gitId":"naijie2108"},"content":"                    + \"    }\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":311,"author":{"gitId":"naijie2108"},"content":"                    + \"  }, {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":312,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"credits\\\" : 0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":313,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"points\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":314,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"cap\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":315,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"semester\\\" : \\\"Y5S1\\\",\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":316,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"moduleList\\\" : {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":317,"author":{"gitId":"naijie2108"},"content":"                    + \"      \\\"moduleList\\\" : [ ]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":318,"author":{"gitId":"naijie2108"},"content":"                    + \"    }\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":319,"author":{"gitId":"naijie2108"},"content":"                    + \"  }, {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":320,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"credits\\\" : 0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":321,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"points\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":322,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"cap\\\" : 0.0,\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":323,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"semester\\\" : \\\"Y5S2\\\",\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":324,"author":{"gitId":"naijie2108"},"content":"                    + \"    \\\"moduleList\\\" : {\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":325,"author":{"gitId":"naijie2108"},"content":"                    + \"      \\\"moduleList\\\" : [ ]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":326,"author":{"gitId":"naijie2108"},"content":"                    + \"    }\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":327,"author":{"gitId":"naijie2108"},"content":"                    + \"  } ]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":328,"author":{"gitId":"naijie2108"},"content":"                    + \"}\";","lastModifiedDate":"2021-10-19"},{"lineNumber":329,"author":{"gitId":"naijie2108"},"content":"            String expectedOutput \u003d expectedString.replaceAll(\"\\n\", System.lineSeparator());","lastModifiedDate":"2021-10-19"},{"lineNumber":330,"author":{"gitId":"naijie2108"},"content":"            assertEquals(expectedOutput, fileContent);","lastModifiedDate":"2021-10-19"},{"lineNumber":331,"author":{"gitId":"naijie2108"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":332,"author":{"gitId":"naijie2108"},"content":"            fail(e.getMessage());","lastModifiedDate":"2021-10-12"},{"lineNumber":333,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":334,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":335,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":336,"author":{"gitId":"naijie2108"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":337,"author":{"gitId":"naijie2108"},"content":"    public void encodeModuleList_noFile_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":338,"author":{"gitId":"naijie2108"},"content":"        try {","lastModifiedDate":"2021-10-17"},{"lineNumber":339,"author":{"gitId":"naijie2108"},"content":"            if (Files.exists(DIRECTORY_PATH)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":340,"author":{"gitId":"naijie2108"},"content":"                Files.delete(FILE_PATH);","lastModifiedDate":"2021-10-17"},{"lineNumber":341,"author":{"gitId":"naijie2108"},"content":"                Files.delete(DIRECTORY_PATH);","lastModifiedDate":"2021-10-17"},{"lineNumber":342,"author":{"gitId":"naijie2108"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":343,"author":{"gitId":"naijie2108"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-17"},{"lineNumber":344,"author":{"gitId":"naijie2108"},"content":"            fail(e.getMessage());","lastModifiedDate":"2021-10-17"},{"lineNumber":345,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":346,"author":{"gitId":"naijie2108"},"content":"        SemesterList semesters \u003d new SemesterList();","lastModifiedDate":"2021-10-19"},{"lineNumber":347,"author":{"gitId":"naijie2108"},"content":"        StorageEncoder.encodeAndSaveSemesterListToJson(semesters);","lastModifiedDate":"2021-10-19"},{"lineNumber":348,"author":{"gitId":"naijie2108"},"content":"        assertTrue(Files.exists(FILE_PATH));","lastModifiedDate":"2021-10-17"},{"lineNumber":349,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":350,"author":{"gitId":"naijie2108"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"yapjoonsiong":42,"naijie2108":308}},{"path":"src/test/java/module/ModuleListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yapjoonsiong"},"content":"package module;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"import exceptions.NoCapExceptions;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"yapjoonsiong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"yapjoonsiong"},"content":"public class ModuleListTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"yapjoonsiong"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"yapjoonsiong"},"content":"    void get_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"yapjoonsiong"},"content":"        ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"yapjoonsiong"},"content":"        Module m \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"yapjoonsiong"},"content":"            m \u003d new Module(\"cs2113T\");","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"yapjoonsiong"},"content":"        moduleList.add(m);","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"yapjoonsiong"},"content":"        assertEquals(m, moduleList.get(0));","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"yapjoonsiong"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"yapjoonsiong"},"content":"    void find_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"yapjoonsiong"},"content":"        ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"yapjoonsiong"},"content":"        Module m \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"yapjoonsiong"},"content":"            m \u003d new Module(\"cs2113T\");","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"yapjoonsiong"},"content":"        moduleList.add(m);","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"yapjoonsiong"},"content":"        assertEquals(m, moduleList.find(\"cs2113T\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"yapjoonsiong"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"yapjoonsiong"},"content":"    void size_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"yapjoonsiong"},"content":"        ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"yapjoonsiong"},"content":"        Module m \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"yapjoonsiong"},"content":"            m \u003d new Module(\"cs2113T\");","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"yapjoonsiong"},"content":"        moduleList.add(m);","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"yapjoonsiong"},"content":"        assertEquals(1, moduleList.size());","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"DmitriYam"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"DmitriYam"},"content":"    void testDelete() {","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"yapjoonsiong"},"content":"        Module m1 \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"yapjoonsiong"},"content":"            m1 \u003d new Module(\"cs2113T\");","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"yapjoonsiong"},"content":"        Module m2 \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"yapjoonsiong"},"content":"            m2 \u003d new Module(\"Cs2040c\");","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"yapjoonsiong"},"content":"        Module m3 \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"yapjoonsiong"},"content":"            m3 \u003d new Module(\"ma1508E\");","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"yapjoonsiong"},"content":"        ModuleList moduleList1 \u003d new ModuleList();","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"DmitriYam"},"content":"        moduleList1.add(m1);","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"DmitriYam"},"content":"        moduleList1.add(m2);","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"DmitriYam"},"content":"        moduleList1.add(m3);","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"DmitriYam"},"content":"        moduleList1.delete(\"1\");","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"DmitriYam"},"content":"        ModuleList expectedList \u003d new ModuleList();","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"DmitriYam"},"content":"        expectedList.add(m2);","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"DmitriYam"},"content":"        expectedList.add(m3);","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"DmitriYam"},"content":"        assertEquals(expectedList.toString(), moduleList1.toString());","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"yapjoonsiong"},"content":"    /*","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"yapjoonsiong"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"yapjoonsiong"},"content":"    void toString_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"yapjoonsiong"},"content":"        ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"yapjoonsiong"},"content":"        Module m1 \u003d new Module(\"cs2113T\");","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"yapjoonsiong"},"content":"        moduleList.add(m1);","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"yapjoonsiong"},"content":"        Module m2 \u003d new Module(\"cs2040c\");","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"yapjoonsiong"},"content":"        moduleList.add(m2);","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"yapjoonsiong"},"content":"        Module m3 \u003d new Module(\"MA1508E\");","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"yapjoonsiong"},"content":"        moduleList.add(m3);","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"DmitriYam"},"content":"        String expected \u003d \"1\" + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"DmitriYam"},"content":"                + \"Module name: cs2113T\" + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"DmitriYam"},"content":"                + \"CREDITS: 0\" + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"DmitriYam"},"content":"                + \"--------------------------- \" + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"DmitriYam"},"content":"                + \"SCHEDULE: \" + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"DmitriYam"},"content":"                + \"--------------------------- \" + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"DmitriYam"},"content":"                + \"GRADE: null\" + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"DmitriYam"},"content":"                + \"TASKS: []\" + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"DmitriYam"},"content":"                + \"BREAKDOWN: \" + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"DmitriYam"},"content":"                + \"\" + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"DmitriYam"},"content":"                + \"2\" + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"DmitriYam"},"content":"                + \"Module name: cs2040c\" + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"DmitriYam"},"content":"                + \"CREDITS: 0\" + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"DmitriYam"},"content":"                + \"--------------------------- \" + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"DmitriYam"},"content":"                + \"SCHEDULE: \" + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"DmitriYam"},"content":"                + \"--------------------------- \" + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":105,"author":{"gitId":"DmitriYam"},"content":"                + \"GRADE: null\" + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"DmitriYam"},"content":"                + \"TASKS: []\" + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":107,"author":{"gitId":"DmitriYam"},"content":"                + \"BREAKDOWN: \" + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":108,"author":{"gitId":"DmitriYam"},"content":"                + \"\" + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"DmitriYam"},"content":"                + \"3\" + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"DmitriYam"},"content":"                + \"Module name: MA1508E\" + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"DmitriYam"},"content":"                + \"CREDITS: 0\" + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":112,"author":{"gitId":"DmitriYam"},"content":"                + \"--------------------------- \" + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":113,"author":{"gitId":"DmitriYam"},"content":"                + \"SCHEDULE: \" + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"DmitriYam"},"content":"                + \"--------------------------- \" + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"DmitriYam"},"content":"                + \"GRADE: null\" + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"DmitriYam"},"content":"                + \"TASKS: []\" + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"DmitriYam"},"content":"                + \"BREAKDOWN: \" + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"DmitriYam"},"content":"                + System.lineSeparator();","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"yapjoonsiong"},"content":"        assertEquals(expected, moduleList.toString());","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"yapjoonsiong"},"content":"    */","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"yapjoonsiong"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"yapjoonsiong":79,"DmitriYam":43}},{"path":"src/test/java/module/ModuleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DmitriYam"},"content":"package module;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"import command.NoCap;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"yapjoonsiong"},"content":"import exceptions.NoCapExceptions;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"yapjoonsiong"},"content":"import schedule.Schedule;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"import semester.SemesterList;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"yzhedwin"},"content":"import task.TaskList;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"DmitriYam"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"jiexiong-zeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"DmitriYam"},"content":"class ModuleTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"DmitriYam"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"DmitriYam"},"content":"    void testAddGrade() {","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"yapjoonsiong"},"content":"        Module m1 \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"yapjoonsiong"},"content":"            m1 \u003d new Module(\"cs2113T\");","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"yapjoonsiong"},"content":"        Module m2 \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"yapjoonsiong"},"content":"            m2 \u003d new Module(\"cs2040c\");","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"yapjoonsiong"},"content":"        Module m3 \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"yapjoonsiong"},"content":"            m3 \u003d new Module(\"ma1508E\");","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"DmitriYam"},"content":"        m1.addGrade(\"A+\");","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"DmitriYam"},"content":"        m2.addGrade(\"A-\");","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"DmitriYam"},"content":"        m3.addGrade(\"B\");","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"DmitriYam"},"content":"        assertEquals(\"A+\", m1.letterGrade);","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"DmitriYam"},"content":"        assertEquals(\"A-\", m2.letterGrade);","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"DmitriYam"},"content":"        assertEquals(\"B\", m3.letterGrade);","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"DmitriYam"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"DmitriYam"},"content":"    void testAddCredit() {","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"yapjoonsiong"},"content":"        Module m1 \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"yapjoonsiong"},"content":"            m1 \u003d new Module(\"cs2113T\");","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"yapjoonsiong"},"content":"        Module m2 \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"yapjoonsiong"},"content":"            m2 \u003d new Module(\"cs2040c\");","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"yapjoonsiong"},"content":"        Module m3 \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"yapjoonsiong"},"content":"            m3 \u003d new Module(\"ma1508E\");","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"DmitriYam"},"content":"            m1.addCredits(2);","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"DmitriYam"},"content":"            m2.addCredits(4);","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"DmitriYam"},"content":"            m3.addCredits(6);","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"DmitriYam"},"content":"        assertEquals(2, m1.credits);","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"DmitriYam"},"content":"        assertEquals(4, m2.credits);","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"DmitriYam"},"content":"        assertEquals(6, m3.credits);","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"DmitriYam"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"DmitriYam"},"content":"    void getCredits() {","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"yapjoonsiong"},"content":"        Module m1 \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"yapjoonsiong"},"content":"            m1 \u003d new Module(\"cs2113T\");","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"yapjoonsiong"},"content":"        Module m2 \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"yapjoonsiong"},"content":"            m2 \u003d new Module(\"cs2040c\");","lastModifiedDate":"2021-11-02"},{"lineNumber":93,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":94,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":96,"author":{"gitId":"yapjoonsiong"},"content":"        Module m3 \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"yapjoonsiong"},"content":"            m3 \u003d new Module(\"ma1508E\");","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":100,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":101,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":102,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":103,"author":{"gitId":"DmitriYam"},"content":"            m1.addCredits(2);","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":105,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":106,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":107,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":108,"author":{"gitId":"DmitriYam"},"content":"            m2.addCredits(4);","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":110,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":111,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":112,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":113,"author":{"gitId":"DmitriYam"},"content":"            m3.addCredits(6);","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":116,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":117,"author":{"gitId":"DmitriYam"},"content":"        assertEquals(2, m1.getCredits());","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"DmitriYam"},"content":"        assertEquals(4, m2.getCredits());","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"DmitriYam"},"content":"        assertEquals(6, m3.getCredits());","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"DmitriYam"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"DmitriYam"},"content":"    void getLetterGrade() {","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"yapjoonsiong"},"content":"        Module m1 \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":125,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":126,"author":{"gitId":"yapjoonsiong"},"content":"            m1 \u003d new Module(\"cs2113T\");","lastModifiedDate":"2021-11-02"},{"lineNumber":127,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":128,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":129,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":130,"author":{"gitId":"yapjoonsiong"},"content":"        Module m2 \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":131,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":132,"author":{"gitId":"yapjoonsiong"},"content":"            m2 \u003d new Module(\"cs2040c\");","lastModifiedDate":"2021-11-02"},{"lineNumber":133,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":134,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":135,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":136,"author":{"gitId":"yapjoonsiong"},"content":"        Module m3 \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":137,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":138,"author":{"gitId":"yapjoonsiong"},"content":"            m3 \u003d new Module(\"ma1508E\");","lastModifiedDate":"2021-11-02"},{"lineNumber":139,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":140,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":141,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":142,"author":{"gitId":"DmitriYam"},"content":"        m1.addGrade(\"A+\");","lastModifiedDate":"2021-10-28"},{"lineNumber":143,"author":{"gitId":"DmitriYam"},"content":"        m2.addGrade(\"A-\");","lastModifiedDate":"2021-10-28"},{"lineNumber":144,"author":{"gitId":"DmitriYam"},"content":"        m3.addGrade(\"B\");","lastModifiedDate":"2021-10-28"},{"lineNumber":145,"author":{"gitId":"DmitriYam"},"content":"        assertEquals(\"A+\", m1.getLetterGrade());","lastModifiedDate":"2021-10-28"},{"lineNumber":146,"author":{"gitId":"DmitriYam"},"content":"        assertEquals(\"A-\", m2.getLetterGrade());","lastModifiedDate":"2021-10-28"},{"lineNumber":147,"author":{"gitId":"DmitriYam"},"content":"        assertEquals(\"B\", m3.getLetterGrade());","lastModifiedDate":"2021-10-28"},{"lineNumber":148,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"DmitriYam"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"DmitriYam"},"content":"    void getModuleName() {","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"yapjoonsiong"},"content":"        Module m1 \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":153,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":154,"author":{"gitId":"yapjoonsiong"},"content":"            m1 \u003d new Module(\"cs2113T\");","lastModifiedDate":"2021-11-02"},{"lineNumber":155,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":156,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":157,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":158,"author":{"gitId":"yapjoonsiong"},"content":"        Module m2 \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":159,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":160,"author":{"gitId":"yapjoonsiong"},"content":"            m2 \u003d new Module(\"cs2040c\");","lastModifiedDate":"2021-11-02"},{"lineNumber":161,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":162,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":163,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":164,"author":{"gitId":"yapjoonsiong"},"content":"        Module m3 \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":165,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":166,"author":{"gitId":"yapjoonsiong"},"content":"            m3 \u003d new Module(\"ma1508E\");","lastModifiedDate":"2021-11-02"},{"lineNumber":167,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":168,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":169,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":170,"author":{"gitId":"DmitriYam"},"content":"        assertEquals(\"cs2113T\", m1.getModuleName());","lastModifiedDate":"2021-10-28"},{"lineNumber":171,"author":{"gitId":"DmitriYam"},"content":"        assertEquals(\"cs2040c\", m2.getModuleName());","lastModifiedDate":"2021-10-28"},{"lineNumber":172,"author":{"gitId":"DmitriYam"},"content":"        assertEquals(\"ma1508E\", m3.getModuleName());","lastModifiedDate":"2021-10-28"},{"lineNumber":173,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"DmitriYam"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"DmitriYam"},"content":"    void getTaskList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"yapjoonsiong"},"content":"        Module m \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":178,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":179,"author":{"gitId":"yapjoonsiong"},"content":"            m \u003d new Module(\"cs2113T\");","lastModifiedDate":"2021-11-02"},{"lineNumber":180,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":181,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":182,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":183,"author":{"gitId":"DmitriYam"},"content":"        m.addTask(\"read /by 1800\");","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"DmitriYam"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"yzhedwin"},"content":"        taskList.addTask(\"cs2113T\", \"read /by 1800\");","lastModifiedDate":"2021-10-11"},{"lineNumber":186,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":187,"author":{"gitId":"DmitriYam"},"content":"        assertEquals(taskList.toString(), m.getTaskList().toString());","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":189,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"DmitriYam"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"DmitriYam"},"content":"    void getScheduleList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"yapjoonsiong"},"content":"        NoCap.moduleList \u003d new ModuleList();","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"yapjoonsiong"},"content":"        ModuleList moduleList \u003d NoCap.moduleList;","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"yapjoonsiong"},"content":"        Module m \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":195,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":196,"author":{"gitId":"yapjoonsiong"},"content":"            m \u003d new Module(\"cs2113T\");","lastModifiedDate":"2021-11-02"},{"lineNumber":197,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":198,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":199,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":200,"author":{"gitId":"yapjoonsiong"},"content":"        moduleList.add(m);","lastModifiedDate":"2021-10-25"},{"lineNumber":201,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":202,"author":{"gitId":"DmitriYam"},"content":"            m.addClass(\"WED/0800/E1-01/tut\");","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":204,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-23"},{"lineNumber":205,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":206,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":207,"author":{"gitId":"DmitriYam"},"content":"            assertEquals(new Schedule(\"WED\", \"0800\", \"E1-01\", \"tut\").toString(), m.get(0).toString());","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":209,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-23"},{"lineNumber":210,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":211,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":212,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":213,"author":{"gitId":"DmitriYam"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":214,"author":{"gitId":"DmitriYam"},"content":"    void size() {","lastModifiedDate":"2021-10-16"},{"lineNumber":215,"author":{"gitId":"yapjoonsiong"},"content":"        NoCap.moduleList \u003d new ModuleList();","lastModifiedDate":"2021-10-25"},{"lineNumber":216,"author":{"gitId":"yapjoonsiong"},"content":"        ModuleList moduleList \u003d NoCap.moduleList;","lastModifiedDate":"2021-10-25"},{"lineNumber":217,"author":{"gitId":"yapjoonsiong"},"content":"        Module m \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":218,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":219,"author":{"gitId":"yapjoonsiong"},"content":"            m \u003d new Module(\"cs2113T\");","lastModifiedDate":"2021-11-02"},{"lineNumber":220,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":221,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":222,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":223,"author":{"gitId":"yapjoonsiong"},"content":"        moduleList.add(m);","lastModifiedDate":"2021-10-25"},{"lineNumber":224,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":225,"author":{"gitId":"DmitriYam"},"content":"            m.addClass(\"WED/0800/E1-01/tut\");","lastModifiedDate":"2021-10-16"},{"lineNumber":226,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":227,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-23"},{"lineNumber":228,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":229,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":230,"author":{"gitId":"DmitriYam"},"content":"            m.addClass(\"TUE/0800/E1-01/lect\");","lastModifiedDate":"2021-10-16"},{"lineNumber":231,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":232,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-23"},{"lineNumber":233,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":234,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":235,"author":{"gitId":"DmitriYam"},"content":"            m.addClass(\"MON/1000/E1-01/lect\");","lastModifiedDate":"2021-10-16"},{"lineNumber":236,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":237,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-23"},{"lineNumber":238,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":239,"author":{"gitId":"DmitriYam"},"content":"        assertEquals(3, m.size());","lastModifiedDate":"2021-10-16"},{"lineNumber":240,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":241,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":242,"author":{"gitId":"DmitriYam"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":243,"author":{"gitId":"DmitriYam"},"content":"    void testToString() {","lastModifiedDate":"2021-10-17"},{"lineNumber":244,"author":{"gitId":"yapjoonsiong"},"content":"        NoCap.moduleList \u003d new ModuleList();","lastModifiedDate":"2021-10-25"},{"lineNumber":245,"author":{"gitId":"yapjoonsiong"},"content":"        ModuleList moduleList \u003d NoCap.moduleList;","lastModifiedDate":"2021-10-25"},{"lineNumber":246,"author":{"gitId":"yapjoonsiong"},"content":"        Module m \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":247,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":248,"author":{"gitId":"yapjoonsiong"},"content":"            m \u003d new Module(\"cs2113T\");","lastModifiedDate":"2021-11-02"},{"lineNumber":249,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":250,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":251,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":252,"author":{"gitId":"yapjoonsiong"},"content":"        moduleList.add(m);","lastModifiedDate":"2021-10-25"},{"lineNumber":253,"author":{"gitId":"DmitriYam"},"content":"        m.addGrade(\"A+\");","lastModifiedDate":"2021-10-17"},{"lineNumber":254,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":255,"author":{"gitId":"DmitriYam"},"content":"            m.addCredits(4);","lastModifiedDate":"2021-10-17"},{"lineNumber":256,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":257,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":258,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":259,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":260,"author":{"gitId":"DmitriYam"},"content":"            m.addClass(\"WED/0800/E1-01/tut\");","lastModifiedDate":"2021-10-17"},{"lineNumber":261,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":262,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-23"},{"lineNumber":263,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":264,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":265,"author":{"gitId":"DmitriYam"},"content":"            m.addClass(\"TUE/0800/E1-01/lect\");","lastModifiedDate":"2021-10-17"},{"lineNumber":266,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":267,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-23"},{"lineNumber":268,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":269,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":270,"author":{"gitId":"DmitriYam"},"content":"            m.addClass(\"MON/1000/E1-01/lect\");","lastModifiedDate":"2021-10-17"},{"lineNumber":271,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":272,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-23"},{"lineNumber":273,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":274,"author":{"gitId":"DmitriYam"},"content":"        m.addTask(\"read /by 11/11/2021 1900\");","lastModifiedDate":"2021-10-17"},{"lineNumber":275,"author":{"gitId":"DmitriYam"},"content":"        m.addTask(\"do tutorial /by 12/11/2021 2000\");","lastModifiedDate":"2021-10-17"},{"lineNumber":276,"author":{"gitId":"DmitriYam"},"content":"        m.addGradableTask(\"Assignment /by 12/12/2021 1600 /w 30\");","lastModifiedDate":"2021-10-17"},{"lineNumber":277,"author":{"gitId":"DmitriYam"},"content":"        m.addGradableTask(\"Finals /by 15/12/2021 1600 /w 50\");","lastModifiedDate":"2021-10-17"},{"lineNumber":278,"author":{"gitId":"DmitriYam"},"content":"        String exp \u003d \"Module name: cs2113T\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":279,"author":{"gitId":"DmitriYam"},"content":"                + \"CREDITS: 4\\n\" + \"--------------------------- \\n\" + \"SCHEDULE: \\n\" + \"1.\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":280,"author":{"gitId":"DmitriYam"},"content":"                + \"Day: WED\\n\" + \"Start Time: 0800\\n\" + \"Location: E1-01\\n\" + \"Comments: tut\\n\" + \"2.\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":281,"author":{"gitId":"DmitriYam"},"content":"                + \"Day: TUE\\n\" + \"Start Time: 0800\\n\" + \"Location: E1-01\\n\" + \"Comments: lect\\n\" + \"3.\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":282,"author":{"gitId":"DmitriYam"},"content":"                + \"Day: MON\\n\" + \"Start Time: 1000\\n\" + \"Location: E1-01\\n\" + \"Comments: lect\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":283,"author":{"gitId":"DmitriYam"},"content":"                + \"--------------------------- \\n\" + \"GRADE: A+\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":284,"author":{"gitId":"DmitriYam"},"content":"                + \"TASKS: [[ ] read by: 11 Nov 2021 07:00 PM, [ ] do tutorial by: 12 Nov 2021 08:00 PM]\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":285,"author":{"gitId":"DmitriYam"},"content":"                + \"BREAKDOWN: \\n1 \" + \"Assignment by: 12 Dec 2021 04:00 PM Weightage 30% [ ]\\r\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":286,"author":{"gitId":"DmitriYam"},"content":"                + \"2 \" + \"Finals by: 15 Dec 2021 04:00 PM Weightage 50% [ ]\\r\\n\";","lastModifiedDate":"2021-10-25"},{"lineNumber":287,"author":{"gitId":"DmitriYam"},"content":"        assertEquals(exp, m.toString());","lastModifiedDate":"2021-10-17"},{"lineNumber":288,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":289,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":290,"author":{"gitId":"DmitriYam"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"yapjoonsiong":187,"DmitriYam":100,"yzhedwin":2,"jiexiong-zeng":1}},{"path":"src/test/java/schedule/ScheduleListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yapjoonsiong"},"content":"package schedule;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"import command.NoCap;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"yapjoonsiong"},"content":"import exceptions.NoCapExceptions;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"yapjoonsiong"},"content":"import module.Module;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"import module.ModuleList;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"yapjoonsiong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"yapjoonsiong"},"content":"public class ScheduleListTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"yapjoonsiong"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"yapjoonsiong"},"content":"    void size_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"yapjoonsiong"},"content":"        ScheduleList s \u003d new ScheduleList();","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"yapjoonsiong"},"content":"            s.addClass(new Schedule(\"WED\", \"0800\", \"E1-01\", \"tutorial\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"yapjoonsiong"},"content":"            s.addClass(new Schedule(\"MON\", \"0800\", \"e-learning\", \"tutorial\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"yapjoonsiong"},"content":"        assertEquals(2, s.size());","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"yapjoonsiong"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"yapjoonsiong"},"content":"    void getSchedule_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"yapjoonsiong"},"content":"        NoCap.moduleList \u003d new ModuleList();","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"yapjoonsiong"},"content":"        ModuleList moduleList \u003d NoCap.moduleList;","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"yapjoonsiong"},"content":"        Module m \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"yapjoonsiong"},"content":"            m \u003d new Module(\"cs2113T\");","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"yapjoonsiong"},"content":"        moduleList.add(m);","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"yapjoonsiong"},"content":"        Schedule expected \u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"yapjoonsiong"},"content":"            expected \u003d new Schedule(\"WED\", \"0800\", \"E1-01\", \"tutorial\");","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"yapjoonsiong"},"content":"        m.addClass(expected);","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"yapjoonsiong"},"content":"            m.addClass(new Schedule(\"MON\", \"0800\", \"e-learning\", \"tutorial\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"yapjoonsiong"},"content":"        assertEquals(expected, m.getScheduleList().getSchedule(0));","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"yapjoonsiong"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"yapjoonsiong"},"content":"    void getScheduleList_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"yapjoonsiong"},"content":"        Module m \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"yapjoonsiong"},"content":"            m \u003d new Module(\"cs2113T\");","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"yapjoonsiong"},"content":"        ScheduleList expected \u003d new ScheduleList();","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"yapjoonsiong"},"content":"        m.setScheduleList(expected);","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"yapjoonsiong"},"content":"        assertEquals(expected, m.getScheduleList());","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"DmitriYam"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"DmitriYam"},"content":"    void testDelete() throws NoCapExceptions {","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"DmitriYam"},"content":"        ScheduleList scheduleList1 \u003d new ScheduleList();","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"DmitriYam"},"content":"        Schedule s1 \u003d new Schedule(\"WED\", \"0800\", \"E1-01\", \"tutorial\");","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"DmitriYam"},"content":"        Schedule s2 \u003d new Schedule(\"MON\", \"1000\", \"ZOOM\", \"lecture\");","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"DmitriYam"},"content":"        Schedule s3 \u003d new Schedule(\"TUE\", \"1500\", \"ARC\", \"lab\");","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"DmitriYam"},"content":"        scheduleList1.addClass(s1);","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"DmitriYam"},"content":"        scheduleList1.addClass(s2);","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"DmitriYam"},"content":"        scheduleList1.addClass(s3);","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"DmitriYam"},"content":"        scheduleList1.deleteClass(\"1\");","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"DmitriYam"},"content":"        ScheduleList scheduleList2 \u003d new ScheduleList();","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"DmitriYam"},"content":"        scheduleList2.addClass(s2);","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"DmitriYam"},"content":"        scheduleList2.addClass(s3);","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"DmitriYam"},"content":"        assertEquals(scheduleList1.toString(), scheduleList2.toString());","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"yapjoonsiong"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"yapjoonsiong":69,"DmitriYam":16}},{"path":"src/test/java/schedule/ScheduleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yapjoonsiong"},"content":"package schedule;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"import command.NoCap;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"yapjoonsiong"},"content":"import exceptions.NoCapExceptions;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"yapjoonsiong"},"content":"import module.Module;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"import module.ModuleList;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"yapjoonsiong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"yapjoonsiong"},"content":"public class ScheduleTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"yapjoonsiong"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"yapjoonsiong"},"content":"    void getLocation_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"yapjoonsiong"},"content":"        Schedule s \u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"yapjoonsiong"},"content":"            s \u003d new Schedule(\"WED\", \"0800\", \"E1-01\", \"tutorial\");","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"yapjoonsiong"},"content":"        assertEquals(\"E1-01\", s.getLocation());","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"yapjoonsiong"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"yapjoonsiong"},"content":"    void getComment_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"yapjoonsiong"},"content":"        Schedule s \u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"yapjoonsiong"},"content":"            s \u003d new Schedule(\"WED\", \"0800\", \"E1-01\", \"tutorial\");","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"yapjoonsiong"},"content":"        assert s !\u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"yapjoonsiong"},"content":"        assertEquals(\"tutorial\", s.getComment());","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"yapjoonsiong"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"yapjoonsiong"},"content":"    void getDay_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"yapjoonsiong"},"content":"        Schedule s \u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"yapjoonsiong"},"content":"            s \u003d new Schedule(\"WED\", \"0800\", \"E1-01\", \"tutorial\");","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"yapjoonsiong"},"content":"        assert s !\u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"yapjoonsiong"},"content":"        assertEquals(\"WED\", s.getDay());","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"yapjoonsiong"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"yapjoonsiong"},"content":"    void getStartTime_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"yapjoonsiong"},"content":"        Schedule s \u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"yapjoonsiong"},"content":"            s \u003d new Schedule(\"WED\", \"0800\", \"E1-01\", \"tutorial\");","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"yapjoonsiong"},"content":"        assert s !\u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"yapjoonsiong"},"content":"        assertEquals(\"0800\", s.getStartTime());","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"yapjoonsiong"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"yapjoonsiong":59}},{"path":"src/test/java/semester/SemesterListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yapjoonsiong"},"content":"package semester;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"import command.NoCap;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"yapjoonsiong"},"content":"import exceptions.NoCapExceptions;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"yapjoonsiong"},"content":"import module.Module;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"import module.ModuleList;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"yapjoonsiong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"yapjoonsiong"},"content":"public class SemesterListTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"yapjoonsiong"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"yapjoonsiong"},"content":"    void getCredits_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"yapjoonsiong"},"content":"        NoCap.semesterList \u003d new SemesterList();","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(0).getModuleList().add(new Module(\"CS2040C\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(0).getModuleList().get(0).addCredits(4);","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(0).updateCap();","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(1).getModuleList().add(new Module(\"CS2113T\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(1).getModuleList().get(0).addCredits(4);","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(1).updateCap();","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.updateCap();","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"yapjoonsiong"},"content":"        assertEquals(8, NoCap.semesterList.getCredits());","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"yapjoonsiong"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"yapjoonsiong"},"content":"    void getPoints_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"yapjoonsiong"},"content":"        NoCap.semesterList \u003d new SemesterList();","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(0).getModuleList().add(new Module(\"CS2040C\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(0).getModuleList().get(0).addCredits(4);","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"yapjoonsiong"},"content":"        NoCap.semesterList.get(0).getModuleList().get(0).addGrade(\"A\");","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(0).updateCap();","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(1).getModuleList().add(new Module(\"CS2113T\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":79,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(1).getModuleList().get(0).addCredits(4);","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"yapjoonsiong"},"content":"        NoCap.semesterList.get(1).getModuleList().get(0).addGrade(\"A\");","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(1).updateCap();","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.updateCap();","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":93,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":94,"author":{"gitId":"yapjoonsiong"},"content":"        assertEquals(40, NoCap.semesterList.getPoints());","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"yapjoonsiong"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"yapjoonsiong"},"content":"    void getCap_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"yapjoonsiong"},"content":"        NoCap.semesterList \u003d new SemesterList();","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":101,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(0).getModuleList().add(new Module(\"CS2040C\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":103,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":104,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":105,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":106,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(0).getModuleList().get(0).addCredits(4);","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":108,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":109,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":110,"author":{"gitId":"yapjoonsiong"},"content":"        NoCap.semesterList.get(0).getModuleList().get(0).addGrade(\"A\");","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":112,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(0).updateCap();","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":114,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":116,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":117,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(1).getModuleList().add(new Module(\"CS2113T\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":120,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":121,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":122,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(1).getModuleList().get(0).addCredits(4);","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":124,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":125,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":126,"author":{"gitId":"yapjoonsiong"},"content":"        NoCap.semesterList.get(1).getModuleList().get(0).addGrade(\"B\");","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":128,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(1).updateCap();","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":130,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":131,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":132,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":133,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.updateCap();","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":135,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":136,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":137,"author":{"gitId":"yapjoonsiong"},"content":"        assertEquals(4.25, NoCap.semesterList.getCap());","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"yapjoonsiong"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"yapjoonsiong"},"content":"    void getSemesterList_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"yapjoonsiong"},"content":"        SemesterList expected \u003d new SemesterList();","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"yapjoonsiong"},"content":"        NoCap.semesterList \u003d expected;","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"yapjoonsiong"},"content":"        assertEquals(expected.getSemesterList(), NoCap.semesterList.getSemesterList());","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"yapjoonsiong"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"yapjoonsiong"},"content":"    void getAccessedSemesterIndex_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"yapjoonsiong"},"content":"        NoCap.semesterList \u003d new SemesterList();","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"yapjoonsiong"},"content":"        NoCap.semesterList.setAccessedSemesterIndex(1);","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"yapjoonsiong"},"content":"        assertEquals(1, NoCap.semesterList.getAccessedSemesterIndex());","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"yapjoonsiong"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"yapjoonsiong"},"content":"    void extractAccessedSemester_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"yapjoonsiong"},"content":"        SemesterList expected \u003d new SemesterList();","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"yapjoonsiong"},"content":"        NoCap.semesterList \u003d expected;","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"yapjoonsiong"},"content":"        NoCap.semesterList.setAccessedSemesterIndex(1);","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"yapjoonsiong"},"content":"        assertEquals(expected.get(1), NoCap.semesterList.extractAccessedSemester());","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"yapjoonsiong"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"yapjoonsiong":161}},{"path":"src/test/java/semester/SemesterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yapjoonsiong"},"content":"package semester;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"import command.NoCap;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"yapjoonsiong"},"content":"import exceptions.NoCapExceptions;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"yapjoonsiong"},"content":"import module.Module;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"yapjoonsiong"},"content":"import module.ModuleList;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"yapjoonsiong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"yapjoonsiong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"yapjoonsiong"},"content":"public class SemesterTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"yapjoonsiong"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"yapjoonsiong"},"content":"    void getCredits_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"yapjoonsiong"},"content":"        NoCap.semesterList \u003d new SemesterList();","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(0).getModuleList().add(new Module(\"CS2040C\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(0).getModuleList().get(0).addCredits(4);","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(0).updateCap();","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(0).getModuleList().add(new Module(\"CS2113T\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(0).getModuleList().get(1).addCredits(4);","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(0).updateCap();","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"yapjoonsiong"},"content":"        assertEquals(8, NoCap.semesterList.get(0).getCredits());","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"yapjoonsiong"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"yapjoonsiong"},"content":"    void getPoints_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"yapjoonsiong"},"content":"        NoCap.semesterList \u003d new SemesterList();","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(0).getModuleList().add(new Module(\"CS2040C\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(0).getModuleList().get(0).addCredits(4);","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"yapjoonsiong"},"content":"        NoCap.semesterList.get(0).getModuleList().get(0).addGrade(\"A\");","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(0).updateCap();","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(0).getModuleList().add(new Module(\"CS2113T\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(0).getModuleList().get(1).addCredits(4);","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"yapjoonsiong"},"content":"        NoCap.semesterList.get(0).getModuleList().get(1).addGrade(\"A\");","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(0).updateCap();","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"yapjoonsiong"},"content":"        assertEquals(40, NoCap.semesterList.get(0).getPoints());","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"yapjoonsiong"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"yapjoonsiong"},"content":"    void getCap_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"yapjoonsiong"},"content":"        NoCap.semesterList \u003d new SemesterList();","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(0).getModuleList().add(new Module(\"CS2040C\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":93,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":94,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":96,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(0).getModuleList().get(0).addCredits(4);","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":100,"author":{"gitId":"yapjoonsiong"},"content":"        NoCap.semesterList.get(0).getModuleList().get(0).addGrade(\"A\");","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":102,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(0).updateCap();","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":104,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":105,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":106,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":107,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(0).getModuleList().add(new Module(\"CS2113T\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":109,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":110,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":111,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":112,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(0).getModuleList().get(1).addCredits(4);","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":114,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":116,"author":{"gitId":"yapjoonsiong"},"content":"        NoCap.semesterList.get(0).getModuleList().get(1).addGrade(\"B\");","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":118,"author":{"gitId":"yapjoonsiong"},"content":"            NoCap.semesterList.get(0).updateCap();","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":120,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":121,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":122,"author":{"gitId":"yapjoonsiong"},"content":"        assertEquals(4.25, NoCap.semesterList.get(0).getCap());","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"yapjoonsiong"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"yapjoonsiong"},"content":"    void getModuleList_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"yapjoonsiong"},"content":"        ModuleList expected \u003d new ModuleList();","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"yapjoonsiong"},"content":"        Semester s \u003d new Semester();","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"yapjoonsiong"},"content":"        s.moduleList \u003d expected;","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"yapjoonsiong"},"content":"        assertEquals(expected, s.getModuleList());","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"yapjoonsiong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"yapjoonsiong"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"yapjoonsiong"},"content":"    void getSemester_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"yapjoonsiong"},"content":"        Semester s \u003d new Semester(\"Y1S1\");","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"yapjoonsiong"},"content":"        assertEquals(\"Y1S1\", s.getSemester());","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"yapjoonsiong"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"yapjoonsiong"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"yapjoonsiong":138}},{"path":"src/test/java/task/GradableTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DmitriYam"},"content":"package task;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"DmitriYam"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"yzhedwin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"yzhedwin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"DmitriYam"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"yzhedwin"},"content":"class GradableTaskListTest extends TaskListTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"DmitriYam"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"DmitriYam"},"content":"    void getGradableTaskList() {","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"DmitriYam"},"content":"        GradableTaskList gradableTaskList \u003d new GradableTaskList();","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"DmitriYam"},"content":"        gradableTaskList.addGradableTask(\"cs1010\", \"Assignment /by 12/12/2021 1600 /w 30\");","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"DmitriYam"},"content":"        gradableTaskList.addGradableTask(\"cs1010\", \"Finals /by 12/12/2021 1600 /w 50\");","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"DmitriYam"},"content":"        GradableTask g1 \u003d new GradableTask(\"Assignment\", \"12/12/2021 1600\", 30);","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"DmitriYam"},"content":"        GradableTask g2 \u003d new GradableTask(\"Finals\", \"12/12/2021 1600\", 50);","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"DmitriYam"},"content":"        assertEquals(g1.toString(), gradableTaskList.getGradableTask(0).toString());","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"DmitriYam"},"content":"        assertEquals(g2.toString(), gradableTaskList.getGradableTask(1).toString());","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"DmitriYam"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"DmitriYam"},"content":"    void testToString() {","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"DmitriYam"},"content":"        GradableTaskList gradableTaskList \u003d new GradableTaskList();","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"DmitriYam"},"content":"        gradableTaskList.addGradableTask(\"cs1010\", \"Assignment /by 12/12/2021 1600 /w 30\");","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"DmitriYam"},"content":"        gradableTaskList.addGradableTask(\"cs1010\", \"Finals /by 12/12/2021 1600 /w 50\");","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"DmitriYam"},"content":"        String expected \u003d \"1 Assignment by: 12 Dec 2021 04:00 PM Weightage 30% [ ]\\r\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"DmitriYam"},"content":"                + \"2 Finals by: 12 Dec 2021 04:00 PM Weightage 50% [ ]\\r\\n\";","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"DmitriYam"},"content":"        assertEquals(expected, gradableTaskList.toString());","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"DmitriYam"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"DmitriYam"},"content":"    void testGet() {","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"DmitriYam"},"content":"        GradableTaskList gradableTaskList \u003d new GradableTaskList();","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"DmitriYam"},"content":"        gradableTaskList.addGradableTask(\"cs1010\", \"Assignment /by 12/12/2021 1600 /w 30\");","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"DmitriYam"},"content":"        gradableTaskList.addGradableTask(\"cs1010\", \"Finals /by 12/12/2021 1600 /w 50\");","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"naijie2108"},"content":"        assertEquals(\"Assignment by: 12 Dec 2021 04:00 PM Weightage 30% [ ]\",","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"naijie2108"},"content":"                gradableTaskList.getGradableTask(0).toString());","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"DmitriYam"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"naijie2108":2,"DmitriYam":36,"yzhedwin":4}},{"path":"src/test/java/task/GradableTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DmitriYam"},"content":"package task;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"DmitriYam"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"DmitriYam"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"DmitriYam"},"content":"class GradableTaskTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"DmitriYam"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"DmitriYam"},"content":"    void getWeightage() {","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"DmitriYam"},"content":"        GradableTask gradableTask \u003d new GradableTask(\"Assignment\", \"23/11/2012 1600\", 30);","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"DmitriYam"},"content":"        assertEquals(30, gradableTask.getWeightage());","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"DmitriYam"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"DmitriYam"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"DmitriYam"},"content":"    void testToString() {","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"DmitriYam"},"content":"        GradableTask gradableTask \u003d new GradableTask(\"Assignment\", \"23/11/2012 1600\", 30);","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"DmitriYam"},"content":"        String expected \u003d \"Assignment by: 23 Nov 2012 04:00 PM Weightage 30% [ ]\";","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"DmitriYam"},"content":"        assertEquals(expected, gradableTask.toString());","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"DmitriYam"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"DmitriYam"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"naijie2108":1,"DmitriYam":20}},{"path":"src/test/java/task/OverallTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package task;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"yapjoonsiong"},"content":"import exceptions.NoCapExceptions;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"import module.Module;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"import module.ModuleList;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"naijie2108"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"naijie2108"},"content":"import static org.junit.jupiter.api.Assertions.assertLinesMatch;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"yzhedwin"},"content":"class OverallTaskListTest extends TaskListTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"naijie2108"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"naijie2108"},"content":"    void addModuleList_normalList_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"naijie2108"},"content":"        ModuleList modules \u003d new ModuleList();","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2102\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2112\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2132\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"naijie2108"},"content":"        modules.get(0).addTask(\"sleep /by 21/08/2022 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"naijie2108"},"content":"        modules.get(1).addTask(\"sleep /by 21/08/2022 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"naijie2108"},"content":"        modules.get(2).addTask(\"sleep /by 21/08/2022 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"naijie2108"},"content":"        modules.get(0).addGradableTask(\"assignment /by 21/08/2022 /w 50\");","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"naijie2108"},"content":"        OverallTaskList taskList \u003d new OverallTaskList(modules);","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"naijie2108"},"content":"        String expected \u003d \"[CS2102][ ][ ] sleep by: 21 Aug 2022 04:00 PM \" + System.lineSeparator()","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"naijie2108"},"content":"                + \"[CS2102][G][ ] assignment by: 21 Aug 2022 12:00 AM [Weightage: 50%]\" + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"naijie2108"},"content":"                + \"[CS2112][ ][ ] sleep by: 21 Aug 2022 04:00 PM \" + System.lineSeparator()","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"naijie2108"},"content":"                + \"[CS2132][ ][ ] sleep by: 21 Aug 2022 04:00 PM \" + System.lineSeparator();","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"naijie2108"},"content":"        assertEquals(expected, taskList.toString());","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"naijie2108"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"naijie2108"},"content":"    void addModuleList_emptyList_success() {","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"naijie2108"},"content":"        ModuleList modules \u003d new ModuleList();","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"naijie2108"},"content":"        OverallTaskList taskList \u003d new OverallTaskList(modules);","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"naijie2108"},"content":"        String expected \u003d \"\";","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"naijie2108"},"content":"        assertEquals(expected, taskList.toString());","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"naijie2108"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"naijie2108"},"content":"    void addModuleList_taskListOnly_success() {","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"naijie2108"},"content":"        ModuleList modules \u003d new ModuleList();","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"naijie2108"},"content":"        OverallTaskList taskList \u003d new OverallTaskList(modules);","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2102\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"naijie2108"},"content":"        modules.get(0).addTask(\"assignment /by 21/08/2022 1600\");","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"naijie2108"},"content":"        String expected \u003d \"\";","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"naijie2108"},"content":"        assertEquals(expected, taskList.toString());","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"naijie2108"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"naijie2108"},"content":"    void addModuleList_gradableListOnly_success() {","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"naijie2108"},"content":"        ModuleList modules \u003d new ModuleList();","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"naijie2108"},"content":"        OverallTaskList taskList \u003d new OverallTaskList(modules);","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2102\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":79,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"naijie2108"},"content":"        modules.get(0).addGradableTask(\"assignment /by 21/08/2022 /w 50\");","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"naijie2108"},"content":"        String expected \u003d \"\";","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"naijie2108"},"content":"        assertEquals(expected, taskList.toString());","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"naijie2108"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"naijie2108"},"content":"    void printModuleList_normalList_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"naijie2108"},"content":"        ModuleList modules \u003d new ModuleList();","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2102\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":93,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":94,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2112\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":96,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2132\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":101,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":102,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":103,"author":{"gitId":"naijie2108"},"content":"        modules.get(0).addTask(\"sleep /by 21/08/2022 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"naijie2108"},"content":"        modules.get(1).addTask(\"sleep /by 21/08/2022 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"naijie2108"},"content":"        modules.get(2).addTask(\"sleep /by 21/08/2022 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"naijie2108"},"content":"        OverallTaskList taskList \u003d new OverallTaskList(modules);","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"naijie2108"},"content":"        ByteArrayOutputStream read \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"naijie2108"},"content":"        PrintStream save \u003d new PrintStream(read);","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"naijie2108"},"content":"        System.setOut(save);","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"naijie2108"},"content":"        taskList.printAllTasks();","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"naijie2108"},"content":"        List\u003cString\u003e actualLines \u003d List.of(read.toString().split(\"/n\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"naijie2108"},"content":"        List\u003cString\u003e expectedLines \u003d Collections.singletonList(","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"naijie2108"},"content":"                \"All tasks: \" + System.lineSeparator()","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"naijie2108"},"content":"                        + \"1. [CS2102][ ][ ] sleep by: 21 Aug 2022 04:00 PM \" + System.lineSeparator()","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"naijie2108"},"content":"                        + \"2. [CS2112][ ][ ] sleep by: 21 Aug 2022 04:00 PM \" + System.lineSeparator()","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"naijie2108"},"content":"                        + \"3. [CS2132][ ][ ] sleep by: 21 Aug 2022 04:00 PM \" + System.lineSeparator());","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"naijie2108"},"content":"        assertLinesMatch(expectedLines, actualLines);","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"naijie2108"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"naijie2108"},"content":"    void printModuleList_emptyList_success() {","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"naijie2108"},"content":"        ModuleList modules \u003d new ModuleList();","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"naijie2108"},"content":"        OverallTaskList taskList \u003d new OverallTaskList(modules);","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"naijie2108"},"content":"        ByteArrayOutputStream read \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"naijie2108"},"content":"        PrintStream save \u003d new PrintStream(read);","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"naijie2108"},"content":"        System.setOut(save);","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"naijie2108"},"content":"        taskList.printAllTasks();","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"naijie2108"},"content":"        List\u003cString\u003e actualLines \u003d List.of(read.toString().split(\"/n\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"naijie2108"},"content":"        List\u003cString\u003e expectedLines \u003d Collections.singletonList(","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"naijie2108"},"content":"                \"All tasks: \" + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"naijie2108"},"content":"                        + \"You have no tasks\" + System.lineSeparator());","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"naijie2108"},"content":"        assertLinesMatch(expectedLines, actualLines);","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"naijie2108"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"naijie2108"},"content":"    void sortModuleListByDate_normalList_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"naijie2108"},"content":"        ModuleList modules \u003d new ModuleList();","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":139,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2102\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":141,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":142,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":143,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":144,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2112\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":146,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":147,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":148,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":149,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2132\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":151,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":152,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":153,"author":{"gitId":"naijie2108"},"content":"        modules.get(0).addTask(\"sleep /by 23/08/2022 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"naijie2108"},"content":"        modules.get(1).addTask(\"sleep /by 21/08/2022 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"naijie2108"},"content":"        modules.get(2).addTask(\"sleep /by 20/08/2022 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"naijie2108"},"content":"        OverallTaskList taskList \u003d new OverallTaskList(modules);","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"naijie2108"},"content":"        ByteArrayOutputStream read \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"naijie2108"},"content":"        PrintStream save \u003d new PrintStream(read);","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"naijie2108"},"content":"        System.setOut(save);","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"naijie2108"},"content":"        taskList.sortByDateAndPrint();","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"naijie2108"},"content":"        List\u003cString\u003e actualLines \u003d List.of(read.toString().split(\"/n\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"naijie2108"},"content":"        List\u003cString\u003e expectedLines \u003d Collections.singletonList(","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"naijie2108"},"content":"                \"Tasks sorted by date: \" + System.lineSeparator()","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"naijie2108"},"content":"                        + \"1. [CS2132][ ][ ] sleep by: 20 Aug 2022 04:00 PM \" + System.lineSeparator()","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"naijie2108"},"content":"                        + \"2. [CS2112][ ][ ] sleep by: 21 Aug 2022 04:00 PM \" + System.lineSeparator()","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"naijie2108"},"content":"                        + \"3. [CS2102][ ][ ] sleep by: 23 Aug 2022 04:00 PM \" + System.lineSeparator());","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"naijie2108"},"content":"        assertLinesMatch(expectedLines, actualLines);","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"naijie2108"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"naijie2108"},"content":"    void sortModuleListByStatus_normalList_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":172,"author":{"gitId":"naijie2108"},"content":"        ModuleList modules \u003d new ModuleList();","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":174,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2102\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":176,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":177,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":178,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":179,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2112\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":180,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":181,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":182,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":183,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":184,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2132\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":185,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":186,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":187,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":188,"author":{"gitId":"naijie2108"},"content":"        modules.get(0).addTask(\"sleep /by 23/08/2022 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":189,"author":{"gitId":"naijie2108"},"content":"        modules.get(1).addTask(\"sleep /by 21/08/2022 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":190,"author":{"gitId":"naijie2108"},"content":"        modules.get(2).addTask(\"sleep /by 20/08/2022 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":191,"author":{"gitId":"naijie2108"},"content":"        modules.get(1).getTaskList().taskList.get(0).markDone();","lastModifiedDate":"2021-10-18"},{"lineNumber":192,"author":{"gitId":"naijie2108"},"content":"        OverallTaskList taskList \u003d new OverallTaskList(modules);","lastModifiedDate":"2021-10-18"},{"lineNumber":193,"author":{"gitId":"naijie2108"},"content":"        ByteArrayOutputStream read \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-18"},{"lineNumber":194,"author":{"gitId":"naijie2108"},"content":"        PrintStream save \u003d new PrintStream(read);","lastModifiedDate":"2021-10-18"},{"lineNumber":195,"author":{"gitId":"naijie2108"},"content":"        System.setOut(save);","lastModifiedDate":"2021-10-18"},{"lineNumber":196,"author":{"gitId":"naijie2108"},"content":"        taskList.sortByStatusAndPrint();","lastModifiedDate":"2021-10-18"},{"lineNumber":197,"author":{"gitId":"naijie2108"},"content":"        List\u003cString\u003e actualLines \u003d List.of(read.toString().split(\"/n\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":198,"author":{"gitId":"naijie2108"},"content":"        List\u003cString\u003e expectedLines \u003d Collections.singletonList(","lastModifiedDate":"2021-10-18"},{"lineNumber":199,"author":{"gitId":"naijie2108"},"content":"                \"Tasks sorted by status: \" + System.lineSeparator()","lastModifiedDate":"2021-10-18"},{"lineNumber":200,"author":{"gitId":"naijie2108"},"content":"                        + \"1. [CS2102][ ][ ] sleep by: 23 Aug 2022 04:00 PM \" + System.lineSeparator()","lastModifiedDate":"2021-10-21"},{"lineNumber":201,"author":{"gitId":"naijie2108"},"content":"                        + \"2. [CS2132][ ][ ] sleep by: 20 Aug 2022 04:00 PM \" + System.lineSeparator()","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"naijie2108"},"content":"                        + \"3. [CS2112][ ][X] sleep by: 21 Aug 2022 04:00 PM \" + System.lineSeparator());","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"naijie2108"},"content":"        assertLinesMatch(expectedLines, actualLines);","lastModifiedDate":"2021-10-18"},{"lineNumber":204,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":205,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":206,"author":{"gitId":"naijie2108"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":207,"author":{"gitId":"naijie2108"},"content":"    void printWeeklyTask_normalList_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":208,"author":{"gitId":"naijie2108"},"content":"        ModuleList modules \u003d new ModuleList();","lastModifiedDate":"2021-10-18"},{"lineNumber":209,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":210,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2102\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":211,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":212,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":213,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":214,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":215,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2112\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":216,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":217,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":218,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":219,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":220,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2132\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":221,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":222,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":223,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":224,"author":{"gitId":"naijie2108"},"content":"        modules.get(0).addTask(\"sleep /by 23/08/2022 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":225,"author":{"gitId":"naijie2108"},"content":"        modules.get(1).addTask(\"sleep /by 21/10/2021 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":226,"author":{"gitId":"naijie2108"},"content":"        modules.get(2).addTask(\"sleep /by 20/11/2021 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":227,"author":{"gitId":"naijie2108"},"content":"        modules.get(2).addTask(\"sleep /by 21/11/2021 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":228,"author":{"gitId":"naijie2108"},"content":"        OverallTaskList taskList \u003d new OverallTaskList(modules);","lastModifiedDate":"2021-10-18"},{"lineNumber":229,"author":{"gitId":"naijie2108"},"content":"        ByteArrayOutputStream read \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-18"},{"lineNumber":230,"author":{"gitId":"naijie2108"},"content":"        PrintStream save \u003d new PrintStream(read);","lastModifiedDate":"2021-10-18"},{"lineNumber":231,"author":{"gitId":"naijie2108"},"content":"        System.setOut(save);","lastModifiedDate":"2021-10-18"},{"lineNumber":232,"author":{"gitId":"naijie2108"},"content":"        taskList.printWeeklyTasks();","lastModifiedDate":"2021-10-18"},{"lineNumber":233,"author":{"gitId":"naijie2108"},"content":"        List\u003cString\u003e actualLines \u003d List.of(read.toString().split(\"/n\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":234,"author":{"gitId":"naijie2108"},"content":"        List\u003cString\u003e expectedLines \u003d Collections.singletonList(","lastModifiedDate":"2021-10-18"},{"lineNumber":235,"author":{"gitId":"naijie2108"},"content":"                \"Weekly tasks: \" + System.lineSeparator()","lastModifiedDate":"2021-10-18"},{"lineNumber":236,"author":{"gitId":"DmitriYam"},"content":"                        + \"1. [CS2112][ ][LATE][ ] sleep by: 21 Oct 2021 04:00 PM \" + System.lineSeparator());","lastModifiedDate":"2021-10-22"},{"lineNumber":237,"author":{"gitId":"naijie2108"},"content":"        assertLinesMatch(expectedLines, actualLines);","lastModifiedDate":"2021-10-18"},{"lineNumber":238,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":239,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":240,"author":{"gitId":"naijie2108"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":241,"author":{"gitId":"naijie2108"},"content":"    void printMonthlyTask_normalList_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":242,"author":{"gitId":"naijie2108"},"content":"        ModuleList modules \u003d new ModuleList();","lastModifiedDate":"2021-10-18"},{"lineNumber":243,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":244,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2102\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":245,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":246,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":247,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":248,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":249,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2112\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":250,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":251,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":252,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":253,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":254,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2132\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":255,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":256,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":257,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":258,"author":{"gitId":"naijie2108"},"content":"        modules.get(0).addTask(\"sleep /by 23/08/2022 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":259,"author":{"gitId":"naijie2108"},"content":"        modules.get(1).addTask(\"sleep /by 21/10/2021 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":260,"author":{"gitId":"naijie2108"},"content":"        modules.get(2).addTask(\"sleep /by 12/11/2021 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":261,"author":{"gitId":"naijie2108"},"content":"        modules.get(2).addTask(\"sleep /by 10/11/2021 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":262,"author":{"gitId":"naijie2108"},"content":"        OverallTaskList taskList \u003d new OverallTaskList(modules);","lastModifiedDate":"2021-10-18"},{"lineNumber":263,"author":{"gitId":"naijie2108"},"content":"        ByteArrayOutputStream read \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-18"},{"lineNumber":264,"author":{"gitId":"naijie2108"},"content":"        PrintStream save \u003d new PrintStream(read);","lastModifiedDate":"2021-10-18"},{"lineNumber":265,"author":{"gitId":"naijie2108"},"content":"        System.setOut(save);","lastModifiedDate":"2021-10-18"},{"lineNumber":266,"author":{"gitId":"naijie2108"},"content":"        taskList.printMonthlyTasks();","lastModifiedDate":"2021-10-18"},{"lineNumber":267,"author":{"gitId":"naijie2108"},"content":"        List\u003cString\u003e actualLines \u003d List.of(read.toString().split(\"/n\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":268,"author":{"gitId":"naijie2108"},"content":"        List\u003cString\u003e expectedLines \u003d Collections.singletonList(","lastModifiedDate":"2021-10-18"},{"lineNumber":269,"author":{"gitId":"naijie2108"},"content":"                \"Monthly tasks: \" + System.lineSeparator()","lastModifiedDate":"2021-10-18"},{"lineNumber":270,"author":{"gitId":"DmitriYam"},"content":"                        + \"1. [CS2112][ ][LATE][ ] sleep by: 21 Oct 2021 04:00 PM \" + System.lineSeparator()","lastModifiedDate":"2021-10-22"},{"lineNumber":271,"author":{"gitId":"yzhedwin"},"content":"                        + \"2. [CS2132][ ][ ] sleep by: 10 Nov 2021 04:00 PM \" + System.lineSeparator());","lastModifiedDate":"2021-10-27"},{"lineNumber":272,"author":{"gitId":"naijie2108"},"content":"        assertLinesMatch(expectedLines, actualLines);","lastModifiedDate":"2021-10-18"},{"lineNumber":273,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":274,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":275,"author":{"gitId":"naijie2108"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":276,"author":{"gitId":"naijie2108"},"content":"    void printYearlyTask_normalList_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":277,"author":{"gitId":"naijie2108"},"content":"        ModuleList modules \u003d new ModuleList();","lastModifiedDate":"2021-10-18"},{"lineNumber":278,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":279,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2102\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":280,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":281,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":282,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":283,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":284,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2112\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":285,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":286,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":287,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":288,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":289,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2132\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":290,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":291,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":292,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":293,"author":{"gitId":"naijie2108"},"content":"        modules.get(0).addTask(\"sleep /by 23/12/2022 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":294,"author":{"gitId":"naijie2108"},"content":"        modules.get(1).addTask(\"sleep /by 21/10/2021 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":295,"author":{"gitId":"naijie2108"},"content":"        modules.get(2).addTask(\"sleep /by 20/11/2021 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":296,"author":{"gitId":"naijie2108"},"content":"        modules.get(2).addTask(\"sleep /by 21/11/2021 1600\");","lastModifiedDate":"2021-10-18"},{"lineNumber":297,"author":{"gitId":"naijie2108"},"content":"        OverallTaskList taskList \u003d new OverallTaskList(modules);","lastModifiedDate":"2021-10-18"},{"lineNumber":298,"author":{"gitId":"naijie2108"},"content":"        ByteArrayOutputStream read \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-18"},{"lineNumber":299,"author":{"gitId":"naijie2108"},"content":"        PrintStream save \u003d new PrintStream(read);","lastModifiedDate":"2021-10-18"},{"lineNumber":300,"author":{"gitId":"naijie2108"},"content":"        System.setOut(save);","lastModifiedDate":"2021-10-18"},{"lineNumber":301,"author":{"gitId":"naijie2108"},"content":"        taskList.printYearlyTasks();","lastModifiedDate":"2021-10-18"},{"lineNumber":302,"author":{"gitId":"naijie2108"},"content":"        List\u003cString\u003e actualLines \u003d List.of(read.toString().split(\"/n\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":303,"author":{"gitId":"naijie2108"},"content":"        List\u003cString\u003e expectedLines \u003d Collections.singletonList(","lastModifiedDate":"2021-10-18"},{"lineNumber":304,"author":{"gitId":"naijie2108"},"content":"                \"Yearly tasks: \" + System.lineSeparator()","lastModifiedDate":"2021-10-18"},{"lineNumber":305,"author":{"gitId":"DmitriYam"},"content":"                        + \"1. [CS2112][ ][LATE][ ] sleep by: 21 Oct 2021 04:00 PM \" + System.lineSeparator()","lastModifiedDate":"2021-10-22"},{"lineNumber":306,"author":{"gitId":"yzhedwin"},"content":"                        + \"2. [CS2132][ ][ ] sleep by: 21 Nov 2021 04:00 PM \" + System.lineSeparator());","lastModifiedDate":"2021-10-27"},{"lineNumber":307,"author":{"gitId":"naijie2108"},"content":"        assertLinesMatch(expectedLines, actualLines);","lastModifiedDate":"2021-10-18"},{"lineNumber":308,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":309,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":310,"author":{"gitId":"naijie2108"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":311,"author":{"gitId":"naijie2108"},"content":"    void printNormalTask_normalList_success() {","lastModifiedDate":"2021-11-01"},{"lineNumber":312,"author":{"gitId":"naijie2108"},"content":"        ModuleList modules \u003d new ModuleList();","lastModifiedDate":"2021-11-01"},{"lineNumber":313,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":314,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2102\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":315,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":316,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":317,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":318,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":319,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2112\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":320,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":321,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":322,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":323,"author":{"gitId":"naijie2108"},"content":"        modules.get(0).addTask(\"sleep /by 23/12/2022 1600\");","lastModifiedDate":"2021-11-01"},{"lineNumber":324,"author":{"gitId":"naijie2108"},"content":"        modules.get(1).addTask(\"sleep /by 21/10/2021 1600\");","lastModifiedDate":"2021-11-01"},{"lineNumber":325,"author":{"gitId":"naijie2108"},"content":"        modules.get(0).addGradableTask(\"assignment /by 23/12/2022 /w 20\");","lastModifiedDate":"2021-11-01"},{"lineNumber":326,"author":{"gitId":"naijie2108"},"content":"        OverallTaskList taskList \u003d new OverallTaskList(modules);","lastModifiedDate":"2021-11-01"},{"lineNumber":327,"author":{"gitId":"naijie2108"},"content":"        ByteArrayOutputStream read \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-01"},{"lineNumber":328,"author":{"gitId":"naijie2108"},"content":"        PrintStream save \u003d new PrintStream(read);","lastModifiedDate":"2021-11-01"},{"lineNumber":329,"author":{"gitId":"naijie2108"},"content":"        System.setOut(save);","lastModifiedDate":"2021-11-01"},{"lineNumber":330,"author":{"gitId":"naijie2108"},"content":"        taskList.printNormalTasks();","lastModifiedDate":"2021-11-01"},{"lineNumber":331,"author":{"gitId":"naijie2108"},"content":"        List\u003cString\u003e actualLines \u003d List.of(read.toString().split(\"/n\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":332,"author":{"gitId":"naijie2108"},"content":"        List\u003cString\u003e expectedLines \u003d Collections.singletonList(","lastModifiedDate":"2021-11-01"},{"lineNumber":333,"author":{"gitId":"naijie2108"},"content":"                \"Non-gradable tasks: \" + System.lineSeparator()","lastModifiedDate":"2021-11-01"},{"lineNumber":334,"author":{"gitId":"naijie2108"},"content":"                        + \"1. [CS2102][ ][ ] sleep by: 23 Dec 2022 04:00 PM \" + System.lineSeparator()","lastModifiedDate":"2021-11-01"},{"lineNumber":335,"author":{"gitId":"naijie2108"},"content":"                        + \"2. [CS2112][ ][LATE][ ] sleep by: 21 Oct 2021 04:00 PM \" + System.lineSeparator());","lastModifiedDate":"2021-11-01"},{"lineNumber":336,"author":{"gitId":"naijie2108"},"content":"        assertLinesMatch(expectedLines, actualLines);","lastModifiedDate":"2021-11-01"},{"lineNumber":337,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":338,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":339,"author":{"gitId":"naijie2108"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":340,"author":{"gitId":"naijie2108"},"content":"    void printGradableTask_normalList_success() {","lastModifiedDate":"2021-10-26"},{"lineNumber":341,"author":{"gitId":"naijie2108"},"content":"        ModuleList modules \u003d new ModuleList();","lastModifiedDate":"2021-10-26"},{"lineNumber":342,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":343,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2102\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":344,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":345,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":346,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":347,"author":{"gitId":"yapjoonsiong"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":348,"author":{"gitId":"naijie2108"},"content":"            modules.add(new Module(\"CS2112\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":349,"author":{"gitId":"yapjoonsiong"},"content":"        } catch (NoCapExceptions e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":350,"author":{"gitId":"yapjoonsiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":351,"author":{"gitId":"yapjoonsiong"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":352,"author":{"gitId":"naijie2108"},"content":"        modules.get(0).addTask(\"sleep /by 23/12/2022 1600\");","lastModifiedDate":"2021-10-26"},{"lineNumber":353,"author":{"gitId":"naijie2108"},"content":"        modules.get(1).addTask(\"sleep /by 21/10/2021 1600\");","lastModifiedDate":"2021-10-26"},{"lineNumber":354,"author":{"gitId":"naijie2108"},"content":"        modules.get(0).addGradableTask(\"assignment /by 23/12/2022 /w 20\");","lastModifiedDate":"2021-10-26"},{"lineNumber":355,"author":{"gitId":"naijie2108"},"content":"        OverallTaskList taskList \u003d new OverallTaskList(modules);","lastModifiedDate":"2021-10-26"},{"lineNumber":356,"author":{"gitId":"naijie2108"},"content":"        ByteArrayOutputStream read \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-26"},{"lineNumber":357,"author":{"gitId":"naijie2108"},"content":"        PrintStream save \u003d new PrintStream(read);","lastModifiedDate":"2021-10-26"},{"lineNumber":358,"author":{"gitId":"naijie2108"},"content":"        System.setOut(save);","lastModifiedDate":"2021-10-26"},{"lineNumber":359,"author":{"gitId":"naijie2108"},"content":"        taskList.printGradableTasks();","lastModifiedDate":"2021-10-26"},{"lineNumber":360,"author":{"gitId":"naijie2108"},"content":"        List\u003cString\u003e actualLines \u003d List.of(read.toString().split(\"/n\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":361,"author":{"gitId":"naijie2108"},"content":"        List\u003cString\u003e expectedLines \u003d Collections.singletonList(","lastModifiedDate":"2021-10-26"},{"lineNumber":362,"author":{"gitId":"naijie2108"},"content":"                \"Gradable tasks: \" + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":363,"author":{"gitId":"naijie2108"},"content":"                        + \"1. [CS2102][G][ ] assignment by: 23 Dec 2022 12:00 AM \"","lastModifiedDate":"2021-11-01"},{"lineNumber":364,"author":{"gitId":"naijie2108"},"content":"                        + \"[Weightage: 20%]\" + System.lineSeparator());","lastModifiedDate":"2021-11-01"},{"lineNumber":365,"author":{"gitId":"naijie2108"},"content":"        assertLinesMatch(expectedLines, actualLines);","lastModifiedDate":"2021-10-26"},{"lineNumber":366,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":367,"author":{"gitId":"naijie2108"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"yapjoonsiong":109,"naijie2108":251,"DmitriYam":3,"yzhedwin":4}},{"path":"src/test/java/task/OverallTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package task;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"class OverallTaskTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"    void overallTask_normalTask_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"        Task task \u003d new Task(\"Assignment\", \"19/09/2021 1600\");","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"        OverallTask overallTask \u003d new OverallTask(task, \"CS2113\");","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"naijie2108"},"content":"        assertFalse(overallTask.isGradable());","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"naijie2108"},"content":"        assertEquals(\"[CS2113][ ][ ] Assignment by: 19 Sep 2021 04:00 PM \", overallTask.toString());","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"naijie2108"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"naijie2108"},"content":"    void overallTask_gradableTask_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"naijie2108"},"content":"        GradableTask task \u003d new GradableTask(\"Quiz\", \"19/09/2021 1600\", 50);","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"naijie2108"},"content":"        OverallTask overallTask \u003d new OverallTask(task, \"CS2113\");","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"naijie2108"},"content":"        assertTrue(overallTask.isGradable());","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"naijie2108"},"content":"        assertEquals(\"[CS2113][G][ ] Quiz by: 19 Sep 2021 04:00 PM [Weightage: 50%]\", overallTask.toString());","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"naijie2108"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"naijie2108"},"content":"    void dateComparator_equal_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"naijie2108"},"content":"        Task task1 \u003d new Task(\"Assignment\", \"19/09/2021 1600\");","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"naijie2108"},"content":"        OverallTask overallTask1 \u003d new OverallTask(task1, \"CS2113\");","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"naijie2108"},"content":"        GradableTask task2 \u003d new GradableTask(\"Quiz\", \"19/09/2021 1600\", 50);","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"naijie2108"},"content":"        OverallTask overallTask2 \u003d new OverallTask(task2, \"CS2113\");","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"naijie2108"},"content":"        int result \u003d OverallTask.dateComparator.compare(overallTask1, overallTask2);","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"naijie2108"},"content":"        assertEquals(result, 0);","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"naijie2108"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"naijie2108"},"content":"    void dateComparator_leftHeavy_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"naijie2108"},"content":"        Task task1 \u003d new Task(\"Assignment\", \"19/09/2021 1600\");","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"naijie2108"},"content":"        OverallTask overallTask1 \u003d new OverallTask(task1, \"CS2113\");","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"naijie2108"},"content":"        GradableTask task2 \u003d new GradableTask(\"Quiz\", \"19/09/2021 1800\", 50);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"naijie2108"},"content":"        OverallTask overallTask2 \u003d new OverallTask(task2, \"CS2113\");","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"naijie2108"},"content":"        int result \u003d OverallTask.dateComparator.compare(overallTask1, overallTask2);","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"naijie2108"},"content":"        assertTrue(result \u003c 0);","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"naijie2108"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"naijie2108"},"content":"    void dateComparator_rightHeavy_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"naijie2108"},"content":"        Task task1 \u003d new Task(\"Assignment\", \"19/09/2021 1800\");","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"naijie2108"},"content":"        OverallTask overallTask1 \u003d new OverallTask(task1, \"CS2113\");","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"naijie2108"},"content":"        GradableTask task2 \u003d new GradableTask(\"Quiz\", \"19/09/2021 1600\", 50);","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"naijie2108"},"content":"        OverallTask overallTask2 \u003d new OverallTask(task2, \"CS2113\");","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"naijie2108"},"content":"        int result \u003d OverallTask.dateComparator.compare(overallTask1, overallTask2);","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"naijie2108"},"content":"        assertTrue(result \u003e 0);","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"naijie2108"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"naijie2108"},"content":"    void statusComparator_bothDone_success() {","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"naijie2108"},"content":"        Task task1 \u003d new Task(\"Assignment\", \"19/09/2021 1600\");","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"naijie2108"},"content":"        task1.markDone();","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"naijie2108"},"content":"        OverallTask overallTask1 \u003d new OverallTask(task1, \"CS2113\");","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"naijie2108"},"content":"        GradableTask task2 \u003d new GradableTask(\"Quiz\", \"19/09/2021 1600\", 50);","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"naijie2108"},"content":"        task2.markDone();","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"naijie2108"},"content":"        OverallTask overallTask2 \u003d new OverallTask(task2, \"CS2113\");","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"naijie2108"},"content":"        int result \u003d OverallTask.statusComparator.compare(overallTask1, overallTask2);","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"naijie2108"},"content":"        assertEquals(result, 0);","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"naijie2108"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"naijie2108"},"content":"    void statusComparator_bothNotDone_success() {","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"naijie2108"},"content":"        Task task1 \u003d new Task(\"Assignment\", \"19/09/2021 1600\");","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"naijie2108"},"content":"        OverallTask overallTask1 \u003d new OverallTask(task1, \"CS2113\");","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"naijie2108"},"content":"        GradableTask task2 \u003d new GradableTask(\"Quiz\", \"19/09/2021 1600\", 50);","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"naijie2108"},"content":"        OverallTask overallTask2 \u003d new OverallTask(task2, \"CS2113\");","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"naijie2108"},"content":"        int result \u003d OverallTask.statusComparator.compare(overallTask1, overallTask2);","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"naijie2108"},"content":"        assertEquals(result, 0);","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"naijie2108"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"naijie2108"},"content":"    void statusComparator_leftHeavy_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"naijie2108"},"content":"        Task task1 \u003d new Task(\"Assignment\", \"19/09/2021 1600\");","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"naijie2108"},"content":"        task1.markDone();","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"naijie2108"},"content":"        OverallTask overallTask1 \u003d new OverallTask(task1, \"CS2113\");","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"naijie2108"},"content":"        GradableTask task2 \u003d new GradableTask(\"Quiz\", \"19/09/2021 1600\", 50);","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"naijie2108"},"content":"        OverallTask overallTask2 \u003d new OverallTask(task2, \"CS2113\");","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"naijie2108"},"content":"        int result \u003d OverallTask.statusComparator.compare(overallTask1, overallTask2);","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"naijie2108"},"content":"        assertTrue(result \u003e 0);","lastModifiedDate":"2021-11-06"},{"lineNumber":87,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"naijie2108"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"naijie2108"},"content":"    void statusComparator_rightHeavy_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"naijie2108"},"content":"        Task task1 \u003d new Task(\"Assignment\", \"19/09/2021 1600\");","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"naijie2108"},"content":"        OverallTask overallTask1 \u003d new OverallTask(task1, \"CS2113\");","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"naijie2108"},"content":"        GradableTask task2 \u003d new GradableTask(\"Quiz\", \"19/09/2021 1600\", 50);","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"naijie2108"},"content":"        task2.markDone();","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"naijie2108"},"content":"        OverallTask overallTask2 \u003d new OverallTask(task2, \"CS2113\");","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"naijie2108"},"content":"        int result \u003d OverallTask.statusComparator.compare(overallTask1, overallTask2);","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"naijie2108"},"content":"        assertTrue(result \u003c 0);","lastModifiedDate":"2021-11-06"},{"lineNumber":98,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"naijie2108"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"naijie2108":101}},{"path":"src/test/java/task/TaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yzhedwin"},"content":"package task;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"yzhedwin"},"content":"import command.parser.DateParser;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"yzhedwin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"yzhedwin"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"yzhedwin"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"yzhedwin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"yzhedwin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"yzhedwin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"yzhedwin"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"yzhedwin"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"yzhedwin"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"yzhedwin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"yzhedwin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"yzhedwin"},"content":"import static org.junit.jupiter.api.Assertions.assertLinesMatch;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"yzhedwin"},"content":"public class TaskListTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"yzhedwin"},"content":"    protected static final LocalDateTime REF_DATE \u003d LocalDateTime.now().withHour(0);","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"yzhedwin"},"content":"    protected static final DateTimeFormatter FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy hhmm\");","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"yzhedwin"},"content":"    protected static final String DATE_A \u003d REF_DATE.plusDays(1).plusHours(10).format(FORMAT);","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"yzhedwin"},"content":"    protected static final String DATE_B \u003d REF_DATE.plusDays(6).plusHours(12).format(FORMAT);","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"yzhedwin"},"content":"    protected static final String DATE_C \u003d REF_DATE.plusDays(13).plusHours(15).format(FORMAT);","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"yzhedwin"},"content":"    protected static final String DATE_D \u003d REF_DATE.plusYears(2).plusHours(15).format(FORMAT);","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"yzhedwin"},"content":"    protected static final String DATE_E \u003d REF_DATE.plusMonths(2).plusHours(15).format(FORMAT);","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"yzhedwin"},"content":"    protected static final String DATE_OVERDUE \u003d REF_DATE.minusMonths(2).plusHours(15).format(FORMAT);","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"yzhedwin"},"content":"    void get_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"yzhedwin"},"content":"        TaskList a \u003d new TaskList();","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book A /by 12/12/2021 1600\");","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book B /by 13/12/2021 1600\");","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"yzhedwin"},"content":"        assertEquals(\"[ ] Read Book A by: 12 Dec 2021 04:00 PM\", a.get(0).toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"yzhedwin"},"content":"        assertEquals(\"[ ] Read Book B by: 13 Dec 2021 04:00 PM\", a.get(1).toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"yzhedwin"},"content":"    void addTask_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"yzhedwin"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"yzhedwin"},"content":"        tasks.addTask(\"cs1010\", \"Read Book /by 12/12/2021 1600\");","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"yzhedwin"},"content":"        assertEquals(\"[ ] Read Book by: 12 Dec 2021 04:00 PM\", tasks.get(0).toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"yzhedwin"},"content":"    void getTaskCount_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"yzhedwin"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"yzhedwin"},"content":"        tasks.addTask(\"cs1010\", \"Read Book /by 12/12/2021 1600\");","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"yzhedwin"},"content":"        tasks.addTask(\"cs1010\", \"Return Book /by 13/12/2021 1600\");","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"yzhedwin"},"content":"        assertEquals(2, tasks.getTaskCount());","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"yzhedwin"},"content":"    void getTaskList_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"yzhedwin"},"content":"        TaskList a \u003d new TaskList();","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"yzhedwin"},"content":"        TaskList b \u003d new TaskList();","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book A /by 12/12/2021 1600\");","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book B /by 13/12/2021 1600\");","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"yzhedwin"},"content":"        b.addTask(\"cs1010\", \"Buy Book A /by 14/12/2021 1600\");","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"yzhedwin"},"content":"        b.addTask(\"cs1010\", \"Buy Book B /by 15/12/2021 1600\");","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"naijie2108"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"yzhedwin"},"content":"        list.addAll(a.getTaskList());","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"yzhedwin"},"content":"        list.addAll(b.getTaskList());","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"yzhedwin"},"content":"        assertEquals(4, list.size());","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"yzhedwin"},"content":"        assertEquals(\"[ ] Read Book A by: 12 Dec 2021 04:00 PM\", list.get(0).toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"yzhedwin"},"content":"        assertEquals(\"[ ] Read Book B by: 13 Dec 2021 04:00 PM\", list.get(1).toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"yzhedwin"},"content":"        assertEquals(\"[ ] Buy Book A by: 14 Dec 2021 04:00 PM\", list.get(2).toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"yzhedwin"},"content":"        assertEquals(\"[ ] Buy Book B by: 15 Dec 2021 04:00 PM\", list.get(3).toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"yzhedwin"},"content":"    void setTaskList_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"yzhedwin"},"content":"        TaskList a \u003d new TaskList();","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"yzhedwin"},"content":"        TaskList b \u003d new TaskList();","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book A /by 12/12/2021 1600\");","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book B /by 13/12/2021 1600\");","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"yzhedwin"},"content":"        b.addTask(\"cs1010\", \"Buy Book A /by 14/12/2021 1600\");","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"yzhedwin"},"content":"        b.addTask(\"cs1010\", \"Buy Book B /by 15/12/2021 1600\");","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"yzhedwin"},"content":"        a.setTaskList(b.getTaskList());","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"yzhedwin"},"content":"        assertEquals(2, a.getTaskCount());","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"yzhedwin"},"content":"        assertEquals(\"[ ] Buy Book A by: 14 Dec 2021 04:00 PM\", a.get(0).toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"yzhedwin"},"content":"        assertEquals(\"[ ] Buy Book B by: 15 Dec 2021 04:00 PM\", a.get(1).toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"yzhedwin"},"content":"    void setTaskCount_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"yzhedwin"},"content":"        TaskList a \u003d new TaskList();","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"yzhedwin"},"content":"        a.setTaskCount(10);","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"yzhedwin"},"content":"        assertEquals(10, a.getTaskCount());","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"yzhedwin"},"content":"    void delete_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"yzhedwin"},"content":"        TaskList a \u003d new TaskList();","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book A /by 12/12/2021 1600\");","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book B /by 13/12/2021 1600\");","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"yzhedwin"},"content":"        assertEquals(\"[ ] Read Book A by: 12 Dec 2021 04:00 PM\", a.get(0).toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"yzhedwin"},"content":"        assertEquals(\"[ ] Read Book B by: 13 Dec 2021 04:00 PM\", a.get(1).toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"yzhedwin"},"content":"        a.delete(a.get(0));","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"yzhedwin"},"content":"        assertEquals(\"[ ] Read Book B by: 13 Dec 2021 04:00 PM\", a.get(0).toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"yzhedwin"},"content":"    void printTaskList_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"yzhedwin"},"content":"        TaskList a \u003d new TaskList();","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book C /by 14/12/2021 1600\");","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book B /by 13/12/2021 1600\");","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book A /by 12/12/2021 1600\");","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book D /by 12/12/2021 1100\");","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"yzhedwin"},"content":"        // Create a stream to hold the output","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"yzhedwin"},"content":"        ByteArrayOutputStream read \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"yzhedwin"},"content":"        PrintStream save \u003d new PrintStream(read);","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"yzhedwin"},"content":"        // Tell Java to use your special stream","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"yzhedwin"},"content":"        System.setOut(save);","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"yzhedwin"},"content":"        // Print some output: goes to your special stream","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"yzhedwin"},"content":"        a.printTasks(a.taskList);","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"yzhedwin"},"content":"        List\u003cString\u003e actualLines \u003d List.of(read.toString().split(\"/n\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"yzhedwin"},"content":"        List\u003cString\u003e expectedLines \u003d Collections.singletonList(","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"yzhedwin"},"content":"                \"1.[ ] Read Book C by: 14 Dec 2021 04:00 PM\" + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"yzhedwin"},"content":"                        + \"2.[ ] Read Book B by: 13 Dec 2021 04:00 PM\" + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"yzhedwin"},"content":"                        + \"3.[ ] Read Book A by: 12 Dec 2021 04:00 PM\" + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"yzhedwin"},"content":"                        + \"4.[ ] Read Book D by: 12 Dec 2021 11:00 AM\" + System.lineSeparator());","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"yzhedwin"},"content":"        assertLinesMatch(expectedLines, actualLines);","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"yzhedwin"},"content":"    private List\u003cString\u003e getWeeklyStrings(String module, int taskCount) {","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"yzhedwin"},"content":"        return Collections.singletonList(\"Task List for \" + module.toUpperCase(Locale.ROOT) + \":\"","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"yzhedwin"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"DmitriYam"},"content":"                + \"There are \" + taskCount + \" tasks due within 7 days\" + System.lineSeparator()","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"yzhedwin"},"content":"                + \"1.[ ] Read Book B by: \" + DateParser.dateStringOutput(DateParser.parseDate(DATE_B))","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"yzhedwin"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-17"},{"lineNumber":135,"author":{"gitId":"yzhedwin"},"content":"                + \"2.[ ] Read Book A by: \" + DateParser.dateStringOutput(DateParser.parseDate(DATE_A))","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"yzhedwin"},"content":"                + System.lineSeparator());","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"yzhedwin"},"content":"    void showAllWeekly_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"yzhedwin"},"content":"        TaskList a \u003d new TaskList();","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"yzhedwin"},"content":"        //a.addTask(\"cs1010\", \"Read Book C /by \");","lastModifiedDate":"2021-10-17"},{"lineNumber":143,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book B /by \" + DATE_B);","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book A /by \" + DATE_A);","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book C /by \" + DATE_C);","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":147,"author":{"gitId":"yzhedwin"},"content":"        // Create a stream to hold the output","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"yzhedwin"},"content":"        String module \u003d \"moduleName\";","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"yzhedwin"},"content":"        ByteArrayOutputStream read \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-11"},{"lineNumber":150,"author":{"gitId":"yzhedwin"},"content":"        PrintStream save \u003d new PrintStream(read);","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"yzhedwin"},"content":"        // Tell Java to use your special stream","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"yzhedwin"},"content":"        System.setOut(save);","lastModifiedDate":"2021-10-11"},{"lineNumber":153,"author":{"gitId":"yzhedwin"},"content":"        // Print some output: goes to your special stream","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"yzhedwin"},"content":"        a.showAllWeekly(module);","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"yzhedwin"},"content":"        List\u003cString\u003e actualLines \u003d List.of(read.toString().split(\"/n\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"yzhedwin"},"content":"        List\u003cString\u003e expectedLines \u003d getWeeklyStrings(module, a.weeklyTaskList().size());","lastModifiedDate":"2021-10-13"},{"lineNumber":157,"author":{"gitId":"yzhedwin"},"content":"        assertLinesMatch(expectedLines, actualLines);","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"yzhedwin"},"content":"    private List\u003cString\u003e getMonthlyStrings(String module, int taskCount) {","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"yzhedwin"},"content":"        return Collections.singletonList(\"Task List for \" + module.toUpperCase(Locale.ROOT) + \":\"","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"yzhedwin"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"yzhedwin"},"content":"                + \"There are \" + taskCount + \" tasks due within a month\" + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"yzhedwin"},"content":"                + \"1.[ ] Read Book B by: \" + DateParser.dateStringOutput(DateParser.parseDate(DATE_B))","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"yzhedwin"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-17"},{"lineNumber":166,"author":{"gitId":"yzhedwin"},"content":"                + \"2.[ ] Read Book A by: \" + DateParser.dateStringOutput(DateParser.parseDate(DATE_A))","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"yzhedwin"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-17"},{"lineNumber":168,"author":{"gitId":"yzhedwin"},"content":"                + \"3.[ ] Read Book C by: \" + DateParser.dateStringOutput(DateParser.parseDate(DATE_C))","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"yzhedwin"},"content":"                + System.lineSeparator());","lastModifiedDate":"2021-10-17"},{"lineNumber":170,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":173,"author":{"gitId":"yzhedwin"},"content":"    void showAllMonthly_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"yzhedwin"},"content":"        TaskList a \u003d new TaskList();","lastModifiedDate":"2021-10-11"},{"lineNumber":175,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book B /by \" + DATE_B);","lastModifiedDate":"2021-10-18"},{"lineNumber":176,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book A /by \" + DATE_A);","lastModifiedDate":"2021-10-18"},{"lineNumber":177,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book D /by \" + DATE_D);","lastModifiedDate":"2021-10-18"},{"lineNumber":178,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book C /by \" + DATE_C);","lastModifiedDate":"2021-10-18"},{"lineNumber":179,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book E /by \" + DATE_E);","lastModifiedDate":"2021-10-18"},{"lineNumber":180,"author":{"gitId":"yzhedwin"},"content":"        // Create a stream to hold the output","lastModifiedDate":"2021-10-11"},{"lineNumber":181,"author":{"gitId":"yzhedwin"},"content":"        ByteArrayOutputStream read \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-11"},{"lineNumber":182,"author":{"gitId":"yzhedwin"},"content":"        PrintStream save \u003d new PrintStream(read);","lastModifiedDate":"2021-10-11"},{"lineNumber":183,"author":{"gitId":"yzhedwin"},"content":"        // Tell Java to use your special stream","lastModifiedDate":"2021-10-11"},{"lineNumber":184,"author":{"gitId":"yzhedwin"},"content":"        System.setOut(save);","lastModifiedDate":"2021-10-11"},{"lineNumber":185,"author":{"gitId":"yzhedwin"},"content":"        // Print some output: goes to your special stream","lastModifiedDate":"2021-10-11"},{"lineNumber":186,"author":{"gitId":"yzhedwin"},"content":"        String module \u003d \"moduleName\";","lastModifiedDate":"2021-10-11"},{"lineNumber":187,"author":{"gitId":"yzhedwin"},"content":"        a.showAllMonthly(module);","lastModifiedDate":"2021-10-11"},{"lineNumber":188,"author":{"gitId":"yzhedwin"},"content":"        List\u003cString\u003e actualLines \u003d List.of(read.toString().split(\"/n\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":189,"author":{"gitId":"yzhedwin"},"content":"        List\u003cString\u003e expectedLines \u003d getMonthlyStrings(module, a.monthlyTaskList().size());","lastModifiedDate":"2021-10-13"},{"lineNumber":190,"author":{"gitId":"yzhedwin"},"content":"        assertLinesMatch(expectedLines, actualLines);","lastModifiedDate":"2021-10-11"},{"lineNumber":191,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":192,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":193,"author":{"gitId":"yzhedwin"},"content":"    private List\u003cString\u003e getYearlyStrings(String module, int taskCount) {","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"yzhedwin"},"content":"        return Collections.singletonList(\"Task List for \" + module.toUpperCase(Locale.ROOT) + \":\"","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"yzhedwin"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"yzhedwin"},"content":"                + \"There are \" + taskCount + \" tasks due within a year\" + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"yzhedwin"},"content":"                + \"1.[ ] Read Book C by: \" + DateParser.dateStringOutput(DateParser.parseDate(DATE_C))","lastModifiedDate":"2021-10-18"},{"lineNumber":198,"author":{"gitId":"yzhedwin"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-18"},{"lineNumber":199,"author":{"gitId":"yzhedwin"},"content":"                + \"2.[ ] Read Book B by: \" + DateParser.dateStringOutput(DateParser.parseDate(DATE_B))","lastModifiedDate":"2021-10-18"},{"lineNumber":200,"author":{"gitId":"yzhedwin"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-17"},{"lineNumber":201,"author":{"gitId":"yzhedwin"},"content":"                + \"3.[ ] Read Book A by: \" + DateParser.dateStringOutput(DateParser.parseDate(DATE_A))","lastModifiedDate":"2021-10-18"},{"lineNumber":202,"author":{"gitId":"yzhedwin"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-17"},{"lineNumber":203,"author":{"gitId":"yzhedwin"},"content":"                + \"4.[ ] Read Book E by: \" + DateParser.dateStringOutput(DateParser.parseDate(DATE_E))","lastModifiedDate":"2021-10-18"},{"lineNumber":204,"author":{"gitId":"yzhedwin"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-17"},{"lineNumber":205,"author":{"gitId":"yzhedwin"},"content":"                + \"5.[LATE][ ] Read Book F by: \" + DateParser.dateStringOutput(DateParser.parseDate(DATE_OVERDUE))","lastModifiedDate":"2021-10-18"},{"lineNumber":206,"author":{"gitId":"yzhedwin"},"content":"                + System.lineSeparator());","lastModifiedDate":"2021-10-17"},{"lineNumber":207,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":208,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":209,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":210,"author":{"gitId":"yzhedwin"},"content":"    void showAllYearly_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":211,"author":{"gitId":"yzhedwin"},"content":"        TaskList a \u003d new TaskList();","lastModifiedDate":"2021-10-11"},{"lineNumber":212,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book C /by \" + DATE_C);","lastModifiedDate":"2021-10-18"},{"lineNumber":213,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book B /by \" + DATE_B);","lastModifiedDate":"2021-10-18"},{"lineNumber":214,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book A /by \" + DATE_A);","lastModifiedDate":"2021-10-18"},{"lineNumber":215,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book D /by \" + DATE_D);","lastModifiedDate":"2021-10-18"},{"lineNumber":216,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book E /by \" + DATE_E);","lastModifiedDate":"2021-10-18"},{"lineNumber":217,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book F /by \" + DATE_OVERDUE);","lastModifiedDate":"2021-10-18"},{"lineNumber":218,"author":{"gitId":"yzhedwin"},"content":"        // Create a stream to hold the output","lastModifiedDate":"2021-10-11"},{"lineNumber":219,"author":{"gitId":"yzhedwin"},"content":"        ByteArrayOutputStream read \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-11"},{"lineNumber":220,"author":{"gitId":"yzhedwin"},"content":"        PrintStream save \u003d new PrintStream(read);","lastModifiedDate":"2021-10-11"},{"lineNumber":221,"author":{"gitId":"yzhedwin"},"content":"        // Tell Java to use your special stream","lastModifiedDate":"2021-10-11"},{"lineNumber":222,"author":{"gitId":"yzhedwin"},"content":"        System.setOut(save);","lastModifiedDate":"2021-10-11"},{"lineNumber":223,"author":{"gitId":"yzhedwin"},"content":"        // Print some output: goes to your special stream","lastModifiedDate":"2021-10-11"},{"lineNumber":224,"author":{"gitId":"yzhedwin"},"content":"        String module \u003d \"moduleName\";","lastModifiedDate":"2021-10-11"},{"lineNumber":225,"author":{"gitId":"yzhedwin"},"content":"        a.showAllYearly(module);","lastModifiedDate":"2021-10-11"},{"lineNumber":226,"author":{"gitId":"yzhedwin"},"content":"        List\u003cString\u003e actualLines \u003d List.of(read.toString().split(\"/n\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":227,"author":{"gitId":"yzhedwin"},"content":"        List\u003cString\u003e expectedLines \u003d getYearlyStrings(module, a.yearlyTaskList().size());","lastModifiedDate":"2021-10-13"},{"lineNumber":228,"author":{"gitId":"yzhedwin"},"content":"        assertLinesMatch(expectedLines, actualLines);","lastModifiedDate":"2021-10-11"},{"lineNumber":229,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":230,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":231,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":232,"author":{"gitId":"yzhedwin"},"content":"    void sortByDate_equal_success() {","lastModifiedDate":"2021-10-28"},{"lineNumber":233,"author":{"gitId":"yzhedwin"},"content":"        Task t1 \u003d new Task(\"Assignment\", DATE_E);","lastModifiedDate":"2021-10-28"},{"lineNumber":234,"author":{"gitId":"yzhedwin"},"content":"        Task t2 \u003d new Task(\"Quiz\", DATE_E);","lastModifiedDate":"2021-10-28"},{"lineNumber":235,"author":{"gitId":"yzhedwin"},"content":"        int result \u003d TaskList.sortByDate.compare(t1, t2);","lastModifiedDate":"2021-10-28"},{"lineNumber":236,"author":{"gitId":"yzhedwin"},"content":"        assertEquals(result, 0);","lastModifiedDate":"2021-10-28"},{"lineNumber":237,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":238,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":239,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":240,"author":{"gitId":"yzhedwin"},"content":"    void sortByDate_leftHeavy_success() {","lastModifiedDate":"2021-10-28"},{"lineNumber":241,"author":{"gitId":"yzhedwin"},"content":"        Task t1 \u003d new Task(\"Assignment\", DATE_E);","lastModifiedDate":"2021-10-28"},{"lineNumber":242,"author":{"gitId":"yzhedwin"},"content":"        Task t2 \u003d new Task(\"Quiz\", DATE_D);","lastModifiedDate":"2021-10-28"},{"lineNumber":243,"author":{"gitId":"yzhedwin"},"content":"        int result \u003d TaskList.sortByDate.compare(t1, t2);","lastModifiedDate":"2021-10-28"},{"lineNumber":244,"author":{"gitId":"yzhedwin"},"content":"        assertTrue(result \u003c 0);","lastModifiedDate":"2021-10-28"},{"lineNumber":245,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":246,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":247,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":248,"author":{"gitId":"yzhedwin"},"content":"    void sortByDate_rightHeavy_success() {","lastModifiedDate":"2021-10-28"},{"lineNumber":249,"author":{"gitId":"yzhedwin"},"content":"        Task t1 \u003d new Task(\"Assignment\", DATE_D);","lastModifiedDate":"2021-10-28"},{"lineNumber":250,"author":{"gitId":"yzhedwin"},"content":"        Task t2 \u003d new Task(\"Quiz\", DATE_E);","lastModifiedDate":"2021-10-28"},{"lineNumber":251,"author":{"gitId":"yzhedwin"},"content":"        int result \u003d TaskList.sortByDate.compare(t1, t2);","lastModifiedDate":"2021-10-28"},{"lineNumber":252,"author":{"gitId":"yzhedwin"},"content":"        assertTrue(result \u003e 0);","lastModifiedDate":"2021-10-28"},{"lineNumber":253,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":254,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":255,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":256,"author":{"gitId":"yzhedwin"},"content":"    void sortByStatus_bothDone_success() {","lastModifiedDate":"2021-10-28"},{"lineNumber":257,"author":{"gitId":"yzhedwin"},"content":"        Task t1 \u003d new Task(\"Assignment\", DATE_A);","lastModifiedDate":"2021-10-28"},{"lineNumber":258,"author":{"gitId":"yzhedwin"},"content":"        Task t2 \u003d new Task(\"Homework\", DATE_A);","lastModifiedDate":"2021-10-28"},{"lineNumber":259,"author":{"gitId":"yzhedwin"},"content":"        t1.markDone();","lastModifiedDate":"2021-10-28"},{"lineNumber":260,"author":{"gitId":"yzhedwin"},"content":"        t2.markDone();","lastModifiedDate":"2021-10-28"},{"lineNumber":261,"author":{"gitId":"yzhedwin"},"content":"        int result \u003d TaskList.sortByStatus.compare(t1, t2);","lastModifiedDate":"2021-10-28"},{"lineNumber":262,"author":{"gitId":"yzhedwin"},"content":"        assertEquals(result, 0);","lastModifiedDate":"2021-10-28"},{"lineNumber":263,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":264,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":265,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":266,"author":{"gitId":"yzhedwin"},"content":"    void sortByStatus_bothNotDone_success() {","lastModifiedDate":"2021-10-28"},{"lineNumber":267,"author":{"gitId":"yzhedwin"},"content":"        Task t1 \u003d new Task(\"Assignment\", DATE_A);","lastModifiedDate":"2021-10-28"},{"lineNumber":268,"author":{"gitId":"yzhedwin"},"content":"        Task t2 \u003d new Task(\"Homework\", DATE_A);","lastModifiedDate":"2021-10-28"},{"lineNumber":269,"author":{"gitId":"yzhedwin"},"content":"        int result \u003d TaskList.sortByStatus.compare(t1, t2);","lastModifiedDate":"2021-10-28"},{"lineNumber":270,"author":{"gitId":"yzhedwin"},"content":"        assertEquals(result, 0);","lastModifiedDate":"2021-10-28"},{"lineNumber":271,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":272,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":273,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":274,"author":{"gitId":"yzhedwin"},"content":"    void sortByStatus_leftHeavy_success() {","lastModifiedDate":"2021-10-28"},{"lineNumber":275,"author":{"gitId":"yzhedwin"},"content":"        Task t1 \u003d new Task(\"Assignment\", DATE_A);","lastModifiedDate":"2021-10-28"},{"lineNumber":276,"author":{"gitId":"yzhedwin"},"content":"        Task t2 \u003d new Task(\"Homework\", DATE_A);","lastModifiedDate":"2021-10-28"},{"lineNumber":277,"author":{"gitId":"yzhedwin"},"content":"        t1.markDone();","lastModifiedDate":"2021-10-28"},{"lineNumber":278,"author":{"gitId":"yzhedwin"},"content":"        int result \u003d TaskList.sortByStatus.compare(t1, t2);","lastModifiedDate":"2021-10-28"},{"lineNumber":279,"author":{"gitId":"yzhedwin"},"content":"        assertTrue(result \u003e 0);","lastModifiedDate":"2021-10-28"},{"lineNumber":280,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":281,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":282,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":283,"author":{"gitId":"yzhedwin"},"content":"    void sortByStatus_rightHeavy_success() {","lastModifiedDate":"2021-10-28"},{"lineNumber":284,"author":{"gitId":"yzhedwin"},"content":"        Task t1 \u003d new Task(\"Assignment\", DATE_A);","lastModifiedDate":"2021-10-28"},{"lineNumber":285,"author":{"gitId":"yzhedwin"},"content":"        Task t2 \u003d new Task(\"Homework\", DATE_A);","lastModifiedDate":"2021-10-28"},{"lineNumber":286,"author":{"gitId":"yzhedwin"},"content":"        t2.markDone();","lastModifiedDate":"2021-10-28"},{"lineNumber":287,"author":{"gitId":"yzhedwin"},"content":"        int result \u003d TaskList.sortByStatus.compare(t1, t2);","lastModifiedDate":"2021-10-28"},{"lineNumber":288,"author":{"gitId":"yzhedwin"},"content":"        assertTrue(result \u003c 0);","lastModifiedDate":"2021-10-28"},{"lineNumber":289,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":290,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":291,"author":{"gitId":"yzhedwin"},"content":"    private List\u003cString\u003e getSortedDateStrings(String module) {","lastModifiedDate":"2021-10-28"},{"lineNumber":292,"author":{"gitId":"yzhedwin"},"content":"        return Collections.singletonList(module.toUpperCase(Locale.ROOT) + \" successfully sorted by date\"","lastModifiedDate":"2021-10-28"},{"lineNumber":293,"author":{"gitId":"yzhedwin"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":294,"author":{"gitId":"yzhedwin"},"content":"                + \"1.[LATE][ ] Read Book F by: \" + DateParser.dateStringOutput(DateParser.parseDate(DATE_OVERDUE))","lastModifiedDate":"2021-10-28"},{"lineNumber":295,"author":{"gitId":"yzhedwin"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":296,"author":{"gitId":"yzhedwin"},"content":"                + \"2.[ ] Read Book A by: \" + DateParser.dateStringOutput(DateParser.parseDate(DATE_A))","lastModifiedDate":"2021-10-28"},{"lineNumber":297,"author":{"gitId":"yzhedwin"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":298,"author":{"gitId":"yzhedwin"},"content":"                + \"3.[ ] Read Book B by: \" + DateParser.dateStringOutput(DateParser.parseDate(DATE_B))","lastModifiedDate":"2021-10-28"},{"lineNumber":299,"author":{"gitId":"yzhedwin"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":300,"author":{"gitId":"yzhedwin"},"content":"                + \"4.[ ] Read Book C by: \" + DateParser.dateStringOutput(DateParser.parseDate(DATE_C))","lastModifiedDate":"2021-10-28"},{"lineNumber":301,"author":{"gitId":"yzhedwin"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":302,"author":{"gitId":"yzhedwin"},"content":"                + \"5.[ ] Read Book E by: \" + DateParser.dateStringOutput(DateParser.parseDate(DATE_E))","lastModifiedDate":"2021-10-28"},{"lineNumber":303,"author":{"gitId":"yzhedwin"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":304,"author":{"gitId":"yzhedwin"},"content":"                + \"6.[ ] Read Book D by: \" + DateParser.dateStringOutput(DateParser.parseDate(DATE_D))","lastModifiedDate":"2021-10-28"},{"lineNumber":305,"author":{"gitId":"yzhedwin"},"content":"                + System.lineSeparator());","lastModifiedDate":"2021-10-28"},{"lineNumber":306,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":307,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":308,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":309,"author":{"gitId":"yzhedwin"},"content":"    void printTaskListSortedByDate_success() {","lastModifiedDate":"2021-10-28"},{"lineNumber":310,"author":{"gitId":"yzhedwin"},"content":"        TaskList a \u003d new TaskList();","lastModifiedDate":"2021-10-28"},{"lineNumber":311,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book C /by \" + DATE_C);","lastModifiedDate":"2021-10-28"},{"lineNumber":312,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book B /by \" + DATE_B);","lastModifiedDate":"2021-10-28"},{"lineNumber":313,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book A /by \" + DATE_A);","lastModifiedDate":"2021-10-28"},{"lineNumber":314,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book D /by \" + DATE_D);","lastModifiedDate":"2021-10-28"},{"lineNumber":315,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book E /by \" + DATE_E);","lastModifiedDate":"2021-10-28"},{"lineNumber":316,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book F /by \" + DATE_OVERDUE);","lastModifiedDate":"2021-10-28"},{"lineNumber":317,"author":{"gitId":"yzhedwin"},"content":"        // Create a stream to hold the output","lastModifiedDate":"2021-10-28"},{"lineNumber":318,"author":{"gitId":"yzhedwin"},"content":"        ByteArrayOutputStream read \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-28"},{"lineNumber":319,"author":{"gitId":"yzhedwin"},"content":"        PrintStream save \u003d new PrintStream(read);","lastModifiedDate":"2021-10-28"},{"lineNumber":320,"author":{"gitId":"yzhedwin"},"content":"        // Tell Java to use your special stream","lastModifiedDate":"2021-10-28"},{"lineNumber":321,"author":{"gitId":"yzhedwin"},"content":"        System.setOut(save);","lastModifiedDate":"2021-10-28"},{"lineNumber":322,"author":{"gitId":"yzhedwin"},"content":"        // Print some output: goes to your special stream","lastModifiedDate":"2021-10-28"},{"lineNumber":323,"author":{"gitId":"yzhedwin"},"content":"        String module \u003d \"moduleName\";","lastModifiedDate":"2021-10-28"},{"lineNumber":324,"author":{"gitId":"yzhedwin"},"content":"        a.sortTaskListByDate(module);","lastModifiedDate":"2021-10-28"},{"lineNumber":325,"author":{"gitId":"yzhedwin"},"content":"        a.printTasks(a.getTaskList());","lastModifiedDate":"2021-10-28"},{"lineNumber":326,"author":{"gitId":"yzhedwin"},"content":"        List\u003cString\u003e actualLines \u003d List.of(read.toString().split(\"/n\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":327,"author":{"gitId":"yzhedwin"},"content":"        List\u003cString\u003e expectedLines \u003d getSortedDateStrings(module);","lastModifiedDate":"2021-10-28"},{"lineNumber":328,"author":{"gitId":"yzhedwin"},"content":"        assertLinesMatch(expectedLines, actualLines);","lastModifiedDate":"2021-10-28"},{"lineNumber":329,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":330,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":331,"author":{"gitId":"yzhedwin"},"content":"    private List\u003cString\u003e getSortedStatusStrings(String module) {","lastModifiedDate":"2021-10-28"},{"lineNumber":332,"author":{"gitId":"yzhedwin"},"content":"        return Collections.singletonList(module.toUpperCase(Locale.ROOT) + \" successfully sorted by status\"","lastModifiedDate":"2021-10-28"},{"lineNumber":333,"author":{"gitId":"yzhedwin"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":334,"author":{"gitId":"yzhedwin"},"content":"                + \"1.[ ] Read Book D by: \" + DateParser.dateStringOutput(DateParser.parseDate(DATE_D))","lastModifiedDate":"2021-10-28"},{"lineNumber":335,"author":{"gitId":"yzhedwin"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":336,"author":{"gitId":"yzhedwin"},"content":"                + \"2.[ ] Read Book E by: \" + DateParser.dateStringOutput(DateParser.parseDate(DATE_E))","lastModifiedDate":"2021-10-28"},{"lineNumber":337,"author":{"gitId":"yzhedwin"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":338,"author":{"gitId":"yzhedwin"},"content":"                + \"3.[LATE][ ] Read Book F by: \" + DateParser.dateStringOutput(DateParser.parseDate(DATE_OVERDUE))","lastModifiedDate":"2021-10-28"},{"lineNumber":339,"author":{"gitId":"yzhedwin"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":340,"author":{"gitId":"yzhedwin"},"content":"                + \"4.[X] Read Book C by: \" + DateParser.dateStringOutput(DateParser.parseDate(DATE_C))","lastModifiedDate":"2021-10-28"},{"lineNumber":341,"author":{"gitId":"yzhedwin"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":342,"author":{"gitId":"yzhedwin"},"content":"                + \"5.[X] Read Book B by: \" + DateParser.dateStringOutput(DateParser.parseDate(DATE_B))","lastModifiedDate":"2021-10-28"},{"lineNumber":343,"author":{"gitId":"yzhedwin"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-28"},{"lineNumber":344,"author":{"gitId":"yzhedwin"},"content":"                + \"6.[X] Read Book A by: \" + DateParser.dateStringOutput(DateParser.parseDate(DATE_A))","lastModifiedDate":"2021-10-28"},{"lineNumber":345,"author":{"gitId":"yzhedwin"},"content":"                + System.lineSeparator());","lastModifiedDate":"2021-10-28"},{"lineNumber":346,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":347,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":348,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":349,"author":{"gitId":"yzhedwin"},"content":"    void printTaskListSortedByStatus_success() {","lastModifiedDate":"2021-10-28"},{"lineNumber":350,"author":{"gitId":"yzhedwin"},"content":"        TaskList a \u003d new TaskList();","lastModifiedDate":"2021-10-28"},{"lineNumber":351,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book C /by \" + DATE_C);","lastModifiedDate":"2021-10-28"},{"lineNumber":352,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book B /by \" + DATE_B);","lastModifiedDate":"2021-10-28"},{"lineNumber":353,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book A /by \" + DATE_A);","lastModifiedDate":"2021-10-28"},{"lineNumber":354,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book D /by \" + DATE_D);","lastModifiedDate":"2021-10-28"},{"lineNumber":355,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book E /by \" + DATE_E);","lastModifiedDate":"2021-10-28"},{"lineNumber":356,"author":{"gitId":"yzhedwin"},"content":"        a.addTask(\"cs1010\", \"Read Book F /by \" + DATE_OVERDUE);","lastModifiedDate":"2021-10-28"},{"lineNumber":357,"author":{"gitId":"yzhedwin"},"content":"        a.get(2).markDone();","lastModifiedDate":"2021-10-28"},{"lineNumber":358,"author":{"gitId":"yzhedwin"},"content":"        a.get(1).markDone();","lastModifiedDate":"2021-10-28"},{"lineNumber":359,"author":{"gitId":"yzhedwin"},"content":"        a.get(0).markDone();","lastModifiedDate":"2021-10-28"},{"lineNumber":360,"author":{"gitId":"yzhedwin"},"content":"        // Create a stream to hold the output","lastModifiedDate":"2021-10-28"},{"lineNumber":361,"author":{"gitId":"yzhedwin"},"content":"        ByteArrayOutputStream read \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-28"},{"lineNumber":362,"author":{"gitId":"yzhedwin"},"content":"        PrintStream save \u003d new PrintStream(read);","lastModifiedDate":"2021-10-28"},{"lineNumber":363,"author":{"gitId":"yzhedwin"},"content":"        // Tell Java to use your special stream","lastModifiedDate":"2021-10-28"},{"lineNumber":364,"author":{"gitId":"yzhedwin"},"content":"        System.setOut(save);","lastModifiedDate":"2021-10-28"},{"lineNumber":365,"author":{"gitId":"yzhedwin"},"content":"        // Print some output: goes to your special stream","lastModifiedDate":"2021-10-28"},{"lineNumber":366,"author":{"gitId":"yzhedwin"},"content":"        String module \u003d \"moduleName\";","lastModifiedDate":"2021-10-28"},{"lineNumber":367,"author":{"gitId":"yzhedwin"},"content":"        a.sortTaskListByStatus(module);","lastModifiedDate":"2021-10-28"},{"lineNumber":368,"author":{"gitId":"yzhedwin"},"content":"        a.printTasks(a.getTaskList());","lastModifiedDate":"2021-10-28"},{"lineNumber":369,"author":{"gitId":"yzhedwin"},"content":"        List\u003cString\u003e actualLines \u003d List.of(read.toString().split(\"/n\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":370,"author":{"gitId":"yzhedwin"},"content":"        List\u003cString\u003e expectedLines \u003d getSortedStatusStrings(module);","lastModifiedDate":"2021-10-28"},{"lineNumber":371,"author":{"gitId":"yzhedwin"},"content":"        assertLinesMatch(expectedLines, actualLines);","lastModifiedDate":"2021-10-28"},{"lineNumber":372,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":373,"author":{"gitId":"yzhedwin"},"content":"}","lastModifiedDate":"2021-10-11"},{"lineNumber":374,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"naijie2108":5,"DmitriYam":1,"yzhedwin":368}},{"path":"src/test/java/task/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yzhedwin"},"content":"package task;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"yzhedwin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"yzhedwin"},"content":"public class TaskTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"yzhedwin"},"content":"    void markDone_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"yzhedwin"},"content":"        Task task \u003d new Task(\"Submit Assignment 1\", \"19/09/2021 1600\");","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"yzhedwin"},"content":"        task.markDone();","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"yzhedwin"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"yzhedwin"},"content":"    void markNotDone_success() {","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"yzhedwin"},"content":"        Task task \u003d new Task(\"Submit Assignment 1\", \"19/09/2021 1600\");","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"yzhedwin"},"content":"        task.markNotDone();","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"yzhedwin"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"yzhedwin"},"content":"    void getStatusIcon_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"yzhedwin"},"content":"        Task task \u003d new Task(\"Submit Assignment 1\", \"19/09/2021 1600\");","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"yzhedwin"},"content":"        task.markDone();","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"naijie2108"},"content":"        task.createStatusIcon();","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"naijie2108"},"content":"        assertEquals(\"[X]\", task.createStatusIcon());","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"yzhedwin"},"content":"    void getDescription_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"yzhedwin"},"content":"        Task task \u003d new Task(\"Submit Assignment 1\", \"19/09/2021 1600\");","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"yzhedwin"},"content":"        assertEquals(\"Submit Assignment 1\", task.getDescription());","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"yzhedwin"},"content":"    void getDate_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"yzhedwin"},"content":"        Task task \u003d new Task(\"Submit Assignment 1\", \"19/09/2021 1600\");","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"yzhedwin"},"content":"        assertEquals(\"19/09/2021 1600\", task.getDate());","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"jiexiong-zeng"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"yzhedwin"},"content":"    void setDescription_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"yzhedwin"},"content":"        Task task \u003d new Task(\"Submit Assignment 1\", \"19/09/2021 1600\");","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"yzhedwin"},"content":"        task.setDescription(\"Review Assignment 1\");","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"yzhedwin"},"content":"        assertEquals(\"Review Assignment 1\", task.getDescription());","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"yzhedwin"},"content":"    void setDone_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"yzhedwin"},"content":"        Task task \u003d new Task(\"Submit Assignment 1\", \"19/09/2021 1600\");","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"yzhedwin"},"content":"        task.markDone();","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"yzhedwin"},"content":"        task.setDone(false);","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"yzhedwin"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"yzhedwin"},"content":"    void setDate_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"yzhedwin"},"content":"        Task task \u003d new Task(\"Submit Assignment 1\", \"20/09/2021 1600\");","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"yzhedwin"},"content":"        task.setDate(\"20th October 2021\");","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"naijie2108"},"content":"        assertEquals(\"20th October 2021\", task.getDate());","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"yzhedwin"},"content":"    void setLate_success() {","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"yzhedwin"},"content":"        Task task \u003d new Task(\"Submit Assignment 1\", \"20/09/2021 1600\");","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"yzhedwin"},"content":"        task.setLate(true);","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"yzhedwin"},"content":"        assertTrue(task.isLate);","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"yzhedwin"},"content":"    void updateOverdue_success() {","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"yzhedwin"},"content":"        Task task \u003d new Task(\"Submit Assignment 1\", \"20/09/2021 1600\");","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"yzhedwin"},"content":"        assertFalse(task.isLate);","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"yzhedwin"},"content":"        task.updateOverdue();","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"yzhedwin"},"content":"        assertTrue(task.isLate);","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"yzhedwin"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"yzhedwin"},"content":"    void createFormattedDeadline_success() {","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"yzhedwin"},"content":"        Task task \u003d new Task(\"Submit Assignment 1\", \"20/09/2021 1600\");","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"yzhedwin"},"content":"        String actual \u003d task.createFormattedDeadline();","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"yzhedwin"},"content":"        String expected \u003d \"20 SEP 2021 4PM\";","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"yzhedwin"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"yzhedwin"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"yzhedwin"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"naijie2108":11,"yzhedwin":78,"jiexiong-zeng":1}}]
