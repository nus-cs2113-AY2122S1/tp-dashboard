[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"    enableAssertions \u003d true;","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":46,"bobowoo2468":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"![image](https://user-images.githubusercontent.com/62021897/140710285-5c0a50ae-40b5-485c-a97b-d310cead7151.png) | Woo Bo Tuan | [Bobowoo2468](https://github.com/Bobowoo2468) | [Portfolio](team/bobowoo2468.md)","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"![Sam_Potrait](https://user-images.githubusercontent.com/62021897/140722740-fcad3644-2516-452c-aff0-dad4e41af303.jpg) | Wong Tze Shan Samantha | [swongts](https://github.com/swongts) | [Portfolio](team/swongts.md)","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":"![image](https://user-images.githubusercontent.com/79963329/140712676-0fa1f0ec-8fb9-43b4-b2e0-59ab7e31e678.jpg)| Yip Wayne | [YipWayne](https://github.com/YipWayne) | [Portfolio](team/YipWayne.md)","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Zhou Chengxu | [Demonshaha](https://github.com/Demonshaha) | [Portfolio](team/Demonshaha.md)","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"YipWayne":3,"Demonshaha":1,"-":4,"bobowoo2468":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"## Table of Contents","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"YipWayne"},"content":"- [Getting Started](#getting-started)","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"    - [Recommended software (for optimal compatability)](#recommended-software-for-optimal-compatibility)","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":"    - [Setting up this project in your computer](#setting-up-this-project-in-your-computer)","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"YipWayne"},"content":"- [Design \u0026 Implementation](#design--implementation)","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"YipWayne"},"content":"    - [Architecture](#architecture)","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"    - [Parser](#parser-component)","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"    - [Ui component](#ui-component)","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"    - [Command component](#command-component)","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"        - [Add feature](#add-feature)","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"        - [Cut feature](#cut-feature)","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"        - [List feature](#list-feature)","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"        - [Find feature](#find-feature)","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"        - [Sort feature](#sort-feature)","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"    - [Storage component](#storage-component)","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"- [Appendix A: Product Scope](#appendix-a-product-scope)","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"YipWayne"},"content":"    - [Target user profile](#target-user-profile)","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"YipWayne"},"content":"    - [Value proposition](#value-proposition)","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"- [Appendix B: User Stories](#appendix-b-user-stories)","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"- [Appendix C: Non-Functional Requirements](#appendix-c-non-functional-requirements)","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"- [Appendix D: Glossary](#appendix-d-glossary)","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"- [Appendix E: Instructions for manual testing](#appendix-e-instructions-for-manual-testing)","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"YipWayne"},"content":"## Getting Started","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"YipWayne"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"### Recommended software (for optimal compatibility)","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"YipWayne"},"content":"* GitHub","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"YipWayne"},"content":"* Sourcetree (for version control)","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"YipWayne"},"content":"* IntelliJ IDEA (IDE)","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"YipWayne"},"content":"* Amazon Coretto","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"YipWayne"},"content":"### Setting up this project in your computer","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"YipWayne"},"content":"1. On Github, fork this repo by clicking on the fork button","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"YipWayne"},"content":"2. In Sourcetree, clone the fork into your computer","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"YipWayne"},"content":"    1. Open a new tab","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"YipWayne"},"content":"    2. Select the clone button at the top of the menu","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"YipWayne"},"content":"    3. Key in the details of this repository","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"YipWayne"},"content":"3. Configure the JDK: Follow the guide [Project Configuration/ SDKs](https://www.jetbrains.com/help/idea/sdk.html)","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"YipWayne"},"content":"   to ensure that Intellij is configured to use JDK 11.","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"bobowoo2468"},"content":"4. Import the project as a Gradle project: Follow the","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"bobowoo2468"},"content":"   guide [Intellij IDEA: Importing a Gradle project](https://se-education.org/guides/tutorials/intellijImportGradleProject.html)","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"YipWayne"},"content":"5. Verify the setup:","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"YipWayne"},"content":"    1. Run the seedu.duke.TourPlanner and try a few commands.","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"YipWayne"},"content":"    2. Run the tests to ensure they all pass.","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":69,"author":{"gitId":"YipWayne"},"content":"## Design \u0026 Implementation","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"YipWayne"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":73,"author":{"gitId":"YipWayne"},"content":"## Architecture","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"YipWayne"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"swongts"},"content":"The diagram below shows the high-level design of TourPlanner:","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"bobowoo2468"},"content":"![Architecture Class Diagram](https://user-images.githubusercontent.com/62021897/140712865-752a92c6-da93-42a2-9d12-66f4182df56c.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":80,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"YipWayne"},"content":"Below is an overview of the main components, and how they interact with each other.","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"YipWayne"},"content":"**Main components**","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":85,"author":{"gitId":"YipWayne"},"content":"```TourPlanner``` acts as the main class. It is responsible for:","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":87,"author":{"gitId":"YipWayne"},"content":"* At app launch: Initialises the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"swongts"},"content":"* While app is running: Executes commands from the user.","lastModifiedDate":"2021-11-08"},{"lineNumber":89,"author":{"gitId":"YipWayne"},"content":"* At shut down: Shuts down the components and invokes clean-up methods where necessary.","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"YipWayne"},"content":"The rest of the app consists of the following components:","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":93,"author":{"gitId":"YipWayne"},"content":"* ```Ui```: The UI of the application.","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"swongts"},"content":"* ```Parser```: Deciphers user input and returns the appropriate command to `TourPlanner`.","lastModifiedDate":"2021-11-08"},{"lineNumber":95,"author":{"gitId":"YipWayne"},"content":"* ```Command```: The different types of commands that can possibly be executed.","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"bobowoo2468"},"content":"* ```ObjectList```: Holds data in different arrays, based on their type. Namely there are four types of ObjectLists:","lastModifiedDate":"2021-11-06"},{"lineNumber":97,"author":{"gitId":"swongts"},"content":"    * `ClientList`","lastModifiedDate":"2021-11-08"},{"lineNumber":98,"author":{"gitId":"swongts"},"content":"    * `TourList`","lastModifiedDate":"2021-11-08"},{"lineNumber":99,"author":{"gitId":"swongts"},"content":"    * `FlightList`","lastModifiedDate":"2021-11-08"},{"lineNumber":100,"author":{"gitId":"swongts"},"content":"    * `ClientPackageList`","lastModifiedDate":"2021-11-08"},{"lineNumber":101,"author":{"gitId":"bobowoo2468"},"content":"* ```Storage```: Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2021-11-06"},{"lineNumber":102,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":104,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":105,"author":{"gitId":"YipWayne"},"content":"**Interaction of components**","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"bobowoo2468"},"content":"The diagram below shows how the components interact with each other if the user inputs the command ```list -c```:","lastModifiedDate":"2021-11-06"},{"lineNumber":108,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"swongts"},"content":"![ListClientCommand](https://user-images.githubusercontent.com/70316271/140695121-080a0611-4c22-4399-b460-eb5b0454e445.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":110,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":111,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":112,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":113,"author":{"gitId":"bobowoo2468"},"content":"## Parser component","lastModifiedDate":"2021-11-06"},{"lineNumber":114,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":115,"author":{"gitId":"bobowoo2468"},"content":"\u003chr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":116,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":117,"author":{"gitId":"bobowoo2468"},"content":"**API: `Parser.java`**","lastModifiedDate":"2021-11-06"},{"lineNumber":118,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":119,"author":{"gitId":"bobowoo2468"},"content":"The Sequence Diagram below illustrates the flow of parsing a command:","lastModifiedDate":"2021-11-06"},{"lineNumber":120,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":121,"author":{"gitId":"bobowoo2468"},"content":"Here is a class diagram of Parser component:","lastModifiedDate":"2021-11-07"},{"lineNumber":122,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":123,"author":{"gitId":"swongts"},"content":"![Parser](https://user-images.githubusercontent.com/70316271/140693617-31b988e6-90ff-46b5-8af1-8921ca1ef3fa.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":124,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":125,"author":{"gitId":"bobowoo2468"},"content":"The flow of **parse** in `Parser` is as follows:","lastModifiedDate":"2021-11-06"},{"lineNumber":126,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":127,"author":{"gitId":"bobowoo2468"},"content":"**Step 1.** `Parser` splits the user input String to identify user\u0027s **Command** (add, list, cut etc.).","lastModifiedDate":"2021-11-06"},{"lineNumber":128,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":129,"author":{"gitId":"swongts"},"content":"**Step 2.** Depending on the Command, `Parser` calls `parseXYZ()` method respective to the `XYZCommand`","lastModifiedDate":"2021-11-08"},{"lineNumber":130,"author":{"gitId":"swongts"},"content":"(`XYZ` is a placeholder for the specific command e.g. `AddClientCommand`) given.","lastModifiedDate":"2021-11-08"},{"lineNumber":131,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":132,"author":{"gitId":"swongts"},"content":"**Step 3.** `Parser` creates an `XYZCommand` object which Parser returns as a `Command` object.","lastModifiedDate":"2021-11-08"},{"lineNumber":133,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":134,"author":{"gitId":"swongts"},"content":"**Step 4.** `XYZCommand` is returned to `TourPlanner` to be executed.","lastModifiedDate":"2021-11-08"},{"lineNumber":135,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":136,"author":{"gitId":"bobowoo2468"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":137,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":138,"author":{"gitId":"bobowoo2468"},"content":"### Example of parse mechanism - `ParseAdd`","lastModifiedDate":"2021-11-07"},{"lineNumber":139,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":140,"author":{"gitId":"bobowoo2468"},"content":"Given below is an example scenario, outlining how parseAdd behaves at each step.","lastModifiedDate":"2021-11-07"},{"lineNumber":141,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":142,"author":{"gitId":"bobowoo2468"},"content":"**Step 1.** `Parser` first identifies the identifier for add, namely `-c` (add client), `-t` (add tour), `-f` (add","lastModifiedDate":"2021-11-07"},{"lineNumber":143,"author":{"gitId":"bobowoo2468"},"content":"flight), `-p` (add package), by splitting the identifier and the rest of the string by spaces.","lastModifiedDate":"2021-11-07"},{"lineNumber":144,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":145,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-11-07"},{"lineNumber":146,"author":{"gitId":"bobowoo2468"},"content":"-t JPN /n Japan Tour /p 1500 --\u003e [-t, JPN, /n, Japan Tour, /p 1500]","lastModifiedDate":"2021-11-07"},{"lineNumber":147,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-11-07"},{"lineNumber":148,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":149,"author":{"gitId":"bobowoo2468"},"content":"**Step 2.** Next, `Parser` checks if all prefixes for data fields e.g. name, price, id are present.","lastModifiedDate":"2021-11-07"},{"lineNumber":150,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":151,"author":{"gitId":"bobowoo2468"},"content":"**Step 3.** To sort the values for addition, the prefixes and their corresponding indexes are stored as key-value pairs","lastModifiedDate":"2021-11-07"},{"lineNumber":152,"author":{"gitId":"bobowoo2468"},"content":"into a TreeMap. A TreeMap helps to sort the pairs by the natural ordering of the keys.","lastModifiedDate":"2021-11-07"},{"lineNumber":153,"author":{"gitId":"bobowoo2468"},"content":":information_source: See [TreeMap](#appendix-d-glossary).","lastModifiedDate":"2021-11-08"},{"lineNumber":154,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":155,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-11-07"},{"lineNumber":156,"author":{"gitId":"bobowoo2468"},"content":"^JPN ^/n Japan Tour ^/p 1500 --\u003e [(0, null), (4, /n), (18, /p)] (sorted)","lastModifiedDate":"2021-11-07"},{"lineNumber":157,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-11-07"},{"lineNumber":158,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":159,"author":{"gitId":"bobowoo2468"},"content":"**Step 4.** The prefix and its index will facilitate splitting the string into substrings, containing both the prefix","lastModifiedDate":"2021-11-07"},{"lineNumber":160,"author":{"gitId":"bobowoo2468"},"content":"and the value corresponding to the prefix.","lastModifiedDate":"2021-11-07"},{"lineNumber":161,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":162,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-11-07"},{"lineNumber":163,"author":{"gitId":"bobowoo2468"},"content":"-t JPN /n Japan Tour /p 1500 --\u003e [JPN, /n Japan Tour, /p 1500] ","lastModifiedDate":"2021-11-07"},{"lineNumber":164,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-11-07"},{"lineNumber":165,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":166,"author":{"gitId":"bobowoo2468"},"content":"**Step 5.** Given the prefix, the array index that the value will be inserted into is predetermined.","lastModifiedDate":"2021-11-07"},{"lineNumber":167,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":168,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-11-07"},{"lineNumber":169,"author":{"gitId":"bobowoo2468"},"content":"[JPN, /n Japan Tour, /p 1500] --\u003e [JPN, Japan Tour, 1500] ","lastModifiedDate":"2021-11-07"},{"lineNumber":170,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-11-07"},{"lineNumber":171,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":172,"author":{"gitId":"bobowoo2468"},"content":"**Step 6.** The value is extracted from the substring by removing the prefix, and inserted into an array. The array is","lastModifiedDate":"2021-11-07"},{"lineNumber":173,"author":{"gitId":"bobowoo2468"},"content":"used as an argument for the *Object* constructor.","lastModifiedDate":"2021-11-07"},{"lineNumber":174,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":175,"author":{"gitId":"swongts"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":176,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":177,"author":{"gitId":"swongts"},"content":"## UI Component","lastModifiedDate":"2021-11-08"},{"lineNumber":178,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":179,"author":{"gitId":"swongts"},"content":"\u003chr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":180,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":181,"author":{"gitId":"swongts"},"content":"**API: `Ui.java`**","lastModifiedDate":"2021-11-08"},{"lineNumber":182,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":183,"author":{"gitId":"swongts"},"content":"The Ui component is the means by which Command(s) can receive inputs from the user, as well as display information to","lastModifiedDate":"2021-11-08"},{"lineNumber":184,"author":{"gitId":"swongts"},"content":"them, all through the console terminal.","lastModifiedDate":"2021-11-08"},{"lineNumber":185,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":186,"author":{"gitId":"swongts"},"content":"The diagram below shows the class diagram of the Ui component, in relation with other major components:","lastModifiedDate":"2021-11-08"},{"lineNumber":187,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":188,"author":{"gitId":"bobowoo2468"},"content":"![Ui Class Diagram](https://user-images.githubusercontent.com/62021897/140712493-2054f2c9-6f58-4353-88ad-1570707ff3ef.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":189,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":190,"author":{"gitId":"swongts"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":191,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":192,"author":{"gitId":"swongts"},"content":"After the user typed in an input into the console terminal and presses \u0027Enter\u0027:","lastModifiedDate":"2021-11-08"},{"lineNumber":193,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":194,"author":{"gitId":"swongts"},"content":"* the ```Ui``` reads the input typed in by the user on the console terminal.","lastModifiedDate":"2021-11-08"},{"lineNumber":195,"author":{"gitId":"swongts"},"content":"* the ```Parser``` class parses the read input and calls the appropriate ```Command```. (see the ```Parser```","lastModifiedDate":"2021-11-08"},{"lineNumber":196,"author":{"gitId":"swongts"},"content":"  and ```Command``` sections for more information)","lastModifiedDate":"2021-11-08"},{"lineNumber":197,"author":{"gitId":"swongts"},"content":"* the called ```Command``` calls a function in the ```Ui``` to print the appropriate information onto the console","lastModifiedDate":"2021-11-08"},{"lineNumber":198,"author":{"gitId":"swongts"},"content":"  terminal.","lastModifiedDate":"2021-11-08"},{"lineNumber":199,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":200,"author":{"gitId":"swongts"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":201,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":202,"author":{"gitId":"YipWayne"},"content":"## Command component","lastModifiedDate":"2021-10-30"},{"lineNumber":203,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":204,"author":{"gitId":"YipWayne"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":205,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":206,"author":{"gitId":"swongts"},"content":"**API: `Command.java`**","lastModifiedDate":"2021-11-04"},{"lineNumber":207,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":208,"author":{"gitId":"swongts"},"content":"Here\u0027s a (partial) class diagram of Command component:","lastModifiedDate":"2021-11-04"},{"lineNumber":209,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":210,"author":{"gitId":"swongts"},"content":"![Command class (2)](https://user-images.githubusercontent.com/70316271/140637570-e6a9f453-ea88-46a8-8f3c-e1913e7e938d.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":211,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":212,"author":{"gitId":"bobowoo2468"},"content":":information_source: `XYZ` in this diagram is a placeholder for the specific data type (`Client`, `Flight`, `Tour`","lastModifiedDate":"2021-11-08"},{"lineNumber":213,"author":{"gitId":"swongts"},"content":", `ClientPackage`). A similar workflow applies for these classes depending on the availability of the command for the","lastModifiedDate":"2021-11-08"},{"lineNumber":214,"author":{"gitId":"swongts"},"content":"specific data type.","lastModifiedDate":"2021-11-08"},{"lineNumber":215,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":216,"author":{"gitId":"swongts"},"content":"How the `Command` works:","lastModifiedDate":"2021-11-04"},{"lineNumber":217,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":218,"author":{"gitId":"swongts"},"content":"**Step 1.** Based on the user input, `Parser` returns one of the subclasses of `Command` to `TourPlanner`.","lastModifiedDate":"2021-11-08"},{"lineNumber":219,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":220,"author":{"gitId":"swongts"},"content":"**Step 2.** `TourPlanner` calls `Command.execute()`.","lastModifiedDate":"2021-11-04"},{"lineNumber":221,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":222,"author":{"gitId":"swongts"},"content":"**Step 3.** Corresponding command uses associate classes, `XYZList` (`XYZ` is a placeholder for the specific data type","lastModifiedDate":"2021-11-07"},{"lineNumber":223,"author":{"gitId":"swongts"},"content":"e.g. `Client`) and `Ui` to carry out its function.","lastModifiedDate":"2021-11-07"},{"lineNumber":224,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":225,"author":{"gitId":"swongts"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":226,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":227,"author":{"gitId":"swongts"},"content":"### Add feature","lastModifiedDate":"2021-11-08"},{"lineNumber":228,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"bobowoo2468"},"content":"The add feature is facilitated mainly by `Parser`, and returns an `AddCommand` object. When `AddCommand` is executed,","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"bobowoo2468"},"content":"the values corresponding to their fields are added.","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"bobowoo2468"},"content":"After receiving the command from the user by `readCommand` of `Ui`, the command is parsed by `Parser`. The `Parser`","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"bobowoo2468"},"content":"first determines the command type by separating the command from the subsequent arguments. After determining the","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"bobowoo2468"},"content":"command, `Parser` executes the specific methods to sense-make the arguments, in response to the specific command.","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":236,"author":{"gitId":"bobowoo2468"},"content":"Here are sample add command inputs that can be parsed.","lastModifiedDate":"2021-10-21"},{"lineNumber":237,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":238,"author":{"gitId":"bobowoo2468"},"content":"Example add commands:","lastModifiedDate":"2021-10-21"},{"lineNumber":239,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":240,"author":{"gitId":"bobowoo2468"},"content":"* `add -c c001 /n Bo Tuan /cn 91234567 /m bobotea@gmail.com`","lastModifiedDate":"2021-11-07"},{"lineNumber":241,"author":{"gitId":"bobowoo2468"},"content":"* `add -f SQ-JPN1 /d Japan /r Singapore /dd 29/10/21 13:00 /rd 5/11/21 02:00`","lastModifiedDate":"2021-11-07"},{"lineNumber":242,"author":{"gitId":"bobowoo2468"},"content":"* `add -t t001 /n AustralianRomance /p 1500`","lastModifiedDate":"2021-11-07"},{"lineNumber":243,"author":{"gitId":"bobowoo2468"},"content":"* `add -p p001 /c c001 /f SQ-JPN1 /t t001`","lastModifiedDate":"2021-11-07"},{"lineNumber":244,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":245,"author":{"gitId":"bobowoo2468"},"content":"In general, there is a sequence of steps when any of the 4 `add` commands are called.","lastModifiedDate":"2021-11-07"},{"lineNumber":246,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":247,"author":{"gitId":"bobowoo2468"},"content":"Here is an example usage of `add -c` to add client \"c001\":","lastModifiedDate":"2021-11-07"},{"lineNumber":248,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":249,"author":{"gitId":"bobowoo2468"},"content":"**Step 1.** User inputs `add -c c001 [ARGS...]`. This command is passed to `parse()` method in the `Parser` class.","lastModifiedDate":"2021-11-07"},{"lineNumber":250,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":251,"author":{"gitId":"bobowoo2468"},"content":"**Step 2.** Based on the user input, `parse()` identifies that it is of type `add` command and calls `ParseAdd()`.","lastModifiedDate":"2021-11-07"},{"lineNumber":252,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":253,"author":{"gitId":"bobowoo2468"},"content":"**Step 3** `ParseAdd()` executes three instructions:","lastModifiedDate":"2021-11-07"},{"lineNumber":254,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":255,"author":{"gitId":"bobowoo2468"},"content":"* Extract values from user\u0027s input and creates a `values` Array","lastModifiedDate":"2021-11-07"},{"lineNumber":256,"author":{"gitId":"bobowoo2468"},"content":"* Handle exceptions to the `values` Array, determined by the data type identifier (e.g. `-c`, `-t`)","lastModifiedDate":"2021-11-07"},{"lineNumber":257,"author":{"gitId":"bobowoo2468"},"content":"* Instantiates a `Client`/`Tour`/`Flight`/`ClientPackage` *Object*, determined by the same data type identifier.","lastModifiedDate":"2021-11-07"},{"lineNumber":258,"author":{"gitId":"bobowoo2468"},"content":"* Returns an `AddXYZCommand` based on the same data type identifier, passing in the *Object* as an argument for adding.","lastModifiedDate":"2021-11-07"},{"lineNumber":259,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":260,"author":{"gitId":"bobowoo2468"},"content":"Depending on the type of add command being called, these command types will be returned:","lastModifiedDate":"2021-11-07"},{"lineNumber":261,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":262,"author":{"gitId":"bobowoo2468"},"content":"* `add -c`: `AddClientCommand`","lastModifiedDate":"2021-11-07"},{"lineNumber":263,"author":{"gitId":"bobowoo2468"},"content":"* `add -f`: `AddFlightCommand`","lastModifiedDate":"2021-11-07"},{"lineNumber":264,"author":{"gitId":"bobowoo2468"},"content":"* `add -t`: `AddTourCommand`","lastModifiedDate":"2021-11-07"},{"lineNumber":265,"author":{"gitId":"bobowoo2468"},"content":"* `add -p`: `AddClientPackageCommand`","lastModifiedDate":"2021-11-07"},{"lineNumber":266,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":267,"author":{"gitId":"bobowoo2468"},"content":"The following 2 sections focuses on add for the specific classes.","lastModifiedDate":"2021-11-07"},{"lineNumber":268,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":269,"author":{"gitId":"bobowoo2468"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":270,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":271,"author":{"gitId":"bobowoo2468"},"content":"#### \u003cu\u003eAdding a client package\u003c/u\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":272,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":273,"author":{"gitId":"bobowoo2468"},"content":"Given below is an example usage of `add -p p001 ARGS...` to add client package \"p001\".","lastModifiedDate":"2021-11-07"},{"lineNumber":274,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":275,"author":{"gitId":"bobowoo2468"},"content":"Here is a (partial) sequence diagram of above user input:","lastModifiedDate":"2021-11-07"},{"lineNumber":276,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":277,"author":{"gitId":"bobowoo2468"},"content":"![AddClientPackage Sequence Diagram](https://user-images.githubusercontent.com/62021897/140713338-a743133a-516b-47e3-88b6-e9b5408b226c.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":278,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":279,"author":{"gitId":"bobowoo2468"},"content":"**Step 1.** Parser creates a `values` array, upon extracting values from user\u0027s input.","lastModifiedDate":"2021-11-07"},{"lineNumber":280,"author":{"gitId":"bobowoo2468"},"content":"Creates `AddClientPackageCommand(values)`, determined by the datatype identifier `-p`. Returns the created `Command`","lastModifiedDate":"2021-11-08"},{"lineNumber":281,"author":{"gitId":"bobowoo2468"},"content":"subclass to `TourPlanner`.","lastModifiedDate":"2021-11-08"},{"lineNumber":282,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":283,"author":{"gitId":"bobowoo2468"},"content":"**Step 2.** Then, `execute()` method in `AddClientCommand` is called. `getClientPackageById(\"p001\")` is called, which","lastModifiedDate":"2021-11-07"},{"lineNumber":284,"author":{"gitId":"bobowoo2468"},"content":"finds the `ClientPackage` based on the `CLIENT_PACKAGE_ID` \"p001\".","lastModifiedDate":"2021-11-07"},{"lineNumber":285,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":286,"author":{"gitId":"swongts"},"content":"**Step 3.** If the `CLIENT_PACKAGE_ID` \"p001\" already exists, an error message is returned.","lastModifiedDate":"2021-11-08"},{"lineNumber":287,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":288,"author":{"gitId":"bobowoo2468"},"content":"**Step 4.** Else, the `CLIENT_PACKAGE_ID` \"p001\" does not exist, `execute()` calls `createClientPackage` which finds the","lastModifiedDate":"2021-11-08"},{"lineNumber":289,"author":{"gitId":"bobowoo2468"},"content":"specific `Client`, `Tour` and `Flight` objects to be added to the `ClientPackage`","lastModifiedDate":"2021-11-08"},{"lineNumber":290,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":291,"author":{"gitId":"swongts"},"content":"**Step 5.** Then, `add` in `ClientPackageList` is called, to add the specific `ClientPackage` into `ClientPackageList`.","lastModifiedDate":"2021-11-08"},{"lineNumber":292,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":293,"author":{"gitId":"swongts"},"content":"**Step 5.** `execute()` calls `showAdd` in `Ui`, which prints out the Object, `ClientPackage` that was added.","lastModifiedDate":"2021-11-08"},{"lineNumber":294,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":295,"author":{"gitId":"bobowoo2468"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":296,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":297,"author":{"gitId":"bobowoo2468"},"content":"#### \u003cu\u003eAdding a particular client / tour / flight\u003c/u\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":298,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":299,"author":{"gitId":"bobowoo2468"},"content":"Given below is an example usage of `add -t t001 ARGS...` to add tour with the respective arguments.","lastModifiedDate":"2021-11-07"},{"lineNumber":300,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":301,"author":{"gitId":"bobowoo2468"},"content":"Here is a (partial) sequence diagram for above user input:","lastModifiedDate":"2021-11-07"},{"lineNumber":302,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":303,"author":{"gitId":"bobowoo2468"},"content":"![AddCommand](https://user-images.githubusercontent.com/62021897/140713091-70c5b626-ec86-4122-a2c9-6b0f47b0a564.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":304,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":305,"author":{"gitId":"bobowoo2468"},"content":"**Step 1.** `Parser` parses the input and instantiates `AddTourCommand`. It then returns it to `TourPlanner`.","lastModifiedDate":"2021-11-07"},{"lineNumber":306,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":307,"author":{"gitId":"bobowoo2468"},"content":"**Step 2.** Then, `execute()` method in `AddTourCommand` is called. `getTourById(\"t001\")` is called, which finds","lastModifiedDate":"2021-11-07"},{"lineNumber":308,"author":{"gitId":"bobowoo2468"},"content":"the `Tour` based on the `TOUR_ID` \"t001\".","lastModifiedDate":"2021-11-07"},{"lineNumber":309,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":310,"author":{"gitId":"bobowoo2468"},"content":"**Step 3.** If the `TOUR_ID` \"t001\" already exists, an error message is returned.","lastModifiedDate":"2021-11-07"},{"lineNumber":311,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":312,"author":{"gitId":"swongts"},"content":"**Step 4.** Else, the `TOUR_ID` \"t001\" does not exist, `execute()` calls `add` in `TourList`, to add the specific client","lastModifiedDate":"2021-11-08"},{"lineNumber":313,"author":{"gitId":"swongts"},"content":"package and its arguments into the `TourList`.","lastModifiedDate":"2021-11-08"},{"lineNumber":314,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":315,"author":{"gitId":"bobowoo2468"},"content":"**Step 5.** `execute()` calls `showAdd` in `Ui`, which prints out the Object, `Tour` that was added.","lastModifiedDate":"2021-11-07"},{"lineNumber":316,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":318,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":320,"author":{"gitId":"swongts"},"content":"### Cut feature","lastModifiedDate":"2021-11-08"},{"lineNumber":321,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":322,"author":{"gitId":"swongts"},"content":"The `cut` feature is used to remove an entry from the `ObjectList` (for `Client`, `Tour`, `Flight` and `ClientPackage`),","lastModifiedDate":"2021-11-08"},{"lineNumber":323,"author":{"gitId":"swongts"},"content":"where `Parser` determines the `ObjectList` to remove from.","lastModifiedDate":"2021-11-04"},{"lineNumber":324,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":325,"author":{"gitId":"swongts"},"content":"It implements these following types of `cut` commands:","lastModifiedDate":"2021-11-04"},{"lineNumber":326,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":327,"author":{"gitId":"swongts"},"content":"* `cut -c CLIENT_ID`","lastModifiedDate":"2021-11-04"},{"lineNumber":328,"author":{"gitId":"swongts"},"content":"* `cut -t TOUR_ID`","lastModifiedDate":"2021-11-04"},{"lineNumber":329,"author":{"gitId":"swongts"},"content":"* `cut -f FLIGHT_ID`","lastModifiedDate":"2021-11-04"},{"lineNumber":330,"author":{"gitId":"swongts"},"content":"* `cut -p CLIENTPACKAGE_ID`","lastModifiedDate":"2021-11-04"},{"lineNumber":331,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":332,"author":{"gitId":"swongts"},"content":"In general, there is a sequence of steps when any of the 4 `cut` commands are called.","lastModifiedDate":"2021-11-04"},{"lineNumber":333,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":334,"author":{"gitId":"swongts"},"content":"Here is an example usage of `cut -c` to delete client with `CLIENT_ID` of \"c001\":","lastModifiedDate":"2021-11-04"},{"lineNumber":335,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":336,"author":{"gitId":"bobowoo2468"},"content":"**Step 1.** After adding a few client packages to the database, user inputs `cut -c c001`. This command is passed","lastModifiedDate":"2021-11-06"},{"lineNumber":337,"author":{"gitId":"bobowoo2468"},"content":"to `parse()` method in the `Parser` class.","lastModifiedDate":"2021-11-06"},{"lineNumber":338,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":339,"author":{"gitId":"swongts"},"content":"**Step 2.** Based on the user input, `parse()` identifies that it is of type `cut` command and calls `ParseCut()`.","lastModifiedDate":"2021-11-04"},{"lineNumber":340,"author":{"gitId":"bobowoo2468"},"content":"`ParseCut()` will then create `CutClientCommand(\"c001\")` based on the prefix `-c`. Returns the created `Command`","lastModifiedDate":"2021-11-08"},{"lineNumber":341,"author":{"gitId":"bobowoo2468"},"content":"subclass to `TourPlanner`.","lastModifiedDate":"2021-11-08"},{"lineNumber":342,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":343,"author":{"gitId":"swongts"},"content":"Depending on the type of cut command being called, these command types will be returned:","lastModifiedDate":"2021-11-04"},{"lineNumber":344,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":345,"author":{"gitId":"swongts"},"content":"* `cut -c`: `CutClientCommand`","lastModifiedDate":"2021-11-04"},{"lineNumber":346,"author":{"gitId":"swongts"},"content":"* `cut -f`: `CutFlightCommand`","lastModifiedDate":"2021-11-04"},{"lineNumber":347,"author":{"gitId":"swongts"},"content":"* `cut -t`: `CutTourCommand`","lastModifiedDate":"2021-11-04"},{"lineNumber":348,"author":{"gitId":"swongts"},"content":"* `cut -p`: `CutClientPackageCommand`","lastModifiedDate":"2021-11-04"},{"lineNumber":349,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":350,"author":{"gitId":"swongts"},"content":"The following 2 sections focuses on cut for the specific classes.","lastModifiedDate":"2021-11-04"},{"lineNumber":351,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":352,"author":{"gitId":"swongts"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":353,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":354,"author":{"gitId":"swongts"},"content":"#### \u003cu\u003eCutting a particular client package\u003c/u\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":355,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":356,"author":{"gitId":"bobowoo2468"},"content":"Given below is an example usage of `cut -p p001` to deletes client package with `CLIENTPACKAGE_ID` of \"p001\".","lastModifiedDate":"2021-11-06"},{"lineNumber":357,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":358,"author":{"gitId":"swongts"},"content":"Here is a (partial) sequence diagram of above user input:","lastModifiedDate":"2021-11-04"},{"lineNumber":359,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":360,"author":{"gitId":"swongts"},"content":"![CutClientPackageCommand](https://user-images.githubusercontent.com/70316271/140637935-a64ba82f-a9d1-4439-ad04-157ad0ecaad3.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":361,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":362,"author":{"gitId":"swongts"},"content":"**Step 1.** `Parser` creates `CutClientPackageCommand(\"p001\")` and returns it to `TourPlanner`.","lastModifiedDate":"2021-11-08"},{"lineNumber":363,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":364,"author":{"gitId":"swongts"},"content":"**Step 2.** Then, `execute()` method in `CutClientPackageCommand` calls `getClientPackageById(\"p001\")`","lastModifiedDate":"2021-11-04"},{"lineNumber":365,"author":{"gitId":"swongts"},"content":"which finds the `ClientPackage` based on the `CLIENTPACKAGE_ID` \"p001\".","lastModifiedDate":"2021-11-04"},{"lineNumber":366,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":367,"author":{"gitId":"swongts"},"content":"**Step 3.** The `ClientPackage` is removed from the `ClientPackageList`.","lastModifiedDate":"2021-11-04"},{"lineNumber":368,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":369,"author":{"gitId":"swongts"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":370,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":371,"author":{"gitId":"swongts"},"content":"#### \u003cu\u003eCutting a particular client / tour / flight\u003c/u\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":372,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":373,"author":{"gitId":"swongts"},"content":"Given below is an example usage of `cut -c c001` to delete client with `CLIENT_ID` of \"c001\"","lastModifiedDate":"2021-11-04"},{"lineNumber":374,"author":{"gitId":"swongts"},"content":"and all corresponding client packages that contain deleted client.","lastModifiedDate":"2021-11-04"},{"lineNumber":375,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":376,"author":{"gitId":"swongts"},"content":"Here is a (partial) sequence diagram for above user input:","lastModifiedDate":"2021-11-04"},{"lineNumber":377,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":378,"author":{"gitId":"swongts"},"content":"![CutClientCommand](https://user-images.githubusercontent.com/70316271/140637934-08e0a09e-bf63-4f16-b84f-faa7a852b2d3.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":379,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":380,"author":{"gitId":"swongts"},"content":"**Step 1.** `Parser` creates `CutClientCommand(\"c001\")` and returns it to `TourPlanner`.","lastModifiedDate":"2021-11-08"},{"lineNumber":381,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":382,"author":{"gitId":"swongts"},"content":"**Step 2.** Then, `execute()` method in `CutClientCommand` calls `getClientById(\"c001\")`","lastModifiedDate":"2021-11-04"},{"lineNumber":383,"author":{"gitId":"swongts"},"content":"which finds the `Client` based on the `CLIENT_ID` \"c001\".","lastModifiedDate":"2021-11-04"},{"lineNumber":384,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":385,"author":{"gitId":"swongts"},"content":"**Step 3.** The `Client` is removed from the `ClientList`.","lastModifiedDate":"2021-11-04"},{"lineNumber":386,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":387,"author":{"gitId":"swongts"},"content":"**Step 4.** Next, `getClientPackageByClient(\"c001\")` returns an `ArrayList` of `ClientPackages` that contains","lastModifiedDate":"2021-11-04"},{"lineNumber":388,"author":{"gitId":"bobowoo2468"},"content":"the `CLient` \"c001\". :information_source: See [ArrayList](#appendix-d-glossary).","lastModifiedDate":"2021-11-08"},{"lineNumber":389,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":390,"author":{"gitId":"swongts"},"content":"**Step 5.** Loops through the `ClientPackages` and deletes them from `ClientPackageList`.","lastModifiedDate":"2021-11-04"},{"lineNumber":391,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":392,"author":{"gitId":"bobowoo2468"},"content":"*:information_source: `Tour` and `Flight` works in the same way respectively with `TourList` and `FlightList`","lastModifiedDate":"2021-11-08"},{"lineNumber":393,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":394,"author":{"gitId":"swongts"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":395,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":396,"author":{"gitId":"swongts"},"content":"### List feature","lastModifiedDate":"2021-11-08"},{"lineNumber":397,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":398,"author":{"gitId":"swongts"},"content":"The `list` feature is used to display all entries in `ObjectList` (`Client`, `Tour`, `Flight` and `ClientPackage`),","lastModifiedDate":"2021-11-08"},{"lineNumber":399,"author":{"gitId":"swongts"},"content":"where `Parser` determines the `ObjectList` to list from.","lastModifiedDate":"2021-11-04"},{"lineNumber":400,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":401,"author":{"gitId":"YipWayne"},"content":"It implements these following types of list commands:","lastModifiedDate":"2021-10-30"},{"lineNumber":402,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":403,"author":{"gitId":"YipWayne"},"content":"* `list -c`: Lists all existing clients and their contact numbers","lastModifiedDate":"2021-10-30"},{"lineNumber":404,"author":{"gitId":"YipWayne"},"content":"* `list -t`: Lists all existing tours","lastModifiedDate":"2021-10-30"},{"lineNumber":405,"author":{"gitId":"swongts"},"content":"* `list -f`: Lists all existing flights","lastModifiedDate":"2021-11-04"},{"lineNumber":406,"author":{"gitId":"YipWayne"},"content":"* `list -p`: Lists all clients and their corresponding tours and flights","lastModifiedDate":"2021-10-30"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":408,"author":{"gitId":"swongts"},"content":"Given below is an example usage of command `list -c` that lists all `Client` objects in `ClientList`:","lastModifiedDate":"2021-11-07"},{"lineNumber":409,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":410,"author":{"gitId":"swongts"},"content":"Here is a (partial) sequence diagram for the above user input:","lastModifiedDate":"2021-11-07"},{"lineNumber":411,"author":{"gitId":"swongts"},"content":"![ListClientCommand](https://user-images.githubusercontent.com/70316271/140637940-066bab37-d9dd-4efa-b0ee-e681fcd5b139.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":413,"author":{"gitId":"swongts"},"content":"**Step 1**: After adding a few clients to the database, user inputs `list -c`. This command is passed to `parse()`","lastModifiedDate":"2021-11-04"},{"lineNumber":414,"author":{"gitId":"swongts"},"content":"method in the `Parser` class.","lastModifiedDate":"2021-11-04"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":416,"author":{"gitId":"swongts"},"content":"**Step 2**: Based on the user input, `parse()` identifies that it is of type `list` command and calls `ParseList()`.","lastModifiedDate":"2021-11-04"},{"lineNumber":417,"author":{"gitId":"swongts"},"content":"`ParseList()` will then return `ListClientCommand` based on the prefix `-c`.","lastModifiedDate":"2021-11-04"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":419,"author":{"gitId":"swongts"},"content":"**Step 3**: Then, `execute()` method in `ListClientCommand` is called, where it loops through the current `clientList`","lastModifiedDate":"2021-11-04"},{"lineNumber":420,"author":{"gitId":"swongts"},"content":"and prints out all client names and their details.","lastModifiedDate":"2021-11-04"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":422,"author":{"gitId":"YipWayne"},"content":"Depending on the type of list command being called, these command types will be returned:","lastModifiedDate":"2021-10-30"},{"lineNumber":423,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":424,"author":{"gitId":"swongts"},"content":"* `list -c`: `ListClientCommand`","lastModifiedDate":"2021-11-04"},{"lineNumber":425,"author":{"gitId":"swongts"},"content":"* `list -f`: `ListFlightCommand`","lastModifiedDate":"2021-11-04"},{"lineNumber":426,"author":{"gitId":"swongts"},"content":"* `list -t`: `ListTourCommand`","lastModifiedDate":"2021-11-04"},{"lineNumber":427,"author":{"gitId":"swongts"},"content":"* `list -p`: `ListClientPackageCommand`","lastModifiedDate":"2021-11-04"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":429,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":430,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":431,"author":{"gitId":"swongts"},"content":"### Find feature","lastModifiedDate":"2021-11-08"},{"lineNumber":432,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":433,"author":{"gitId":"bobowoo2468"},"content":"The ```find``` feature is to be used to query for a particular client, tour or flight, providing extensive information","lastModifiedDate":"2021-11-08"},{"lineNumber":434,"author":{"gitId":"bobowoo2468"},"content":"about it. It is facilitated by the ```parse``` function in the ```Parser``` class, and returns a FindCommand object.","lastModifiedDate":"2021-11-08"},{"lineNumber":435,"author":{"gitId":"swongts"},"content":"When FindCommand is executed, it queries the corresponding `ObjectList` and returns the matching entries.","lastModifiedDate":"2021-11-08"},{"lineNumber":436,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":437,"author":{"gitId":"swongts"},"content":"It implements these following types of find commands:","lastModifiedDate":"2021-11-08"},{"lineNumber":438,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":439,"author":{"gitId":"bobowoo2468"},"content":"* `find -c CLIENT_NAME`: returns clients that contain `CLIENT_NAME` in their name and client packages they are","lastModifiedDate":"2021-11-08"},{"lineNumber":440,"author":{"gitId":"bobowoo2468"},"content":"  subscribed to.","lastModifiedDate":"2021-11-08"},{"lineNumber":441,"author":{"gitId":"swongts"},"content":"* `find -t TOUR_ID`: returns tours that match the `TOUR_ID` and tours subscribed to the tour.","lastModifiedDate":"2021-11-08"},{"lineNumber":442,"author":{"gitId":"swongts"},"content":"* `find -f FLIGHT_ID`: returns flights that match the `FLIGHT_ID` and clients subscribed to the flight.","lastModifiedDate":"2021-11-08"},{"lineNumber":443,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":444,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":445,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":446,"author":{"gitId":"swongts"},"content":"In general, there is a sequence of steps when any of the 3 `find` commands are called.","lastModifiedDate":"2021-11-08"},{"lineNumber":447,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":448,"author":{"gitId":"bobowoo2468"},"content":"Firstly, assume that in previous sessions, commands were executed to add clients, tours, flights and packages to","lastModifiedDate":"2021-11-06"},{"lineNumber":449,"author":{"gitId":"bobowoo2468"},"content":"the ```ClientList```, ```TourList```, ```FlightList``` and ```PackageList``` respectively. In particular, these specific","lastModifiedDate":"2021-11-06"},{"lineNumber":450,"author":{"gitId":"bobowoo2468"},"content":"commands were executed.","lastModifiedDate":"2021-11-08"},{"lineNumber":451,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":452,"author":{"gitId":"YipWayne"},"content":"* ```add -c c001 /n Bo Tuan /cn 93338333 /m borangutuan@mail.com```","lastModifiedDate":"2021-10-29"},{"lineNumber":453,"author":{"gitId":"YipWayne"},"content":"* ```add -t JPN /n Japan Tour /p 1500```","lastModifiedDate":"2021-10-29"},{"lineNumber":454,"author":{"gitId":"YipWayne"},"content":"* ```add -f SQ-JPN /d JPN /r SG /dd 20/10/2021 18:00 /rd 21/10/2021 03:00```","lastModifiedDate":"2021-10-29"},{"lineNumber":455,"author":{"gitId":"YipWayne"},"content":"* ```add -p p001 /c c001 /t JPN /f SQ-JPN```","lastModifiedDate":"2021-10-29"},{"lineNumber":456,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":457,"author":{"gitId":"swongts"},"content":"Here is an example usage of `find -c bo` to find a client with name \"Bo Tuan\":","lastModifiedDate":"2021-11-08"},{"lineNumber":458,"author":{"gitId":"swongts"},"content":"**Step 1**: The user executes ```find -c bo``` to query if a client named \"Bo Tuan\" exists in the ClientList.","lastModifiedDate":"2021-11-08"},{"lineNumber":459,"author":{"gitId":"swongts"},"content":"The ```parse``` function in the ```Parser``` class takes the command, and calls `parseFind()`","lastModifiedDate":"2021-11-08"},{"lineNumber":460,"author":{"gitId":"swongts"},"content":"based on (```find```) in the input. ```parseFind()``` determines which type of Object is to be queried for and","lastModifiedDate":"2021-11-08"},{"lineNumber":461,"author":{"gitId":"swongts"},"content":"```FindClientCommand()``` is created with the parameter ```bo``` based on prefix `-c`.","lastModifiedDate":"2021-11-08"},{"lineNumber":462,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":463,"author":{"gitId":"swongts"},"content":"Depending on the type of find command being called, these command types will be returned:","lastModifiedDate":"2021-11-08"},{"lineNumber":464,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":465,"author":{"gitId":"swongts"},"content":"* ```find -c```: ```FindClientCommand```","lastModifiedDate":"2021-11-08"},{"lineNumber":466,"author":{"gitId":"swongts"},"content":"* ```find -t```: ```FindTourCommand```","lastModifiedDate":"2021-11-08"},{"lineNumber":467,"author":{"gitId":"swongts"},"content":"* ```find -f```: ```FindFlightCommand```","lastModifiedDate":"2021-11-08"},{"lineNumber":468,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":469,"author":{"gitId":"swongts"},"content":"The following 3 sections focuses on find for the specific classes.","lastModifiedDate":"2021-11-08"},{"lineNumber":470,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":471,"author":{"gitId":"swongts"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":472,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":473,"author":{"gitId":"swongts"},"content":"#### \u003cu\u003eFinding a particular client\u003c/u\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":474,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":475,"author":{"gitId":"swongts"},"content":"Given below is an example usage of `find -c bo`.","lastModifiedDate":"2021-11-08"},{"lineNumber":476,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":477,"author":{"gitId":"swongts"},"content":"Here is a (partial) sequence diagram for the above user input:","lastModifiedDate":"2021-11-08"},{"lineNumber":478,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":479,"author":{"gitId":"bobowoo2468"},"content":"![FindClient Sequence Diagram](https://user-images.githubusercontent.com/62021897/140740252-019e87c0-7793-4203-9cc2-df2834f71b0e.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":480,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":481,"author":{"gitId":"swongts"},"content":"**Step 1** `Parser` creates `FindClientCommand(\"bo\")` and returns it to `TourPlanner`.","lastModifiedDate":"2021-11-08"},{"lineNumber":482,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":483,"author":{"gitId":"swongts"},"content":"**Step 2** The ```FindClientCommand``` iterates through each ```Client``` object in the ```ClientList```. For","lastModifiedDate":"2021-11-08"},{"lineNumber":484,"author":{"gitId":"bobowoo2468"},"content":"every ```Client```, the ```getName()``` function is called to retrieve the name attribute of the Client. The name","lastModifiedDate":"2021-11-06"},{"lineNumber":485,"author":{"gitId":"bobowoo2468"},"content":"attribute is then converted to lower case for comparison with the substring. If the name attribute is contains the","lastModifiedDate":"2021-11-06"},{"lineNumber":486,"author":{"gitId":"bobowoo2468"},"content":"substring```bo```, the ```Client``` object is printed onto the console terminal.","lastModifiedDate":"2021-11-06"},{"lineNumber":487,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":488,"author":{"gitId":"swongts"},"content":"**Step 3** In addition, the ```FindClientCommand``` iterates through each ```ClientPackage``` object in","lastModifiedDate":"2021-11-08"},{"lineNumber":489,"author":{"gitId":"bobowoo2468"},"content":"the ```ClientPackageList```. For every ```ClientPackage```, the ```getClient()``` function is called to retrieve the","lastModifiedDate":"2021-11-06"},{"lineNumber":490,"author":{"gitId":"bobowoo2468"},"content":"client attribute of the ClientPackage. If the client attribute is equals to the same ```Client``` object that was found","lastModifiedDate":"2021-11-06"},{"lineNumber":491,"author":{"gitId":"bobowoo2468"},"content":"in Step 2, the respective client package will be printed onto the console terminal.","lastModifiedDate":"2021-11-06"},{"lineNumber":492,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":493,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":494,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":495,"author":{"gitId":"swongts"},"content":"#### \u003cu\u003eFinding a particular tour\u003c/u\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":496,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":497,"author":{"gitId":"swongts"},"content":"Given below is an example usage of `find -t JPN`.","lastModifiedDate":"2021-11-08"},{"lineNumber":498,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":499,"author":{"gitId":"swongts"},"content":"Here is a (partial) sequence diagram for the above user input:","lastModifiedDate":"2021-11-08"},{"lineNumber":500,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":501,"author":{"gitId":"bobowoo2468"},"content":"![FindTour Sequence Diagram](https://user-images.githubusercontent.com/62021897/140713906-dd0524f5-53d2-4409-819b-05a467adee53.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":502,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":503,"author":{"gitId":"swongts"},"content":"**Step 1**: `Parser` creates `FindTourCommand(\"JPN\")` and returns it to `TourPlanner`.","lastModifiedDate":"2021-11-08"},{"lineNumber":504,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":505,"author":{"gitId":"swongts"},"content":"**Step 2**: The ```FindTourCommand``` is executed and iterates through each ```Tour``` object in the ```TourList```. For","lastModifiedDate":"2021-11-08"},{"lineNumber":506,"author":{"gitId":"swongts"},"content":"every ```Tour```, the ```getCode()``` function is called to retrieve the code attribute of the Tour. If the tour","lastModifiedDate":"2021-11-08"},{"lineNumber":507,"author":{"gitId":"swongts"},"content":"attribute is equals to ```JPN```, the ```Tour``` object is printed onto the console terminal.","lastModifiedDate":"2021-11-08"},{"lineNumber":508,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":509,"author":{"gitId":"swongts"},"content":"**Step 3**: In addition, the ```FindTourCommand``` iterates through each ```ClientPackage``` object in","lastModifiedDate":"2021-11-08"},{"lineNumber":510,"author":{"gitId":"swongts"},"content":"the ```ClientPackageList```. For every ```ClientPackage```, the ```getTour()``` function is called to retrieve the tour","lastModifiedDate":"2021-11-08"},{"lineNumber":511,"author":{"gitId":"swongts"},"content":"attribute of the ClientPackage. If the tour attribute is equals to the same ```Tour``` object that was found in Step 2,","lastModifiedDate":"2021-11-08"},{"lineNumber":512,"author":{"gitId":"swongts"},"content":"the client attribute of that same ClientPackage will be retrieved using the ```getClient()``` function.","lastModifiedDate":"2021-11-08"},{"lineNumber":513,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":514,"author":{"gitId":"swongts"},"content":"**Step 4**: The client\u0027s name attribute is then retrieved using the ```getName()``` function in the Client class. The","lastModifiedDate":"2021-11-08"},{"lineNumber":515,"author":{"gitId":"swongts"},"content":"name is printed onto the console terminal under \"Subscribed Clients\". Once all  ```ClientPackage``` objects are iterated","lastModifiedDate":"2021-11-08"},{"lineNumber":516,"author":{"gitId":"swongts"},"content":"through in the ```ClientPackageList```, the total number of subscribed clients will be printed on the console terminal.","lastModifiedDate":"2021-11-08"},{"lineNumber":517,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":518,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":519,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":520,"author":{"gitId":"swongts"},"content":"#### \u003cu\u003eFinding a particular flight\u003c/u\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":521,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":522,"author":{"gitId":"swongts"},"content":"Given below is an example usage of `find -f SQ-JPN`.","lastModifiedDate":"2021-11-08"},{"lineNumber":523,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":524,"author":{"gitId":"swongts"},"content":"Here is a (partial) sequence diagram for the above user input:","lastModifiedDate":"2021-11-08"},{"lineNumber":525,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":526,"author":{"gitId":"bobowoo2468"},"content":"![FindFlight Sequence Diagram](https://user-images.githubusercontent.com/62021897/140713762-85084399-97e1-47ee-a228-51e6c743d0d1.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":527,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":528,"author":{"gitId":"swongts"},"content":"**Step 1**: `Parser` creates `FindFlightCommand(\"SQ-JPN\")` and returns it to `TourPlanner`.","lastModifiedDate":"2021-11-08"},{"lineNumber":529,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":530,"author":{"gitId":"swongts"},"content":"**Step 2**: The ```FindFlightCommand``` is executed and iterates through each ```Flight``` object in","lastModifiedDate":"2021-11-08"},{"lineNumber":531,"author":{"gitId":"swongts"},"content":"the ```FlightList```. For every ```Flight```, the ```getCode()``` function is called to retrieve the code attribute of","lastModifiedDate":"2021-11-08"},{"lineNumber":532,"author":{"gitId":"swongts"},"content":"the Tour. If the tour attribute is equals to ```SQ-JPN```, the ```Flight``` object is printed onto the console terminal.","lastModifiedDate":"2021-11-08"},{"lineNumber":533,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":534,"author":{"gitId":"bobowoo2468"},"content":"**Step 3**: In addition, the ```FindFlightCommand``` iterates through each ```ClientPackage``` object in","lastModifiedDate":"2021-11-06"},{"lineNumber":535,"author":{"gitId":"bobowoo2468"},"content":"the ```ClientPackageList```. For every ```ClientPackage```, the ```getFlight()``` function is called to retrieve the","lastModifiedDate":"2021-11-06"},{"lineNumber":536,"author":{"gitId":"bobowoo2468"},"content":"tour attribute of the ClientPackage. If the tour attribute is equals to the same ```Flight``` object that was found in","lastModifiedDate":"2021-11-06"},{"lineNumber":537,"author":{"gitId":"bobowoo2468"},"content":"Step 2, the client attribute of that same ClientPackage will be retrieved using the ```getClient()``` function.","lastModifiedDate":"2021-11-06"},{"lineNumber":538,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":539,"author":{"gitId":"bobowoo2468"},"content":"**Step 4**: The client\u0027s name attribute is then retrieved using the ```getName()``` function in the Client class. The","lastModifiedDate":"2021-11-06"},{"lineNumber":540,"author":{"gitId":"bobowoo2468"},"content":"name is printed onto the console terminal under \"Passengers\". Once all  ```ClientPackage``` objects are iterated through","lastModifiedDate":"2021-11-06"},{"lineNumber":541,"author":{"gitId":"bobowoo2468"},"content":"in the ```ClientPackageList```, the total number of passengers will be printed on the console terminal.","lastModifiedDate":"2021-11-06"},{"lineNumber":542,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":543,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":544,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":545,"author":{"gitId":"swongts"},"content":"#### \u003cu\u003eDesign Considerations\u003c/u\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":546,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":547,"author":{"gitId":"swongts"},"content":"* Alternative: only iterate through the ```ClientPackageList```.","lastModifiedDate":"2021-11-08"},{"lineNumber":548,"author":{"gitId":"YipWayne"},"content":"    * Pros: fast querying time.","lastModifiedDate":"2021-10-21"},{"lineNumber":549,"author":{"gitId":"bobowoo2468"},"content":"    * Cons: If the client/tour/flight is not in any package, none of their information can be accessed, including their","lastModifiedDate":"2021-11-06"},{"lineNumber":550,"author":{"gitId":"bobowoo2468"},"content":"      contact number.","lastModifiedDate":"2021-11-06"},{"lineNumber":551,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":552,"author":{"gitId":"swongts"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":553,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":554,"author":{"gitId":"swongts"},"content":"### Sort feature","lastModifiedDate":"2021-11-08"},{"lineNumber":555,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":556,"author":{"gitId":"swongts"},"content":"The `sort` feature is used to sort the `ObjectList` (for `Client`, `Tour`, `Flight` and `ClientPackage`) and list it,","lastModifiedDate":"2021-11-08"},{"lineNumber":557,"author":{"gitId":"swongts"},"content":"where `Parser` determines the `ObjectList` and criteria to sort for.","lastModifiedDate":"2021-11-06"},{"lineNumber":558,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":559,"author":{"gitId":"swongts"},"content":"It implements these following types of `sort` commands:","lastModifiedDate":"2021-11-06"},{"lineNumber":560,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":561,"author":{"gitId":"swongts"},"content":"* Client","lastModifiedDate":"2021-11-06"},{"lineNumber":562,"author":{"gitId":"swongts"},"content":"    * `sort -c /n`: Sorts alphabetically by client name","lastModifiedDate":"2021-11-06"},{"lineNumber":563,"author":{"gitId":"swongts"},"content":"    * `sort -c /id`: Sorts alphabetically by client id","lastModifiedDate":"2021-11-06"},{"lineNumber":564,"author":{"gitId":"swongts"},"content":"* Flight","lastModifiedDate":"2021-11-06"},{"lineNumber":565,"author":{"gitId":"swongts"},"content":"    * `sort -f /d`: Sorts in ascending order of date and time for departure flight","lastModifiedDate":"2021-11-06"},{"lineNumber":566,"author":{"gitId":"swongts"},"content":"    * `sort -f /r`: Sorts in ascending order of date and time for return flight","lastModifiedDate":"2021-11-06"},{"lineNumber":567,"author":{"gitId":"swongts"},"content":"    * `sort -f /id`: Sorts alphabetically by flight id","lastModifiedDate":"2021-11-06"},{"lineNumber":568,"author":{"gitId":"swongts"},"content":"* Tour","lastModifiedDate":"2021-11-06"},{"lineNumber":569,"author":{"gitId":"swongts"},"content":"    * `sort -t /id`: Sorts alphabetically by tour id","lastModifiedDate":"2021-11-06"},{"lineNumber":570,"author":{"gitId":"swongts"},"content":"    * `sort -t /p`: Sorts in ascending order of tour price","lastModifiedDate":"2021-11-06"},{"lineNumber":571,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":572,"author":{"gitId":"swongts"},"content":"Given below is an example usage of `sort -c /id`:","lastModifiedDate":"2021-11-06"},{"lineNumber":573,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":574,"author":{"gitId":"swongts"},"content":"Here is a (partial) sequence diagram of the above user input:","lastModifiedDate":"2021-11-06"},{"lineNumber":575,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":576,"author":{"gitId":"swongts"},"content":"![SortClientCommand](https://user-images.githubusercontent.com/70316271/140637939-1ff5b961-31fa-4afa-b834-316066362ffd.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":577,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":578,"author":{"gitId":"swongts"},"content":"**Step 1**: After adding a few clients to the database, user inputs `sort -c /id`. This command is passed to `parse()`","lastModifiedDate":"2021-11-06"},{"lineNumber":579,"author":{"gitId":"swongts"},"content":"method in the `Parser` class.","lastModifiedDate":"2021-11-06"},{"lineNumber":580,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":581,"author":{"gitId":"swongts"},"content":"**Step 2**: Based on the user input, `parse()` identifies that it is of type `sort` command and calls `ParseSort()`.","lastModifiedDate":"2021-11-06"},{"lineNumber":582,"author":{"gitId":"swongts"},"content":"`ParseSort()` will then return `SortClientCommand` based on the prefix `-c`.","lastModifiedDate":"2021-11-06"},{"lineNumber":583,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":584,"author":{"gitId":"bobowoo2468"},"content":"**Step 3**: Then, `execute()` method in `SortClientCommand` is called, where it gets the sorted `ArrayList` of","lastModifiedDate":"2021-11-08"},{"lineNumber":585,"author":{"gitId":"bobowoo2468"},"content":"`clientIds`. :information_source: See [ArrayList](#appendix-d-glossary).","lastModifiedDate":"2021-11-08"},{"lineNumber":586,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":587,"author":{"gitId":"swongts"},"content":"**Step 4** In `UI`, `showSortedClientById()` is called, with `clientIds` passed in. The method iterates through all the","lastModifiedDate":"2021-11-06"},{"lineNumber":588,"author":{"gitId":"swongts"},"content":"client IDs. For each iteration, finds the corresponding `Client` with `getClientById()` and prints out the `Client`","lastModifiedDate":"2021-11-06"},{"lineNumber":589,"author":{"gitId":"swongts"},"content":"and their details.","lastModifiedDate":"2021-11-06"},{"lineNumber":590,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":591,"author":{"gitId":"swongts"},"content":"Depending on the type of sort command being called, these command types will be returned:","lastModifiedDate":"2021-11-06"},{"lineNumber":592,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":593,"author":{"gitId":"swongts"},"content":"* `sort -c`: `SortClientCommand`","lastModifiedDate":"2021-11-06"},{"lineNumber":594,"author":{"gitId":"swongts"},"content":"* `sort -f`: `SortFlightCommand`","lastModifiedDate":"2021-11-06"},{"lineNumber":595,"author":{"gitId":"swongts"},"content":"* `sort -t`: `SortTourCommand`","lastModifiedDate":"2021-11-06"},{"lineNumber":596,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":597,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":598,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":599,"author":{"gitId":"swongts"},"content":"## Storage Component","lastModifiedDate":"2021-11-08"},{"lineNumber":600,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":601,"author":{"gitId":"YipWayne"},"content":"\u003chr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":602,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":603,"author":{"gitId":"swongts"},"content":"**API: `ClientPackageStorage.java` `ClientStorage.java` `FlightStorage.java` `TourStorage.java`**","lastModifiedDate":"2021-11-08"},{"lineNumber":604,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":605,"author":{"gitId":"swongts"},"content":"Shown below is the class diagram for TourPlanner\u0027s Storage Component:","lastModifiedDate":"2021-11-08"},{"lineNumber":606,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":607,"author":{"gitId":"swongts"},"content":"![Storage](https://user-images.githubusercontent.com/62021897/140651207-73bd0de8-cb0b-469f-9cdd-c9bbc26b8efc.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":608,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":609,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":610,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":611,"author":{"gitId":"Demonshaha"},"content":"The Storage component consists of:","lastModifiedDate":"2021-11-07"},{"lineNumber":612,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":613,"author":{"gitId":"swongts"},"content":"1. `ClientPackageStorage.java`: Reading and saving files which record all clientpackages.","lastModifiedDate":"2021-11-08"},{"lineNumber":614,"author":{"gitId":"swongts"},"content":"2. `ClientStorage.java`: Reading and saving files which record all clients.","lastModifiedDate":"2021-11-08"},{"lineNumber":615,"author":{"gitId":"swongts"},"content":"3. `FlightStorage.java`: Reading and saving files which record all flights.","lastModifiedDate":"2021-11-08"},{"lineNumber":616,"author":{"gitId":"swongts"},"content":"4. `TourStorage.java`: Reading and saving files which record all tours.","lastModifiedDate":"2021-11-08"},{"lineNumber":617,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":618,"author":{"gitId":"bobowoo2468"},"content":"To add on Storage component is designed to access only the following folder:","lastModifiedDate":"2021-11-07"},{"lineNumber":619,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":620,"author":{"gitId":"Demonshaha"},"content":"1. `data/`","lastModifiedDate":"2021-11-07"},{"lineNumber":621,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":622,"author":{"gitId":"Demonshaha"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":623,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":624,"author":{"gitId":"swongts"},"content":"## Appendix A: Product scope","lastModifiedDate":"2021-11-08"},{"lineNumber":625,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":626,"author":{"gitId":"YipWayne"},"content":"\u003chr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":627,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":628,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2021-10-30"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":630,"author":{"gitId":"YipWayne"},"content":"* Tour company employees that need to manage a significant amount of tour data","lastModifiedDate":"2021-10-30"},{"lineNumber":631,"author":{"gitId":"YipWayne"},"content":"* Prefer desktop apps over other types","lastModifiedDate":"2021-10-30"},{"lineNumber":632,"author":{"gitId":"YipWayne"},"content":"* Can type fast","lastModifiedDate":"2021-10-30"},{"lineNumber":633,"author":{"gitId":"YipWayne"},"content":"* Is reasonably comfortable using CLI apps","lastModifiedDate":"2021-10-30"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":635,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2021-10-30"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":637,"author":{"gitId":"YipWayne"},"content":"* Manage tour information faster than typical mouse /GUI driven apps","lastModifiedDate":"2021-10-30"},{"lineNumber":638,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":639,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":640,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":641,"author":{"gitId":"swongts"},"content":"## Appendix B: User Stories","lastModifiedDate":"2021-11-08"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":643,"author":{"gitId":"YipWayne"},"content":"\u003chr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":645,"author":{"gitId":"YipWayne"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2021-10-30"},{"lineNumber":646,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":647,"author":{"gitId":"YipWayne"},"content":"|Priority| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2021-10-30"},{"lineNumber":648,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2021-10-30"},{"lineNumber":649,"author":{"gitId":"YipWayne"},"content":"|`* * *`|new user|see usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2021-10-30"},{"lineNumber":650,"author":{"gitId":"YipWayne"},"content":"|`* * *`|user|add a new entry of specific data type| add data into the current database|","lastModifiedDate":"2021-11-04"},{"lineNumber":651,"author":{"gitId":"YipWayne"},"content":"|`* * *`|user|delete an existing entry of specific data type |remove outdated data from the current database|","lastModifiedDate":"2021-11-04"},{"lineNumber":652,"author":{"gitId":"YipWayne"},"content":"|`* *`|user with large amounts of data|find an existing entry of specific data type |locate a specific entry easily|","lastModifiedDate":"2021-11-04"},{"lineNumber":653,"author":{"gitId":"YipWayne"},"content":"|`* *`|user with large amounts of data|sort existing entries of specific data type |make smarter recommendations to clients based on their preferences|","lastModifiedDate":"2021-11-04"},{"lineNumber":654,"author":{"gitId":"YipWayne"},"content":"|`* *`|user|check number of clients subscribed to a tour / flight|check the popularity, vacancy of certain tours / flights|","lastModifiedDate":"2021-11-04"},{"lineNumber":655,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":656,"author":{"gitId":"bobowoo2468"},"content":":information_source: \u0027specific data type\u0027 refers to either clients, tours, flights or client packages.","lastModifiedDate":"2021-11-08"},{"lineNumber":657,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":658,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":659,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":660,"author":{"gitId":"swongts"},"content":"## Appendix C: Non-Functional Requirements","lastModifiedDate":"2021-11-08"},{"lineNumber":661,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":662,"author":{"gitId":"YipWayne"},"content":"\u003chr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":663,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":664,"author":{"gitId":"YipWayne"},"content":"* Should work on any mainstream OS as long as it has Java 11 or above installed.","lastModifiedDate":"2021-11-04"},{"lineNumber":665,"author":{"gitId":"YipWayne"},"content":"* Should be able to hold up to 1000 entries without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-11-04"},{"lineNumber":666,"author":{"gitId":"bobowoo2468"},"content":"* A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2021-11-06"},{"lineNumber":667,"author":{"gitId":"bobowoo2468"},"content":"  able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-11-06"},{"lineNumber":668,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":669,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":670,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":671,"author":{"gitId":"swongts"},"content":"## Appendix D: Glossary","lastModifiedDate":"2021-11-08"},{"lineNumber":672,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":673,"author":{"gitId":"swongts"},"content":"\u003chr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":674,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":675,"author":{"gitId":"swongts"},"content":"**ClientPackage:** serves as a link between the client, tour and flight, helps to keep track of the tours (and flights)","lastModifiedDate":"2021-11-08"},{"lineNumber":676,"author":{"gitId":"swongts"},"content":"they are subscribed to. `ClientPackage` class stores the actual `Client`, `Flight` and `Tour` objects.","lastModifiedDate":"2021-11-08"},{"lineNumber":677,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":678,"author":{"gitId":"swongts"},"content":"**ArrayList:** acts as a dynamic array, where items can be easily added and removed.","lastModifiedDate":"2021-11-08"},{"lineNumber":679,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":680,"author":{"gitId":"bobowoo2468"},"content":"**TreeMap:** sorts and stores key-value pairs. The key-value pairs are sorted according to the natural ordering of its","lastModifiedDate":"2021-11-08"},{"lineNumber":681,"author":{"gitId":"bobowoo2468"},"content":"keys, or by a Comparator provided at map creation time.","lastModifiedDate":"2021-11-08"},{"lineNumber":682,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":683,"author":{"gitId":"bobowoo2468"},"content":"**Subclass:** To say class `A` is a subclass of class `B` would mean that class `A` inherits from class `B`. A subclass","lastModifiedDate":"2021-11-08"},{"lineNumber":684,"author":{"gitId":"bobowoo2468"},"content":"inherits attributes and methods from the parent class.","lastModifiedDate":"2021-11-08"},{"lineNumber":685,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":686,"author":{"gitId":"bobowoo2468"},"content":"**Exceptions:** is any event that interrupts the normal flow of program execution, due to an unwanted event which cannot","lastModifiedDate":"2021-11-08"},{"lineNumber":687,"author":{"gitId":"bobowoo2468"},"content":"be controlled by developers","lastModifiedDate":"2021-11-08"},{"lineNumber":688,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":689,"author":{"gitId":"swongts"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":690,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":691,"author":{"gitId":"swongts"},"content":"## Appendix E: Instructions for manual testing","lastModifiedDate":"2021-11-08"},{"lineNumber":692,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":693,"author":{"gitId":"swongts"},"content":"\u003chr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":694,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":695,"author":{"gitId":"swongts"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2021-11-08"},{"lineNumber":696,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":697,"author":{"gitId":"swongts"},"content":"### Launch and shutdown","lastModifiedDate":"2021-11-08"},{"lineNumber":698,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":699,"author":{"gitId":"swongts"},"content":"1. Initial launch","lastModifiedDate":"2021-11-08"},{"lineNumber":700,"author":{"gitId":"swongts"},"content":"    1. Download the jar file and copy into an empty folder.","lastModifiedDate":"2021-11-08"},{"lineNumber":701,"author":{"gitId":"swongts"},"content":"    2. Run the command ```java -jar TourPlanner.jar``` in a command window to start the program.","lastModifiedDate":"2021-11-08"},{"lineNumber":702,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":703,"author":{"gitId":"swongts"},"content":"    * Expected: Applications shows welcome messages and allows you to type in commands.","lastModifiedDate":"2021-11-08"},{"lineNumber":704,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":705,"author":{"gitId":"swongts"},"content":"### Adding and viewing data","lastModifiedDate":"2021-11-08"},{"lineNumber":706,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":707,"author":{"gitId":"swongts"},"content":"1. Add `Client` to database","lastModifiedDate":"2021-11-08"},{"lineNumber":708,"author":{"gitId":"swongts"},"content":"    * Test case: `add -c c001 /n Bo Tuan /cn 93338333 /m borangutuan@mail.com`","lastModifiedDate":"2021-11-08"},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":710,"author":{"gitId":"swongts"},"content":"    1. Input the test case to the command window.","lastModifiedDate":"2021-11-08"},{"lineNumber":711,"author":{"gitId":"swongts"},"content":"    2. Input `list -c`.","lastModifiedDate":"2021-11-08"},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":713,"author":{"gitId":"swongts"},"content":"    * Expected: `Client` with id \"c001\", name \"Bo Tuan\", contact \"93338333\", mail \"borangutuan@mail.com\"","lastModifiedDate":"2021-11-08"},{"lineNumber":714,"author":{"gitId":"swongts"},"content":"      is displayed in the list of clients.","lastModifiedDate":"2021-11-08"},{"lineNumber":715,"author":{"gitId":"bobowoo2468"},"content":"    * :information_source: tests can be repeated with `Tour`, `Flight` and `ClientPackage` with the corresponding data","lastModifiedDate":"2021-11-08"},{"lineNumber":716,"author":{"gitId":"bobowoo2468"},"content":"      fields.","lastModifiedDate":"2021-11-08"},{"lineNumber":717,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":718,"author":{"gitId":"swongts"},"content":"### Cutting data","lastModifiedDate":"2021-11-08"},{"lineNumber":719,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":720,"author":{"gitId":"swongts"},"content":"1. Cut `Client` from database","lastModifiedDate":"2021-11-08"},{"lineNumber":721,"author":{"gitId":"swongts"},"content":"    * Test case: `cut -c c001` after calling `add -c c001 /n Bo Tuan /cn 93338333 /m borangutuan@mail.com`","lastModifiedDate":"2021-11-08"},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":723,"author":{"gitId":"swongts"},"content":"    1. Input the test case to the command window.","lastModifiedDate":"2021-11-08"},{"lineNumber":724,"author":{"gitId":"swongts"},"content":"    2. Input `list -c`.","lastModifiedDate":"2021-11-08"},{"lineNumber":725,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":726,"author":{"gitId":"swongts"},"content":"    * Expected: `Client` with id \"c001\", name \"Bo Tuan\", contact \"93338333\", mail \"borangutuan@mail.com\"","lastModifiedDate":"2021-11-08"},{"lineNumber":727,"author":{"gitId":"swongts"},"content":"      is no longer displayed in the list of clients.","lastModifiedDate":"2021-11-08"},{"lineNumber":728,"author":{"gitId":"bobowoo2468"},"content":"    * :information_source: tests can be repeated with `Tour`, `Flight` and `ClientPackage` with the corresponding data","lastModifiedDate":"2021-11-08"},{"lineNumber":729,"author":{"gitId":"bobowoo2468"},"content":"      fields.","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"YipWayne":151,"Demonshaha":5,"-":32,"bobowoo2468":230,"swongts":311}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"# TourPlanner","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"If you are a tour agency who require customised data management solutions, **TourPlanner** is the program for you!","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"TourPlanner has an intuitive and easy-to-use CLI interface, one can easily add to, and update the database with client, flight, and tour details!","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"What are you waiting for?","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"bobowoo2468":4,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"# **TourPlanner User Guide**","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"TourPlanner is a desktop application meant for employees of travel agencies. Its main purpose is to manage clients,","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"flights, accommodations and client packages data, optimized for use via a Command Line Interface (CLI). If you can type","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"fast, this application can allow one to access relevant travel information faster than traditional GUI applications.","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"## Table of Contents","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"### Taking Off - Introducing TourPlanner","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"- [User Guide - How to Use](#user-guide---how-to-use)","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"- [Introduction to Data Types](#introduction-to-data-types)","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"- [Introduction to Data Fields](#introduction-to-data-fields)","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"### On Top Of The World - Features of TourPlanner","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"#### Add/Cut Data Entries","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"- [Adding Data Types](#heavy_plus_sign-adding-data-types--add)","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"    - [Adding Clients](#adding-clients-into-database-add--c)","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"    - [Adding Tours](#adding-tours-into-database-add--t)","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"    - [Adding Flights](#adding-flights-into-database-add--f)","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"    - [Adding Client Packages](#adding-clientpackage-into-database-add--p)","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"- [Cutting Data Types](#scissors-cutting-data-types--cut)","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"    - [Cutting Client Packages](#cut-client-package)","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"    - [Cutting Clients/Tours/Flights](#cut-client--tour--flight)","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"#### Querying the Database","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"- [Listing Data Types](#mag_right-listing-data-types-list)","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"- [Finding Data Types](#finding-data-types-find)","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"    - [Finding Clients](#find-client)","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"    - [Finding Tour/Flights](#find-tour--flight)","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"- [Sorting Data Types](#chart_with_upwards_trend-sorting-data-types-sort)","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"    - [Sorting Clients](#sort-client)","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"    - [Sorting Tours](#sort-tour)","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"    - [Sorting Flights](#sort-flights)","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"#### Miscellaneous","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"- [Viewing help](#viewing-helphelp)","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"- [Exiting TourPlanner](#exit-application-bye)","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"bobowoo2468"},"content":"### Landing Gracefully - Summary","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"bobowoo2468"},"content":"- [General Command Information](#general-command-information)","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"- [Supporting Command Information](#supporting-command-information)","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"bobowoo2468"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"bobowoo2468"},"content":"## **User Guide - How to Use**","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"bobowoo2468"},"content":"\u003chr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"bobowoo2468"},"content":"Like our application, TourPlanner\u0027s User Guide is **intuitive** to use, but **comprehensive** as well. Any doubts you","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"bobowoo2468"},"content":"might have when using the application, we got you covered.","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"bobowoo2468"},"content":"**Navigate** across the User Guide with the [**Table of Contents**](#table-of-contents). Just click on the hyperlinks","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"bobowoo2468"},"content":"associated with your query, and you will be redirected to the specific section that addresses your query.","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"bobowoo2468"},"content":"The contents in this user guide follows you through the runtime of the program, and is sequenced chronologically.","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"bobowoo2468"},"content":"If you require help with your set-up, look under the [**Taking off**](#taking-off---introducing-tourplanner) section.","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"bobowoo2468"},"content":"Details on how to use the features are given under the","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"bobowoo2468"},"content":"[**On Top of The World**](#on-top-of-the-world---features-of-tourplanner) section.","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"bobowoo2468"},"content":"Lastly, for a summary of all the commands and prefixes, look under the","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"bobowoo2468"},"content":"[**Landing Gracefully**](#landing-gracefully---summary) section.","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"bobowoo2468"},"content":"Happy to have you onboard TourPlanner!","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":79,"author":{"gitId":"YipWayne"},"content":"## **Quick Start** ##","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":81,"author":{"gitId":"YipWayne"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":83,"author":{"gitId":"YipWayne"},"content":"1. Ensure you have Java 11 installed in your Computer","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"YipWayne"},"content":"2. Download the latest database db.jar from here (link tbd)","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"YipWayne"},"content":"3. Copy the file to the folder you want to use as the home folder for your database.","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"YipWayne"},"content":"4. Open a command window in that folder","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"YipWayne"},"content":"5. Run the command ```java -jar TourPlanner.jar``` to start the program","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":93,"author":{"gitId":"YipWayne"},"content":"6. Type the command in the command box and press Enter to execute","lastModifiedDate":"2021-11-02"},{"lineNumber":94,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"bobowoo2468"},"content":"[**Return to Table of Contents**](#table-of-contents)","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"YipWayne"},"content":"## Introduction to Data Types ##","lastModifiedDate":"2021-11-02"},{"lineNumber":100,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"YipWayne"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"bobowoo2468"},"content":"Throughout the user guide, you may observe that many commands have a","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"bobowoo2468"},"content":"```[DATA_TYPE]``` parameter. This parameter is to be specified right after declaring the command to use.","lastModifiedDate":"2021-10-29"},{"lineNumber":105,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"YipWayne"},"content":"There are 4 data types that are stored in TourPlanner:","lastModifiedDate":"2021-10-28"},{"lineNumber":107,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":108,"author":{"gitId":"YipWayne"},"content":"* ```-c``` Clients","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"YipWayne"},"content":"* ```-t``` Tours","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"YipWayne"},"content":"* ```-f``` Flights","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"swongts"},"content":"* ```-p``` Client Package: package that contains the client along with the tour and flight they have opted for.","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":113,"author":{"gitId":"YipWayne"},"content":"Examples of data types in commands:","lastModifiedDate":"2021-11-02"},{"lineNumber":114,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"YipWayne"},"content":"* ```add -t JPN /n Japan Basic Tour /p 1500 ``` calls for a \u003cu\u003etour\u003c/u\u003e to be added.","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"YipWayne"},"content":"* ```list -p ``` calls for all available \u003cu\u003eclient packages\u003c/u\u003e to be listed out.","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":118,"author":{"gitId":"bobowoo2468"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":120,"author":{"gitId":"bobowoo2468"},"content":"[**Return to Table of Contents**](#table-of-contents)","lastModifiedDate":"2021-11-05"},{"lineNumber":121,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":122,"author":{"gitId":"bobowoo2468"},"content":"## Introduction to Data Fields","lastModifiedDate":"2021-10-29"},{"lineNumber":123,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":124,"author":{"gitId":"bobowoo2468"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":125,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":126,"author":{"gitId":"bobowoo2468"},"content":"Throughout the user guide, you may observe that many commands have a ```[DATA_FIELDS]``` parameter.","lastModifiedDate":"2021-10-29"},{"lineNumber":127,"author":{"gitId":"bobowoo2468"},"content":"The ```[DATA_FIELDS]``` parameter represents the compulsory information fields that serves to describe the command in","lastModifiedDate":"2021-10-29"},{"lineNumber":128,"author":{"gitId":"bobowoo2468"},"content":"more detail.","lastModifiedDate":"2021-10-29"},{"lineNumber":129,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":130,"author":{"gitId":"bobowoo2468"},"content":"One data field is represented in the following format: ```/PREFIX INFO```","lastModifiedDate":"2021-10-29"},{"lineNumber":131,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":132,"author":{"gitId":"bobowoo2468"},"content":"Data fields can be viewed as supporting documents to the main command to be executed.","lastModifiedDate":"2021-10-29"},{"lineNumber":133,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":134,"author":{"gitId":"bobowoo2468"},"content":"These fields are *mandatory*. Let\u0027s say a client is added without his **name**, or **contact details**. Having these","lastModifiedDate":"2021-10-29"},{"lineNumber":135,"author":{"gitId":"bobowoo2468"},"content":"empty fields reduces the utility of the program, since certain meaningful operations cannot be performed. Case in point,","lastModifiedDate":"2021-10-29"},{"lineNumber":136,"author":{"gitId":"bobowoo2468"},"content":"one will not be able to query the client by name.","lastModifiedDate":"2021-10-29"},{"lineNumber":137,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":138,"author":{"gitId":"bobowoo2468"},"content":"These fields paint a complete picture of the different data types. Intuitively, clients have *key information fields*","lastModifiedDate":"2021-10-29"},{"lineNumber":139,"author":{"gitId":"bobowoo2468"},"content":"such as **name**, **contact number** and **email**.","lastModifiedDate":"2021-10-29"},{"lineNumber":140,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":141,"author":{"gitId":"bobowoo2468"},"content":"Examples of data fields in commands:","lastModifiedDate":"2021-10-29"},{"lineNumber":142,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":143,"author":{"gitId":"bobowoo2468"},"content":"* Add client:","lastModifiedDate":"2021-10-29"},{"lineNumber":144,"author":{"gitId":"bobowoo2468"},"content":"    * ```/n NAME```","lastModifiedDate":"2021-10-29"},{"lineNumber":145,"author":{"gitId":"bobowoo2468"},"content":"    * ```/cn CONTACT_NUMBER```","lastModifiedDate":"2021-10-29"},{"lineNumber":146,"author":{"gitId":"bobowoo2468"},"content":"    * ```/m EMAIL```","lastModifiedDate":"2021-10-29"},{"lineNumber":147,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":148,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":149,"author":{"gitId":"bobowoo2468"},"content":"* Sort tours:","lastModifiedDate":"2021-10-29"},{"lineNumber":150,"author":{"gitId":"bobowoo2468"},"content":"    * ```/p``` - sorts tours by *price*","lastModifiedDate":"2021-10-29"},{"lineNumber":151,"author":{"gitId":"bobowoo2468"},"content":"    * ```/n``` - sorts tours by *name*","lastModifiedDate":"2021-11-05"},{"lineNumber":152,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":153,"author":{"gitId":"swongts"},"content":"*Note: TourPlanner does not support the use of special characters or numbers larger than 2 billion.*","lastModifiedDate":"2021-11-08"},{"lineNumber":154,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":155,"author":{"gitId":"bobowoo2468"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":156,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":157,"author":{"gitId":"bobowoo2468"},"content":"[**Return to Table of Contents**](#table-of-contents)","lastModifiedDate":"2021-11-05"},{"lineNumber":158,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":159,"author":{"gitId":"bobowoo2468"},"content":"## Viewing help:``help``","lastModifiedDate":"2021-11-08"},{"lineNumber":160,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":161,"author":{"gitId":"YipWayne"},"content":"\u003chr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":162,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":163,"author":{"gitId":"YipWayne"},"content":"Shows a message with the link to this user guide.","lastModifiedDate":"2021-11-02"},{"lineNumber":164,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":165,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":166,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":167,"author":{"gitId":"YipWayne"},"content":"Format: ```help```","lastModifiedDate":"2021-11-02"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":169,"author":{"gitId":"YipWayne"},"content":"The following output will be shown:","lastModifiedDate":"2021-11-02"},{"lineNumber":170,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":171,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":172,"author":{"gitId":"bobowoo2468"},"content":"add: Add information of all data types into the database.","lastModifiedDate":"2021-11-08"},{"lineNumber":173,"author":{"gitId":"bobowoo2468"},"content":"Prefixes can be input in any order.","lastModifiedDate":"2021-11-08"},{"lineNumber":174,"author":{"gitId":"bobowoo2468"},"content":"Add client: add -c CLIENT_ID /n NAME /cn CONTACT_NUM /m EMAIL","lastModifiedDate":"2021-11-08"},{"lineNumber":175,"author":{"gitId":"bobowoo2468"},"content":"Add flight: add -f FLIGHT_ID /d DEPART_DESTINATION /r RETURN_DESTINATION","lastModifiedDate":"2021-11-08"},{"lineNumber":176,"author":{"gitId":"bobowoo2468"},"content":"/dd DEPARTURE_DATETIME /rd RETURN_DATETIME","lastModifiedDate":"2021-11-08"},{"lineNumber":177,"author":{"gitId":"bobowoo2468"},"content":"Add tour: add -t TOUR_ID /n DEPART_DESTINATION /p TOUR_PRICE","lastModifiedDate":"2021-11-08"},{"lineNumber":178,"author":{"gitId":"bobowoo2468"},"content":"Add client package: add -p PACKAGE_ID /c CLIENT_ID /t TOUR_ID /f FLIGHT_ID","lastModifiedDate":"2021-11-08"},{"lineNumber":179,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":180,"author":{"gitId":"bobowoo2468"},"content":"list: Shows a list of all available entries of a specific data type, along with their respective fields.","lastModifiedDate":"2021-11-08"},{"lineNumber":181,"author":{"gitId":"bobowoo2468"},"content":"List client: list -c","lastModifiedDate":"2021-11-08"},{"lineNumber":182,"author":{"gitId":"bobowoo2468"},"content":"List flight: list -f","lastModifiedDate":"2021-11-08"},{"lineNumber":183,"author":{"gitId":"bobowoo2468"},"content":"List tour: list -t","lastModifiedDate":"2021-11-08"},{"lineNumber":184,"author":{"gitId":"bobowoo2468"},"content":"List client package: list -p","lastModifiedDate":"2021-11-08"},{"lineNumber":185,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":186,"author":{"gitId":"bobowoo2468"},"content":"cut: Deletes entry of a certain data type and all client packages corresponding to the entry.","lastModifiedDate":"2021-11-08"},{"lineNumber":187,"author":{"gitId":"bobowoo2468"},"content":"Cut client: cut -c CLIENT_ID","lastModifiedDate":"2021-11-08"},{"lineNumber":188,"author":{"gitId":"bobowoo2468"},"content":"Cut flight: cut -f FLIGHT_ID","lastModifiedDate":"2021-11-08"},{"lineNumber":189,"author":{"gitId":"bobowoo2468"},"content":"Cut tour: cut -t TOUR_ID","lastModifiedDate":"2021-11-08"},{"lineNumber":190,"author":{"gitId":"bobowoo2468"},"content":"Cut client package: cut -p PACKAGE_ID","lastModifiedDate":"2021-11-08"},{"lineNumber":191,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":192,"author":{"gitId":"bobowoo2468"},"content":"find: Finds specific entry of data type, returns the entry and other relevant information.","lastModifiedDate":"2021-11-08"},{"lineNumber":193,"author":{"gitId":"bobowoo2468"},"content":"Find client: find -c CLIENT_NAME","lastModifiedDate":"2021-11-08"},{"lineNumber":194,"author":{"gitId":"bobowoo2468"},"content":"Find flight: find -f FLIGHT_ID","lastModifiedDate":"2021-11-08"},{"lineNumber":195,"author":{"gitId":"bobowoo2468"},"content":"Find tour: find -t TOUR_ID","lastModifiedDate":"2021-11-08"},{"lineNumber":196,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":197,"author":{"gitId":"bobowoo2468"},"content":"sort: Sorts entries in the data type based on the criteria.","lastModifiedDate":"2021-11-08"},{"lineNumber":198,"author":{"gitId":"bobowoo2468"},"content":"Sort client:","lastModifiedDate":"2021-11-08"},{"lineNumber":199,"author":{"gitId":"bobowoo2468"},"content":"Sort by id: sort -c /id","lastModifiedDate":"2021-11-08"},{"lineNumber":200,"author":{"gitId":"bobowoo2468"},"content":"Sort by name: sort -c /n","lastModifiedDate":"2021-11-08"},{"lineNumber":201,"author":{"gitId":"bobowoo2468"},"content":"Sort flight:","lastModifiedDate":"2021-11-08"},{"lineNumber":202,"author":{"gitId":"bobowoo2468"},"content":"Sort by id: sort -f /id","lastModifiedDate":"2021-11-08"},{"lineNumber":203,"author":{"gitId":"bobowoo2468"},"content":"Sort by departure date: sort -f /d","lastModifiedDate":"2021-11-08"},{"lineNumber":204,"author":{"gitId":"bobowoo2468"},"content":"Sort by return date: sort -f /r","lastModifiedDate":"2021-11-08"},{"lineNumber":205,"author":{"gitId":"bobowoo2468"},"content":"Sort tour:","lastModifiedDate":"2021-11-08"},{"lineNumber":206,"author":{"gitId":"bobowoo2468"},"content":"Sort by id: sort -t /id","lastModifiedDate":"2021-11-08"},{"lineNumber":207,"author":{"gitId":"bobowoo2468"},"content":"Sort by name: sort -t /n","lastModifiedDate":"2021-11-08"},{"lineNumber":208,"author":{"gitId":"bobowoo2468"},"content":"Sort by price: sort -t /p","lastModifiedDate":"2021-11-08"},{"lineNumber":209,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":210,"author":{"gitId":"bobowoo2468"},"content":"bye: Exits the program.","lastModifiedDate":"2021-11-08"},{"lineNumber":211,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":212,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":213,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":214,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":215,"author":{"gitId":"bobowoo2468"},"content":"[**Return to Table of Contents**](#table-of-contents)","lastModifiedDate":"2021-11-05"},{"lineNumber":216,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":217,"author":{"gitId":"YipWayne"},"content":"## Adding / Cutting Data Types","lastModifiedDate":"2021-11-02"},{"lineNumber":218,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":219,"author":{"gitId":"YipWayne"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":220,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":221,"author":{"gitId":"bobowoo2468"},"content":":information_source:Please refer to \u003cu\u003eIntroduction to Data Types\u003c/u\u003e and \u003cu\u003eIntroduction to Data Fields\u003c/u\u003e on the","lastModifiedDate":"2021-11-05"},{"lineNumber":222,"author":{"gitId":"bobowoo2468"},"content":"purpose and syntax of ```DATA_TYPES``` and ```DATA_FIELDS```.","lastModifiedDate":"2021-11-05"},{"lineNumber":223,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":224,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":225,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":226,"author":{"gitId":"YipWayne"},"content":"## :heavy_plus_sign: Adding data types:  ```add```","lastModifiedDate":"2021-11-02"},{"lineNumber":227,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":228,"author":{"gitId":"bobowoo2468"},"content":"You are able to add information of all data types into the database, specified by mandatory fields to enter for each","lastModifiedDate":"2021-10-29"},{"lineNumber":229,"author":{"gitId":"bobowoo2468"},"content":"entry.","lastModifiedDate":"2021-10-29"},{"lineNumber":230,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":231,"author":{"gitId":"bobowoo2468"},"content":"Format: ```add [DATA_TYPE] [DATA_FIELDS]```","lastModifiedDate":"2021-10-29"},{"lineNumber":232,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":233,"author":{"gitId":"bobowoo2468"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":234,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":235,"author":{"gitId":"bobowoo2468"},"content":"### Adding clients into database: ```add -c```","lastModifiedDate":"2021-10-29"},{"lineNumber":236,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":237,"author":{"gitId":"YipWayne"},"content":"Format: ```add [DATA_TYPE] [CLIENT_ID] [DATA_FIELDS]```","lastModifiedDate":"2021-11-03"},{"lineNumber":238,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":239,"author":{"gitId":"bobowoo2468"},"content":"These are your existing or potential customers. In this industry of tour planning, your livelihoods depend on them.","lastModifiedDate":"2021-10-29"},{"lineNumber":240,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":241,"author":{"gitId":"bobowoo2468"},"content":"Mandatory data fields:","lastModifiedDate":"2021-10-29"},{"lineNumber":242,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":243,"author":{"gitId":"bobowoo2468"},"content":"* Client ID - ```CLIENT_ID```","lastModifiedDate":"2021-10-29"},{"lineNumber":244,"author":{"gitId":"bobowoo2468"},"content":"* Client name - ```/n NAME```","lastModifiedDate":"2021-10-29"},{"lineNumber":245,"author":{"gitId":"bobowoo2468"},"content":"* Client contact number - ```/cn CONTACT_NUMBER```","lastModifiedDate":"2021-10-29"},{"lineNumber":246,"author":{"gitId":"bobowoo2468"},"content":"* Client email address - ```/m EMAIL```","lastModifiedDate":"2021-10-29"},{"lineNumber":247,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":248,"author":{"gitId":"bobowoo2468"},"content":":exclamation: Note that the given **contact number** should ideally contain only eight numbers from _0 to 9_. If there","lastModifiedDate":"2021-11-05"},{"lineNumber":249,"author":{"gitId":"bobowoo2468"},"content":"are extra inputs, TourPlanner will return a **warning** message.","lastModifiedDate":"2021-11-05"},{"lineNumber":250,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":251,"author":{"gitId":"bobowoo2468"},"content":"Example:","lastModifiedDate":"2021-10-29"},{"lineNumber":252,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":253,"author":{"gitId":"bobowoo2468"},"content":"* `add -c c001 /n Bo Tuan /cn 91234567 /m bobotea@gmail.com`","lastModifiedDate":"2021-10-29"},{"lineNumber":254,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":255,"author":{"gitId":"bobowoo2468"},"content":"Adds *Bo Tuan*, contact number *91234567* and email","lastModifiedDate":"2021-10-29"},{"lineNumber":256,"author":{"gitId":"bobowoo2468"},"content":"*bobotea@gmail.com*, as client ID *c001*.","lastModifiedDate":"2021-10-29"},{"lineNumber":257,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":258,"author":{"gitId":"bobowoo2468"},"content":"* `add -c c002 /n Wayne /m winnie@gmail.com /cn 92468024`","lastModifiedDate":"2021-10-29"},{"lineNumber":259,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":260,"author":{"gitId":"bobowoo2468"},"content":"Adds *Wayne*, contact number *92468024* and email","lastModifiedDate":"2021-10-29"},{"lineNumber":261,"author":{"gitId":"bobowoo2468"},"content":"*winnie@gmail.com*, as client ID *c002*.","lastModifiedDate":"2021-10-29"},{"lineNumber":262,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":263,"author":{"gitId":"bobowoo2468"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":264,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":265,"author":{"gitId":"bobowoo2468"},"content":"### Adding flights into database: ```add -f```","lastModifiedDate":"2021-10-29"},{"lineNumber":266,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":267,"author":{"gitId":"YipWayne"},"content":"Format: ```add [DATA_TYPE] [FLIGHT_ID] [DATA_FIELDS]```","lastModifiedDate":"2021-11-03"},{"lineNumber":268,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":269,"author":{"gitId":"bobowoo2468"},"content":"Mandatory data fields:","lastModifiedDate":"2021-10-29"},{"lineNumber":270,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":271,"author":{"gitId":"bobowoo2468"},"content":"* Flight ID - ```FLIGHT_ID```","lastModifiedDate":"2021-10-29"},{"lineNumber":272,"author":{"gitId":"bobowoo2468"},"content":"* Flight departure destination - ```/d DEPARTURE_DESTINATION```","lastModifiedDate":"2021-10-29"},{"lineNumber":273,"author":{"gitId":"bobowoo2468"},"content":"* Flight return destination - ```/r RETURN_DESTINATION```","lastModifiedDate":"2021-10-29"},{"lineNumber":274,"author":{"gitId":"bobowoo2468"},"content":"* Flight departure date and time - ```/dd DEPARTURE_TIME```","lastModifiedDate":"2021-10-29"},{"lineNumber":275,"author":{"gitId":"bobowoo2468"},"content":"* Flight return date and time - ```/rd RETURN_TIME```","lastModifiedDate":"2021-10-29"},{"lineNumber":276,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":277,"author":{"gitId":"bobowoo2468"},"content":":exclamation: Note that the given date and times should be of the format: ```d/M/yy HH:mm```. TourPlanner will","lastModifiedDate":"2021-11-08"},{"lineNumber":278,"author":{"gitId":"bobowoo2468"},"content":"**reject** any entry that violates this format rule.","lastModifiedDate":"2021-11-08"},{"lineNumber":279,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":280,"author":{"gitId":"bobowoo2468"},"content":"Example:","lastModifiedDate":"2021-10-29"},{"lineNumber":281,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":282,"author":{"gitId":"YipWayne"},"content":"* `add -f SQ-JPN1 /d Japan /r Singapore /dd 29/10/21 13:00 /rd 5/11/21 02:00`","lastModifiedDate":"2021-11-02"},{"lineNumber":283,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":284,"author":{"gitId":"bobowoo2468"},"content":"Add flights from _Singapore_ to _Japan_","lastModifiedDate":"2021-10-29"},{"lineNumber":285,"author":{"gitId":"bobowoo2468"},"content":"and back, departing from Singapore at _1pm, 29 Oct 2021_ and returning to Singapore at _5 Nov 2021, 2am_. Stored in the","lastModifiedDate":"2021-10-29"},{"lineNumber":286,"author":{"gitId":"bobowoo2468"},"content":"database as ID: _SQ-JPN1_.","lastModifiedDate":"2021-10-29"},{"lineNumber":287,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":288,"author":{"gitId":"bobowoo2468"},"content":"* `add -f SQ-KOR1 /d Korea /dd 2/5/22 11:00 /r Singapore /rd 15/5/22 23:00`","lastModifiedDate":"2021-10-29"},{"lineNumber":289,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":290,"author":{"gitId":"bobowoo2468"},"content":"Add flights from _Singapore_ to _Korea_","lastModifiedDate":"2021-10-29"},{"lineNumber":291,"author":{"gitId":"bobowoo2468"},"content":"and back, departing from Korea at _11am, 2 May 2022_ and returning to Singapore at _15 May 2022, 11pm_. Stored in the","lastModifiedDate":"2021-10-29"},{"lineNumber":292,"author":{"gitId":"bobowoo2468"},"content":"database as ID: _SQ-KOR1_.","lastModifiedDate":"2021-10-29"},{"lineNumber":293,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":294,"author":{"gitId":"bobowoo2468"},"content":":exclamation: Note that the given **date-times** should be logically coherent","lastModifiedDate":"2021-11-05"},{"lineNumber":295,"author":{"gitId":"bobowoo2468"},"content":"(i.e. arrival at destination should be before return). TourPlanner will reject erroneous inputs with an **error**","lastModifiedDate":"2021-11-05"},{"lineNumber":296,"author":{"gitId":"bobowoo2468"},"content":"message.","lastModifiedDate":"2021-11-05"},{"lineNumber":297,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":298,"author":{"gitId":"bobowoo2468"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":299,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":300,"author":{"gitId":"bobowoo2468"},"content":"### Adding tours into database: ```add -t```","lastModifiedDate":"2021-10-29"},{"lineNumber":301,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":302,"author":{"gitId":"YipWayne"},"content":"Format: ```add [DATA_TYPE] [TOUR_ID] [DATA_FIELDS]```","lastModifiedDate":"2021-11-03"},{"lineNumber":303,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":304,"author":{"gitId":"bobowoo2468"},"content":"Mandatory data fields:","lastModifiedDate":"2021-10-29"},{"lineNumber":305,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":306,"author":{"gitId":"bobowoo2468"},"content":"* Tour ID - ```TOUR_ID```","lastModifiedDate":"2021-10-29"},{"lineNumber":307,"author":{"gitId":"YipWayne"},"content":"* Tour name - ```/n TOUR_NAME```","lastModifiedDate":"2021-11-02"},{"lineNumber":308,"author":{"gitId":"YipWayne"},"content":"* Tour price - ```/p TOUR_PRICE```","lastModifiedDate":"2021-11-02"},{"lineNumber":309,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":310,"author":{"gitId":"bobowoo2468"},"content":":exclamation: Note that the given **price** should be a *positive numerical value* (up to 2 decimal places).","lastModifiedDate":"2021-11-05"},{"lineNumber":311,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":312,"author":{"gitId":"bobowoo2468"},"content":"Example:","lastModifiedDate":"2021-10-29"},{"lineNumber":313,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":314,"author":{"gitId":"bobowoo2468"},"content":"* `add -t t001 /n AustralianRomance /p 1500`","lastModifiedDate":"2021-10-29"},{"lineNumber":315,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":316,"author":{"gitId":"bobowoo2468"},"content":"Adds _AustralianRomance_, which costs _$1500_, as tour _t001_.","lastModifiedDate":"2021-10-29"},{"lineNumber":317,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":318,"author":{"gitId":"bobowoo2468"},"content":"* `add -t t002 /p 2300 /n KoreanWonderland`","lastModifiedDate":"2021-10-29"},{"lineNumber":319,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":320,"author":{"gitId":"bobowoo2468"},"content":"Adds _KoreanWonderland_, which costs _$2300_, as tour _t002_.","lastModifiedDate":"2021-10-29"},{"lineNumber":321,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":322,"author":{"gitId":"bobowoo2468"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":323,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":324,"author":{"gitId":"bobowoo2468"},"content":"### Adding ClientPackage into database: ```add -p```","lastModifiedDate":"2021-10-29"},{"lineNumber":325,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":326,"author":{"gitId":"bobowoo2468"},"content":"ClientPackage acts as a master list of details for each client, to have an overview of the client upon querying. Each","lastModifiedDate":"2021-10-29"},{"lineNumber":327,"author":{"gitId":"bobowoo2468"},"content":"package represents one client, with his or her respective tour and flight details.","lastModifiedDate":"2021-10-29"},{"lineNumber":328,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":329,"author":{"gitId":"YipWayne"},"content":"Format: ```add [DATA_TYPE] [PACKAGE_ID] [DATA_FIELDS]```","lastModifiedDate":"2021-11-03"},{"lineNumber":330,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":331,"author":{"gitId":"bobowoo2468"},"content":"Mandatory data fields:","lastModifiedDate":"2021-10-29"},{"lineNumber":332,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":333,"author":{"gitId":"bobowoo2468"},"content":"* Package ID - ```PACKAGE_ID```","lastModifiedDate":"2021-10-29"},{"lineNumber":334,"author":{"gitId":"bobowoo2468"},"content":"* Client ID - ```/c CLIENT_ID```","lastModifiedDate":"2021-10-29"},{"lineNumber":335,"author":{"gitId":"bobowoo2468"},"content":"* Flight ID - ```/f FLIGHT_ID```","lastModifiedDate":"2021-10-29"},{"lineNumber":336,"author":{"gitId":"bobowoo2468"},"content":"* Tour ID - ```/t TOUR_ID```","lastModifiedDate":"2021-10-29"},{"lineNumber":337,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":338,"author":{"gitId":"bobowoo2468"},"content":":exclamation: Note that the respective client, flight and tour must **exist** in order for package to be added.","lastModifiedDate":"2021-10-29"},{"lineNumber":339,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":340,"author":{"gitId":"bobowoo2468"},"content":"Example:","lastModifiedDate":"2021-10-29"},{"lineNumber":341,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":342,"author":{"gitId":"bobowoo2468"},"content":"* `add -p p001 /c c001 /f SQ-JPN1 /t t001`","lastModifiedDate":"2021-10-29"},{"lineNumber":343,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":344,"author":{"gitId":"bobowoo2468"},"content":"Adds Client _c001_, Flight _SQ-JPN1_, and Tour _t001_ into an overall package _p001_.","lastModifiedDate":"2021-10-29"},{"lineNumber":345,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":346,"author":{"gitId":"bobowoo2468"},"content":"* `add -p p002 /c c002 /t t002 /f SQ-KOR1 `","lastModifiedDate":"2021-10-29"},{"lineNumber":347,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":348,"author":{"gitId":"bobowoo2468"},"content":"Adds Client _c002_, Flight _SQ-KOR1_, and Tour _t002_ into an overall package _p002_.","lastModifiedDate":"2021-10-29"},{"lineNumber":349,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":350,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":351,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":352,"author":{"gitId":"bobowoo2468"},"content":"[**Return to Table of Contents**](#table-of-contents)","lastModifiedDate":"2021-11-05"},{"lineNumber":353,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":354,"author":{"gitId":"YipWayne"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":355,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":356,"author":{"gitId":"YipWayne"},"content":"## :scissors: Cutting data types:  ```cut```","lastModifiedDate":"2021-11-02"},{"lineNumber":357,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":358,"author":{"gitId":"swongts"},"content":"Deletes entry of a certain data type.","lastModifiedDate":"2021-10-29"},{"lineNumber":359,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":360,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":361,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":362,"author":{"gitId":"swongts"},"content":"### Cut Client Package","lastModifiedDate":"2021-10-29"},{"lineNumber":363,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":364,"author":{"gitId":"swongts"},"content":"Deletes the client package from the list of packages.","lastModifiedDate":"2021-10-29"},{"lineNumber":365,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":366,"author":{"gitId":"swongts"},"content":"Format: `cut -p DATA_ID`","lastModifiedDate":"2021-10-29"},{"lineNumber":367,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":368,"author":{"gitId":"swongts"},"content":"* Deletes the client package with specified DATA_ID.","lastModifiedDate":"2021-10-29"},{"lineNumber":369,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":370,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":371,"author":{"gitId":"swongts"},"content":"Examples:","lastModifiedDate":"2021-10-29"},{"lineNumber":372,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":373,"author":{"gitId":"bobowoo2468"},"content":"* `cut -p p001` deletes client package with id \u0027p001\u0027, where \u0027p001\u0027 contains client \u0027c001\u0027, tour \u0027JPN1\u0027 and flight \u0027","lastModifiedDate":"2021-11-05"},{"lineNumber":374,"author":{"gitId":"bobowoo2468"},"content":"  SQ-JPN\u0027","lastModifiedDate":"2021-11-05"},{"lineNumber":375,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":376,"author":{"gitId":"swongts"},"content":"An output of this format will be shown:","lastModifiedDate":"2021-10-29"},{"lineNumber":377,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":378,"author":{"gitId":"swongts"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":379,"author":{"gitId":"swongts"},"content":"Client has been deleted:","lastModifiedDate":"2021-10-29"},{"lineNumber":380,"author":{"gitId":"swongts"},"content":"Package ID: p001","lastModifiedDate":"2021-10-29"},{"lineNumber":381,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":382,"author":{"gitId":"swongts"},"content":"Client: ","lastModifiedDate":"2021-10-29"},{"lineNumber":383,"author":{"gitId":"swongts"},"content":"Client ID: c001","lastModifiedDate":"2021-10-29"},{"lineNumber":384,"author":{"gitId":"swongts"},"content":"Name: Adam","lastModifiedDate":"2021-10-29"},{"lineNumber":385,"author":{"gitId":"swongts"},"content":"Contact Number: 93338333","lastModifiedDate":"2021-10-29"},{"lineNumber":386,"author":{"gitId":"swongts"},"content":"Email: adam@mail.com","lastModifiedDate":"2021-10-29"},{"lineNumber":387,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":388,"author":{"gitId":"swongts"},"content":"Tour: ","lastModifiedDate":"2021-10-29"},{"lineNumber":389,"author":{"gitId":"swongts"},"content":"Name: Japan Basic Tour","lastModifiedDate":"2021-10-29"},{"lineNumber":390,"author":{"gitId":"swongts"},"content":"Code: JPN1","lastModifiedDate":"2021-10-29"},{"lineNumber":391,"author":{"gitId":"swongts"},"content":"Price per pax: $1500.00","lastModifiedDate":"2021-10-29"},{"lineNumber":392,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":393,"author":{"gitId":"swongts"},"content":"Flight: ","lastModifiedDate":"2021-10-29"},{"lineNumber":394,"author":{"gitId":"swongts"},"content":"Flight ID: SQ-JPN","lastModifiedDate":"2021-10-29"},{"lineNumber":395,"author":{"gitId":"swongts"},"content":"Departure Flight: JPN, 20/10/21 18:00","lastModifiedDate":"2021-10-29"},{"lineNumber":396,"author":{"gitId":"swongts"},"content":"Return Flight: SG, 21/10/21 03:00","lastModifiedDate":"2021-10-29"},{"lineNumber":397,"author":{"gitId":"swongts"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":398,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":399,"author":{"gitId":"swongts"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":400,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":401,"author":{"gitId":"swongts"},"content":"### Cut Client / Tour / Flight","lastModifiedDate":"2021-10-29"},{"lineNumber":402,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":403,"author":{"gitId":"swongts"},"content":"Format: `cut [DATA_TYPE] DATA_ID`","lastModifiedDate":"2021-10-29"},{"lineNumber":404,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":405,"author":{"gitId":"swongts"},"content":"* Deletes the entry of DATA_TYPE with specified DATA_ID.","lastModifiedDate":"2021-10-29"},{"lineNumber":406,"author":{"gitId":"swongts"},"content":"* Deletes all client packages that contains the specific entry","lastModifiedDate":"2021-10-29"},{"lineNumber":407,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":408,"author":{"gitId":"swongts"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":409,"author":{"gitId":"swongts"},"content":"Examples:","lastModifiedDate":"2021-10-29"},{"lineNumber":410,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":411,"author":{"gitId":"swongts"},"content":"* `cut -c c001` deletes client with id \u0027c001\u0027, and all client packages that contains client \u0027c001\u0027.","lastModifiedDate":"2021-10-29"},{"lineNumber":412,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":413,"author":{"gitId":"swongts"},"content":"An output of this format will be shown:","lastModifiedDate":"2021-10-29"},{"lineNumber":414,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":415,"author":{"gitId":"swongts"},"content":"Deleting client:","lastModifiedDate":"2021-10-29"},{"lineNumber":416,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":417,"author":{"gitId":"swongts"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":418,"author":{"gitId":"swongts"},"content":"Client has been deleted:","lastModifiedDate":"2021-10-29"},{"lineNumber":419,"author":{"gitId":"swongts"},"content":"Client ID: c001","lastModifiedDate":"2021-10-29"},{"lineNumber":420,"author":{"gitId":"swongts"},"content":"Name: Adam","lastModifiedDate":"2021-10-29"},{"lineNumber":421,"author":{"gitId":"swongts"},"content":"Contact Number: 93338333","lastModifiedDate":"2021-10-29"},{"lineNumber":422,"author":{"gitId":"swongts"},"content":"Email: adam@mail.com","lastModifiedDate":"2021-10-29"},{"lineNumber":423,"author":{"gitId":"swongts"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":424,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":425,"author":{"gitId":"swongts"},"content":"Deleting all related client packages:","lastModifiedDate":"2021-10-29"},{"lineNumber":426,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":427,"author":{"gitId":"swongts"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":428,"author":{"gitId":"swongts"},"content":"Client Package has been deleted:","lastModifiedDate":"2021-10-29"},{"lineNumber":429,"author":{"gitId":"swongts"},"content":"Package ID: p001","lastModifiedDate":"2021-10-29"},{"lineNumber":430,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":431,"author":{"gitId":"swongts"},"content":"Client: ","lastModifiedDate":"2021-10-29"},{"lineNumber":432,"author":{"gitId":"swongts"},"content":"Client ID: c001","lastModifiedDate":"2021-10-29"},{"lineNumber":433,"author":{"gitId":"swongts"},"content":"Name: Adam","lastModifiedDate":"2021-10-29"},{"lineNumber":434,"author":{"gitId":"swongts"},"content":"Contact Number: 93338333","lastModifiedDate":"2021-10-29"},{"lineNumber":435,"author":{"gitId":"swongts"},"content":"Email: adam@mail.com","lastModifiedDate":"2021-10-29"},{"lineNumber":436,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":437,"author":{"gitId":"swongts"},"content":"Tour: ","lastModifiedDate":"2021-10-29"},{"lineNumber":438,"author":{"gitId":"swongts"},"content":"Name: Japan Basic Tour","lastModifiedDate":"2021-10-29"},{"lineNumber":439,"author":{"gitId":"swongts"},"content":"Code: JPN1","lastModifiedDate":"2021-10-29"},{"lineNumber":440,"author":{"gitId":"swongts"},"content":"Price per pax: $1500.00","lastModifiedDate":"2021-10-29"},{"lineNumber":441,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":442,"author":{"gitId":"swongts"},"content":"Flight: ","lastModifiedDate":"2021-10-29"},{"lineNumber":443,"author":{"gitId":"swongts"},"content":"Flight ID: SQ-JPN","lastModifiedDate":"2021-10-29"},{"lineNumber":444,"author":{"gitId":"swongts"},"content":"Departure Flight: JPN, 20/10/21 18:00","lastModifiedDate":"2021-10-29"},{"lineNumber":445,"author":{"gitId":"swongts"},"content":"Return Flight: SG, 21/10/21 03:00","lastModifiedDate":"2021-10-29"},{"lineNumber":446,"author":{"gitId":"swongts"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":447,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":448,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":449,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":450,"author":{"gitId":"swongts"},"content":"* `cut -t KOR` deletes tour with id \u0027KOR\u0027, and all client packages that contains tour \u0027KOR\u0027.","lastModifiedDate":"2021-10-29"},{"lineNumber":451,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":452,"author":{"gitId":"swongts"},"content":"An output of this format will be shown:","lastModifiedDate":"2021-10-29"},{"lineNumber":453,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":454,"author":{"gitId":"swongts"},"content":"Deleting tour:","lastModifiedDate":"2021-10-29"},{"lineNumber":455,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":456,"author":{"gitId":"swongts"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":457,"author":{"gitId":"swongts"},"content":"Tour has been deleted:","lastModifiedDate":"2021-10-29"},{"lineNumber":458,"author":{"gitId":"swongts"},"content":"Name: Korea Cultural Tour","lastModifiedDate":"2021-10-29"},{"lineNumber":459,"author":{"gitId":"swongts"},"content":"Code: KOR","lastModifiedDate":"2021-10-29"},{"lineNumber":460,"author":{"gitId":"swongts"},"content":"Price per pax: $3000.00","lastModifiedDate":"2021-10-29"},{"lineNumber":461,"author":{"gitId":"swongts"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":462,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":463,"author":{"gitId":"swongts"},"content":"Deleting all related client packages:","lastModifiedDate":"2021-10-29"},{"lineNumber":464,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":465,"author":{"gitId":"swongts"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":466,"author":{"gitId":"swongts"},"content":"Client Package has been deleted:","lastModifiedDate":"2021-10-29"},{"lineNumber":467,"author":{"gitId":"swongts"},"content":"Package ID: p001","lastModifiedDate":"2021-10-29"},{"lineNumber":468,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":469,"author":{"gitId":"swongts"},"content":"Client: ","lastModifiedDate":"2021-10-29"},{"lineNumber":470,"author":{"gitId":"swongts"},"content":"Client ID: c001","lastModifiedDate":"2021-10-29"},{"lineNumber":471,"author":{"gitId":"swongts"},"content":"Name: Adam","lastModifiedDate":"2021-10-29"},{"lineNumber":472,"author":{"gitId":"swongts"},"content":"Contact Number: 93338333","lastModifiedDate":"2021-10-29"},{"lineNumber":473,"author":{"gitId":"swongts"},"content":"Email: adam@mail.com","lastModifiedDate":"2021-10-29"},{"lineNumber":474,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":475,"author":{"gitId":"swongts"},"content":"Tour: ","lastModifiedDate":"2021-10-29"},{"lineNumber":476,"author":{"gitId":"swongts"},"content":"Name: Korea Cultural Tour","lastModifiedDate":"2021-10-29"},{"lineNumber":477,"author":{"gitId":"swongts"},"content":"Code: KOR","lastModifiedDate":"2021-10-29"},{"lineNumber":478,"author":{"gitId":"swongts"},"content":"Price per pax: $3000.00","lastModifiedDate":"2021-10-29"},{"lineNumber":479,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":480,"author":{"gitId":"swongts"},"content":"Flight: ","lastModifiedDate":"2021-10-29"},{"lineNumber":481,"author":{"gitId":"swongts"},"content":"Flight ID: SQ-JPN","lastModifiedDate":"2021-10-29"},{"lineNumber":482,"author":{"gitId":"swongts"},"content":"Departure Flight: JPN, 20/10/21 18:00","lastModifiedDate":"2021-10-29"},{"lineNumber":483,"author":{"gitId":"swongts"},"content":"Return Flight: SG, 21/10/21 03:00","lastModifiedDate":"2021-10-29"},{"lineNumber":484,"author":{"gitId":"swongts"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":485,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":486,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":487,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":488,"author":{"gitId":"bobowoo2468"},"content":"[**Return to Table of Contents**](#table-of-contents)","lastModifiedDate":"2021-11-05"},{"lineNumber":489,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":490,"author":{"gitId":"YipWayne"},"content":"## **Querying Data Types**","lastModifiedDate":"2021-10-28"},{"lineNumber":491,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":492,"author":{"gitId":"YipWayne"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":493,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":494,"author":{"gitId":"YipWayne"},"content":"The user is also able to view all entries of a specific data type, as well as find specific entrie(s) based their codes.","lastModifiedDate":"2021-10-28"},{"lineNumber":495,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":496,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":497,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":498,"author":{"gitId":"bobowoo2468"},"content":":information_source: Please refer to \u003cu\u003eIntroduction to Data Types\u003c/u\u003e on the syntax of ```[DATA_TYPE]```","lastModifiedDate":"2021-11-05"},{"lineNumber":499,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":500,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":501,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":502,"author":{"gitId":"YipWayne"},"content":"## :mag_right: Listing data types: ```list```","lastModifiedDate":"2021-11-02"},{"lineNumber":503,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":504,"author":{"gitId":"YipWayne"},"content":"Shows a list of all available entries of a specific data type, along with their respective fields.","lastModifiedDate":"2021-10-28"},{"lineNumber":505,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":506,"author":{"gitId":"YipWayne"},"content":"Format: ```list [DATA_TYPE]```","lastModifiedDate":"2021-10-28"},{"lineNumber":507,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":508,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":509,"author":{"gitId":"YipWayne"},"content":"Examples:","lastModifiedDate":"2021-10-28"},{"lineNumber":510,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":511,"author":{"gitId":"YipWayne"},"content":"* ```list -c``` lists out all available client entries.","lastModifiedDate":"2021-10-28"},{"lineNumber":512,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":513,"author":{"gitId":"YipWayne"},"content":"An output of this format will be shown:","lastModifiedDate":"2021-10-28"},{"lineNumber":514,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":515,"author":{"gitId":"YipWayne"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":516,"author":{"gitId":"YipWayne"},"content":"Here is a list of all clients:","lastModifiedDate":"2021-10-28"},{"lineNumber":517,"author":{"gitId":"YipWayne"},"content":"1. Client ID: c001","lastModifiedDate":"2021-10-28"},{"lineNumber":518,"author":{"gitId":"YipWayne"},"content":"Name: Adam","lastModifiedDate":"2021-10-28"},{"lineNumber":519,"author":{"gitId":"YipWayne"},"content":"Contact Number: 93338333","lastModifiedDate":"2021-10-28"},{"lineNumber":520,"author":{"gitId":"YipWayne"},"content":"Email: adam@mail.com","lastModifiedDate":"2021-10-28"},{"lineNumber":521,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":522,"author":{"gitId":"YipWayne"},"content":"2. Client ID: c002","lastModifiedDate":"2021-10-28"},{"lineNumber":523,"author":{"gitId":"YipWayne"},"content":"Name: Betty","lastModifiedDate":"2021-10-28"},{"lineNumber":524,"author":{"gitId":"YipWayne"},"content":"Contact Number: 12223444","lastModifiedDate":"2021-10-28"},{"lineNumber":525,"author":{"gitId":"YipWayne"},"content":"Email: betty@mail.com","lastModifiedDate":"2021-11-02"},{"lineNumber":526,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":527,"author":{"gitId":"YipWayne"},"content":"Total Clients: 2","lastModifiedDate":"2021-10-28"},{"lineNumber":528,"author":{"gitId":"YipWayne"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":529,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":530,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":531,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":532,"author":{"gitId":"YipWayne"},"content":"* ```list -f``` lists out all available flight entries.","lastModifiedDate":"2021-10-28"},{"lineNumber":533,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":534,"author":{"gitId":"YipWayne"},"content":"An output of this format will be shown:","lastModifiedDate":"2021-10-28"},{"lineNumber":535,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":536,"author":{"gitId":"YipWayne"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":537,"author":{"gitId":"YipWayne"},"content":"Here is a list of all flights:","lastModifiedDate":"2021-10-28"},{"lineNumber":538,"author":{"gitId":"YipWayne"},"content":"1. Flight ID: SQ-JPN","lastModifiedDate":"2021-10-28"},{"lineNumber":539,"author":{"gitId":"YipWayne"},"content":"Departure Flight: JPN, 20/10/2021 18:00","lastModifiedDate":"2021-10-28"},{"lineNumber":540,"author":{"gitId":"YipWayne"},"content":"Return Flight: SG, 21/10/2021 03:00","lastModifiedDate":"2021-10-28"},{"lineNumber":541,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":542,"author":{"gitId":"YipWayne"},"content":"2. Flight ID: SQ-KOR","lastModifiedDate":"2021-10-28"},{"lineNumber":543,"author":{"gitId":"YipWayne"},"content":"Departure Flight: KOR, 23/10/2021 18:00","lastModifiedDate":"2021-10-28"},{"lineNumber":544,"author":{"gitId":"YipWayne"},"content":"Return Flight: SG, 30/10/2021 03:00","lastModifiedDate":"2021-10-28"},{"lineNumber":545,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":546,"author":{"gitId":"YipWayne"},"content":"Total Flights: 2","lastModifiedDate":"2021-10-28"},{"lineNumber":547,"author":{"gitId":"YipWayne"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":548,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":549,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":550,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":551,"author":{"gitId":"bobowoo2468"},"content":"[**Return to Table of Contents**](#table-of-contents)","lastModifiedDate":"2021-11-05"},{"lineNumber":552,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":553,"author":{"gitId":"YipWayne"},"content":"## Finding data types: ```find```","lastModifiedDate":"2021-10-28"},{"lineNumber":554,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":555,"author":{"gitId":"YipWayne"},"content":"### Find client","lastModifiedDate":"2021-10-28"},{"lineNumber":556,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":557,"author":{"gitId":"bobowoo2468"},"content":"Finds specific client(s) based on a particular substring. It will return client(s) if their name contains the substring.","lastModifiedDate":"2021-11-05"},{"lineNumber":558,"author":{"gitId":"bobowoo2468"},"content":"Note that the substring is case-insensitive. In addition, it will return the found clients\u0027 subscribed packages.","lastModifiedDate":"2021-11-05"},{"lineNumber":559,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":560,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":561,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":562,"author":{"gitId":"YipWayne"},"content":"Format: ```find -c [SUBSTRING]```","lastModifiedDate":"2021-10-29"},{"lineNumber":563,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":564,"author":{"gitId":"YipWayne"},"content":"Examples:","lastModifiedDate":"2021-10-28"},{"lineNumber":565,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":566,"author":{"gitId":"YipWayne"},"content":"* ```find -c Adam``` finds clients that contain \u0027Adam\u0027 in their name.","lastModifiedDate":"2021-10-29"},{"lineNumber":567,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":568,"author":{"gitId":"YipWayne"},"content":"An output of this format will be shown:","lastModifiedDate":"2021-10-28"},{"lineNumber":569,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":570,"author":{"gitId":"YipWayne"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":571,"author":{"gitId":"YipWayne"},"content":"This is the client(s) that matches your search","lastModifiedDate":"2021-10-28"},{"lineNumber":572,"author":{"gitId":"YipWayne"},"content":"1. Client ID: c001","lastModifiedDate":"2021-10-28"},{"lineNumber":573,"author":{"gitId":"YipWayne"},"content":"Name: Adam","lastModifiedDate":"2021-10-28"},{"lineNumber":574,"author":{"gitId":"YipWayne"},"content":"Contact Number: 93338333","lastModifiedDate":"2021-10-28"},{"lineNumber":575,"author":{"gitId":"YipWayne"},"content":"Email: adam@mail.com","lastModifiedDate":"2021-10-28"},{"lineNumber":576,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":577,"author":{"gitId":"YipWayne"},"content":"Package ID: p123","lastModifiedDate":"2021-10-29"},{"lineNumber":578,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":579,"author":{"gitId":"YipWayne"},"content":"Client: ","lastModifiedDate":"2021-10-29"},{"lineNumber":580,"author":{"gitId":"YipWayne"},"content":"Client ID: c001","lastModifiedDate":"2021-10-29"},{"lineNumber":581,"author":{"gitId":"YipWayne"},"content":"Name: Adam","lastModifiedDate":"2021-10-29"},{"lineNumber":582,"author":{"gitId":"YipWayne"},"content":"Contact Number: 93338333","lastModifiedDate":"2021-10-29"},{"lineNumber":583,"author":{"gitId":"YipWayne"},"content":"Email: adam@mail.com","lastModifiedDate":"2021-10-29"},{"lineNumber":584,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":585,"author":{"gitId":"YipWayne"},"content":"Tour: ","lastModifiedDate":"2021-10-29"},{"lineNumber":586,"author":{"gitId":"YipWayne"},"content":"Name: australiaromance","lastModifiedDate":"2021-10-29"},{"lineNumber":587,"author":{"gitId":"YipWayne"},"content":"Code: aus1369","lastModifiedDate":"2021-10-29"},{"lineNumber":588,"author":{"gitId":"YipWayne"},"content":"Price per pax: $1300.00","lastModifiedDate":"2021-10-29"},{"lineNumber":589,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":590,"author":{"gitId":"YipWayne"},"content":"Flight: ","lastModifiedDate":"2021-10-29"},{"lineNumber":591,"author":{"gitId":"YipWayne"},"content":"Flight ID: MSIA-KOR1","lastModifiedDate":"2021-10-29"},{"lineNumber":592,"author":{"gitId":"YipWayne"},"content":"Departure Flight: MSIA, 29/10/21 12:00","lastModifiedDate":"2021-10-29"},{"lineNumber":593,"author":{"gitId":"YipWayne"},"content":"Return Flight: KOR, 24/6/21 02:00","lastModifiedDate":"2021-10-29"},{"lineNumber":594,"author":{"gitId":"YipWayne"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":595,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":596,"author":{"gitId":"bobowoo2468"},"content":"In addition, ```find -c ad``` will yield the same results, since \"ad\" is contained in \"Adam\".","lastModifiedDate":"2021-11-05"},{"lineNumber":597,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":598,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":599,"author":{"gitId":"YipWayne"},"content":"### Find tour / flight","lastModifiedDate":"2021-11-02"},{"lineNumber":600,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":601,"author":{"gitId":"YipWayne"},"content":"Finds a specific entry based on a particular code. In addition, for tours and flights, it will show the names of the","lastModifiedDate":"2021-11-02"},{"lineNumber":602,"author":{"gitId":"YipWayne"},"content":"subscriber(s) / passenger(s) who are assigned to them respectively.","lastModifiedDate":"2021-11-02"},{"lineNumber":603,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":604,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":605,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":606,"author":{"gitId":"YipWayne"},"content":"Format: ```find [DATA_TYPE] [ID]```","lastModifiedDate":"2021-11-03"},{"lineNumber":607,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":608,"author":{"gitId":"YipWayne"},"content":"Examples:","lastModifiedDate":"2021-10-28"},{"lineNumber":609,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":610,"author":{"gitId":"bobowoo2468"},"content":"* ```find -t JPN``` finds a particular tour with code \u0027JPN\u0027. It also shows the clients who are subscribed to said tour.","lastModifiedDate":"2021-10-29"},{"lineNumber":611,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":612,"author":{"gitId":"YipWayne"},"content":"An output of this format will be shown:","lastModifiedDate":"2021-10-28"},{"lineNumber":613,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":614,"author":{"gitId":"YipWayne"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":615,"author":{"gitId":"YipWayne"},"content":"This is the tour that matches your search","lastModifiedDate":"2021-10-28"},{"lineNumber":616,"author":{"gitId":"YipWayne"},"content":"Name: Japan Basic Tour","lastModifiedDate":"2021-10-28"},{"lineNumber":617,"author":{"gitId":"YipWayne"},"content":"Code: JPN","lastModifiedDate":"2021-10-28"},{"lineNumber":618,"author":{"gitId":"YipWayne"},"content":"Price per pax: $1500.00","lastModifiedDate":"2021-10-28"},{"lineNumber":619,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":620,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":621,"author":{"gitId":"YipWayne"},"content":"Subscribed Clients:","lastModifiedDate":"2021-10-28"},{"lineNumber":622,"author":{"gitId":"YipWayne"},"content":"Adam","lastModifiedDate":"2021-10-28"},{"lineNumber":623,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":624,"author":{"gitId":"YipWayne"},"content":"Total Subscribed Clients: 1","lastModifiedDate":"2021-10-28"},{"lineNumber":625,"author":{"gitId":"YipWayne"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":626,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":627,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":628,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":629,"author":{"gitId":"bobowoo2468"},"content":"* ```find -f SQ-JPN``` finds a particular flight with code \u0027SQ-JPN\u0027. It also shows the clients who are passengers to","lastModifiedDate":"2021-10-29"},{"lineNumber":630,"author":{"gitId":"bobowoo2468"},"content":"  said flight.","lastModifiedDate":"2021-10-29"},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":632,"author":{"gitId":"YipWayne"},"content":"An output of this format will be shown:","lastModifiedDate":"2021-10-28"},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":634,"author":{"gitId":"YipWayne"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":635,"author":{"gitId":"YipWayne"},"content":"This is the flight that matches your search","lastModifiedDate":"2021-10-28"},{"lineNumber":636,"author":{"gitId":"YipWayne"},"content":"Flight ID: SQ-JPN","lastModifiedDate":"2021-10-28"},{"lineNumber":637,"author":{"gitId":"YipWayne"},"content":"Departure Flight: JPN, 20/10/2021 18:00","lastModifiedDate":"2021-10-28"},{"lineNumber":638,"author":{"gitId":"YipWayne"},"content":"Return Flight: SG, 21/10/2021 03:00","lastModifiedDate":"2021-10-28"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":641,"author":{"gitId":"YipWayne"},"content":"Passengers:","lastModifiedDate":"2021-11-02"},{"lineNumber":642,"author":{"gitId":"YipWayne"},"content":"Betty","lastModifiedDate":"2021-11-02"},{"lineNumber":643,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":644,"author":{"gitId":"YipWayne"},"content":"Total Passengers: 1","lastModifiedDate":"2021-11-02"},{"lineNumber":645,"author":{"gitId":"YipWayne"},"content":"```","lastModifiedDate":"2021-11-02"},{"lineNumber":646,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":647,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":648,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":649,"author":{"gitId":"bobowoo2468"},"content":"[**Return to Table of Contents**](#table-of-contents)","lastModifiedDate":"2021-11-05"},{"lineNumber":650,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":651,"author":{"gitId":"YipWayne"},"content":"## :chart_with_upwards_trend: Sorting data types: ```sort```","lastModifiedDate":"2021-11-02"},{"lineNumber":652,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":653,"author":{"gitId":"bobowoo2468"},"content":"Sort a specific data type based on a particular ```[FILTER]```. It will return all client(s) in ascending alphabetical","lastModifiedDate":"2021-11-05"},{"lineNumber":654,"author":{"gitId":"bobowoo2468"},"content":"order. the possible values of ```[FILTER]``` varies between data types.","lastModifiedDate":"2021-11-05"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":656,"author":{"gitId":"YipWayne"},"content":"Format: ```sort [DATA_TYPE] [FILTER]```","lastModifiedDate":"2021-11-02"},{"lineNumber":657,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":658,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":660,"author":{"gitId":"YipWayne"},"content":"### Sort client","lastModifiedDate":"2021-11-02"},{"lineNumber":661,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":662,"author":{"gitId":"YipWayne"},"content":"The possible values of ```[FILTER]``` are:","lastModifiedDate":"2021-11-02"},{"lineNumber":663,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":664,"author":{"gitId":"bobowoo2468"},"content":"* ```/n``` to sort by client name","lastModifiedDate":"2021-11-05"},{"lineNumber":665,"author":{"gitId":"bobowoo2468"},"content":"* ```/id``` to sort by client id","lastModifiedDate":"2021-11-05"},{"lineNumber":666,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":667,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":668,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":669,"author":{"gitId":"Demonshaha"},"content":"Examples:","lastModifiedDate":"2021-10-29"},{"lineNumber":670,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":671,"author":{"gitId":"bobowoo2468"},"content":"* ```sort -c /n``` sorts the clients by client name alphabetically.","lastModifiedDate":"2021-11-05"},{"lineNumber":672,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":673,"author":{"gitId":"YipWayne"},"content":"An output of this format will be shown:","lastModifiedDate":"2021-11-02"},{"lineNumber":674,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":675,"author":{"gitId":"Demonshaha"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":676,"author":{"gitId":"YipWayne"},"content":"Sorted by client name alphabetically","lastModifiedDate":"2021-11-02"},{"lineNumber":677,"author":{"gitId":"YipWayne"},"content":"1. Client ID: c001","lastModifiedDate":"2021-11-02"},{"lineNumber":678,"author":{"gitId":"YipWayne"},"content":"Name: Bo Tuan","lastModifiedDate":"2021-11-02"},{"lineNumber":679,"author":{"gitId":"YipWayne"},"content":"Contact Number: 93338333","lastModifiedDate":"2021-11-02"},{"lineNumber":680,"author":{"gitId":"YipWayne"},"content":"Email: borangutuan@mail.com","lastModifiedDate":"2021-11-02"},{"lineNumber":681,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":682,"author":{"gitId":"YipWayne"},"content":"2. Client ID: c004","lastModifiedDate":"2021-11-02"},{"lineNumber":683,"author":{"gitId":"YipWayne"},"content":"Name: ChengXu","lastModifiedDate":"2021-11-02"},{"lineNumber":684,"author":{"gitId":"YipWayne"},"content":"Contact Number: 10101010","lastModifiedDate":"2021-11-02"},{"lineNumber":685,"author":{"gitId":"YipWayne"},"content":"Email: demonshaha@mail.com","lastModifiedDate":"2021-11-02"},{"lineNumber":686,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":687,"author":{"gitId":"YipWayne"},"content":"3. Client ID: c002","lastModifiedDate":"2021-11-02"},{"lineNumber":688,"author":{"gitId":"YipWayne"},"content":"Name: Sam","lastModifiedDate":"2021-11-02"},{"lineNumber":689,"author":{"gitId":"YipWayne"},"content":"Contact Number: 12223444","lastModifiedDate":"2021-11-02"},{"lineNumber":690,"author":{"gitId":"YipWayne"},"content":"Email: sam@mail.com","lastModifiedDate":"2021-11-02"},{"lineNumber":691,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":692,"author":{"gitId":"YipWayne"},"content":"4. Client ID: c003","lastModifiedDate":"2021-11-02"},{"lineNumber":693,"author":{"gitId":"YipWayne"},"content":"Name: Wayne","lastModifiedDate":"2021-11-02"},{"lineNumber":694,"author":{"gitId":"YipWayne"},"content":"Contact Number: 56667888","lastModifiedDate":"2021-11-02"},{"lineNumber":695,"author":{"gitId":"YipWayne"},"content":"Email: wendy@mail.com","lastModifiedDate":"2021-11-02"},{"lineNumber":696,"author":{"gitId":"Demonshaha"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":697,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":698,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":699,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":700,"author":{"gitId":"bobowoo2468"},"content":"* ```sort -c /id``` sorts the clients by id alphabetically.","lastModifiedDate":"2021-11-05"},{"lineNumber":701,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":702,"author":{"gitId":"YipWayne"},"content":"An output of this format will be shown:","lastModifiedDate":"2021-11-02"},{"lineNumber":703,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":704,"author":{"gitId":"YipWayne"},"content":"```","lastModifiedDate":"2021-11-02"},{"lineNumber":705,"author":{"gitId":"YipWayne"},"content":"orted by client id alphabetically","lastModifiedDate":"2021-11-02"},{"lineNumber":706,"author":{"gitId":"YipWayne"},"content":"1. Client ID: c001","lastModifiedDate":"2021-11-02"},{"lineNumber":707,"author":{"gitId":"YipWayne"},"content":"Name: Bo Tuan","lastModifiedDate":"2021-11-02"},{"lineNumber":708,"author":{"gitId":"YipWayne"},"content":"Contact Number: 93338333","lastModifiedDate":"2021-11-02"},{"lineNumber":709,"author":{"gitId":"YipWayne"},"content":"Email: borangutuan@mail.com","lastModifiedDate":"2021-11-02"},{"lineNumber":710,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":711,"author":{"gitId":"YipWayne"},"content":"2. Client ID: c002","lastModifiedDate":"2021-11-02"},{"lineNumber":712,"author":{"gitId":"YipWayne"},"content":"Name: Sam","lastModifiedDate":"2021-11-02"},{"lineNumber":713,"author":{"gitId":"YipWayne"},"content":"Contact Number: 12223444","lastModifiedDate":"2021-11-02"},{"lineNumber":714,"author":{"gitId":"YipWayne"},"content":"Email: sam@mail.com","lastModifiedDate":"2021-11-02"},{"lineNumber":715,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":716,"author":{"gitId":"YipWayne"},"content":"3. Client ID: c003","lastModifiedDate":"2021-11-02"},{"lineNumber":717,"author":{"gitId":"YipWayne"},"content":"Name: Wayne","lastModifiedDate":"2021-11-02"},{"lineNumber":718,"author":{"gitId":"YipWayne"},"content":"Contact Number: 56667888","lastModifiedDate":"2021-11-02"},{"lineNumber":719,"author":{"gitId":"YipWayne"},"content":"Email: wendy@mail.com","lastModifiedDate":"2021-11-02"},{"lineNumber":720,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":721,"author":{"gitId":"YipWayne"},"content":"4. Client ID: c004","lastModifiedDate":"2021-11-02"},{"lineNumber":722,"author":{"gitId":"YipWayne"},"content":"Name: ChengXu","lastModifiedDate":"2021-11-02"},{"lineNumber":723,"author":{"gitId":"YipWayne"},"content":"Contact Number: 10101010","lastModifiedDate":"2021-11-02"},{"lineNumber":724,"author":{"gitId":"Demonshaha"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":725,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":726,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":727,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":728,"author":{"gitId":"YipWayne"},"content":"### Sort tour","lastModifiedDate":"2021-11-02"},{"lineNumber":729,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":730,"author":{"gitId":"bobowoo2468"},"content":"Sort tour(s) based on a particular ```[FILTER]```. It will return all tour(s) in ascending alphabetical order.","lastModifiedDate":"2021-11-05"},{"lineNumber":731,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":732,"author":{"gitId":"YipWayne"},"content":"The possible values of ```[FILTER]``` are:","lastModifiedDate":"2021-11-02"},{"lineNumber":733,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":734,"author":{"gitId":"bobowoo2468"},"content":"* ```/id``` to sort by tour id","lastModifiedDate":"2021-11-05"},{"lineNumber":735,"author":{"gitId":"bobowoo2468"},"content":"* ```/p``` to sort by price","lastModifiedDate":"2021-11-05"},{"lineNumber":736,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":737,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":738,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":739,"author":{"gitId":"Demonshaha"},"content":"Examples:","lastModifiedDate":"2021-10-29"},{"lineNumber":740,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":741,"author":{"gitId":"bobowoo2468"},"content":"* ```sort -t /id``` sorts the tours by tour id alphabetically.","lastModifiedDate":"2021-11-05"},{"lineNumber":742,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":743,"author":{"gitId":"YipWayne"},"content":"An output of this format will be shown:","lastModifiedDate":"2021-11-02"},{"lineNumber":744,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":745,"author":{"gitId":"Demonshaha"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":746,"author":{"gitId":"Demonshaha"},"content":"Sorted by tour id alphabetically","lastModifiedDate":"2021-10-29"},{"lineNumber":747,"author":{"gitId":"Demonshaha"},"content":"1. Name: Japan Basic Tour","lastModifiedDate":"2021-10-29"},{"lineNumber":748,"author":{"gitId":"Demonshaha"},"content":"Code: JPN1","lastModifiedDate":"2021-10-29"},{"lineNumber":749,"author":{"gitId":"Demonshaha"},"content":"Price per pax: $1500.00","lastModifiedDate":"2021-10-29"},{"lineNumber":750,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":751,"author":{"gitId":"Demonshaha"},"content":"2. Name: Japan Food Tour","lastModifiedDate":"2021-10-29"},{"lineNumber":752,"author":{"gitId":"Demonshaha"},"content":"Code: JPN2","lastModifiedDate":"2021-10-29"},{"lineNumber":753,"author":{"gitId":"Demonshaha"},"content":"Price per pax: $4000.00","lastModifiedDate":"2021-10-29"},{"lineNumber":754,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":755,"author":{"gitId":"Demonshaha"},"content":"3. Name: Korea Cultural Tour","lastModifiedDate":"2021-10-29"},{"lineNumber":756,"author":{"gitId":"Demonshaha"},"content":"Code: KOR","lastModifiedDate":"2021-10-29"},{"lineNumber":757,"author":{"gitId":"Demonshaha"},"content":"Price per pax: $3000.00","lastModifiedDate":"2021-10-29"},{"lineNumber":758,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":759,"author":{"gitId":"Demonshaha"},"content":"4. Name: Zimbabwe Tour","lastModifiedDate":"2021-10-29"},{"lineNumber":760,"author":{"gitId":"Demonshaha"},"content":"Code: ZWM","lastModifiedDate":"2021-10-29"},{"lineNumber":761,"author":{"gitId":"Demonshaha"},"content":"Price per pax: $1700.00","lastModifiedDate":"2021-10-29"},{"lineNumber":762,"author":{"gitId":"Demonshaha"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":763,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":764,"author":{"gitId":"bobowoo2468"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":765,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":766,"author":{"gitId":"bobowoo2468"},"content":"* ```sort -t /n``` sorts the tours by tour name alphabetically.","lastModifiedDate":"2021-11-05"},{"lineNumber":767,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":768,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-11-05"},{"lineNumber":769,"author":{"gitId":"bobowoo2468"},"content":"Sorted by tour name alphabetically","lastModifiedDate":"2021-11-05"},{"lineNumber":770,"author":{"gitId":"bobowoo2468"},"content":"1. Name: Japan Basic Tour","lastModifiedDate":"2021-11-05"},{"lineNumber":771,"author":{"gitId":"bobowoo2468"},"content":"Code: JPN1","lastModifiedDate":"2021-11-05"},{"lineNumber":772,"author":{"gitId":"bobowoo2468"},"content":"Price per pax: $1500.00","lastModifiedDate":"2021-11-05"},{"lineNumber":773,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":774,"author":{"gitId":"bobowoo2468"},"content":"2. Name: Japan Food Tour","lastModifiedDate":"2021-11-05"},{"lineNumber":775,"author":{"gitId":"bobowoo2468"},"content":"Code: JPN2","lastModifiedDate":"2021-11-05"},{"lineNumber":776,"author":{"gitId":"bobowoo2468"},"content":"Price per pax: $4000.00","lastModifiedDate":"2021-11-05"},{"lineNumber":777,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":778,"author":{"gitId":"bobowoo2468"},"content":"3. Name: Korea Cultural Tour","lastModifiedDate":"2021-11-05"},{"lineNumber":779,"author":{"gitId":"bobowoo2468"},"content":"Code: KOR","lastModifiedDate":"2021-11-05"},{"lineNumber":780,"author":{"gitId":"bobowoo2468"},"content":"Price per pax: $3000.00","lastModifiedDate":"2021-11-05"},{"lineNumber":781,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":782,"author":{"gitId":"bobowoo2468"},"content":"4. Name: Zimbabwe Tour","lastModifiedDate":"2021-11-05"},{"lineNumber":783,"author":{"gitId":"bobowoo2468"},"content":"Code: ZWM","lastModifiedDate":"2021-11-05"},{"lineNumber":784,"author":{"gitId":"bobowoo2468"},"content":"Price per pax: $1700.00","lastModifiedDate":"2021-11-05"},{"lineNumber":785,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-11-05"},{"lineNumber":786,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":787,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":788,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":789,"author":{"gitId":"bobowoo2468"},"content":"* ```sort -t /p``` sorts the tours by price in ascending order.","lastModifiedDate":"2021-11-05"},{"lineNumber":790,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":791,"author":{"gitId":"YipWayne"},"content":"An output of this format will be shown:","lastModifiedDate":"2021-11-02"},{"lineNumber":792,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":793,"author":{"gitId":"Demonshaha"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":794,"author":{"gitId":"Demonshaha"},"content":"Sorted by tour id alphabetically","lastModifiedDate":"2021-10-29"},{"lineNumber":795,"author":{"gitId":"Demonshaha"},"content":"1. Name: Japan Basic Tour","lastModifiedDate":"2021-10-29"},{"lineNumber":796,"author":{"gitId":"Demonshaha"},"content":"Code: JPN1","lastModifiedDate":"2021-10-29"},{"lineNumber":797,"author":{"gitId":"Demonshaha"},"content":"Price per pax: $1500.00","lastModifiedDate":"2021-10-29"},{"lineNumber":798,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":799,"author":{"gitId":"Demonshaha"},"content":"2. Name: Zimbabwe Tour","lastModifiedDate":"2021-10-29"},{"lineNumber":800,"author":{"gitId":"Demonshaha"},"content":"Code: ZWM","lastModifiedDate":"2021-10-29"},{"lineNumber":801,"author":{"gitId":"Demonshaha"},"content":"Price per pax: $1700.00","lastModifiedDate":"2021-10-29"},{"lineNumber":802,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":803,"author":{"gitId":"Demonshaha"},"content":"3. Name: Korea Cultural Tour","lastModifiedDate":"2021-10-29"},{"lineNumber":804,"author":{"gitId":"Demonshaha"},"content":"Code: KOR","lastModifiedDate":"2021-10-29"},{"lineNumber":805,"author":{"gitId":"Demonshaha"},"content":"Price per pax: $3000.00","lastModifiedDate":"2021-10-29"},{"lineNumber":806,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":807,"author":{"gitId":"Demonshaha"},"content":"4. Name: Japan Food Tour","lastModifiedDate":"2021-10-29"},{"lineNumber":808,"author":{"gitId":"Demonshaha"},"content":"Code: JPN2","lastModifiedDate":"2021-10-29"},{"lineNumber":809,"author":{"gitId":"Demonshaha"},"content":"Price per pax: $4000.00","lastModifiedDate":"2021-10-29"},{"lineNumber":810,"author":{"gitId":"Demonshaha"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":811,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":812,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":813,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":814,"author":{"gitId":"YipWayne"},"content":"### Sort flights","lastModifiedDate":"2021-11-02"},{"lineNumber":815,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":816,"author":{"gitId":"bobowoo2468"},"content":"Sort flight(s) based on a particular [FILTER]. It will return all flight(s) in ascending alphabetical order.","lastModifiedDate":"2021-11-05"},{"lineNumber":817,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":818,"author":{"gitId":"YipWayne"},"content":"The possible values of ```[FILTER]``` are:","lastModifiedDate":"2021-11-02"},{"lineNumber":819,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":820,"author":{"gitId":"bobowoo2468"},"content":"* ```/id``` to sort by flight id","lastModifiedDate":"2021-11-05"},{"lineNumber":821,"author":{"gitId":"bobowoo2468"},"content":"* ```/d``` to sort by departing flight times","lastModifiedDate":"2021-11-05"},{"lineNumber":822,"author":{"gitId":"bobowoo2468"},"content":"* ```/r``` to sort by returning flight times","lastModifiedDate":"2021-11-05"},{"lineNumber":823,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":824,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":825,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":826,"author":{"gitId":"Demonshaha"},"content":"Examples:","lastModifiedDate":"2021-10-29"},{"lineNumber":827,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":828,"author":{"gitId":"bobowoo2468"},"content":"* ```sort -f /id``` sorts the flights by flight id alphabetically.","lastModifiedDate":"2021-11-05"},{"lineNumber":829,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":830,"author":{"gitId":"YipWayne"},"content":"An output of this format will be shown:","lastModifiedDate":"2021-11-02"},{"lineNumber":831,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":832,"author":{"gitId":"YipWayne"},"content":"```","lastModifiedDate":"2021-11-02"},{"lineNumber":833,"author":{"gitId":"YipWayne"},"content":"Sorted by departing flight times","lastModifiedDate":"2021-11-02"},{"lineNumber":834,"author":{"gitId":"YipWayne"},"content":"Sorted by flight id alphabetically","lastModifiedDate":"2021-11-02"},{"lineNumber":835,"author":{"gitId":"YipWayne"},"content":"1. Flight ID: SQ-JPN","lastModifiedDate":"2021-11-02"},{"lineNumber":836,"author":{"gitId":"YipWayne"},"content":"Departure Flight: JPN, 20/10/21 18:00","lastModifiedDate":"2021-11-02"},{"lineNumber":837,"author":{"gitId":"YipWayne"},"content":"Return Flight: SG, 21/10/21 03:00","lastModifiedDate":"2021-11-02"},{"lineNumber":838,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":839,"author":{"gitId":"YipWayne"},"content":"2. Flight ID: SQ-KOR","lastModifiedDate":"2021-11-02"},{"lineNumber":840,"author":{"gitId":"YipWayne"},"content":"Departure Flight: KOR, 23/10/21 08:00","lastModifiedDate":"2021-11-02"},{"lineNumber":841,"author":{"gitId":"YipWayne"},"content":"Return Flight: SG, 30/11/21 03:00","lastModifiedDate":"2021-11-02"},{"lineNumber":842,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":843,"author":{"gitId":"YipWayne"},"content":"3. Flight ID: SQ-ZWM","lastModifiedDate":"2021-11-02"},{"lineNumber":844,"author":{"gitId":"YipWayne"},"content":"Departure Flight: ZWM, 5/11/21 09:00","lastModifiedDate":"2021-11-02"},{"lineNumber":845,"author":{"gitId":"YipWayne"},"content":"Return Flight: SG, 7/11/21 15:00","lastModifiedDate":"2021-11-02"},{"lineNumber":846,"author":{"gitId":"Demonshaha"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":847,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":848,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":849,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":850,"author":{"gitId":"bobowoo2468"},"content":"* ```sort -f /d``` sorts the flights by departing returning flight times.","lastModifiedDate":"2021-11-05"},{"lineNumber":851,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":852,"author":{"gitId":"YipWayne"},"content":"An output of this format will be shown:","lastModifiedDate":"2021-11-02"},{"lineNumber":853,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":854,"author":{"gitId":"YipWayne"},"content":"```","lastModifiedDate":"2021-11-02"},{"lineNumber":855,"author":{"gitId":"YipWayne"},"content":"Sorted by departing flight times","lastModifiedDate":"2021-11-02"},{"lineNumber":856,"author":{"gitId":"YipWayne"},"content":"1. Flight ID: SQ-JPN","lastModifiedDate":"2021-11-02"},{"lineNumber":857,"author":{"gitId":"YipWayne"},"content":"Departure Flight: JPN, 20/10/21 18:00","lastModifiedDate":"2021-11-02"},{"lineNumber":858,"author":{"gitId":"YipWayne"},"content":"Return Flight: SG, 21/10/21 03:00","lastModifiedDate":"2021-11-02"},{"lineNumber":859,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":860,"author":{"gitId":"YipWayne"},"content":"2. Flight ID: SQ-KOR","lastModifiedDate":"2021-11-02"},{"lineNumber":861,"author":{"gitId":"YipWayne"},"content":"Departure Flight: KOR, 23/10/21 08:00","lastModifiedDate":"2021-11-02"},{"lineNumber":862,"author":{"gitId":"YipWayne"},"content":"Return Flight: SG, 30/11/21 03:00","lastModifiedDate":"2021-11-02"},{"lineNumber":863,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":864,"author":{"gitId":"YipWayne"},"content":"3. Flight ID: SQ-ZWM","lastModifiedDate":"2021-11-02"},{"lineNumber":865,"author":{"gitId":"YipWayne"},"content":"Departure Flight: ZWM, 5/11/21 09:00","lastModifiedDate":"2021-11-02"},{"lineNumber":866,"author":{"gitId":"YipWayne"},"content":"Return Flight: SG, 7/11/21 15:00","lastModifiedDate":"2021-11-02"},{"lineNumber":867,"author":{"gitId":"Demonshaha"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":868,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":869,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":870,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":871,"author":{"gitId":"bobowoo2468"},"content":"* ```sort -f /r``` sorts the flights by ascending returning flight times.","lastModifiedDate":"2021-11-05"},{"lineNumber":872,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":873,"author":{"gitId":"YipWayne"},"content":"An output of this format will be shown:","lastModifiedDate":"2021-11-02"},{"lineNumber":874,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":875,"author":{"gitId":"Demonshaha"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":876,"author":{"gitId":"YipWayne"},"content":"Sorted by returning flight times","lastModifiedDate":"2021-11-02"},{"lineNumber":877,"author":{"gitId":"YipWayne"},"content":"1. Flight ID: SQ-JPN","lastModifiedDate":"2021-11-02"},{"lineNumber":878,"author":{"gitId":"YipWayne"},"content":"Departure Flight: JPN, 20/10/21 18:00","lastModifiedDate":"2021-11-02"},{"lineNumber":879,"author":{"gitId":"YipWayne"},"content":"Return Flight: SG, 21/10/21 03:00","lastModifiedDate":"2021-11-02"},{"lineNumber":880,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":881,"author":{"gitId":"YipWayne"},"content":"2. Flight ID: SQ-ZWM","lastModifiedDate":"2021-11-02"},{"lineNumber":882,"author":{"gitId":"YipWayne"},"content":"Departure Flight: ZWM, 5/11/21 09:00","lastModifiedDate":"2021-11-02"},{"lineNumber":883,"author":{"gitId":"YipWayne"},"content":"Return Flight: SG, 7/11/21 15:00","lastModifiedDate":"2021-11-02"},{"lineNumber":884,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":885,"author":{"gitId":"YipWayne"},"content":"3. Flight ID: SQ-KOR","lastModifiedDate":"2021-11-02"},{"lineNumber":886,"author":{"gitId":"YipWayne"},"content":"Departure Flight: KOR, 23/10/21 08:00","lastModifiedDate":"2021-11-02"},{"lineNumber":887,"author":{"gitId":"YipWayne"},"content":"Return Flight: SG, 30/11/21 03:00","lastModifiedDate":"2021-11-02"},{"lineNumber":888,"author":{"gitId":"YipWayne"},"content":"```","lastModifiedDate":"2021-11-02"},{"lineNumber":889,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":890,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":891,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":892,"author":{"gitId":"bobowoo2468"},"content":"[**Return to Table of Contents**](#table-of-contents)","lastModifiedDate":"2021-11-05"},{"lineNumber":893,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":894,"author":{"gitId":"YipWayne"},"content":"## Exit application: ```bye```","lastModifiedDate":"2021-11-02"},{"lineNumber":895,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":896,"author":{"gitId":"YipWayne"},"content":"\u003chr\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":897,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":898,"author":{"gitId":"YipWayne"},"content":"Exits the application.","lastModifiedDate":"2021-10-28"},{"lineNumber":899,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":900,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":901,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":902,"author":{"gitId":"YipWayne"},"content":"Format: ```bye```","lastModifiedDate":"2021-10-28"},{"lineNumber":903,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":904,"author":{"gitId":"YipWayne"},"content":"The following output will be shown:","lastModifiedDate":"2021-10-28"},{"lineNumber":905,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":906,"author":{"gitId":"YipWayne"},"content":"```Thanks for using TourPlanner. Goodbye!```","lastModifiedDate":"2021-10-28"},{"lineNumber":907,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":908,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":909,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":910,"author":{"gitId":"bobowoo2468"},"content":"[**Return to Table of Contents**](#table-of-contents)","lastModifiedDate":"2021-11-05"},{"lineNumber":911,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":912,"author":{"gitId":"YipWayne"},"content":"## Saving Data","lastModifiedDate":"2021-11-03"},{"lineNumber":913,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":914,"author":{"gitId":"YipWayne"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":915,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":916,"author":{"gitId":"YipWayne"},"content":"In TourPlanner, all data (clients, tours, flights, client packages) are saved in the hard disk","lastModifiedDate":"2021-11-03"},{"lineNumber":917,"author":{"gitId":"YipWayne"},"content":"\u003cu\u003eONLY\u003c/u\u003e after the user exits the application with the ```bye``` command.","lastModifiedDate":"2021-11-03"},{"lineNumber":918,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":919,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":920,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":921,"author":{"gitId":"YipWayne"},"content":"## **Command Summary**","lastModifiedDate":"2021-11-03"},{"lineNumber":922,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":923,"author":{"gitId":"bobowoo2468"},"content":"\u003chr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":924,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":925,"author":{"gitId":"bobowoo2468"},"content":"### **General Command Information**","lastModifiedDate":"2021-11-05"},{"lineNumber":926,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":927,"author":{"gitId":"YipWayne"},"content":"Command | Format","lastModifiedDate":"2021-11-03"},{"lineNumber":928,"author":{"gitId":"YipWayne"},"content":"------------ | -------------","lastModifiedDate":"2021-11-03"},{"lineNumber":929,"author":{"gitId":"YipWayne"},"content":"```help``` | ```help```","lastModifiedDate":"2021-11-03"},{"lineNumber":930,"author":{"gitId":"YipWayne"},"content":"```add``` | ```add [DATA_TYPE] [ID] [DATA_FIELDS] ```","lastModifiedDate":"2021-11-03"},{"lineNumber":931,"author":{"gitId":"YipWayne"},"content":"```cut``` | ```cut [DATA_TYPE] [ID]```","lastModifiedDate":"2021-11-03"},{"lineNumber":932,"author":{"gitId":"YipWayne"},"content":"```list``` | ```list [DATA_TYPE]```","lastModifiedDate":"2021-11-03"},{"lineNumber":933,"author":{"gitId":"YipWayne"},"content":"```find``` | Clients: ```find [DATA_TYPE] [SUBSTRING]``` \u003cbr\u003e Tour / Flights: ```find [DATA_TYPE] [ID]```","lastModifiedDate":"2021-11-03"},{"lineNumber":934,"author":{"gitId":"YipWayne"},"content":"```sort``` | ```sort [DATA_TYPE] [FILTER]```","lastModifiedDate":"2021-11-03"},{"lineNumber":935,"author":{"gitId":"YipWayne"},"content":"```bye``` | ```bye```","lastModifiedDate":"2021-11-03"},{"lineNumber":936,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":937,"author":{"gitId":"bobowoo2468"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":938,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":939,"author":{"gitId":"bobowoo2468"},"content":"### **Supporting Command Information**","lastModifiedDate":"2021-11-05"},{"lineNumber":940,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":941,"author":{"gitId":"bobowoo2468"},"content":"Command | Data Type | Data Fields","lastModifiedDate":"2021-11-05"},{"lineNumber":942,"author":{"gitId":"bobowoo2468"},"content":"------------ | ------------- |-------------","lastModifiedDate":"2021-11-05"},{"lineNumber":943,"author":{"gitId":"bobowoo2468"},"content":"```help``` | - | -","lastModifiedDate":"2021-11-05"},{"lineNumber":944,"author":{"gitId":"bobowoo2468"},"content":"```add``` Clients | `-c` | `/id`, `/n`, `/cn`, `/m`","lastModifiedDate":"2021-11-05"},{"lineNumber":945,"author":{"gitId":"bobowoo2468"},"content":"```add``` Flights | `-f` |`/id`, `/d`, `/r`, `/dd`, `/rd`","lastModifiedDate":"2021-11-05"},{"lineNumber":946,"author":{"gitId":"bobowoo2468"},"content":"```add``` Tours   | `-t` |`/id`, `/n`, `/p`","lastModifiedDate":"2021-11-05"},{"lineNumber":947,"author":{"gitId":"bobowoo2468"},"content":"```add``` Packages   | `-p` |`/id`, `/c`, `/f`, `/t`","lastModifiedDate":"2021-11-05"},{"lineNumber":948,"author":{"gitId":"bobowoo2468"},"content":"```cut``` | `-c` \u003cbr\u003e `-f` \u003cbr\u003e `-t` \u003cbr\u003e `-p`| -","lastModifiedDate":"2021-11-05"},{"lineNumber":949,"author":{"gitId":"bobowoo2468"},"content":"```list``` | `-c` \u003cbr\u003e `-f` \u003cbr\u003e `-t` \u003cbr\u003e `-p` | -","lastModifiedDate":"2021-11-05"},{"lineNumber":950,"author":{"gitId":"bobowoo2468"},"content":"```find``` | `-c` \u003cbr\u003e `-f` \u003cbr\u003e `-t` | -","lastModifiedDate":"2021-11-05"},{"lineNumber":951,"author":{"gitId":"bobowoo2468"},"content":"```sort``` Clients | `-c` | `/id`, `/n`","lastModifiedDate":"2021-11-05"},{"lineNumber":952,"author":{"gitId":"bobowoo2468"},"content":"```sort``` Flights | `-f` |`/id`,`/d`, `/r`","lastModifiedDate":"2021-11-05"},{"lineNumber":953,"author":{"gitId":"bobowoo2468"},"content":"```sort``` Tours | `-t` |`/id`,`/n`, `/p`","lastModifiedDate":"2021-11-05"},{"lineNumber":954,"author":{"gitId":"bobowoo2468"},"content":"```bye``` | - | -","lastModifiedDate":"2021-11-05"},{"lineNumber":955,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":956,"author":{"gitId":"bobowoo2468"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":957,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":958,"author":{"gitId":"bobowoo2468"},"content":"[**Return to Table of Contents**](#table-of-contents)","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"YipWayne":356,"Demonshaha":83,"-":35,"bobowoo2468":373,"swongts":111}},{"path":"docs/team/Demonshaha.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Demonshaha"},"content":"# Zhou Chengxu - Project Portfolio Page","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"Demonshaha"},"content":"## Overview - TourPlanner","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"Demonshaha"},"content":"TourPlanner is a data management solution, for tour agencies. The user interacts with it using a CLI, to update a","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"Demonshaha"},"content":"database with flights, tours, clients, and combine them into packages.","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"Demonshaha"},"content":"It is written in Java, and has about 7kLoC.","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"Demonshaha"},"content":"Given below are the contributions to the project.","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"Demonshaha"},"content":"* Feature: **Storage** - Added 4 class files to let the program be able to load and save the files to data folder(Because my vpn cannot work, bobowoo2468 helped","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"Demonshaha"},"content":"      me to push)","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"Demonshaha"},"content":"      ","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"Demonshaha"},"content":"    * What it does:  Allows the program to load the clients, tours, flights, and clientpackages that user added before, and save the data they add every time.","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"Demonshaha"},"content":"    * Justification: This function is essential, because Touragencies need to save all the data they have added in, without the storage function, this program","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"Demonshaha"},"content":"      cannot save the data users have added every time the user close the program, all of the data will disappear.","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"Demonshaha"},"content":"      ","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"Demonshaha"},"content":"    * Highlight: In order to make the program convinient for the user, the clients, tours, flights, clientpakcages will be stored to 4 different files in data folder.","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"Demonshaha"},"content":"* Feature: **Add\u0027s exception** --Add exceptions to add commantd which help to check human error","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"Demonshaha"},"content":"  * What it does: Help to check if the information input by the user is correct. ","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"Demonshaha"},"content":"    Including:","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"Demonshaha"},"content":"    1. Email checking","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"Demonshaha"},"content":"    2. Contact number checking","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"Demonshaha"},"content":"    3. Price checking","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"Demonshaha"},"content":"    4. Departure date and return date checking","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"Demonshaha"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"Demonshaha"},"content":"  * Justification: This can help to check human errors which can improve the effciency of users and this is one of the advantage of our program. For example, if the employee","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"Demonshaha"},"content":"    of the touragencies input the departure time and return time reversely, the program can warning him or her.","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"Demonshaha"},"content":"    ","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"Demonshaha"},"content":"  * Highlights: For date checking, it implements java.data class to check the if the departure date and return dates are illegal and if they are reverse.","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"Demonshaha"},"content":"* Task: **Storage** methods and code structure","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"Demonshaha"},"content":"* Task: **Modify clientlist, tourlist, fightlist, clientpackagelist classes** in order to implement storage","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"Demonshaha"},"content":"* Task: **Modify** toString methods","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"Demonshaha"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"Demonshaha"},"content":"Code contributed: : [Reposense link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003ddemonshaha\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dDemonshaha\u0026tabRepo\u003dAY2122S1-CS2113T-F11-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"Demonshaha"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"Demonshaha"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"Demonshaha"},"content":"* Documentation","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"Demonshaha"},"content":"    * User Guide:","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"Demonshaha"},"content":"        * Added sort commands guideline","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"Demonshaha"},"content":"    * Developers Guide:","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"Demonshaha"},"content":"        * Added implementation details for Storage","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"Demonshaha"},"content":"* Coummunity:","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"bobowoo2468"},"content":"  * Reviewed and approved PRs frequently","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"Demonshaha"},"content":"  * Give suggestions on codes.","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"Demonshaha":54,"bobowoo2468":1}},{"path":"docs/team/YipWayne.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"# Yip Wayne - Project Portfolio Page","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"## Overview - TourPlanner","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"YipWayne"},"content":"TourPlanner is a data management solution, for tour agencies. The user interacts with it using a CLI, to update a","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"database with flights, tours, clients, and combine them into packages.","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"YipWayne"},"content":"It is written in Java, and has about 7 kLoC.","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"YipWayne"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"* Feature: **LIST** - Added the ability to **list** clients, flights, tours and client in the database.","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"    * What it does: Allows the user to list a certain data type by typing into the CLI input, in the format of:","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"YipWayne"},"content":"      `list [DATA_TYPE]`","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"    * Justification: This is the functionality that is core to the program, as it allows the travel agency employee to view all the clients, ","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"YipWayne"},"content":"      tours, flights and client packages at a quick glance.","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"YipWayne"},"content":"    * Highlights: The list feature required the elements of a certain data type to be printed incrementally. Since each data","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"YipWayne"},"content":"      type has its own attributes, a custom method to print each type of data had to be used.","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"YipWayne"},"content":"* Feature: **FIND** - Added the ability to **find** clients, flights, tours and client in the database.","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"YipWayne"},"content":"    * What it does: Allows the user to find a certain data type by typing into the CLI input, in the format of:","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"YipWayne"},"content":"      `list [DATA_TYPE] [SUBSTRING]` for clients, and `list [DATA_TYPE] [ID]` for the other tours and flights.","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"YipWayne"},"content":"    * Justification: This is the functionality that is core to the program. In the event that there is a lot of data within the database, this ","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"YipWayne"},"content":"      function allows the travel agency employee to quickly find the specific entry that they are looking for.","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"YipWayne"},"content":"    * Highlights: The find feature was different between the data types. Hence, separate implementations were required.","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"YipWayne"},"content":"    * Highlights: For finding tours and flights, it also printed out the relevant clients that subscribed to them. This implementation","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"YipWayne"},"content":"      was challenging as required interaction with other object classes, such as the ClientPackage class.","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"YipWayne"},"content":"* Task: General implementation of Ui class","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"YipWayne"},"content":"* Task: General implementation of Tour and TourList classes","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"YipWayne"},"content":"* Task: Implementation of list and find-related Parser exception functions","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"YipWayne"},"content":"* Code contributed: : [Reposense link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dYipWayne\u0026tabRepo\u003dAY2122S1-CS2113T-F11-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026reverseAuthorshipOrder\u003dtrue)","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"YipWayne"},"content":"* Project Management:","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"YipWayne"},"content":"    * Created general idea and structure for this project.","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"YipWayne"},"content":"    * Created issues and milestones for Milestone v1.0 and some of 2.0","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"YipWayne"},"content":"    * Approved and reviewed PRs frequently.","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"YipWayne"},"content":"* Documentation:","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"YipWayne"},"content":"    * User Guide:","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"YipWayne"},"content":"        * Added documentation for the features: `list` amd `find`","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"YipWayne"},"content":"        * Added `Quick Start`  and `Introduction to Data Types` ","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"YipWayne"},"content":"        * Added `Command summary` table for UG","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"YipWayne"},"content":"        * Did clean-up, make sure structure was consistent among members","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"YipWayne"},"content":"    * Developers Guide:","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"YipWayne"},"content":"        * Added Table of Contents (TOC) and navigation for DG","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"YipWayne"},"content":"        * Added `Architecture` section along with relevant UML diagrams","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"YipWayne"},"content":"        * Added documentation for the feature `find`, along with relevant UML diagrams","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"YipWayne"},"content":"        * Addeed `Getting Started` and `User Stories` section","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"YipWayne"},"content":"* Community:","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"YipWayne"},"content":"    * Reviewed and approved PRs frequently","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"YipWayne"},"content":"    * Made suggestions for the other teams in the class during tutorial","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"YipWayne":64}},{"path":"docs/team/bobowoo2468.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"# Woo Bo Tuan - Project Portfolio Page","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"## Overview - TourPlanner","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"TourPlanner is a data management solution, for tour agencies. The user interacts with it using a CLI, to update a","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"database with flights, tours, clients, and combine them into packages.","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"It is written in Java, and has about 7 kLoC.","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"Given below are the contributions to the project.","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"* Feature: **ADD** - Added the ability to **add** clients, flights, tours into the database.","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"    * What it does: Allows the user to add by typing into the CLI input, in the format of:","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"      `add -[IDENTIFIER] /PREFIX1 DATA1 /PREFIX2 DATA2 ...`","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"    * Justification: This is the functionality that is core to the program, as it allows the input of data into","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"      database. As such, many exceptions have to be handled, along with catchers for erroneous inputs.","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"    * Highlights: The add feature implemented (including parsing of user input) allows for greater flexibility during","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"      input. The prefixes can be arranged in any order during adding, and additional white spaces in the command will be","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"      trimmed.","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"    * Highlights: The exception handling for add is rather extensive. First, erroneous inputs such as missing","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"      identifier, missing prefixes (hence data fields), duplicated prefixes, missing data fields will all be flagged as","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"      an error. Erroneous or illogical entries will either be flagged out as a **WARNING** or an **ERROR**, depending on","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"      its severity. ","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"* Feature: **SORT** - Added the ability to **sort** clients, flights, tours in the database.","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"    * What it does: Allows the user to sort, in the format of:","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"      `sort -[IDENTIFIER] /FILTER`","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"    * Justification: This is an additional functionality for tour agency planners to be able to perform meaningful","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"      operations with data. For example, sorting by ascending price can allow tour agency planners to have a","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"      side-by-side comparison of the budget of tours, from the least expensive to the most expensive tours.","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"    * Highlights: Sorting is mostly implemented with using the natural sorting of String or Float. Sorting for local date-time requires ","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"      the need for a defined `Comparator`. The program has allowed for sorting regardless of duplicates in the data.","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"* Task: General **Parser** methods and code structure","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"* Task: **Refactor code** to follow OOP guidelines","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"* Task: **Linking Storage Class** to Main, and ObjectLists","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"* Code","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"  contributed: [Reposense link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dbobowoo2468\u0026tabRepo\u003dAY2122S1-CS2113T-F11-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026reverseAuthorshipOrder\u003dtrue)","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"* Project Management:","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"bobowoo2468"},"content":"    * Managed releases for v2.0 on GitHub","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"bobowoo2468"},"content":"    * Created the *developers* team and *team repo*, including settings for GitHub workflow","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"bobowoo2468"},"content":"    * Set-up GHPages for `docs` (containing UG and DG)","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"bobowoo2468"},"content":"    * Managed *issues*, *assigned* work and *tracked* completion for Milestone v2.0","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"    * Approved and reviewed PRs frequently.","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"bobowoo2468"},"content":"* Documentation:","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"bobowoo2468"},"content":"    * User Guide:","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"bobowoo2468"},"content":"        * Added Table of Contents (TOC) and navigation for UG","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"bobowoo2468"},"content":"        * Added documentation for the features: `add`","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"bobowoo2468"},"content":"        * Added `How-to-use` for UG","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"bobowoo2468"},"content":"        * Added `Supporting Command Information` table for UG","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"bobowoo2468"},"content":"    * Developers Guide:","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"bobowoo2468"},"content":"        * Added implementation details for the `add` feature","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"bobowoo2468"},"content":"        * Added implementation details for the `Parser` feature","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"bobowoo2468"},"content":"* Community:","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"bobowoo2468"},"content":"  * Reviewed and approved PRs frequently","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"bobowoo2468"},"content":"  * Made suggestions for the other teams in the class during tutorial","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"bobowoo2468":66}},{"path":"docs/team/swongts.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"# Samantha Wong - Project Portfolio Page","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"## Overview: TourPlanner","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"**TourPlanner** is a desktop application meant for employees of travel agencies. ","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"Its main purpose is to manage clients, flights, accommodations and client packages data, optimized for use via a Command Line Interface (CLI).","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"It is written in Java, and has about 7 kLoC.","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"### Summary of Contributions","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"**Code contributed**: [RepoSense Link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003dF11\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-25\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dswongts\u0026tabRepo\u003dAY2122S1-CS2113T-F11-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"**Enhancements implemented**:","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"* `ClientPackage` and `ClientPackageList` classes","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"  * What it does: Stores the related `Client`, `Flight` and `Tour` into one `ClientPackage`.","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"  * Justification: This feature is crucial to TourPlanner and serves as a link between these classes.","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"  * Highlights: To make it easier to use and more efficient for commands like `find` and `cut` to use,","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"`ClientPackage` stores the actual `Client`, `Flight` and `Tour` objects instead of simply using a reference String id.","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"  * Highlights: Created methods to get an ArrayList of `ClientPackage` based on the `Client` / `Flight` / `Tour` which ","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"were used across a few features.","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"* `AddClientPackageCommand`","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"  * What it does: Allows user to create the `ClientPackage` using the client, flight and tour id.","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"  * Highlights: The command searches for the ids with the respective `ObjectList` to find the ","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"`Object` (`Client`, `Tour`, `Flight`) to store into `ClientPackage`.","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"* `CutCommand` for `Client`, `Tour`, `Flight` and `ClientPackage`","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"  * What it does: Deletes the specific `Object` from its respective `ObjectList`.","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"  * Justification: Crucial feature for the application to be functional.","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"  * Highlights: When the `Client` / `Tour` / `Flight` is deleted, the corresponding `ClientPackage` which contains the specific","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"`Object` must also be deleted from the `ClientPackageList`. This is so that it wouldn\u0027t be incoherent that the `ClientPackage`","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"contains an `Object` which no longer exists.","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"swongts"},"content":"* `HelpCommand`","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"  * What it does: Lists all available commands.","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"  * Justification: Allows user to have an overview of how to use the commands conveniently.","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"**Contributions to documentation**:","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"* User guide:","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"  * Added `cut` feature","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"* Developer guide:","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"  * Added diagrams and explanations for `cut`, `sort`, `list` feature and `Command` class","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"swongts"},"content":"  * Added Appendix D and E","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"swongts"},"content":"**Contributions to team-based tasks**:","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"swongts"},"content":"* Manage issue tracker: In charge of issue tracker for `v2.1`, helped with labels for `v1.0`.","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"swongts"},"content":"* Release management: In charge of release for `v1.0`.","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"swongts"},"content":"* General code enhancement: Helped look out for code quality, and refactor other\u0027s codes to ensure SLAP ","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"swongts"},"content":"(e.g. `TourPlanner`).","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"swongts"},"content":"**Review/mentoring contributions**: ","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"swongts"},"content":"* Major bug fixes to ClientPackageStorage as the client packages weren\u0027t loading properly from storage.","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"swongts"},"content":"* Frequently reviewed and approved pull requests.","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"swongts"},"content":"* Helped to proof-read Developer\u0027s Guide and link everyone\u0027s parts to ensure it sounds coherent.","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"swongts":53}},{"path":"src/main/java/seedu/duke/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.commands.ByeCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"import seedu.duke.commands.HelpCommand;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.commands.clientpackages.AddClientPackageCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"import seedu.duke.commands.clientpackages.CutClientPackageCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.commands.clientpackages.ListClientPackageCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.commands.clients.AddClientCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"import seedu.duke.commands.clients.CutClientCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.commands.clients.FindClientCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"import seedu.duke.commands.clients.ListClientCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"import seedu.duke.commands.clients.SortClientCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.commands.flights.AddFlightCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"import seedu.duke.commands.flights.CutFlightCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.commands.flights.FindFlightCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.commands.flights.ListFlightCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.commands.flights.SortFlightCommand;","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.commands.tours.AddTourCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.commands.tours.CutTourCommand;","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.commands.tours.FindTourCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.commands.tours.ListTourCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.commands.tours.SortTourCommand;","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.Client;","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.Flight;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.Tour;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"import java.util.TreeMap;","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":" * Sense-makes the inputs given and distributes the information to other parts of the program.","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"public class Parser {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"    private static final String CLIENT_IDENTIFIER \u003d \"-c\";","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"    private static final String TOUR_IDENTIFIER \u003d \"-t\";","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"    private static final String FLIGHT_IDENTIFIER \u003d \"-f\";","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"    private static final String PACKAGE_IDENTIFIER \u003d \"-p\";","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"bobowoo2468"},"content":"    private static final String PACKAGE_CLIENT_PREFIX \u003d \"/c\";","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"bobowoo2468"},"content":"    private static final String PACKAGE_TOUR_PREFIX \u003d \"/t\";","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"bobowoo2468"},"content":"    private static final String PACKAGE_FLIGHT_PREFIX \u003d \"/f\";","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"    private static final String FLIGHT_DEPARTURE_PREFIX \u003d \"/d\";","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"bobowoo2468"},"content":"    private static final String FLIGHT_RETURN_PREFIX \u003d \"/r\";","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"bobowoo2468"},"content":"    private static final String FLIGHT_DEPARTURE_DATE_PREFIX \u003d \"/dd\";","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"bobowoo2468"},"content":"    private static final String FLIGHT_RETURN_DATE_PREFIX \u003d \"/rd\";","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"bobowoo2468"},"content":"    public static final String TOUR_NAME_PREFIX \u003d \"/n\";","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"bobowoo2468"},"content":"    public static final String TOUR_PRICE_PREFIX \u003d \"/p\";","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"bobowoo2468"},"content":"    public static final String CLIENT_NAME_PREFIX \u003d \"/n\";","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"bobowoo2468"},"content":"    public static final String CLIENT_CONTACT_NUMBER_PREFIX \u003d \"/cn\";","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"bobowoo2468"},"content":"    public static final String CLIENT_EMAIL_PREFIX \u003d \"/m\";","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"bobowoo2468"},"content":"    public static final String ERROR_INVALID_INPUT \u003d \"ERROR: TourPlanner cannot understand the command! \"","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"swongts"},"content":"            + \"Please enter a valid command.\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"swongts"},"content":"            + \"Type \u0027help\u0027 to view a list of commands available for use.\";","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"bobowoo2468"},"content":"    public static final String ERROR_MISSING_IDENTIFIER \u003d","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"bobowoo2468"},"content":"            \"ERROR: Missing/wrong command filter used! Please enter a command with this format: COMMAND -FILTER DATA \\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"bobowoo2468"},"content":"                    + \"Example: find -t TOUR_ID\";","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"bobowoo2468"},"content":"    public static final String ERROR_DUPLICATE_PREFIXES \u003d \"ERROR: TourPlanner has detected duplicate prefixes!\";","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"bobowoo2468"},"content":"    public static final String ERROR_MISSING_PREFIXES","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"bobowoo2468"},"content":"            \u003d \"ERROR: TourPlanner has detected missing/wrong prefixes! Did you miss out some fields?\";","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"swongts"},"content":"    public static final String ERROR_MISSING_ID \u003d \"Missing id that you wish to cut from! Please try again.\";","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"bobowoo2468"},"content":"    public static final String ERROR_MISSING_FIELDS \u003d \"ERROR: TourPlanner has detected empty fields! \"","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"bobowoo2468"},"content":"            + \"Please enter all fields!\";","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"bobowoo2468"},"content":"    public static final String ERROR_FLIGHT_TIME_FORMAT \u003d \"ERROR: TourPlanner detected wrong date-time entry \"","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"bobowoo2468"},"content":"            + \"formatting! \\n Please input your date-times with the following format: d/M/yy HH:mm\";","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"bobowoo2468"},"content":"    public static final String ERROR_FLIGHT_TIME_INVERT \u003d \"ERROR: TourPlanner detected erroneous flight time entry! \\n\";","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"bobowoo2468"},"content":"    public static final String ERROR_PRICE_FORMAT \u003d \"ERROR: TourPlanner has detected erroneous price entry! \"","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"bobowoo2468"},"content":"            + \"Only include numbers (includes decimal)/one decimal point!\";","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"bobowoo2468"},"content":"    public static final String WARNING_EXTRA_INPUT \u003d \"WARNING: Extra input! Refrain from doing so.\";","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"bobowoo2468"},"content":"    public static final String WARNING_EMAIL_FORMAT_WRONG \u003d \"WARNING: TourPlanner has detected possible \"","lastModifiedDate":"2021-11-06"},{"lineNumber":82,"author":{"gitId":"bobowoo2468"},"content":"            + \"erroneous email! \\n\";","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"bobowoo2468"},"content":"    public static final String WARNING_CONTACT_NUMBER_WRONG \u003d","lastModifiedDate":"2021-11-06"},{"lineNumber":84,"author":{"gitId":"bobowoo2468"},"content":"            \"WARNING: TourPlanner has detected possible erroneous contact number! (characters other than numbers) \\n\";","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"bobowoo2468"},"content":"    public static final String WARNING_SHORT_CONTACT_NUMBER \u003d","lastModifiedDate":"2021-11-06"},{"lineNumber":86,"author":{"gitId":"bobowoo2468"},"content":"            \"WARNING: TourPlanner detected that the given contact number is too short (\u003c 8)! \\n\";","lastModifiedDate":"2021-11-06"},{"lineNumber":87,"author":{"gitId":"bobowoo2468"},"content":"    private static final String WARNING_LONG_CONTACT_NUMBER \u003d","lastModifiedDate":"2021-11-06"},{"lineNumber":88,"author":{"gitId":"bobowoo2468"},"content":"            \"WARNING: TourPlanner detected that the given contact number is too long (\u003e 8)! \\n\";","lastModifiedDate":"2021-11-06"},{"lineNumber":89,"author":{"gitId":"bobowoo2468"},"content":"    private static final String WARNING_PRICE_TOO_MANY_DECIMAL \u003d \"WARNING: TourPlanner has detected \"","lastModifiedDate":"2021-11-06"},{"lineNumber":90,"author":{"gitId":"bobowoo2468"},"content":"            + \"erroneous price entry! Price has too many decimal places!\";","lastModifiedDate":"2021-11-06"},{"lineNumber":91,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":92,"author":{"gitId":"bobowoo2468"},"content":"    public static final int IDENTIFIER_INDEX \u003d 0;","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"bobowoo2468"},"content":"    public static final int ARGS_INDEX \u003d 1;","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"bobowoo2468"},"content":"    public static final int COMMAND_INDEX \u003d 0;","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"bobowoo2468"},"content":"    public static final int PARAMS_INDEX \u003d 1;","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"bobowoo2468"},"content":"    public static final int MAX_VALUE_ARRAY_SIZE \u003d 5;","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":98,"author":{"gitId":"bobowoo2468"},"content":"    //Client has three prefixes: /n, /cn, /m","lastModifiedDate":"2021-11-08"},{"lineNumber":99,"author":{"gitId":"bobowoo2468"},"content":"    private static final int CLIENT_PREFIX_NUM \u003d 4;","lastModifiedDate":"2021-11-06"},{"lineNumber":100,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":101,"author":{"gitId":"bobowoo2468"},"content":"    //Flight has four prefixes: /d, /r, /dd, /rd","lastModifiedDate":"2021-11-08"},{"lineNumber":102,"author":{"gitId":"bobowoo2468"},"content":"    private static final int FLIGHT_PREFIX_NUM \u003d 5;","lastModifiedDate":"2021-11-06"},{"lineNumber":103,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":104,"author":{"gitId":"bobowoo2468"},"content":"    //Tour has three prefixes: /n, /p","lastModifiedDate":"2021-11-08"},{"lineNumber":105,"author":{"gitId":"bobowoo2468"},"content":"    private static final int TOUR_PREFIX_NUM \u003d 3;","lastModifiedDate":"2021-11-06"},{"lineNumber":106,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":107,"author":{"gitId":"bobowoo2468"},"content":"    // Package has four prefixes: /c, /f, /t","lastModifiedDate":"2021-11-08"},{"lineNumber":108,"author":{"gitId":"bobowoo2468"},"content":"    private static final int PACKAGE_PREFIX_NUM \u003d 4;","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":110,"author":{"gitId":"bobowoo2468"},"content":"    public static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":113,"author":{"gitId":"bobowoo2468"},"content":"     * Parses user\u0027s input into command to execute.","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":115,"author":{"gitId":"bobowoo2468"},"content":"     * @param input full user\u0027s input string","lastModifiedDate":"2021-10-14"},{"lineNumber":116,"author":{"gitId":"bobowoo2468"},"content":"     * @return the command parsed from user\u0027s input","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if there are missing fields, duplicated prefixes, missing prefixes and other general","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"bobowoo2468"},"content":"     *                              parsing errors","lastModifiedDate":"2021-11-07"},{"lineNumber":119,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":120,"author":{"gitId":"Demonshaha"},"content":"    public static Command parse(String input) throws TourPlannerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"bobowoo2468"},"content":"        String[] commandAndParams \u003d splitCommandString(input);","lastModifiedDate":"2021-11-06"},{"lineNumber":122,"author":{"gitId":"bobowoo2468"},"content":"        String command \u003d commandAndParams[COMMAND_INDEX];","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"bobowoo2468"},"content":"        String params \u003d commandAndParams[PARAMS_INDEX];","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"YipWayne"},"content":"        switch (command) {","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"bobowoo2468"},"content":"        case \"add\":","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"bobowoo2468"},"content":"            return parseAdd(params);","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"bobowoo2468"},"content":"        case \"bye\":","lastModifiedDate":"2021-11-08"},{"lineNumber":129,"author":{"gitId":"bobowoo2468"},"content":"            return parseBye(params);","lastModifiedDate":"2021-11-08"},{"lineNumber":130,"author":{"gitId":"bobowoo2468"},"content":"        case \"cut\":","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"bobowoo2468"},"content":"            return parseCut(params);","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"YipWayne"},"content":"        case \"find\":","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"YipWayne"},"content":"            return parseFind(params);","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"swongts"},"content":"        case \"help\":","lastModifiedDate":"2021-11-02"},{"lineNumber":135,"author":{"gitId":"bobowoo2468"},"content":"            return parseHelp(params);","lastModifiedDate":"2021-11-06"},{"lineNumber":136,"author":{"gitId":"bobowoo2468"},"content":"        case \"list\":","lastModifiedDate":"2021-11-08"},{"lineNumber":137,"author":{"gitId":"bobowoo2468"},"content":"            return parseList(params);","lastModifiedDate":"2021-11-08"},{"lineNumber":138,"author":{"gitId":"bobowoo2468"},"content":"        case \"sort\":","lastModifiedDate":"2021-11-08"},{"lineNumber":139,"author":{"gitId":"bobowoo2468"},"content":"            return parseSort(params);","lastModifiedDate":"2021-11-08"},{"lineNumber":140,"author":{"gitId":"YipWayne"},"content":"        default:","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"bobowoo2468"},"content":"            throw new TourPlannerException(ERROR_INVALID_INPUT);","lastModifiedDate":"2021-10-14"},{"lineNumber":142,"author":{"gitId":"YipWayne"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":146,"author":{"gitId":"swongts"},"content":"     * Separates user input into 2 based on the separator.","lastModifiedDate":"2021-11-07"},{"lineNumber":147,"author":{"gitId":"swongts"},"content":"     * If the value of the String after the separator is null,","lastModifiedDate":"2021-11-07"},{"lineNumber":148,"author":{"gitId":"swongts"},"content":"     * the second value of the String array will be returned as \"\".","lastModifiedDate":"2021-11-07"},{"lineNumber":149,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":150,"author":{"gitId":"bobowoo2468"},"content":"     * @param input full user\u0027s input string","lastModifiedDate":"2021-10-14"},{"lineNumber":151,"author":{"gitId":"bobowoo2468"},"content":"     * @return the array containing command and argument/params strings","lastModifiedDate":"2021-10-14"},{"lineNumber":152,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":153,"author":{"gitId":"bobowoo2468"},"content":"    private static String[] splitCommandString(String input) {","lastModifiedDate":"2021-11-06"},{"lineNumber":154,"author":{"gitId":"bobowoo2468"},"content":"        String[] split \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2021-11-06"},{"lineNumber":155,"author":{"gitId":"swongts"},"content":"        return split.length \u003d\u003d 2 ? split : new String[]{split[0], \"\"};","lastModifiedDate":"2021-10-07"},{"lineNumber":156,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":157,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":159,"author":{"gitId":"bobowoo2468"},"content":"     * Extracts the indexes for prefixes and put into a map that sorts the list by the natural ordering of the keys.","lastModifiedDate":"2021-10-14"},{"lineNumber":160,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":161,"author":{"gitId":"bobowoo2468"},"content":"     * @param argString full user\u0027s argument string","lastModifiedDate":"2021-10-14"},{"lineNumber":162,"author":{"gitId":"bobowoo2468"},"content":"     * @return the treemap with prefix index as the key and the corresponding prefix as the value","lastModifiedDate":"2021-10-14"},{"lineNumber":163,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if there are missing fields or missing prefixes","lastModifiedDate":"2021-10-14"},{"lineNumber":164,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":165,"author":{"gitId":"bobowoo2468"},"content":"    private static TreeMap\u003cInteger, String\u003e extractPrefixIndexes(String argString, String identifier)","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"bobowoo2468"},"content":"            throws TourPlannerException {","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":168,"author":{"gitId":"bobowoo2468"},"content":"        List\u003cString\u003e prefixes \u003d generatePrefixesFromIdentifier(identifier);","lastModifiedDate":"2021-10-28"},{"lineNumber":169,"author":{"gitId":"bobowoo2468"},"content":"        if (!containAllPrefixes(argString, prefixes)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"bobowoo2468"},"content":"            throw new TourPlannerException(ERROR_MISSING_PREFIXES);","lastModifiedDate":"2021-10-22"},{"lineNumber":171,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":173,"author":{"gitId":"bobowoo2468"},"content":"        TreeMap\u003cInteger, String\u003e prefixIndexes \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":174,"author":{"gitId":"bobowoo2468"},"content":"        prefixIndexes.put(0, \"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"bobowoo2468"},"content":"        prefixes.forEach((prefix) -\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"bobowoo2468"},"content":"            int prefixIndex \u003d argString.indexOf(prefix);","lastModifiedDate":"2021-10-22"},{"lineNumber":177,"author":{"gitId":"bobowoo2468"},"content":"            prefixIndexes.put(prefixIndex, prefix);","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"bobowoo2468"},"content":"        });","lastModifiedDate":"2021-10-22"},{"lineNumber":179,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":180,"author":{"gitId":"bobowoo2468"},"content":"        int expectedNumberOfPrefixIndexes \u003d generateExpectedNumberOfPrefixIndexes(identifier);","lastModifiedDate":"2021-10-28"},{"lineNumber":181,"author":{"gitId":"bobowoo2468"},"content":"        boolean hasUniquePrefixIndexes \u003d prefixIndexes.size() \u003d\u003d expectedNumberOfPrefixIndexes;","lastModifiedDate":"2021-10-28"},{"lineNumber":182,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":183,"author":{"gitId":"bobowoo2468"},"content":"        if (!hasUniquePrefixIndexes) {","lastModifiedDate":"2021-10-28"},{"lineNumber":184,"author":{"gitId":"bobowoo2468"},"content":"            throw new TourPlannerException(ERROR_MISSING_FIELDS);","lastModifiedDate":"2021-11-08"},{"lineNumber":185,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":186,"author":{"gitId":"bobowoo2468"},"content":"        return prefixIndexes;","lastModifiedDate":"2021-10-13"},{"lineNumber":187,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":188,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":189,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":190,"author":{"gitId":"bobowoo2468"},"content":"     * Returns the number of prefixes for the specific data type, determined by the identifier.","lastModifiedDate":"2021-11-06"},{"lineNumber":191,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":192,"author":{"gitId":"bobowoo2468"},"content":"     * @param identifier specific identifier to determine specific data type (client, flight, tour, package)","lastModifiedDate":"2021-11-06"},{"lineNumber":193,"author":{"gitId":"bobowoo2468"},"content":"     * @return the number of prefixes determined by the identifier","lastModifiedDate":"2021-11-06"},{"lineNumber":194,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":195,"author":{"gitId":"bobowoo2468"},"content":"    private static int generateExpectedNumberOfPrefixIndexes(String identifier) {","lastModifiedDate":"2021-10-28"},{"lineNumber":196,"author":{"gitId":"bobowoo2468"},"content":"        int numberOfPrefixIndexes \u003d 0;","lastModifiedDate":"2021-10-28"},{"lineNumber":197,"author":{"gitId":"bobowoo2468"},"content":"        switch (identifier) {","lastModifiedDate":"2021-10-28"},{"lineNumber":198,"author":{"gitId":"bobowoo2468"},"content":"        case CLIENT_IDENTIFIER:","lastModifiedDate":"2021-10-28"},{"lineNumber":199,"author":{"gitId":"bobowoo2468"},"content":"            numberOfPrefixIndexes \u003d CLIENT_PREFIX_NUM;","lastModifiedDate":"2021-11-06"},{"lineNumber":200,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-10-28"},{"lineNumber":201,"author":{"gitId":"bobowoo2468"},"content":"        case PACKAGE_IDENTIFIER:","lastModifiedDate":"2021-10-28"},{"lineNumber":202,"author":{"gitId":"bobowoo2468"},"content":"            numberOfPrefixIndexes \u003d PACKAGE_PREFIX_NUM;","lastModifiedDate":"2021-11-06"},{"lineNumber":203,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-10-28"},{"lineNumber":204,"author":{"gitId":"bobowoo2468"},"content":"        case TOUR_IDENTIFIER:","lastModifiedDate":"2021-10-28"},{"lineNumber":205,"author":{"gitId":"bobowoo2468"},"content":"            numberOfPrefixIndexes \u003d TOUR_PREFIX_NUM;","lastModifiedDate":"2021-11-06"},{"lineNumber":206,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-10-28"},{"lineNumber":207,"author":{"gitId":"bobowoo2468"},"content":"        case FLIGHT_IDENTIFIER:","lastModifiedDate":"2021-10-28"},{"lineNumber":208,"author":{"gitId":"bobowoo2468"},"content":"            numberOfPrefixIndexes \u003d FLIGHT_PREFIX_NUM;","lastModifiedDate":"2021-11-06"},{"lineNumber":209,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-10-28"},{"lineNumber":210,"author":{"gitId":"bobowoo2468"},"content":"        default:","lastModifiedDate":"2021-10-28"},{"lineNumber":211,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-10-28"},{"lineNumber":212,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":213,"author":{"gitId":"bobowoo2468"},"content":"        return numberOfPrefixIndexes;","lastModifiedDate":"2021-10-28"},{"lineNumber":214,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":215,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":216,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":217,"author":{"gitId":"bobowoo2468"},"content":"     * Extract values from user\u0027s input command in a sorted fashion.","lastModifiedDate":"2021-10-28"},{"lineNumber":218,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":219,"author":{"gitId":"bobowoo2468"},"content":"     * @param prefixIndexes the treemap with prefix index as the key and the corresponding prefix as the value","lastModifiedDate":"2021-10-14"},{"lineNumber":220,"author":{"gitId":"bobowoo2468"},"content":"     * @param argString     full user\u0027s argument string","lastModifiedDate":"2021-10-14"},{"lineNumber":221,"author":{"gitId":"bobowoo2468"},"content":"     * @param identifier    specific identifier to determine specific data type (client, flight, tour, package)","lastModifiedDate":"2021-10-28"},{"lineNumber":222,"author":{"gitId":"bobowoo2468"},"content":"     * @return the array containing all extracted values in a sorted fashion","lastModifiedDate":"2021-10-28"},{"lineNumber":223,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if there are duplicate prefixes found","lastModifiedDate":"2021-10-14"},{"lineNumber":224,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":225,"author":{"gitId":"YipWayne"},"content":"    private static ArrayList\u003cString\u003e extractValuesIntoArray(TreeMap\u003cInteger, String\u003e prefixIndexes,","lastModifiedDate":"2021-10-22"},{"lineNumber":226,"author":{"gitId":"YipWayne"},"content":"                                                            String argString, String identifier)","lastModifiedDate":"2021-10-22"},{"lineNumber":227,"author":{"gitId":"bobowoo2468"},"content":"            throws TourPlannerException {","lastModifiedDate":"2021-10-13"},{"lineNumber":228,"author":{"gitId":"bobowoo2468"},"content":"        ArrayList\u003cString\u003e extractedValues \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":229,"author":{"gitId":"bobowoo2468"},"content":"        initialiseArrayList(extractedValues);","lastModifiedDate":"2021-10-22"},{"lineNumber":230,"author":{"gitId":"bobowoo2468"},"content":"        ArrayList\u003cInteger\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"bobowoo2468"},"content":"        ArrayList\u003cString\u003e prefixes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"bobowoo2468"},"content":"        for (Map.Entry\u003cInteger, String\u003e prefixIndex : prefixIndexes.entrySet()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":233,"author":{"gitId":"bobowoo2468"},"content":"            indexes.add(prefixIndex.getKey());","lastModifiedDate":"2021-10-13"},{"lineNumber":234,"author":{"gitId":"bobowoo2468"},"content":"            prefixes.add(prefixIndex.getValue());","lastModifiedDate":"2021-10-13"},{"lineNumber":235,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"bobowoo2468"},"content":"        for (int i \u003d 0; i \u003c indexes.size() - 1; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"bobowoo2468"},"content":"            int previousIndex \u003d indexes.get(i);","lastModifiedDate":"2021-10-13"},{"lineNumber":239,"author":{"gitId":"bobowoo2468"},"content":"            int nextIndex \u003d indexes.get(i + 1);","lastModifiedDate":"2021-10-13"},{"lineNumber":240,"author":{"gitId":"bobowoo2468"},"content":"            String prefix \u003d prefixes.get(i);","lastModifiedDate":"2021-10-13"},{"lineNumber":241,"author":{"gitId":"bobowoo2468"},"content":"            String value \u003d extractValue(argString, prefix, previousIndex, nextIndex, identifier);","lastModifiedDate":"2021-10-27"},{"lineNumber":242,"author":{"gitId":"bobowoo2468"},"content":"            int inputIndex \u003d obtainArrayIndex(prefix, identifier);","lastModifiedDate":"2021-10-22"},{"lineNumber":243,"author":{"gitId":"bobowoo2468"},"content":"            extractedValues.set(inputIndex, value);","lastModifiedDate":"2021-10-22"},{"lineNumber":244,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":245,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":246,"author":{"gitId":"bobowoo2468"},"content":"        String finalPrefix \u003d prefixes.get(indexes.size() - 1);","lastModifiedDate":"2021-10-22"},{"lineNumber":247,"author":{"gitId":"bobowoo2468"},"content":"        int finalIndex \u003d indexes.get(indexes.size() - 1);","lastModifiedDate":"2021-10-22"},{"lineNumber":248,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":249,"author":{"gitId":"bobowoo2468"},"content":"        int inputIndex \u003d obtainArrayIndex(finalPrefix, identifier);","lastModifiedDate":"2021-10-22"},{"lineNumber":250,"author":{"gitId":"bobowoo2468"},"content":"        String value \u003d extractValue(argString, finalPrefix, finalIndex, argString.length(), identifier);","lastModifiedDate":"2021-10-27"},{"lineNumber":251,"author":{"gitId":"bobowoo2468"},"content":"        extractedValues.set(inputIndex, value);","lastModifiedDate":"2021-10-22"},{"lineNumber":252,"author":{"gitId":"bobowoo2468"},"content":"        return extractedValues;","lastModifiedDate":"2021-10-12"},{"lineNumber":253,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":254,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":255,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":256,"author":{"gitId":"bobowoo2468"},"content":"     * Initialise an empty array list of size 5 - max array size for values.","lastModifiedDate":"2021-10-28"},{"lineNumber":257,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":258,"author":{"gitId":"bobowoo2468"},"content":"     * @param extractedValues empty extracted values array to be initialised with empty string values","lastModifiedDate":"2021-10-28"},{"lineNumber":259,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":260,"author":{"gitId":"bobowoo2468"},"content":"    private static void initialiseArrayList(ArrayList\u003cString\u003e extractedValues) {","lastModifiedDate":"2021-10-22"},{"lineNumber":261,"author":{"gitId":"bobowoo2468"},"content":"        for (int i \u003d 0; i \u003c MAX_VALUE_ARRAY_SIZE; i++) {","lastModifiedDate":"2021-10-28"},{"lineNumber":262,"author":{"gitId":"bobowoo2468"},"content":"            extractedValues.add(\"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":263,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":264,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":265,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":266,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":267,"author":{"gitId":"bobowoo2468"},"content":"     * Extract value from a substring of the user\u0027s argument string, according to prefix.","lastModifiedDate":"2021-10-14"},{"lineNumber":268,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":269,"author":{"gitId":"bobowoo2468"},"content":"     * @param argString  full user\u0027s argument string","lastModifiedDate":"2021-10-14"},{"lineNumber":270,"author":{"gitId":"bobowoo2468"},"content":"     * @param prefix     prefix of value to be extracted","lastModifiedDate":"2021-10-14"},{"lineNumber":271,"author":{"gitId":"bobowoo2468"},"content":"     * @param startIndex start index of substring","lastModifiedDate":"2021-10-14"},{"lineNumber":272,"author":{"gitId":"bobowoo2468"},"content":"     * @param endIndex   end index of substring","lastModifiedDate":"2021-10-14"},{"lineNumber":273,"author":{"gitId":"bobowoo2468"},"content":"     * @param identifier specific identifier to determine specific data type (client, flight, tour, package)","lastModifiedDate":"2021-10-28"},{"lineNumber":274,"author":{"gitId":"bobowoo2468"},"content":"     * @return value corresponding to prefix given","lastModifiedDate":"2021-10-14"},{"lineNumber":275,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if there are duplicate prefixes found","lastModifiedDate":"2021-10-14"},{"lineNumber":276,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":277,"author":{"gitId":"bobowoo2468"},"content":"    private static String extractValue(String argString, String prefix, int startIndex, int endIndex, String identifier)","lastModifiedDate":"2021-10-28"},{"lineNumber":278,"author":{"gitId":"bobowoo2468"},"content":"            throws TourPlannerException {","lastModifiedDate":"2021-10-28"},{"lineNumber":279,"author":{"gitId":"bobowoo2468"},"content":"        List\u003cString\u003e prefixes \u003d generatePrefixesFromIdentifier(identifier);","lastModifiedDate":"2021-10-28"},{"lineNumber":280,"author":{"gitId":"bobowoo2468"},"content":"        String unformattedSubstring \u003d argString.substring(startIndex, endIndex).trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":281,"author":{"gitId":"bobowoo2468"},"content":"        String value \u003d unformattedSubstring.replaceFirst(prefix, \"\").trim();","lastModifiedDate":"2021-10-14"},{"lineNumber":282,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":283,"author":{"gitId":"bobowoo2468"},"content":"        if (value.equals(EMPTY_STRING)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":284,"author":{"gitId":"bobowoo2468"},"content":"            throw new TourPlannerException(ERROR_MISSING_FIELDS);","lastModifiedDate":"2021-10-28"},{"lineNumber":285,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":286,"author":{"gitId":"bobowoo2468"},"content":"        for (String pf : prefixes) {","lastModifiedDate":"2021-10-28"},{"lineNumber":287,"author":{"gitId":"bobowoo2468"},"content":"            boolean hasDuplicatePrefix \u003d value.contains(pf);","lastModifiedDate":"2021-10-28"},{"lineNumber":288,"author":{"gitId":"bobowoo2468"},"content":"            if (hasDuplicatePrefix) {","lastModifiedDate":"2021-10-28"},{"lineNumber":289,"author":{"gitId":"bobowoo2468"},"content":"                throw new TourPlannerException(ERROR_DUPLICATE_PREFIXES);","lastModifiedDate":"2021-10-28"},{"lineNumber":290,"author":{"gitId":"bobowoo2468"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":291,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":292,"author":{"gitId":"bobowoo2468"},"content":"        return value;","lastModifiedDate":"2021-10-13"},{"lineNumber":293,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":294,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":295,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":296,"author":{"gitId":"bobowoo2468"},"content":"     * Return the list of prefixes for each data type.","lastModifiedDate":"2021-11-07"},{"lineNumber":297,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":298,"author":{"gitId":"bobowoo2468"},"content":"     * @param identifier specific identifier to determine specific data type (client, flight, tour, package)","lastModifiedDate":"2021-11-07"},{"lineNumber":299,"author":{"gitId":"bobowoo2468"},"content":"     * @return the list of prefixes, as specified by the identifier","lastModifiedDate":"2021-11-07"},{"lineNumber":300,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if the identifier is invalid","lastModifiedDate":"2021-11-07"},{"lineNumber":301,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":302,"author":{"gitId":"bobowoo2468"},"content":"    private static List\u003cString\u003e generatePrefixesFromIdentifier(String identifier) throws TourPlannerException {","lastModifiedDate":"2021-10-28"},{"lineNumber":303,"author":{"gitId":"bobowoo2468"},"content":"        List\u003cString\u003e prefixes;","lastModifiedDate":"2021-10-28"},{"lineNumber":304,"author":{"gitId":"bobowoo2468"},"content":"        switch (identifier) {","lastModifiedDate":"2021-10-28"},{"lineNumber":305,"author":{"gitId":"bobowoo2468"},"content":"        case CLIENT_IDENTIFIER:","lastModifiedDate":"2021-10-28"},{"lineNumber":306,"author":{"gitId":"bobowoo2468"},"content":"            prefixes \u003d Arrays.asList(CLIENT_NAME_PREFIX, CLIENT_CONTACT_NUMBER_PREFIX, CLIENT_EMAIL_PREFIX);","lastModifiedDate":"2021-10-28"},{"lineNumber":307,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-10-28"},{"lineNumber":308,"author":{"gitId":"bobowoo2468"},"content":"        case TOUR_IDENTIFIER:","lastModifiedDate":"2021-10-28"},{"lineNumber":309,"author":{"gitId":"bobowoo2468"},"content":"            prefixes \u003d Arrays.asList(TOUR_NAME_PREFIX, TOUR_PRICE_PREFIX);","lastModifiedDate":"2021-10-28"},{"lineNumber":310,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-10-28"},{"lineNumber":311,"author":{"gitId":"bobowoo2468"},"content":"        case FLIGHT_IDENTIFIER:","lastModifiedDate":"2021-10-28"},{"lineNumber":312,"author":{"gitId":"bobowoo2468"},"content":"            prefixes \u003d Arrays.asList(FLIGHT_DEPARTURE_PREFIX, FLIGHT_RETURN_PREFIX,","lastModifiedDate":"2021-10-28"},{"lineNumber":313,"author":{"gitId":"bobowoo2468"},"content":"                    FLIGHT_DEPARTURE_DATE_PREFIX, FLIGHT_RETURN_DATE_PREFIX);","lastModifiedDate":"2021-10-28"},{"lineNumber":314,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-10-28"},{"lineNumber":315,"author":{"gitId":"bobowoo2468"},"content":"        case PACKAGE_IDENTIFIER:","lastModifiedDate":"2021-10-28"},{"lineNumber":316,"author":{"gitId":"bobowoo2468"},"content":"            prefixes \u003d Arrays.asList(PACKAGE_CLIENT_PREFIX, PACKAGE_TOUR_PREFIX, PACKAGE_FLIGHT_PREFIX);","lastModifiedDate":"2021-11-06"},{"lineNumber":317,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-10-28"},{"lineNumber":318,"author":{"gitId":"bobowoo2468"},"content":"        default:","lastModifiedDate":"2021-10-28"},{"lineNumber":319,"author":{"gitId":"bobowoo2468"},"content":"            throw new TourPlannerException(ERROR_MISSING_IDENTIFIER);","lastModifiedDate":"2021-10-28"},{"lineNumber":320,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":321,"author":{"gitId":"bobowoo2468"},"content":"        return prefixes;","lastModifiedDate":"2021-10-28"},{"lineNumber":322,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":323,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":324,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":325,"author":{"gitId":"bobowoo2468"},"content":"     * Obtains array index that corresponds to the prefix given.","lastModifiedDate":"2021-10-14"},{"lineNumber":326,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":327,"author":{"gitId":"bobowoo2468"},"content":"     * @param prefix prefix of value extracted","lastModifiedDate":"2021-10-14"},{"lineNumber":328,"author":{"gitId":"bobowoo2468"},"content":"     * @return array index of values according to prefix","lastModifiedDate":"2021-10-14"},{"lineNumber":329,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":330,"author":{"gitId":"bobowoo2468"},"content":"    private static int obtainArrayIndex(String prefix, String identifier) {","lastModifiedDate":"2021-10-22"},{"lineNumber":331,"author":{"gitId":"swongts"},"content":"        int index;","lastModifiedDate":"2021-10-23"},{"lineNumber":332,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":333,"author":{"gitId":"bobowoo2468"},"content":"        switch (identifier) {","lastModifiedDate":"2021-10-22"},{"lineNumber":334,"author":{"gitId":"bobowoo2468"},"content":"        case CLIENT_IDENTIFIER:","lastModifiedDate":"2021-10-28"},{"lineNumber":335,"author":{"gitId":"bobowoo2468"},"content":"            index \u003d obtainClientArrayIndex(prefix);","lastModifiedDate":"2021-10-22"},{"lineNumber":336,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-10-22"},{"lineNumber":337,"author":{"gitId":"bobowoo2468"},"content":"        case TOUR_IDENTIFIER:","lastModifiedDate":"2021-10-28"},{"lineNumber":338,"author":{"gitId":"bobowoo2468"},"content":"            index \u003d obtainTourArrayIndex(prefix);","lastModifiedDate":"2021-10-22"},{"lineNumber":339,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-10-22"},{"lineNumber":340,"author":{"gitId":"bobowoo2468"},"content":"        case FLIGHT_IDENTIFIER:","lastModifiedDate":"2021-10-28"},{"lineNumber":341,"author":{"gitId":"bobowoo2468"},"content":"            index \u003d obtainFlightArrayIndex(prefix);","lastModifiedDate":"2021-10-22"},{"lineNumber":342,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-10-22"},{"lineNumber":343,"author":{"gitId":"bobowoo2468"},"content":"        case PACKAGE_IDENTIFIER:","lastModifiedDate":"2021-10-28"},{"lineNumber":344,"author":{"gitId":"swongts"},"content":"            index \u003d obtainPackageArrayIndex(prefix);","lastModifiedDate":"2021-10-23"},{"lineNumber":345,"author":{"gitId":"swongts"},"content":"            break;","lastModifiedDate":"2021-10-23"},{"lineNumber":346,"author":{"gitId":"swongts"},"content":"        default:","lastModifiedDate":"2021-10-23"},{"lineNumber":347,"author":{"gitId":"swongts"},"content":"            index \u003d 0;","lastModifiedDate":"2021-10-23"},{"lineNumber":348,"author":{"gitId":"swongts"},"content":"            break;","lastModifiedDate":"2021-10-23"},{"lineNumber":349,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":350,"author":{"gitId":"swongts"},"content":"        return index;","lastModifiedDate":"2021-10-23"},{"lineNumber":351,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":352,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":353,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":354,"author":{"gitId":"bobowoo2468"},"content":"     * Returns a value\u0027s insertion index into the ClientPackage input array, based on the given prefix.","lastModifiedDate":"2021-10-28"},{"lineNumber":355,"author":{"gitId":"bobowoo2468"},"content":"     * ClientPackage array: (Package ID, Client id, Tour id, Flight id)","lastModifiedDate":"2021-10-28"},{"lineNumber":356,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":357,"author":{"gitId":"bobowoo2468"},"content":"     * @param prefix prefix of value extracted","lastModifiedDate":"2021-10-28"},{"lineNumber":358,"author":{"gitId":"bobowoo2468"},"content":"     * @return respective insertion index","lastModifiedDate":"2021-10-28"},{"lineNumber":359,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":360,"author":{"gitId":"swongts"},"content":"    private static int obtainPackageArrayIndex(String prefix) {","lastModifiedDate":"2021-10-23"},{"lineNumber":361,"author":{"gitId":"swongts"},"content":"        int index;","lastModifiedDate":"2021-10-23"},{"lineNumber":362,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":363,"author":{"gitId":"swongts"},"content":"        switch (prefix) {","lastModifiedDate":"2021-10-23"},{"lineNumber":364,"author":{"gitId":"bobowoo2468"},"content":"        case PACKAGE_CLIENT_PREFIX:","lastModifiedDate":"2021-11-06"},{"lineNumber":365,"author":{"gitId":"swongts"},"content":"            index \u003d 1;","lastModifiedDate":"2021-10-23"},{"lineNumber":366,"author":{"gitId":"swongts"},"content":"            break;","lastModifiedDate":"2021-10-23"},{"lineNumber":367,"author":{"gitId":"bobowoo2468"},"content":"        case PACKAGE_TOUR_PREFIX:","lastModifiedDate":"2021-11-06"},{"lineNumber":368,"author":{"gitId":"swongts"},"content":"            index \u003d 2;","lastModifiedDate":"2021-10-23"},{"lineNumber":369,"author":{"gitId":"swongts"},"content":"            break;","lastModifiedDate":"2021-10-23"},{"lineNumber":370,"author":{"gitId":"bobowoo2468"},"content":"        case PACKAGE_FLIGHT_PREFIX:","lastModifiedDate":"2021-11-06"},{"lineNumber":371,"author":{"gitId":"swongts"},"content":"            index \u003d 3;","lastModifiedDate":"2021-10-25"},{"lineNumber":372,"author":{"gitId":"swongts"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":373,"author":{"gitId":"swongts"},"content":"        default:","lastModifiedDate":"2021-10-23"},{"lineNumber":374,"author":{"gitId":"swongts"},"content":"            index \u003d 0;","lastModifiedDate":"2021-10-23"},{"lineNumber":375,"author":{"gitId":"swongts"},"content":"            break;","lastModifiedDate":"2021-10-23"},{"lineNumber":376,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":377,"author":{"gitId":"bobowoo2468"},"content":"        return index;","lastModifiedDate":"2021-10-22"},{"lineNumber":378,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":379,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":380,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":381,"author":{"gitId":"bobowoo2468"},"content":"     * Returns a value\u0027s insertion index into the Flight input array, based on the given prefix.","lastModifiedDate":"2021-10-28"},{"lineNumber":382,"author":{"gitId":"bobowoo2468"},"content":"     * Flight array: (ID, Departure destination, Return destination, Departure Date,Return Date)","lastModifiedDate":"2021-10-28"},{"lineNumber":383,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":384,"author":{"gitId":"bobowoo2468"},"content":"     * @param prefix prefix of value extracted","lastModifiedDate":"2021-10-28"},{"lineNumber":385,"author":{"gitId":"bobowoo2468"},"content":"     * @return respective insertion index","lastModifiedDate":"2021-10-28"},{"lineNumber":386,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":387,"author":{"gitId":"bobowoo2468"},"content":"    private static int obtainFlightArrayIndex(String prefix) {","lastModifiedDate":"2021-10-22"},{"lineNumber":388,"author":{"gitId":"swongts"},"content":"        int index;","lastModifiedDate":"2021-10-23"},{"lineNumber":389,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":390,"author":{"gitId":"bobowoo2468"},"content":"        switch (prefix) {","lastModifiedDate":"2021-10-08"},{"lineNumber":391,"author":{"gitId":"bobowoo2468"},"content":"        case FLIGHT_DEPARTURE_PREFIX:","lastModifiedDate":"2021-10-28"},{"lineNumber":392,"author":{"gitId":"bobowoo2468"},"content":"            index \u003d 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":393,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-10-08"},{"lineNumber":394,"author":{"gitId":"bobowoo2468"},"content":"        case FLIGHT_RETURN_PREFIX:","lastModifiedDate":"2021-10-28"},{"lineNumber":395,"author":{"gitId":"bobowoo2468"},"content":"            index \u003d 2;","lastModifiedDate":"2021-10-12"},{"lineNumber":396,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-10-08"},{"lineNumber":397,"author":{"gitId":"bobowoo2468"},"content":"        case FLIGHT_DEPARTURE_DATE_PREFIX:","lastModifiedDate":"2021-10-28"},{"lineNumber":398,"author":{"gitId":"bobowoo2468"},"content":"            index \u003d 3;","lastModifiedDate":"2021-10-12"},{"lineNumber":399,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-10-08"},{"lineNumber":400,"author":{"gitId":"bobowoo2468"},"content":"        case FLIGHT_RETURN_DATE_PREFIX:","lastModifiedDate":"2021-10-28"},{"lineNumber":401,"author":{"gitId":"bobowoo2468"},"content":"            index \u003d 4;","lastModifiedDate":"2021-10-12"},{"lineNumber":402,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-10-12"},{"lineNumber":403,"author":{"gitId":"swongts"},"content":"        default:","lastModifiedDate":"2021-10-23"},{"lineNumber":404,"author":{"gitId":"swongts"},"content":"            index \u003d 0;","lastModifiedDate":"2021-10-23"},{"lineNumber":405,"author":{"gitId":"swongts"},"content":"            break;","lastModifiedDate":"2021-10-23"},{"lineNumber":406,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":407,"author":{"gitId":"bobowoo2468"},"content":"        return index;","lastModifiedDate":"2021-10-22"},{"lineNumber":408,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":409,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":410,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":411,"author":{"gitId":"bobowoo2468"},"content":"     * Returns a value\u0027s insertion index into the Tour input array, based on the given prefix.","lastModifiedDate":"2021-10-28"},{"lineNumber":412,"author":{"gitId":"bobowoo2468"},"content":"     * Tour array: (ID, Name, Price)","lastModifiedDate":"2021-10-28"},{"lineNumber":413,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":414,"author":{"gitId":"bobowoo2468"},"content":"     * @param prefix prefix of value extracted","lastModifiedDate":"2021-10-28"},{"lineNumber":415,"author":{"gitId":"bobowoo2468"},"content":"     * @return respective insertion index","lastModifiedDate":"2021-10-28"},{"lineNumber":416,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":417,"author":{"gitId":"bobowoo2468"},"content":"    private static int obtainTourArrayIndex(String prefix) {","lastModifiedDate":"2021-10-22"},{"lineNumber":418,"author":{"gitId":"swongts"},"content":"        int index;","lastModifiedDate":"2021-10-23"},{"lineNumber":419,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":420,"author":{"gitId":"bobowoo2468"},"content":"        switch (prefix) {","lastModifiedDate":"2021-10-22"},{"lineNumber":421,"author":{"gitId":"bobowoo2468"},"content":"        case TOUR_NAME_PREFIX:","lastModifiedDate":"2021-10-28"},{"lineNumber":422,"author":{"gitId":"bobowoo2468"},"content":"            index \u003d 1;","lastModifiedDate":"2021-10-22"},{"lineNumber":423,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-10-22"},{"lineNumber":424,"author":{"gitId":"bobowoo2468"},"content":"        case TOUR_PRICE_PREFIX:","lastModifiedDate":"2021-10-28"},{"lineNumber":425,"author":{"gitId":"bobowoo2468"},"content":"            index \u003d 2;","lastModifiedDate":"2021-10-22"},{"lineNumber":426,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-10-22"},{"lineNumber":427,"author":{"gitId":"swongts"},"content":"        default:","lastModifiedDate":"2021-10-23"},{"lineNumber":428,"author":{"gitId":"swongts"},"content":"            index \u003d 0;","lastModifiedDate":"2021-10-23"},{"lineNumber":429,"author":{"gitId":"swongts"},"content":"            break;","lastModifiedDate":"2021-10-23"},{"lineNumber":430,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":431,"author":{"gitId":"bobowoo2468"},"content":"        return index;","lastModifiedDate":"2021-10-22"},{"lineNumber":432,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":433,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":434,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":435,"author":{"gitId":"bobowoo2468"},"content":"     * Returns a value\u0027s insertion index into the Client input array, based on the given prefix.","lastModifiedDate":"2021-10-28"},{"lineNumber":436,"author":{"gitId":"bobowoo2468"},"content":"     * Client array: (ID, Name, Contact Number, eMail)","lastModifiedDate":"2021-10-28"},{"lineNumber":437,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":438,"author":{"gitId":"bobowoo2468"},"content":"     * @param prefix prefix of value extracted","lastModifiedDate":"2021-10-28"},{"lineNumber":439,"author":{"gitId":"bobowoo2468"},"content":"     * @return respective insertion index","lastModifiedDate":"2021-10-28"},{"lineNumber":440,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":441,"author":{"gitId":"bobowoo2468"},"content":"    private static int obtainClientArrayIndex(String prefix) {","lastModifiedDate":"2021-10-22"},{"lineNumber":442,"author":{"gitId":"swongts"},"content":"        int index;","lastModifiedDate":"2021-10-23"},{"lineNumber":443,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":444,"author":{"gitId":"bobowoo2468"},"content":"        switch (prefix) {","lastModifiedDate":"2021-10-22"},{"lineNumber":445,"author":{"gitId":"bobowoo2468"},"content":"        case CLIENT_NAME_PREFIX:","lastModifiedDate":"2021-10-28"},{"lineNumber":446,"author":{"gitId":"bobowoo2468"},"content":"            index \u003d 1;","lastModifiedDate":"2021-10-22"},{"lineNumber":447,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-10-12"},{"lineNumber":448,"author":{"gitId":"bobowoo2468"},"content":"        case CLIENT_CONTACT_NUMBER_PREFIX:","lastModifiedDate":"2021-10-28"},{"lineNumber":449,"author":{"gitId":"bobowoo2468"},"content":"            index \u003d 2;","lastModifiedDate":"2021-10-22"},{"lineNumber":450,"author":{"gitId":"swongts"},"content":"            break;","lastModifiedDate":"2021-10-24"},{"lineNumber":451,"author":{"gitId":"bobowoo2468"},"content":"        case CLIENT_EMAIL_PREFIX:","lastModifiedDate":"2021-10-28"},{"lineNumber":452,"author":{"gitId":"swongts"},"content":"            index \u003d 3;","lastModifiedDate":"2021-10-24"},{"lineNumber":453,"author":{"gitId":"swongts"},"content":"            break;","lastModifiedDate":"2021-10-24"},{"lineNumber":454,"author":{"gitId":"swongts"},"content":"        default:","lastModifiedDate":"2021-10-23"},{"lineNumber":455,"author":{"gitId":"swongts"},"content":"            index \u003d 0;","lastModifiedDate":"2021-10-23"},{"lineNumber":456,"author":{"gitId":"swongts"},"content":"            break;","lastModifiedDate":"2021-10-23"},{"lineNumber":457,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":458,"author":{"gitId":"bobowoo2468"},"content":"        return index;","lastModifiedDate":"2021-10-12"},{"lineNumber":459,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":460,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":461,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":462,"author":{"gitId":"bobowoo2468"},"content":"     * Returns true if all prefixes are present in add command\u0027s argument string.","lastModifiedDate":"2021-10-14"},{"lineNumber":463,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":464,"author":{"gitId":"bobowoo2468"},"content":"     * @param argString full user\u0027s argument string","lastModifiedDate":"2021-10-14"},{"lineNumber":465,"author":{"gitId":"bobowoo2468"},"content":"     * @return true if all prefixes are present in add command\u0027s argument string","lastModifiedDate":"2021-10-14"},{"lineNumber":466,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":467,"author":{"gitId":"bobowoo2468"},"content":"    private static boolean containAllPrefixes(String argString, List\u003cString\u003e prefixList) {","lastModifiedDate":"2021-10-22"},{"lineNumber":468,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":469,"author":{"gitId":"bobowoo2468"},"content":"        String[] splitBySpaces \u003d argString.trim().split(\"\\\\s+\");","lastModifiedDate":"2021-10-22"},{"lineNumber":470,"author":{"gitId":"bobowoo2468"},"content":"        String[] prefixes \u003d prefixList.toArray(new String[0]);","lastModifiedDate":"2021-11-04"},{"lineNumber":471,"author":{"gitId":"bobowoo2468"},"content":"        for (String prefix : prefixes) {","lastModifiedDate":"2021-10-22"},{"lineNumber":472,"author":{"gitId":"bobowoo2468"},"content":"            boolean containPrefix \u003d false;","lastModifiedDate":"2021-10-22"},{"lineNumber":473,"author":{"gitId":"bobowoo2468"},"content":"            for (String substring : splitBySpaces) {","lastModifiedDate":"2021-10-22"},{"lineNumber":474,"author":{"gitId":"bobowoo2468"},"content":"                if (prefix.equals(substring)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":475,"author":{"gitId":"bobowoo2468"},"content":"                    containPrefix \u003d true;","lastModifiedDate":"2021-10-22"},{"lineNumber":476,"author":{"gitId":"bobowoo2468"},"content":"                    break;","lastModifiedDate":"2021-10-22"},{"lineNumber":477,"author":{"gitId":"bobowoo2468"},"content":"                }","lastModifiedDate":"2021-10-22"},{"lineNumber":478,"author":{"gitId":"bobowoo2468"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":479,"author":{"gitId":"bobowoo2468"},"content":"            if (!containPrefix) {","lastModifiedDate":"2021-10-22"},{"lineNumber":480,"author":{"gitId":"bobowoo2468"},"content":"                return false;","lastModifiedDate":"2021-10-22"},{"lineNumber":481,"author":{"gitId":"bobowoo2468"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":482,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":483,"author":{"gitId":"bobowoo2468"},"content":"        return true;","lastModifiedDate":"2021-10-22"},{"lineNumber":484,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":485,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":486,"author":{"gitId":"YipWayne"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":487,"author":{"gitId":"bobowoo2468"},"content":"     * Handles all exceptions regarding inputs for add tour command.","lastModifiedDate":"2021-11-07"},{"lineNumber":488,"author":{"gitId":"bobowoo2468"},"content":"     * Throws TourPlannerException when there are duplicate decimal points (.), or additional characters in price","lastModifiedDate":"2021-11-07"},{"lineNumber":489,"author":{"gitId":"bobowoo2468"},"content":"     * that prevent parsing.","lastModifiedDate":"2021-11-07"},{"lineNumber":490,"author":{"gitId":"bobowoo2468"},"content":"     * Prints a warning if price has too many divisions, i.e. decimal places","lastModifiedDate":"2021-11-07"},{"lineNumber":491,"author":{"gitId":"YipWayne"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":492,"author":{"gitId":"bobowoo2468"},"content":"     * @param values the array of values extracted from user\u0027s input after parsing","lastModifiedDate":"2021-11-07"},{"lineNumber":493,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if there are duplicate decimal points, additional characters in price","lastModifiedDate":"2021-11-07"},{"lineNumber":494,"author":{"gitId":"YipWayne"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":495,"author":{"gitId":"bobowoo2468"},"content":"    private static void handleTourException(String[] values) throws TourPlannerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":496,"author":{"gitId":"bobowoo2468"},"content":"        String price \u003d values[2];","lastModifiedDate":"2021-10-26"},{"lineNumber":497,"author":{"gitId":"bobowoo2468"},"content":"        int decimalCount \u003d (int) price.chars().filter(ch -\u003e ch \u003d\u003d \u0027.\u0027).count();","lastModifiedDate":"2021-11-04"},{"lineNumber":498,"author":{"gitId":"bobowoo2468"},"content":"        String priceAfterParseString \u003d price.replaceAll(\"[^0-9.]\", \"\");","lastModifiedDate":"2021-11-04"},{"lineNumber":499,"author":{"gitId":"bobowoo2468"},"content":"        boolean containsAdditionalDecimalPoints \u003d decimalCount \u003e 1;","lastModifiedDate":"2021-11-04"},{"lineNumber":500,"author":{"gitId":"bobowoo2468"},"content":"        if (containsAdditionalDecimalPoints) {","lastModifiedDate":"2021-11-04"},{"lineNumber":501,"author":{"gitId":"bobowoo2468"},"content":"            throw new TourPlannerException(ERROR_PRICE_FORMAT);","lastModifiedDate":"2021-10-26"},{"lineNumber":502,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":503,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":504,"author":{"gitId":"bobowoo2468"},"content":"        boolean containsAdditionalCharacters \u003d !price.equals(priceAfterParseString);","lastModifiedDate":"2021-11-04"},{"lineNumber":505,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":506,"author":{"gitId":"bobowoo2468"},"content":"        if (containsAdditionalCharacters) {","lastModifiedDate":"2021-11-04"},{"lineNumber":507,"author":{"gitId":"bobowoo2468"},"content":"            throw new TourPlannerException(ERROR_PRICE_FORMAT);","lastModifiedDate":"2021-11-04"},{"lineNumber":508,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":509,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":510,"author":{"gitId":"bobowoo2468"},"content":"        if (decimalCount \u003d\u003d 1) {","lastModifiedDate":"2021-11-06"},{"lineNumber":511,"author":{"gitId":"bobowoo2468"},"content":"            int decimalIndex \u003d price.indexOf(\".\");","lastModifiedDate":"2021-11-04"},{"lineNumber":512,"author":{"gitId":"bobowoo2468"},"content":"            int numberOfDecimalPlaces \u003d price.length() - decimalIndex - 1;","lastModifiedDate":"2021-11-04"},{"lineNumber":513,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":514,"author":{"gitId":"bobowoo2468"},"content":"            if (numberOfDecimalPlaces \u003e 2) {","lastModifiedDate":"2021-11-04"},{"lineNumber":515,"author":{"gitId":"bobowoo2468"},"content":"                System.out.println(WARNING_PRICE_TOO_MANY_DECIMAL);","lastModifiedDate":"2021-11-04"},{"lineNumber":516,"author":{"gitId":"bobowoo2468"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":517,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":518,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":519,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":520,"author":{"gitId":"YipWayne"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":521,"author":{"gitId":"bobowoo2468"},"content":"     * Handles all exceptions regarding inputs for add flight command.","lastModifiedDate":"2021-11-07"},{"lineNumber":522,"author":{"gitId":"YipWayne"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":523,"author":{"gitId":"bobowoo2468"},"content":"     * @param values the array of values extracted from user\u0027s input after parsing","lastModifiedDate":"2021-11-07"},{"lineNumber":524,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if there are logical errors with date-time input (i.e. date-time of flight to","lastModifiedDate":"2021-11-07"},{"lineNumber":525,"author":{"gitId":"bobowoo2468"},"content":"     *                              destination location is after date-time of return flight)","lastModifiedDate":"2021-11-07"},{"lineNumber":526,"author":{"gitId":"bobowoo2468"},"content":"     *                              or date-time parsing/format errors","lastModifiedDate":"2021-11-07"},{"lineNumber":527,"author":{"gitId":"YipWayne"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":528,"author":{"gitId":"bobowoo2468"},"content":"    private static void handleFlightException(String[] values) throws TourPlannerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":529,"author":{"gitId":"bobowoo2468"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yy HH:mm\");","lastModifiedDate":"2021-11-03"},{"lineNumber":530,"author":{"gitId":"bobowoo2468"},"content":"        LocalDateTime start;","lastModifiedDate":"2021-11-03"},{"lineNumber":531,"author":{"gitId":"bobowoo2468"},"content":"        LocalDateTime end;","lastModifiedDate":"2021-11-03"},{"lineNumber":532,"author":{"gitId":"bobowoo2468"},"content":"        String startDateString \u003d values[3];","lastModifiedDate":"2021-10-26"},{"lineNumber":533,"author":{"gitId":"bobowoo2468"},"content":"        String endDateString \u003d values[4];","lastModifiedDate":"2021-10-26"},{"lineNumber":534,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":535,"author":{"gitId":"bobowoo2468"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":536,"author":{"gitId":"bobowoo2468"},"content":"            start \u003d LocalDateTime.parse(startDateString, formatter);","lastModifiedDate":"2021-11-03"},{"lineNumber":537,"author":{"gitId":"bobowoo2468"},"content":"            end \u003d LocalDateTime.parse(endDateString, formatter);","lastModifiedDate":"2021-11-03"},{"lineNumber":538,"author":{"gitId":"bobowoo2468"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":539,"author":{"gitId":"bobowoo2468"},"content":"            throw new TourPlannerException(ERROR_FLIGHT_TIME_FORMAT);","lastModifiedDate":"2021-11-03"},{"lineNumber":540,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":541,"author":{"gitId":"bobowoo2468"},"content":"        if (end.isBefore(start) || end.equals(start)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":542,"author":{"gitId":"bobowoo2468"},"content":"            throw new TourPlannerException(ERROR_FLIGHT_TIME_INVERT);","lastModifiedDate":"2021-10-26"},{"lineNumber":543,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":544,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":545,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":546,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":547,"author":{"gitId":"bobowoo2468"},"content":"     * Handles all exceptions regarding inputs for add client command.","lastModifiedDate":"2021-11-07"},{"lineNumber":548,"author":{"gitId":"bobowoo2468"},"content":"     * Prints warnings for erroneous contact number (inclusive of characters other than numbers, length !\u003d 8)","lastModifiedDate":"2021-11-07"},{"lineNumber":549,"author":{"gitId":"bobowoo2468"},"content":"     * Also prints warnings for erroneous email (lacking/more than one \u0027@\u0027 symbol or period \u0027.\u0027, that are commonly","lastModifiedDate":"2021-11-07"},{"lineNumber":550,"author":{"gitId":"bobowoo2468"},"content":"     * found in emails).","lastModifiedDate":"2021-11-07"},{"lineNumber":551,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":552,"author":{"gitId":"bobowoo2468"},"content":"     * @param values the array of values extracted from user\u0027s input after parsing","lastModifiedDate":"2021-11-07"},{"lineNumber":553,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":554,"author":{"gitId":"bobowoo2468"},"content":"    private static void handleClientException(String[] values) {","lastModifiedDate":"2021-11-03"},{"lineNumber":555,"author":{"gitId":"bobowoo2468"},"content":"        String contactNum \u003d values[2];","lastModifiedDate":"2021-10-26"},{"lineNumber":556,"author":{"gitId":"bobowoo2468"},"content":"        String email \u003d values[3];","lastModifiedDate":"2021-10-26"},{"lineNumber":557,"author":{"gitId":"bobowoo2468"},"content":"        int adSymbolCount \u003d (int) email.chars().filter(ch -\u003e ch \u003d\u003d \u0027@\u0027).count();","lastModifiedDate":"2021-11-03"},{"lineNumber":558,"author":{"gitId":"bobowoo2468"},"content":"        int periodCount \u003d (int) email.chars().filter(ch -\u003e ch \u003d\u003d \u0027.\u0027).count();","lastModifiedDate":"2021-11-03"},{"lineNumber":559,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":560,"author":{"gitId":"bobowoo2468"},"content":"        if (adSymbolCount !\u003d 1 || periodCount !\u003d 1) {","lastModifiedDate":"2021-11-03"},{"lineNumber":561,"author":{"gitId":"bobowoo2468"},"content":"            System.out.println(WARNING_EMAIL_FORMAT_WRONG);","lastModifiedDate":"2021-11-06"},{"lineNumber":562,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":563,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":564,"author":{"gitId":"bobowoo2468"},"content":"        boolean isWrongContactNumber \u003d false;","lastModifiedDate":"2021-11-03"},{"lineNumber":565,"author":{"gitId":"bobowoo2468"},"content":"        int contactNumberLength \u003d contactNum.length();","lastModifiedDate":"2021-11-03"},{"lineNumber":566,"author":{"gitId":"bobowoo2468"},"content":"        for (int i \u003d 0; i \u003c contactNumberLength; i++) {","lastModifiedDate":"2021-11-03"},{"lineNumber":567,"author":{"gitId":"bobowoo2468"},"content":"            char ch \u003d contactNum.charAt(i);","lastModifiedDate":"2021-10-26"},{"lineNumber":568,"author":{"gitId":"bobowoo2468"},"content":"            if (!(ch \u003c\u003d \u00279\u0027 \u0026\u0026 ch \u003e\u003d \u00270\u0027)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":569,"author":{"gitId":"bobowoo2468"},"content":"                isWrongContactNumber \u003d true;","lastModifiedDate":"2021-11-03"},{"lineNumber":570,"author":{"gitId":"bobowoo2468"},"content":"                break;","lastModifiedDate":"2021-11-03"},{"lineNumber":571,"author":{"gitId":"bobowoo2468"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":572,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":573,"author":{"gitId":"bobowoo2468"},"content":"        if (isWrongContactNumber) {","lastModifiedDate":"2021-11-03"},{"lineNumber":574,"author":{"gitId":"bobowoo2468"},"content":"            System.out.println(WARNING_CONTACT_NUMBER_WRONG);","lastModifiedDate":"2021-11-06"},{"lineNumber":575,"author":{"gitId":"bobowoo2468"},"content":"        } else if (contactNumberLength \u003c 8) {","lastModifiedDate":"2021-11-03"},{"lineNumber":576,"author":{"gitId":"bobowoo2468"},"content":"            System.out.println(WARNING_SHORT_CONTACT_NUMBER);","lastModifiedDate":"2021-11-06"},{"lineNumber":577,"author":{"gitId":"bobowoo2468"},"content":"        } else if (contactNumberLength \u003e 8) {","lastModifiedDate":"2021-11-03"},{"lineNumber":578,"author":{"gitId":"bobowoo2468"},"content":"            System.out.println(WARNING_LONG_CONTACT_NUMBER);","lastModifiedDate":"2021-11-06"},{"lineNumber":579,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":580,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":581,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":582,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":583,"author":{"gitId":"bobowoo2468"},"content":"     * Parses arguments with respect to the add command.","lastModifiedDate":"2021-11-07"},{"lineNumber":584,"author":{"gitId":"bobowoo2468"},"content":"     * Extract values from user\u0027s input and passes it as an argument to construct Client/Flight/Tour object","lastModifiedDate":"2021-11-06"},{"lineNumber":585,"author":{"gitId":"bobowoo2468"},"content":"     * depending on the identifier.","lastModifiedDate":"2021-11-06"},{"lineNumber":586,"author":{"gitId":"bobowoo2468"},"content":"     * Passes the created object to the specific AddCommand, determined by the identifier.","lastModifiedDate":"2021-11-06"},{"lineNumber":587,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":588,"author":{"gitId":"bobowoo2468"},"content":"     * @param params full user\u0027s argument string","lastModifiedDate":"2021-10-28"},{"lineNumber":589,"author":{"gitId":"bobowoo2468"},"content":"     * @return the specific AddCommand object determined by the command\u0027s identifier","lastModifiedDate":"2021-11-06"},{"lineNumber":590,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if there are missing fields,duplicated or missing prefixes","lastModifiedDate":"2021-10-28"},{"lineNumber":591,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":592,"author":{"gitId":"bobowoo2468"},"content":"    private static Command parseAdd(String params) throws TourPlannerException {","lastModifiedDate":"2021-10-28"},{"lineNumber":593,"author":{"gitId":"bobowoo2468"},"content":"        String[] identifierAndArgs \u003d splitCommandString(params);","lastModifiedDate":"2021-11-06"},{"lineNumber":594,"author":{"gitId":"bobowoo2468"},"content":"        String identifier \u003d identifierAndArgs[IDENTIFIER_INDEX];","lastModifiedDate":"2021-10-28"},{"lineNumber":595,"author":{"gitId":"bobowoo2468"},"content":"        String args \u003d identifierAndArgs[ARGS_INDEX];","lastModifiedDate":"2021-10-28"},{"lineNumber":596,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":597,"author":{"gitId":"bobowoo2468"},"content":"        TreeMap\u003cInteger, String\u003e prefixIndexes \u003d extractPrefixIndexes(args, identifier);","lastModifiedDate":"2021-10-28"},{"lineNumber":598,"author":{"gitId":"bobowoo2468"},"content":"        ArrayList\u003cString\u003e valuesList \u003d extractValuesIntoArray(prefixIndexes, args, identifier);","lastModifiedDate":"2021-10-28"},{"lineNumber":599,"author":{"gitId":"bobowoo2468"},"content":"        String[] values \u003d valuesList.toArray(new String[0]);","lastModifiedDate":"2021-11-04"},{"lineNumber":600,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":601,"author":{"gitId":"bobowoo2468"},"content":"        switch (identifier) {","lastModifiedDate":"2021-10-28"},{"lineNumber":602,"author":{"gitId":"bobowoo2468"},"content":"        case CLIENT_IDENTIFIER:","lastModifiedDate":"2021-10-28"},{"lineNumber":603,"author":{"gitId":"bobowoo2468"},"content":"            handleClientException(values);","lastModifiedDate":"2021-10-28"},{"lineNumber":604,"author":{"gitId":"bobowoo2468"},"content":"            Client client \u003d new Client(values);","lastModifiedDate":"2021-10-28"},{"lineNumber":605,"author":{"gitId":"bobowoo2468"},"content":"            return new AddClientCommand(client);","lastModifiedDate":"2021-10-28"},{"lineNumber":606,"author":{"gitId":"bobowoo2468"},"content":"        case FLIGHT_IDENTIFIER:","lastModifiedDate":"2021-10-28"},{"lineNumber":607,"author":{"gitId":"bobowoo2468"},"content":"            handleFlightException(values);","lastModifiedDate":"2021-10-28"},{"lineNumber":608,"author":{"gitId":"bobowoo2468"},"content":"            Flight flight \u003d new Flight(values);","lastModifiedDate":"2021-10-28"},{"lineNumber":609,"author":{"gitId":"bobowoo2468"},"content":"            return new AddFlightCommand(flight);","lastModifiedDate":"2021-10-28"},{"lineNumber":610,"author":{"gitId":"bobowoo2468"},"content":"        case TOUR_IDENTIFIER:","lastModifiedDate":"2021-10-28"},{"lineNumber":611,"author":{"gitId":"bobowoo2468"},"content":"            handleTourException(values);","lastModifiedDate":"2021-10-28"},{"lineNumber":612,"author":{"gitId":"bobowoo2468"},"content":"            Tour tour \u003d new Tour(values);","lastModifiedDate":"2021-10-28"},{"lineNumber":613,"author":{"gitId":"bobowoo2468"},"content":"            return new AddTourCommand(tour);","lastModifiedDate":"2021-10-28"},{"lineNumber":614,"author":{"gitId":"bobowoo2468"},"content":"        case PACKAGE_IDENTIFIER:","lastModifiedDate":"2021-10-28"},{"lineNumber":615,"author":{"gitId":"bobowoo2468"},"content":"            return new AddClientPackageCommand(values);","lastModifiedDate":"2021-10-28"},{"lineNumber":616,"author":{"gitId":"bobowoo2468"},"content":"        default:","lastModifiedDate":"2021-10-28"},{"lineNumber":617,"author":{"gitId":"bobowoo2468"},"content":"            throw new TourPlannerException(ERROR_MISSING_IDENTIFIER);","lastModifiedDate":"2021-10-28"},{"lineNumber":618,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":619,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":620,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":621,"author":{"gitId":"YipWayne"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":622,"author":{"gitId":"bobowoo2468"},"content":"     * Parses arguments with respect to the bye command.","lastModifiedDate":"2021-11-08"},{"lineNumber":623,"author":{"gitId":"YipWayne"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":624,"author":{"gitId":"YipWayne"},"content":"     * @param params full user\u0027s argument string","lastModifiedDate":"2021-11-08"},{"lineNumber":625,"author":{"gitId":"bobowoo2468"},"content":"     * @return ByeCommand object","lastModifiedDate":"2021-11-08"},{"lineNumber":626,"author":{"gitId":"YipWayne"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":627,"author":{"gitId":"bobowoo2468"},"content":"    private static Command parseBye(String params) {","lastModifiedDate":"2021-11-08"},{"lineNumber":628,"author":{"gitId":"bobowoo2468"},"content":"        if (!params.equals(EMPTY_STRING)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":629,"author":{"gitId":"bobowoo2468"},"content":"            System.out.println(WARNING_EXTRA_INPUT);","lastModifiedDate":"2021-11-08"},{"lineNumber":630,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":631,"author":{"gitId":"bobowoo2468"},"content":"        return new ByeCommand();","lastModifiedDate":"2021-11-08"},{"lineNumber":632,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":633,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":634,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":635,"author":{"gitId":"swongts"},"content":"     * Parses user input, identifies data type to be cutting from based on the command filter,","lastModifiedDate":"2021-11-07"},{"lineNumber":636,"author":{"gitId":"swongts"},"content":"     * and returns the corresponding subclass of Command.","lastModifiedDate":"2021-11-07"},{"lineNumber":637,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":638,"author":{"gitId":"swongts"},"content":"     * @param params user input excluding \"cut\"","lastModifiedDate":"2021-11-07"},{"lineNumber":639,"author":{"gitId":"swongts"},"content":"     * @return command corresponding to the data type of the command filter","lastModifiedDate":"2021-11-07"},{"lineNumber":640,"author":{"gitId":"swongts"},"content":"     * @throws TourPlannerException if command filter is wrong/missing or id to cut is wrong/missing","lastModifiedDate":"2021-11-07"},{"lineNumber":641,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":642,"author":{"gitId":"swongts"},"content":"    private static Command parseCut(String params) throws TourPlannerException {","lastModifiedDate":"2021-10-24"},{"lineNumber":643,"author":{"gitId":"bobowoo2468"},"content":"        String[] identifierAndArgs \u003d splitCommandString(params);","lastModifiedDate":"2021-11-06"},{"lineNumber":644,"author":{"gitId":"bobowoo2468"},"content":"        String identifier \u003d identifierAndArgs[IDENTIFIER_INDEX];","lastModifiedDate":"2021-10-28"},{"lineNumber":645,"author":{"gitId":"bobowoo2468"},"content":"        String args \u003d identifierAndArgs[ARGS_INDEX];","lastModifiedDate":"2021-10-28"},{"lineNumber":646,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":647,"author":{"gitId":"swongts"},"content":"        switch (identifier) {","lastModifiedDate":"2021-10-24"},{"lineNumber":648,"author":{"gitId":"bobowoo2468"},"content":"        case CLIENT_IDENTIFIER:","lastModifiedDate":"2021-10-28"},{"lineNumber":649,"author":{"gitId":"swongts"},"content":"            handleCutException(args);","lastModifiedDate":"2021-11-07"},{"lineNumber":650,"author":{"gitId":"swongts"},"content":"            return new CutClientCommand(args);","lastModifiedDate":"2021-10-25"},{"lineNumber":651,"author":{"gitId":"bobowoo2468"},"content":"        case TOUR_IDENTIFIER:","lastModifiedDate":"2021-10-28"},{"lineNumber":652,"author":{"gitId":"swongts"},"content":"            handleCutException(args);","lastModifiedDate":"2021-11-07"},{"lineNumber":653,"author":{"gitId":"swongts"},"content":"            return new CutTourCommand(args);","lastModifiedDate":"2021-10-25"},{"lineNumber":654,"author":{"gitId":"bobowoo2468"},"content":"        case FLIGHT_IDENTIFIER:","lastModifiedDate":"2021-10-28"},{"lineNumber":655,"author":{"gitId":"swongts"},"content":"            handleCutException(args);","lastModifiedDate":"2021-11-07"},{"lineNumber":656,"author":{"gitId":"swongts"},"content":"            return new CutFlightCommand(args);","lastModifiedDate":"2021-10-25"},{"lineNumber":657,"author":{"gitId":"bobowoo2468"},"content":"        case PACKAGE_IDENTIFIER:","lastModifiedDate":"2021-10-28"},{"lineNumber":658,"author":{"gitId":"swongts"},"content":"            handleCutException(args);","lastModifiedDate":"2021-11-07"},{"lineNumber":659,"author":{"gitId":"swongts"},"content":"            return new CutClientPackageCommand(args);","lastModifiedDate":"2021-10-25"},{"lineNumber":660,"author":{"gitId":"swongts"},"content":"        default:","lastModifiedDate":"2021-10-24"},{"lineNumber":661,"author":{"gitId":"bobowoo2468"},"content":"            throw new TourPlannerException(ERROR_MISSING_IDENTIFIER);","lastModifiedDate":"2021-10-28"},{"lineNumber":662,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":663,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":664,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":665,"author":{"gitId":"swongts"},"content":"    private static void handleCutException(String args) throws TourPlannerException {","lastModifiedDate":"2021-11-07"},{"lineNumber":666,"author":{"gitId":"swongts"},"content":"        if (args.equals(EMPTY_STRING)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":667,"author":{"gitId":"swongts"},"content":"            throw new TourPlannerException(ERROR_MISSING_ID);","lastModifiedDate":"2021-11-07"},{"lineNumber":668,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":669,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":670,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":671,"author":{"gitId":"YipWayne"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":672,"author":{"gitId":"YipWayne"},"content":"     * Parses the parameters given to determine which FindXYZCommand to be called for.","lastModifiedDate":"2021-11-08"},{"lineNumber":673,"author":{"gitId":"YipWayne"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":674,"author":{"gitId":"YipWayne"},"content":"     * @param params full user\u0027s argument string","lastModifiedDate":"2021-11-08"},{"lineNumber":675,"author":{"gitId":"bobowoo2468"},"content":"     * @return a FindXYZCommand of a specific data type (client, tour, flight, client package)","lastModifiedDate":"2021-11-08"},{"lineNumber":676,"author":{"gitId":"YipWayne"},"content":"     * @throws TourPlannerException if there are missing fields, duplicated or missing prefixes","lastModifiedDate":"2021-11-08"},{"lineNumber":677,"author":{"gitId":"YipWayne"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":678,"author":{"gitId":"YipWayne"},"content":"    private static Command parseFind(String params) throws TourPlannerException {","lastModifiedDate":"2021-10-23"},{"lineNumber":679,"author":{"gitId":"YipWayne"},"content":"        String[] prefixSuffix \u003d params.split(\" \", 2);","lastModifiedDate":"2021-10-28"},{"lineNumber":680,"author":{"gitId":"YipWayne"},"content":"        if (prefixSuffix.length \u003c 2) {","lastModifiedDate":"2021-10-28"},{"lineNumber":681,"author":{"gitId":"YipWayne"},"content":"            throw new TourPlannerException(ERROR_MISSING_IDENTIFIER);","lastModifiedDate":"2021-11-08"},{"lineNumber":682,"author":{"gitId":"YipWayne"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":683,"author":{"gitId":"bobowoo2468"},"content":"        String prefix \u003d prefixSuffix[IDENTIFIER_INDEX];","lastModifiedDate":"2021-10-28"},{"lineNumber":684,"author":{"gitId":"bobowoo2468"},"content":"        String suffix \u003d prefixSuffix[ARGS_INDEX];","lastModifiedDate":"2021-10-28"},{"lineNumber":685,"author":{"gitId":"YipWayne"},"content":"        switch (prefix) {","lastModifiedDate":"2021-10-23"},{"lineNumber":686,"author":{"gitId":"bobowoo2468"},"content":"        case CLIENT_IDENTIFIER:","lastModifiedDate":"2021-10-28"},{"lineNumber":687,"author":{"gitId":"YipWayne"},"content":"            return new FindClientCommand(suffix);","lastModifiedDate":"2021-10-23"},{"lineNumber":688,"author":{"gitId":"bobowoo2468"},"content":"        case TOUR_IDENTIFIER:","lastModifiedDate":"2021-10-28"},{"lineNumber":689,"author":{"gitId":"YipWayne"},"content":"            return new FindTourCommand(suffix);","lastModifiedDate":"2021-10-23"},{"lineNumber":690,"author":{"gitId":"bobowoo2468"},"content":"        case FLIGHT_IDENTIFIER:","lastModifiedDate":"2021-10-28"},{"lineNumber":691,"author":{"gitId":"YipWayne"},"content":"            return new FindFlightCommand(suffix);","lastModifiedDate":"2021-10-23"},{"lineNumber":692,"author":{"gitId":"YipWayne"},"content":"        default:","lastModifiedDate":"2021-10-23"},{"lineNumber":693,"author":{"gitId":"bobowoo2468"},"content":"            throw new TourPlannerException(ERROR_MISSING_IDENTIFIER);","lastModifiedDate":"2021-10-28"},{"lineNumber":694,"author":{"gitId":"YipWayne"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":695,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":696,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":697,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":698,"author":{"gitId":"bobowoo2468"},"content":"     * Parses arguments with respect to the help command.","lastModifiedDate":"2021-11-08"},{"lineNumber":699,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":700,"author":{"gitId":"bobowoo2468"},"content":"     * @param params full user\u0027s argument string","lastModifiedDate":"2021-11-08"},{"lineNumber":701,"author":{"gitId":"bobowoo2468"},"content":"     * @return HelpCommand object","lastModifiedDate":"2021-11-08"},{"lineNumber":702,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":703,"author":{"gitId":"bobowoo2468"},"content":"    private static Command parseHelp(String params) {","lastModifiedDate":"2021-11-08"},{"lineNumber":704,"author":{"gitId":"bobowoo2468"},"content":"        if (!params.equals(EMPTY_STRING)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":705,"author":{"gitId":"bobowoo2468"},"content":"            System.out.println(WARNING_EXTRA_INPUT);","lastModifiedDate":"2021-11-08"},{"lineNumber":706,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":707,"author":{"gitId":"bobowoo2468"},"content":"        return new HelpCommand();","lastModifiedDate":"2021-11-08"},{"lineNumber":708,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":709,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":710,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":711,"author":{"gitId":"bobowoo2468"},"content":"     * Parses the parameters given to determine which ListXYZCommand to be called for.","lastModifiedDate":"2021-11-08"},{"lineNumber":712,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":713,"author":{"gitId":"bobowoo2468"},"content":"     * @param params full user\u0027s argument string","lastModifiedDate":"2021-11-08"},{"lineNumber":714,"author":{"gitId":"bobowoo2468"},"content":"     * @return a ListXYZCommand of a specific data type (client, tour, flight, client package)","lastModifiedDate":"2021-11-08"},{"lineNumber":715,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if there are missing fields, duplicated or missing prefixes","lastModifiedDate":"2021-11-08"},{"lineNumber":716,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":717,"author":{"gitId":"bobowoo2468"},"content":"    private static Command parseList(String params) throws TourPlannerException {","lastModifiedDate":"2021-11-08"},{"lineNumber":718,"author":{"gitId":"bobowoo2468"},"content":"        switch (params) {","lastModifiedDate":"2021-11-08"},{"lineNumber":719,"author":{"gitId":"bobowoo2468"},"content":"        case CLIENT_IDENTIFIER:","lastModifiedDate":"2021-11-08"},{"lineNumber":720,"author":{"gitId":"bobowoo2468"},"content":"            return new ListClientCommand();","lastModifiedDate":"2021-11-08"},{"lineNumber":721,"author":{"gitId":"bobowoo2468"},"content":"        case TOUR_IDENTIFIER:","lastModifiedDate":"2021-11-08"},{"lineNumber":722,"author":{"gitId":"bobowoo2468"},"content":"            return new ListTourCommand();","lastModifiedDate":"2021-11-08"},{"lineNumber":723,"author":{"gitId":"bobowoo2468"},"content":"        case FLIGHT_IDENTIFIER:","lastModifiedDate":"2021-11-08"},{"lineNumber":724,"author":{"gitId":"bobowoo2468"},"content":"            return new ListFlightCommand();","lastModifiedDate":"2021-11-08"},{"lineNumber":725,"author":{"gitId":"bobowoo2468"},"content":"        case PACKAGE_IDENTIFIER:","lastModifiedDate":"2021-11-08"},{"lineNumber":726,"author":{"gitId":"bobowoo2468"},"content":"            return new ListClientPackageCommand();","lastModifiedDate":"2021-11-08"},{"lineNumber":727,"author":{"gitId":"bobowoo2468"},"content":"        default:","lastModifiedDate":"2021-11-08"},{"lineNumber":728,"author":{"gitId":"bobowoo2468"},"content":"            throw new TourPlannerException(ERROR_MISSING_IDENTIFIER);","lastModifiedDate":"2021-11-08"},{"lineNumber":729,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":730,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":731,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":732,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":733,"author":{"gitId":"bobowoo2468"},"content":"     * Parses arguments with respect to the sort command.","lastModifiedDate":"2021-10-28"},{"lineNumber":734,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":735,"author":{"gitId":"bobowoo2468"},"content":"     * @param params full user\u0027s argument string","lastModifiedDate":"2021-10-28"},{"lineNumber":736,"author":{"gitId":"bobowoo2468"},"content":"     * @return the specific SortCommand object determined by the command\u0027s identifier","lastModifiedDate":"2021-11-06"},{"lineNumber":737,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if there are missing fields,duplicated or missing prefixes","lastModifiedDate":"2021-10-28"},{"lineNumber":738,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":739,"author":{"gitId":"bobowoo2468"},"content":"    private static Command parseSort(String params) throws TourPlannerException {","lastModifiedDate":"2021-10-28"},{"lineNumber":740,"author":{"gitId":"bobowoo2468"},"content":"        String[] identifierAndFilter \u003d splitCommandString(params);","lastModifiedDate":"2021-11-06"},{"lineNumber":741,"author":{"gitId":"bobowoo2468"},"content":"        String identifier \u003d identifierAndFilter[IDENTIFIER_INDEX];","lastModifiedDate":"2021-10-28"},{"lineNumber":742,"author":{"gitId":"bobowoo2468"},"content":"        String filter \u003d identifierAndFilter[ARGS_INDEX];","lastModifiedDate":"2021-10-28"},{"lineNumber":743,"author":{"gitId":"bobowoo2468"},"content":"        switch (identifier) {","lastModifiedDate":"2021-10-25"},{"lineNumber":744,"author":{"gitId":"bobowoo2468"},"content":"        case TOUR_IDENTIFIER:","lastModifiedDate":"2021-10-28"},{"lineNumber":745,"author":{"gitId":"bobowoo2468"},"content":"            return new SortTourCommand(filter);","lastModifiedDate":"2021-10-25"},{"lineNumber":746,"author":{"gitId":"bobowoo2468"},"content":"        case CLIENT_IDENTIFIER:","lastModifiedDate":"2021-10-28"},{"lineNumber":747,"author":{"gitId":"bobowoo2468"},"content":"            return new SortClientCommand(filter);","lastModifiedDate":"2021-10-25"},{"lineNumber":748,"author":{"gitId":"bobowoo2468"},"content":"        case FLIGHT_IDENTIFIER:","lastModifiedDate":"2021-10-28"},{"lineNumber":749,"author":{"gitId":"bobowoo2468"},"content":"            return new SortFlightCommand(filter);","lastModifiedDate":"2021-10-26"},{"lineNumber":750,"author":{"gitId":"bobowoo2468"},"content":"        default:","lastModifiedDate":"2021-10-25"},{"lineNumber":751,"author":{"gitId":"bobowoo2468"},"content":"            throw new TourPlannerException(ERROR_MISSING_IDENTIFIER);","lastModifiedDate":"2021-10-28"},{"lineNumber":752,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":753,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":754,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":755,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":756,"author":{"gitId":"YipWayne"},"content":"   ","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"YipWayne":39,"Demonshaha":1,"bobowoo2468":625,"swongts":91}},{"path":"src/main/java/seedu/duke/TourPlanner.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Demonshaha"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.data.ClientList;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.data.ClientPackageList;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.data.FlightList;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.data.TourList;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.storage.ClientPackageStorage;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.storage.ClientStorage;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.storage.FlightStorage;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.storage.TourStorage;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"Demonshaha"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"Demonshaha"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"Demonshaha"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":" * Main entry-point of the TourPlanner application.","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":" * Initialises the application and starts interaction with application user.","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"Demonshaha"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"public class TourPlanner {","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"    private static Ui ui;","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"    private static ClientList clients;","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"    private static TourList tours;","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"    private static FlightList flights;","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"    private static ClientPackageList clientPackages;","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"    private static ClientPackageStorage clientPackageStorage;","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"swongts"},"content":"    private static ClientStorage clientStorage;","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"    private static TourStorage tourStorage;","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"    private static FlightStorage flightStorage;","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"Demonshaha"},"content":"    private static final Logger logr \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"    public TourPlanner() {","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"     * Main method of TourPlanner.","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"     * Initialises Ui and ClientList objects.","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"     * Reads, parses and executes command from user\u0027s input until exit condition is met.","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"bobowoo2468"},"content":"     * @param args not used","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"bobowoo2468"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"bobowoo2468"},"content":"        loadLogger();","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"swongts"},"content":"        loadStorage();","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"swongts"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"swongts"},"content":"        runCommandLoopUntilExitCommand();","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"bobowoo2468"},"content":"     * Sets up logger for TourPlanner.","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"bobowoo2468"},"content":"    private static void loadLogger() {","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"bobowoo2468"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"bobowoo2468"},"content":"        logr.setLevel(Level.ALL);","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"bobowoo2468"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"bobowoo2468"},"content":"        consoleHandler.setLevel(Level.OFF);","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"bobowoo2468"},"content":"        logr.addHandler(consoleHandler);","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"bobowoo2468"},"content":"        try {","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"bobowoo2468"},"content":"            FileHandler fileHandler \u003d new FileHandler(\"TourPlannerLogger.log\");","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"bobowoo2468"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"bobowoo2468"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"bobowoo2468"},"content":"            logr.addHandler(fileHandler);","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"bobowoo2468"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"bobowoo2468"},"content":"            logr.log(Level.SEVERE, \"File logger not working\", e);","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"swongts"},"content":"     * Populates the ClientList, TourList, FlightList and ClientPackageList from previously stored files.","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":79,"author":{"gitId":"swongts"},"content":"    private static void loadStorage() {","lastModifiedDate":"2021-11-08"},{"lineNumber":80,"author":{"gitId":"bobowoo2468"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"swongts"},"content":"            initialize();","lastModifiedDate":"2021-11-08"},{"lineNumber":82,"author":{"gitId":"swongts"},"content":"            loadClientTourFlight();","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"swongts"},"content":"            loadClientPackage();","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"swongts"},"content":"        } catch (TourPlannerException e) {","lastModifiedDate":"2021-11-08"},{"lineNumber":85,"author":{"gitId":"swongts"},"content":"            ui.showFileError();","lastModifiedDate":"2021-11-08"},{"lineNumber":86,"author":{"gitId":"swongts"},"content":"            System.exit(0);","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":88,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":89,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"swongts"},"content":"    private static void initialize() throws TourPlannerException {","lastModifiedDate":"2021-11-08"},{"lineNumber":91,"author":{"gitId":"swongts"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"bobowoo2468"},"content":"        clientPackageStorage \u003d new ClientPackageStorage();","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"bobowoo2468"},"content":"        clientStorage \u003d new ClientStorage();","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"bobowoo2468"},"content":"        tourStorage \u003d new TourStorage();","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"bobowoo2468"},"content":"        flightStorage \u003d new FlightStorage();","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":97,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":99,"author":{"gitId":"swongts"},"content":"     * Populates the ClientList, TourList, FlightList from previously stored files.","lastModifiedDate":"2021-11-08"},{"lineNumber":100,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":101,"author":{"gitId":"swongts"},"content":"     * @throws TourPlannerException if there are IOException, FileNotFoundException for the storage file","lastModifiedDate":"2021-11-08"},{"lineNumber":102,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":103,"author":{"gitId":"swongts"},"content":"    private static void loadClientTourFlight() throws TourPlannerException {","lastModifiedDate":"2021-11-08"},{"lineNumber":104,"author":{"gitId":"bobowoo2468"},"content":"        clientStorage.loadFile();","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"swongts"},"content":"        clients \u003d clientStorage.getClients();","lastModifiedDate":"2021-11-08"},{"lineNumber":106,"author":{"gitId":"bobowoo2468"},"content":"        tourStorage.loadFile();","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"swongts"},"content":"        tours \u003d tourStorage.getTours();","lastModifiedDate":"2021-11-08"},{"lineNumber":108,"author":{"gitId":"bobowoo2468"},"content":"        flightStorage.loadFile();","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"swongts"},"content":"        flights \u003d flightStorage.getFlights();","lastModifiedDate":"2021-11-08"},{"lineNumber":110,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":113,"author":{"gitId":"swongts"},"content":"     * Populates ClientPackageList from previously stored files.","lastModifiedDate":"2021-11-08"},{"lineNumber":114,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":115,"author":{"gitId":"swongts"},"content":"     * @throws TourPlannerException if there are IOException, FileNotFoundException for the storage file","lastModifiedDate":"2021-11-08"},{"lineNumber":116,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":117,"author":{"gitId":"swongts"},"content":"    private static void loadClientPackage() throws TourPlannerException {","lastModifiedDate":"2021-11-08"},{"lineNumber":118,"author":{"gitId":"swongts"},"content":"        clientPackageStorage.loadFile(clients, tours, flights, ui);","lastModifiedDate":"2021-11-06"},{"lineNumber":119,"author":{"gitId":"swongts"},"content":"        clientPackages \u003d clientPackageStorage.getClientPackages();","lastModifiedDate":"2021-11-08"},{"lineNumber":120,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":121,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":122,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":123,"author":{"gitId":"swongts"},"content":"     * Loop that reads command from Ui, parses command and executes command.","lastModifiedDate":"2021-11-08"},{"lineNumber":124,"author":{"gitId":"swongts"},"content":"     * Loop ends when ByeCommand is called and isExit is set to true.","lastModifiedDate":"2021-11-08"},{"lineNumber":125,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":126,"author":{"gitId":"swongts"},"content":"    private static void runCommandLoopUntilExitCommand() {","lastModifiedDate":"2021-11-08"},{"lineNumber":127,"author":{"gitId":"swongts"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-11-08"},{"lineNumber":128,"author":{"gitId":"swongts"},"content":"        while (!isExit) {","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"swongts"},"content":"            String command \u003d ui.readCommand();","lastModifiedDate":"2021-11-08"},{"lineNumber":130,"author":{"gitId":"YipWayne"},"content":"            try {","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"bobowoo2468"},"content":"                Command specificCommand \u003d Parser.parse(command);","lastModifiedDate":"2021-10-14"},{"lineNumber":132,"author":{"gitId":"swongts"},"content":"                specificCommand.setData(clients, flights, tours, clientPackages, ui);","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"swongts"},"content":"                specificCommand.execute();","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"bobowoo2468"},"content":"                isExit \u003d specificCommand.isExit();","lastModifiedDate":"2021-10-14"},{"lineNumber":135,"author":{"gitId":"swongts"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2021-11-08"},{"lineNumber":136,"author":{"gitId":"swongts"},"content":"                logr.log(Level.SEVERE, e.getMessage());","lastModifiedDate":"2021-11-08"},{"lineNumber":137,"author":{"gitId":"bobowoo2468"},"content":"            } catch (TourPlannerException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"bobowoo2468"},"content":"                ui.show(e.getMessage());","lastModifiedDate":"2021-11-08"},{"lineNumber":139,"author":{"gitId":"bobowoo2468"},"content":"                logr.log(Level.WARNING, e.getMessage());","lastModifiedDate":"2021-11-08"},{"lineNumber":140,"author":{"gitId":"YipWayne"},"content":"            } finally {","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"YipWayne"},"content":"                ui.showLine();","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"swongts"},"content":"                saveToStorage();","lastModifiedDate":"2021-11-08"},{"lineNumber":143,"author":{"gitId":"swongts"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":144,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":145,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":146,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":147,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":148,"author":{"gitId":"swongts"},"content":"     * Saves the ClientList, FlightList, TourList and ClientPackageList to text files in the data folder.","lastModifiedDate":"2021-11-08"},{"lineNumber":149,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":150,"author":{"gitId":"swongts"},"content":"    private static void saveToStorage() {","lastModifiedDate":"2021-11-08"},{"lineNumber":151,"author":{"gitId":"bobowoo2468"},"content":"        clientStorage.saveFile();","lastModifiedDate":"2021-11-04"},{"lineNumber":152,"author":{"gitId":"bobowoo2468"},"content":"        flightStorage.saveFile();","lastModifiedDate":"2021-11-04"},{"lineNumber":153,"author":{"gitId":"bobowoo2468"},"content":"        tourStorage.saveFile();","lastModifiedDate":"2021-11-04"},{"lineNumber":154,"author":{"gitId":"bobowoo2468"},"content":"        clientPackageStorage.saveFile();","lastModifiedDate":"2021-11-04"},{"lineNumber":155,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":157,"author":{"gitId":"Demonshaha"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"YipWayne":10,"Demonshaha":12,"bobowoo2468":63,"swongts":72}},{"path":"src/main/java/seedu/duke/TourPlannerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":" * Represents a generalised error thrown when there are erroneous/out-of-bounds/missing inputs.","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"public class TourPlannerException extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"     * Class constructor for TourPlannerException.","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"     * Returns an error message to the user to inform user of error.","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"     * @param errorMessage the customised error message corresponding to the error made","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"    public TourPlannerException(String errorMessage) {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"        super(errorMessage);","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"YipWayne":3,"bobowoo2468":13}},{"path":"src/main/java/seedu/duke/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.Client;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.ClientList;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.Tour;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.TourList;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.Flight;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.FlightList;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.ClientPackage;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.ClientPackageList;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"YipWayne"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":" * Text UI of the application.","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"YipWayne"},"content":"public class Ui {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"    public static final String ADD_CLIENT_MESSAGE \u003d \"Client has been added:\";","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"    public static final String ADD_FLIGHT_MESSAGE \u003d \"Flight has been added:\";","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"    public static final String ADD_TOUR_MESSAGE \u003d \"Tour has been added:\";","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"    public static final String ADD_CLIENT_PACKAGE_MESSAGE \u003d \"Client package has been added:\";","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"    public static final String CUT_CLIENT_MESSAGE \u003d \"Client has been deleted:\";","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"    public static final String CUT_FLIGHT_MESSAGE \u003d \"Flight has been deleted:\";","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"    public static final String CUT_TOUR_MESSAGE \u003d \"Tour has been deleted:\";","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"    public static final String CUT_CLIENT_PACKAGE_MESSAGE \u003d \"Client package has been deleted:\";","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"    public static final String LIST_NO_MESSAGE \u003d \"I\u0027m sorry, there seems to be no \";","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"    public static final String LIST_MESSAGE \u003d \"Here is a list of all \";","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"    public static final String FIND_FAIL_MESSAGE_LEFT \u003d \"I\u0027m sorry, there seems to be no \";","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"    public static final String FIND_SUCCESS_MESSAGE_LEFT \u003d \"This is the \";","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"    public static final String FIND_MESSAGE_RIGHT \u003d \"that matches your search\";","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"    public static final String BYE_MESSAGE \u003d \"Thanks for using TourPlanner. Goodbye!\";","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"    public static final String SORT_TOUR_ID_MESSAGE \u003d \"Sorted by tour id alphabetically\";","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"    public static final String SORT_TOUR_NAME_MESSAGE \u003d \"Sorted by tour name alphabetically\";","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"    public static final String SORT_TOUR_PRICE_MESSAGE \u003d \"Sorted by price in ascending order\";","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"    public static final String SORT_CLIENT_ID_MESSAGE \u003d \"Sorted by client id alphabetically\";","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"    public static final String SORT_CLIENT_NAME_MESSAGE \u003d \"Sorted by client name alphabetically\";","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"    public static final String SORT_FLIGHT_BY_DEPARTURE_MESSAGE \u003d \"Sorted by departing flight times\";","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"    public static final String SORT_FLIGHT_BY_ARRIVAL_MESSAGE \u003d \"Sorted by returning flight times\";","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"    public static final String SORT_FLIGHT_ID_MESSAGE \u003d \"Sorted by flight id alphabetically\";","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"swongts"},"content":"    private static final String FILE_CORRUPT \u003d \"TourPlanner can\u0027t read your corrupted file.\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"swongts"},"content":"            + \"Please delete your \u0027data\u0027 folder and try again.\";","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"bobowoo2468"},"content":"    private static final Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"bobowoo2468"},"content":"     * Empty Ui class constructor.","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"Demonshaha"},"content":"    public Ui() {","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"Demonshaha"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"swongts"},"content":"     * Shows a divider to the user.","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"bobowoo2468"},"content":"    public void showLine() {","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"bobowoo2468"},"content":"        show(\"____________________________________________________________\");","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"swongts"},"content":"     * Shows a welcome message to the user.","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"YipWayne"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"YipWayne"},"content":"        showLine();","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"YipWayne"},"content":"        String logo \u003d \"  _____                  _____  _\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"YipWayne"},"content":"                + \" |_   _| ___  _  _  ___ |  _  || | ___   _____  _____  ___  ___\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"YipWayne"},"content":"                + \"   | |  |   || || ||  _||  ___|| ||   \\\\ |  _  ||  _  || -_||  _|\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"YipWayne"},"content":"                + \"   | |  | | || || || |  | |    | || |  || | | || | | || |_ | |\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"YipWayne"},"content":"                + \"   |_|  |___||____||_|  |_|    |_||___|||_| |_||_| |_||___||_|\\n\";","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"YipWayne"},"content":"        String greet \u003d \"Hello, Welcome to TourPlanner!\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"YipWayne"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"bobowoo2468"},"content":"        show(logo);","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"swongts"},"content":"        show(greet);","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"YipWayne"},"content":"        showLine();","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"swongts"},"content":"     * Shows a help message to the user, which includes all available commands in TourPlanner.","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"swongts"},"content":"    public void showHelp() {","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"swongts"},"content":"        String add \u003d \"add: Add information of all data types into the database.\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"swongts"},"content":"                + \"Prefixes can be input in any order.\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"swongts"},"content":"                + \"   Add client: add -c CLIENT_ID /n NAME /cn CONTACT_NUM /m EMAIL\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"swongts"},"content":"                + \"   Add flight: add -f FLIGHT_ID /d DEPART_DESTINATION /r RETURN_DESTINATION\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"swongts"},"content":"                + \"               /dd DEPARTURE_DATETIME /rd RETURN_DATETIME\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"swongts"},"content":"                + \"   Add tour: add -t TOUR_ID /n DEPART_DESTINATION /p TOUR_PRICE\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"swongts"},"content":"                + \"   Add client package: add -p PACKAGE_ID /c CLIENT_ID /t TOUR_ID /f FLIGHT_ID\\n\\n\";","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"swongts"},"content":"        String list \u003d \"list: Shows a list of all available entries of a specific data type, along with their \"","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"swongts"},"content":"                + \"respective fields.\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"swongts"},"content":"                + \"   List client: list -c\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"swongts"},"content":"                + \"   List flight: list -f\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"swongts"},"content":"                + \"   List tour: list -t\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"swongts"},"content":"                + \"   List client package: list -p\\n\\n\";","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"swongts"},"content":"        String cut \u003d \"cut: Deletes entry of a certain data type and all client packages corresponding to the entry.\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"swongts"},"content":"                + \"   Cut client: cut -c CLIENT_ID\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"swongts"},"content":"                + \"   Cut flight: cut -f FLIGHT_ID\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"swongts"},"content":"                + \"   Cut tour: cut -t TOUR_ID\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"swongts"},"content":"                + \"   Cut client package: cut -p PACKAGE_ID\\n\\n\";","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"swongts"},"content":"        String find \u003d \"find: Finds specific entry of data type, returns the entry and other relevant information.\\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":104,"author":{"gitId":"swongts"},"content":"                + \"   Find client: find -c CLIENT_NAME\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"swongts"},"content":"                + \"   Find flight: find -f FLIGHT_ID\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"swongts"},"content":"                + \"   Find tour: find -t TOUR_ID\\n\\n\";","lastModifiedDate":"2021-11-06"},{"lineNumber":107,"author":{"gitId":"swongts"},"content":"        String sort \u003d \"sort: Sorts entries in the data type based on the criteria.\\n \"","lastModifiedDate":"2021-11-06"},{"lineNumber":108,"author":{"gitId":"swongts"},"content":"                + \"   Sort client:\\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":109,"author":{"gitId":"swongts"},"content":"                + \"      Sort by id: sort -c /id\\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":110,"author":{"gitId":"swongts"},"content":"                + \"      Sort by name: sort -c /n\\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":111,"author":{"gitId":"swongts"},"content":"                + \"   Sort flight:\\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":112,"author":{"gitId":"swongts"},"content":"                + \"      Sort by id: sort -f /id\\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":113,"author":{"gitId":"swongts"},"content":"                + \"      Sort by departure date: sort -f /d\\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":114,"author":{"gitId":"swongts"},"content":"                + \"      Sort by return date: sort -f /r\\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":115,"author":{"gitId":"swongts"},"content":"                + \"   Sort tour:\\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":116,"author":{"gitId":"swongts"},"content":"                + \"      Sort by id: sort -t /id\\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":117,"author":{"gitId":"swongts"},"content":"                + \"      Sort by name: sort -t /n\\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":118,"author":{"gitId":"swongts"},"content":"                + \"      Sort by price: sort -t /p\\n\\n\";","lastModifiedDate":"2021-11-06"},{"lineNumber":119,"author":{"gitId":"swongts"},"content":"        String bye \u003d \"bye: Exits the program.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":120,"author":{"gitId":"swongts"},"content":"        show(add + list + cut + find + sort + bye);","lastModifiedDate":"2021-11-06"},{"lineNumber":121,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":122,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":123,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"bobowoo2468"},"content":"     * Prompts for user\u0027s input and read\u0027s the text entered by the user.","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"bobowoo2468"},"content":"     * @return full input entered by the user","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"YipWayne"},"content":"    public String readCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"YipWayne"},"content":"        return in.nextLine();","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":133,"author":{"gitId":"bobowoo2468"},"content":"     * Outputs to the CLI the text to show the user.","lastModifiedDate":"2021-10-14"},{"lineNumber":134,"author":{"gitId":"bobowoo2468"},"content":"     * Creates a newline as well.","lastModifiedDate":"2021-10-14"},{"lineNumber":135,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":136,"author":{"gitId":"bobowoo2468"},"content":"     * @param textToShow the output text intended for the user","lastModifiedDate":"2021-10-14"},{"lineNumber":137,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":138,"author":{"gitId":"YipWayne"},"content":"    public void show(String textToShow) {","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"YipWayne"},"content":"        System.out.print(textToShow + System.lineSeparator());","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":143,"author":{"gitId":"bobowoo2468"},"content":"     * Ui response to cut command.","lastModifiedDate":"2021-10-28"},{"lineNumber":144,"author":{"gitId":"bobowoo2468"},"content":"     * Checks the type of object before showing a customised message for deleting the specific object.","lastModifiedDate":"2021-10-28"},{"lineNumber":145,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":146,"author":{"gitId":"swongts"},"content":"     * @param object the object that was cut","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":148,"author":{"gitId":"swongts"},"content":"    public void showCut(Object object) {","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"bobowoo2468"},"content":"        if (object instanceof Client) {","lastModifiedDate":"2021-10-28"},{"lineNumber":150,"author":{"gitId":"bobowoo2468"},"content":"            show(CUT_CLIENT_MESSAGE + \"\\n\" + object);","lastModifiedDate":"2021-10-28"},{"lineNumber":151,"author":{"gitId":"bobowoo2468"},"content":"        } else if (object instanceof Flight) {","lastModifiedDate":"2021-10-28"},{"lineNumber":152,"author":{"gitId":"bobowoo2468"},"content":"            show(CUT_FLIGHT_MESSAGE + \"\\n\" + object);","lastModifiedDate":"2021-10-28"},{"lineNumber":153,"author":{"gitId":"bobowoo2468"},"content":"        } else if (object instanceof Tour) {","lastModifiedDate":"2021-10-28"},{"lineNumber":154,"author":{"gitId":"bobowoo2468"},"content":"            show(CUT_TOUR_MESSAGE + \"\\n\" + object);","lastModifiedDate":"2021-10-28"},{"lineNumber":155,"author":{"gitId":"bobowoo2468"},"content":"        } else if (object instanceof ClientPackage) {","lastModifiedDate":"2021-10-28"},{"lineNumber":156,"author":{"gitId":"bobowoo2468"},"content":"            show(CUT_CLIENT_PACKAGE_MESSAGE + \"\\n\" + object);","lastModifiedDate":"2021-10-28"},{"lineNumber":157,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":158,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":159,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":160,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":161,"author":{"gitId":"bobowoo2468"},"content":"     * Ui response to add command.","lastModifiedDate":"2021-10-28"},{"lineNumber":162,"author":{"gitId":"bobowoo2468"},"content":"     * Checks the type of object before showing a customised message for deleting the specific object.","lastModifiedDate":"2021-10-28"},{"lineNumber":163,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":164,"author":{"gitId":"bobowoo2468"},"content":"     * @param object the object that was cut","lastModifiedDate":"2021-10-28"},{"lineNumber":165,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":166,"author":{"gitId":"bobowoo2468"},"content":"    public void showAdd(Object object) {","lastModifiedDate":"2021-10-28"},{"lineNumber":167,"author":{"gitId":"bobowoo2468"},"content":"        if (object instanceof Client) {","lastModifiedDate":"2021-10-28"},{"lineNumber":168,"author":{"gitId":"bobowoo2468"},"content":"            show(ADD_CLIENT_MESSAGE + \"\\n\" + object);","lastModifiedDate":"2021-10-28"},{"lineNumber":169,"author":{"gitId":"bobowoo2468"},"content":"        } else if (object instanceof Flight) {","lastModifiedDate":"2021-10-28"},{"lineNumber":170,"author":{"gitId":"bobowoo2468"},"content":"            show(ADD_FLIGHT_MESSAGE + \"\\n\" + object);","lastModifiedDate":"2021-10-28"},{"lineNumber":171,"author":{"gitId":"bobowoo2468"},"content":"        } else if (object instanceof Tour) {","lastModifiedDate":"2021-10-28"},{"lineNumber":172,"author":{"gitId":"bobowoo2468"},"content":"            show(ADD_TOUR_MESSAGE + \"\\n\" + object);","lastModifiedDate":"2021-10-28"},{"lineNumber":173,"author":{"gitId":"bobowoo2468"},"content":"        } else if (object instanceof ClientPackage) {","lastModifiedDate":"2021-10-28"},{"lineNumber":174,"author":{"gitId":"bobowoo2468"},"content":"            show(ADD_CLIENT_PACKAGE_MESSAGE + \"\\n\" + object);","lastModifiedDate":"2021-10-28"},{"lineNumber":175,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":176,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":177,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":178,"author":{"gitId":"YipWayne"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":179,"author":{"gitId":"YipWayne"},"content":"     * Ui response to ListClientCommand.","lastModifiedDate":"2021-11-08"},{"lineNumber":180,"author":{"gitId":"YipWayne"},"content":"     * Shows all clients in the clientList on the terminal.","lastModifiedDate":"2021-11-08"},{"lineNumber":181,"author":{"gitId":"YipWayne"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":182,"author":{"gitId":"YipWayne"},"content":"     * @param clients the ClientList from which the clients are obtained from.","lastModifiedDate":"2021-11-08"},{"lineNumber":183,"author":{"gitId":"YipWayne"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":184,"author":{"gitId":"YipWayne"},"content":"    public void showListClient(ClientList clients) {","lastModifiedDate":"2021-10-22"},{"lineNumber":185,"author":{"gitId":"YipWayne"},"content":"        int count \u003d clients.getClientCount();","lastModifiedDate":"2021-10-22"},{"lineNumber":186,"author":{"gitId":"YipWayne"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2021-10-22"},{"lineNumber":187,"author":{"gitId":"bobowoo2468"},"content":"            show(LIST_NO_MESSAGE + \"clients\");","lastModifiedDate":"2021-10-24"},{"lineNumber":188,"author":{"gitId":"YipWayne"},"content":"            return;","lastModifiedDate":"2021-10-22"},{"lineNumber":189,"author":{"gitId":"YipWayne"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":190,"author":{"gitId":"bobowoo2468"},"content":"        show(LIST_MESSAGE + \"clients:\");","lastModifiedDate":"2021-10-24"},{"lineNumber":191,"author":{"gitId":"YipWayne"},"content":"        for (int i \u003d 1; i \u003c\u003d count; i++) {","lastModifiedDate":"2021-10-22"},{"lineNumber":192,"author":{"gitId":"bobowoo2468"},"content":"            Client currClient \u003d clients.getClientByIndex(i - 1);","lastModifiedDate":"2021-10-30"},{"lineNumber":193,"author":{"gitId":"bobowoo2468"},"content":"            show(i + \". \" + currClient + \"\\n\");","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"YipWayne"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":195,"author":{"gitId":"bobowoo2468"},"content":"        show(\"Total Clients: \" + count);","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":197,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":198,"author":{"gitId":"YipWayne"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":199,"author":{"gitId":"YipWayne"},"content":"     * Ui response to FindClientCommand.","lastModifiedDate":"2021-11-08"},{"lineNumber":200,"author":{"gitId":"YipWayne"},"content":"     * Shows specific client(s) based on a susbtring, as well as the client packages they are a part of.","lastModifiedDate":"2021-11-08"},{"lineNumber":201,"author":{"gitId":"YipWayne"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":202,"author":{"gitId":"YipWayne"},"content":"     * @param clients        the ClientList from which the clients are obtained from.","lastModifiedDate":"2021-11-08"},{"lineNumber":203,"author":{"gitId":"YipWayne"},"content":"     * @param clientPackages the ClientPackageList from which the client packages of the client are obtained from.","lastModifiedDate":"2021-11-08"},{"lineNumber":204,"author":{"gitId":"YipWayne"},"content":"     * @param substring      the substring used to obtain the specific client(s).","lastModifiedDate":"2021-11-08"},{"lineNumber":205,"author":{"gitId":"YipWayne"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":206,"author":{"gitId":"YipWayne"},"content":"    public void showFindClient(ClientList clients, ClientPackageList clientPackages, String substring) {","lastModifiedDate":"2021-11-08"},{"lineNumber":207,"author":{"gitId":"YipWayne"},"content":"        String lowercaseName \u003d substring.toLowerCase();","lastModifiedDate":"2021-11-08"},{"lineNumber":208,"author":{"gitId":"YipWayne"},"content":"        int foundClients \u003d 0;","lastModifiedDate":"2021-10-23"},{"lineNumber":209,"author":{"gitId":"YipWayne"},"content":"        int count \u003d clients.getClientCount();","lastModifiedDate":"2021-10-23"},{"lineNumber":210,"author":{"gitId":"YipWayne"},"content":"        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":211,"author":{"gitId":"bobowoo2468"},"content":"            Client currClient \u003d clients.getClientByIndex(i);","lastModifiedDate":"2021-10-30"},{"lineNumber":212,"author":{"gitId":"YipWayne"},"content":"            if (currClient.getName().toLowerCase().contains(lowercaseName)) {","lastModifiedDate":"2021-10-29"},{"lineNumber":213,"author":{"gitId":"YipWayne"},"content":"                if (foundClients \u003d\u003d 0) {","lastModifiedDate":"2021-10-23"},{"lineNumber":214,"author":{"gitId":"bobowoo2468"},"content":"                    show(FIND_SUCCESS_MESSAGE_LEFT + \"client(s) \" + FIND_MESSAGE_RIGHT);","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"YipWayne"},"content":"                }","lastModifiedDate":"2021-10-23"},{"lineNumber":216,"author":{"gitId":"bobowoo2468"},"content":"                show((foundClients + 1) + \". \" + currClient + \"\\n\");","lastModifiedDate":"2021-10-24"},{"lineNumber":217,"author":{"gitId":"swongts"},"content":"                showFlightTourOfClient(currClient, clientPackages);","lastModifiedDate":"2021-10-27"},{"lineNumber":218,"author":{"gitId":"YipWayne"},"content":"                foundClients++;","lastModifiedDate":"2021-10-23"},{"lineNumber":219,"author":{"gitId":"YipWayne"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":220,"author":{"gitId":"YipWayne"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":221,"author":{"gitId":"YipWayne"},"content":"        if (foundClients \u003d\u003d 0) {","lastModifiedDate":"2021-10-23"},{"lineNumber":222,"author":{"gitId":"bobowoo2468"},"content":"            show(FIND_FAIL_MESSAGE_LEFT + \"client(s) \" + FIND_MESSAGE_RIGHT);","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"YipWayne"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":224,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":225,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":226,"author":{"gitId":"YipWayne"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":227,"author":{"gitId":"YipWayne"},"content":"     * Shows clientPackages that a certain client is a part of.","lastModifiedDate":"2021-11-08"},{"lineNumber":228,"author":{"gitId":"YipWayne"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":229,"author":{"gitId":"YipWayne"},"content":"     * @param currClient     the client which the shown clientPackages must contain.","lastModifiedDate":"2021-11-08"},{"lineNumber":230,"author":{"gitId":"YipWayne"},"content":"     * @param clientPackages the ClientPackageList from which the client packages of the client are obtained from.","lastModifiedDate":"2021-11-08"},{"lineNumber":231,"author":{"gitId":"YipWayne"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":232,"author":{"gitId":"swongts"},"content":"    private void showFlightTourOfClient(Client currClient, ClientPackageList clientPackages) {","lastModifiedDate":"2021-10-27"},{"lineNumber":233,"author":{"gitId":"swongts"},"content":"        ArrayList\u003cClientPackage\u003e clientPackagesWithClient;","lastModifiedDate":"2021-10-27"},{"lineNumber":234,"author":{"gitId":"swongts"},"content":"        clientPackagesWithClient \u003d clientPackages.getClientPackageByClient(currClient);","lastModifiedDate":"2021-10-27"},{"lineNumber":235,"author":{"gitId":"swongts"},"content":"        for (ClientPackage clientPackage : clientPackagesWithClient) {","lastModifiedDate":"2021-10-27"},{"lineNumber":236,"author":{"gitId":"swongts"},"content":"            System.out.println(clientPackage + \"\\n\");","lastModifiedDate":"2021-10-27"},{"lineNumber":237,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":238,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":239,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":240,"author":{"gitId":"YipWayne"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":241,"author":{"gitId":"YipWayne"},"content":"     * Ui response to ListTourCommand.","lastModifiedDate":"2021-11-08"},{"lineNumber":242,"author":{"gitId":"YipWayne"},"content":"     * Shows all tours in the tourList on the terminal.","lastModifiedDate":"2021-11-08"},{"lineNumber":243,"author":{"gitId":"YipWayne"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":244,"author":{"gitId":"YipWayne"},"content":"     * @param tours the TourList from which the tours are obtained from.","lastModifiedDate":"2021-11-08"},{"lineNumber":245,"author":{"gitId":"YipWayne"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":246,"author":{"gitId":"YipWayne"},"content":"    public void showListTour(TourList tours) {","lastModifiedDate":"2021-10-22"},{"lineNumber":247,"author":{"gitId":"YipWayne"},"content":"        int count \u003d tours.getTourCount();","lastModifiedDate":"2021-10-22"},{"lineNumber":248,"author":{"gitId":"YipWayne"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2021-10-22"},{"lineNumber":249,"author":{"gitId":"bobowoo2468"},"content":"            show(LIST_NO_MESSAGE + \"tours\");","lastModifiedDate":"2021-10-24"},{"lineNumber":250,"author":{"gitId":"YipWayne"},"content":"            return;","lastModifiedDate":"2021-10-22"},{"lineNumber":251,"author":{"gitId":"YipWayne"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":252,"author":{"gitId":"bobowoo2468"},"content":"        show(LIST_MESSAGE + \"tours:\");","lastModifiedDate":"2021-10-24"},{"lineNumber":253,"author":{"gitId":"YipWayne"},"content":"        for (int i \u003d 1; i \u003c\u003d count; i++) {","lastModifiedDate":"2021-10-22"},{"lineNumber":254,"author":{"gitId":"YipWayne"},"content":"            Tour currTour \u003d tours.getTourByIndex(i - 1);","lastModifiedDate":"2021-10-22"},{"lineNumber":255,"author":{"gitId":"bobowoo2468"},"content":"            show(i + \". \" + currTour + \"\\n\");","lastModifiedDate":"2021-10-24"},{"lineNumber":256,"author":{"gitId":"YipWayne"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":257,"author":{"gitId":"bobowoo2468"},"content":"        show(\"Total Tours: \" + count);","lastModifiedDate":"2021-10-24"},{"lineNumber":258,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":259,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":260,"author":{"gitId":"YipWayne"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":261,"author":{"gitId":"YipWayne"},"content":"     * Ui response to FindTourCommand.","lastModifiedDate":"2021-11-08"},{"lineNumber":262,"author":{"gitId":"YipWayne"},"content":"     * Shows specific tour based on an ID, as well as the subscribed clients for said tour.","lastModifiedDate":"2021-11-08"},{"lineNumber":263,"author":{"gitId":"YipWayne"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":264,"author":{"gitId":"YipWayne"},"content":"     * @param tours          the TourList from which the tours are obtained from.","lastModifiedDate":"2021-11-08"},{"lineNumber":265,"author":{"gitId":"YipWayne"},"content":"     * @param clientPackages the ClientPackageList from which the subscribers of the tour are obtained from.","lastModifiedDate":"2021-11-08"},{"lineNumber":266,"author":{"gitId":"YipWayne"},"content":"     * @param id             the ID used to find the specific tour.","lastModifiedDate":"2021-11-08"},{"lineNumber":267,"author":{"gitId":"YipWayne"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":268,"author":{"gitId":"bobowoo2468"},"content":"    public void showFindTour(TourList tours, ClientPackageList clientPackages, String id)","lastModifiedDate":"2021-10-30"},{"lineNumber":269,"author":{"gitId":"swongts"},"content":"            throws TourPlannerException {","lastModifiedDate":"2021-10-25"},{"lineNumber":270,"author":{"gitId":"bobowoo2468"},"content":"        Tour foundTour \u003d tours.getTourById(id);","lastModifiedDate":"2021-10-30"},{"lineNumber":271,"author":{"gitId":"YipWayne"},"content":"        if (foundTour !\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":272,"author":{"gitId":"YipWayne"},"content":"            show(FIND_SUCCESS_MESSAGE_LEFT + \"tour \" + FIND_MESSAGE_RIGHT);","lastModifiedDate":"2021-10-28"},{"lineNumber":273,"author":{"gitId":"bobowoo2468"},"content":"            show(foundTour + \"\\n\" + \"\\n\");","lastModifiedDate":"2021-10-24"},{"lineNumber":274,"author":{"gitId":"YipWayne"},"content":"            int subbedClients \u003d 0;","lastModifiedDate":"2021-10-23"},{"lineNumber":275,"author":{"gitId":"swongts"},"content":"            int count \u003d clientPackages.getClientPackageCount();","lastModifiedDate":"2021-10-25"},{"lineNumber":276,"author":{"gitId":"bobowoo2468"},"content":"            show(\"Subscribed Clients:\");","lastModifiedDate":"2021-10-24"},{"lineNumber":277,"author":{"gitId":"YipWayne"},"content":"            for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":278,"author":{"gitId":"swongts"},"content":"                Tour currTour \u003d clientPackages.getClientPackageByIndex(i).getTour();","lastModifiedDate":"2021-11-03"},{"lineNumber":279,"author":{"gitId":"YipWayne"},"content":"                if (currTour.equals(foundTour)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":280,"author":{"gitId":"swongts"},"content":"                    String currClientName \u003d clientPackages.getClientPackageByIndex(i).getClient().getName();","lastModifiedDate":"2021-11-03"},{"lineNumber":281,"author":{"gitId":"YipWayne"},"content":"                    String currClientId \u003d clientPackages.getClientPackageByIndex(i).getClient().getId();","lastModifiedDate":"2021-11-08"},{"lineNumber":282,"author":{"gitId":"YipWayne"},"content":"                    show((subbedClients + 1) + \". \" + currClientName + \" (ID: \" + currClientId + \")\");","lastModifiedDate":"2021-11-08"},{"lineNumber":283,"author":{"gitId":"YipWayne"},"content":"                    subbedClients++;","lastModifiedDate":"2021-10-23"},{"lineNumber":284,"author":{"gitId":"YipWayne"},"content":"                }","lastModifiedDate":"2021-10-23"},{"lineNumber":285,"author":{"gitId":"YipWayne"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":286,"author":{"gitId":"YipWayne"},"content":"            show(\"\\n\" + \"Total Subscribed Clients: \" + subbedClients);","lastModifiedDate":"2021-11-08"},{"lineNumber":287,"author":{"gitId":"swongts"},"content":"        } else {","lastModifiedDate":"2021-10-23"},{"lineNumber":288,"author":{"gitId":"bobowoo2468"},"content":"            show(FIND_FAIL_MESSAGE_LEFT + \"tours \" + FIND_MESSAGE_RIGHT);","lastModifiedDate":"2021-10-24"},{"lineNumber":289,"author":{"gitId":"YipWayne"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":290,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":291,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":292,"author":{"gitId":"bobowoo2468"},"content":"    private boolean checkEmptyTours(TourList tours) {","lastModifiedDate":"2021-11-08"},{"lineNumber":293,"author":{"gitId":"bobowoo2468"},"content":"        int count \u003d tours.getTourCount();","lastModifiedDate":"2021-11-08"},{"lineNumber":294,"author":{"gitId":"bobowoo2468"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2021-11-08"},{"lineNumber":295,"author":{"gitId":"bobowoo2468"},"content":"            show(LIST_NO_MESSAGE + \"tours\");","lastModifiedDate":"2021-11-08"},{"lineNumber":296,"author":{"gitId":"bobowoo2468"},"content":"            return true;","lastModifiedDate":"2021-11-08"},{"lineNumber":297,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":298,"author":{"gitId":"bobowoo2468"},"content":"        return false;","lastModifiedDate":"2021-11-08"},{"lineNumber":299,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":300,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":301,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":302,"author":{"gitId":"bobowoo2468"},"content":"     * Ui response to sort tour by id.","lastModifiedDate":"2021-10-28"},{"lineNumber":303,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":304,"author":{"gitId":"bobowoo2468"},"content":"     * @param tours         the current list of tours in the database","lastModifiedDate":"2021-10-28"},{"lineNumber":305,"author":{"gitId":"bobowoo2468"},"content":"     * @param sortedTourIds the list of sorted tour codes/ids (by alphabetical order)","lastModifiedDate":"2021-10-30"},{"lineNumber":306,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if there is no tours that can be found given the tour code","lastModifiedDate":"2021-10-28"},{"lineNumber":307,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":308,"author":{"gitId":"bobowoo2468"},"content":"    public void showSortedTourById(TourList tours, ArrayList\u003cString\u003e sortedTourIds)","lastModifiedDate":"2021-10-30"},{"lineNumber":309,"author":{"gitId":"swongts"},"content":"            throws TourPlannerException {","lastModifiedDate":"2021-10-25"},{"lineNumber":310,"author":{"gitId":"bobowoo2468"},"content":"        if (checkEmptyTours(tours)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":311,"author":{"gitId":"bobowoo2468"},"content":"            return;","lastModifiedDate":"2021-11-08"},{"lineNumber":312,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":313,"author":{"gitId":"bobowoo2468"},"content":"        show(SORT_TOUR_ID_MESSAGE);","lastModifiedDate":"2021-10-25"},{"lineNumber":314,"author":{"gitId":"bobowoo2468"},"content":"        int listIndex \u003d 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":315,"author":{"gitId":"bobowoo2468"},"content":"        for (String tourId : sortedTourIds) {","lastModifiedDate":"2021-10-30"},{"lineNumber":316,"author":{"gitId":"bobowoo2468"},"content":"            Tour currTour \u003d tours.getTourById(tourId);","lastModifiedDate":"2021-10-30"},{"lineNumber":317,"author":{"gitId":"bobowoo2468"},"content":"            show(listIndex + \". \" + currTour + System.lineSeparator());","lastModifiedDate":"2021-10-25"},{"lineNumber":318,"author":{"gitId":"bobowoo2468"},"content":"            listIndex++;","lastModifiedDate":"2021-10-25"},{"lineNumber":319,"author":{"gitId":"YipWayne"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":320,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":321,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":322,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":323,"author":{"gitId":"bobowoo2468"},"content":"     * Ui response to sort tour by price.","lastModifiedDate":"2021-10-28"},{"lineNumber":324,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":325,"author":{"gitId":"bobowoo2468"},"content":"     * @param tours            the current list of tours in the database","lastModifiedDate":"2021-10-28"},{"lineNumber":326,"author":{"gitId":"bobowoo2468"},"content":"     * @param sortedTourPrices the list of sorted tour prices (by ascending order)","lastModifiedDate":"2021-10-28"},{"lineNumber":327,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if there is no tours that can be found given the tour price","lastModifiedDate":"2021-10-28"},{"lineNumber":328,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":329,"author":{"gitId":"bobowoo2468"},"content":"    public void showSortedTourByPrice(TourList tours, ArrayList\u003cFloat\u003e sortedTourPrices) throws TourPlannerException {","lastModifiedDate":"2021-10-28"},{"lineNumber":330,"author":{"gitId":"bobowoo2468"},"content":"        if (checkEmptyTours(tours)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":331,"author":{"gitId":"bobowoo2468"},"content":"            return;","lastModifiedDate":"2021-11-08"},{"lineNumber":332,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":333,"author":{"gitId":"bobowoo2468"},"content":"        tours.initTempArray();","lastModifiedDate":"2021-10-25"},{"lineNumber":334,"author":{"gitId":"bobowoo2468"},"content":"        show(SORT_TOUR_PRICE_MESSAGE);","lastModifiedDate":"2021-10-24"},{"lineNumber":335,"author":{"gitId":"bobowoo2468"},"content":"        int listIndex \u003d 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":336,"author":{"gitId":"bobowoo2468"},"content":"        for (Float tourPrice : sortedTourPrices) {","lastModifiedDate":"2021-10-25"},{"lineNumber":337,"author":{"gitId":"bobowoo2468"},"content":"            Tour currTour \u003d tours.getTourByPrice(tourPrice);","lastModifiedDate":"2021-10-25"},{"lineNumber":338,"author":{"gitId":"bobowoo2468"},"content":"            show(listIndex + \". \" + currTour + System.lineSeparator());","lastModifiedDate":"2021-10-25"},{"lineNumber":339,"author":{"gitId":"bobowoo2468"},"content":"            listIndex++;","lastModifiedDate":"2021-10-25"},{"lineNumber":340,"author":{"gitId":"YipWayne"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":341,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":342,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":343,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":344,"author":{"gitId":"bobowoo2468"},"content":"     * Ui response to sort tour by name.","lastModifiedDate":"2021-11-05"},{"lineNumber":345,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":346,"author":{"gitId":"bobowoo2468"},"content":"     * @param tours           the current list of tours in the database","lastModifiedDate":"2021-11-05"},{"lineNumber":347,"author":{"gitId":"bobowoo2468"},"content":"     * @param sortedTourNames the list of sorted tour names (by alphabetical order)","lastModifiedDate":"2021-11-05"},{"lineNumber":348,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if there is no tours that can be found given the tour name","lastModifiedDate":"2021-11-05"},{"lineNumber":349,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":350,"author":{"gitId":"bobowoo2468"},"content":"    public void showSortedTourByName(TourList tours, ArrayList\u003cString\u003e sortedTourNames) throws TourPlannerException {","lastModifiedDate":"2021-11-05"},{"lineNumber":351,"author":{"gitId":"bobowoo2468"},"content":"        if (checkEmptyTours(tours)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":352,"author":{"gitId":"bobowoo2468"},"content":"            return;","lastModifiedDate":"2021-11-08"},{"lineNumber":353,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":354,"author":{"gitId":"bobowoo2468"},"content":"        tours.initTempArray();","lastModifiedDate":"2021-11-05"},{"lineNumber":355,"author":{"gitId":"bobowoo2468"},"content":"        show(SORT_TOUR_NAME_MESSAGE);","lastModifiedDate":"2021-11-05"},{"lineNumber":356,"author":{"gitId":"bobowoo2468"},"content":"        int listIndex \u003d 1;","lastModifiedDate":"2021-11-05"},{"lineNumber":357,"author":{"gitId":"bobowoo2468"},"content":"        for (String tourName : sortedTourNames) {","lastModifiedDate":"2021-11-05"},{"lineNumber":358,"author":{"gitId":"bobowoo2468"},"content":"            Tour currTour \u003d tours.getTourByName(tourName);","lastModifiedDate":"2021-11-05"},{"lineNumber":359,"author":{"gitId":"bobowoo2468"},"content":"            show(listIndex + \". \" + currTour + System.lineSeparator());","lastModifiedDate":"2021-11-05"},{"lineNumber":360,"author":{"gitId":"bobowoo2468"},"content":"            listIndex++;","lastModifiedDate":"2021-11-05"},{"lineNumber":361,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":362,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":363,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":364,"author":{"gitId":"bobowoo2468"},"content":"    private boolean checkEmptyClients(ClientList clients) {","lastModifiedDate":"2021-11-08"},{"lineNumber":365,"author":{"gitId":"bobowoo2468"},"content":"        int count \u003d clients.getClientCount();","lastModifiedDate":"2021-11-08"},{"lineNumber":366,"author":{"gitId":"bobowoo2468"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2021-11-08"},{"lineNumber":367,"author":{"gitId":"bobowoo2468"},"content":"            show(LIST_NO_MESSAGE + \"flights\");","lastModifiedDate":"2021-11-08"},{"lineNumber":368,"author":{"gitId":"bobowoo2468"},"content":"            return true;","lastModifiedDate":"2021-11-08"},{"lineNumber":369,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":370,"author":{"gitId":"bobowoo2468"},"content":"        return false;","lastModifiedDate":"2021-11-08"},{"lineNumber":371,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":372,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":373,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":374,"author":{"gitId":"bobowoo2468"},"content":"     * Ui response to sort client by id.","lastModifiedDate":"2021-10-28"},{"lineNumber":375,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":376,"author":{"gitId":"bobowoo2468"},"content":"     * @param clients         the current list of clients in the database","lastModifiedDate":"2021-10-28"},{"lineNumber":377,"author":{"gitId":"bobowoo2468"},"content":"     * @param sortedClientIds the list of sorted client IDs (by alphabetical order)","lastModifiedDate":"2021-10-28"},{"lineNumber":378,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if there is no clients that can be found given the client ID","lastModifiedDate":"2021-10-28"},{"lineNumber":379,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":380,"author":{"gitId":"bobowoo2468"},"content":"    public void showSortedClientById(ClientList clients, ArrayList\u003cString\u003e sortedClientIds)","lastModifiedDate":"2021-10-25"},{"lineNumber":381,"author":{"gitId":"bobowoo2468"},"content":"            throws TourPlannerException {","lastModifiedDate":"2021-10-25"},{"lineNumber":382,"author":{"gitId":"bobowoo2468"},"content":"        if (checkEmptyClients(clients)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":383,"author":{"gitId":"bobowoo2468"},"content":"            return;","lastModifiedDate":"2021-11-08"},{"lineNumber":384,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":385,"author":{"gitId":"bobowoo2468"},"content":"        show(SORT_CLIENT_ID_MESSAGE);","lastModifiedDate":"2021-10-25"},{"lineNumber":386,"author":{"gitId":"bobowoo2468"},"content":"        int listIndex \u003d 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":387,"author":{"gitId":"bobowoo2468"},"content":"        for (String clientId : sortedClientIds) {","lastModifiedDate":"2021-10-25"},{"lineNumber":388,"author":{"gitId":"bobowoo2468"},"content":"            Client currClient \u003d clients.getClientById(clientId);","lastModifiedDate":"2021-10-25"},{"lineNumber":389,"author":{"gitId":"bobowoo2468"},"content":"            show(listIndex + \". \" + currClient + System.lineSeparator());","lastModifiedDate":"2021-10-25"},{"lineNumber":390,"author":{"gitId":"bobowoo2468"},"content":"            listIndex++;","lastModifiedDate":"2021-10-25"},{"lineNumber":391,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":392,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":393,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":394,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":395,"author":{"gitId":"bobowoo2468"},"content":"     * Ui response to sort client by name.","lastModifiedDate":"2021-10-28"},{"lineNumber":396,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":397,"author":{"gitId":"bobowoo2468"},"content":"     * @param clients           the current list of clients in the database","lastModifiedDate":"2021-10-28"},{"lineNumber":398,"author":{"gitId":"bobowoo2468"},"content":"     * @param sortedClientNames the list of sorted client names (by alphabetical order)","lastModifiedDate":"2021-10-28"},{"lineNumber":399,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if there is no clients that can be found given the client name","lastModifiedDate":"2021-10-28"},{"lineNumber":400,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":401,"author":{"gitId":"bobowoo2468"},"content":"    public void showSortedClientByName(ClientList clients, ArrayList\u003cString\u003e sortedClientNames)","lastModifiedDate":"2021-10-25"},{"lineNumber":402,"author":{"gitId":"bobowoo2468"},"content":"            throws TourPlannerException {","lastModifiedDate":"2021-10-25"},{"lineNumber":403,"author":{"gitId":"bobowoo2468"},"content":"        if (checkEmptyClients(clients)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":404,"author":{"gitId":"bobowoo2468"},"content":"            return;","lastModifiedDate":"2021-11-08"},{"lineNumber":405,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":406,"author":{"gitId":"bobowoo2468"},"content":"        clients.initTempArray();","lastModifiedDate":"2021-10-25"},{"lineNumber":407,"author":{"gitId":"bobowoo2468"},"content":"        show(SORT_CLIENT_NAME_MESSAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":408,"author":{"gitId":"bobowoo2468"},"content":"        int listIndex \u003d 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":409,"author":{"gitId":"bobowoo2468"},"content":"        for (String clientName : sortedClientNames) {","lastModifiedDate":"2021-10-25"},{"lineNumber":410,"author":{"gitId":"bobowoo2468"},"content":"            Client currClient \u003d clients.getClientByName(clientName);","lastModifiedDate":"2021-10-25"},{"lineNumber":411,"author":{"gitId":"bobowoo2468"},"content":"            show(listIndex + \". \" + currClient + System.lineSeparator());","lastModifiedDate":"2021-10-25"},{"lineNumber":412,"author":{"gitId":"bobowoo2468"},"content":"            listIndex++;","lastModifiedDate":"2021-10-25"},{"lineNumber":413,"author":{"gitId":"YipWayne"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":414,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":415,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":416,"author":{"gitId":"bobowoo2468"},"content":"    private boolean checkEmptyFlights(FlightList flights) {","lastModifiedDate":"2021-11-08"},{"lineNumber":417,"author":{"gitId":"bobowoo2468"},"content":"        int count \u003d flights.getFlightCount();","lastModifiedDate":"2021-11-08"},{"lineNumber":418,"author":{"gitId":"bobowoo2468"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2021-11-08"},{"lineNumber":419,"author":{"gitId":"bobowoo2468"},"content":"            show(LIST_NO_MESSAGE + \"flights\");","lastModifiedDate":"2021-11-08"},{"lineNumber":420,"author":{"gitId":"bobowoo2468"},"content":"            return true;","lastModifiedDate":"2021-11-08"},{"lineNumber":421,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":422,"author":{"gitId":"bobowoo2468"},"content":"        return false;","lastModifiedDate":"2021-11-08"},{"lineNumber":423,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":424,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":425,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":426,"author":{"gitId":"bobowoo2468"},"content":"     * Ui response to sort flight by ID.","lastModifiedDate":"2021-10-28"},{"lineNumber":427,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":428,"author":{"gitId":"bobowoo2468"},"content":"     * @param flights   the current list of flights in the database","lastModifiedDate":"2021-10-28"},{"lineNumber":429,"author":{"gitId":"bobowoo2468"},"content":"     * @param sortedIds the list of sorted flight IDs (by alphabetical order)","lastModifiedDate":"2021-10-28"},{"lineNumber":430,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if there is no flights that can be found given the flight ID","lastModifiedDate":"2021-10-28"},{"lineNumber":431,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":432,"author":{"gitId":"bobowoo2468"},"content":"    public void showSortedFlightById(FlightList flights, ArrayList\u003cString\u003e sortedIds)","lastModifiedDate":"2021-10-26"},{"lineNumber":433,"author":{"gitId":"bobowoo2468"},"content":"            throws TourPlannerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":434,"author":{"gitId":"bobowoo2468"},"content":"        if (checkEmptyFlights(flights)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":435,"author":{"gitId":"bobowoo2468"},"content":"            return;","lastModifiedDate":"2021-11-08"},{"lineNumber":436,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":437,"author":{"gitId":"bobowoo2468"},"content":"        show(SORT_FLIGHT_ID_MESSAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":438,"author":{"gitId":"bobowoo2468"},"content":"        int listIndex \u003d 1;","lastModifiedDate":"2021-10-26"},{"lineNumber":439,"author":{"gitId":"bobowoo2468"},"content":"        for (String flightId : sortedIds) {","lastModifiedDate":"2021-10-26"},{"lineNumber":440,"author":{"gitId":"bobowoo2468"},"content":"            Flight currFlight \u003d flights.getFlightById(flightId);","lastModifiedDate":"2021-10-26"},{"lineNumber":441,"author":{"gitId":"bobowoo2468"},"content":"            show(listIndex + \". \" + currFlight + System.lineSeparator());","lastModifiedDate":"2021-10-26"},{"lineNumber":442,"author":{"gitId":"bobowoo2468"},"content":"            listIndex++;","lastModifiedDate":"2021-10-26"},{"lineNumber":443,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":444,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":445,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":446,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":447,"author":{"gitId":"bobowoo2468"},"content":"     * Ui response to sort flight by return date.","lastModifiedDate":"2021-10-28"},{"lineNumber":448,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":449,"author":{"gitId":"bobowoo2468"},"content":"     * @param flights                   the current list of flights in the database","lastModifiedDate":"2021-10-28"},{"lineNumber":450,"author":{"gitId":"bobowoo2468"},"content":"     * @param sortedFlightByArriveDates the list of sorted return dates (by natural order of time)","lastModifiedDate":"2021-10-28"},{"lineNumber":451,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if there is no flights that can be found given the return date","lastModifiedDate":"2021-10-28"},{"lineNumber":452,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":453,"author":{"gitId":"bobowoo2468"},"content":"    public void showSortedFlightByReturn(FlightList flights, ArrayList\u003cString\u003e sortedFlightByArriveDates)","lastModifiedDate":"2021-10-26"},{"lineNumber":454,"author":{"gitId":"bobowoo2468"},"content":"            throws TourPlannerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":455,"author":{"gitId":"bobowoo2468"},"content":"        if (checkEmptyFlights(flights)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":456,"author":{"gitId":"bobowoo2468"},"content":"            return;","lastModifiedDate":"2021-11-08"},{"lineNumber":457,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":458,"author":{"gitId":"bobowoo2468"},"content":"        show(SORT_FLIGHT_BY_ARRIVAL_MESSAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":459,"author":{"gitId":"bobowoo2468"},"content":"        flights.initTempArray();","lastModifiedDate":"2021-10-26"},{"lineNumber":460,"author":{"gitId":"bobowoo2468"},"content":"        int listIndex \u003d 1;","lastModifiedDate":"2021-10-26"},{"lineNumber":461,"author":{"gitId":"bobowoo2468"},"content":"        for (String flightArriveDate : sortedFlightByArriveDates) {","lastModifiedDate":"2021-10-26"},{"lineNumber":462,"author":{"gitId":"bobowoo2468"},"content":"            Flight currFlight \u003d flights.getFlightByReturnDate(flightArriveDate);","lastModifiedDate":"2021-11-07"},{"lineNumber":463,"author":{"gitId":"bobowoo2468"},"content":"            show(listIndex + \". \" + currFlight + System.lineSeparator());","lastModifiedDate":"2021-10-26"},{"lineNumber":464,"author":{"gitId":"bobowoo2468"},"content":"            listIndex++;","lastModifiedDate":"2021-10-26"},{"lineNumber":465,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":466,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":467,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":468,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":469,"author":{"gitId":"bobowoo2468"},"content":"     * Ui response to sort flight by depart date.","lastModifiedDate":"2021-10-28"},{"lineNumber":470,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":471,"author":{"gitId":"bobowoo2468"},"content":"     * @param flights                      the current list of flights in the database","lastModifiedDate":"2021-10-28"},{"lineNumber":472,"author":{"gitId":"bobowoo2468"},"content":"     * @param sortedFlightByDepartureDates the list of sorted departure dates (by natural order of time)","lastModifiedDate":"2021-10-28"},{"lineNumber":473,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if there is no flights that can be found given the departure date","lastModifiedDate":"2021-10-28"},{"lineNumber":474,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":475,"author":{"gitId":"bobowoo2468"},"content":"    public void showSortedFlightByDeparture(FlightList flights, ArrayList\u003cString\u003e sortedFlightByDepartureDates)","lastModifiedDate":"2021-10-26"},{"lineNumber":476,"author":{"gitId":"bobowoo2468"},"content":"            throws TourPlannerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":477,"author":{"gitId":"bobowoo2468"},"content":"        if (checkEmptyFlights(flights)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":478,"author":{"gitId":"bobowoo2468"},"content":"            return;","lastModifiedDate":"2021-11-08"},{"lineNumber":479,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":480,"author":{"gitId":"bobowoo2468"},"content":"        show(SORT_FLIGHT_BY_DEPARTURE_MESSAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":481,"author":{"gitId":"bobowoo2468"},"content":"        flights.initTempArray();","lastModifiedDate":"2021-10-26"},{"lineNumber":482,"author":{"gitId":"bobowoo2468"},"content":"        int listIndex \u003d 1;","lastModifiedDate":"2021-10-26"},{"lineNumber":483,"author":{"gitId":"bobowoo2468"},"content":"        for (String flightDepartDate : sortedFlightByDepartureDates) {","lastModifiedDate":"2021-10-26"},{"lineNumber":484,"author":{"gitId":"bobowoo2468"},"content":"            Flight currFlight \u003d flights.getFlightByDepartDate(flightDepartDate);","lastModifiedDate":"2021-10-26"},{"lineNumber":485,"author":{"gitId":"bobowoo2468"},"content":"            show(listIndex + \". \" + currFlight + System.lineSeparator());","lastModifiedDate":"2021-10-26"},{"lineNumber":486,"author":{"gitId":"bobowoo2468"},"content":"            listIndex++;","lastModifiedDate":"2021-10-26"},{"lineNumber":487,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":488,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":489,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":490,"author":{"gitId":"YipWayne"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":491,"author":{"gitId":"YipWayne"},"content":"     * Ui response to ListFlightCommand.","lastModifiedDate":"2021-11-08"},{"lineNumber":492,"author":{"gitId":"YipWayne"},"content":"     * Shows all flights in the flightList on the terminal.","lastModifiedDate":"2021-11-08"},{"lineNumber":493,"author":{"gitId":"YipWayne"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":494,"author":{"gitId":"YipWayne"},"content":"     * @param flights the FlightList from which the flights are obtained from.","lastModifiedDate":"2021-11-08"},{"lineNumber":495,"author":{"gitId":"YipWayne"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":496,"author":{"gitId":"YipWayne"},"content":"    public void showListFlight(FlightList flights) {","lastModifiedDate":"2021-10-22"},{"lineNumber":497,"author":{"gitId":"YipWayne"},"content":"        int count \u003d flights.getFlightCount();","lastModifiedDate":"2021-10-22"},{"lineNumber":498,"author":{"gitId":"YipWayne"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2021-10-22"},{"lineNumber":499,"author":{"gitId":"bobowoo2468"},"content":"            show(LIST_NO_MESSAGE + \"flights\");","lastModifiedDate":"2021-10-24"},{"lineNumber":500,"author":{"gitId":"YipWayne"},"content":"            return;","lastModifiedDate":"2021-10-22"},{"lineNumber":501,"author":{"gitId":"YipWayne"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":502,"author":{"gitId":"bobowoo2468"},"content":"        show(LIST_MESSAGE + \"flights:\");","lastModifiedDate":"2021-10-24"},{"lineNumber":503,"author":{"gitId":"YipWayne"},"content":"        for (int i \u003d 1; i \u003c\u003d count; i++) {","lastModifiedDate":"2021-10-22"},{"lineNumber":504,"author":{"gitId":"bobowoo2468"},"content":"            Flight currFlight \u003d flights.getFlightByIndex(i - 1);","lastModifiedDate":"2021-10-30"},{"lineNumber":505,"author":{"gitId":"bobowoo2468"},"content":"            show(i + \". \" + currFlight + \"\\n\");","lastModifiedDate":"2021-10-24"},{"lineNumber":506,"author":{"gitId":"YipWayne"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":507,"author":{"gitId":"bobowoo2468"},"content":"        show(\"Total Flights: \" + count);","lastModifiedDate":"2021-10-24"},{"lineNumber":508,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":509,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":510,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":511,"author":{"gitId":"YipWayne"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":512,"author":{"gitId":"YipWayne"},"content":"     * Ui response to FindFlightCommand.","lastModifiedDate":"2021-11-08"},{"lineNumber":513,"author":{"gitId":"YipWayne"},"content":"     * Shows specific flight based on an ID, as well as the passengers for said flight.","lastModifiedDate":"2021-11-08"},{"lineNumber":514,"author":{"gitId":"YipWayne"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":515,"author":{"gitId":"YipWayne"},"content":"     * @param flights        the FlightList from which the flights are obtained from.","lastModifiedDate":"2021-11-08"},{"lineNumber":516,"author":{"gitId":"YipWayne"},"content":"     * @param clientPackages the ClientPackageList from which the passengers for the flight are obtained from.","lastModifiedDate":"2021-11-08"},{"lineNumber":517,"author":{"gitId":"YipWayne"},"content":"     * @param id             the ID used to find the specific flight.","lastModifiedDate":"2021-11-08"},{"lineNumber":518,"author":{"gitId":"YipWayne"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":519,"author":{"gitId":"YipWayne"},"content":"    public void showFindFlight(FlightList flights, ClientPackageList clientPackages, String id)","lastModifiedDate":"2021-11-08"},{"lineNumber":520,"author":{"gitId":"swongts"},"content":"            throws TourPlannerException {","lastModifiedDate":"2021-10-25"},{"lineNumber":521,"author":{"gitId":"YipWayne"},"content":"        Flight foundFlight \u003d flights.getFlightById(id);","lastModifiedDate":"2021-11-08"},{"lineNumber":522,"author":{"gitId":"YipWayne"},"content":"        if (foundFlight !\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":523,"author":{"gitId":"YipWayne"},"content":"            show(FIND_SUCCESS_MESSAGE_LEFT + \"flight \" + FIND_MESSAGE_RIGHT);","lastModifiedDate":"2021-10-28"},{"lineNumber":524,"author":{"gitId":"bobowoo2468"},"content":"            show(foundFlight + \"\\n\" + \"\\n\");","lastModifiedDate":"2021-10-24"},{"lineNumber":525,"author":{"gitId":"YipWayne"},"content":"            int passengers \u003d 0;","lastModifiedDate":"2021-10-23"},{"lineNumber":526,"author":{"gitId":"swongts"},"content":"            int count \u003d clientPackages.getClientPackageCount();","lastModifiedDate":"2021-10-25"},{"lineNumber":527,"author":{"gitId":"bobowoo2468"},"content":"            show(\"Passengers:\");","lastModifiedDate":"2021-10-24"},{"lineNumber":528,"author":{"gitId":"YipWayne"},"content":"            for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":529,"author":{"gitId":"swongts"},"content":"                Flight currFlight \u003d clientPackages.getClientPackageByIndex(i).getFlight();","lastModifiedDate":"2021-11-03"},{"lineNumber":530,"author":{"gitId":"YipWayne"},"content":"                if (currFlight.equals(foundFlight)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":531,"author":{"gitId":"swongts"},"content":"                    String currClientName \u003d clientPackages.getClientPackageByIndex(i).getClient().getName();","lastModifiedDate":"2021-11-03"},{"lineNumber":532,"author":{"gitId":"YipWayne"},"content":"                    String currClientId \u003d clientPackages.getClientPackageByIndex(i).getClient().getId();","lastModifiedDate":"2021-11-08"},{"lineNumber":533,"author":{"gitId":"YipWayne"},"content":"                    show((passengers + 1) + \". \" + currClientName + \" (ID: \" + currClientId + \")\");","lastModifiedDate":"2021-11-08"},{"lineNumber":534,"author":{"gitId":"YipWayne"},"content":"                    passengers++;","lastModifiedDate":"2021-10-23"},{"lineNumber":535,"author":{"gitId":"YipWayne"},"content":"                }","lastModifiedDate":"2021-10-23"},{"lineNumber":536,"author":{"gitId":"YipWayne"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":537,"author":{"gitId":"YipWayne"},"content":"            show(\"\\n\" + \"Total Passengers: \" + passengers);","lastModifiedDate":"2021-11-08"},{"lineNumber":538,"author":{"gitId":"YipWayne"},"content":"        } else {","lastModifiedDate":"2021-10-23"},{"lineNumber":539,"author":{"gitId":"bobowoo2468"},"content":"            show(FIND_FAIL_MESSAGE_LEFT + \"flights \" + FIND_MESSAGE_RIGHT);","lastModifiedDate":"2021-10-24"},{"lineNumber":540,"author":{"gitId":"YipWayne"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":541,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":542,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":543,"author":{"gitId":"YipWayne"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":544,"author":{"gitId":"YipWayne"},"content":"     * Ui response to ListClientPackageCommand.","lastModifiedDate":"2021-11-08"},{"lineNumber":545,"author":{"gitId":"YipWayne"},"content":"     * Shows all client packages in the clientPackageList on the terminal.","lastModifiedDate":"2021-11-08"},{"lineNumber":546,"author":{"gitId":"YipWayne"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":547,"author":{"gitId":"YipWayne"},"content":"     * @param clientPackages the ClientPackageList from which the client packages are obtained from.","lastModifiedDate":"2021-11-08"},{"lineNumber":548,"author":{"gitId":"YipWayne"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":549,"author":{"gitId":"swongts"},"content":"    public void showListClientPackage(ClientPackageList clientPackages) {","lastModifiedDate":"2021-10-25"},{"lineNumber":550,"author":{"gitId":"swongts"},"content":"        int count \u003d clientPackages.getClientPackageCount();","lastModifiedDate":"2021-10-25"},{"lineNumber":551,"author":{"gitId":"YipWayne"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2021-10-23"},{"lineNumber":552,"author":{"gitId":"bobowoo2468"},"content":"            show(LIST_NO_MESSAGE + \"packages\");","lastModifiedDate":"2021-10-24"},{"lineNumber":553,"author":{"gitId":"YipWayne"},"content":"            return;","lastModifiedDate":"2021-10-23"},{"lineNumber":554,"author":{"gitId":"YipWayne"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":555,"author":{"gitId":"bobowoo2468"},"content":"        show(LIST_MESSAGE + \"packages:\");","lastModifiedDate":"2021-10-24"},{"lineNumber":556,"author":{"gitId":"YipWayne"},"content":"        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":557,"author":{"gitId":"swongts"},"content":"            ClientPackage currPackage \u003d clientPackages.getClientPackageByIndex(i);","lastModifiedDate":"2021-11-03"},{"lineNumber":558,"author":{"gitId":"bobowoo2468"},"content":"            show((i + 1) + \". \" + currPackage + \"\\n\" + \"\\n\");","lastModifiedDate":"2021-10-24"},{"lineNumber":559,"author":{"gitId":"YipWayne"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":560,"author":{"gitId":"bobowoo2468"},"content":"        show(\"Total Packages: \" + count);","lastModifiedDate":"2021-10-24"},{"lineNumber":561,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":562,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":563,"author":{"gitId":"YipWayne"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":564,"author":{"gitId":"swongts"},"content":"     * Shows an exit message to the user to acknowledge exiting the application.","lastModifiedDate":"2021-11-07"},{"lineNumber":565,"author":{"gitId":"YipWayne"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":566,"author":{"gitId":"bobowoo2468"},"content":"    public void showBye() {","lastModifiedDate":"2021-10-11"},{"lineNumber":567,"author":{"gitId":"bobowoo2468"},"content":"        show(BYE_MESSAGE);","lastModifiedDate":"2021-10-11"},{"lineNumber":568,"author":{"gitId":"bobowoo2468"},"content":"        showLine();","lastModifiedDate":"2021-10-11"},{"lineNumber":569,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":570,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":571,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":572,"author":{"gitId":"bobowoo2468"},"content":"     * Shows error message for corrupted storage file.","lastModifiedDate":"2021-11-08"},{"lineNumber":573,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":574,"author":{"gitId":"swongts"},"content":"    public void showFileError() {","lastModifiedDate":"2021-11-08"},{"lineNumber":575,"author":{"gitId":"swongts"},"content":"        showLine();","lastModifiedDate":"2021-11-08"},{"lineNumber":576,"author":{"gitId":"swongts"},"content":"        show(FILE_CORRUPT);","lastModifiedDate":"2021-11-08"},{"lineNumber":577,"author":{"gitId":"swongts"},"content":"        showLine();","lastModifiedDate":"2021-11-08"},{"lineNumber":578,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":579,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-07"},{"lineNumber":580,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"YipWayne":175,"Demonshaha":3,"bobowoo2468":320,"swongts":82}},{"path":"src/main/java/seedu/duke/commands/ByeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":" * Acknowledge that the user is exiting the application.","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"    public void execute() {","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"        ui.showBye();","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"     * Sets the exit condition to true since ByeCommand is initialised.","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"     * @return true","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"        return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"YipWayne":2,"bobowoo2468":20,"swongts":1}},{"path":"src/main/java/seedu/duke/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.ClientList;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.ClientPackageList;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.FlightList;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.TourList;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":" * Abstract executable command.","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"    protected ClientList clients;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"    protected FlightList flights;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"    protected TourList tours;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"    protected ClientPackageList clientPackages;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"    protected Ui ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"     * Executes the specific command depending on the command constructed.","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"    public abstract void execute();","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"     * Setter for ClientList, FlightList, TourList, ClientPackageList and Ui","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"     * for subclasses of Command to access when executing their command.","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"     * @param clients        list of all clients","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"     * @param flights        list of all flights","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"     * @param tours          list of all tours","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"     * @param clientPackages list of all client packages","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"     * @param ui             user interface in charge of reading user input and showing messages to user","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"    public void setData(ClientList clients, FlightList flights, TourList tours,","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"                        ClientPackageList clientPackages, Ui ui) {","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"        this.clients \u003d clients;","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"        this.flights \u003d flights;","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"        this.tours \u003d tours;","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"        this.clientPackages \u003d clientPackages;","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"swongts"},"content":"     * Function that controls the exit condition of the loop in TourPlanner class.","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"     * @return the exit condition from the loop","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"bobowoo2468"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"bobowoo2468"},"content":"        return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"YipWayne":3,"bobowoo2468":21,"swongts":27}},{"path":"src/main/java/seedu/duke/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"    public void execute() {","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"        ui.showHelp();","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"swongts":7}},{"path":"src/main/java/seedu/duke/commands/clientpackages/AddClientPackageCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke.commands.clientpackages;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.data.Client;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.data.ClientPackage;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.data.Flight;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.data.Tour;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"public class AddClientPackageCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"    public static final String ERROR_CLIENT_PACKAGE_ID_EXISTS \u003d","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"            \"ERROR: Package ID already exists. Please try another Package ID.\";","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"    public static final String ERROR_CLIENT_PACKAGE_SAME_FIELDS \u003d","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"            \"ERROR: Package with same fields already exists with different ID.\";","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"    private ClientPackage clientPackage;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"    private String[] rawClientPackage;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"     * Class constructor of AddClientPackage, used to add a ClientPackage to ClientPackageList.","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"     * @param rawClientPackage the array of values of the client package, ordered in this manner:","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"     *                         package id, client id, tour id and flight id","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"YipWayne"},"content":"    public AddClientPackageCommand(String[] rawClientPackage) {","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"        this.rawClientPackage \u003d rawClientPackage;","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"     * Executes the addition of a ClientPackage to a ClientPackageList.","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"swongts"},"content":"     * If given client package ID already exists, the client package will not be added.","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"    public void execute() {","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"        try {","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"            createClientPackage();","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"            ArrayList\u003cClientPackage\u003e checkClientPackage \u003d clientPackages.getClientPackages();","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"            for (ClientPackage currClientPackage : checkClientPackage) {","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"                boolean sameId \u003d currClientPackage.getId().equals(clientPackage.getId());","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"swongts"},"content":"                if (sameId) {","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"swongts"},"content":"                    System.out.println(ERROR_CLIENT_PACKAGE_ID_EXISTS);","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"swongts"},"content":"                    return;","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"swongts"},"content":"                }","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"swongts"},"content":"                boolean sameClient \u003d currClientPackage.getClient().equals(clientPackage.getClient());","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"swongts"},"content":"                boolean sameTour \u003d currClientPackage.getTour().equals(clientPackage.getTour());","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"swongts"},"content":"                boolean sameFlight \u003d currClientPackage.getFlight().equals(clientPackage.getFlight());","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"swongts"},"content":"                if (sameClient \u0026\u0026 sameTour \u0026\u0026 sameFlight) {","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"swongts"},"content":"                    System.out.println(ERROR_CLIENT_PACKAGE_SAME_FIELDS);","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"swongts"},"content":"                    return;","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"swongts"},"content":"                }","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"swongts"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"YipWayne"},"content":"            if (!clientPackage.getClient().equals(null) \u0026\u0026 !clientPackage.getTour().equals(null)","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"YipWayne"},"content":"                    \u0026\u0026 !clientPackage.getFlight().equals(null)) {","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"swongts"},"content":"                clientPackages.add(clientPackage);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"swongts"},"content":"                ui.showAdd(clientPackage);","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"swongts"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"swongts"},"content":"        } catch (TourPlannerException e) {","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"swongts"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"swongts"},"content":"     * Executes the addition of a ClientPackage to a ClientPackageList for Storage class.","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"swongts"},"content":"     * If given client package ID already exists, the client package will not be added.","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"swongts"},"content":"    public void executeStorage() {","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"swongts"},"content":"        try {","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"swongts"},"content":"            createClientPackage();","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"swongts"},"content":"            ArrayList\u003cClientPackage\u003e checkClientPackage \u003d clientPackages.getClientPackages();","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"swongts"},"content":"            for (ClientPackage currClientPackage : checkClientPackage) {","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"swongts"},"content":"                boolean sameId \u003d currClientPackage.getId().equals(clientPackage.getId());","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"swongts"},"content":"                if (sameId) {","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"swongts"},"content":"                    System.out.println(ERROR_CLIENT_PACKAGE_ID_EXISTS);","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"swongts"},"content":"                    return;","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"swongts"},"content":"                }","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"swongts"},"content":"                boolean sameClient \u003d currClientPackage.getClient().equals(clientPackage.getClient());","lastModifiedDate":"2021-11-08"},{"lineNumber":79,"author":{"gitId":"swongts"},"content":"                boolean sameTour \u003d currClientPackage.getTour().equals(clientPackage.getTour());","lastModifiedDate":"2021-11-08"},{"lineNumber":80,"author":{"gitId":"swongts"},"content":"                boolean sameFlight \u003d currClientPackage.getFlight().equals(clientPackage.getFlight());","lastModifiedDate":"2021-11-08"},{"lineNumber":81,"author":{"gitId":"swongts"},"content":"                if (sameClient \u0026\u0026 sameTour \u0026\u0026 sameFlight) {","lastModifiedDate":"2021-11-08"},{"lineNumber":82,"author":{"gitId":"swongts"},"content":"                    System.out.println(ERROR_CLIENT_PACKAGE_SAME_FIELDS);","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"swongts"},"content":"                    return;","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"swongts"},"content":"                }","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"swongts"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":86,"author":{"gitId":"swongts"},"content":"            clientPackages.add(clientPackage);","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"swongts"},"content":"        } catch (TourPlannerException e) {","lastModifiedDate":"2021-11-08"},{"lineNumber":88,"author":{"gitId":"swongts"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-11-08"},{"lineNumber":89,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":91,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":92,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"swongts"},"content":"     * Getter for the clientPackage to be added to clientPackages.","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":95,"author":{"gitId":"swongts"},"content":"     * @return Client Package that will be added to the ClientPackageList","lastModifiedDate":"2021-11-07"},{"lineNumber":96,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"swongts"},"content":"    public ClientPackage getClientPackage() {","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"swongts"},"content":"        return clientPackage;","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"swongts"},"content":"    private void createClientPackage() throws TourPlannerException {","lastModifiedDate":"2021-11-08"},{"lineNumber":102,"author":{"gitId":"swongts"},"content":"        String clientPackageId \u003d rawClientPackage[0];","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"swongts"},"content":"        String clientId \u003d rawClientPackage[1];","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"swongts"},"content":"        String tourId \u003d rawClientPackage[2];","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"swongts"},"content":"        String flightId \u003d rawClientPackage[3];","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"swongts"},"content":"        Client client \u003d extractClient(clientId);","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"swongts"},"content":"        Tour tour \u003d extractTour(tourId);","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"swongts"},"content":"        Flight flight \u003d extractFlight(flightId);","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"swongts"},"content":"        clientPackage \u003d new ClientPackage(clientPackageId, client, tour, flight);","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"swongts"},"content":"    private Client extractClient(String clientId) throws TourPlannerException {","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"swongts"},"content":"        return clients.getClientById(clientId);","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"bobowoo2468"},"content":"    private Tour extractTour(String tourId) throws TourPlannerException {","lastModifiedDate":"2021-10-30"},{"lineNumber":117,"author":{"gitId":"bobowoo2468"},"content":"        return tours.getTourById(tourId);","lastModifiedDate":"2021-10-30"},{"lineNumber":118,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"swongts"},"content":"    private Flight extractFlight(String flightId) throws TourPlannerException {","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"swongts"},"content":"        return flights.getFlightById(flightId);","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"YipWayne":11,"bobowoo2468":3,"swongts":110}},{"path":"src/main/java/seedu/duke/commands/clientpackages/CutClientPackageCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package seedu.duke.commands.clientpackages;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.ClientPackage;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"public class CutClientPackageCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"    private final String clientPackageId;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"    private ClientPackage clientPackage;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"     * Class constructor for CutClientPackageCommand.","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"     * @param clientPackageId ID of to-be-deleted clientPackage in the clientPackage list","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"    public CutClientPackageCommand(String clientPackageId) {","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"        this.clientPackageId \u003d clientPackageId;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"     * Executes the deletion of a specific clientPackage from clientPackage list, according to the clientPackageId.","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"     * If client package id cannot be found, nothing will be deleted from the list.","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"    public void execute() {","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"            this.clientPackage \u003d clientPackages.getClientPackageById(clientPackageId);","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"            int newClientPackageCount \u003d clientPackages.getClientPackageCount() - 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"            ui.showCut(clientPackage);","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"            clientPackages.cut(clientPackage);","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"            assert newClientPackageCount \u003d\u003d clientPackages.getClientPackageCount();","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"            assert newClientPackageCount \u003e\u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"swongts"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"            System.out.println(\"INVALID: Index out of bounds\");","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"        } catch (TourPlannerException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"swongts":39}},{"path":"src/main/java/seedu/duke/commands/clientpackages/ListClientPackageCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke.commands.clientpackages;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"YipWayne"},"content":"/**","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":" * Lists all client packages in the database.","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":" */","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"YipWayne"},"content":"public class ListClientPackageCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"YipWayne"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"YipWayne"},"content":"     * Executes the listing of client packages to the terminal.","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"YipWayne"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"    public void execute() {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"        ui.showListClientPackage(clientPackages);","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"YipWayne":11,"swongts":4}},{"path":"src/main/java/seedu/duke/commands/clients/AddClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke.commands.clients;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.Client;","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":" * Adds a client into the database.","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"public class AddClientCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"    private final Client client;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"     * Class constructor for AddClientCommand.","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"     * @param client client to be added","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"    public AddClientCommand(Client client) {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"        this.client \u003d client;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"     * Returns the client object that was added.","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"     * @return the added client object","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"    public Client getClient() {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"        return client;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"     * Executes the addition of client to client list.","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"     * If given client ID already exists, the client will not be added.","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"    public void execute() {","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"YipWayne"},"content":"        int count \u003d clients.getClientCount();","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"YipWayne"},"content":"        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"YipWayne"},"content":"            Client currClient \u003d clients.getClientByIndex(i);","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"YipWayne"},"content":"            boolean sameId \u003d currClient.getId().equals(client.getId());","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"YipWayne"},"content":"            if (sameId) {","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"YipWayne"},"content":"                System.out.println(\"ERROR: Client ID already exists. Please try another client code.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"YipWayne"},"content":"                return;","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"YipWayne"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"YipWayne"},"content":"            boolean sameName \u003d currClient.getName().equals(client.getName());","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"YipWayne"},"content":"            boolean sameContactNum \u003d currClient.getContactNum().equals(client.getContactNum());","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"YipWayne"},"content":"            boolean sameEmail \u003d currClient.getEmail().equals(client.getEmail());","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"YipWayne"},"content":"            if (sameName \u0026\u0026 sameContactNum \u0026\u0026 sameEmail) {","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"YipWayne"},"content":"                System.out.println(\"ERROR: Client with same fields already exists with different ID.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"YipWayne"},"content":"                return;","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"YipWayne"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"YipWayne"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"swongts"},"content":"        clients.add(client);","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"bobowoo2468"},"content":"        ui.showAdd(client);","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"YipWayne":20,"bobowoo2468":31,"swongts":6}},{"path":"src/main/java/seedu/duke/commands/clients/CutClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package seedu.duke.commands.clients;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.Client;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.ClientPackage;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"public class CutClientCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"    private final String clientId;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"    private Client client;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"     * Class constructor for CutClientCommand.","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"     * @param clientId ID of to-be-deleted client in the client list","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"    public CutClientCommand(String clientId) {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"        this.clientId \u003d clientId;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"     * Executes deletion of the specific client and related client packages, according to the clientId.","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"    public void execute() {","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"            cutClient();","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"            cutClientPackage();","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"        } catch (IndexOutOfBoundsException e1) {","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"            System.out.println(\"INVALID: Index out of bounds\");","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"swongts"},"content":"        } catch (TourPlannerException e2) {","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"            System.out.println(e2.getMessage());","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"     * Executes deletion of the specific client from the client list.","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"     * @throws TourPlannerException if client cannot be found based on the client id","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"swongts"},"content":"    private void cutClient() throws TourPlannerException {","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"swongts"},"content":"        this.client \u003d clients.getClientById(clientId);","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"swongts"},"content":"        final int newClientCount \u003d clients.getClientCount() - 1;","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"swongts"},"content":"        ui.showCut(client);","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"swongts"},"content":"        ui.showLine();","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"swongts"},"content":"        clients.cut(client);","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"swongts"},"content":"        assert newClientCount \u003d\u003d clients.getClientCount();","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"swongts"},"content":"        assert newClientCount \u003e\u003d 0;","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"swongts"},"content":"     * Executes deletion of the client packages containing the specific client from the client package list.","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"swongts"},"content":"    private void cutClientPackage() {","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"swongts"},"content":"        ArrayList\u003cClientPackage\u003e clientPackagesWithClient \u003d clientPackages.getClientPackageByClient(client);","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"swongts"},"content":"        for (ClientPackage clientPackage: clientPackagesWithClient) {","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"swongts"},"content":"            System.out.println();","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"swongts"},"content":"            ui.showCut(clientPackage);","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"swongts"},"content":"            clientPackages.cut(clientPackage);","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"swongts":64}},{"path":"src/main/java/seedu/duke/commands/clients/FindClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke.commands.clients;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"YipWayne"},"content":"/**","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":" * Finds client(s) based on a certain substring.","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":" */","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"YipWayne"},"content":"public class FindClientCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"YipWayne"},"content":"    private final String substring;","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"YipWayne"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"     * Class constructor for FindClientCommand.","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"YipWayne"},"content":"     * @param substring substring used to determine which client(s) to find.","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"    public FindClientCommand(String substring) {","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"YipWayne"},"content":"        this.substring \u003d substring;","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"YipWayne"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"YipWayne"},"content":"     * Executes the finding of client, as well as finding said client\u0027s packages.","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"YipWayne"},"content":"     * If there are no found clients, it will be shown to the user.","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"YipWayne"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"YipWayne"},"content":"    public void execute() {","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"YipWayne"},"content":"        ui.showFindClient(clients, clientPackages, substring);","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"YipWayne":27}},{"path":"src/main/java/seedu/duke/commands/clients/ListClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke.commands.clients;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"YipWayne"},"content":"/**","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":" * Lists all clients in the database.","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":" */","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"public class ListClientCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"YipWayne"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"YipWayne"},"content":"     * Executes the listing of clients to the terminal.","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"YipWayne"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"    public void execute() {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"        ui.showListClient(clients);","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"YipWayne":10,"swongts":5}},{"path":"src/main/java/seedu/duke/commands/clients/SortClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke.commands.clients;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":" * Print a sorted list of clients, with the method of sorting specified by a filter.","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":" * Sorts name of client, or ID of client alphabetically.","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"public class SortClientCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"    public static final String ERROR_MISSING_FILTER \u003d \"Missing filter! Sort clients with the format: \\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"            + \"sort -c /n (sort by name)\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"            + \"sort -c /id (sort by id)\";","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"    public static final String SORT_NAME_FILTER \u003d \"/n\";","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"    public static final String SORT_ID_FILTER \u003d \"/id\";","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"    private final String filter;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"     * Class constructor for SortClientCommand.","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"     * Defines filter input by user.","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"     * @param filter the user input filter that specifies how the clients should be sorted","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"    public SortClientCommand(String filter) {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"        this.filter \u003d filter;","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"     * Executes the printing of the sorted client list, specified by the filter.","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"     * If filter given is /n, sorts the clients by name (in alphabetical order).","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"     * If filter given is /id, sorts the clients by ID (in alphabetical order).","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"    public void execute() {","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"            switch (filter) {","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"            case SORT_NAME_FILTER:","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"                ArrayList\u003cString\u003e sortedNames \u003d clients.getSortedClientNames();","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"                ui.showSortedClientByName(clients, sortedNames);","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"                break;","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"            case SORT_ID_FILTER:","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"                ArrayList\u003cString\u003e sortedIds \u003d clients.getSortedClientIds();","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"                ui.showSortedClientById(clients, sortedIds);","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"bobowoo2468"},"content":"                break;","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"bobowoo2468"},"content":"            default:","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"bobowoo2468"},"content":"                throw new TourPlannerException(ERROR_MISSING_FILTER);","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"bobowoo2468"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"        } catch (TourPlannerException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"bobowoo2468"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"bobowoo2468":54,"swongts":1}},{"path":"src/main/java/seedu/duke/commands/flights/AddFlightCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke.commands.flights;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.data.Flight;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":" * Adds a flight into the database.","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"public class AddFlightCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"    private final Flight flight;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"     * Class constructor for AddFlightCommand.","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"     * @param flight client to be added","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"    public AddFlightCommand(Flight flight) {","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"        this.flight \u003d flight;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"     * Returns the flight object that was added.","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"     * @return the added flight object","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"    public Flight getFlight() {","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"        return flight;","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"     * Executes the addition of flight to flight list.","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"     * If given flight ID already exists, the flight will not be added.","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"    public void execute() {","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"YipWayne"},"content":"        int count \u003d flights.getFlightCount();","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"YipWayne"},"content":"        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"YipWayne"},"content":"            Flight currFlight \u003d flights.getFlightByIndex(i);","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"YipWayne"},"content":"            boolean sameId \u003d currFlight.getId().equals(flight.getId());","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"YipWayne"},"content":"            if (sameId) {","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"YipWayne"},"content":"                System.out.println(\"ERROR: Flight ID already exists. Please try another flight ID.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"YipWayne"},"content":"                return;","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"YipWayne"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"YipWayne"},"content":"            boolean sameDepartDestination \u003d","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"YipWayne"},"content":"                    currFlight.getDepartDestination().equals(flight.getDepartDestination());","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"YipWayne"},"content":"            boolean sameReturnDestination \u003d","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"YipWayne"},"content":"                    currFlight.getReturnDestination().equals(flight.getReturnDestination());","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"YipWayne"},"content":"            boolean sameDepartDate \u003d","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"YipWayne"},"content":"                    currFlight.getDepartDate().equals(flight.getDepartDate());","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"YipWayne"},"content":"            boolean sameReturnDate \u003d","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"YipWayne"},"content":"                    currFlight.getReturnDate().equals(flight.getReturnDate());","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"YipWayne"},"content":"            if (sameDepartDestination \u0026\u0026 sameReturnDestination","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"YipWayne"},"content":"                    \u0026\u0026 sameDepartDate \u0026\u0026 sameReturnDate) {","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"YipWayne"},"content":"                System.out.println(\"ERROR: Flight with same fields already exists with different ID.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"YipWayne"},"content":"                return;","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"YipWayne"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"YipWayne"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"bobowoo2468"},"content":"        flights.add(flight);","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"bobowoo2468"},"content":"        ui.showAdd(flight);","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"YipWayne":26,"bobowoo2468":34,"swongts":1}},{"path":"src/main/java/seedu/duke/commands/flights/CutFlightCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package seedu.duke.commands.flights;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.ClientPackage;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.Flight;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"public class CutFlightCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"    private final String flightId;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"    private Flight flight;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"     * Class constructor for CutFlightCommand.","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"     * @param flightId ID of to-be-deleted flight in the flight list","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"    public CutFlightCommand(String flightId) {","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"        this.flightId \u003d flightId;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"     * Executes deletion of the specific flight and related client packages, according to the flightId.","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"    public void execute() {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"            cutFlight();","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"            cutFlightPackage();","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"        } catch (IndexOutOfBoundsException e1) {","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"            System.out.println(\"INVALID: Index out of bounds\");","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"swongts"},"content":"        } catch (TourPlannerException e2) {","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"            System.out.println(e2.getMessage());","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"     * Executes deletion of the specific flight from the flight list.","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"     * @throws TourPlannerException if flight cannot be found based on the flight id","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"swongts"},"content":"    private void cutFlight() throws TourPlannerException {","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"swongts"},"content":"        this.flight \u003d flights.getFlightById(flightId);","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"swongts"},"content":"        int newFlightCount \u003d flights.getFlightCount() - 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"swongts"},"content":"        ui.showCut(flight);","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"swongts"},"content":"        flights.cut(flight);","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"swongts"},"content":"        assert newFlightCount \u003d\u003d flights.getFlightCount();","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"swongts"},"content":"        assert newFlightCount \u003e\u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"swongts"},"content":"     * Executes deletion of the client packages containing the specific flight from the client package list.","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"swongts"},"content":"    private void cutFlightPackage() {","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"swongts"},"content":"        ArrayList\u003cClientPackage\u003e clientPackagesWithFlight \u003d clientPackages.getClientPackageByFlight(flight);","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"swongts"},"content":"        for (ClientPackage clientPackage: clientPackagesWithFlight) {","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"swongts"},"content":"            System.out.println();","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"swongts"},"content":"            ui.showCut(clientPackage);","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"swongts"},"content":"            clientPackages.cut(clientPackage);","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"swongts":64}},{"path":"src/main/java/seedu/duke/commands/flights/FindFlightCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke.commands.flights;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"/**","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":" * Finds a flight based on a certain id.","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"YipWayne"},"content":" */","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"YipWayne"},"content":"public class FindFlightCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"YipWayne"},"content":"    private final String id;","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"     * Class constructor for FindFlightCommand.","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"YipWayne"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"     * @param id id used to determine which flight to find.","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"YipWayne"},"content":"    public FindFlightCommand(String id) {","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"YipWayne"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"YipWayne"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"YipWayne"},"content":"     * Executes the finding of flight, as well as finding said flight\u0027s passengers.","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"YipWayne"},"content":"     * If there are no found flights, it will be shown to the user.","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"YipWayne"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"YipWayne"},"content":"    public void execute() {","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"YipWayne"},"content":"            ui.showFindFlight(flights, clientPackages, id);","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"        } catch (TourPlannerException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"YipWayne":27,"swongts":5}},{"path":"src/main/java/seedu/duke/commands/flights/ListFlightCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke.commands.flights;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"YipWayne"},"content":"/**","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":" * Lists all flights in the database.","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":" */","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"YipWayne"},"content":"public class ListFlightCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"YipWayne"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"YipWayne"},"content":"     * Executes the listing of flights to the terminal.","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"YipWayne"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"    public void execute() {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"        ui.showListFlight(flights);","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"YipWayne":15}},{"path":"src/main/java/seedu/duke/commands/flights/SortFlightCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke.commands.flights;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":" * Print a sorted list of flights, with the method of sorting specified by a filter.","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":" * Sorts departure time and return time of flight by time proximity.","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":" * Sorts flight ID by alphabetical order.","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"public class SortFlightCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"    private final String filter;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"    public static final String ERROR_MISSING_FILTER \u003d \"Missing filter! Sort flights with the format: \\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"            + \"sort -f /d (sort by departure date and time) \\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"            + \"sort -f /r (sort by return date and time) \\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"            + \"sort -f /id (sort by id alphabetically)\";","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"     * Class constructor for SortFlightCommand.","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"     * Defines filter input by user.","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"     * @param filter the user input filter that specifies how the flights should be sorted","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"    public SortFlightCommand(String filter) {","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"        this.filter \u003d filter;","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"     * Executes the printing of the sorted flight list, specified by the filter.","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"     * If filter given is /d, sorts the departure times (by natural order of time).","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"     * If filter given is /r, sorts the return times (by natural order of time).","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"     * If filter given is /id, sorts the flights by id (in alphabetical order).","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"    public void execute() {","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"            switch (filter) {","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"            case \"/d\":","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"                ArrayList\u003cString\u003e sortedFlightByDepartureDates \u003d flights.getSortedDepartDates();","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"                ui.showSortedFlightByDeparture(flights, sortedFlightByDepartureDates);","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"                break;","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"            case \"/r\":","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"                ArrayList\u003cString\u003e sortedFlightByReturnDates \u003d flights.getSortedReturnDates();","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"                ui.showSortedFlightByReturn(flights, sortedFlightByReturnDates);","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"bobowoo2468"},"content":"                break;","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"bobowoo2468"},"content":"            case \"/id\":","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"bobowoo2468"},"content":"                ArrayList\u003cString\u003e sortedIds \u003d flights.getSortedFlightIds();","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"bobowoo2468"},"content":"                ui.showSortedFlightById(flights, sortedIds);","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"                break;","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"bobowoo2468"},"content":"            default:","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"bobowoo2468"},"content":"                throw new TourPlannerException(ERROR_MISSING_FILTER);","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"bobowoo2468"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"bobowoo2468"},"content":"        } catch (TourPlannerException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"bobowoo2468"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"bobowoo2468":59}},{"path":"src/main/java/seedu/duke/commands/tours/AddTourCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke.commands.tours;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.data.Tour;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":" * Adds a tour into the database.","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"YipWayne"},"content":"public class AddTourCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"YipWayne"},"content":"    private final Tour tour;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"     * Class constructor for AddTourCommand.","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"     * @param tour tour to be added","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"YipWayne"},"content":"    public AddTourCommand(Tour tour) {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"YipWayne"},"content":"        this.tour \u003d tour;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"     * Returns the tour object that was added.","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"     * @return the added tour object","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"    public Tour getTour() {","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"        return tour;","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"     * Executes the addition of tour to tour list.","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"     * If given tour code already exists, the tour will not be added.","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"YipWayne"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"YipWayne"},"content":"    public void execute() {","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"        final int newTourCount \u003d tours.getTourCount() + 1;","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"YipWayne"},"content":"        int count \u003d tours.getTourCount();","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"YipWayne"},"content":"        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"YipWayne"},"content":"            Tour currTour \u003d tours.getTourByIndex(i);","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"YipWayne"},"content":"            boolean sameId \u003d currTour.getId().equals(tour.getId());","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"YipWayne"},"content":"            if (sameId) {","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"YipWayne"},"content":"                System.out.println(\"ERROR: Tour code already exists. Please try another tour code.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"YipWayne"},"content":"                return;","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"YipWayne"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"YipWayne"},"content":"            boolean sameName \u003d currTour.getName().equals(tour.getName());","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"YipWayne"},"content":"            boolean samePrice \u003d currTour.getPrice().equals(tour.getPrice());","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"YipWayne"},"content":"            if (sameName \u0026\u0026 samePrice) {","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"YipWayne"},"content":"                System.out.println(\"ERROR: Tour with same fields already exists with different ID.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"YipWayne"},"content":"                return;","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"YipWayne"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"YipWayne"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"bobowoo2468"},"content":"        tours.add(tour);","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"bobowoo2468"},"content":"        ui.showAdd(tour);","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"YipWayne"},"content":"        assert newTourCount \u003d\u003d tours.getTourCount();","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"YipWayne":33,"bobowoo2468":24,"swongts":1}},{"path":"src/main/java/seedu/duke/commands/tours/CutTourCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package seedu.duke.commands.tours;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.ClientPackage;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.Tour;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"public class CutTourCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"    private final String tourId;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"    private Tour tour;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"     * Class constructor for CutTourCommand.","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"     * @param tourId ID of to-be-deleted tour in the tour list","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"    public CutTourCommand(String tourId) {","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"        this.tourId \u003d tourId;","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"     * Executes deletion of the specific tour and related client packages, according to the tourId.","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"    public void execute() {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"            cutTour();","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"            cutTourPackage();","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"        } catch (IndexOutOfBoundsException e1) {","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"            System.out.println(\"INVALID: Index out of bounds\");","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"swongts"},"content":"        } catch (TourPlannerException e2) {","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"            System.out.println(e2.getMessage());","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"     * Executes deletion of the specific tour from the tour list.","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"     * @throws TourPlannerException if tour cannot be found based on the tour id","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"swongts"},"content":"    private void cutTour() throws TourPlannerException {","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"        this.tour \u003d tours.getTourById(tourId);","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"swongts"},"content":"        int newTourCount \u003d tours.getTourCount() - 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"swongts"},"content":"        ui.showCut(tour);","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"swongts"},"content":"        tours.cut(tour);","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"swongts"},"content":"        assert newTourCount \u003d\u003d tours.getTourCount();","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"swongts"},"content":"        assert newTourCount \u003e\u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"swongts"},"content":"     * Executes deletion of the client packages containing the specific tour from the client package list.","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"swongts"},"content":"    private void cutTourPackage() {","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"swongts"},"content":"        ArrayList\u003cClientPackage\u003e clientPackagesWithTour \u003d clientPackages.getClientPackageByTour(tour);","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"swongts"},"content":"        for (ClientPackage clientPackage: clientPackagesWithTour) {","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"swongts"},"content":"            System.out.println();","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"swongts"},"content":"            ui.showCut(clientPackage);","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"swongts"},"content":"            clientPackages.cut(clientPackage);","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"bobowoo2468":5,"swongts":59}},{"path":"src/main/java/seedu/duke/commands/tours/FindTourCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke.commands.tours;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"/**","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":" * Finds a tour based on a certain id.","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"YipWayne"},"content":" */","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"YipWayne"},"content":"public class FindTourCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"YipWayne"},"content":"    private final String id;","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"     * Class constructor for FindTourCommand.","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"YipWayne"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"     * @param id id used to determine which tour to find.","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"YipWayne"},"content":"    public FindTourCommand(String id) {","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"YipWayne"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"YipWayne"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"YipWayne"},"content":"     * Executes the finding of tour, as well as finding said tour\u0027s subscribers.","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"YipWayne"},"content":"     * If there are no found tours, it will be shown to the user.","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"YipWayne"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"YipWayne"},"content":"    public void execute() {","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"YipWayne"},"content":"            ui.showFindTour(tours, clientPackages, id);","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"        } catch (TourPlannerException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"YipWayne":27,"swongts":5}},{"path":"src/main/java/seedu/duke/commands/tours/ListTourCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke.commands.tours;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"YipWayne"},"content":"/**","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":" * Lists all tours in the database.","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":" */","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"YipWayne"},"content":"public class ListTourCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"YipWayne"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"YipWayne"},"content":"     * Executes the listing of tours to the terminal.","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"YipWayne"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"    public void execute() {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"        ui.showListTour(tours);","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"YipWayne":15}},{"path":"src/main/java/seedu/duke/commands/tours/SortTourCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke.commands.tours;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":" * Print a sorted list of tours, with the method of sorting specified by a filter.","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":" * Sorts tour prices by ascending order.","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":" * Sorts tour ID by alphabetical order.","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"public class SortTourCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"YipWayne"},"content":"    private final String filter;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"    public static final String ERROR_MISSING_FILTER \u003d \"Missing filter! Sort tours with the format: \\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"            + \"sort -t /id (sort by ID alphabetically) \\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"            + \"sort -t /p (sort by increasing price)\";","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"     * Class constructor for SortTourCommand.","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"     * Defines filter input by user.","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"     * @param filter the user input filter that specifies how the tours should be sorted","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"YipWayne"},"content":"    public SortTourCommand(String filter) {","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"YipWayne"},"content":"        this.filter \u003d filter;","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"     * Executes the printing of the sorted flight list, specified by the filter.","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"     * If filter given is /id, sorts the tours by id (in alphabetical order).","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"     * If filter given is /r, sorts the tours by price (in ascending order).","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"YipWayne"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"YipWayne"},"content":"    public void execute() {","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"YipWayne"},"content":"            switch (filter) {","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"            case \"/id\":","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"                ArrayList\u003cString\u003e sortedIds \u003d tours.getSortedTourIds();","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"                ui.showSortedTourById(tours, sortedIds);","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"YipWayne"},"content":"                break;","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"YipWayne"},"content":"            case \"/p\":","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"                ArrayList\u003cFloat\u003e sortedPrices \u003d tours.getSortedTourPrices();","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"                ui.showSortedTourByPrice(tours, sortedPrices);","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"YipWayne"},"content":"                break;","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"            case \"/n\":","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"bobowoo2468"},"content":"                ArrayList\u003cString\u003e sortedNames \u003d tours.getSortedTourNames();","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"bobowoo2468"},"content":"                ui.showSortedTourByName(tours, sortedNames);","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"bobowoo2468"},"content":"                break;","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"YipWayne"},"content":"            default:","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"                throw new TourPlannerException(ERROR_MISSING_FILTER);","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"YipWayne"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"swongts"},"content":"        } catch (TourPlannerException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"swongts"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"YipWayne":23,"bobowoo2468":29,"swongts":5}},{"path":"src/main/java/seedu/duke/data/Client.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke.data;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":" * Represents a client under the Tour agency.","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"Demonshaha"},"content":"public class Client {","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"    private final String id;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"Demonshaha"},"content":"    private final String name;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Demonshaha"},"content":"    private final String contactNum;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"    private final String email;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"     * Client object constructor, that inputs the client\u0027s information obtained from Add command.","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"     * @param values the array of values of the client, ordered in this manner:","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"     *               name, contact number, email","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"Demonshaha"},"content":"    public Client(String[] values) {","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"        id \u003d values[0];","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"        name \u003d values[1];","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"        contactNum \u003d values[2];","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"        email \u003d values[3];","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"     * Getter for id value in Client object.","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"     * @return client\u0027s id","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"    public String getId() {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"        return id;","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"Demonshaha"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for name value in Client object.","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"     * @return client\u0027s name","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"    public String getName() {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"        return name;","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for contact number value in Client object.","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"     * @return client\u0027s contact number","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"swongts"},"content":"    public String getContactNum() {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"swongts"},"content":"        return contactNum;","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"swongts"},"content":"     * Getter for email value in Client object.","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"swongts"},"content":"     * @return client\u0027s email","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"bobowoo2468"},"content":"    public String getEmail() {","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"bobowoo2468"},"content":"        return email;","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"bobowoo2468"},"content":"     * Formats client\u0027s information as a string that is viewable as an indexed list item.","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"bobowoo2468"},"content":"     * @return the formatted string containing client\u0027s information","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"Demonshaha"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"Demonshaha"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"bobowoo2468"},"content":"        return \"Client ID: \" + id + \"\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"bobowoo2468"},"content":"                + \"Name: \" + name + \"\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"bobowoo2468"},"content":"                + \"Contact Number: \" + contactNum + \"\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"YipWayne"},"content":"                + \"Email: \" + email;","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"Demonshaha"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"Demonshaha"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"YipWayne":4,"Demonshaha":12,"bobowoo2468":31,"swongts":27}},{"path":"src/main/java/seedu/duke/data/ClientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke.data;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Demonshaha"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"import java.util.List;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":" * List of clients.","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"Demonshaha"},"content":"public class ClientList {","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"    public static final String CLIENT_NOT_FOUND_MESSAGE \u003d \"ERROR: Client cannot be found. \"","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"            + \"Please try another client ID\";","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"    private final ArrayList\u003cClient\u003e clients;","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"    private final ArrayList\u003cString\u003e clientIds;","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"    private final ArrayList\u003cString\u003e clientNames;","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"    private ArrayList\u003cString\u003e iteratedClientIds;","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"    private int clientCount;","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"     * Class constructor for ClientList.","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"Demonshaha"},"content":"    public ClientList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Demonshaha"},"content":"        clients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"        clientIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"        clientNames \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Demonshaha"},"content":"        clientCount \u003d 0;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Demonshaha"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"     * Getter for clients.","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"     * @return ArrayList containing all clients in the database.","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"    public ArrayList\u003cClient\u003e getClients() {","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"        return clients;","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"Demonshaha"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for number of clients in the client list.","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"     * @return the number of clients in client list.","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"YipWayne"},"content":"    public int getClientCount() {","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"YipWayne"},"content":"        return clientCount;","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for client object in the client list, corresponding to the index given.","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"bobowoo2468"},"content":"     * @param index the index of the specific client in the client list","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"bobowoo2468"},"content":"     * @return the client object corresponding to the index","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"swongts"},"content":"    public Client getClientByIndex(int index) {","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"YipWayne"},"content":"        return clients.get(index);","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"swongts"},"content":"     * Getter for client object in the client list, corresponding to the client id given.","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"swongts"},"content":"     * @param clientId client id of the specific client in the client list","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"swongts"},"content":"     * @return the client object corresponding to the client id","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"swongts"},"content":"     * @throws TourPlannerException if client object with clientId cannot be found in clients","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"swongts"},"content":"    public Client getClientById(String clientId) throws TourPlannerException {","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"bobowoo2468"},"content":"        for (Client client : clients) {","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"bobowoo2468"},"content":"            if (client.getId().equals(clientId)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"bobowoo2468"},"content":"                return client;","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"bobowoo2468"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"bobowoo2468"},"content":"        throw new TourPlannerException(CLIENT_NOT_FOUND_MESSAGE);","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"swongts"},"content":"     * Getter for client object in the client list, corresponding to the client name given.","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"swongts"},"content":"     * @param clientName the name of a client in the clientList","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"swongts"},"content":"     * @return the client object corresponding to the name","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"bobowoo2468"},"content":"    public Client getClientByName(String clientName) throws TourPlannerException {","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"bobowoo2468"},"content":"        for (Client currClient : clients) {","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"bobowoo2468"},"content":"            String clientId \u003d currClient.getId();","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"bobowoo2468"},"content":"            String currClientName \u003d currClient.getName();","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"bobowoo2468"},"content":"            if (currClientName.equals(clientName) \u0026\u0026 !iteratedClientIds.contains(clientId)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"bobowoo2468"},"content":"                iteratedClientIds.add(clientId);","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"bobowoo2468"},"content":"                return currClient;","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"swongts"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"swongts"},"content":"        throw new TourPlannerException(CLIENT_NOT_FOUND_MESSAGE);","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for the sorted list of client IDs.","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"bobowoo2468"},"content":"     * Sorts the client IDs by the natural ordering of String, ignoring case sensitivities.","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"bobowoo2468"},"content":"     * @return the list of sorted client IDs, by natural(alphabetical, numerical) order","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"bobowoo2468"},"content":"     * @see Collections#sort(List, Comparator)","lastModifiedDate":"2021-11-07"},{"lineNumber":101,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"bobowoo2468"},"content":"    public ArrayList\u003cString\u003e getSortedClientIds() {","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"bobowoo2468"},"content":"        Collections.sort(clientIds, String.CASE_INSENSITIVE_ORDER);","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"bobowoo2468"},"content":"        return clientIds;","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for the sorted list of client names.","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"bobowoo2468"},"content":"     * Sorts the client names by the natural ordering of String, ignoring case sensitivities.","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"bobowoo2468"},"content":"     * @return the list of sorted client names, by natural(alphabetical, numerical) order","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"bobowoo2468"},"content":"     * @see Collections#sort(List, Comparator)","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":114,"author":{"gitId":"bobowoo2468"},"content":"    public ArrayList\u003cString\u003e getSortedClientNames() {","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"bobowoo2468"},"content":"        Collections.sort(clientNames, String.CASE_INSENSITIVE_ORDER);","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"bobowoo2468"},"content":"        return clientNames;","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":120,"author":{"gitId":"bobowoo2468"},"content":"     * Creates a new temporary array each time the function is called.","lastModifiedDate":"2021-11-07"},{"lineNumber":121,"author":{"gitId":"bobowoo2468"},"content":"     * The flight IDs that have been iterated by Ui in the sort command will be added into FlightList\u0027s","lastModifiedDate":"2021-11-07"},{"lineNumber":122,"author":{"gitId":"bobowoo2468"},"content":"     * temporary array to prevent duplicates.","lastModifiedDate":"2021-11-07"},{"lineNumber":123,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":124,"author":{"gitId":"bobowoo2468"},"content":"    public void initTempArray() {","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"bobowoo2468"},"content":"        iteratedClientIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-08"},{"lineNumber":126,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":129,"author":{"gitId":"swongts"},"content":"     * Main method for adding a client.","lastModifiedDate":"2021-11-07"},{"lineNumber":130,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":131,"author":{"gitId":"swongts"},"content":"     * @param client the client to-be-added","lastModifiedDate":"2021-11-07"},{"lineNumber":132,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":133,"author":{"gitId":"swongts"},"content":"    public void add(Client client) {","lastModifiedDate":"2021-11-07"},{"lineNumber":134,"author":{"gitId":"swongts"},"content":"        clientCount++;","lastModifiedDate":"2021-11-07"},{"lineNumber":135,"author":{"gitId":"swongts"},"content":"        clients.add(client);","lastModifiedDate":"2021-11-07"},{"lineNumber":136,"author":{"gitId":"swongts"},"content":"        clientIds.add(client.getId());","lastModifiedDate":"2021-11-07"},{"lineNumber":137,"author":{"gitId":"swongts"},"content":"        clientNames.add(client.getName());","lastModifiedDate":"2021-11-07"},{"lineNumber":138,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":139,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":140,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":141,"author":{"gitId":"bobowoo2468"},"content":"     * Main method for deleting a client.","lastModifiedDate":"2021-10-14"},{"lineNumber":142,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":143,"author":{"gitId":"bobowoo2468"},"content":"     * @param client the client-to-be-deleted","lastModifiedDate":"2021-11-08"},{"lineNumber":144,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":145,"author":{"gitId":"swongts"},"content":"    public void cut(Client client) {","lastModifiedDate":"2021-11-07"},{"lineNumber":146,"author":{"gitId":"bobowoo2468"},"content":"        clientIds.remove(client.getId());","lastModifiedDate":"2021-11-07"},{"lineNumber":147,"author":{"gitId":"bobowoo2468"},"content":"        clientNames.remove(client.getName());","lastModifiedDate":"2021-11-07"},{"lineNumber":148,"author":{"gitId":"swongts"},"content":"        clients.remove(client);","lastModifiedDate":"2021-11-07"},{"lineNumber":149,"author":{"gitId":"swongts"},"content":"        clientCount--;","lastModifiedDate":"2021-11-07"},{"lineNumber":150,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"Demonshaha"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"YipWayne":11,"Demonshaha":13,"bobowoo2468":84,"swongts":43}},{"path":"src/main/java/seedu/duke/data/ClientPackage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke.data;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":" * Represents a packaged client under the Tour agency.","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"public class ClientPackage {","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"    private final String clientPackageId;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"YipWayne"},"content":"    private final Client client;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"YipWayne"},"content":"    private final Tour tour;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"YipWayne"},"content":"    private final Flight flight;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"     * Class constructor for ClientPackage.","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"     * @param clientPackageId unique ID of client package to identify it by","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"     * @param client          client to be added to the client package","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"     * @param tour            tour to be added to the client package","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"     * @param flight          flight to be added to the client package","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"    public ClientPackage(String clientPackageId, Client client, Tour tour, Flight flight) {","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"        this.clientPackageId \u003d clientPackageId;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"YipWayne"},"content":"        this.client \u003d client;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"YipWayne"},"content":"        this.tour \u003d tour;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"YipWayne"},"content":"        this.flight \u003d flight;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"     * Getter for Client object of client in the client package.","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"     * @return client in the client package","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"YipWayne"},"content":"    public Client getClient() {","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"YipWayne"},"content":"        return client;","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"     * Getter for Tour object of tour in the client package.","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"     * @return tour in the client package","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"YipWayne"},"content":"    public Tour getTour() {","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"YipWayne"},"content":"        return tour;","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"swongts"},"content":"     * Getter for Flight object of flight in the client package.","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"swongts"},"content":"     * @return flight in the client package","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"YipWayne"},"content":"    public Flight getFlight() {","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"YipWayne"},"content":"        return flight;","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"swongts"},"content":"     * Getter for id value of ClientPackage object.","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"swongts"},"content":"     * @return id of the client package","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"swongts"},"content":"    public String getId() {","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"swongts"},"content":"        return clientPackageId;","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"swongts"},"content":"     * Formats client package\u0027s information as a string that is viewable as an indexed list item.","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"swongts"},"content":"     * @return the formatted string containing client package\u0027s information","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"swongts"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"swongts"},"content":"    public String toString() {","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"swongts"},"content":"        return \"Package ID: \" + clientPackageId + \"\\n\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"swongts"},"content":"                + \"Client: \" + \"\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"swongts"},"content":"                + client + \"\\n\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"swongts"},"content":"                + \"Tour: \" + \"\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"swongts"},"content":"                + tour + \"\\n\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"swongts"},"content":"                + \"Flight: \" + \"\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"YipWayne"},"content":"                + flight;","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"YipWayne":24,"bobowoo2468":3,"swongts":51}},{"path":"src/main/java/seedu/duke/data/ClientPackageList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke.data;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"YipWayne"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":" * List of client packages.","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"public class ClientPackageList {","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"    public static final String CLIENTPACKAGE_NOT_FOUND_MESSAGE","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"            \u003d \"Client Package cannot be found. Please try another client package ID\";","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"    private final ArrayList\u003cClientPackage\u003e clientPackages;","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"    private int clientPackageCount;","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"     * Class constructor for ClientPackageList.","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"    public ClientPackageList() {","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"        clientPackages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"        clientPackageCount \u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"     * Getter for clientPackages.","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"     * @return ArrayList containing all client packages in the database","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"    public ArrayList\u003cClientPackage\u003e getClientPackages() {","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"        return clientPackages;","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"     * Getter for ClientPackage object according to its index in clientPackages.","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"     * @param index index of the client package in clientPackages","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"     * @return ClientPackage object of the corresponding index","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"    public ClientPackage getClientPackageByIndex(int index) {","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"        return clientPackages.get(index);","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"swongts"},"content":"     * Getter for ClientPackage object according to its clientPackageId.","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"swongts"},"content":"     * @param clientPackageId id of the client package to get from clientPackages","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"swongts"},"content":"     * @return ClientPackage object of the corresponding client package id","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"swongts"},"content":"     * @throws TourPlannerException if client package containing clientPackageId cannot be found in clientPackages","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"swongts"},"content":"    public ClientPackage getClientPackageById(String clientPackageId) throws TourPlannerException {","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"swongts"},"content":"        for (int i \u003d 0; i \u003c clientPackageCount; i++) {","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"swongts"},"content":"            if (clientPackages.get(i).getId().equals(clientPackageId)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"swongts"},"content":"                return clientPackages.get(i);","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"swongts"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"swongts"},"content":"        throw new TourPlannerException(CLIENTPACKAGE_NOT_FOUND_MESSAGE);","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"swongts"},"content":"     * Getter for ClientPackage objects that contain client.","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"swongts"},"content":"     * @param client client that is contained inside the client package(s)","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"swongts"},"content":"     * @return ArrayList of client packages that contain that client","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"swongts"},"content":"    public ArrayList\u003cClientPackage\u003e getClientPackageByClient(Client client) {","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"swongts"},"content":"        ArrayList\u003cClientPackage\u003e clientPackagesWithClient \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"swongts"},"content":"        for (int i \u003d 0; i \u003c clientPackageCount; i++) {","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"swongts"},"content":"            ClientPackage clientPackage \u003d clientPackages.get(i);","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"swongts"},"content":"            if (clientPackage.getClient().equals(client)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"swongts"},"content":"                clientPackagesWithClient.add(clientPackage);","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"swongts"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"swongts"},"content":"        return clientPackagesWithClient;","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"swongts"},"content":"     * Getter for ClientPackage objects that contain tour.","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"swongts"},"content":"     * @param tour tour that is contained inside the client package(s)","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"swongts"},"content":"     * @return ArrayList of client packages that contain tour","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"swongts"},"content":"    public ArrayList\u003cClientPackage\u003e getClientPackageByTour(Tour tour) {","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"swongts"},"content":"        ArrayList\u003cClientPackage\u003e clientPackagesWithTour \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"swongts"},"content":"        for (int i \u003d 0; i \u003c clientPackageCount; i++) {","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"swongts"},"content":"            ClientPackage clientPackage \u003d clientPackages.get(i);","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"swongts"},"content":"            if (clientPackage.getTour().equals(tour)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"swongts"},"content":"                clientPackagesWithTour.add(clientPackage);","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"swongts"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"swongts"},"content":"        return clientPackagesWithTour;","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":95,"author":{"gitId":"swongts"},"content":"     * Getter for ClientPackage objects that contain flight.","lastModifiedDate":"2021-11-07"},{"lineNumber":96,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"swongts"},"content":"     * @param flight flight that is contained inside the client package(s)","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"swongts"},"content":"     * @return ArrayList of client packages that contain flight","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"swongts"},"content":"    public ArrayList\u003cClientPackage\u003e getClientPackageByFlight(Flight flight) {","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"swongts"},"content":"        ArrayList\u003cClientPackage\u003e clientPackagesWithFlight \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"swongts"},"content":"        for (int i \u003d 0; i \u003c clientPackageCount; i++) {","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"swongts"},"content":"            ClientPackage clientPackage \u003d clientPackages.get(i);","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"swongts"},"content":"            if (clientPackage.getFlight().equals(flight)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"swongts"},"content":"                clientPackagesWithFlight.add(clientPackage);","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"swongts"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"swongts"},"content":"        return clientPackagesWithFlight;","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"swongts"},"content":"     * Getter for number of client packages in ClientPackageList clientPackages.","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":114,"author":{"gitId":"swongts"},"content":"     * @return clientPackageCount of clientPackages","lastModifiedDate":"2021-11-07"},{"lineNumber":115,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":116,"author":{"gitId":"swongts"},"content":"    public int getClientPackageCount() {","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"swongts"},"content":"        return clientPackageCount;","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":121,"author":{"gitId":"swongts"},"content":"     * Adds clientPackage to clientPackages.","lastModifiedDate":"2021-11-07"},{"lineNumber":122,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":123,"author":{"gitId":"swongts"},"content":"     * @param clientPackage ClientPackage object to be added to clientPackages","lastModifiedDate":"2021-11-07"},{"lineNumber":124,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":125,"author":{"gitId":"swongts"},"content":"    public void add(ClientPackage clientPackage) {","lastModifiedDate":"2021-11-07"},{"lineNumber":126,"author":{"gitId":"swongts"},"content":"        clientPackageCount++;","lastModifiedDate":"2021-11-07"},{"lineNumber":127,"author":{"gitId":"swongts"},"content":"        clientPackages.add(clientPackage);","lastModifiedDate":"2021-11-07"},{"lineNumber":128,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":129,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":130,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":131,"author":{"gitId":"swongts"},"content":"     * Cuts clientPackage from clientPackages.","lastModifiedDate":"2021-11-07"},{"lineNumber":132,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":133,"author":{"gitId":"swongts"},"content":"     * @param clientPackage ClientPackage object to be deleted from clientPackages","lastModifiedDate":"2021-11-07"},{"lineNumber":134,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":135,"author":{"gitId":"swongts"},"content":"    public void cut(ClientPackage clientPackage) {","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"swongts"},"content":"        clientPackages.remove(clientPackage);","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"swongts"},"content":"        clientPackageCount--;","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"YipWayne":15,"bobowoo2468":4,"swongts":121}},{"path":"src/main/java/seedu/duke/data/Flight.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke.data;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":" * Represents a flight under the Tour agency.","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"public class Flight {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":"    private final String id;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"    private final String departDestination;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"    private final String returnDestination;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"    private final String departDate;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"    private final String returnDate;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"     * Flight object constructor, that inputs the flight\u0027s information obtained from Add command.","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"     * @param values the array of values of the flight, ordered in this manner:","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"     *               flight ID, departure destination, return destination, departure date-time, return date-time","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"YipWayne"},"content":"    public Flight(String[] values) {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"YipWayne"},"content":"        id \u003d values[0];","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"        departDestination \u003d values[1];","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"        returnDestination \u003d values[2];","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"        departDate \u003d values[3];","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"        returnDate \u003d values[4];","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for id value in Flight object.","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"     * @return flight\u0027s id","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"YipWayne"},"content":"    public String getId() {","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"YipWayne"},"content":"        return id;","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for return destination in Flight object.","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"     * @return flight\u0027s return destination","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"    public String getReturnDestination() {","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"        return returnDestination;","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for departure destination in Flight object.","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"bobowoo2468"},"content":"     * @return flight\u0027s departure destination","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"bobowoo2468"},"content":"    public String getDepartDestination() {","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"        return departDestination;","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for return date-time in Flight\u0027s object.","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"bobowoo2468"},"content":"     * @return flight\u0027s return date-time","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"bobowoo2468"},"content":"    public String getReturnDate() {","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"bobowoo2468"},"content":"        return returnDate;","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for departure date-time in Flight\u0027s object.","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"bobowoo2468"},"content":"     * @return flight\u0027s departure date-time","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"bobowoo2468"},"content":"    public String getDepartDate() {","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"bobowoo2468"},"content":"        return departDate;","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"bobowoo2468"},"content":"     * Formats flight\u0027s information as a string that is viewable as an indexed list item.","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"bobowoo2468"},"content":"     * @return the formatted string containing flight\u0027s information","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"bobowoo2468"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"bobowoo2468"},"content":"    public String toString() {","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"bobowoo2468"},"content":"        return \"Flight ID: \" + id + \"\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"bobowoo2468"},"content":"                + \"Departure Flight: \" + departDestination + \", \" + departDate + \"\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"bobowoo2468"},"content":"                + \"Return Flight: \" + returnDestination + \", \" + returnDate;","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"YipWayne":21,"bobowoo2468":62}},{"path":"src/main/java/seedu/duke/data/FlightList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke.data;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"import java.util.List;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":" * List of flights.","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"public class FlightList {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"    public static final String FLIGHT_NOT_FOUND_MESSAGE \u003d \"ERROR: Flight cannot be found. \"","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"YipWayne"},"content":"            + \"Please try another flight ID.\";","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"    private final ArrayList\u003cFlight\u003e flights;","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"    private final ArrayList\u003cString\u003e flightIds;","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"    private final ArrayList\u003cString\u003e flightReturnDates;","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"    private final ArrayList\u003cString\u003e flightDepartureDates;","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"    private ArrayList\u003cString\u003e iteratedFlightIds;","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"    private int flightCount;","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"     * Class constructor for FlightList.","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"YipWayne"},"content":"    public FlightList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"YipWayne"},"content":"        flights \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"        flightIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"        flightReturnDates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"        flightDepartureDates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"YipWayne"},"content":"        flightCount \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for flight list.","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"     * @return the list of flights","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"    public ArrayList\u003cFlight\u003e getFlights() {","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"        return flights;","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for number of flights in the flight list.","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"bobowoo2468"},"content":"     * @return the number of flights in flight list.","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"YipWayne"},"content":"    public int getFlightCount() {","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"YipWayne"},"content":"        return flightCount;","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for flight object in the flight list, corresponding to the index given.","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"bobowoo2468"},"content":"     * @param index the index of the specific flight in the flight list","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"bobowoo2468"},"content":"     * @return the flight object corresponding to the index","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"swongts"},"content":"    public Flight getFlightByIndex(int index) {","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"YipWayne"},"content":"        return flights.get(index);","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for flight object in the flight list, corresponding to the flight ID given.","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"bobowoo2468"},"content":"     * @param flightId the given flight ID, unique to each set of flights","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"bobowoo2468"},"content":"     * @return the flight object, specified by the flight ID","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if the flight with the given flight ID is not found in the database","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"swongts"},"content":"    public Flight getFlightById(String flightId) throws TourPlannerException {","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"swongts"},"content":"        for (int i \u003d 0; i \u003c flightCount; i++) {","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"swongts"},"content":"            if (flights.get(i).getId().equals(flightId)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"swongts"},"content":"                return flights.get(i);","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"swongts"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"swongts"},"content":"        throw new TourPlannerException(FLIGHT_NOT_FOUND_MESSAGE);","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"bobowoo2468"},"content":"     * Comparator for extension of Collections.sort() which does not include date-time sort functionality.","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"bobowoo2468"},"content":"     * Overrides compare method within the Comparator to compare between date-times.","lastModifiedDate":"2021-11-08"},{"lineNumber":85,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":86,"author":{"gitId":"bobowoo2468"},"content":"     * @see Comparator","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":88,"author":{"gitId":"bobowoo2468"},"content":"    private static final Comparator\u003cString\u003e dateTimeStringComparator \u003d new Comparator\u003c\u003e() {","lastModifiedDate":"2021-11-08"},{"lineNumber":89,"author":{"gitId":"bobowoo2468"},"content":"        final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yy HH:mm\");","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":91,"author":{"gitId":"bobowoo2468"},"content":"        @Override","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"bobowoo2468"},"content":"        public int compare(String dateTimeStringOne, String dateTimeStringTwo) {","lastModifiedDate":"2021-11-08"},{"lineNumber":93,"author":{"gitId":"bobowoo2468"},"content":"            LocalDateTime dateTimeOne \u003d LocalDateTime.parse(dateTimeStringOne, formatter);","lastModifiedDate":"2021-11-08"},{"lineNumber":94,"author":{"gitId":"bobowoo2468"},"content":"            LocalDateTime dateTimeTwo \u003d LocalDateTime.parse(dateTimeStringTwo, formatter);","lastModifiedDate":"2021-11-08"},{"lineNumber":95,"author":{"gitId":"bobowoo2468"},"content":"            if (dateTimeOne.isBefore(dateTimeTwo)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":96,"author":{"gitId":"bobowoo2468"},"content":"                return -1;","lastModifiedDate":"2021-11-08"},{"lineNumber":97,"author":{"gitId":"bobowoo2468"},"content":"            } else if (dateTimeOne.isEqual(dateTimeTwo)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":98,"author":{"gitId":"bobowoo2468"},"content":"                return 0;","lastModifiedDate":"2021-11-08"},{"lineNumber":99,"author":{"gitId":"bobowoo2468"},"content":"            } else {","lastModifiedDate":"2021-11-08"},{"lineNumber":100,"author":{"gitId":"bobowoo2468"},"content":"                return 1;","lastModifiedDate":"2021-11-08"},{"lineNumber":101,"author":{"gitId":"bobowoo2468"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":102,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":103,"author":{"gitId":"bobowoo2468"},"content":"    };","lastModifiedDate":"2021-11-08"},{"lineNumber":104,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":105,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for flight object in the flight list, corresponding to the flight return date given.","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"bobowoo2468"},"content":"     * @param flightReturnDate the date-time of the return flight, in String","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"bobowoo2468"},"content":"     * @return the flight object, specified by the return flight\u0027s date-time","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if the flight with the given return flight\u0027s date-time is not found in the database","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"bobowoo2468"},"content":"    public Flight getFlightByReturnDate(String flightReturnDate) throws TourPlannerException {","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"bobowoo2468"},"content":"        for (Flight currFlight : flights) {","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"bobowoo2468"},"content":"            String flightId \u003d currFlight.getId();","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"bobowoo2468"},"content":"            String currFlightReturnDate \u003d currFlight.getReturnDate();","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"bobowoo2468"},"content":"            if (currFlightReturnDate.equals(flightReturnDate) \u0026\u0026 !iteratedFlightIds.contains(flightId)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"bobowoo2468"},"content":"                iteratedFlightIds.add(flightId);","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"bobowoo2468"},"content":"                return currFlight;","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"bobowoo2468"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"bobowoo2468"},"content":"        throw new TourPlannerException(FLIGHT_NOT_FOUND_MESSAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":125,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for flight object in the flight list, corresponding to the flight departure date given.","lastModifiedDate":"2021-11-07"},{"lineNumber":126,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":127,"author":{"gitId":"bobowoo2468"},"content":"     * @param flightDepartDate the date-time of the departure flight, in String","lastModifiedDate":"2021-11-07"},{"lineNumber":128,"author":{"gitId":"bobowoo2468"},"content":"     * @return the flight object, specified by the departure flight\u0027s date-time","lastModifiedDate":"2021-11-07"},{"lineNumber":129,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if the flight with the given departure flight\u0027s date-time","lastModifiedDate":"2021-11-07"},{"lineNumber":130,"author":{"gitId":"bobowoo2468"},"content":"     *                              is not found in the database","lastModifiedDate":"2021-11-07"},{"lineNumber":131,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":132,"author":{"gitId":"bobowoo2468"},"content":"    public Flight getFlightByDepartDate(String flightDepartDate) throws TourPlannerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"bobowoo2468"},"content":"        for (Flight currFlight : flights) {","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"bobowoo2468"},"content":"            String flightId \u003d currFlight.getId();","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"bobowoo2468"},"content":"            String currFlightDepartDate \u003d currFlight.getDepartDate();","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"bobowoo2468"},"content":"            if (currFlightDepartDate.equals(flightDepartDate) \u0026\u0026 !iteratedFlightIds.contains(flightId)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"bobowoo2468"},"content":"                iteratedFlightIds.add(flightId);","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"bobowoo2468"},"content":"                return currFlight;","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"bobowoo2468"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"bobowoo2468"},"content":"        throw new TourPlannerException(FLIGHT_NOT_FOUND_MESSAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":145,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for the sorted list of flight IDs.","lastModifiedDate":"2021-11-07"},{"lineNumber":146,"author":{"gitId":"bobowoo2468"},"content":"     * Sorts the flight IDs by the natural ordering of String, ignoring case sensitivities.","lastModifiedDate":"2021-11-07"},{"lineNumber":147,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":148,"author":{"gitId":"bobowoo2468"},"content":"     * @return the list of sorted flight IDs, by natural(alphabetical, numerical) order","lastModifiedDate":"2021-11-07"},{"lineNumber":149,"author":{"gitId":"bobowoo2468"},"content":"     * @see Collections#sort(List, Comparator)","lastModifiedDate":"2021-11-07"},{"lineNumber":150,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":151,"author":{"gitId":"bobowoo2468"},"content":"    public ArrayList\u003cString\u003e getSortedFlightIds() {","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"bobowoo2468"},"content":"        Collections.sort(flightIds, String.CASE_INSENSITIVE_ORDER);","lastModifiedDate":"2021-11-05"},{"lineNumber":153,"author":{"gitId":"bobowoo2468"},"content":"        return flightIds;","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":157,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for the sorted list of flight return date-times.","lastModifiedDate":"2021-11-07"},{"lineNumber":158,"author":{"gitId":"bobowoo2468"},"content":"     * Sorts using the dateTimeStringComparator in FlightList.","lastModifiedDate":"2021-11-07"},{"lineNumber":159,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":160,"author":{"gitId":"bobowoo2468"},"content":"     * @return the list of sorted return flight date-times, as specified in dateTimeStringComparator","lastModifiedDate":"2021-11-07"},{"lineNumber":161,"author":{"gitId":"bobowoo2468"},"content":"     * @see FlightList#dateTimeStringComparator","lastModifiedDate":"2021-11-07"},{"lineNumber":162,"author":{"gitId":"bobowoo2468"},"content":"     * @see Collections#sort(List)","lastModifiedDate":"2021-11-07"},{"lineNumber":163,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":164,"author":{"gitId":"bobowoo2468"},"content":"    public ArrayList\u003cString\u003e getSortedReturnDates() {","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"bobowoo2468"},"content":"        flightReturnDates.sort(dateTimeStringComparator);","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"bobowoo2468"},"content":"        return flightReturnDates;","lastModifiedDate":"2021-10-26"},{"lineNumber":167,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":170,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for the sorted list of flight departure date-times.","lastModifiedDate":"2021-11-07"},{"lineNumber":171,"author":{"gitId":"bobowoo2468"},"content":"     * Sorts using the dateTimeStringComparator in FlightList.","lastModifiedDate":"2021-11-07"},{"lineNumber":172,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":173,"author":{"gitId":"bobowoo2468"},"content":"     * @return the list of sorted departure flight date-times, as specified in dateTimeStringComparator","lastModifiedDate":"2021-11-07"},{"lineNumber":174,"author":{"gitId":"bobowoo2468"},"content":"     * @see FlightList#dateTimeStringComparator","lastModifiedDate":"2021-11-07"},{"lineNumber":175,"author":{"gitId":"bobowoo2468"},"content":"     * @see Collections#sort(List)","lastModifiedDate":"2021-11-07"},{"lineNumber":176,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":177,"author":{"gitId":"bobowoo2468"},"content":"    public ArrayList\u003cString\u003e getSortedDepartDates() {","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"bobowoo2468"},"content":"        flightDepartureDates.sort(dateTimeStringComparator);","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"bobowoo2468"},"content":"        return flightDepartureDates;","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":183,"author":{"gitId":"bobowoo2468"},"content":"     * Creates a new temporary array each time the function is called.","lastModifiedDate":"2021-11-07"},{"lineNumber":184,"author":{"gitId":"bobowoo2468"},"content":"     * The flight IDs that have been iterated by Ui in the sort command will be added into FlightList\u0027s","lastModifiedDate":"2021-11-07"},{"lineNumber":185,"author":{"gitId":"bobowoo2468"},"content":"     * temporary array to prevent duplicates.","lastModifiedDate":"2021-11-07"},{"lineNumber":186,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":187,"author":{"gitId":"bobowoo2468"},"content":"    public void initTempArray() {","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"bobowoo2468"},"content":"        iteratedFlightIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":191,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":192,"author":{"gitId":"bobowoo2468"},"content":"     * Main method for adding a flight.","lastModifiedDate":"2021-11-08"},{"lineNumber":193,"author":{"gitId":"bobowoo2468"},"content":"     * Add all information of different fields into their respective ArrayLists.","lastModifiedDate":"2021-11-08"},{"lineNumber":194,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":195,"author":{"gitId":"bobowoo2468"},"content":"     * @param flight the flight to be added","lastModifiedDate":"2021-11-08"},{"lineNumber":196,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":197,"author":{"gitId":"bobowoo2468"},"content":"    public void add(Flight flight) {","lastModifiedDate":"2021-11-08"},{"lineNumber":198,"author":{"gitId":"bobowoo2468"},"content":"        flights.add(flight);","lastModifiedDate":"2021-11-08"},{"lineNumber":199,"author":{"gitId":"bobowoo2468"},"content":"        flightIds.add(flight.getId());","lastModifiedDate":"2021-11-08"},{"lineNumber":200,"author":{"gitId":"bobowoo2468"},"content":"        flightReturnDates.add(flight.getReturnDate());","lastModifiedDate":"2021-11-08"},{"lineNumber":201,"author":{"gitId":"bobowoo2468"},"content":"        flightDepartureDates.add(flight.getDepartDate());","lastModifiedDate":"2021-11-08"},{"lineNumber":202,"author":{"gitId":"bobowoo2468"},"content":"        flightCount++;","lastModifiedDate":"2021-11-08"},{"lineNumber":203,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":204,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":205,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":206,"author":{"gitId":"bobowoo2468"},"content":"     * Main method for cutting a flight.","lastModifiedDate":"2021-11-08"},{"lineNumber":207,"author":{"gitId":"bobowoo2468"},"content":"     * Removes all information of different fields from their respective ArrayLists.","lastModifiedDate":"2021-11-08"},{"lineNumber":208,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":209,"author":{"gitId":"bobowoo2468"},"content":"     * @param flight the flight to be added","lastModifiedDate":"2021-11-08"},{"lineNumber":210,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":211,"author":{"gitId":"bobowoo2468"},"content":"    public void cut(Flight flight) {","lastModifiedDate":"2021-11-08"},{"lineNumber":212,"author":{"gitId":"bobowoo2468"},"content":"        flights.remove(flight);","lastModifiedDate":"2021-11-08"},{"lineNumber":213,"author":{"gitId":"bobowoo2468"},"content":"        flightIds.remove(flight.getId());","lastModifiedDate":"2021-11-08"},{"lineNumber":214,"author":{"gitId":"bobowoo2468"},"content":"        flightReturnDates.remove(flight.getReturnDate());","lastModifiedDate":"2021-11-08"},{"lineNumber":215,"author":{"gitId":"bobowoo2468"},"content":"        flightDepartureDates.remove(flight.getDepartDate());","lastModifiedDate":"2021-11-08"},{"lineNumber":216,"author":{"gitId":"bobowoo2468"},"content":"        flightCount--;","lastModifiedDate":"2021-11-08"},{"lineNumber":217,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":218,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"YipWayne":22,"bobowoo2468":180,"swongts":16}},{"path":"src/main/java/seedu/duke/data/Tour.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke.data;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"/**","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"YipWayne"},"content":" * Represents a tour under the Tour agency.","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"YipWayne"},"content":" */","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"public class Tour {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"    private final String id;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"YipWayne"},"content":"    private final String name;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"    private final Float price;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"YipWayne"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"     * Tour object constructor, that inputs the tour\u0027s information obtained from Add command.","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"YipWayne"},"content":"     * @param values the array of values of the tour, ordered in this manner:","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"     *               id, name, price","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"YipWayne"},"content":"    public Tour(String[] values) {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"        id \u003d values[0];","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"YipWayne"},"content":"        name \u003d values[1];","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"YipWayne"},"content":"        price \u003d Float.parseFloat(values[2]);","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"YipWayne"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"YipWayne"},"content":"     * Getter for id value in Tour object.","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"YipWayne"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"YipWayne"},"content":"     * @return tour\u0027s ID.","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"YipWayne"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"    public String getId() {","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"        return id;","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"YipWayne"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"YipWayne"},"content":"     * Getter for name value in Tour object.","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"YipWayne"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"YipWayne"},"content":"     * @return tour\u0027s name.","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"YipWayne"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"YipWayne"},"content":"    public String getName() {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"YipWayne"},"content":"        return name;","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"YipWayne"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"YipWayne"},"content":"     * Getter for price value in Tour object.","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"YipWayne"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"YipWayne"},"content":"     * @return tour\u0027s price.","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"YipWayne"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"    public Float getPrice() {","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"YipWayne"},"content":"        return price;","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"YipWayne"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"YipWayne"},"content":"     * Formats tour\u0027s information as a string that is viewable as an indexed list item.","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"YipWayne"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"YipWayne"},"content":"     * @return the formatted string containing tour\u0027s information","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"YipWayne"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"YipWayne"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"YipWayne"},"content":"    public String toString() {","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"swongts"},"content":"        return \"Tour ID: \" + id + \"\\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"swongts"},"content":"                + \"Name: \" + name + \"\\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"YipWayne"},"content":"                + \"Price per pax: $\" + String.format(\"%.02f\", price);","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"YipWayne":53,"bobowoo2468":6,"swongts":2}},{"path":"src/main/java/seedu/duke/data/TourList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke.data;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"YipWayne"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"import java.util.List;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"import java.util.Objects;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":" * List of tours.","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"YipWayne"},"content":"public class TourList {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"    public static final String TOUR_NOT_FOUND_MESSAGE \u003d \"ERROR: Tour cannot be found. Please try another tour ID.\";","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"    private final ArrayList\u003cTour\u003e tours;","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"    private final ArrayList\u003cString\u003e tourIds;","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"    private final ArrayList\u003cString\u003e tourNames;","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"    private final ArrayList\u003cFloat\u003e tourPrices;","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"    private ArrayList\u003cString\u003e iteratedTourIds;","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"    private int tourCount;","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"     * Class constructor for TourList.","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"YipWayne"},"content":"    public TourList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"YipWayne"},"content":"        tours \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"        tourIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"        tourPrices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"        tourNames \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"YipWayne"},"content":"        tourCount \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for clients.","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"     * @return ArrayList containing all clients in the database.","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"YipWayne"},"content":"    public ArrayList\u003cTour\u003e getTours() {","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"YipWayne"},"content":"        return tours;","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"    public int getTourCount() {","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"        return tourCount;","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"bobowoo2468"},"content":"    public Tour getTourByIndex(int index) {","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"bobowoo2468"},"content":"        return tours.get(index);","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for tour object in the tour list, corresponding to the tour price given.","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"bobowoo2468"},"content":"     * @param price the given tour price","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"bobowoo2468"},"content":"     * @return the tour object, specified by the tour price","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if the tour with the given tour price is not found in the database","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"bobowoo2468"},"content":"    public Tour getTourByPrice(Float price) throws TourPlannerException {","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"bobowoo2468"},"content":"        for (Tour currTour : tours) {","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"bobowoo2468"},"content":"            String currTourId \u003d currTour.getId();","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"bobowoo2468"},"content":"            if (Objects.equals(currTour.getPrice(), price) \u0026\u0026 !iteratedTourIds.contains(currTourId)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"bobowoo2468"},"content":"                iteratedTourIds.add(currTourId);","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"bobowoo2468"},"content":"                return currTour;","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"bobowoo2468"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"bobowoo2468"},"content":"        throw new TourPlannerException(TOUR_NOT_FOUND_MESSAGE);","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for tour object in the tour list, corresponding to the tour name given.","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"bobowoo2468"},"content":"     * @param name the given tour name","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"bobowoo2468"},"content":"     * @return the tour object, specified by the tour ID","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if the tour with the given tour ID is not found in the database","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"bobowoo2468"},"content":"    public Tour getTourByName(String name) throws TourPlannerException {","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"bobowoo2468"},"content":"        for (int i \u003d 0; i \u003c tourCount; i++) {","lastModifiedDate":"2021-11-08"},{"lineNumber":79,"author":{"gitId":"bobowoo2468"},"content":"            Tour currentTour \u003d tours.get(i);","lastModifiedDate":"2021-11-08"},{"lineNumber":80,"author":{"gitId":"bobowoo2468"},"content":"            if (currentTour.getName().equals(name)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":81,"author":{"gitId":"bobowoo2468"},"content":"                return currentTour;","lastModifiedDate":"2021-11-08"},{"lineNumber":82,"author":{"gitId":"bobowoo2468"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"bobowoo2468"},"content":"        throw new TourPlannerException(TOUR_NOT_FOUND_MESSAGE);","lastModifiedDate":"2021-11-08"},{"lineNumber":85,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":86,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":88,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for tour object in the tour list, corresponding to the tour ID given.","lastModifiedDate":"2021-11-08"},{"lineNumber":89,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"bobowoo2468"},"content":"     * @param id the given tour ID, unique to each tour","lastModifiedDate":"2021-11-08"},{"lineNumber":91,"author":{"gitId":"bobowoo2468"},"content":"     * @return the tour object, specified by the tour ID","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if the tour with the given tour ID is not found in the database","lastModifiedDate":"2021-11-08"},{"lineNumber":93,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":94,"author":{"gitId":"bobowoo2468"},"content":"    public Tour getTourById(String id) throws TourPlannerException {","lastModifiedDate":"2021-11-08"},{"lineNumber":95,"author":{"gitId":"bobowoo2468"},"content":"        for (int i \u003d 0; i \u003c tourCount; i++) {","lastModifiedDate":"2021-11-08"},{"lineNumber":96,"author":{"gitId":"bobowoo2468"},"content":"            Tour currentTour \u003d tours.get(i);","lastModifiedDate":"2021-11-08"},{"lineNumber":97,"author":{"gitId":"bobowoo2468"},"content":"            if (currentTour.getId().equals(id)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":98,"author":{"gitId":"bobowoo2468"},"content":"                return currentTour;","lastModifiedDate":"2021-11-08"},{"lineNumber":99,"author":{"gitId":"bobowoo2468"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":100,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":101,"author":{"gitId":"bobowoo2468"},"content":"        throw new TourPlannerException(TOUR_NOT_FOUND_MESSAGE);","lastModifiedDate":"2021-11-08"},{"lineNumber":102,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":103,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":104,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for the sorted list of tour prices.","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"bobowoo2468"},"content":"     * Sorts the tour prices by the natural ordering of Float.","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"bobowoo2468"},"content":"     * @return the list of sorted tour prices, by ascending order","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"bobowoo2468"},"content":"     * @see Collections#sort","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"bobowoo2468"},"content":"    public ArrayList\u003cFloat\u003e getSortedTourPrices() {","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"bobowoo2468"},"content":"        Collections.sort(tourPrices);","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"bobowoo2468"},"content":"        return tourPrices;","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":117,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for the sorted list of tour IDs.","lastModifiedDate":"2021-11-07"},{"lineNumber":118,"author":{"gitId":"bobowoo2468"},"content":"     * Sorts the tour IDs by the natural ordering of String, ignoring case sensitivities.","lastModifiedDate":"2021-11-07"},{"lineNumber":119,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":120,"author":{"gitId":"bobowoo2468"},"content":"     * @return the list of sorted tour IDs, by natural(alphabetical, numerical) order","lastModifiedDate":"2021-11-07"},{"lineNumber":121,"author":{"gitId":"bobowoo2468"},"content":"     * @see Collections#sort(List, Comparator)","lastModifiedDate":"2021-11-07"},{"lineNumber":122,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":123,"author":{"gitId":"bobowoo2468"},"content":"    public ArrayList\u003cString\u003e getSortedTourIds() {","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"bobowoo2468"},"content":"        Collections.sort(tourIds, String.CASE_INSENSITIVE_ORDER);","lastModifiedDate":"2021-11-05"},{"lineNumber":125,"author":{"gitId":"bobowoo2468"},"content":"        return tourIds;","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":129,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for the sorted list of tour names.","lastModifiedDate":"2021-11-07"},{"lineNumber":130,"author":{"gitId":"bobowoo2468"},"content":"     * Sorts the tour names by the natural ordering of String, ignoring case sensitivities.","lastModifiedDate":"2021-11-07"},{"lineNumber":131,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":132,"author":{"gitId":"bobowoo2468"},"content":"     * @return the list of sorted tour names, by natural(alphabetical, numerical) order","lastModifiedDate":"2021-11-07"},{"lineNumber":133,"author":{"gitId":"bobowoo2468"},"content":"     * @see Collections#sort(List, Comparator)","lastModifiedDate":"2021-11-07"},{"lineNumber":134,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":135,"author":{"gitId":"bobowoo2468"},"content":"    public ArrayList\u003cString\u003e getSortedTourNames() {","lastModifiedDate":"2021-11-05"},{"lineNumber":136,"author":{"gitId":"bobowoo2468"},"content":"        Collections.sort(tourNames, String.CASE_INSENSITIVE_ORDER);","lastModifiedDate":"2021-11-05"},{"lineNumber":137,"author":{"gitId":"bobowoo2468"},"content":"        return tourNames;","lastModifiedDate":"2021-11-05"},{"lineNumber":138,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":139,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":140,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":141,"author":{"gitId":"bobowoo2468"},"content":"     * Creates a new temporary array each time the function is called.","lastModifiedDate":"2021-11-07"},{"lineNumber":142,"author":{"gitId":"bobowoo2468"},"content":"     * The tour IDs that have been iterated by Ui in the sort command will be added into TourList\u0027s","lastModifiedDate":"2021-11-07"},{"lineNumber":143,"author":{"gitId":"bobowoo2468"},"content":"     * temporary array to prevent duplicates.","lastModifiedDate":"2021-11-07"},{"lineNumber":144,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":145,"author":{"gitId":"bobowoo2468"},"content":"    public void initTempArray() {","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"bobowoo2468"},"content":"        iteratedTourIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-08"},{"lineNumber":147,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":148,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":149,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":150,"author":{"gitId":"bobowoo2468"},"content":"     * Main method for adding a tour.","lastModifiedDate":"2021-11-08"},{"lineNumber":151,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":152,"author":{"gitId":"bobowoo2468"},"content":"     * @param tour the tour to-be-added","lastModifiedDate":"2021-11-08"},{"lineNumber":153,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":154,"author":{"gitId":"bobowoo2468"},"content":"    public void add(Tour tour) {","lastModifiedDate":"2021-11-08"},{"lineNumber":155,"author":{"gitId":"bobowoo2468"},"content":"        tours.add(tour);","lastModifiedDate":"2021-11-08"},{"lineNumber":156,"author":{"gitId":"bobowoo2468"},"content":"        tourIds.add(tour.getId());","lastModifiedDate":"2021-11-08"},{"lineNumber":157,"author":{"gitId":"bobowoo2468"},"content":"        tourPrices.add(tour.getPrice());","lastModifiedDate":"2021-11-08"},{"lineNumber":158,"author":{"gitId":"bobowoo2468"},"content":"        tourNames.add(tour.getName());","lastModifiedDate":"2021-11-08"},{"lineNumber":159,"author":{"gitId":"bobowoo2468"},"content":"        tourCount++;","lastModifiedDate":"2021-11-08"},{"lineNumber":160,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":163,"author":{"gitId":"bobowoo2468"},"content":"     * Main method for deleting a tour.","lastModifiedDate":"2021-11-08"},{"lineNumber":164,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":165,"author":{"gitId":"bobowoo2468"},"content":"     * @param tour the tour to-be-added","lastModifiedDate":"2021-11-08"},{"lineNumber":166,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":167,"author":{"gitId":"swongts"},"content":"    public void cut(Tour tour) {","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"bobowoo2468"},"content":"        tourIds.remove(tour.getId());","lastModifiedDate":"2021-11-07"},{"lineNumber":169,"author":{"gitId":"bobowoo2468"},"content":"        tourPrices.remove(tour.getPrice());","lastModifiedDate":"2021-11-07"},{"lineNumber":170,"author":{"gitId":"bobowoo2468"},"content":"        tourNames.remove(tour.getName());","lastModifiedDate":"2021-11-07"},{"lineNumber":171,"author":{"gitId":"swongts"},"content":"        tours.remove(tour);","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"swongts"},"content":"        tourCount--;","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"YipWayne":18,"bobowoo2468":146,"swongts":10}},{"path":"src/main/java/seedu/duke/storage/ClientPackageStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"import seedu.duke.commands.clientpackages.AddClientPackageCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.ClientList;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.ClientPackage;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.ClientPackageList;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.FlightList;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.TourList;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"Demonshaha"},"content":"import java.io.File;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Demonshaha"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Demonshaha"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"Demonshaha"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Demonshaha"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"Demonshaha"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"Demonshaha"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"Demonshaha"},"content":"//@@author Demonshaha","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"Demonshaha"},"content":"/**","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"Demonshaha"},"content":" * Storage class for all ClientPackages. Creates and loads up the ClientPackageList.","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"Demonshaha"},"content":" */","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"Demonshaha"},"content":"public class ClientPackageStorage {","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Demonshaha"},"content":"    public static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"Demonshaha"},"content":"    private final ClientPackageList clientPackages \u003d new ClientPackageList();","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Demonshaha"},"content":"    private static final String root \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"Demonshaha"},"content":"    private static final Path filePath \u003d Paths.get(root, \"data\", \"TourPlannerClientPackages.txt\");","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Demonshaha"},"content":"    private static final Path dirPath \u003d Paths.get(root, \"data\");","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"Demonshaha"},"content":"    private static boolean hasClient \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Demonshaha"},"content":"    private static boolean hasTour \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Demonshaha"},"content":"    private static boolean hasFlight \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Demonshaha"},"content":"    private static boolean hasClientPackage \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Demonshaha"},"content":"    private static boolean isPackageAdded \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Demonshaha"},"content":"    private ArrayList\u003cString\u003e rawClientPackage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"Demonshaha"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"Demonshaha"},"content":"     * Class constructor for ClientPackageStorage.","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"Demonshaha"},"content":"     * Creates directory and files for storage if they do not already exist.","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"Demonshaha"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"Demonshaha"},"content":"     * @throws TourPlannerException if IOException is thrown when creating a new directory/file","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"Demonshaha"},"content":"     * @see File","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"Demonshaha"},"content":"     * @see IOException","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"Demonshaha"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"Demonshaha"},"content":"    public ClientPackageStorage() throws TourPlannerException {","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"Demonshaha"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"Demonshaha"},"content":"            File fileDirectory \u003d new File(dirPath.toString());","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"Demonshaha"},"content":"            if (!fileDirectory.exists()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"Demonshaha"},"content":"                fileDirectory.mkdir();","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Demonshaha"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"Demonshaha"},"content":"            File dataFile \u003d new File(filePath.toString());","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"Demonshaha"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"Demonshaha"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"Demonshaha"},"content":"            throw new TourPlannerException(EMPTY_STRING);","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"Demonshaha"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"Demonshaha"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"Demonshaha"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"Demonshaha"},"content":"     * Getter for ClientPackageList created and populated with client packages retrieved from data file","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"Demonshaha"},"content":"     * containing previously stored client packages.","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"Demonshaha"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"Demonshaha"},"content":"     * @return clientPackages retrieved","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"Demonshaha"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"Demonshaha"},"content":"    public ClientPackageList getClientPackages() {","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"Demonshaha"},"content":"        return clientPackages;","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"Demonshaha"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"Demonshaha"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"Demonshaha"},"content":"     * Reads each line of the file and creates the ClientPackage and adds it to the ClientPackageList","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"Demonshaha"},"content":"     * using AddClientPackageCommand.","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"Demonshaha"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"Demonshaha"},"content":"     * @param clients list of clients retrieved from storage file","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"Demonshaha"},"content":"     * @param tours   list of tours retrieved from storage file","lastModifiedDate":"2021-11-08"},{"lineNumber":79,"author":{"gitId":"Demonshaha"},"content":"     * @param flights list of flights retrieved from storage file","lastModifiedDate":"2021-11-08"},{"lineNumber":80,"author":{"gitId":"Demonshaha"},"content":"     * @param ui      user interface used to display messages to the user","lastModifiedDate":"2021-11-08"},{"lineNumber":81,"author":{"gitId":"Demonshaha"},"content":"     * @throws TourPlannerException if FileNotFoundException or NumberFormatException thrown","lastModifiedDate":"2021-11-08"},{"lineNumber":82,"author":{"gitId":"Demonshaha"},"content":"     *                              due to corrupted or missing file","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"Demonshaha"},"content":"     * @see AddClientPackageCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"Demonshaha"},"content":"     * @see FileNotFoundException","lastModifiedDate":"2021-11-08"},{"lineNumber":85,"author":{"gitId":"Demonshaha"},"content":"     * @see NumberFormatException","lastModifiedDate":"2021-11-08"},{"lineNumber":86,"author":{"gitId":"Demonshaha"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"Demonshaha"},"content":"    public void loadFile(ClientList clients, TourList tours, FlightList flights, Ui ui) throws TourPlannerException {","lastModifiedDate":"2021-11-06"},{"lineNumber":88,"author":{"gitId":"Demonshaha"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"Demonshaha"},"content":"            File dataFile \u003d new File(filePath.toString());","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"Demonshaha"},"content":"            Scanner scanner \u003d new Scanner(dataFile);","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"Demonshaha"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"Demonshaha"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"Demonshaha"},"content":"                String clientPackageId;","lastModifiedDate":"2021-11-06"},{"lineNumber":95,"author":{"gitId":"Demonshaha"},"content":"                String clientId;","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"Demonshaha"},"content":"                String tourId;","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"Demonshaha"},"content":"                String flightId;","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"Demonshaha"},"content":"                if (line.equals(\"Client Package Details: \")) {","lastModifiedDate":"2021-11-06"},{"lineNumber":100,"author":{"gitId":"Demonshaha"},"content":"                    resetCheckerStates();","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"Demonshaha"},"content":"                } else if (line.contains(\"Package ID\")) {","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"Demonshaha"},"content":"                    clientPackageId \u003d line.substring(12);","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"Demonshaha"},"content":"                    rawClientPackage.add(clientPackageId);","lastModifiedDate":"2021-11-06"},{"lineNumber":104,"author":{"gitId":"Demonshaha"},"content":"                    hasClientPackage \u003d true;","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"Demonshaha"},"content":"                } else if (line.equals(\"Client: \")) {","lastModifiedDate":"2021-11-06"},{"lineNumber":106,"author":{"gitId":"Demonshaha"},"content":"                    line \u003d scanner.nextLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"Demonshaha"},"content":"                    clientId \u003d line.substring(11);","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"Demonshaha"},"content":"                    rawClientPackage.add(clientId);","lastModifiedDate":"2021-11-06"},{"lineNumber":109,"author":{"gitId":"Demonshaha"},"content":"                    hasClient \u003d true;","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"Demonshaha"},"content":"                } else if (line.equals(\"Tour: \")) {","lastModifiedDate":"2021-11-06"},{"lineNumber":111,"author":{"gitId":"Demonshaha"},"content":"                    line \u003d scanner.nextLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"Demonshaha"},"content":"                    tourId \u003d line.substring(9);","lastModifiedDate":"2021-11-06"},{"lineNumber":113,"author":{"gitId":"Demonshaha"},"content":"                    rawClientPackage.add(tourId);","lastModifiedDate":"2021-11-06"},{"lineNumber":114,"author":{"gitId":"Demonshaha"},"content":"                    hasTour \u003d true;","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"Demonshaha"},"content":"                } else if (line.equals(\"Flight: \")) {","lastModifiedDate":"2021-11-06"},{"lineNumber":116,"author":{"gitId":"Demonshaha"},"content":"                    line \u003d scanner.nextLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"Demonshaha"},"content":"                    flightId \u003d line.substring(11);","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"Demonshaha"},"content":"                    rawClientPackage.add(flightId);","lastModifiedDate":"2021-11-06"},{"lineNumber":119,"author":{"gitId":"Demonshaha"},"content":"                    hasFlight \u003d true;","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"Demonshaha"},"content":"                }","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"Demonshaha"},"content":"                if (hasClient \u0026\u0026 hasFlight \u0026\u0026 hasTour \u0026\u0026 hasClientPackage \u0026\u0026 !isPackageAdded) {","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"Demonshaha"},"content":"                    AddClientPackageCommand command \u003d","lastModifiedDate":"2021-11-07"},{"lineNumber":124,"author":{"gitId":"Demonshaha"},"content":"                            new AddClientPackageCommand(rawClientPackage.toArray(new String[]{}));","lastModifiedDate":"2021-11-07"},{"lineNumber":125,"author":{"gitId":"Demonshaha"},"content":"                    command.setData(clients, flights, tours, clientPackages, ui);","lastModifiedDate":"2021-11-06"},{"lineNumber":126,"author":{"gitId":"Demonshaha"},"content":"                    command.executeStorage();","lastModifiedDate":"2021-11-06"},{"lineNumber":127,"author":{"gitId":"Demonshaha"},"content":"                    isPackageAdded \u003d true;","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"Demonshaha"},"content":"                }","lastModifiedDate":"2021-10-28"},{"lineNumber":129,"author":{"gitId":"Demonshaha"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"Demonshaha"},"content":"        } catch (FileNotFoundException | NumberFormatException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"Demonshaha"},"content":"            throw new TourPlannerException(EMPTY_STRING);","lastModifiedDate":"2021-11-08"},{"lineNumber":132,"author":{"gitId":"Demonshaha"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"Demonshaha"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"Demonshaha"},"content":"    private void resetCheckerStates() {","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"Demonshaha"},"content":"        hasClient \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"Demonshaha"},"content":"        hasFlight \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"Demonshaha"},"content":"        hasTour \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"Demonshaha"},"content":"        hasClientPackage \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"Demonshaha"},"content":"        isPackageAdded \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"Demonshaha"},"content":"        rawClientPackage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-06"},{"lineNumber":142,"author":{"gitId":"Demonshaha"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"Demonshaha"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":145,"author":{"gitId":"Demonshaha"},"content":"     * Loops through clientPackages and writes into storage file for ClientPackage.","lastModifiedDate":"2021-11-08"},{"lineNumber":146,"author":{"gitId":"Demonshaha"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":147,"author":{"gitId":"Demonshaha"},"content":"    public void saveFile() {","lastModifiedDate":"2021-11-04"},{"lineNumber":148,"author":{"gitId":"Demonshaha"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"Demonshaha"},"content":"            ArrayList\u003cClientPackage\u003e clientPackageList \u003d clientPackages.getClientPackages();","lastModifiedDate":"2021-11-04"},{"lineNumber":150,"author":{"gitId":"Demonshaha"},"content":"            FileWriter writer \u003d new FileWriter(filePath.toString());","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"Demonshaha"},"content":"            for (ClientPackage clientPackage : clientPackageList) {","lastModifiedDate":"2021-11-04"},{"lineNumber":152,"author":{"gitId":"Demonshaha"},"content":"                writer.write(\"Client Package Details: \\n\");","lastModifiedDate":"2021-11-04"},{"lineNumber":153,"author":{"gitId":"Demonshaha"},"content":"                writer.write(clientPackage.toString() + \"\\n\\n\");","lastModifiedDate":"2021-11-04"},{"lineNumber":154,"author":{"gitId":"Demonshaha"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"Demonshaha"},"content":"            writer.close();","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"Demonshaha"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":157,"author":{"gitId":"Demonshaha"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"Demonshaha"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"Demonshaha"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"Demonshaha"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"Demonshaha":150,"bobowoo2468":8,"swongts":2}},{"path":"src/main/java/seedu/duke/storage/ClientStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.Client;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.ClientList;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"import java.io.File;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"Demonshaha"},"content":"//@@author Demonshaha","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"Demonshaha"},"content":"/**","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"Demonshaha"},"content":" * Storage class for all Clients. Creates and loads up the ClientList.","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"Demonshaha"},"content":" */","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"Demonshaha"},"content":"public class ClientStorage {","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"Demonshaha"},"content":"    public static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"Demonshaha"},"content":"    private final ClientList clients \u003d new ClientList();","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Demonshaha"},"content":"    private static final String root \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"Demonshaha"},"content":"    private static final Path filePath \u003d Paths.get(root, \"data\", \"TourPlannerClients.txt\");","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"Demonshaha"},"content":"    private static final Path dirPath \u003d Paths.get(root, \"data\");","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"Demonshaha"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"Demonshaha"},"content":"     * Class constructor for ClientStorage.","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"Demonshaha"},"content":"     * Creates directory and files for storage if they do not already exist.","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"Demonshaha"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"Demonshaha"},"content":"     * @throws TourPlannerException if IOException is thrown when creating a new directory/file","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"Demonshaha"},"content":"     * @see File","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"Demonshaha"},"content":"     * @see IOException","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"Demonshaha"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"Demonshaha"},"content":"    public ClientStorage() throws TourPlannerException {","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"Demonshaha"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"Demonshaha"},"content":"            File fileDirectory \u003d new File(dirPath.toString());","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"Demonshaha"},"content":"            if (!fileDirectory.exists()) {","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"Demonshaha"},"content":"                fileDirectory.mkdir();","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"Demonshaha"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"Demonshaha"},"content":"            File dataFile \u003d new File(filePath.toString());","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"Demonshaha"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"Demonshaha"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"Demonshaha"},"content":"            throw new TourPlannerException(EMPTY_STRING);","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"Demonshaha"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"Demonshaha"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"Demonshaha"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"Demonshaha"},"content":"     * Getter for ClientList created and populated with clients retrieved from data file","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"Demonshaha"},"content":"     * containing previously stored clients.","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"Demonshaha"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"Demonshaha"},"content":"     * @return clients retrieved","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"Demonshaha"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"Demonshaha"},"content":"    public ClientList getClients() {","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Demonshaha"},"content":"        return clients;","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"Demonshaha"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"Demonshaha"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"Demonshaha"},"content":"     * Reads each line of the file and identifies client fields -- clientId, name, contactNum and mail.","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"Demonshaha"},"content":"     * Creates new Client object based on the client fields and adds to ClientList.","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"Demonshaha"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"Demonshaha"},"content":"     * @throws TourPlannerException if FileNotFoundException due to corrupted or missing file","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"Demonshaha"},"content":"     * @see FileNotFoundException","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"Demonshaha"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"Demonshaha"},"content":"    public void loadFile() throws TourPlannerException {","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"Demonshaha"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"Demonshaha"},"content":"            File dataFile \u003d new File(filePath.toString());","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"Demonshaha"},"content":"            Scanner scanner \u003d new Scanner(dataFile);","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"Demonshaha"},"content":"            String clientId;","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"Demonshaha"},"content":"            String clientName;","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"Demonshaha"},"content":"            String clientContactNum;","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"Demonshaha"},"content":"            String clientEmail;","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"Demonshaha"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"Demonshaha"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"Demonshaha"},"content":"                if (line.contains(\"Client Details:\")) {","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"Demonshaha"},"content":"                    line \u003d scanner.nextLine();","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"Demonshaha"},"content":"                    clientId \u003d line.substring(11);","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"Demonshaha"},"content":"                    line \u003d scanner.nextLine();","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"Demonshaha"},"content":"                    clientName \u003d line.substring(6);","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"Demonshaha"},"content":"                    line \u003d scanner.nextLine();","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"Demonshaha"},"content":"                    clientContactNum \u003d line.substring(16);","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"Demonshaha"},"content":"                    line \u003d scanner.nextLine();","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"Demonshaha"},"content":"                    clientEmail \u003d line.substring(7);","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"Demonshaha"},"content":"                    String[] clientArray \u003d {clientId, clientName, clientContactNum, clientEmail};","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"Demonshaha"},"content":"                    Client client \u003d new Client(clientArray);","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"Demonshaha"},"content":"                    clients.add(client);","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"Demonshaha"},"content":"                }","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"Demonshaha"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"Demonshaha"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"Demonshaha"},"content":"            throw new TourPlannerException(EMPTY_STRING);","lastModifiedDate":"2021-11-08"},{"lineNumber":94,"author":{"gitId":"Demonshaha"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"Demonshaha"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"Demonshaha"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":98,"author":{"gitId":"Demonshaha"},"content":"     * Loops through clients and writes into storage file for Client.","lastModifiedDate":"2021-11-08"},{"lineNumber":99,"author":{"gitId":"Demonshaha"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":100,"author":{"gitId":"Demonshaha"},"content":"    public void saveFile() {","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"Demonshaha"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"Demonshaha"},"content":"            ArrayList\u003cClient\u003e clientList \u003d clients.getClients();","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"Demonshaha"},"content":"            FileWriter writer \u003d new FileWriter(filePath.toString());","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"Demonshaha"},"content":"            for (Client client : clientList) {","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"Demonshaha"},"content":"                writer.write(\"Client Details: \\n\");","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"Demonshaha"},"content":"                writer.write(client.toString() + System.lineSeparator());","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"Demonshaha"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"Demonshaha"},"content":"            writer.close();","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"Demonshaha"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"Demonshaha"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"Demonshaha"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"Demonshaha"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"Demonshaha"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"Demonshaha":98,"bobowoo2468":15}},{"path":"src/main/java/seedu/duke/storage/FlightStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.Flight;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.FlightList;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"import java.io.File;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"Demonshaha"},"content":"//@@author Demonshaha","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"Demonshaha"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"Demonshaha"},"content":" * Storage class for flights. Creates and loads up the FlightList.","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"Demonshaha"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"Demonshaha"},"content":"public class FlightStorage {","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Demonshaha"},"content":"    private final FlightList flights \u003d new FlightList();","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Demonshaha"},"content":"    private static final String root \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"Demonshaha"},"content":"    private static final Path filePath \u003d Paths.get(root, \"data\", \"TourPlannerFlights.txt\");","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Demonshaha"},"content":"    private static final Path dirPath \u003d Paths.get(root, \"data\");","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"Demonshaha"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"Demonshaha"},"content":"     * Class constructor for FlightStorage.","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"Demonshaha"},"content":"     * Creates directory and files for storage if they do not already exist.","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"Demonshaha"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"Demonshaha"},"content":"     * @throws TourPlannerException if there are IOException thrown when creating a new directory/file","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"Demonshaha"},"content":"     * @see File","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"Demonshaha"},"content":"     * @see IOException","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"Demonshaha"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"Demonshaha"},"content":"    public FlightStorage() throws TourPlannerException {","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Demonshaha"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"Demonshaha"},"content":"            File fileDirectory \u003d new File(dirPath.toString());","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"Demonshaha"},"content":"            if (!fileDirectory.exists()) {","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"Demonshaha"},"content":"                fileDirectory.mkdir();","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"Demonshaha"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"Demonshaha"},"content":"            File dataFile \u003d new File(filePath.toString());","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"Demonshaha"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"Demonshaha"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"Demonshaha"},"content":"            throw new TourPlannerException(\"File ERROR\");","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"Demonshaha"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"Demonshaha"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"Demonshaha"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"Demonshaha"},"content":"     * Getter for flight list.","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"Demonshaha"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"Demonshaha"},"content":"     * @return the list of flights stored in database","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"Demonshaha"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"Demonshaha"},"content":"    public FlightList getFlights() {","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Demonshaha"},"content":"        return flights;","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"Demonshaha"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"Demonshaha"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"Demonshaha"},"content":"     * Reads each line of the file and identifies flight fields -- flightId,","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"Demonshaha"},"content":"     * departure destination, return destination, departure date-time, return date-time.","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"Demonshaha"},"content":"     * Creates new Flight object based on the flight fields and adds to FlightList.","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"Demonshaha"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"Demonshaha"},"content":"     * @throws TourPlannerException if FileNotFoundException due to corrupted or missing file","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"Demonshaha"},"content":"     * @see FileNotFoundException","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"Demonshaha"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"Demonshaha"},"content":"    public void loadFile() throws TourPlannerException {","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"Demonshaha"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"Demonshaha"},"content":"            File dataFile \u003d new File(filePath.toString());","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"Demonshaha"},"content":"            Scanner scanner \u003d new Scanner(dataFile);","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"Demonshaha"},"content":"            String flightId;","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"Demonshaha"},"content":"            String from;","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"Demonshaha"},"content":"            String to;","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"Demonshaha"},"content":"            String fromDate;","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"Demonshaha"},"content":"            String toDate;","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"Demonshaha"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"Demonshaha"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"Demonshaha"},"content":"                if (line.contains(\"Flight Details:\")) {","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"Demonshaha"},"content":"                    line \u003d scanner.nextLine();","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"Demonshaha"},"content":"                    flightId \u003d line.substring(11);","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"Demonshaha"},"content":"                    line \u003d scanner.nextLine();","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"Demonshaha"},"content":"                    int index \u003d line.indexOf(\", \");","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"Demonshaha"},"content":"                    from \u003d line.substring(18, index);","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"Demonshaha"},"content":"                    fromDate \u003d line.substring(index + 2);","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"Demonshaha"},"content":"                    line \u003d scanner.nextLine();","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"Demonshaha"},"content":"                    index \u003d line.indexOf(\", \");","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"Demonshaha"},"content":"                    to \u003d line.substring(15, index);","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"Demonshaha"},"content":"                    toDate \u003d line.substring(index + 2);","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"Demonshaha"},"content":"                    String[] flightArray \u003d {flightId, to, from, toDate, fromDate};","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"Demonshaha"},"content":"                    Flight flight \u003d new Flight(flightArray);","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"Demonshaha"},"content":"                    flights.add(flight);","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"Demonshaha"},"content":"                }","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"Demonshaha"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"Demonshaha"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"Demonshaha"},"content":"            throw new TourPlannerException(\"File not found!\");","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"Demonshaha"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"Demonshaha"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"Demonshaha"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"Demonshaha"},"content":"     * Loops through flights and writes into storage file for Flights.","lastModifiedDate":"2021-11-08"},{"lineNumber":101,"author":{"gitId":"Demonshaha"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"Demonshaha"},"content":"    public void saveFile() {","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"Demonshaha"},"content":"        ArrayList\u003cFlight\u003e flightList \u003d flights.getFlights();","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"Demonshaha"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"Demonshaha"},"content":"            FileWriter writer \u003d new FileWriter(filePath.toString());","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"Demonshaha"},"content":"            for (Flight flight : flightList) {","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"Demonshaha"},"content":"                writer.write(\"Flight Details: \\n\");","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"Demonshaha"},"content":"                writer.write(flight.toString() + System.lineSeparator());","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"Demonshaha"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"Demonshaha"},"content":"            writer.close();","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"Demonshaha"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"Demonshaha"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"Demonshaha"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"Demonshaha"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":115,"author":{"gitId":"Demonshaha"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"Demonshaha":100,"bobowoo2468":15}},{"path":"src/main/java/seedu/duke/storage/TourStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.Tour;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.TourList;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"import java.io.File;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"Demonshaha"},"content":"//@@author Demonshaha","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"Demonshaha"},"content":"/**","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"Demonshaha"},"content":" * Storage class for all Tours. Creates and loads up the TourList.","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"Demonshaha"},"content":" */","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"Demonshaha"},"content":"public class TourStorage {","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Demonshaha"},"content":"    public static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"Demonshaha"},"content":"    private final TourList tours \u003d new TourList();","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Demonshaha"},"content":"    private static final String root \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"Demonshaha"},"content":"    private static final Path filePath \u003d Paths.get(root, \"data\", \"TourPlannerTours.txt\");","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Demonshaha"},"content":"    private static final Path dirPath \u003d Paths.get(root, \"data\");","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"Demonshaha"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"Demonshaha"},"content":"     * Class constructor for TourStorage.","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"Demonshaha"},"content":"     * Creates directory and files for storage if they do not already exist.","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"Demonshaha"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"Demonshaha"},"content":"     * @throws TourPlannerException if IOException is thrown when creating a new directory/file","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"Demonshaha"},"content":"     * @see File","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"Demonshaha"},"content":"     * @see IOException","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"Demonshaha"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"Demonshaha"},"content":"    public TourStorage() throws TourPlannerException {","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Demonshaha"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"Demonshaha"},"content":"            File fileDirectory \u003d new File(dirPath.toString());","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"Demonshaha"},"content":"            if (!fileDirectory.exists()) {","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"Demonshaha"},"content":"                fileDirectory.mkdir();","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"Demonshaha"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"Demonshaha"},"content":"            File dataFile \u003d new File(filePath.toString());","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"Demonshaha"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"Demonshaha"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"Demonshaha"},"content":"            throw new TourPlannerException(EMPTY_STRING);","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"Demonshaha"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"Demonshaha"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"Demonshaha"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"Demonshaha"},"content":"     * Getter for ClientList created and populated with clients retrieved from data file","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"Demonshaha"},"content":"     * containing previously stored clients.","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"Demonshaha"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"Demonshaha"},"content":"     * @return clients retrieved","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"Demonshaha"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"Demonshaha"},"content":"    public TourList getTours() {","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Demonshaha"},"content":"        return tours;","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"Demonshaha"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"Demonshaha"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"Demonshaha"},"content":"     * Reads each line of the file and identifies tour fields -- tourId, name and price.","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"Demonshaha"},"content":"     * Creates new Tour object based on the tour fields and adds to TourList.","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"Demonshaha"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"Demonshaha"},"content":"     * @throws TourPlannerException if FileNotFoundException thrown due to corrupted or missing file","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"Demonshaha"},"content":"     * @see FileNotFoundException","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"Demonshaha"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"Demonshaha"},"content":"    public void loadFile() throws TourPlannerException {","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"Demonshaha"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"Demonshaha"},"content":"            File dataFile \u003d new File(filePath.toString());","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"Demonshaha"},"content":"            Scanner scanner \u003d new Scanner(dataFile);","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"Demonshaha"},"content":"            String tourName;","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"Demonshaha"},"content":"            String tourId;","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"Demonshaha"},"content":"            String tourPrice;","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"Demonshaha"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"Demonshaha"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"Demonshaha"},"content":"                if (line.contains(\"Tour Details:\")) {","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"Demonshaha"},"content":"                    line \u003d scanner.nextLine();","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"Demonshaha"},"content":"                    tourId \u003d line.substring(9);","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"Demonshaha"},"content":"                    line \u003d scanner.nextLine();","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"Demonshaha"},"content":"                    tourName \u003d line.substring(6);","lastModifiedDate":"2021-11-06"},{"lineNumber":82,"author":{"gitId":"Demonshaha"},"content":"                    line \u003d scanner.nextLine();","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"Demonshaha"},"content":"                    int index \u003d line.indexOf(\"$\");","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"Demonshaha"},"content":"                    tourPrice \u003d line.substring(index + 1);","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"Demonshaha"},"content":"                    String[] tourArray \u003d {tourId, tourName, tourPrice};","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"Demonshaha"},"content":"                    Tour tour \u003d new Tour(tourArray);","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"Demonshaha"},"content":"                    tours.add(tour);","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"Demonshaha"},"content":"                }","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"Demonshaha"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"Demonshaha"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"Demonshaha"},"content":"            throw new TourPlannerException(EMPTY_STRING);","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"Demonshaha"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"Demonshaha"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"Demonshaha"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":96,"author":{"gitId":"Demonshaha"},"content":"     * Loops through tours and writes into storage file for Tour.","lastModifiedDate":"2021-11-08"},{"lineNumber":97,"author":{"gitId":"Demonshaha"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":98,"author":{"gitId":"Demonshaha"},"content":"    public void saveFile() {","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"Demonshaha"},"content":"        ArrayList\u003cTour\u003e tourList \u003d tours.getTours();","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"Demonshaha"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"Demonshaha"},"content":"            FileWriter writer \u003d new FileWriter(filePath.toString());","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"Demonshaha"},"content":"            for (Tour tour : tourList) {","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"Demonshaha"},"content":"                writer.write(\"Tour Details: \\n\");","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"Demonshaha"},"content":"                writer.write(tour.toString() + System.lineSeparator());","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"Demonshaha"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"Demonshaha"},"content":"            writer.close();","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"Demonshaha"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"Demonshaha"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"Demonshaha"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"Demonshaha"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"Demonshaha"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"Demonshaha":97,"bobowoo2468":14}},{"path":"src/main/java/seedu/uml/AddClientPackageCommand.puml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"participant \":AddClientPackageCommand\" as APC","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"participant \":ClientPackageList\" as ClientPackageList","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"-\u003e Parser : parse(\"add -p p001 ARGS\")","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"activate Parser","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"    Parser -\u003e Parser: parseAdd(\"-p p001 ARGS\")","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"    activate Parser","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"    create APC","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"    Parser -\u003e APC : new AddClientPackageCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"    activate APC","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"    APC --\u003e Parser : AddClientPackageCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"    deactivate APC","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"    Parser --\u003e Parser: AddClientPackageCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"    deactivate Parser","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"    \u003c-- Parser: AddClientPackageCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"deactivate Parser","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"-\u003e APC : execute()","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"    activate APC","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"    alt#Gold #LightBlue if added package is unique and has unique fields","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"        APC -\u003e APC: createClientPackage()","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"        activate APC","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"        APC --\u003e APC: clientPackage: package of extracted Objects from ID","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"        deactivate APC","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"        APC -\u003e ClientPackageList: add(clientPackage)","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"        activate ClientPackageList","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"        APC \u003c-- ClientPackageList:","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"        deactivate ClientPackageList","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"        APC -\u003e Ui : showAdd(ClientPackage clientPackage)","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"        activate Ui","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"        APC \u003c-- Ui : add clientPackage Ui display","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"        deactivate Ui","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"        \u003c-- APC: add clientPackage Ui display","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"   else #Pink if added package ID already exists or has duplicated fields","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"        \u003c-- APC : ERROR message","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"        deactivate APC","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"bobowoo2468"},"content":"        destroy APC","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"bobowoo2468"},"content":"    end","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"bobowoo2468"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"bobowoo2468":49}},{"path":"src/main/java/seedu/uml/AddTourCommand.puml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"participant \":AddTourCommand\" as ATC","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"participant \":TourList\" as TourList","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"-\u003e Parser : parse(\"add -t t001 ARGS\")","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"activate Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"    Parser -\u003e Parser: parseAdd(\"-t t001 ARGS\")","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"    activate Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"    create ATC","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"    Parser -\u003e ATC : new AddTourCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"    activate ATC","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"    ATC --\u003e Parser : AddTourCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"    deactivate ATC","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"    Parser --\u003e Parser: AddTourCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"    deactivate Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"    \u003c-- Parser: AddTourCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"deactivate Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"-\u003e ATC : execute()","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"    activate ATC","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"    alt#Gold #LightBlue if added tour is unique and has unique fields","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"        ATC -\u003e TourList: add(Tour tour)","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"        activate TourList","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"        ATC \u003c-- TourList:","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"        deactivate TourList","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"        ATC -\u003e Ui : showAdd(Tour tour)","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"        activate Ui","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"        ATC \u003c-- Ui : add tour Ui display","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"        deactivate Ui","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"        \u003c-- ATC: add tour Ui display","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"   else #Pink if added tour ID already exists or has duplicated fields","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"        \u003c-- ATC : ERROR message","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"        deactivate ATC","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"        destroy ATC","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"    end","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"bobowoo2468":44}},{"path":"src/main/java/seedu/uml/Architecture.puml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"@startuml","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"skinparam componentStyle rectangle","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"YipWayne"},"content":"component {","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"YipWayne"},"content":"    [TourPlanner] as TP","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"    [Ui] as Ui","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":"    [Parser] as Parser","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"YipWayne"},"content":"    [Command] as Command","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"YipWayne"},"content":"    [ObjectList] as ObjectList","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"YipWayne"},"content":"    [Storage] as Storage","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"database Computer","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"actor User","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"User .\u003e TP","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"TP --\u003e Ui","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"YipWayne"},"content":"TP --\u003e Storage","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"YipWayne"},"content":"Storage ..\u003e Computer","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"YipWayne"},"content":"Ui --\u003e Parser","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"YipWayne"},"content":"Ui ..\u003e ObjectList","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"YipWayne"},"content":"Parser -\u003e Command","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"YipWayne"},"content":"Command --\u003e ObjectList","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"YipWayne"},"content":"Command -\u003e Ui","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"YipWayne"},"content":"@enduml","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"YipWayne":24}},{"path":"src/main/java/seedu/uml/CutClientCommand.puml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"@startuml","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"participant \":CutClientCommand\" as CCC","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"participant \":ClientList\" as ClientList","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"participant \":ClientPackageList\" as ClientPackageList","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"-\u003e Parser: parse(\"cut -c c001\")","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"activate Parser","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"Parser -\u003e Parser : parseCut(\"-c c001\")","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"activate Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"create CCC","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"Parser -\u003e CCC","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"activate CCC","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"CCC --\u003e Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"deactivate CCC","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"Parser --\u003e Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"deactivate Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"\u003c-- Parser: CutClientCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"deactivate Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"-\u003e CCC: execute()","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"activate CCC","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"CCC -\u003e ClientList : getClientById(\"c001\")","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"activate ClientList","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"ClientList --\u003e CCC : Client","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"deactivate ClientList","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"CCC -\u003e ClientList : cut(Client)","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"swongts"},"content":"activate ClientList","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"ClientList --\u003e CCC","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"deactivate ClientList","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"CCC -\u003e ClientPackageList : getClientPackageByClient(\"c001\")","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"activate ClientPackageList","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"ClientPackageList --\u003e CCC : ClientPackage","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"deactivate ClientPackageList","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"swongts"},"content":"CCC -\u003e ClientPackageList : cut(ClientPackage)","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"swongts"},"content":"activate ClientPackageList","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"swongts"},"content":"ClientPackageList --\u003e CCC","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"swongts"},"content":"deactivate ClientPackageList","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"swongts"},"content":"\u003c-- CCC","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"swongts"},"content":"deactivate CCC","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"swongts"},"content":"deactivate Parser","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"swongts"},"content":"destroy CCC","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"swongts"},"content":"@enduml","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"swongts":51}},{"path":"src/main/java/seedu/uml/CutClientPackageCommand.puml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"@startuml","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"participant \":CutClientPackageCommand\" as CCC","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"participant \":ClientPackageList\" as ClientPackageList","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"-\u003e Parser: parse(\"cut -p p001\")","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"activate Parser","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"Parser -\u003e Parser : parseCut(\"-p p001\")","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"activate Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"create CCC","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"Parser -\u003e CCC","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"activate CCC","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"CCC --\u003e Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"deactivate CCC","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"Parser --\u003e Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"deactivate Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"\u003c-- Parser: CutClientPackageCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"deactivate Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"-\u003e CCC: execute()","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"activate CCC","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"CCC -\u003e ClientPackageList : getClientPackageById(\"p001\")","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"activate ClientPackageList","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"ClientPackageList --\u003e CCC : ClientPackage","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"deactivate ClientPackageList","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"CCC -\u003e ClientPackageList: cut(ClientPackage)","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"swongts"},"content":"activate ClientPackageList","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"ClientPackageList --\u003e CCC","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"deactivate ClientPackageList","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"\u003c-- CCC","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"deactivate CCC","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"deactivate Parser","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"destroy CCC","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"swongts"},"content":"@enduml","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"swongts":42}},{"path":"src/main/java/seedu/uml/FindClientTest.puml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"YipWayne"},"content":"participant \":FindClientCommand\" as FCC","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"YipWayne"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"participant \":ClientList\" as TourList","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"YipWayne"},"content":"-\u003e Parser: execute \"find -c Bo Tuan\"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"YipWayne"},"content":"activate Parser","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"YipWayne"},"content":"Parser -\u003e Parser : parseFind(\"-c Bo Tuan\")","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"YipWayne"},"content":"activate Parser","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"create FCC","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"Parser -\u003e FCC","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"YipWayne"},"content":"activate FCC","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"YipWayne"},"content":"FCC --\u003e Parser","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"YipWayne"},"content":"deactivate FCC","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"YipWayne"},"content":"Parser --\u003e Parser","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"YipWayne"},"content":"deactivate Parser","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"YipWayne"},"content":"\u003c-- Parser: FindClientCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"YipWayne"},"content":"deactivate Parser","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"YipWayne"},"content":"-\u003e FCC: execute()","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"YipWayne"},"content":"activate FCC","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"YipWayne"},"content":"FCC -\u003e Ui : showFindClient()","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"YipWayne"},"content":"activate Ui","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"YipWayne"},"content":"Ui -\u003e TourList : getClient(\"Bo Tuan\")","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"YipWayne"},"content":"activate TourList","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"YipWayne"},"content":"TourList --\u003e Ui : id, name, contact no, email","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"YipWayne"},"content":"deactivate TourList","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"YipWayne"},"content":"loop until all clientPackage iterated","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"YipWayne"},"content":"    Ui -\u003e ClientPackageList : getClientPackageByIndex()","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"YipWayne"},"content":"    activate ClientPackageList","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"YipWayne"},"content":"    ClientPackageList --\u003e Ui: client packages of found client(s)","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"YipWayne"},"content":"    deactivate ClientPackageList","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"YipWayne"},"content":"    Ui -\u003e Ui: show ClientPackage","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"YipWayne"},"content":"    activate Ui","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"YipWayne"},"content":"    Ui --\u003e Ui","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"YipWayne"},"content":"    deactivate Ui","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"YipWayne"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"YipWayne"},"content":"Ui --\u003e FCC","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"YipWayne"},"content":"deactivate Ui","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"YipWayne"},"content":"\u003c-- FCC","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"YipWayne"},"content":"deactivate FCC","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"YipWayne"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"YipWayne":51}},{"path":"src/main/java/seedu/uml/FindFlightTest.puml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"@startuml","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"YipWayne"},"content":"participant \":FindFlightCommand\" as FCC","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"YipWayne"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"participant \":FlightList\" as TourList","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"YipWayne"},"content":"-\u003e Parser: execute \"find -f SQ-JPN\"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"YipWayne"},"content":"activate Parser","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"YipWayne"},"content":"Parser -\u003e Parser : parseFind(\"-f SQ-JPN\")","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"YipWayne"},"content":"activate Parser","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"create FCC","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"Parser -\u003e FCC","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"YipWayne"},"content":"activate FCC","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"YipWayne"},"content":"FCC --\u003e Parser","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"YipWayne"},"content":"deactivate FCC","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"YipWayne"},"content":"Parser --\u003e Parser","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"YipWayne"},"content":"deactivate Parser","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"YipWayne"},"content":"\u003c-- Parser: FindFlightCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"YipWayne"},"content":"deactivate Parser","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"YipWayne"},"content":"-\u003e FCC: execute()","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"YipWayne"},"content":"activate FCC","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"YipWayne"},"content":"FCC -\u003e Ui : showFindFlight()","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"YipWayne"},"content":"activate Ui","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"YipWayne"},"content":"Ui -\u003e TourList : getFlight(\"SQ-JPN\")","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"YipWayne"},"content":"activate TourList","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"YipWayne"},"content":"TourList --\u003e Ui : id, departure / return destination, place","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"YipWayne"},"content":"deactivate TourList","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"YipWayne"},"content":"loop until all clientPackage iterated","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"YipWayne"},"content":"    Ui -\u003e ClientPackageList : getClientPackageByIndex()","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"YipWayne"},"content":"    activate ClientPackageList","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"YipWayne"},"content":"    ClientPackageList --\u003e Ui: passengers","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"YipWayne"},"content":"    deactivate ClientPackageList","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"YipWayne"},"content":"    Ui -\u003e Ui: show Client","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"YipWayne"},"content":"    activate Ui","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"YipWayne"},"content":"    Ui --\u003e Ui","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"YipWayne"},"content":"    deactivate Ui","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"YipWayne"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"YipWayne"},"content":"Ui --\u003e FCC","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"YipWayne"},"content":"deactivate Ui","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"YipWayne"},"content":"\u003c-- FCC","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"YipWayne"},"content":"deactivate FCC","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"YipWayne"},"content":"destroy FCC","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"YipWayne"},"content":"@enduml","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"YipWayne":53}},{"path":"src/main/java/seedu/uml/FindTourTest.puml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"@startuml","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"YipWayne"},"content":"participant \":FindTourCommand\" as FCC","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"YipWayne"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"participant \":TourList\" as TourList","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"YipWayne"},"content":"-\u003e Parser: execute \"find -t JPN\"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"YipWayne"},"content":"activate Parser","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"YipWayne"},"content":"Parser -\u003e Parser : parseFind(\"-t JPN\")","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"YipWayne"},"content":"activate Parser","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"create FCC","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"Parser -\u003e FCC","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"YipWayne"},"content":"activate FCC","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"YipWayne"},"content":"FCC --\u003e Parser","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"YipWayne"},"content":"deactivate FCC","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"YipWayne"},"content":"Parser --\u003e Parser","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"YipWayne"},"content":"deactivate Parser","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"YipWayne"},"content":"\u003c-- Parser: FindTourCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"YipWayne"},"content":"deactivate Parser","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"YipWayne"},"content":"-\u003e FCC: execute()","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"YipWayne"},"content":"activate FCC","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"YipWayne"},"content":"FCC -\u003e Ui : showFindTour()","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"YipWayne"},"content":"activate Ui","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"YipWayne"},"content":"Ui -\u003e TourList : getTour(\"JPN\")","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"YipWayne"},"content":"activate TourList","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"YipWayne"},"content":"TourList --\u003e Ui : id, name, price","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"YipWayne"},"content":"deactivate TourList","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"YipWayne"},"content":"loop until all clientPackage iterated","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"YipWayne"},"content":"    Ui -\u003e ClientPackageList : getClientPackageByIndex()","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"YipWayne"},"content":"    activate ClientPackageList","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"YipWayne"},"content":"    ClientPackageList --\u003e Ui: subscribed clients","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"YipWayne"},"content":"    deactivate ClientPackageList","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"YipWayne"},"content":"    Ui -\u003e Ui: show Client","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"YipWayne"},"content":"    activate Ui","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"YipWayne"},"content":"    Ui --\u003e Ui","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"YipWayne"},"content":"    deactivate Ui","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"YipWayne"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"YipWayne"},"content":"Ui --\u003e FCC","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"YipWayne"},"content":"deactivate Ui","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"YipWayne"},"content":"\u003c-- FCC","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"YipWayne"},"content":"deactivate FCC","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"YipWayne"},"content":"destroy FCC","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"YipWayne"},"content":"@enduml","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"YipWayne":53}},{"path":"src/main/java/seedu/uml/ListClientCommand.puml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"participant \":ListClientCommand\" as LCC","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"participant \":ClientList\" as ClientList","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"-\u003e Parser: parse(\"list -c\")","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"activate Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"Parser -\u003e Parser : parseList(\"-c\")","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"activate Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"create LCC","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"Parser -\u003e LCC","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"activate LCC","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"LCC --\u003e Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"deactivate LCC","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"Parser --\u003e Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"deactivate Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"\u003c-- Parser: ListClientCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"deactivate Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"-\u003e LCC: execute()","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"activate LCC","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"LCC -\u003e Ui: showListClient(ClientList)","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"activate Ui","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"loop until all clients iterated","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"    Ui -\u003e ClientList : getClientByIndex(index)","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"    activate ClientList","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"    ClientList --\u003e Ui: Client","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"swongts"},"content":"    deactivate ClientList","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"    Ui -\u003e Ui: show Client","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"    activate Ui","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"    Ui --\u003e Ui","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"    deactivate Ui","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"end","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"Ui --\u003e LCC","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"deactivate Ui","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"swongts"},"content":"\u003c-- LCC","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"swongts"},"content":"deactivate LCC","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"swongts"},"content":"destroy LCC","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"swongts"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"swongts":46}},{"path":"src/main/java/seedu/uml/Parser.puml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"participant \":XYZCommand\" as XYZ","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"-\u003e Parser: parse(input: String)","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"activate Parser","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"Parser -\u003e Parser : splitCommandString(input: String)","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"activate Parser","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"Parser --\u003e Parser : Command and Params","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"deactivate Parser","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"alt Command is \"xyz\", Params are valid","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"Parser -\u003e Parser : parseXYZ(params: String)","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"note left","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"\"XYZ\" refers to general","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"operations such as","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"add, list and sort.","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"end note","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"activate Parser","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"create XYZ","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"Parser -\u003e XYZ : new XYZCommand()","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"activate XYZ","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"XYZ --\u003e Parser : XYZCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"deactivate XYZ","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"Parser --\u003e Parser : XYZCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"deactivate Parser","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"\u003c-- Parser : XYZCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"else Command and/or Params are invalid","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"    \u003c-- Parser : TourPlannerException","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"deactivate Parser","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"end","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"@enduml","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"bobowoo2468":42}},{"path":"src/main/java/seedu/uml/SortClientCommand.puml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"participant \":SortClientCommand\" as SCC","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"participant \":ClientList\" as ClientList","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"-\u003e Parser: parse(\"sort -c /id\")","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"activate Parser","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"Parser -\u003e Parser : parseSort(\"-c /id\")","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"activate Parser","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"create SCC","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"Parser -\u003e SCC","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"activate SCC","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"SCC --\u003e Parser","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"deactivate SCC","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"Parser --\u003e Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"deactivate Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"\u003c-- Parser: SortClientCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"deactivate Parser","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"-\u003e SCC: execute()","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"activate SCC","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"SCC -\u003e ClientList : getSortedClientIds()","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"activate ClientList","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"ClientList --\u003e SCC : sorted client IDs","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"deactivate ClientList","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"swongts"},"content":"SCC -\u003e Ui : showSortedClientById()","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"activate Ui","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"loop until all clientIds iterated","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"    Ui -\u003e ClientList : getClientById(clientId)","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"    activate ClientList","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"    ClientList --\u003e Ui: Client","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"    deactivate ClientList","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"    Ui -\u003e Ui: show Client","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"    activate Ui","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"swongts"},"content":"    Ui --\u003e Ui","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"swongts"},"content":"    deactivate Ui","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"swongts"},"content":"end","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"swongts"},"content":"Ui --\u003e SCC","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"swongts"},"content":"deactivate Ui","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"swongts"},"content":"\u003c-- SCC","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"swongts"},"content":"deactivate SCC","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"swongts"},"content":"destroy SCC","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"swongts"},"content":"@enduml","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"swongts":52}},{"path":"src/main/java/seedu/uml/Ui.puml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"@startuml","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"YipWayne"},"content":"skinparam componentStyle rectangle","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"YipWayne"},"content":"component {","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"    [Ui] as Ui","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":"    [Parser] as Parser","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"YipWayne"},"content":"    [Command] as Command","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"actor User","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"YipWayne"},"content":"User - Ui","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"Ui -- Parser : read by \u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"Parser .\u003e \"0..1\" Command : returns \u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"YipWayne"},"content":"Command .\u003e Ui : calls appropriate function \u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"YipWayne"},"content":"@enduml","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"YipWayne":18}},{"path":"src/test/java/seedu/duke/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.commands.clientpackages.ListClientPackageCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.commands.clients.AddClientCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.commands.clients.ListClientCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.commands.clients.SortClientCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.commands.flights.AddFlightCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.commands.flights.ListFlightCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.commands.flights.SortFlightCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.commands.tours.AddTourCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.commands.tours.ListTourCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.commands.tours.SortTourCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"public class ParserTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"    private static final String CORRECT_ADDCLIENT_ONE \u003d \"add -c j12 /n john /cn 91234567 /m johndoe@gmail.com\";","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"    private static final String CORRECT_ADDCLIENT_TWO \u003d \" add -c j12 /n  john  /cn   91234567 /m    johndoe@gmail.com\";","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"    private static final String CORRECT_ADDCLIENT_THREE \u003d \"add -c j12 /n john /m johndoe@gmail.com /cn 91234567\";","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"    private static final String CORRECT_ADDFLIGHT_ONE \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"            \"add -f SQ-JPN1 /d JPN /r SG /dd 23/10/21 13:00 /rd 27/10/21 02:00\";","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"    private static final String CORRECT_ADDFLIGHT_TWO \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"            \"add -f    SQ-JPN1 /d    JPN /r SG /dd    23/10/21 13:00 /rd   27/10/21 02:00\";","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"    private static final String CORRECT_ADDFLIGHT_THREE \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"            \"add -f SQ-JPN1 /d JPN /dd 23/10/21 13:00 /r SG /rd 27/10/21 02:00\";","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"    private static final String CORRECT_ADDTOUR_ONE \u003d \"add -t aus1369 /n australiaromance /p 1300\";","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"    private static final String CORRECT_ADDTOUR_TWO \u003d \"add  -t     aus1369 /n   australiaromance  /p 1300\";","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"    private static final String CORRECT_ADDTOUR_THREE \u003d \"add -t aus1369 /p 1300 /n australiaromance\";","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"    private static final String WRONG_ADDCLIENT_MISSING_PREFIX \u003d \"add -c j12 /n john /m johndoe@gmail.com\";","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"    private static final String WRONG_ADDTOUR_MISSING_PREFIX \u003d \"add -t aus1369 /p 1300\";","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"    private static final String WRONG_ADDFLIGHT_MISSING_PREFIX \u003d \"add -f SQ-JPN1 /d JPN /r SG /dd 23/10/21 13:00\";","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"    private static final String WRONG_ADDCLIENT_MISSING_ID \u003d \"add -c /n botuan /cn 91234567 /m johndoe@gmail.com\";","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"    private static final String WRONG_ADDFLIGHT_MISSING_ID \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"            \"add -f /d JPN /r SG /dd 23/10/21 13:00 /rd 27/10/21 02:00\";","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"    private static final String WRONG_ADDTOUR_MISSING_ID \u003d \"add -t /n australiaromance /p 1300\";","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"    private static final String WRONG_ADDCLIENT_DUPLICATE_PREFIX \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"            \"add -c c001 /n Bo Tuan /cn 91234567 /m botuan@gmail.com /cn 13465789\";","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"    private static final String WRONG_ADDTOUR_DUPLICATE_PREFIX \u003d \"add -t aus1369 /n australiaromance /p 1300 /p 2400\";","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"    private static final String WRONG_ADDFLIGHT_DUPLICATE_PREFIX \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"            \"add -f SQ-JPN1 /d JPN /d JAPAN /r SG /dd 23/10/21 13:00 /rd 27/10/21 02:00\";","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"    private static final String WRONG_ADD_MISSING_IDENTIFIER \u003d \"add -o c001 /n botuan /cn 91234567 /m john@mail.com\";","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"    private static final String WRONG_SORT_MISSING_IDENTIFIER \u003d \"sort /d\";","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"bobowoo2468"},"content":"    private static final String CORRECT_SORT_TOUR \u003d \"sort -t /p\";","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"bobowoo2468"},"content":"    private static final String CORRECT_SORT_CLIENT \u003d \"sort -c /n\";","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"bobowoo2468"},"content":"    private static final String CORRECT_SORT_FLIGHT \u003d \"sort -f /d\";","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"bobowoo2468"},"content":"    public static final String CORRECT_LIST_FLIGHT \u003d \"list -f\";","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"    public static final String CORRECT_LIST_CLIENT \u003d \"list -c\";","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"bobowoo2468"},"content":"    public static final String CORRECT_LIST_TOUR \u003d \"list -t\";","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"bobowoo2468"},"content":"    public static final String CORRECT_LIST_PACKAGE \u003d \"list -p\";","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"bobowoo2468"},"content":"    private static final String WRONG_ADD_FLIGHT_DATETIME_FORMAT \u003d","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"bobowoo2468"},"content":"            \"add -f SQ-JPN1 /d JPN /r SG /dd 23/10/21 25:00 /rd 27/10/21 02:00\";","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"bobowoo2468"},"content":"    private static final String WRONG_ADD_FLIGHT_LOGIC_ERROR \u003d","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"bobowoo2468"},"content":"            \"add -f SQ-JPN1 /d JPN /r SG /dd 23/11/21 21:00 /rd 19/10/21 02:00\";","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"bobowoo2468"},"content":"    public static final String WRONG_MISSING_IDENTIFIER_ONE \u003d \"list /f\";","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"bobowoo2468"},"content":"    public static final String WRONG_IDENTIFIER_GIVEN \u003d \"sort -o /n\";","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"bobowoo2468"},"content":"    public static final String WRONG_MISSING_IDENTIFIER_TWO \u003d \"cut c001\";","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"bobowoo2468"},"content":"    void parse_addClientCommand_correctCommandCreated() throws TourPlannerException {","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"bobowoo2468"},"content":"        parseAndAssertCommandType(CORRECT_ADDCLIENT_ONE, AddClientCommand.class);","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"bobowoo2468"},"content":"        //whitespaces are allowed","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"bobowoo2468"},"content":"        parseAndAssertCommandType(CORRECT_ADDCLIENT_TWO, AddClientCommand.class);","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"bobowoo2468"},"content":"        //order of prefixes does not matter","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"bobowoo2468"},"content":"        parseAndAssertCommandType(CORRECT_ADDCLIENT_THREE, AddClientCommand.class);","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"bobowoo2468"},"content":"    void parse_addFlightCommand_correctFlightCreated() throws TourPlannerException {","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"bobowoo2468"},"content":"        parseAndAssertCommandType(CORRECT_ADDFLIGHT_ONE, AddFlightCommand.class);","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"bobowoo2468"},"content":"        //whitespaces are allowed","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"bobowoo2468"},"content":"        parseAndAssertCommandType(CORRECT_ADDFLIGHT_TWO, AddFlightCommand.class);","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"bobowoo2468"},"content":"        //order of prefixes does not matter","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"bobowoo2468"},"content":"        parseAndAssertCommandType(CORRECT_ADDFLIGHT_THREE, AddFlightCommand.class);","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"bobowoo2468"},"content":"    void parse_addTourCommand_correctTourCreated() throws TourPlannerException {","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"bobowoo2468"},"content":"        parseAndAssertCommandType(CORRECT_ADDTOUR_ONE, AddTourCommand.class);","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"bobowoo2468"},"content":"        //whitespaces are allowed","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"bobowoo2468"},"content":"        parseAndAssertCommandType(CORRECT_ADDTOUR_TWO, AddTourCommand.class);","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"bobowoo2468"},"content":"        //order of prefixes does not matter","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"bobowoo2468"},"content":"        parseAndAssertCommandType(CORRECT_ADDTOUR_THREE, AddTourCommand.class);","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"bobowoo2468"},"content":"    void parse_sortCommand_correctCommand() throws TourPlannerException {","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"bobowoo2468"},"content":"        parseAndAssertCommandType(CORRECT_SORT_TOUR, SortTourCommand.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"bobowoo2468"},"content":"        parseAndAssertCommandType(CORRECT_SORT_CLIENT, SortClientCommand.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"bobowoo2468"},"content":"        parseAndAssertCommandType(CORRECT_SORT_FLIGHT, SortFlightCommand.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":101,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":103,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":104,"author":{"gitId":"bobowoo2468"},"content":"    void parse_listCommand_correctCommand() throws TourPlannerException {","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"bobowoo2468"},"content":"        parseAndAssertCommandType(CORRECT_LIST_FLIGHT, ListFlightCommand.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"bobowoo2468"},"content":"        parseAndAssertCommandType(CORRECT_LIST_CLIENT, ListClientCommand.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"bobowoo2468"},"content":"        parseAndAssertCommandType(CORRECT_LIST_TOUR, ListTourCommand.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"bobowoo2468"},"content":"        parseAndAssertCommandType(CORRECT_LIST_PACKAGE, ListClientPackageCommand.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"bobowoo2468"},"content":"    void parse_missingIdentifier_failure() {","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"bobowoo2468"},"content":"        assertParseFailure(WRONG_MISSING_IDENTIFIER_ONE, Parser.ERROR_MISSING_IDENTIFIER);","lastModifiedDate":"2021-11-07"},{"lineNumber":114,"author":{"gitId":"bobowoo2468"},"content":"        assertParseFailure(WRONG_IDENTIFIER_GIVEN, Parser.ERROR_MISSING_IDENTIFIER);","lastModifiedDate":"2021-11-07"},{"lineNumber":115,"author":{"gitId":"bobowoo2468"},"content":"        assertParseFailure(WRONG_MISSING_IDENTIFIER_TWO, Parser.ERROR_MISSING_IDENTIFIER);","lastModifiedDate":"2021-11-07"},{"lineNumber":116,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":117,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":118,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"bobowoo2468"},"content":"    void parse_missingPrefixes_failure() {","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"bobowoo2468"},"content":"        //missing contact number","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"bobowoo2468"},"content":"        assertParseFailure(WRONG_ADDCLIENT_MISSING_PREFIX, Parser.ERROR_MISSING_PREFIXES);","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"bobowoo2468"},"content":"        //missing tour name","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"bobowoo2468"},"content":"        assertParseFailure(WRONG_ADDTOUR_MISSING_PREFIX, Parser.ERROR_MISSING_PREFIXES);","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"bobowoo2468"},"content":"        //missing return flight date","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"bobowoo2468"},"content":"        assertParseFailure(WRONG_ADDFLIGHT_MISSING_PREFIX, Parser.ERROR_MISSING_PREFIXES);","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"bobowoo2468"},"content":"    void parse_missingIdOrName_failure() {","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"bobowoo2468"},"content":"        assertParseFailure(WRONG_ADDCLIENT_MISSING_ID, Parser.ERROR_MISSING_FIELDS);","lastModifiedDate":"2021-11-08"},{"lineNumber":133,"author":{"gitId":"bobowoo2468"},"content":"        assertParseFailure(WRONG_ADDFLIGHT_MISSING_ID, Parser.ERROR_MISSING_FIELDS);","lastModifiedDate":"2021-11-08"},{"lineNumber":134,"author":{"gitId":"bobowoo2468"},"content":"        assertParseFailure(WRONG_ADDTOUR_MISSING_ID, Parser.ERROR_MISSING_FIELDS);","lastModifiedDate":"2021-11-08"},{"lineNumber":135,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":138,"author":{"gitId":"bobowoo2468"},"content":"    void parse_duplicatePrefixes_failure() {","lastModifiedDate":"2021-10-30"},{"lineNumber":139,"author":{"gitId":"bobowoo2468"},"content":"        assertParseFailure(WRONG_ADDCLIENT_DUPLICATE_PREFIX, Parser.ERROR_DUPLICATE_PREFIXES);","lastModifiedDate":"2021-10-30"},{"lineNumber":140,"author":{"gitId":"bobowoo2468"},"content":"        assertParseFailure(WRONG_ADDTOUR_DUPLICATE_PREFIX, Parser.ERROR_DUPLICATE_PREFIXES);","lastModifiedDate":"2021-10-30"},{"lineNumber":141,"author":{"gitId":"bobowoo2468"},"content":"        assertParseFailure(WRONG_ADDFLIGHT_DUPLICATE_PREFIX, Parser.ERROR_DUPLICATE_PREFIXES);","lastModifiedDate":"2021-10-30"},{"lineNumber":142,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":143,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":144,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":145,"author":{"gitId":"bobowoo2468"},"content":"    void parse_wrongOrMissingIdentifier_failure() {","lastModifiedDate":"2021-11-07"},{"lineNumber":146,"author":{"gitId":"bobowoo2468"},"content":"        assertParseFailure(WRONG_ADD_MISSING_IDENTIFIER, Parser.ERROR_MISSING_IDENTIFIER);","lastModifiedDate":"2021-11-07"},{"lineNumber":147,"author":{"gitId":"bobowoo2468"},"content":"        assertParseFailure(WRONG_SORT_MISSING_IDENTIFIER, Parser.ERROR_MISSING_IDENTIFIER);","lastModifiedDate":"2021-11-07"},{"lineNumber":148,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":149,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":150,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":151,"author":{"gitId":"bobowoo2468"},"content":"    void parse_wrongDateTimeEntry_failure() {","lastModifiedDate":"2021-11-07"},{"lineNumber":152,"author":{"gitId":"bobowoo2468"},"content":"        assertParseFailure(WRONG_ADD_FLIGHT_DATETIME_FORMAT, Parser.ERROR_FLIGHT_TIME_FORMAT);","lastModifiedDate":"2021-11-07"},{"lineNumber":153,"author":{"gitId":"bobowoo2468"},"content":"        assertParseFailure(WRONG_ADD_FLIGHT_LOGIC_ERROR, Parser.ERROR_FLIGHT_TIME_INVERT);","lastModifiedDate":"2021-11-07"},{"lineNumber":154,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":155,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":156,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":157,"author":{"gitId":"bobowoo2468"},"content":"    private \u003cT extends Command\u003e void parseAndAssertCommandType(String input, Class\u003cT\u003e expectedCommandClass)","lastModifiedDate":"2021-10-30"},{"lineNumber":158,"author":{"gitId":"bobowoo2468"},"content":"            throws TourPlannerException {","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"bobowoo2468"},"content":"        final Command result \u003d Parser.parse(input);","lastModifiedDate":"2021-10-23"},{"lineNumber":160,"author":{"gitId":"bobowoo2468"},"content":"        assertTrue(result.getClass().isAssignableFrom(expectedCommandClass));","lastModifiedDate":"2021-10-23"},{"lineNumber":161,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":162,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":163,"author":{"gitId":"bobowoo2468"},"content":"    private void assertParseFailure(String input, String expectedMessage) {","lastModifiedDate":"2021-10-23"},{"lineNumber":164,"author":{"gitId":"bobowoo2468"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"bobowoo2468"},"content":"            Parser.parse(input);","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"bobowoo2468"},"content":"            throw new AssertionError(\"The expected exception was not thrown\");","lastModifiedDate":"2021-10-23"},{"lineNumber":167,"author":{"gitId":"bobowoo2468"},"content":"        } catch (TourPlannerException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":168,"author":{"gitId":"bobowoo2468"},"content":"            assertEquals(expectedMessage, e.getMessage());","lastModifiedDate":"2021-10-23"},{"lineNumber":169,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":170,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":171,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"YipWayne":4,"bobowoo2468":167}},{"path":"src/test/java/seedu/duke/TourPlannerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"Demonshaha"},"content":"class TourPlannerTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"Demonshaha":1,"-":11,"swongts":1}},{"path":"src/test/java/seedu/duke/commands/ByeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.ClientList;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.ClientPackageList;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.FlightList;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.TourList;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"public class ByeCommandTest {","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"    PrintStream previousConsole;","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"    ByteArrayOutputStream newConsole;","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"    private ClientList clients;","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"    private FlightList flights;","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"    private TourList tours;","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"    private ClientPackageList clientPackages;","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"    public void byeCommand_validUserInput_showMessage() throws TourPlannerException {","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"        previousConsole \u003d System.out;","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"        newConsole \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"        Command byeCommand \u003d new ByeCommand();","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"swongts"},"content":"        byeCommand.setData(clients, flights, tours, clientPackages, ui);","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"        byeCommand.execute();","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"        String expectedString \u003d \"Thanks for using TourPlanner. Goodbye!\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"                + \"____________________________________________________________\";","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"        assertEquals(expectedString, actualString);","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"swongts":43}},{"path":"src/test/java/seedu/duke/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.ClientList;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.ClientPackageList;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.FlightList;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.TourList;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"public class HelpCommandTest {","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"    PrintStream previousConsole;","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"    ByteArrayOutputStream newConsole;","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"    private ClientList clients;","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"    private FlightList flights;","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"    private TourList tours;","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"    private ClientPackageList clientPackages;","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"    public void helpCommand_validUserInput_showMessage() throws TourPlannerException {","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"        previousConsole \u003d System.out;","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"        newConsole \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"        Command helpCommand \u003d new HelpCommand();","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"swongts"},"content":"        helpCommand.setData(clients, flights, tours, clientPackages, ui);","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"        helpCommand.execute();","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"        String expectedString \u003d \"add: Add information of all data types into the database.\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"                + \"Prefixes can be input in any order.\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"                + \"   Add client: add -c CLIENT_ID /n NAME /cn CONTACT_NUM /m EMAIL\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"                + \"   Add flight: add -f FLIGHT_ID /d DEPART_DESTINATION /r RETURN_DESTINATION\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"swongts"},"content":"                + \"               /dd DEPARTURE_DATETIME /rd RETURN_DATETIME\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"swongts"},"content":"                + \"   Add tour: add -t TOUR_ID /n DEPART_DESTINATION /p TOUR_PRICE\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"swongts"},"content":"                + \"   Add client package: add -p PACKAGE_ID /c CLIENT_ID /t TOUR_ID /f FLIGHT_ID\\n\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"swongts"},"content":"                + \"list: Shows a list of all available entries of a specific data type, along with their \"","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"swongts"},"content":"                + \"respective fields.\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"swongts"},"content":"                + \"   List client: list -c\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"swongts"},"content":"                + \"   List flight: list -f\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"swongts"},"content":"                + \"   List tour: list -t\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"swongts"},"content":"                + \"   List client package: list -p\\n\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"swongts"},"content":"                + \"cut: Deletes entry of a certain data type and all client packages corresponding to the entry.\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"swongts"},"content":"                + \"   Cut client: cut -c CLIENT_ID\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"swongts"},"content":"                + \"   Cut flight: cut -f FLIGHT_ID\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"swongts"},"content":"                + \"   Cut tour: cut -t TOUR_ID\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"swongts"},"content":"                + \"   Cut client package: cut -p PACKAGE_ID\\n\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"swongts"},"content":"                + \"find: Finds specific entry of data type, returns the entry and other relevant information.\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"swongts"},"content":"                + \"   Find client: find -c CLIENT_NAME\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"swongts"},"content":"                + \"   Find flight: find -f FLIGHT_ID\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"swongts"},"content":"                + \"   Find tour: find -t TOUR_ID\\n\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"swongts"},"content":"                + \"sort: Sorts entries in the data type based on the criteria.\\n \"","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"swongts"},"content":"                + \"   Sort client:\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"swongts"},"content":"                + \"      Sort by id: sort -c /id\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"swongts"},"content":"                + \"      Sort by name: sort -c /n\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"swongts"},"content":"                + \"   Sort flight:\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"swongts"},"content":"                + \"      Sort by id: sort -f /id\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"swongts"},"content":"                + \"      Sort by departure date: sort -f /d\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"swongts"},"content":"                + \"      Sort by return date: sort -f /r\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"swongts"},"content":"                + \"   Sort tour:\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"swongts"},"content":"                + \"      Sort by id: sort -t /id\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"swongts"},"content":"                + \"      Sort by name: sort -t /n\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"swongts"},"content":"                + \"      Sort by price: sort -t /p\\n\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"swongts"},"content":"                + \"bye: Exits the program.\";","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"swongts"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"swongts"},"content":"        assertEquals(expectedString, actualString);","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"swongts":76}},{"path":"src/test/java/seedu/duke/commands/clientpackages/AddClientPackageCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke.commands.clientpackages;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.Client;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.ClientList;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.ClientPackage;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.ClientPackageList;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.Flight;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.FlightList;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.Tour;","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.TourList;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"public class AddClientPackageCommandTest {","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"    PrintStream previousConsole;","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"    ByteArrayOutputStream newConsole;","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"    private ClientList clients;","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"    private FlightList flights;","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"    private TourList tours;","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"    private ClientPackageList clientPackages;","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"    private Client botuan;","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"swongts"},"content":"    private Tour kor;","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"    private Flight sqkor;","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"    private ClientPackageList populatedClientPackages;","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"    @BeforeEach","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"    public void setUp() {","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"        previousConsole \u003d System.out;","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"        newConsole \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"swongts"},"content":"        botuan \u003d new Client(new String[]{\"c001\", \"Bo Tuan\", \"93338333\", \"bt@mail.com\"});","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"swongts"},"content":"        Client wayne \u003d new Client(new String[]{\"c002\", \"Wayne\", \"56667888\", \"wen@mail.com\"});","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"swongts"},"content":"        clients \u003d createClientList(botuan, wayne);","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"swongts"},"content":"        Tour jpn \u003d new Tour(new String[]{\"JPN\", \"Japan Basic Tour\", \"1500.00\"});","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"swongts"},"content":"        kor \u003d new Tour(new String[]{\"KOR\", \"Korea Cultural Tour\", \"3000.00\"});","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"swongts"},"content":"        tours \u003d createTourList(jpn, kor);","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"swongts"},"content":"        Flight sqjpn \u003d new Flight(new String[]{\"SQ-JPN\", \"JPN\", \"SG\", \"20/10/21 18:00\", \"21/10/21 03:00\"});","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"swongts"},"content":"        sqkor \u003d new Flight(new String[]{\"SQ-KOR\", \"KOR\", \"SG\", \"23/10/2021 18:00\", \"30/10/2021 03:00\"});","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"swongts"},"content":"        flights \u003d createFlightList(sqjpn, sqkor);","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"swongts"},"content":"        ClientPackage botuanPack \u003d new ClientPackage(\"p001\", botuan, kor, sqkor);","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"swongts"},"content":"        populatedClientPackages \u003d createClientPackageList(botuanPack);","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"swongts"},"content":"        clientPackages \u003d createClientPackageList();","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"swongts"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"swongts"},"content":"    void addClientPackageCommand_validData_correctlyConstructed() throws TourPlannerException {","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"swongts"},"content":"        String[] rawClientPackage \u003d new String[] {\"p001\", \"c001\", \"KOR\", \"SQ-KOR\"};","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"swongts"},"content":"        Command addClientPackage \u003d new AddClientPackageCommand(rawClientPackage);","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"swongts"},"content":"        addClientPackage.setData(clients, flights, tours, clientPackages, ui);","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"swongts"},"content":"        addClientPackage.execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"swongts"},"content":"        ClientPackage retrieveClientPackage \u003d ((AddClientPackageCommand) addClientPackage).getClientPackage();","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"swongts"},"content":"        assertEquals(\"p001\", retrieveClientPackage.getId());","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"swongts"},"content":"        assertEquals(botuan, retrieveClientPackage.getClient());","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"swongts"},"content":"        assertEquals(kor, retrieveClientPackage.getTour());","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"swongts"},"content":"        assertEquals(sqkor, retrieveClientPackage.getFlight());","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"swongts"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"swongts"},"content":"    void addClientPackageCommand_emptyClientPackageList_populatedClientPackageList() throws TourPlannerException {","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"swongts"},"content":"        String[] rawClientPackage \u003d new String[] {\"p001\", \"c001\", \"KOR\", \"SQ-KOR\"};","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"swongts"},"content":"        Command addClientPackage \u003d new AddClientPackageCommand(rawClientPackage);","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"swongts"},"content":"        addClientPackage.setData(clients, flights, tours, clientPackages, ui);","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"swongts"},"content":"        addClientPackage.execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"swongts"},"content":"        assertEquals(populatedClientPackages.getClientPackageCount(), clientPackages.getClientPackageCount());","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"swongts"},"content":"        for (int i \u003d 0; i \u003c populatedClientPackages.getClientPackageCount(); i++) {","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"swongts"},"content":"            ClientPackage expected \u003d populatedClientPackages.getClientPackageByIndex(i);","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"swongts"},"content":"            ClientPackage actual \u003d clientPackages.getClientPackageByIndex(i);","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"swongts"},"content":"            assertEquals(expected.getId(), actual.getId());","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"swongts"},"content":"            assertEquals(expected.getClient(), actual.getClient());","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"swongts"},"content":"            assertEquals(expected.getTour(), actual.getTour());","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"swongts"},"content":"            assertEquals(expected.getFlight(), actual.getFlight());","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"swongts"},"content":"    private ClientList createClientList(Client...clientList) {","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"swongts"},"content":"        ClientList newClientList \u003d new ClientList();","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"swongts"},"content":"        for (Client client : clientList) {","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"swongts"},"content":"            newClientList.add(client);","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"swongts"},"content":"        return newClientList;","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"swongts"},"content":"    private FlightList createFlightList(Flight...flightList) {","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"swongts"},"content":"        FlightList newFlightList \u003d new FlightList();","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"swongts"},"content":"        for (Flight flight : flightList) {","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"swongts"},"content":"            newFlightList.add(flight);","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"swongts"},"content":"        return newFlightList;","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"swongts"},"content":"    private TourList createTourList(Tour...tourList) {","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"swongts"},"content":"        TourList newTourList \u003d new TourList();","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"swongts"},"content":"        for (Tour tour : tourList) {","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"swongts"},"content":"            newTourList.add(tour);","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"swongts"},"content":"        return newTourList;","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":115,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"swongts"},"content":"    private ClientPackageList createClientPackageList(ClientPackage...clientPackageList) {","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"swongts"},"content":"        ClientPackageList newClientPackageList \u003d new ClientPackageList();","lastModifiedDate":"2021-11-03"},{"lineNumber":118,"author":{"gitId":"swongts"},"content":"        for (ClientPackage clientPackage: clientPackageList) {","lastModifiedDate":"2021-11-03"},{"lineNumber":119,"author":{"gitId":"swongts"},"content":"            newClientPackageList.add(clientPackage);","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"swongts"},"content":"        return newClientPackageList;","lastModifiedDate":"2021-11-03"},{"lineNumber":122,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":123,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"bobowoo2468":3,"swongts":120}},{"path":"src/test/java/seedu/duke/commands/clientpackages/CutClientPackageCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package seedu.duke.commands.clientpackages;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.Client;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.ClientList;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.ClientPackage;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.ClientPackageList;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.Flight;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.FlightList;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.Tour;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.TourList;","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"public class CutClientPackageCommandTest {","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"    public static final String[] CLIENT_BOTUAN \u003d {\"c001\", \"Bo Tuan\", \"93338333\", \"bt@mail.com\"};","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"    public static final String[] CLIENT_WAYNE \u003d {\"c002\", \"Wayne\", \"56667888\", \"wen@mail.com\"};","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"    public static final String[] TOUR_JPN \u003d {\"JPN\", \"Japan Basic Tour\", \"1500.00\"};","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"    public static final String[] TOUR_KOR \u003d {\"KOR\", \"Korea Cultural Tour\", \"3000.00\"};","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"    public static final String[] FLIGHT_SQJPN \u003d {\"SQ-JPN\", \"JPN\", \"SG\", \"20/10/21 18:00\", \"21/10/21 03:00\"};","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"    public static final String[] FLIGHT_SQKOR \u003d {\"SQ-KOR\", \"KOR\", \"SG\", \"23/10/2021 18:00\", \"30/10/2021 03:00\"};","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"    public static final String PACKAGE_ID_1 \u003d \"p001\";","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"swongts"},"content":"    public static final String PACKAGE_ID_2 \u003d \"p002\";","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"    public static final String PACKAGE_ID_3 \u003d \"p003\";","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"    public static final String PACKAGE_ID_WRONG \u003d \"1234po0o\";","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"    PrintStream previousConsole;","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"    ByteArrayOutputStream newConsole;","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"    private ClientList clients;","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"    private FlightList flights;","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"swongts"},"content":"    private TourList tours;","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"swongts"},"content":"    private ClientPackageList clientPackages;","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"swongts"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"swongts"},"content":"    private ClientPackageList allClientPackages;","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"swongts"},"content":"    private ClientPackageList clientPackagesWithoutP002;","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"swongts"},"content":"    @BeforeEach","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"swongts"},"content":"    public void setUp() {","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"swongts"},"content":"        previousConsole \u003d System.out;","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"swongts"},"content":"        newConsole \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"swongts"},"content":"        Client botuan \u003d new Client(CLIENT_BOTUAN);","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"swongts"},"content":"        Client wayne \u003d new Client(CLIENT_WAYNE);","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"swongts"},"content":"        Tour jpn \u003d new Tour(TOUR_JPN);","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"swongts"},"content":"        Tour kor \u003d new Tour(TOUR_KOR);","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"swongts"},"content":"        Flight sqjpn \u003d new Flight(FLIGHT_SQJPN);","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"swongts"},"content":"        Flight sqkor \u003d new Flight(FLIGHT_SQKOR);","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"swongts"},"content":"        ClientPackage botuanPack1 \u003d new ClientPackage(PACKAGE_ID_1, botuan, jpn, sqjpn);","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"swongts"},"content":"        ClientPackage botuanPack2 \u003d new ClientPackage(PACKAGE_ID_2, botuan, kor, sqkor);","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"swongts"},"content":"        ClientPackage waynePack \u003d new ClientPackage(PACKAGE_ID_3, wayne, jpn, sqkor);","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"swongts"},"content":"        clientPackages \u003d createClientPackageList(botuanPack1, botuanPack2, waynePack);","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"swongts"},"content":"        allClientPackages \u003d createClientPackageList(botuanPack1, botuanPack2, waynePack);","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"swongts"},"content":"        clientPackagesWithoutP002 \u003d createClientPackageList(botuanPack1, waynePack);","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"swongts"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"swongts"},"content":"    public void cutClientPackageCommand_validClientPackageId_clientPackageDeleted() throws TourPlannerException {","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"swongts"},"content":"        assertEquals(clientPackages.getClientPackageCount(), 3);","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"swongts"},"content":"        Command cutClientPackageCommand \u003d new CutClientPackageCommand(PACKAGE_ID_2);","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"swongts"},"content":"        cutClientPackageCommand.setData(clients, flights, tours, clientPackages, ui);","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"swongts"},"content":"        cutClientPackageCommand.execute();","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"swongts"},"content":"        assertEquals(clientPackages.getClientPackageCount(), clientPackagesWithoutP002.getClientPackageCount());","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"swongts"},"content":"        for (int i \u003d 0; i \u003c clientPackagesWithoutP002.getClientPackageCount(); i++) {","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"swongts"},"content":"            assertEquals(clientPackages.getClientPackageByIndex(i),","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"swongts"},"content":"                    clientPackagesWithoutP002.getClientPackageByIndex(i));","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"swongts"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"swongts"},"content":"    public void cutClientPackageCommand_invalidClientPackageId_clientPackageNotFoundMessage()","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"swongts"},"content":"            throws TourPlannerException {","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"swongts"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"swongts"},"content":"        Command cutClientPackageCommand \u003d new CutClientPackageCommand(PACKAGE_ID_WRONG);","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"swongts"},"content":"        cutClientPackageCommand.setData(clients, flights, tours, clientPackages, ui);","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"swongts"},"content":"        cutClientPackageCommand.execute();","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"swongts"},"content":"        for (int i \u003d 0; i \u003c allClientPackages.getClientPackageCount(); i++) {","lastModifiedDate":"2021-11-07"},{"lineNumber":95,"author":{"gitId":"swongts"},"content":"            assertEquals(clientPackages.getClientPackageByIndex(i),","lastModifiedDate":"2021-11-07"},{"lineNumber":96,"author":{"gitId":"swongts"},"content":"                    allClientPackages.getClientPackageByIndex(i));","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"swongts"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"swongts"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-11-07"},{"lineNumber":101,"author":{"gitId":"swongts"},"content":"        String expectedString \u003d ClientPackageList.CLIENTPACKAGE_NOT_FOUND_MESSAGE;","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"swongts"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-11-07"},{"lineNumber":103,"author":{"gitId":"swongts"},"content":"        assertEquals(expectedString, actualString);","lastModifiedDate":"2021-11-07"},{"lineNumber":104,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"swongts"},"content":"    private ClientPackageList createClientPackageList(ClientPackage...clientPackageList) {","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"swongts"},"content":"        ClientPackageList newClientPackageList \u003d new ClientPackageList();","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"swongts"},"content":"        for (ClientPackage clientPackage: clientPackageList) {","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"swongts"},"content":"            newClientPackageList.add(clientPackage);","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"swongts"},"content":"        return newClientPackageList;","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"swongts":113}},{"path":"src/test/java/seedu/duke/commands/clientpackages/ListClientPackageCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke.commands.clientpackages;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.data.Client;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.data.Tour;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.data.Flight;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.data.ClientPackage;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.data.ClientList;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.data.TourList;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.data.FlightList;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.data.ClientPackageList;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"YipWayne"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"YipWayne"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"YipWayne"},"content":"public class ListClientPackageCommandTest {","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"YipWayne"},"content":"    private static Client TEST_CLIENT \u003d new Client(new String[]{\"c001\", \"Bo Tuan\", \"93338333\", \"bt@mail.com\"});","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"YipWayne"},"content":"    private static Tour TEST_TOUR \u003d new Tour(new String[]{\"JPN\", \"Japan Basic Tour\", \"1500.00\"});","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"    private static Flight TEST_FLIGHT \u003d new Flight(new String[]{\"SQ-JPN\", \"JPN\", \"SG\", \"20/10/2021 18:00\",","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"        \"21/10/2021 03:00\"});","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"YipWayne"},"content":"    private static ClientPackage TEST_CLIENTPACKAGE \u003d new ClientPackage(\"p001\",","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"YipWayne"},"content":"            TEST_CLIENT, TEST_TOUR, TEST_FLIGHT);","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"YipWayne"},"content":"    private static final String VALID_DATA_OUTPUT \u003d \"Here is a list of all packages:\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"YipWayne"},"content":"            + \"1. \" + TEST_CLIENTPACKAGE + \"\\n\\n\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"YipWayne"},"content":"            + \"Total Packages: 1\";","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"YipWayne"},"content":"    PrintStream previousConsole \u003d System.out;","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"YipWayne"},"content":"    ByteArrayOutputStream newConsole \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"YipWayne"},"content":"    ClientList dummyClientList \u003d new ClientList();","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"YipWayne"},"content":"    TourList dummyTourList \u003d new TourList();","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"YipWayne"},"content":"    FlightList dummyFlightList \u003d new FlightList();","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"YipWayne"},"content":"    ClientPackageList testPackageList \u003d new ClientPackageList();","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"YipWayne"},"content":"    Ui testUi \u003d new Ui();","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"YipWayne"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"YipWayne"},"content":"    void listClientCommand_validData_correctlyConstructed() throws TourPlannerException {","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"YipWayne"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"YipWayne"},"content":"        dummyClientList.add(TEST_CLIENT);","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"YipWayne"},"content":"        dummyTourList.add(TEST_TOUR);","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"YipWayne"},"content":"        dummyFlightList.add(TEST_FLIGHT);","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"YipWayne"},"content":"        testPackageList.add(TEST_CLIENTPACKAGE);","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"YipWayne"},"content":"        Command listPackage \u003d new ListClientPackageCommand();","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"YipWayne"},"content":"        listPackage.setData(dummyClientList, dummyFlightList, dummyTourList, testPackageList, testUi);","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"YipWayne"},"content":"        listPackage.execute();","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"YipWayne"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"YipWayne"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"YipWayne"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"YipWayne"},"content":"        assertEquals(VALID_DATA_OUTPUT, actualString);","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"YipWayne":55,"bobowoo2468":3,"swongts":2}},{"path":"src/test/java/seedu/duke/commands/clients/AddClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke.commands.clients;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.Client;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.ClientList;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.ClientPackageList;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.FlightList;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.TourList;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"public class AddClientCommandTest {","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"    public static final String TEST_CLIENT_ID \u003d \"c001\";","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"    public static final String TEST_CLIENT_NAME \u003d \"Bo Tuan\";","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"    public static final String TEST_CLIENT_CONTACT \u003d \"91234567\";","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"    public static final String TEST_CLIENT_EMAIL \u003d \"bobotea@gmail.com\";","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"    ClientList testClientList \u003d new ClientList();","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"    FlightList dummyFlightList \u003d new FlightList();","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"    TourList dummyTourList \u003d new TourList();","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"    ClientPackageList dummyPackageList \u003d new ClientPackageList();","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"    Ui testUi \u003d new Ui();","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"    void addClientCommand_validData_correctlyConstructed() {","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"        Client testClient \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"                new Client(new String[]{","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"                    TEST_CLIENT_ID,","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"                    TEST_CLIENT_NAME,","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"                    TEST_CLIENT_CONTACT,","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"                    TEST_CLIENT_EMAIL});","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"        AddClientCommand addClient \u003d new AddClientCommand(testClient);","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"        Client retrieveClient \u003d addClient.getClient();","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(TEST_CLIENT_ID, retrieveClient.getId());","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(TEST_CLIENT_NAME, retrieveClient.getName());","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(TEST_CLIENT_CONTACT, retrieveClient.getContactNum());","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(TEST_CLIENT_EMAIL, retrieveClient.getEmail());","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"    void addClientCommand_emptyClientList_populatedClientList() throws TourPlannerException {","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"        Client testClient \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"bobowoo2468"},"content":"                new Client(new String[]{","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"bobowoo2468"},"content":"                    TEST_CLIENT_ID,","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"bobowoo2468"},"content":"                    TEST_CLIENT_NAME,","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"bobowoo2468"},"content":"                    TEST_CLIENT_CONTACT,","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"                    TEST_CLIENT_EMAIL});","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"bobowoo2468"},"content":"        AddClientCommand addClient \u003d new AddClientCommand(testClient);","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"bobowoo2468"},"content":"        addClient.setData(testClientList, dummyFlightList, dummyTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"bobowoo2468"},"content":"        addClient.execute();","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"bobowoo2468"},"content":"        Client retrieveClient \u003d testClientList.getClientById(TEST_CLIENT_ID);","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(TEST_CLIENT_ID, retrieveClient.getId());","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(TEST_CLIENT_NAME, retrieveClient.getName());","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(TEST_CLIENT_CONTACT, retrieveClient.getContactNum());","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(TEST_CLIENT_EMAIL, retrieveClient.getEmail());","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"bobowoo2468":62}},{"path":"src/test/java/seedu/duke/commands/clients/CutClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke.commands.clients;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.Client;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.ClientList;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.ClientPackage;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.ClientPackageList;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.Flight;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.FlightList;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.Tour;","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.TourList;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"public class CutClientCommandTest {","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"    public static final String CLIENT_ID_1 \u003d \"c001\";","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"    public static final String[] CLIENT_BOTUAN \u003d {CLIENT_ID_1, \"Bo Tuan\", \"93338333\", \"bt@mail.com\"};","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"    public static final String[] CLIENT_WAYNE \u003d {\"c002\", \"Wayne\", \"56667888\", \"wen@mail.com\"};","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"    public static final String[] CLIENT_CHENGXU \u003d {\"c003\", \"ChengXu\", \"10101010\", \"demonshaha@mail.com\"};","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"    public static final String[] TOUR_JPN \u003d {\"JPN\", \"Japan Basic Tour\", \"1500.00\"};","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"    public static final String[] TOUR_KOR \u003d {\"KOR\", \"Korea Cultural Tour\", \"3000.00\"};","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"swongts"},"content":"    public static final String[] FLIGHT_SQJPN \u003d {\"SQ-JPN\", \"JPN\", \"SG\", \"20/10/21 18:00\", \"21/10/21 03:00\"};","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"    public static final String[] FLIGHT_SQKOR \u003d {\"SQ-KOR\", \"KOR\", \"SG\", \"23/10/2021 18:00\", \"30/10/2021 03:00\"};","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"    public static final String PACKAGE_ID_1 \u003d \"p001\";","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"    public static final String PACKAGE_ID_2 \u003d \"p002\";","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"    public static final String CLIENT_ID_WRONG \u003d \"1234po0o\";","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"    PrintStream previousConsole;","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"    ByteArrayOutputStream newConsole;","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"swongts"},"content":"    private ClientList clients;","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"swongts"},"content":"    private FlightList flights;","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"swongts"},"content":"    private TourList tours;","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"swongts"},"content":"    private ClientPackageList clientPackages;","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"swongts"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"swongts"},"content":"    private ClientList allClients;","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"swongts"},"content":"    private ClientList clientsWithoutBotuan;","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"swongts"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"swongts"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"swongts"},"content":"        previousConsole \u003d System.out;","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"swongts"},"content":"        newConsole \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"swongts"},"content":"        Client botuan \u003d new Client(CLIENT_BOTUAN);","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"swongts"},"content":"        Client wayne \u003d new Client(CLIENT_WAYNE);","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"swongts"},"content":"        Client chengxu \u003d new Client(CLIENT_CHENGXU);","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"swongts"},"content":"        clients \u003d createClientList(botuan, wayne, chengxu);","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"swongts"},"content":"        allClients \u003d createClientList(botuan, wayne, chengxu);","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"swongts"},"content":"        clientsWithoutBotuan \u003d createClientList(wayne, chengxu);","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"swongts"},"content":"        Tour jpn \u003d new Tour(TOUR_JPN);","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"swongts"},"content":"        Tour kor \u003d new Tour(TOUR_KOR);","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"swongts"},"content":"        Flight sqjpn \u003d new Flight(FLIGHT_SQJPN);","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"swongts"},"content":"        Flight sqkor \u003d new Flight(FLIGHT_SQKOR);","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"swongts"},"content":"        ClientPackage botuanPack1 \u003d new ClientPackage(PACKAGE_ID_1, botuan, jpn, sqjpn);","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"swongts"},"content":"        ClientPackage botuanPack2 \u003d new ClientPackage(PACKAGE_ID_2, botuan, kor, sqkor);","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"swongts"},"content":"        clientPackages \u003d createClientPackageList(botuanPack1, botuanPack2);","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"swongts"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"swongts"},"content":"    public void cutClientCommand_validClientId_clientDeleted() throws TourPlannerException {","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"swongts"},"content":"        assertEquals(clients.getClientCount(), 3);","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"swongts"},"content":"        Command cutClientCommand \u003d new CutClientCommand(CLIENT_ID_1);","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"swongts"},"content":"        cutClientCommand.setData(clients, flights, tours, clientPackages, ui);","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"swongts"},"content":"        cutClientCommand.execute();","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"swongts"},"content":"        assertEquals(clients.getClientCount(), clientsWithoutBotuan.getClientCount());","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"swongts"},"content":"        for (int i \u003d 0; i \u003c clientsWithoutBotuan.getClientCount(); i++) {","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"swongts"},"content":"            assertEquals(clients.getClientByIndex(i), clientsWithoutBotuan.getClientByIndex(i));","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"swongts"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"swongts"},"content":"    public void cutClientCommand_validClientId_clientPackagesDeleted() throws TourPlannerException {","lastModifiedDate":"2021-10-30"},{"lineNumber":89,"author":{"gitId":"swongts"},"content":"        Command cutClientCommand \u003d new CutClientCommand(CLIENT_ID_1);","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"swongts"},"content":"        cutClientCommand.setData(clients, flights, tours, clientPackages, ui);","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"swongts"},"content":"        cutClientCommand.execute();","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"swongts"},"content":"        assertEquals(clientPackages.getClientPackageCount(), 0);","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"swongts"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"swongts"},"content":"    public void cutClientCommand_invalidClientId_clientNotFoundMessage() throws TourPlannerException {","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"swongts"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"swongts"},"content":"        Command cutClientCommand \u003d new CutClientCommand(CLIENT_ID_WRONG);","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"swongts"},"content":"        cutClientCommand.setData(clients, flights, tours, clientPackages, ui);","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"swongts"},"content":"        cutClientCommand.execute();","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"swongts"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"swongts"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-28"},{"lineNumber":105,"author":{"gitId":"swongts"},"content":"        String expectedString \u003d ClientList.CLIENT_NOT_FOUND_MESSAGE;","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"swongts"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-10-28"},{"lineNumber":107,"author":{"gitId":"swongts"},"content":"        assertEquals(expectedString, actualString);","lastModifiedDate":"2021-10-28"},{"lineNumber":108,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"swongts"},"content":"    private ClientList createClientList(Client...clientList) {","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"swongts"},"content":"        ClientList newClientList \u003d new ClientList();","lastModifiedDate":"2021-10-28"},{"lineNumber":112,"author":{"gitId":"swongts"},"content":"        for (Client client : clientList) {","lastModifiedDate":"2021-10-28"},{"lineNumber":113,"author":{"gitId":"swongts"},"content":"            newClientList.add(client);","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"swongts"},"content":"        return newClientList;","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":118,"author":{"gitId":"swongts"},"content":"    private ClientPackageList createClientPackageList(ClientPackage...clientPackageList) {","lastModifiedDate":"2021-10-30"},{"lineNumber":119,"author":{"gitId":"swongts"},"content":"        ClientPackageList newClientPackageList \u003d new ClientPackageList();","lastModifiedDate":"2021-10-30"},{"lineNumber":120,"author":{"gitId":"swongts"},"content":"        for (ClientPackage clientPackage: clientPackageList) {","lastModifiedDate":"2021-10-30"},{"lineNumber":121,"author":{"gitId":"swongts"},"content":"            newClientPackageList.add(clientPackage);","lastModifiedDate":"2021-10-30"},{"lineNumber":122,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":123,"author":{"gitId":"swongts"},"content":"        return newClientPackageList;","lastModifiedDate":"2021-10-30"},{"lineNumber":124,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":125,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"bobowoo2468":3,"swongts":122}},{"path":"src/test/java/seedu/duke/commands/clients/FindClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke.commands.clients;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.Client;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.ClientList;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.ClientPackageList;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.FlightList;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.TourList;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"YipWayne"},"content":"public class FindClientCommandTest {","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"YipWayne"},"content":"    private static Client TEST_CLIENT_ONE \u003d new Client(new String[]{\"c001\", \"Bo Tuan\", \"93338333\", \"bt@mail.com\"});","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"YipWayne"},"content":"    private static Client TEST_CLIENT_TWO \u003d new Client(new String[]{\"c002\", \"Wayne\", \"56667888\", \"wen@mail.com\"});","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"YipWayne"},"content":"    private static Client TEST_CLIENT_THREE \u003d new Client(new String[]{\"c002\", \"Bo Tuan\", \"56667888\", \"bbt@mail.com\"});","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"YipWayne"},"content":"    private static final String VALID_DATA_OUTPUT \u003d \"This is the client(s) that matches your search\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"YipWayne"},"content":"            + \"1. \" + TEST_CLIENT_ONE;","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"YipWayne"},"content":"    private static final String TWO_OR_MORE_OUTPUT \u003d \"This is the client(s) that matches your search\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"YipWayne"},"content":"            + \"1. \" + TEST_CLIENT_ONE + \"\\n\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"YipWayne"},"content":"            + \"2. \" + TEST_CLIENT_THREE;","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"    private static final String INVALID_DATA_OUTPUT \u003d \"I\u0027m sorry, \"","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"            + \"there seems to be no client(s) that matches your search\";","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"YipWayne"},"content":"    PrintStream previousConsole \u003d System.out;","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"YipWayne"},"content":"    ByteArrayOutputStream newConsole \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"YipWayne"},"content":"    ClientList testClientList \u003d new ClientList();","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"YipWayne"},"content":"    TourList dummyTourList \u003d new TourList();","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"YipWayne"},"content":"    FlightList dummyFlightList \u003d new FlightList();","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"YipWayne"},"content":"    ClientPackageList dummyPackageList \u003d new ClientPackageList();","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"YipWayne"},"content":"    Ui testUi \u003d new Ui();","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"YipWayne"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"YipWayne"},"content":"    void findClientCommand_validData_correctlyConstructed() throws TourPlannerException {","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"YipWayne"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"YipWayne"},"content":"        testClientList.add(TEST_CLIENT_ONE);","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"YipWayne"},"content":"        testClientList.add(TEST_CLIENT_TWO);","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"YipWayne"},"content":"        Command findClient \u003d new FindClientCommand(\"Bo Tuan\");","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"YipWayne"},"content":"        findClient.setData(testClientList, dummyFlightList, dummyTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"YipWayne"},"content":"        findClient.execute();","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"YipWayne"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"YipWayne"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"YipWayne"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"YipWayne"},"content":"        assertEquals(VALID_DATA_OUTPUT, actualString);","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"YipWayne"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"YipWayne"},"content":"    void findClientCommand_TwoOrMoreSameName_correctlyConstructed() throws TourPlannerException {","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"YipWayne"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"YipWayne"},"content":"        testClientList.add(TEST_CLIENT_ONE);","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"YipWayne"},"content":"        testClientList.add(TEST_CLIENT_THREE);","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"YipWayne"},"content":"        Command findClient \u003d new FindClientCommand(\"Bo Tuan\");","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"YipWayne"},"content":"        findClient.setData(testClientList, dummyFlightList, dummyTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"YipWayne"},"content":"        findClient.execute();","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"YipWayne"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"YipWayne"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"YipWayne"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"YipWayne"},"content":"        assertEquals(TWO_OR_MORE_OUTPUT, actualString);","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"YipWayne"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"YipWayne"},"content":"    void findClientCommand_invalidData_correctlyConstructed() throws TourPlannerException {","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"YipWayne"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"YipWayne"},"content":"        testClientList.add(TEST_CLIENT_ONE);","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"YipWayne"},"content":"        testClientList.add(TEST_CLIENT_TWO);","lastModifiedDate":"2021-11-08"},{"lineNumber":79,"author":{"gitId":"YipWayne"},"content":"        Command findClient \u003d new FindClientCommand(\"Sem\");","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"YipWayne"},"content":"        findClient.setData(testClientList, dummyFlightList, dummyTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"YipWayne"},"content":"        findClient.execute();","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"YipWayne"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"YipWayne"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"YipWayne"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"YipWayne"},"content":"        assertEquals(INVALID_DATA_OUTPUT, actualString);","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"YipWayne":78,"bobowoo2468":8,"swongts":2}},{"path":"src/test/java/seedu/duke/commands/clients/ListClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke.commands.clients;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.data.Client;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.data.ClientList;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.data.TourList;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.data.FlightList;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.data.ClientPackageList;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"YipWayne"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"YipWayne"},"content":"public class ListClientCommandTest {","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"YipWayne"},"content":"    private static Client TEST_CLIENT_ONE \u003d new Client(new String[]{\"c001\", \"Bo Tuan\", \"93338333\", \"bt@mail.com\"});","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"YipWayne"},"content":"    private static Client TEST_CLIENT_TWO \u003d new Client(new String[]{\"c002\", \"Wayne\", \"56667888\", \"wen@mail.com\"});","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"YipWayne"},"content":"    private static final String VALID_DATA_OUTPUT \u003d \"Here is a list of all clients:\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"YipWayne"},"content":"            + \"1. \" + TEST_CLIENT_ONE + \"\\n\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"YipWayne"},"content":"            + \"2. \" + TEST_CLIENT_TWO + \"\\n\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"YipWayne"},"content":"            + \"Total Clients: 2\";","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"YipWayne"},"content":"    private static final String NO_DATA_OUTPUT \u003d \"I\u0027m sorry, there seems to be no clients\";","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"YipWayne"},"content":"    PrintStream previousConsole \u003d System.out;","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"YipWayne"},"content":"    ByteArrayOutputStream newConsole \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"YipWayne"},"content":"    ClientList testClientList \u003d new ClientList();","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"YipWayne"},"content":"    TourList dummyTourList \u003d new TourList();","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"YipWayne"},"content":"    FlightList dummyFlightList \u003d new FlightList();","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"YipWayne"},"content":"    ClientPackageList dummyPackageList \u003d new ClientPackageList();","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"YipWayne"},"content":"    Ui testUi \u003d new Ui();","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"YipWayne"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"YipWayne"},"content":"    void listClientCommand_validData_correctlyConstructed() throws TourPlannerException {","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"YipWayne"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"YipWayne"},"content":"        testClientList.add(TEST_CLIENT_ONE);","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"YipWayne"},"content":"        testClientList.add(TEST_CLIENT_TWO);","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"YipWayne"},"content":"        Command listClient \u003d new ListClientCommand();","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"YipWayne"},"content":"        listClient.setData(testClientList, dummyFlightList, dummyTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"YipWayne"},"content":"        listClient.execute();","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"YipWayne"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"YipWayne"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"YipWayne"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"YipWayne"},"content":"        assertEquals(VALID_DATA_OUTPUT, actualString);","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"YipWayne"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"YipWayne"},"content":"    void listClientCommand_noData_correctlyConstructed() throws TourPlannerException {","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"YipWayne"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"YipWayne"},"content":"        Command listClient \u003d new ListClientCommand();","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"YipWayne"},"content":"        listClient.setData(testClientList, dummyFlightList, dummyTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"YipWayne"},"content":"        listClient.execute();","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"YipWayne"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"YipWayne"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"YipWayne"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"YipWayne"},"content":"        assertEquals(NO_DATA_OUTPUT, actualString);","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"YipWayne":63,"bobowoo2468":3}},{"path":"src/test/java/seedu/duke/commands/clients/SortClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke.commands.clients;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.Client;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.ClientList;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.ClientPackageList;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.FlightList;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.TourList;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"public class SortClientCommandTest {","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"    public static final String VALID_SORT_BY_NAME_FILTER \u003d \"/n\";","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"    private static final String VALID_SORT_BY_ID_FILTER \u003d \"/id\";","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"    public static final String INVALID_FILTER \u003d \"/t\";","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"    PrintStream previousConsole \u003d System.out;","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"    ByteArrayOutputStream newConsole \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"    ClientList testClientList \u003d new ClientList();","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"    TourList dummyTourList \u003d new TourList();","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"    FlightList dummyFlightList \u003d new FlightList();","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"    ClientPackageList dummyPackageList \u003d new ClientPackageList();","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"    Ui testUi \u003d new Ui();","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"    void initialiseClientListForTesting() {","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"        Client botuan \u003d new Client(new String[]{\"c001\", \"Bo Tuan\", \"93338333\", \"bt@mail.com\"});","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"        Client wayne \u003d new Client(new String[]{\"c002\", \"Wayne\", \"56667888\", \"wen@mail.com\"});","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"        testClientList.add(botuan);","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"        testClientList.add(wayne);","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"    void sortClientCommand_validFilterByName_correctlySortedNameAlphabetically() throws TourPlannerException {","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"        initialiseClientListForTesting();","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"        Command testSortClientCommand \u003d new SortClientCommand(VALID_SORT_BY_NAME_FILTER);","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"        testSortClientCommand.setData(testClientList, dummyFlightList, dummyTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"bobowoo2468"},"content":"        testSortClientCommand.execute();","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"bobowoo2468"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"bobowoo2468"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"bobowoo2468"},"content":"        testClientList.initTempArray();","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"bobowoo2468"},"content":"        String expectedString \u003d Ui.SORT_CLIENT_NAME_MESSAGE + \"\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"bobowoo2468"},"content":"                + \"1. \" + testClientList.getClientByName(\"Bo Tuan\") + \"\\n\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"bobowoo2468"},"content":"                + \"2. \" + testClientList.getClientByName(\"Wayne\");","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"bobowoo2468"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(expectedString, actualString);","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"bobowoo2468"},"content":"    void sortClientCommand_validFilterById_correctlySortedIdAlphabetically() throws TourPlannerException {","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"bobowoo2468"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"bobowoo2468"},"content":"        initialiseClientListForTesting();","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"bobowoo2468"},"content":"        Command testSortClientCommand \u003d new SortClientCommand(VALID_SORT_BY_ID_FILTER);","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"bobowoo2468"},"content":"        testSortClientCommand.setData(testClientList, dummyFlightList, dummyTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"bobowoo2468"},"content":"        testSortClientCommand.execute();","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"bobowoo2468"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"bobowoo2468"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"bobowoo2468"},"content":"        testClientList.initTempArray();","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"bobowoo2468"},"content":"        String expectedString \u003d Ui.SORT_CLIENT_ID_MESSAGE + \"\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"bobowoo2468"},"content":"                + \"1. \" + testClientList.getClientById(\"c001\") + \"\\n\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"bobowoo2468"},"content":"                + \"2. \" + testClientList.getClientById(\"c002\");","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"bobowoo2468"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(expectedString, actualString);","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"bobowoo2468"},"content":"    void sortClientCommand_invalidFilter_throwException() throws TourPlannerException {","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"bobowoo2468"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-30"},{"lineNumber":85,"author":{"gitId":"bobowoo2468"},"content":"        initialiseClientListForTesting();","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"bobowoo2468"},"content":"        Command testSortClientCommand \u003d new SortClientCommand(INVALID_FILTER);","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"bobowoo2468"},"content":"        testSortClientCommand.setData(testClientList, dummyFlightList, dummyTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-10-30"},{"lineNumber":89,"author":{"gitId":"bobowoo2468"},"content":"        testSortClientCommand.execute();","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"bobowoo2468"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"bobowoo2468"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"bobowoo2468"},"content":"        testClientList.initTempArray();","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"bobowoo2468"},"content":"        String expectedString \u003d SortClientCommand.ERROR_MISSING_FILTER;","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"bobowoo2468"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(expectedString, actualString);","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"bobowoo2468":99}},{"path":"src/test/java/seedu/duke/commands/flights/AddFlightCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke.commands.flights;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.ClientList;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.ClientPackageList;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.Flight;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.FlightList;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.TourList;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"public class AddFlightCommandTest {","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"    public static final String TEST_FLIGHT_ID \u003d \"SQ-JPN1\";","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"    public static final String TEST_FLIGHT_DEPART \u003d \"JPN\";","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"    public static final String TEST_FLIGHT_RETURN \u003d \"SG\";","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"    public static final String TEST_DEPART_TIME \u003d \"23/10/21 13:00\";","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"    public static final String TEST_RETURN_TIME \u003d \"27/10/21 02:00\";","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"    FlightList testFlightList \u003d new FlightList();","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"    ClientList dummyClientList \u003d new ClientList();","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"    TourList dummyTourList \u003d new TourList();","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"    ClientPackageList dummyPackageList \u003d new ClientPackageList();","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"    Ui testUi \u003d new Ui();","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"    void addFlightCommand_validData_correctlyConstructed() {","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"        Flight testFlight \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"                new Flight(new String[]{","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"                    TEST_FLIGHT_ID,","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"                    TEST_FLIGHT_DEPART,","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"                    TEST_FLIGHT_RETURN,","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"                    TEST_DEPART_TIME,","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"                    TEST_RETURN_TIME});","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"        AddFlightCommand addFlight \u003d new AddFlightCommand(testFlight);","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"        Flight retrieveFlight \u003d addFlight.getFlight();","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(TEST_FLIGHT_ID, retrieveFlight.getId());","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(TEST_FLIGHT_DEPART, retrieveFlight.getDepartDestination());","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(TEST_FLIGHT_RETURN, retrieveFlight.getReturnDestination());","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(TEST_DEPART_TIME, retrieveFlight.getDepartDate());","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(TEST_RETURN_TIME, retrieveFlight.getReturnDate());","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"bobowoo2468"},"content":"    void addFlightCommand_emptyFlightList_populatedFlightList() {","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"bobowoo2468"},"content":"        Flight testFlight \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"bobowoo2468"},"content":"                new Flight(new String[]{","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"bobowoo2468"},"content":"                    TEST_FLIGHT_ID,","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"                    TEST_FLIGHT_DEPART,","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"bobowoo2468"},"content":"                    TEST_FLIGHT_RETURN,","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"bobowoo2468"},"content":"                    TEST_DEPART_TIME,","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"bobowoo2468"},"content":"                    TEST_RETURN_TIME});","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"bobowoo2468"},"content":"        AddFlightCommand addFlight \u003d new AddFlightCommand(testFlight);","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"bobowoo2468"},"content":"        addFlight.setData(dummyClientList, testFlightList, dummyTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"bobowoo2468"},"content":"        addFlight.execute();","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"bobowoo2468"},"content":"        Flight retrieveFlight \u003d testFlightList.getFlightByIndex(0);","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(TEST_FLIGHT_ID, retrieveFlight.getId());","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(TEST_FLIGHT_DEPART, retrieveFlight.getDepartDestination());","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(TEST_FLIGHT_RETURN, retrieveFlight.getReturnDestination());","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(TEST_DEPART_TIME, retrieveFlight.getDepartDate());","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(TEST_RETURN_TIME, retrieveFlight.getReturnDate());","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"bobowoo2468":67}},{"path":"src/test/java/seedu/duke/commands/flights/CutFlightCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke.commands.flights;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.Client;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.ClientList;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.ClientPackage;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.ClientPackageList;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.Flight;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.FlightList;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.Tour;","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.TourList;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"public class CutFlightCommandTest {","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"    public static final String FLIGHT_ID_2 \u003d \"SQ-KOR\";","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"    public static final String[] FLIGHT_SQJPN \u003d {\"SQ-JPN\", \"JPN\", \"SG\", \"20/10/21 18:00\", \"21/10/21 03:00\"};","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"    public static final String[] FLIGHT_SQKOR \u003d {FLIGHT_ID_2, \"KOR\", \"SG\", \"23/10/2021 18:00\", \"30/10/2021 03:00\"};","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"    public static final String[] FLIGHT_SQZWM \u003d {\"SQ-ZWM\", \"ZWM\", \"SG\", \"5/11/21 09:00\", \"7/11/21 15:00\"};","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"    public static final String[] CLIENT_BOTUAN \u003d {\"c001\", \"Bo Tuan\", \"93338333\", \"bt@mail.com\"};","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"    public static final String[] CLIENT_WAYNE \u003d {\"c002\", \"Wayne\", \"56667888\", \"wen@mail.com\"};","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"    public static final String[] TOUR_JPN \u003d {\"JPN\", \"Japan Basic Tour\", \"1500.00\"};","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"swongts"},"content":"    public static final String[] TOUR_KOR \u003d {\"KOR\", \"Korea Cultural Tour\", \"3000.00\"};","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"    public static final String CLIENT_PACKAGE_ID_1 \u003d \"p001\";","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"    public static final String CLIENT_PACKAGE_ID_2 \u003d \"p002\";","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"    public static final String FLIGHT_ID_WRONG \u003d \"1234po0o\";","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"    PrintStream previousConsole;","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"    ByteArrayOutputStream newConsole;","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"swongts"},"content":"    private ClientList clients;","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"swongts"},"content":"    private FlightList flights;","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"swongts"},"content":"    private TourList tours;","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"swongts"},"content":"    private ClientPackageList clientPackages;","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"swongts"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"swongts"},"content":"    private FlightList flightsWithoutKor;","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"swongts"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"swongts"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"swongts"},"content":"        previousConsole \u003d System.out;","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"swongts"},"content":"        newConsole \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"swongts"},"content":"        Flight sqjpn \u003d new Flight(FLIGHT_SQJPN);","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"swongts"},"content":"        Flight sqkor \u003d new Flight(FLIGHT_SQKOR);","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"swongts"},"content":"        Flight sqzwm \u003d new Flight(FLIGHT_SQZWM);","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"swongts"},"content":"        Client botuan \u003d new Client(CLIENT_BOTUAN);","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"swongts"},"content":"        Client wayne \u003d new Client(CLIENT_WAYNE);","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"swongts"},"content":"        Tour jpn \u003d new Tour(TOUR_JPN);","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"swongts"},"content":"        Tour kor \u003d new Tour(TOUR_KOR);","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"swongts"},"content":"        ClientPackage korPack1 \u003d new ClientPackage(CLIENT_PACKAGE_ID_1, botuan, jpn, sqkor);","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"swongts"},"content":"        ClientPackage korPack2 \u003d new ClientPackage(CLIENT_PACKAGE_ID_2, wayne, kor, sqkor);","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"swongts"},"content":"        flights \u003d createFlightList(sqjpn, sqkor, sqzwm);","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"swongts"},"content":"        flightsWithoutKor \u003d createFlightList(sqjpn, sqzwm);","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"swongts"},"content":"        clientPackages \u003d createClientPackageList(korPack1, korPack2);","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"swongts"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"swongts"},"content":"    public void cutFlightCommand_validFlightId_flightDeleted() throws TourPlannerException {","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"swongts"},"content":"        assertEquals(flights.getFlightCount(), 3);","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"swongts"},"content":"        Command cutFlightCommand \u003d new CutFlightCommand(FLIGHT_ID_2);","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"swongts"},"content":"        cutFlightCommand.setData(clients, flights, tours, clientPackages, ui);","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"swongts"},"content":"        cutFlightCommand.execute();","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"swongts"},"content":"        assertEquals(flights.getFlightCount(), flightsWithoutKor.getFlightCount());","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"swongts"},"content":"        for (int i \u003d 0; i \u003c flightsWithoutKor.getFlightCount(); i++) {","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"swongts"},"content":"            assertEquals(flights.getFlightByIndex(i), flightsWithoutKor.getFlightByIndex(i));","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":85,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"swongts"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"swongts"},"content":"    public void cutFlightCommand_validFlightId_clientPackagesDeleted() throws TourPlannerException {","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"swongts"},"content":"        Command cutFlightCommand \u003d new CutFlightCommand(FLIGHT_ID_2);","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"swongts"},"content":"        cutFlightCommand.setData(clients, flights, tours, clientPackages, ui);","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"swongts"},"content":"        cutFlightCommand.execute();","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"swongts"},"content":"        assertEquals(clientPackages.getClientPackageCount(), 0);","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"swongts"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"swongts"},"content":"    public void cutFlightCommand_invalidFlightId_flightNotFoundMessage() throws TourPlannerException {","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"swongts"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"swongts"},"content":"        Command cutFlightCommand \u003d new CutFlightCommand(FLIGHT_ID_WRONG);","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"swongts"},"content":"        cutFlightCommand.setData(clients, flights, tours, clientPackages, ui);","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"swongts"},"content":"        cutFlightCommand.execute();","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"swongts"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"swongts"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-30"},{"lineNumber":104,"author":{"gitId":"swongts"},"content":"        String expectedString \u003d FlightList.FLIGHT_NOT_FOUND_MESSAGE;","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"swongts"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"swongts"},"content":"        assertEquals(expectedString, actualString);","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"swongts"},"content":"    private FlightList createFlightList(Flight...flightList) {","lastModifiedDate":"2021-10-30"},{"lineNumber":110,"author":{"gitId":"swongts"},"content":"        FlightList newFlightList \u003d new FlightList();","lastModifiedDate":"2021-10-30"},{"lineNumber":111,"author":{"gitId":"swongts"},"content":"        for (Flight flight : flightList) {","lastModifiedDate":"2021-10-30"},{"lineNumber":112,"author":{"gitId":"swongts"},"content":"            newFlightList.add(flight);","lastModifiedDate":"2021-10-30"},{"lineNumber":113,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":114,"author":{"gitId":"swongts"},"content":"        return newFlightList;","lastModifiedDate":"2021-10-30"},{"lineNumber":115,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":116,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":117,"author":{"gitId":"swongts"},"content":"    private ClientPackageList createClientPackageList(ClientPackage...clientPackageList) {","lastModifiedDate":"2021-10-30"},{"lineNumber":118,"author":{"gitId":"swongts"},"content":"        ClientPackageList newClientPackageList \u003d new ClientPackageList();","lastModifiedDate":"2021-10-30"},{"lineNumber":119,"author":{"gitId":"swongts"},"content":"        for (ClientPackage clientPackage: clientPackageList) {","lastModifiedDate":"2021-10-30"},{"lineNumber":120,"author":{"gitId":"swongts"},"content":"            newClientPackageList.add(clientPackage);","lastModifiedDate":"2021-10-30"},{"lineNumber":121,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":122,"author":{"gitId":"swongts"},"content":"        return newClientPackageList;","lastModifiedDate":"2021-10-30"},{"lineNumber":123,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":124,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"bobowoo2468":3,"swongts":121}},{"path":"src/test/java/seedu/duke/commands/flights/FindFlightCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke.commands.flights;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.Client;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.ClientList;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.ClientPackage;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.ClientPackageList;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.Flight;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.FlightList;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.Tour;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.TourList;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"YipWayne"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"YipWayne"},"content":"public class FindFlightCommandTest {","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"    private static Flight TEST_FLIGHT_ONE \u003d new Flight(new String[]{\"SQ-JPN\", \"JPN\", \"SG\", \"20/10/2021 18:00\",","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"        \"21/10/2021 03:00\"});","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"    private static Flight TEST_FLIGHT_TWO \u003d new Flight(new String[]{\"SQ-KOR\", \"KOR\", \"SG\", \"23/10/2021 18:00\",","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"        \"30/10/2021 03:00\"});","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"YipWayne"},"content":"    private static Client TEST_CLIENT \u003d new Client(new String[]{\"c001\", \"Bo Tuan\", \"93338333\", \"bt@mail.com\"});","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"YipWayne"},"content":"    private static Tour TEST_TOUR \u003d new Tour(new String[]{\"JPN\", \"Japan Basic Tour\", \"1500.00\"});","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"YipWayne"},"content":"    private static ClientPackage TEST_CLIENTPACKAGE \u003d new ClientPackage(\"p001\",","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"YipWayne"},"content":"            TEST_CLIENT, TEST_TOUR, TEST_FLIGHT_ONE);","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"YipWayne"},"content":"    private static final String VALID_DATA_OUTPUT \u003d \"This is the flight that matches your search\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"YipWayne"},"content":"            + TEST_FLIGHT_ONE + \"\\n\\n\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"YipWayne"},"content":"            + \"Passengers:\\n\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"YipWayne"},"content":"            + \"Total Passengers: 0\";","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"YipWayne"},"content":"    private static final String VALID_PASSENGER_OUTPUT \u003d \"This is the flight that matches your search\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"YipWayne"},"content":"            + TEST_FLIGHT_ONE + \"\\n\\n\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"YipWayne"},"content":"            + \"Passengers:\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"YipWayne"},"content":"            + \"1. Bo Tuan (ID: c001)\\n\" + \"\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"YipWayne"},"content":"            + \"Total Passengers: 1\";","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"YipWayne"},"content":"    private static final String INVALID_DATA_OUTPUT \u003d \"ERROR: Flight cannot be found. Please try another flight ID.\";","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"YipWayne"},"content":"    PrintStream previousConsole \u003d System.out;","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"YipWayne"},"content":"    ByteArrayOutputStream newConsole \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"YipWayne"},"content":"    ClientList dummyClientList \u003d new ClientList();","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"YipWayne"},"content":"    TourList dummyTourList \u003d new TourList();","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"YipWayne"},"content":"    FlightList testFlightList \u003d new FlightList();","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"YipWayne"},"content":"    ClientPackageList dummyPackageList \u003d new ClientPackageList();","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"YipWayne"},"content":"    Ui testUi \u003d new Ui();","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"YipWayne"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"YipWayne"},"content":"    void findFlightCommand_validData_correctlyConstructed() throws TourPlannerException {","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"YipWayne"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"YipWayne"},"content":"        testFlightList.add(TEST_FLIGHT_ONE);","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"YipWayne"},"content":"        testFlightList.add(TEST_FLIGHT_TWO);","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"YipWayne"},"content":"        Command findFlight \u003d new FindFlightCommand(\"SQ-JPN\");","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"YipWayne"},"content":"        findFlight.setData(dummyClientList, testFlightList, dummyTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"YipWayne"},"content":"        findFlight.execute();","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"YipWayne"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"YipWayne"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"YipWayne"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"YipWayne"},"content":"        assertEquals(VALID_DATA_OUTPUT, actualString);","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"YipWayne"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"YipWayne"},"content":"    void findFlightCommand_validPassenger_correctlyConstructed() throws TourPlannerException {","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"YipWayne"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"YipWayne"},"content":"        dummyClientList.add(TEST_CLIENT);","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"YipWayne"},"content":"        dummyTourList.add(TEST_TOUR);","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"YipWayne"},"content":"        testFlightList.add(TEST_FLIGHT_ONE);","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"YipWayne"},"content":"        dummyPackageList.add(TEST_CLIENTPACKAGE);","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"YipWayne"},"content":"        Command findFlight \u003d new FindFlightCommand(\"SQ-JPN\");","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"YipWayne"},"content":"        findFlight.setData(dummyClientList, testFlightList, dummyTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"YipWayne"},"content":"        findFlight.execute();","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"YipWayne"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"YipWayne"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"YipWayne"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"YipWayne"},"content":"        assertEquals(VALID_PASSENGER_OUTPUT, actualString);","lastModifiedDate":"2021-11-08"},{"lineNumber":86,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"YipWayne"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"YipWayne"},"content":"    void findFlightCommand_invalidData_correctlyConstructed() throws TourPlannerException {","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"YipWayne"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"YipWayne"},"content":"        testFlightList.add(TEST_FLIGHT_ONE);","lastModifiedDate":"2021-11-08"},{"lineNumber":93,"author":{"gitId":"YipWayne"},"content":"        testFlightList.add(TEST_FLIGHT_TWO);","lastModifiedDate":"2021-11-08"},{"lineNumber":94,"author":{"gitId":"YipWayne"},"content":"        Command findFlight \u003d new FindFlightCommand(\"SQ-ZBW\");","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"YipWayne"},"content":"        findFlight.setData(dummyClientList, testFlightList, dummyTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"YipWayne"},"content":"        findFlight.execute();","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"YipWayne"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"YipWayne"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"YipWayne"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"YipWayne"},"content":"        assertEquals(INVALID_DATA_OUTPUT, actualString);","lastModifiedDate":"2021-11-08"},{"lineNumber":102,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"YipWayne":86,"bobowoo2468":13,"swongts":4}},{"path":"src/test/java/seedu/duke/commands/flights/ListFlightCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke.commands.flights;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.data.ClientList;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.data.ClientPackageList;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.Flight;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.FlightList;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.TourList;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"YipWayne"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"YipWayne"},"content":"public class ListFlightCommandTest {","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"    private static Flight TEST_FLIGHT_ONE \u003d new Flight(new String[]{\"SQ-JPN\", \"JPN\", \"SG\", \"20/10/2021 18:00\",","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"        \"21/10/2021 03:00\"});","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"    private static Flight TEST_FLIGHT_TWO \u003d new Flight(new String[]{\"SQ-KOR\", \"KOR\", \"SG\", \"23/10/2021 18:00\",","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"        \"30/10/2021 03:00\"});","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"YipWayne"},"content":"    private static final String VALID_DATA_OUTPUT \u003d \"Here is a list of all flights:\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"YipWayne"},"content":"            + \"1. \" + TEST_FLIGHT_ONE + \"\\n\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"YipWayne"},"content":"            + \"2. \" + TEST_FLIGHT_TWO + \"\\n\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"YipWayne"},"content":"            + \"Total Flights: 2\";","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"YipWayne"},"content":"    private static final String NO_DATA_OUTPUT \u003d \"I\u0027m sorry, there seems to be no flights\";","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"YipWayne"},"content":"    PrintStream previousConsole \u003d System.out;","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"YipWayne"},"content":"    ByteArrayOutputStream newConsole \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"YipWayne"},"content":"    ClientList dummyClientList \u003d new ClientList();","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"YipWayne"},"content":"    TourList dummyTourList \u003d new TourList();","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"YipWayne"},"content":"    FlightList testFlightList \u003d new FlightList();","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"YipWayne"},"content":"    ClientPackageList dummyPackageList \u003d new ClientPackageList();","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"YipWayne"},"content":"    Ui testUi \u003d new Ui();","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"YipWayne"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"YipWayne"},"content":"    void listClientCommand_validData_correctlyConstructed() throws TourPlannerException {","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"YipWayne"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"YipWayne"},"content":"        testFlightList.add(TEST_FLIGHT_ONE);","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"YipWayne"},"content":"        testFlightList.add(TEST_FLIGHT_TWO);","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"YipWayne"},"content":"        Command listTour \u003d new ListFlightCommand();","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"YipWayne"},"content":"        listTour.setData(dummyClientList, testFlightList, dummyTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"YipWayne"},"content":"        listTour.execute();","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"YipWayne"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"YipWayne"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"YipWayne"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"YipWayne"},"content":"        assertEquals(VALID_DATA_OUTPUT, actualString);","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"YipWayne"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"YipWayne"},"content":"    void listTourCommand_noData_correctlyConstructed() throws TourPlannerException {","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"YipWayne"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"YipWayne"},"content":"        Command listTour \u003d new ListFlightCommand();","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"YipWayne"},"content":"        listTour.setData(dummyClientList, testFlightList, dummyTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"YipWayne"},"content":"        listTour.execute();","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"YipWayne"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"YipWayne"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"YipWayne"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"YipWayne"},"content":"        assertEquals(NO_DATA_OUTPUT, actualString);","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"YipWayne":57,"bobowoo2468":7,"swongts":4}},{"path":"src/test/java/seedu/duke/commands/flights/SortFlightCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke.commands.flights;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.ClientList;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.ClientPackageList;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.Flight;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.FlightList;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.TourList;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"class SortFlightCommandTest {","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"    private static final String VALID_SORT_BY_DEPART_FILTER \u003d \"/d\";","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"    private static final String VALID_SORT_BY_ARRIVE_FILTER \u003d \"/r\";","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"    public static final String VALID_SORT_BY_ID_FILTER \u003d \"/id\";","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"    private static final String INVALID_FILTER \u003d \"/rubbish\";","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"    PrintStream previousConsole \u003d System.out;","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"    ByteArrayOutputStream newConsole \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"    TourList dummyTourList \u003d new TourList();","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"    ClientList dummyClientList \u003d new ClientList();","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"    FlightList testFlightList \u003d new FlightList();","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"    ClientPackageList dummyPackageList \u003d new ClientPackageList();","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"    Ui testUi \u003d new Ui();","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"    void initialiseFlightListForTesting() {","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"        Flight sqjpn \u003d new Flight(new String[]{\"SQ-JPN\", \"JPN\", \"SG\", \"20/10/21 18:00\", \"24/10/21 03:00\"});","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"        Flight msiaaus \u003d new Flight(new String[]{\"MSIA-AUS\", \"AUS\", \"MSIA\", \"2/11/21 23:00\", \"9/11/21 11:00\"});","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"        Flight sqkor \u003d new Flight(new String[]{\"SQ-KOR\", \"KOR\", \"SG\", \"26/10/21 14:00\", \"28/10/21 05:00\"});","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"        testFlightList.add(sqjpn);","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"        testFlightList.add(msiaaus);","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"        testFlightList.add(sqkor);","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"    void sortFlightCommand_validFilterByDepartureDate_correctlySortedTime() throws TourPlannerException {","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"        initialiseFlightListForTesting();","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"bobowoo2468"},"content":"        Command testSortFlightCommand \u003d new SortFlightCommand(VALID_SORT_BY_DEPART_FILTER);","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"bobowoo2468"},"content":"        testSortFlightCommand.setData(dummyClientList, testFlightList, dummyTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"bobowoo2468"},"content":"        testSortFlightCommand.execute();","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"bobowoo2468"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"bobowoo2468"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"bobowoo2468"},"content":"        testFlightList.initTempArray();","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"bobowoo2468"},"content":"        String expectedString \u003d Ui.SORT_FLIGHT_BY_DEPARTURE_MESSAGE + \"\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"bobowoo2468"},"content":"                + \"1. \" + testFlightList.getFlightByDepartDate(\"20/10/21 18:00\") + \"\\n\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"bobowoo2468"},"content":"                + \"2. \" + testFlightList.getFlightByDepartDate(\"26/10/21 14:00\") + \"\\n\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"bobowoo2468"},"content":"                + \"3. \" + testFlightList.getFlightByDepartDate(\"2/11/21 23:00\");","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"bobowoo2468"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(expectedString, actualString);","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"bobowoo2468"},"content":"    void sortFlightCommand_validFilterByArriveDate_correctlySortedTime() throws TourPlannerException {","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"bobowoo2468"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"bobowoo2468"},"content":"        initialiseFlightListForTesting();","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"bobowoo2468"},"content":"        Command testSortFlightCommand \u003d new SortFlightCommand(VALID_SORT_BY_ARRIVE_FILTER);","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"bobowoo2468"},"content":"        testSortFlightCommand.setData(dummyClientList, testFlightList, dummyTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"bobowoo2468"},"content":"        testSortFlightCommand.execute();","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"bobowoo2468"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"bobowoo2468"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"bobowoo2468"},"content":"        testFlightList.initTempArray();","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"bobowoo2468"},"content":"        String expectedString \u003d Ui.SORT_FLIGHT_BY_ARRIVAL_MESSAGE + \"\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"bobowoo2468"},"content":"                + \"1. \" + testFlightList.getFlightByReturnDate(\"24/10/21 03:00\") + \"\\n\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"bobowoo2468"},"content":"                + \"2. \" + testFlightList.getFlightByReturnDate(\"28/10/21 05:00\") + \"\\n\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"bobowoo2468"},"content":"                + \"3. \" + testFlightList.getFlightByReturnDate(\"9/11/21 11:00\");","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"bobowoo2468"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(expectedString, actualString);","lastModifiedDate":"2021-10-30"},{"lineNumber":85,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"bobowoo2468"},"content":"    void sortFlightCommand_validFilterById_correctlySortedIdAlphabetically() throws TourPlannerException {","lastModifiedDate":"2021-10-30"},{"lineNumber":89,"author":{"gitId":"bobowoo2468"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"bobowoo2468"},"content":"        initialiseFlightListForTesting();","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"bobowoo2468"},"content":"        Command testSortFlightCommand \u003d new SortFlightCommand(VALID_SORT_BY_ID_FILTER);","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"bobowoo2468"},"content":"        testSortFlightCommand.setData(dummyClientList, testFlightList, dummyTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"bobowoo2468"},"content":"        testSortFlightCommand.execute();","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"bobowoo2468"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"bobowoo2468"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"bobowoo2468"},"content":"        testFlightList.initTempArray();","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"bobowoo2468"},"content":"        String expectedString \u003d Ui.SORT_FLIGHT_ID_MESSAGE + \"\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"bobowoo2468"},"content":"                + \"1. \" + testFlightList.getFlightById(\"MSIA-AUS\") + \"\\n\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"bobowoo2468"},"content":"                + \"2. \" + testFlightList.getFlightById(\"SQ-JPN\") + \"\\n\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"bobowoo2468"},"content":"                + \"3. \" + testFlightList.getFlightById(\"SQ-KOR\");","lastModifiedDate":"2021-10-30"},{"lineNumber":104,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":105,"author":{"gitId":"bobowoo2468"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(expectedString, actualString);","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":110,"author":{"gitId":"bobowoo2468"},"content":"    void sortTourCommand_invalidFilter_throwException() throws TourPlannerException {","lastModifiedDate":"2021-10-30"},{"lineNumber":111,"author":{"gitId":"bobowoo2468"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-30"},{"lineNumber":112,"author":{"gitId":"bobowoo2468"},"content":"        initialiseFlightListForTesting();","lastModifiedDate":"2021-10-30"},{"lineNumber":113,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":114,"author":{"gitId":"bobowoo2468"},"content":"        Command testSortFlightCommand \u003d new SortFlightCommand(INVALID_FILTER);","lastModifiedDate":"2021-10-30"},{"lineNumber":115,"author":{"gitId":"bobowoo2468"},"content":"        testSortFlightCommand.setData(dummyClientList, testFlightList, dummyTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-10-30"},{"lineNumber":116,"author":{"gitId":"bobowoo2468"},"content":"        testSortFlightCommand.execute();","lastModifiedDate":"2021-10-30"},{"lineNumber":117,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":118,"author":{"gitId":"bobowoo2468"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-30"},{"lineNumber":119,"author":{"gitId":"bobowoo2468"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-30"},{"lineNumber":120,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":121,"author":{"gitId":"bobowoo2468"},"content":"        testFlightList.initTempArray();","lastModifiedDate":"2021-10-30"},{"lineNumber":122,"author":{"gitId":"bobowoo2468"},"content":"        String expectedString \u003d SortFlightCommand.ERROR_MISSING_FILTER;","lastModifiedDate":"2021-10-30"},{"lineNumber":123,"author":{"gitId":"bobowoo2468"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-10-30"},{"lineNumber":124,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(expectedString, actualString);","lastModifiedDate":"2021-10-30"},{"lineNumber":125,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":126,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"bobowoo2468":126}},{"path":"src/test/java/seedu/duke/commands/tours/AddTourCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke.commands.tours;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.ClientList;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.ClientPackageList;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.FlightList;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.Tour;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.TourList;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"public class AddTourCommandTest {","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"    public static final String TEST_TOUR_ID \u003d \"t001\";","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"    public static final String TEST_TOUR_NAME \u003d \"AustralianRomance\";","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"    public static final String TEST_TOUR_PRICE_STRING \u003d \"1500\";","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"    TourList testTourList \u003d new TourList();","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"    ClientList dummyClientList \u003d new ClientList();","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"    FlightList dummyFlightList \u003d new FlightList();","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"    ClientPackageList dummyPackageList \u003d new ClientPackageList();","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"    Ui testUi \u003d new Ui();","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"    void addTourCommand_validData_correctlyConstructed() {","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"        Tour testTour \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"                new Tour(new String[]{TEST_TOUR_ID,","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"                    TEST_TOUR_NAME,","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"                    TEST_TOUR_PRICE_STRING});","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"        AddTourCommand addTour \u003d new AddTourCommand(testTour);","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"        Tour retrieveTour \u003d addTour.getTour();","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(TEST_TOUR_ID, retrieveTour.getId());","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(TEST_TOUR_NAME, retrieveTour.getName());","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(Float.parseFloat(TEST_TOUR_PRICE_STRING), retrieveTour.getPrice());","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"    void addTourCommand_emptyTourList_populatedTourList() {","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"        Tour testTour \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"                new Tour(new String[]{","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"                    TEST_TOUR_ID,","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"                    TEST_TOUR_NAME,","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"bobowoo2468"},"content":"                    TEST_TOUR_PRICE_STRING});","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"bobowoo2468"},"content":"        AddTourCommand addTour \u003d new AddTourCommand(testTour);","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"bobowoo2468"},"content":"        addTour.setData(dummyClientList, dummyFlightList, testTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"bobowoo2468"},"content":"        addTour.execute();","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"bobowoo2468"},"content":"        Tour retrieveTour \u003d addTour.getTour();","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(TEST_TOUR_ID, retrieveTour.getId());","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(TEST_TOUR_NAME, retrieveTour.getName());","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(Float.parseFloat(TEST_TOUR_PRICE_STRING), retrieveTour.getPrice());","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"bobowoo2468":57}},{"path":"src/test/java/seedu/duke/commands/tours/CutTourCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke.commands.tours;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.Client;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.ClientList;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.ClientPackage;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.ClientPackageList;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.Flight;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.FlightList;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.Tour;","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"import seedu.duke.data.TourList;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"public class CutTourCommandTest {","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"    public static final String TOUR_ID_2 \u003d \"KOR\";","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"    public static final String[] TOUR_JPN \u003d {\"JPN\", \"Japan Basic Tour\", \"1500.00\"};","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"    public static final String[] TOUR_KOR \u003d {TOUR_ID_2, \"Korea Cultural Tour\", \"3000.00\"};","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"    public static final String[] TOUR_ZWM \u003d {\"ZWM\", \"Zimbabwe Tour\", \"1700.00\"};","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"    public static final String[] FLIGHT_SQJPN \u003d {\"SQ-JPN\", \"JPN\", \"SG\", \"20/10/21 18:00\", \"21/10/21 03:00\"};","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"    public static final String[] FLIGHT_SQKOR \u003d {\"SQ-KOR\", \"KOR\", \"SG\", \"23/10/2021 18:00\", \"30/10/2021 03:00\"};","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"    public static final String[] CLIENT_BOTUAN \u003d {\"c001\", \"Bo Tuan\", \"93338333\", \"bt@mail.com\"};","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"swongts"},"content":"    public static final String[] CLIENT_WAYNE \u003d {\"c002\", \"Wayne\", \"56667888\", \"wen@mail.com\"};","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"    public static final String CLIENT_PACKAGE_ID_1 \u003d \"p001\";","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"    public static final String CLIENT_PACKAGE_ID_2 \u003d \"p002\";","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"    public static final String TOUR_ID_WRONG \u003d \"1234po0o\";","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"    PrintStream previousConsole;","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"    ByteArrayOutputStream newConsole;","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"swongts"},"content":"    private ClientList clients;","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"swongts"},"content":"    private FlightList flights;","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"swongts"},"content":"    private TourList tours;","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"swongts"},"content":"    private ClientPackageList clientPackages;","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"swongts"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"swongts"},"content":"    private TourList toursWithoutKor;","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"swongts"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"swongts"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"swongts"},"content":"        previousConsole \u003d System.out;","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"swongts"},"content":"        newConsole \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"swongts"},"content":"        Tour jpn \u003d new Tour(TOUR_JPN);","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"swongts"},"content":"        Tour kor \u003d new Tour(TOUR_KOR);","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"swongts"},"content":"        Tour zwm \u003d new Tour(TOUR_ZWM);","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"swongts"},"content":"        Flight sqjpn \u003d new Flight(FLIGHT_SQJPN);","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"swongts"},"content":"        Flight sqkor \u003d new Flight(FLIGHT_SQKOR);","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"swongts"},"content":"        Client botuan \u003d new Client(CLIENT_BOTUAN);","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"swongts"},"content":"        Client wayne \u003d new Client(CLIENT_WAYNE);","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"swongts"},"content":"        ClientPackage korPack1 \u003d new ClientPackage(CLIENT_PACKAGE_ID_1, botuan, kor, sqjpn);","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"swongts"},"content":"        ClientPackage korPack2 \u003d new ClientPackage(CLIENT_PACKAGE_ID_2, wayne, kor, sqkor);","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"swongts"},"content":"        tours \u003d createTourList(jpn, kor, zwm);","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"swongts"},"content":"        toursWithoutKor \u003d createTourList(jpn, zwm);","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"swongts"},"content":"        clientPackages \u003d createClientPackageList(korPack1, korPack2);","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"swongts"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"swongts"},"content":"    public void cutTourCommand_validTourId_tourDeleted() throws TourPlannerException {","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"swongts"},"content":"        assertEquals(tours.getTourCount(), 3);","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"swongts"},"content":"        Command cutTourCommand \u003d new CutTourCommand(TOUR_ID_2);","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"swongts"},"content":"        cutTourCommand.setData(clients, flights, tours, clientPackages, ui);","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"swongts"},"content":"        cutTourCommand.execute();","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"swongts"},"content":"        assertEquals(tours.getTourCount(), toursWithoutKor.getTourCount());","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"swongts"},"content":"        for (int i \u003d 0; i \u003c toursWithoutKor.getTourCount(); i++) {","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"swongts"},"content":"            assertEquals(tours.getTourByIndex(i), toursWithoutKor.getTourByIndex(i));","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":85,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"swongts"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"swongts"},"content":"    public void cutTourCommand_validTourId_clientPackagesDeleted() throws TourPlannerException {","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"swongts"},"content":"        Command cutTourCommand \u003d new CutTourCommand(TOUR_ID_2);","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"swongts"},"content":"        cutTourCommand.setData(clients, flights, tours, clientPackages, ui);","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"swongts"},"content":"        cutTourCommand.execute();","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"swongts"},"content":"        assertEquals(clientPackages.getClientPackageCount(), 0);","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"swongts"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"swongts"},"content":"    public void cutTourCommand_invalidTourId_tourNotFoundMessage() throws TourPlannerException {","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"swongts"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"swongts"},"content":"        Command cutTourCommand \u003d new CutTourCommand(TOUR_ID_WRONG);","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"swongts"},"content":"        cutTourCommand.setData(clients, flights, tours, clientPackages, ui);","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"swongts"},"content":"        cutTourCommand.execute();","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"swongts"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"swongts"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-30"},{"lineNumber":104,"author":{"gitId":"swongts"},"content":"        String expectedString \u003d TourList.TOUR_NOT_FOUND_MESSAGE;","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"swongts"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"swongts"},"content":"        assertEquals(expectedString, actualString);","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"swongts"},"content":"    private TourList createTourList(Tour... tourList) {","lastModifiedDate":"2021-10-30"},{"lineNumber":110,"author":{"gitId":"swongts"},"content":"        TourList newTourList \u003d new TourList();","lastModifiedDate":"2021-10-30"},{"lineNumber":111,"author":{"gitId":"swongts"},"content":"        for (Tour tour : tourList) {","lastModifiedDate":"2021-10-30"},{"lineNumber":112,"author":{"gitId":"swongts"},"content":"            newTourList.add(tour);","lastModifiedDate":"2021-10-30"},{"lineNumber":113,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":114,"author":{"gitId":"swongts"},"content":"        return newTourList;","lastModifiedDate":"2021-10-30"},{"lineNumber":115,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":116,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":117,"author":{"gitId":"swongts"},"content":"    private ClientPackageList createClientPackageList(ClientPackage...clientPackageList) {","lastModifiedDate":"2021-10-30"},{"lineNumber":118,"author":{"gitId":"swongts"},"content":"        ClientPackageList newClientPackageList \u003d new ClientPackageList();","lastModifiedDate":"2021-10-30"},{"lineNumber":119,"author":{"gitId":"swongts"},"content":"        for (ClientPackage clientPackage: clientPackageList) {","lastModifiedDate":"2021-10-30"},{"lineNumber":120,"author":{"gitId":"swongts"},"content":"            newClientPackageList.add(clientPackage);","lastModifiedDate":"2021-10-30"},{"lineNumber":121,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":122,"author":{"gitId":"swongts"},"content":"        return newClientPackageList;","lastModifiedDate":"2021-10-30"},{"lineNumber":123,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":124,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"bobowoo2468":3,"swongts":121}},{"path":"src/test/java/seedu/duke/commands/tours/FindTourCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke.commands.tours;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.Client;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.ClientList;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.ClientPackage;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.ClientPackageList;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.Flight;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.FlightList;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.Tour;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.TourList;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"YipWayne"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"YipWayne"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"YipWayne"},"content":"public class FindTourCommandTest {","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"YipWayne"},"content":"    private static Tour TEST_TOUR_ONE \u003d new Tour(new String[]{\"JPN\", \"Japan Basic Tour\", \"1500.00\"});","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"YipWayne"},"content":"    private static Tour TEST_TOUR_TWO \u003d new Tour(new String[]{\"KOR\", \"Korea Cultural Tour\", \"3000.00\"});","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"YipWayne"},"content":"    private static Client TEST_CLIENT \u003d new Client(new String[]{\"c001\", \"Bo Tuan\", \"93338333\", \"bt@mail.com\"});","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"    private static Flight TEST_FLIGHT \u003d new Flight(new String[]{\"SQ-JPN\", \"JPN\", \"SG\", \"20/10/2021 18:00\",","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"        \"21/10/2021 03:00\"});","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"YipWayne"},"content":"    private static ClientPackage TEST_CLIENTPACKAGE \u003d new ClientPackage(\"p001\",","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"YipWayne"},"content":"            TEST_CLIENT, TEST_TOUR_ONE, TEST_FLIGHT);","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"YipWayne"},"content":"    private static final String VALID_DATA_OUTPUT \u003d \"This is the tour that matches your search\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"YipWayne"},"content":"            + TEST_TOUR_ONE + \"\\n\\n\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"YipWayne"},"content":"            + \"Subscribed Clients:\\n\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"YipWayne"},"content":"            + \"Total Subscribed Clients: 0\";","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"YipWayne"},"content":"    private static final String VALID_SUBSCRIPTION_OUTPUT \u003d \"This is the tour that matches your search\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"YipWayne"},"content":"            + TEST_TOUR_ONE + \"\\n\\n\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"YipWayne"},"content":"            + \"Subscribed Clients:\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"            + \"1. Bo Tuan (ID: c001)\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"            + \"\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"YipWayne"},"content":"            + \"Total Subscribed Clients: 1\";","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"    private static final String INVALID_DATA_OUTPUT \u003d \"ERROR: Tour cannot be found. \"","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"swongts"},"content":"            + \"Please try another tour ID.\";","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"YipWayne"},"content":"    PrintStream previousConsole \u003d System.out;","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"YipWayne"},"content":"    ByteArrayOutputStream newConsole \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"YipWayne"},"content":"    ClientList dummyClientList \u003d new ClientList();","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"YipWayne"},"content":"    TourList testTourList \u003d new TourList();","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"YipWayne"},"content":"    FlightList dummyFlightList \u003d new FlightList();","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"YipWayne"},"content":"    ClientPackageList dummyPackageList \u003d new ClientPackageList();","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"YipWayne"},"content":"    Ui testUi \u003d new Ui();","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"YipWayne"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"YipWayne"},"content":"    void findTourCommand_validData_correctlyConstructed() throws TourPlannerException {","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"YipWayne"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"YipWayne"},"content":"        testTourList.add(TEST_TOUR_ONE);","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"YipWayne"},"content":"        testTourList.add(TEST_TOUR_TWO);","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"YipWayne"},"content":"        Command findTour \u003d new FindTourCommand(\"JPN\");","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"YipWayne"},"content":"        findTour.setData(dummyClientList, dummyFlightList, testTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"YipWayne"},"content":"        findTour.execute();","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"YipWayne"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"YipWayne"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"YipWayne"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"YipWayne"},"content":"        assertEquals(VALID_DATA_OUTPUT, actualString);","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"YipWayne"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"YipWayne"},"content":"    void findTourCommand_validSubscription_correctlyConstructed() throws TourPlannerException {","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"YipWayne"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"YipWayne"},"content":"        dummyClientList.add(TEST_CLIENT);","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"YipWayne"},"content":"        testTourList.add(TEST_TOUR_ONE);","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"YipWayne"},"content":"        dummyFlightList.add(TEST_FLIGHT);","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"YipWayne"},"content":"        dummyPackageList.add(TEST_CLIENTPACKAGE);","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"YipWayne"},"content":"        Command findTour \u003d new FindTourCommand(\"JPN\");","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"YipWayne"},"content":"        findTour.setData(dummyClientList, dummyFlightList, testTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"YipWayne"},"content":"        findTour.execute();","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"YipWayne"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"YipWayne"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"YipWayne"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"YipWayne"},"content":"        assertEquals(VALID_SUBSCRIPTION_OUTPUT, actualString);","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"YipWayne"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"YipWayne"},"content":"    void findTourCommand_invalidData_correctlyConstructed() throws TourPlannerException {","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"YipWayne"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"YipWayne"},"content":"        testTourList.add(TEST_TOUR_ONE);","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"YipWayne"},"content":"        testTourList.add(TEST_TOUR_TWO);","lastModifiedDate":"2021-11-08"},{"lineNumber":91,"author":{"gitId":"YipWayne"},"content":"        Command findTour \u003d new FindTourCommand(\"SGP\");","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"YipWayne"},"content":"        findTour.setData(dummyClientList, dummyFlightList, testTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"YipWayne"},"content":"        findTour.execute();","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"YipWayne"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"YipWayne"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"YipWayne"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"YipWayne"},"content":"        assertEquals(INVALID_DATA_OUTPUT, actualString);","lastModifiedDate":"2021-11-08"},{"lineNumber":99,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"YipWayne":84,"bobowoo2468":11,"swongts":6}},{"path":"src/test/java/seedu/duke/commands/tours/ListTourCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke.commands.tours;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.data.ClientList;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"YipWayne"},"content":"import seedu.duke.data.ClientPackageList;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.FlightList;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.Tour;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.TourList;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"YipWayne"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"YipWayne"},"content":"public class ListTourCommandTest {","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"YipWayne"},"content":"    private static Tour TEST_TOUR_ONE \u003d new Tour(new String[]{\"JPN\", \"Japan Basic Tour\", \"1500.00\"});","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"YipWayne"},"content":"    private static Tour TEST_TOUR_TWO \u003d new Tour(new String[]{\"KOR\", \"Korea Cultural Tour\", \"3000.00\"});","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"YipWayne"},"content":"    private static final String VALID_DATA_OUTPUT \u003d \"Here is a list of all tours:\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"YipWayne"},"content":"            + \"1. \" + TEST_TOUR_ONE + \"\\n\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"YipWayne"},"content":"            + \"2. \" + TEST_TOUR_TWO + \"\\n\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"YipWayne"},"content":"            + \"Total Tours: 2\";","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"YipWayne"},"content":"    private static final String NO_DATA_OUTPUT \u003d \"I\u0027m sorry, there seems to be no tours\";","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"YipWayne"},"content":"    PrintStream previousConsole \u003d System.out;","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"YipWayne"},"content":"    ByteArrayOutputStream newConsole \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"YipWayne"},"content":"    ClientList dummyClientList \u003d new ClientList();","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"YipWayne"},"content":"    TourList testTourList \u003d new TourList();","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"YipWayne"},"content":"    FlightList dummyFlightList \u003d new FlightList();","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"YipWayne"},"content":"    ClientPackageList dummyPackageList \u003d new ClientPackageList();","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"YipWayne"},"content":"    Ui testUi \u003d new Ui();","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"YipWayne"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"YipWayne"},"content":"    void listClientCommand_validData_correctlyConstructed() throws TourPlannerException {","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"YipWayne"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"YipWayne"},"content":"        testTourList.add(TEST_TOUR_ONE);","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"YipWayne"},"content":"        testTourList.add(TEST_TOUR_TWO);","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"YipWayne"},"content":"        Command listTour \u003d new ListTourCommand();","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"YipWayne"},"content":"        listTour.setData(dummyClientList, dummyFlightList, testTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"YipWayne"},"content":"        listTour.execute();","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"YipWayne"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"YipWayne"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"YipWayne"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"YipWayne"},"content":"        assertEquals(VALID_DATA_OUTPUT, actualString);","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"YipWayne"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"YipWayne"},"content":"    void listTourCommand_noData_correctlyConstructed() throws TourPlannerException {","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"YipWayne"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"YipWayne"},"content":"        Command listTour \u003d new ListTourCommand();","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"YipWayne"},"content":"        listTour.setData(dummyClientList, dummyFlightList, testTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"YipWayne"},"content":"        listTour.execute();","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"YipWayne"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"YipWayne"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"YipWayne"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"YipWayne"},"content":"        assertEquals(NO_DATA_OUTPUT, actualString);","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"YipWayne":60,"bobowoo2468":6}},{"path":"src/test/java/seedu/duke/commands/tours/SortTourCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke.commands.tours;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.TourPlannerException;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.ClientList;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.ClientPackageList;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.FlightList;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.Tour;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"import seedu.duke.data.TourList;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"class SortTourCommandTest {","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"    public static final String VALID_SORT_BY_PRICE_FILTER \u003d \"/p\";","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"    private static final String VALID_SORT_BY_NAME_FILTER \u003d \"/n\";","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"    private static final String VALID_SORT_BY_ID_FILTER \u003d \"/id\";","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"    private static final String INVALID_FILTER \u003d \"/i\";","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"    private static final String EMPTY_FILTER \u003d \"\";","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"    public static final String ID_ORDER_TWO \u003d \"JPN\";","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"    public static final String ID_ORDER_THREE \u003d \"KOR\";","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"    public static final String ID_ORDER_ONE \u003d \"AUS\";","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"    public static final String NAME_ORDER_ONE \u003d \"Australia Romantic Tour\";","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"    public static final String NAME_ORDER_TWO \u003d \"Japan Basic Tour\";","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"    public static final String NAME_ORDER_THREE \u003d \"Korea Cultural Tour\";","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"    public static final String PRICE_ORDER_ONE \u003d \"1500.00\";","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"    public static final String PRICE_ORDER_THREE \u003d \"3000.00\";","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"    public static final String PRICE_ORDER_TWO \u003d \"1800.00\";","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"    PrintStream previousConsole \u003d System.out;","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"    ByteArrayOutputStream newConsole \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"    TourList testTourList \u003d new TourList();","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"    ClientList dummyClientList \u003d new ClientList();","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"    FlightList dummyFlightList \u003d new FlightList();","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"    ClientPackageList dummyPackageList \u003d new ClientPackageList();","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"    Ui testUi \u003d new Ui();","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"bobowoo2468"},"content":"    void initialiseTourListForTesting() {","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"bobowoo2468"},"content":"        Tour jpn \u003d new Tour(new String[]{ID_ORDER_TWO, NAME_ORDER_TWO, PRICE_ORDER_ONE});","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"bobowoo2468"},"content":"        Tour kor \u003d new Tour(new String[]{ID_ORDER_THREE, NAME_ORDER_THREE, PRICE_ORDER_THREE});","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"bobowoo2468"},"content":"        Tour aus \u003d new Tour(new String[]{ID_ORDER_ONE, NAME_ORDER_ONE, PRICE_ORDER_TWO});","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"        testTourList.add(jpn);","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"bobowoo2468"},"content":"        testTourList.add(kor);","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"bobowoo2468"},"content":"        testTourList.add(aus);","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"bobowoo2468"},"content":"    Float parseFloat(String value) {","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"bobowoo2468"},"content":"        return Float.parseFloat(value);","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"bobowoo2468"},"content":"    void sortTourCommand_validFilterByPrice_correctlySortedPriceAscending() throws TourPlannerException {","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"bobowoo2468"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"bobowoo2468"},"content":"        initialiseTourListForTesting();","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"bobowoo2468"},"content":"        Command testSortTourCommand \u003d new SortTourCommand(VALID_SORT_BY_PRICE_FILTER);","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"bobowoo2468"},"content":"        testSortTourCommand.setData(dummyClientList, dummyFlightList, testTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"bobowoo2468"},"content":"        testSortTourCommand.execute();","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"bobowoo2468"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"bobowoo2468"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"bobowoo2468"},"content":"        testTourList.initTempArray();","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"bobowoo2468"},"content":"        String expectedString \u003d Ui.SORT_TOUR_PRICE_MESSAGE + \"\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"bobowoo2468"},"content":"                + \"1. \" + testTourList.getTourByPrice(parseFloat(PRICE_ORDER_ONE)) + \"\\n\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"bobowoo2468"},"content":"                + \"2. \" + testTourList.getTourByPrice(parseFloat(PRICE_ORDER_TWO)) + \"\\n\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"bobowoo2468"},"content":"                + \"3. \" + testTourList.getTourByPrice(parseFloat(PRICE_ORDER_THREE));","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"bobowoo2468"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(expectedString, actualString);","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"bobowoo2468"},"content":"    void sortTourCommand_validFilterById_correctlySortedIdAscending() throws TourPlannerException {","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"bobowoo2468"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-30"},{"lineNumber":85,"author":{"gitId":"bobowoo2468"},"content":"        initialiseTourListForTesting();","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"bobowoo2468"},"content":"        Command testSortTourCommand \u003d new SortTourCommand(VALID_SORT_BY_ID_FILTER);","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"bobowoo2468"},"content":"        testSortTourCommand.setData(dummyClientList, dummyFlightList, testTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-10-30"},{"lineNumber":89,"author":{"gitId":"bobowoo2468"},"content":"        testSortTourCommand.execute();","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"bobowoo2468"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"bobowoo2468"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"bobowoo2468"},"content":"        testTourList.initTempArray();","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"bobowoo2468"},"content":"        String expectedString \u003d Ui.SORT_TOUR_ID_MESSAGE + \"\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"bobowoo2468"},"content":"                + \"1. \" + testTourList.getTourById(ID_ORDER_ONE) + \"\\n\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"bobowoo2468"},"content":"                + \"2. \" + testTourList.getTourById(ID_ORDER_TWO) + \"\\n\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"bobowoo2468"},"content":"                + \"3. \" + testTourList.getTourById(ID_ORDER_THREE);","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"bobowoo2468"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(expectedString, actualString);","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":104,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"bobowoo2468"},"content":"    void sortTourCommand_validFilterByName_correctlySortedNameAscending() throws TourPlannerException {","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"bobowoo2468"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"bobowoo2468"},"content":"        initialiseTourListForTesting();","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"bobowoo2468"},"content":"        Command testSortTourCommand \u003d new SortTourCommand(VALID_SORT_BY_NAME_FILTER);","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"bobowoo2468"},"content":"        testSortTourCommand.setData(dummyClientList, dummyFlightList, testTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"bobowoo2468"},"content":"        testSortTourCommand.execute();","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"bobowoo2468"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-11-07"},{"lineNumber":114,"author":{"gitId":"bobowoo2468"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-11-07"},{"lineNumber":115,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":116,"author":{"gitId":"bobowoo2468"},"content":"        testTourList.initTempArray();","lastModifiedDate":"2021-11-07"},{"lineNumber":117,"author":{"gitId":"bobowoo2468"},"content":"        String expectedString \u003d Ui.SORT_TOUR_NAME_MESSAGE + \"\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":118,"author":{"gitId":"bobowoo2468"},"content":"                + \"1. \" + testTourList.getTourByName(NAME_ORDER_ONE) + \"\\n\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":119,"author":{"gitId":"bobowoo2468"},"content":"                + \"2. \" + testTourList.getTourByName(NAME_ORDER_TWO) + \"\\n\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":120,"author":{"gitId":"bobowoo2468"},"content":"                + \"3. \" + testTourList.getTourByName(NAME_ORDER_THREE);","lastModifiedDate":"2021-11-07"},{"lineNumber":121,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":122,"author":{"gitId":"bobowoo2468"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-11-07"},{"lineNumber":123,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(expectedString, actualString);","lastModifiedDate":"2021-11-07"},{"lineNumber":124,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":125,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":126,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":127,"author":{"gitId":"bobowoo2468"},"content":"    void sortTourCommand_invalidFilter_throwException() throws TourPlannerException {","lastModifiedDate":"2021-10-30"},{"lineNumber":128,"author":{"gitId":"bobowoo2468"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-30"},{"lineNumber":129,"author":{"gitId":"bobowoo2468"},"content":"        initialiseTourListForTesting();","lastModifiedDate":"2021-10-30"},{"lineNumber":130,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":131,"author":{"gitId":"bobowoo2468"},"content":"        Command testSortTourCommand \u003d new SortTourCommand(INVALID_FILTER);","lastModifiedDate":"2021-10-30"},{"lineNumber":132,"author":{"gitId":"bobowoo2468"},"content":"        testSortTourCommand.setData(dummyClientList, dummyFlightList, testTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-10-30"},{"lineNumber":133,"author":{"gitId":"bobowoo2468"},"content":"        testSortTourCommand.execute();","lastModifiedDate":"2021-10-30"},{"lineNumber":134,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":135,"author":{"gitId":"bobowoo2468"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-30"},{"lineNumber":136,"author":{"gitId":"bobowoo2468"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-30"},{"lineNumber":137,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":138,"author":{"gitId":"bobowoo2468"},"content":"        testTourList.initTempArray();","lastModifiedDate":"2021-10-30"},{"lineNumber":139,"author":{"gitId":"bobowoo2468"},"content":"        String expectedString \u003d SortTourCommand.ERROR_MISSING_FILTER;","lastModifiedDate":"2021-10-30"},{"lineNumber":140,"author":{"gitId":"bobowoo2468"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-10-30"},{"lineNumber":141,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(expectedString, actualString);","lastModifiedDate":"2021-10-30"},{"lineNumber":142,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":143,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":144,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":145,"author":{"gitId":"bobowoo2468"},"content":"    void sortTourCommand_emptyFilter_throwException() throws TourPlannerException {","lastModifiedDate":"2021-10-30"},{"lineNumber":146,"author":{"gitId":"bobowoo2468"},"content":"        System.setOut(new PrintStream(newConsole));","lastModifiedDate":"2021-10-30"},{"lineNumber":147,"author":{"gitId":"bobowoo2468"},"content":"        initialiseTourListForTesting();","lastModifiedDate":"2021-10-30"},{"lineNumber":148,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":149,"author":{"gitId":"bobowoo2468"},"content":"        Command testSortTourCommand \u003d new SortTourCommand(EMPTY_FILTER);","lastModifiedDate":"2021-10-30"},{"lineNumber":150,"author":{"gitId":"bobowoo2468"},"content":"        testSortTourCommand.setData(dummyClientList, dummyFlightList, testTourList, dummyPackageList, testUi);","lastModifiedDate":"2021-10-30"},{"lineNumber":151,"author":{"gitId":"bobowoo2468"},"content":"        testSortTourCommand.execute();","lastModifiedDate":"2021-10-30"},{"lineNumber":152,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":153,"author":{"gitId":"bobowoo2468"},"content":"        previousConsole.println(newConsole.toString());","lastModifiedDate":"2021-10-30"},{"lineNumber":154,"author":{"gitId":"bobowoo2468"},"content":"        System.setOut(previousConsole);","lastModifiedDate":"2021-10-30"},{"lineNumber":155,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":156,"author":{"gitId":"bobowoo2468"},"content":"        testTourList.initTempArray();","lastModifiedDate":"2021-10-30"},{"lineNumber":157,"author":{"gitId":"bobowoo2468"},"content":"        String expectedString \u003d SortTourCommand.ERROR_MISSING_FILTER;","lastModifiedDate":"2021-10-30"},{"lineNumber":158,"author":{"gitId":"bobowoo2468"},"content":"        String actualString \u003d newConsole.toString().trim().replace(\"\\r\\n\", \"\\n\");","lastModifiedDate":"2021-10-30"},{"lineNumber":159,"author":{"gitId":"bobowoo2468"},"content":"        assertEquals(expectedString, actualString);","lastModifiedDate":"2021-10-30"},{"lineNumber":160,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":161,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":162,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"bobowoo2468":162}}]
