[{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Woo Bo Tuan | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yip Wayne | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Wong Tze Shan Samantha | [Github](https://github.com/swongts) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"Demonshaha"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Zhou Chengxu | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Demonshaha":2,"-":4,"bobowoo2468":2,"swongts":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"original source as well}","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"### Implementation of add feature","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"The add feature is facilitated mainly by `Parser`, and returns an `AddCommand` object. When `AddCommand` is executed,","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"the values corresponding to their fields are added.","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"After receiving the command from the user by `readCommand` of `Ui`, the command is parsed by `Parser`. The `Parser`","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"first determines the command type by separating the command from the subsequent arguments. After determining the","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"command, `Parser` executes the specific methods to sense-make the arguments, in response to the specific command.","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"Here are sample add command inputs that can be parsed.","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"Example add commands:","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"* `add -c NAME /cn 91234567`","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"* `add -t JPN /n Hokkaido-A /p 1500`","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"* `add -f SQ-JPN /t JPN /f SG dt 20-10-2021 18:00 /df 21-10-2021 03:00`","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"* `add -p ID /c NAME /t JPN /f SQ-JPN`","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"Given below is an example scenario, outlining how the add mechanism behaves at each step.","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"**Step 1.** `Parser` first identifies the identifier for add, namely `-c` (add client), `-t` (add tour), `-f` (add","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"flight), `-p` (add package), by splitting the identifier and the rest of the string, separated by white space.","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"-t JPN /n Hokkaido-A /p 1500 --\u003e -t \u003c\u003csplit\u003e\u003e JPN /n Hokkaido-A /p 1500 --\u003e [-t, JPN /n Hokkaido-A /p 1500]","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"**Step 2.** Next, `Parser` checks if all prefixes e.g.  `/p, /f` are present.","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"**Step 3.** To sort the values for addition, the prefixes and their corresponding indexes are stored as key-value pairs","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"into a TreeMap. A TreeMap helps to sort the pairs by the natural ordering of the keys.","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"extract(JPN /n Hokkaido-A /p 1500) --\u003e ^JPN ^/n Hokkaido-A ^/p 1500 --\u003e [(0, null), (4, /n), (18, /p)] (sorted)","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"**Step 4.** The prefix and its index will facilitate splitting the string into substrings, containing both the prefix","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"bobowoo2468"},"content":"and the value corresponding to the prefix.","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"bobowoo2468"},"content":"obtainSubstring(JPN /n Hokkaido-A /p 1500, indexes) --\u003e \u003c\u003csplit\u003e\u003eJPN \u003c\u003csplit\u003e\u003e/n Hokkaido-A \u003c\u003csplit\u003e\u003e/p 1500 ","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"--\u003e [JPN, /n Hokkaido-A, /p 1500] ","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"bobowoo2468"},"content":"**Step 5.** Given the prefix, the array index that the value will be inserted into is predetermined.","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"bobowoo2468"},"content":"**Step 6.** The value is extracted from the substring by removing the prefix, and inserted into the array.","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"bobowoo2468"},"content":"extractValue(/n Hokkaido-A) --\u003e Hokkaido-A ","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"bobowoo2468"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"bobowoo2468"},"content":"**Step 7.** Depending on the identifier, a corresponding object is initialised.","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"bobowoo2468"},"content":"* `-c : Client`","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"bobowoo2468"},"content":"* `-t : Tour`","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"bobowoo2468"},"content":"* `-f : Flight`","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"bobowoo2468"},"content":"* `-p : Package`","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"bobowoo2468"},"content":"**Step 8.** `AddCommand(Object o)` constructor is called, passing in the created object.","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":71,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"{Describe the target user profile}","lastModifiedDate":"2020-05-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"{Describe the value proposition: what problem does it solve?}","lastModifiedDate":"2020-05-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":82,"author":{"gitId":"bobowoo2468"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"bobowoo2468"},"content":"|Priority| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":86,"author":{"gitId":"bobowoo2468"},"content":"|`* * *`|new user|see usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"bobowoo2468"},"content":"|`* * *`|user|add a new client| |","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"bobowoo2468"},"content":"|`* * *`|user|delete a new client|remove clients that cancelled their travel plans|","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"bobowoo2468"},"content":"|`* * *`|user|add a new tour package|update the tour package database|","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"bobowoo2468"},"content":"|`* * *`|user|delete a tour package|update the tour package database|","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"bobowoo2468"},"content":"|`* * *`|user|add flight timings|keep track of flights|","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"},{"lineNumber":105,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"YipWayne"},"content":"## **Find feature**","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"YipWayne"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"YipWayne"},"content":"### \u003cu\u003eProposed Implementation\u003c/u\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"YipWayne"},"content":"The ```find``` feature is to be used to query for a particular client or tour, providing extensive information about it. It is facilitated by the ```parse``` function in the ```Parser``` class, which determines which type of Object (```Client``` or ```Tour```) is to be parsed and which command to be executed. It is implemented by following operations:","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"YipWayne"},"content":"* ```FindClientCommand(String name)```","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"YipWayne"},"content":"* ```FindTourCommand(String code)```","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"YipWayne"},"content":"These commands extend from the Command class.","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"YipWayne"},"content":"Given below is an example usage scenario and how the find feature behaves at each step, when trying to find a particular client or tour.","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"YipWayne"},"content":"### \u003cu\u003eFinding a particular client\u003c/u\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"YipWayne"},"content":"**Step 1**: Assume that in previous sessions, commands were executed to add clients, tours, flights and packages to the ```ClientList```, ```TourList```, ```FlightList``` and ```PackageList``` respectively. In particular, these specific commands were exceuted.","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"YipWayne"},"content":"* ```add -c Bo Tuan /cn 12345678```","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"YipWayne"},"content":"* ```add -t JPN /n Japan Tour /p 1500 ```","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"YipWayne"},"content":"* ```add -f SQ-JPN /t JPN /f SG /dt 20-10-2021 18:00 /df 21-10-2021 02:00```","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"YipWayne"},"content":"* ```add -p 0001 /c Bo Tuan /t JPN /f SQ-JPN ```","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"YipWayne"},"content":"**Step 2**: The user executes ```find -c Bo Tuan``` to query if a client named Bo Tuan exists in the ClientList. The ```parse``` function in the ```Parser``` class takes the command, and the first word in it (```find```) means that the ```parseFind()``` is to be called to determine which type of Object is to be queried for. The second word (```-c```) means that a the ```FindClientCommand()``` is executed with the parameter ```Bo Tuan```","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"YipWayne"},"content":"**Step 3**: The ```FindClientCommand``` iterates through each ```Client``` object in the ```ClientList```. For every ```Client```, the ```getName()``` function is called to retrieve the name attribute of the Client. If the name attribute is equals to ```Bo Tuan```, the ```Client``` object is printed onto the console terminal.","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"YipWayne"},"content":"\u003c/br\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"YipWayne"},"content":"**Step 4**: In addition, the ```FindClientCommand``` iterates through each ```Package``` object in the ```PackageList```. For every ```Package```, the ```getClient()``` function is called to retrieve the client attribute of the ```Package```. If the client attribute is equals to ```Bo Tuan```, the ```Package``` object is printed onto the console terminal.","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"YipWayne"},"content":"The following activity diagram summarizes the following steps.","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"YipWayne"},"content":"![image](yuemel.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"YipWayne"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"YipWayne"},"content":"### \u003cu\u003eDesign Considerations\u003c/u\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"YipWayne"},"content":"* Alternative: only iterate through the ```Package``` List.","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"YipWayne"},"content":"   * Pros: fast querying time.","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"YipWayne"},"content":"   * Cons: If the client has not subscribed to a package, none of their information can be accessed, including their contact number.","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":160,"author":{"gitId":"swongts"},"content":"### \u003cu\u003eListing clients, tours and flights\u003c/u\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"swongts"},"content":"It implements these following types of list commands:","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"swongts"},"content":"* `list -c`: Lists all existing clients and their contact numbers","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"swongts"},"content":"* `list -t`: Lists all existing tours","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"swongts"},"content":"* `list -p`: Lists all clients and their corresponding tours and flights","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"swongts"},"content":"Given below is an example usage of command `list -c`:","lastModifiedDate":"2021-10-22"},{"lineNumber":168,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":169,"author":{"gitId":"swongts"},"content":"**Step 1**: After adding a few clients to the database, user inputs `list -c`. This command is passed to `parse()` method in the `Parser` class.","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":171,"author":{"gitId":"swongts"},"content":"**Step 2**: `parse()` identifies the command type `ListCCommand` based on the user input and returns it.","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"swongts"},"content":"**Step 3**: Then, `execute()` method in `ListCCommand` is called, where it loops through the current `clientList` and prints out all client names and their details.","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"swongts"},"content":"Depending on the type of list command being called, these command types will be returned:","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"swongts"},"content":"* `list -c`: `ListCCommand`","lastModifiedDate":"2021-10-22"},{"lineNumber":177,"author":{"gitId":"swongts"},"content":"* `list -t`: `ListTCommand`","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"swongts"},"content":"* `list -p`: `ListPCommand`","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"YipWayne":54,"-":33,"bobowoo2468":71,"swongts":20}},{"path":"src/main/java/FindTest.puml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"YipWayne"},"content":"participant \":FindClientCommand\" as FCC","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"YipWayne"},"content":"participant \":ClientList\" as ClientList","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"participant \":PackageList\" as PackageList","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"YipWayne"},"content":"-\u003e Parser: execute \"find -c Bo Tuan\"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"YipWayne"},"content":"activate Parser","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"YipWayne"},"content":"Parser -\u003e Parser : parseFind(\"-c Bo Tuan\")","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"create FCC","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"YipWayne"},"content":"Parser -\u003e FCC","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"activate FCC","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"YipWayne"},"content":"FCC -\u003e ClientList : findClient(\"Bo Tuan\")","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"YipWayne"},"content":"activate ClientList","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"YipWayne"},"content":"ClientList --\u003e FCC : name and contact number","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"YipWayne"},"content":"deactivate ClientList","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"YipWayne"},"content":"FCC -\u003e PackageList : findPackage(\"Bo Tuan\")","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"YipWayne"},"content":"activate PackageList","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"YipWayne"},"content":"PackageList --\u003e FCC : packages purchased under name","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"YipWayne"},"content":"deactivate PackageList","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"YipWayne"},"content":"FCC --\u003e Parser","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"YipWayne"},"content":"deactivate FCC","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"YipWayne"},"content":"\u003c-- Parser","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"YipWayne"},"content":"destroy FCC","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"YipWayne"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"YipWayne":32}},{"path":"src/main/java/seedu/duke/AddClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":" * Adds a client into the database.","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"public class AddClientCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"    private final Client client;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"     * Class constructor for AddCommand.","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"     * @param client client to be added","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"    public AddClientCommand(Client client) {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"        this.client \u003d client;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"     * Returns the client object that was added.","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"     * @return the added client object","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"    public Client getClient() {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"        return client;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"     * Executes the addition of client to client list.","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"    public void execute() {","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"        clients.add(client, ui);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"bobowoo2468":30,"swongts":5}},{"path":"src/main/java/seedu/duke/AddFlightCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":" * Adds a flight into the database.","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"public class AddFlightCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"    private final Flight flight;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"     * Class constructor for AddCommand.","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"     * @param flight client to be added","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"    public AddFlightCommand(Flight flight) {","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"        this.flight \u003d flight;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"     * Returns the flight object that was added.","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"     * @return the added flight object","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"    public Flight getFlight() {","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"        return flight;","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"     * Executes the addition of flight to flight list.","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"    public void execute() {","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"        flights.add(flight, ui);","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"        ui.showAddFlight(flight);","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"bobowoo2468":34,"swongts":1}},{"path":"src/main/java/seedu/duke/AddTourCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"public class AddTourCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"    private final Tour tour;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"    public AddTourCommand(Tour tour) {","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"        this.tour \u003d tour;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"    public void execute() {","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"        tours.add(tour);","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"        ui.showAddTour(tour);","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"bobowoo2468":14,"swongts":1}},{"path":"src/main/java/seedu/duke/ByeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":" * Acknowledge that the user is exiting the application.","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"    public void execute() {","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"        ui.showBye();","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"     * Sets the exit condition to true since ByeCommand is initialised.","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"     * @return true","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"        return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"bobowoo2468":22,"swongts":1}},{"path":"src/main/java/seedu/duke/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":" * Clears the entire client list.","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"    public void execute() {","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"        try {","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"            clients.clearAllClients();","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"            assert clients.getClientCount() \u003d\u003d 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"            ui.showClear();","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"        } catch (TourPlannerException e) {","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"            ui.show(e.getMessage());","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"YipWayne":6,"bobowoo2468":5,"swongts":7}},{"path":"src/main/java/seedu/duke/Client.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Demonshaha"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":" * Represents a client under the Tour agency.","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"Demonshaha"},"content":"public class Client {","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Demonshaha"},"content":"    private final String name;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Demonshaha"},"content":"    private final String contactNum;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"    private final String email;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"     * Client object constructor, that inputs the client\u0027s information obtained from Add command.","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"     * @param values the array of values of the client, ordered in this manner:","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"     *               name, contact number, flight, accommodation, tour","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"Demonshaha"},"content":"    public Client(String[] values) {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Demonshaha"},"content":"        name \u003d values[0];","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Demonshaha"},"content":"        contactNum \u003d values[1];","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"        email \u003d values[2];","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"Demonshaha"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for name value in Client object.","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"     * @return client\u0027s name","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"    public String getName() {","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"        return name;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for contact number value in Client object.","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"     * @return client\u0027s contact number","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"    public String getContactNum() {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"        return contactNum;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"     * Formats client\u0027s information as a string that is viewable as an indexed list item.","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"     * @return the formatted string containing client\u0027s information","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"Demonshaha"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"Demonshaha"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"Demonshaha"},"content":"        return \"Client\u0027s name: \" + name + System.lineSeparator()","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"Demonshaha"},"content":"                + \"Client\u0027s contactNum: \" + contactNum + System.lineSeparator()","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"                + \"Client\u0027s email: \" + email;","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"Demonshaha"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"Demonshaha"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"YipWayne":1,"Demonshaha":17,"bobowoo2468":27,"swongts":8}},{"path":"src/main/java/seedu/duke/ClientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Demonshaha"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Demonshaha"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":" * List of clients.","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"Demonshaha"},"content":"public class ClientList {","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Demonshaha"},"content":"    private static ArrayList\u003cClient\u003e clients;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Demonshaha"},"content":"    private static int clientCount \u003d 0;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"     * Class constructor for ClientList.","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"Demonshaha"},"content":"    public ClientList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Demonshaha"},"content":"        clients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Demonshaha"},"content":"        clientCount \u003d 0;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Demonshaha"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"     * Main method for adding a client.","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"     * @param client the client to-be-added","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"     * @param ui     user interface of TourPlanner","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"    public void add(Client client, Ui ui) {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Demonshaha"},"content":"        clients.add(client);","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"        ui.showAdd(client);","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Demonshaha"},"content":"        clientCount++;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Demonshaha"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for number of clients in the client list.","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"     * @return the number of clients in client list.","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"YipWayne"},"content":"    public int getClientCount() {","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"YipWayne"},"content":"        return clientCount;","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"     * Getter for client object in the client list, corresponding to the index given.","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"     * @param index the index of the specific client in the client list","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"     * @return the client object corresponding to the index","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"YipWayne"},"content":"    public Client getClient(int index) {","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"YipWayne"},"content":"        return clients.get(index);","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"bobowoo2468"},"content":"     * Main method for clearing the client list.","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"swongts"},"content":"    public void clearAllClients() throws TourPlannerException {","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"swongts"},"content":"        if (clientCount \u003d\u003d 0) {","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"swongts"},"content":"            throw new TourPlannerException(\"Your client list is currently empty.\\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"swongts"},"content":"                    + \"Please first add clients to clear.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"YipWayne"},"content":"        clients.clear();","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"YipWayne"},"content":"        clientCount \u003d 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"bobowoo2468"},"content":"     * Main method for deleting a client.","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"bobowoo2468"},"content":"     * @param clientIndex the index of the specific client to be deleted from the list.","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"bobowoo2468"},"content":"     * @param ui          user interface of TourPlanner","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"swongts"},"content":"    public void cut(int clientIndex, Ui ui) {","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"swongts"},"content":"        Client client \u003d clients.get(clientIndex);","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"swongts"},"content":"        ui.showCut(client);","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"swongts"},"content":"        clients.remove(clientIndex);","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"swongts"},"content":"        clientCount--;","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"Demonshaha"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"YipWayne":12,"Demonshaha":18,"bobowoo2468":34,"swongts":11}},{"path":"src/main/java/seedu/duke/ClientPackage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"public class ClientPackage {","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"YipWayne"},"content":"    private static Client client;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"YipWayne"},"content":"    private static Tour tour;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"    private static Flight flight;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"    public ClientPackage(Client client, Tour tour, Flight flight) {","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"YipWayne"},"content":"        this.client \u003d client;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"YipWayne"},"content":"        this.tour \u003d tour;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"YipWayne"},"content":"        this.flight \u003d flight;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"YipWayne":11,"swongts":2}},{"path":"src/main/java/seedu/duke/ClientPackageList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"public class ClientPackageList {","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"    private static ArrayList\u003cClientPackage\u003e packages;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":"    private static int packageCount \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"    public ClientPackageList() {","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"YipWayne"},"content":"        packages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"YipWayne"},"content":"        packageCount \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"    public void add(ClientPackage pack) {","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"        packages.add(pack);","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"        packageCount++;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"YipWayne":15,"swongts":4}},{"path":"src/main/java/seedu/duke/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":" * Abstract command that outlines the \u0027execute\u0027 and \u0027isExit\u0027 method.","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"    protected ClientList clients;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"    protected FlightList flights;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"    protected TourList tours;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"    protected ClientPackageList packages;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"    protected Ui ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"     * Executes the specific command depending on the command constructed.","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"    public abstract void execute();","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"    public void setData(ClientList clients, FlightList flights, TourList tours, ClientPackageList packages, Ui ui) {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"        this.clients \u003d clients;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"        this.flights \u003d flights;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"        this.tours \u003d tours;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"        this.packages \u003d packages;","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"     * Function that controls the exit condition of the loop.","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"     * @return the exit condition from the loop","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"        return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"YipWayne":1,"bobowoo2468":19,"swongts":14}},{"path":"src/main/java/seedu/duke/CutCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":" * Deletes a client from the client list.","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"public class CutCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"    private final int clientIndex;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"     * Class constructor for CutCommand.","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"     * @param clientIndex index of to-be-deleted client in the client list","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"    public CutCommand(int clientIndex) {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"        this.clientIndex \u003d clientIndex;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"     * Executes the deletion of a specific client from client list, corresponding to his/her index in the list.","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"    public void execute() {","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"YipWayne"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"YipWayne"},"content":"            int newClientCount \u003d clients.getClientCount() - 1;","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"            clients.cut(clientIndex, ui);","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"YipWayne"},"content":"            assert newClientCount \u003d\u003d clients.getClientCount();","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"YipWayne"},"content":"            assert newClientCount \u003e\u003d 0;","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"YipWayne"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"YipWayne"},"content":"            System.out.println(\"INVALID: Index out of bounds\");","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"YipWayne"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"YipWayne":9,"bobowoo2468":12,"swongts":12}},{"path":"src/main/java/seedu/duke/Flight.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"public class Flight {","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"YipWayne"},"content":"    private final String id;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"YipWayne"},"content":"    private final String toDestination;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"    private final String fromDestination;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":"    private final String toDate;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"YipWayne"},"content":"    private final String fromDate;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"YipWayne"},"content":"    public Flight(String[] values) {","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"YipWayne"},"content":"        id \u003d values[0];","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"        toDestination \u003d values[1];","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"        fromDestination \u003d values[2];","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"YipWayne"},"content":"        toDate \u003d values[3];","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"        fromDate \u003d values[4];","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"YipWayne"},"content":"    public String getId() {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"YipWayne"},"content":"        return id;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"YipWayne"},"content":"    public String getToDestination() {","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"YipWayne"},"content":"        return toDestination;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"YipWayne"},"content":"    public String getFromDestination() {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"YipWayne"},"content":"        return fromDestination;","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"YipWayne"},"content":"    public String getToDate() {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"YipWayne"},"content":"        return toDate;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"YipWayne"},"content":"    public String getFromDate() {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"YipWayne"},"content":"        return fromDate;","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"    public String toString() {","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"        return \"Flight\u0027s id: \" + id + System.lineSeparator()","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"                + \"Flight\u0027s to destination: \" + toDestination + System.lineSeparator()","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"                + \"Client\u0027s from destination: \" + fromDestination + System.lineSeparator()","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"                + \"Client\u0027s to date: \" + toDate + System.lineSeparator()","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"                + \"Client\u0027s from date: \" + fromDate;","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"YipWayne":37,"bobowoo2468":10}},{"path":"src/main/java/seedu/duke/FlightList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"YipWayne"},"content":"public class FlightList {","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"    private static ArrayList\u003cFlight\u003e flights;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":"    private static int flightCount \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"YipWayne"},"content":"    public FlightList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"YipWayne"},"content":"        flights \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"YipWayne"},"content":"        flightCount \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"    public void add(Flight flight, Ui ui) {","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"        flights.add(flight);","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"        flightCount++;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"YipWayne":18,"bobowoo2468":1}},{"path":"src/main/java/seedu/duke/ListClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"public class ListClientCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"    public void execute() {","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"swongts":7}},{"path":"src/main/java/seedu/duke/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":" * List all clients and their information in a viewable indexed manner.","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"     * Executes listing of all clients in the existing client list.","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"     * If the list is empty, breaks out from execute early with an error message.","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"    public void execute() {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"        int count \u003d clients.getClientCount();","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"YipWayne"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"            System.out.println(\"I\u0027m sorry, There seems to be no clients.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"            return;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"YipWayne"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"YipWayne"},"content":"        System.out.println(\"Here is a list of all your clients:\");","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"YipWayne"},"content":"        for (int i \u003d 1; i \u003c\u003d count; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"            Client currClient \u003d clients.getClient(i - 1);","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"YipWayne"},"content":"            System.out.println(i + \". \" + currClient);","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"YipWayne"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"YipWayne":15,"bobowoo2468":10,"swongts":1}},{"path":"src/main/java/seedu/duke/ListPackageCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"public class ListPackageCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"    public void execute() {","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"swongts":7}},{"path":"src/main/java/seedu/duke/ListTourCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"public class ListTourCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"    public void execute() {","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"swongts":7}},{"path":"src/main/java/seedu/duke/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"import java.util.*;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":" * Sense-makes the inputs given and distributes the information to other parts of the program.","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"public class Parser {","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"    private static final String CONTACT_NUMBER_PREFIX \u003d \"/cn\";","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"    private static final String FLIGHT_PREFIX \u003d \"/f\";","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"    private static final String ACCOMMS_PREFIX \u003d \"/a\";","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"    private static final String TOUR_PREFIX \u003d \"/t\";","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"    public static final String ERROR_INVALID_INPUT \u003d \"Invalid input! Please enter a valid command.\";","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"    public static final String ERROR_EXTRA_INPUT \u003d \"Extra input! Refrain from doing so.\";","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"    public static final String ERROR_INVALID_CUT_INDEX \u003d \"Invalid cut index!\";","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"    public static final String ERROR_DUPLICATE_PREFIXES \u003d \"Duplicate prefixes! Please try again.\";","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"    public static final String ERROR_MISSING_PREFIXES","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"            \u003d \"Missing prefixes! Did you miss out some fields? Please try again.\";","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"    public static final String ERROR_MISSING_NAME \u003d \"Missing client name! Please try again.\";","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"     * Parses user\u0027s input into command to execute.","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"     * @param input full user\u0027s input string","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"     * @return the command parsed from user\u0027s input","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if there are missing fields,duplicated prefixes, missing prefixes and erroneous","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"     *                              \u0027cut\u0027 index given","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"    public static Command parse(String input) throws TourPlannerException {","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"        String[] commandAndParams \u003d splitCommandString(input, \" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"        String command \u003d commandAndParams[0];","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"        String params \u003d commandAndParams[1];","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"YipWayne"},"content":"        switch (command) {","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"YipWayne"},"content":"        case \"bye\":","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"            if (!params.equals(\"\")) {","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"                throw new TourPlannerException(ERROR_EXTRA_INPUT);","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"            }","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"YipWayne"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"        case \"add\":","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"            return parseAdd(params);","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"YipWayne"},"content":"        case \"list\":","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"swongts"},"content":"            if (!params.equals(\"\")) {","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"                throw new TourPlannerException(ERROR_EXTRA_INPUT);","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"swongts"},"content":"            }","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"YipWayne"},"content":"            return new ListCommand();","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"YipWayne"},"content":"        case \"clear\":","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"swongts"},"content":"            if (!params.equals(\"\")) {","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"bobowoo2468"},"content":"                throw new TourPlannerException(ERROR_EXTRA_INPUT);","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"swongts"},"content":"            }","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"YipWayne"},"content":"            return new ClearCommand();","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"swongts"},"content":"        case \"cut\":","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"YipWayne"},"content":"            try {","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"swongts"},"content":"                return parseCut(params);","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"YipWayne"},"content":"            } catch (NullPointerException | NumberFormatException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"bobowoo2468"},"content":"                throw new TourPlannerException(ERROR_INVALID_CUT_INDEX);","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"YipWayne"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"YipWayne"},"content":"        default:","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"bobowoo2468"},"content":"            throw new TourPlannerException(ERROR_INVALID_INPUT);","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"YipWayne"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"bobowoo2468"},"content":"     * Separates command word and arguments.","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"bobowoo2468"},"content":"     * @param input     full user\u0027s input string","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"bobowoo2468"},"content":"     * @param separator separator between command and argument/params strings","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"bobowoo2468"},"content":"     * @return the array containing command and argument/params strings","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"bobowoo2468"},"content":"    private static String[] splitCommandString(String input, String separator) {","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"swongts"},"content":"        String[] split \u003d input.trim().split(separator, 2);","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"swongts"},"content":"        return split.length \u003d\u003d 2 ? split : new String[]{split[0], \"\"};","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"bobowoo2468"},"content":"     * Extracts the indexes for prefixes and put into a map that sorts the list by the natural ordering of the keys.","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"bobowoo2468"},"content":"     * @param argString full user\u0027s argument string","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"bobowoo2468"},"content":"     * @return the treemap with prefix index as the key and the corresponding prefix as the value","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if there are missing fields or missing prefixes","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"bobowoo2468"},"content":"    private static TreeMap\u003cInteger, String\u003e extractPrefixIndexes(String argString, String identifier)","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"bobowoo2468"},"content":"            throws TourPlannerException {","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"bobowoo2468"},"content":"        List\u003cString\u003e prefixes \u003d null;","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"bobowoo2468"},"content":"        int repeatPrefixChecker \u003d 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"bobowoo2468"},"content":"        switch (identifier) {","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"bobowoo2468"},"content":"        case \"-c\":","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"bobowoo2468"},"content":"            prefixes \u003d Arrays.asList(\"/cn\", \"/m\");","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"bobowoo2468"},"content":"            repeatPrefixChecker \u003d 3;","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"bobowoo2468"},"content":"        case \"-t\":","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"bobowoo2468"},"content":"            prefixes \u003d Arrays.asList(\"/n\", \"/p\");","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"bobowoo2468"},"content":"            repeatPrefixChecker \u003d 3;","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"bobowoo2468"},"content":"        case \"-f\":","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"bobowoo2468"},"content":"            prefixes \u003d Arrays.asList(\"/t\", \"/f\", \"/dt\", \"/df\");","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"bobowoo2468"},"content":"            repeatPrefixChecker \u003d 5;","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"bobowoo2468"},"content":"        case \"-p\":","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"bobowoo2468"},"content":"            prefixes \u003d Arrays.asList(\"/c\", \"/t\", \"/f\");","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"bobowoo2468"},"content":"            repeatPrefixChecker \u003d 4;","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"bobowoo2468"},"content":"        default:","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"bobowoo2468"},"content":"//        if (!containAllPrefixes(argString, identifier)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"bobowoo2468"},"content":"//            throw new TourPlannerException(ERROR_MISSING_PREFIXES);","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"bobowoo2468"},"content":"//        }","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"bobowoo2468"},"content":"        TreeMap\u003cInteger, String\u003e prefixIndexes \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"bobowoo2468"},"content":"        prefixIndexes.put(0, \"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"bobowoo2468"},"content":"        prefixes.forEach((prefix) -\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"bobowoo2468"},"content":"            int prefixIndex \u003d argString.indexOf(prefix);","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"bobowoo2468"},"content":"            prefixIndexes.put(prefixIndex, prefix);","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"bobowoo2468"},"content":"        });","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"bobowoo2468"},"content":"        boolean hasUniquePrefixes \u003d prefixIndexes.size() \u003d\u003d repeatPrefixChecker;","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"bobowoo2468"},"content":"        if (!hasUniquePrefixes) {","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"bobowoo2468"},"content":"            throw new TourPlannerException(ERROR_MISSING_NAME);","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"bobowoo2468"},"content":"        return prefixIndexes;","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":129,"author":{"gitId":"bobowoo2468"},"content":"     * Extract values into an array in a sorted manner to prepare for execution of add.","lastModifiedDate":"2021-10-14"},{"lineNumber":130,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":131,"author":{"gitId":"bobowoo2468"},"content":"     * @param prefixIndexes the treemap with prefix index as the key and the corresponding prefix as the value","lastModifiedDate":"2021-10-14"},{"lineNumber":132,"author":{"gitId":"bobowoo2468"},"content":"     * @param argString     full user\u0027s argument string","lastModifiedDate":"2021-10-14"},{"lineNumber":133,"author":{"gitId":"bobowoo2468"},"content":"     * @return the array containing client\u0027s information in a sorted fashion","lastModifiedDate":"2021-10-14"},{"lineNumber":134,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if there are duplicate prefixes found","lastModifiedDate":"2021-10-14"},{"lineNumber":135,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":136,"author":{"gitId":"bobowoo2468"},"content":"    private static ArrayList\u003cString\u003e extractValuesIntoArray(TreeMap\u003cInteger, String\u003e prefixIndexes, String argString, String identifier)","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"bobowoo2468"},"content":"            throws TourPlannerException {","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"bobowoo2468"},"content":"        ArrayList\u003cString\u003e extractedValues \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":139,"author":{"gitId":"bobowoo2468"},"content":"        ArrayList\u003cInteger\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"bobowoo2468"},"content":"        ArrayList\u003cString\u003e prefixes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"bobowoo2468"},"content":"        for (Map.Entry\u003cInteger, String\u003e prefixIndex : prefixIndexes.entrySet()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"bobowoo2468"},"content":"            indexes.add(prefixIndex.getKey());","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"bobowoo2468"},"content":"            prefixes.add(prefixIndex.getValue());","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"bobowoo2468"},"content":"        for (int i \u003d 0; i \u003c indexes.size() - 1; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"bobowoo2468"},"content":"            int previousIndex \u003d indexes.get(i);","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"bobowoo2468"},"content":"            int nextIndex \u003d indexes.get(i + 1);","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"bobowoo2468"},"content":"            String prefix \u003d prefixes.get(i);","lastModifiedDate":"2021-10-13"},{"lineNumber":150,"author":{"gitId":"bobowoo2468"},"content":"            String value \u003d extractValue(argString, prefix, previousIndex, nextIndex);","lastModifiedDate":"2021-10-13"},{"lineNumber":151,"author":{"gitId":"bobowoo2468"},"content":"//            int inputIndex \u003d obtainArrayIndex(prefix);","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"bobowoo2468"},"content":"//            extractedValues[inputIndex] \u003d value;","lastModifiedDate":"2021-10-22"},{"lineNumber":153,"author":{"gitId":"bobowoo2468"},"content":"            extractedValues.add(value);","lastModifiedDate":"2021-10-22"},{"lineNumber":154,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"bobowoo2468"},"content":"        String finalPrefix \u003d prefixes.get(indexes.size() - 1);","lastModifiedDate":"2021-10-22"},{"lineNumber":157,"author":{"gitId":"bobowoo2468"},"content":"        int finalIndex \u003d indexes.get(indexes.size() - 1);","lastModifiedDate":"2021-10-22"},{"lineNumber":158,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":159,"author":{"gitId":"bobowoo2468"},"content":"//        int inputIndex \u003d obtainArrayIndex(finalPrefix);","lastModifiedDate":"2021-10-22"},{"lineNumber":160,"author":{"gitId":"bobowoo2468"},"content":"        String value \u003d extractValue(argString, finalPrefix, finalIndex, argString.length());","lastModifiedDate":"2021-10-13"},{"lineNumber":161,"author":{"gitId":"bobowoo2468"},"content":"        extractedValues.add(value);","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"bobowoo2468"},"content":"        return extractedValues;","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":166,"author":{"gitId":"bobowoo2468"},"content":"     * Extract value from a substring of the user\u0027s argument string, according to prefix.","lastModifiedDate":"2021-10-14"},{"lineNumber":167,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":168,"author":{"gitId":"bobowoo2468"},"content":"     * @param argString  full user\u0027s argument string","lastModifiedDate":"2021-10-14"},{"lineNumber":169,"author":{"gitId":"bobowoo2468"},"content":"     * @param prefix     prefix of value to be extracted","lastModifiedDate":"2021-10-14"},{"lineNumber":170,"author":{"gitId":"bobowoo2468"},"content":"     * @param startIndex start index of substring","lastModifiedDate":"2021-10-14"},{"lineNumber":171,"author":{"gitId":"bobowoo2468"},"content":"     * @param endIndex   end index of substring","lastModifiedDate":"2021-10-14"},{"lineNumber":172,"author":{"gitId":"bobowoo2468"},"content":"     * @return value corresponding to prefix given","lastModifiedDate":"2021-10-14"},{"lineNumber":173,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if there are duplicate prefixes found","lastModifiedDate":"2021-10-14"},{"lineNumber":174,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":175,"author":{"gitId":"bobowoo2468"},"content":"    private static String extractValue(String argString, String prefix, int startIndex, int endIndex)","lastModifiedDate":"2021-10-13"},{"lineNumber":176,"author":{"gitId":"bobowoo2468"},"content":"            throws TourPlannerException {","lastModifiedDate":"2021-10-13"},{"lineNumber":177,"author":{"gitId":"bobowoo2468"},"content":"        String unformattedSubstring \u003d argString.substring(startIndex, endIndex).trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":178,"author":{"gitId":"bobowoo2468"},"content":"        String value \u003d unformattedSubstring.replaceFirst(prefix, \"\").trim();","lastModifiedDate":"2021-10-14"},{"lineNumber":179,"author":{"gitId":"bobowoo2468"},"content":"//        if (value.contains(CONTACT_NUMBER_PREFIX) || value.contains(FLIGHT_PREFIX)","lastModifiedDate":"2021-10-22"},{"lineNumber":180,"author":{"gitId":"bobowoo2468"},"content":"//                || value.contains(ACCOMMS_PREFIX) || value.contains(TOUR_PREFIX)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":181,"author":{"gitId":"bobowoo2468"},"content":"//            throw new TourPlannerException(ERROR_DUPLICATE_PREFIXES);","lastModifiedDate":"2021-10-22"},{"lineNumber":182,"author":{"gitId":"bobowoo2468"},"content":"//        }","lastModifiedDate":"2021-10-22"},{"lineNumber":183,"author":{"gitId":"bobowoo2468"},"content":"        return value;","lastModifiedDate":"2021-10-13"},{"lineNumber":184,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":185,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":187,"author":{"gitId":"bobowoo2468"},"content":"     * Obtains array index that corresponds to the prefix given.","lastModifiedDate":"2021-10-14"},{"lineNumber":188,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":189,"author":{"gitId":"bobowoo2468"},"content":"     * @param prefix prefix of value extracted","lastModifiedDate":"2021-10-14"},{"lineNumber":190,"author":{"gitId":"bobowoo2468"},"content":"     * @return array index of values according to prefix","lastModifiedDate":"2021-10-14"},{"lineNumber":191,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":192,"author":{"gitId":"bobowoo2468"},"content":"    private static int obtainArrayIndex(String prefix) {","lastModifiedDate":"2021-10-14"},{"lineNumber":193,"author":{"gitId":"bobowoo2468"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"bobowoo2468"},"content":"        switch (prefix) {","lastModifiedDate":"2021-10-08"},{"lineNumber":195,"author":{"gitId":"bobowoo2468"},"content":"        case CONTACT_NUMBER_PREFIX:","lastModifiedDate":"2021-10-13"},{"lineNumber":196,"author":{"gitId":"bobowoo2468"},"content":"            index \u003d 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-10-08"},{"lineNumber":198,"author":{"gitId":"bobowoo2468"},"content":"        case FLIGHT_PREFIX:","lastModifiedDate":"2021-10-13"},{"lineNumber":199,"author":{"gitId":"bobowoo2468"},"content":"            index \u003d 2;","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-10-08"},{"lineNumber":201,"author":{"gitId":"bobowoo2468"},"content":"        case ACCOMMS_PREFIX:","lastModifiedDate":"2021-10-13"},{"lineNumber":202,"author":{"gitId":"bobowoo2468"},"content":"            index \u003d 3;","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-10-08"},{"lineNumber":204,"author":{"gitId":"bobowoo2468"},"content":"        case TOUR_PREFIX:","lastModifiedDate":"2021-10-13"},{"lineNumber":205,"author":{"gitId":"bobowoo2468"},"content":"            index \u003d 4;","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"bobowoo2468"},"content":"        default:","lastModifiedDate":"2021-10-08"},{"lineNumber":208,"author":{"gitId":"bobowoo2468"},"content":"            break;","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":210,"author":{"gitId":"bobowoo2468"},"content":"        return index;","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":212,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":213,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":214,"author":{"gitId":"bobowoo2468"},"content":"     * Returns true if all prefixes are present in add command\u0027s argument string.","lastModifiedDate":"2021-10-14"},{"lineNumber":215,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":216,"author":{"gitId":"bobowoo2468"},"content":"     * @param argString full user\u0027s argument string","lastModifiedDate":"2021-10-14"},{"lineNumber":217,"author":{"gitId":"bobowoo2468"},"content":"     * @return true if all prefixes are present in add command\u0027s argument string","lastModifiedDate":"2021-10-14"},{"lineNumber":218,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":219,"author":{"gitId":"bobowoo2468"},"content":"//    private static boolean containAllPrefixes(String argString, String... prefixes) {","lastModifiedDate":"2021-10-22"},{"lineNumber":220,"author":{"gitId":"bobowoo2468"},"content":"//        String[] splitBySpaces \u003d argString.trim().split(\"\\\\s+\");","lastModifiedDate":"2021-10-22"},{"lineNumber":221,"author":{"gitId":"bobowoo2468"},"content":"//        for (String substring : splitBySpaces) {","lastModifiedDate":"2021-10-22"},{"lineNumber":222,"author":{"gitId":"bobowoo2468"},"content":"//            switch (substring) {","lastModifiedDate":"2021-10-22"},{"lineNumber":223,"author":{"gitId":"bobowoo2468"},"content":"//            case \"/cn\":","lastModifiedDate":"2021-10-22"},{"lineNumber":224,"author":{"gitId":"bobowoo2468"},"content":"//                containsContact \u003d true;","lastModifiedDate":"2021-10-22"},{"lineNumber":225,"author":{"gitId":"bobowoo2468"},"content":"//                break;","lastModifiedDate":"2021-10-22"},{"lineNumber":226,"author":{"gitId":"bobowoo2468"},"content":"//            case \"/n\":","lastModifiedDate":"2021-10-22"},{"lineNumber":227,"author":{"gitId":"bobowoo2468"},"content":"//                containsAccomms \u003d true;","lastModifiedDate":"2021-10-22"},{"lineNumber":228,"author":{"gitId":"bobowoo2468"},"content":"//                break;","lastModifiedDate":"2021-10-22"},{"lineNumber":229,"author":{"gitId":"bobowoo2468"},"content":"//            case \"/t\":","lastModifiedDate":"2021-10-22"},{"lineNumber":230,"author":{"gitId":"bobowoo2468"},"content":"//                containsTour \u003d true;","lastModifiedDate":"2021-10-22"},{"lineNumber":231,"author":{"gitId":"bobowoo2468"},"content":"//                break;","lastModifiedDate":"2021-10-22"},{"lineNumber":232,"author":{"gitId":"bobowoo2468"},"content":"//            case \"/f\":","lastModifiedDate":"2021-10-22"},{"lineNumber":233,"author":{"gitId":"bobowoo2468"},"content":"//                containsFlight \u003d true;","lastModifiedDate":"2021-10-22"},{"lineNumber":234,"author":{"gitId":"bobowoo2468"},"content":"//                break;","lastModifiedDate":"2021-10-22"},{"lineNumber":235,"author":{"gitId":"bobowoo2468"},"content":"//            default:","lastModifiedDate":"2021-10-22"},{"lineNumber":236,"author":{"gitId":"bobowoo2468"},"content":"//                break;","lastModifiedDate":"2021-10-22"},{"lineNumber":237,"author":{"gitId":"bobowoo2468"},"content":"//            }","lastModifiedDate":"2021-10-22"},{"lineNumber":238,"author":{"gitId":"bobowoo2468"},"content":"//        }","lastModifiedDate":"2021-10-22"},{"lineNumber":239,"author":{"gitId":"bobowoo2468"},"content":"//        return containsContact \u0026\u0026 containsFlight \u0026\u0026 containsAccomms \u0026\u0026 containsTour;","lastModifiedDate":"2021-10-22"},{"lineNumber":240,"author":{"gitId":"bobowoo2468"},"content":"//    }","lastModifiedDate":"2021-10-22"},{"lineNumber":241,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":242,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":243,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":244,"author":{"gitId":"bobowoo2468"},"content":"     * Parses arguments with respect to the cut client command.","lastModifiedDate":"2021-10-14"},{"lineNumber":245,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":246,"author":{"gitId":"bobowoo2468"},"content":"     * @param params full user\u0027s argument/params string after splitting","lastModifiedDate":"2021-10-14"},{"lineNumber":247,"author":{"gitId":"bobowoo2468"},"content":"     * @return the prepared command","lastModifiedDate":"2021-10-14"},{"lineNumber":248,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":249,"author":{"gitId":"swongts"},"content":"    private static Command parseCut(String params) {","lastModifiedDate":"2021-10-13"},{"lineNumber":250,"author":{"gitId":"YipWayne"},"content":"        int clientIndex \u003d stringToInt(params) - 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":251,"author":{"gitId":"swongts"},"content":"        return new CutCommand(clientIndex);","lastModifiedDate":"2021-10-07"},{"lineNumber":252,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":253,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":254,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":255,"author":{"gitId":"bobowoo2468"},"content":"     * Parses string containing an integer value to int.","lastModifiedDate":"2021-10-14"},{"lineNumber":256,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":257,"author":{"gitId":"bobowoo2468"},"content":"     * @param params full user\u0027s argument/params string after splitting","lastModifiedDate":"2021-10-14"},{"lineNumber":258,"author":{"gitId":"bobowoo2468"},"content":"     * @return the client index from argument string","lastModifiedDate":"2021-10-14"},{"lineNumber":259,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":260,"author":{"gitId":"swongts"},"content":"    private static int stringToInt(String params) {","lastModifiedDate":"2021-10-07"},{"lineNumber":261,"author":{"gitId":"swongts"},"content":"        int clientIndex \u003d Integer.parseInt(params);","lastModifiedDate":"2021-10-07"},{"lineNumber":262,"author":{"gitId":"swongts"},"content":"        return clientIndex;","lastModifiedDate":"2021-10-07"},{"lineNumber":263,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":264,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":265,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":266,"author":{"gitId":"bobowoo2468"},"content":"     * Parses arguments with respect to the add client command.","lastModifiedDate":"2021-10-22"},{"lineNumber":267,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":268,"author":{"gitId":"bobowoo2468"},"content":"     * @param params full user\u0027s argument string","lastModifiedDate":"2021-10-22"},{"lineNumber":269,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if there are missing fields,duplicated or missing prefixes","lastModifiedDate":"2021-10-22"},{"lineNumber":270,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":271,"author":{"gitId":"bobowoo2468"},"content":"    private static Command parseAdd(String params) throws TourPlannerException {","lastModifiedDate":"2021-10-22"},{"lineNumber":272,"author":{"gitId":"bobowoo2468"},"content":"        String[] identifierAndArgs \u003d splitCommandString(params, \" \");","lastModifiedDate":"2021-10-22"},{"lineNumber":273,"author":{"gitId":"bobowoo2468"},"content":"        String identifier \u003d identifierAndArgs[0];","lastModifiedDate":"2021-10-22"},{"lineNumber":274,"author":{"gitId":"bobowoo2468"},"content":"        String args \u003d identifierAndArgs[1];","lastModifiedDate":"2021-10-22"},{"lineNumber":275,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":276,"author":{"gitId":"bobowoo2468"},"content":"        TreeMap\u003cInteger, String\u003e prefixIndexes \u003d extractPrefixIndexes(args, identifier);","lastModifiedDate":"2021-10-22"},{"lineNumber":277,"author":{"gitId":"bobowoo2468"},"content":"        ArrayList\u003cString\u003e valuesList \u003d extractValuesIntoArray(prefixIndexes, args, identifier);","lastModifiedDate":"2021-10-22"},{"lineNumber":278,"author":{"gitId":"bobowoo2468"},"content":"        String[] values \u003d valuesList.toArray(new String[valuesList.size()]);","lastModifiedDate":"2021-10-22"},{"lineNumber":279,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":280,"author":{"gitId":"bobowoo2468"},"content":"        switch (identifier) {","lastModifiedDate":"2021-10-22"},{"lineNumber":281,"author":{"gitId":"bobowoo2468"},"content":"        case \"-c\":","lastModifiedDate":"2021-10-22"},{"lineNumber":282,"author":{"gitId":"bobowoo2468"},"content":"            Client client \u003d new Client(values);","lastModifiedDate":"2021-10-22"},{"lineNumber":283,"author":{"gitId":"bobowoo2468"},"content":"            return new AddClientCommand(client);","lastModifiedDate":"2021-10-22"},{"lineNumber":284,"author":{"gitId":"bobowoo2468"},"content":"        case \"-f\":","lastModifiedDate":"2021-10-22"},{"lineNumber":285,"author":{"gitId":"bobowoo2468"},"content":"            Flight flight \u003d new Flight(values);","lastModifiedDate":"2021-10-22"},{"lineNumber":286,"author":{"gitId":"bobowoo2468"},"content":"            return new AddFlightCommand(flight);","lastModifiedDate":"2021-10-22"},{"lineNumber":287,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":288,"author":{"gitId":"bobowoo2468"},"content":"        case \"-t\":","lastModifiedDate":"2021-10-22"},{"lineNumber":289,"author":{"gitId":"bobowoo2468"},"content":"            Tour tour \u003d new Tour(values);","lastModifiedDate":"2021-10-22"},{"lineNumber":290,"author":{"gitId":"bobowoo2468"},"content":"            return new AddTourCommand(tour);","lastModifiedDate":"2021-10-22"},{"lineNumber":291,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":292,"author":{"gitId":"bobowoo2468"},"content":"        return null;","lastModifiedDate":"2021-10-22"},{"lineNumber":293,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":294,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":295,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":296,"author":{"gitId":"YipWayne"},"content":"   ","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"YipWayne":16,"bobowoo2468":252,"swongts":28}},{"path":"src/main/java/seedu/duke/Tour.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"public class Tour {","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"YipWayne"},"content":"    private final String code;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"YipWayne"},"content":"    private final String name;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"    private final String price;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"YipWayne"},"content":"    public Tour(String[] values) {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"YipWayne"},"content":"        code \u003d values[0];","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"YipWayne"},"content":"        name \u003d values[1];","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"YipWayne"},"content":"        price \u003d values[2];","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"YipWayne"},"content":"    public String getCode() {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"        return code;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"YipWayne"},"content":"    public String getName() {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"YipWayne"},"content":"        return name;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"YipWayne"},"content":"    public String getPrice() {","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"YipWayne"},"content":"        return price;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"    public String toString() {","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"        return \"Tour code: \" + code + System.lineSeparator()","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"                + \"Tour name: \" + name + System.lineSeparator()","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"                + \"Tour price: \" + price;","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"YipWayne":25,"bobowoo2468":8}},{"path":"src/main/java/seedu/duke/TourList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"YipWayne"},"content":"public class TourList {","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"    private static ArrayList\u003cTour\u003e tours;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":"    private static int tourCount \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"YipWayne"},"content":"    public TourList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"YipWayne"},"content":"        tours \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"YipWayne"},"content":"        tourCount \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"YipWayne"},"content":"    public void add(Tour tour) {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"        tours.add(tour);","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"        tourCount++;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"YipWayne"},"content":"    public int getTourCount() {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"YipWayne"},"content":"        return tourCount;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"YipWayne"},"content":"    public Tour getTour(String code) {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"YipWayne"},"content":"        for (int i \u003d 0; i \u003c tourCount; i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"YipWayne"},"content":"            if (tours.get(i).getCode().equals(code)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"YipWayne"},"content":"                return tours.get(i);","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"YipWayne"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"YipWayne"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"YipWayne"},"content":"        return null;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"YipWayne":31}},{"path":"src/main/java/seedu/duke/TourPlanner.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Demonshaha"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Demonshaha"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"Demonshaha"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"Demonshaha"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":" * Main entry-point of the TourPlanner application.","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":" * Initialises the application and starts interaction with application user.","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"Demonshaha"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"public class TourPlanner {","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Demonshaha"},"content":"    public TourPlanner() {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Demonshaha"},"content":"        ;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Demonshaha"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"Demonshaha"},"content":"    private static final Logger logr \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"     * Main method of TourPlanner.","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"     * Initialises Ui and ClientList objects.","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"     * Reads, parses and executes command from user\u0027s input until exit condition is met.","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"     * @param args not used","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"Demonshaha"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Demonshaha"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Demonshaha"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Demonshaha"},"content":"        String command;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"        ClientList clients \u003d new ClientList();","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"        FlightList flights \u003d new FlightList();","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"        TourList tours \u003d new TourList();","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"swongts"},"content":"        ClientPackageList packages \u003d new ClientPackageList();","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"        while (!isExit) {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Demonshaha"},"content":"            command \u003d ui.readCommand();","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"YipWayne"},"content":"            try {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"bobowoo2468"},"content":"                Command specificCommand \u003d Parser.parse(command);","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"                specificCommand.setData(clients, flights, tours, packages, ui);","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"                specificCommand.execute();","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"                isExit \u003d specificCommand.isExit();","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"YipWayne"},"content":"            } catch (NullPointerException | NumberFormatException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"YipWayne"},"content":"                System.out.println();","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"                logr.log(Level.SEVERE, \"Null pointer or Number format error occurred\");","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"            } catch (TourPlannerException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"Demonshaha"},"content":"                logr.log(Level.SEVERE, e.getMessage());","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"YipWayne"},"content":"            } finally {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"YipWayne"},"content":"                ui.showLine();","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"YipWayne"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Demonshaha"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Demonshaha"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"Demonshaha"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"YipWayne":6,"Demonshaha":23,"bobowoo2468":15,"swongts":8}},{"path":"src/main/java/seedu/duke/TourPlannerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":" * Represents a generalised error thrown when there are erroneous/out-of-bounds/missing inputs.","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":"public class TourPlannerException extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"     * Class constructor for TourPlannerException.","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"     * Returns an error message to the user to inform user of error.","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"     * @param errorMessage the customised error message corresponding to the error made","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"    public TourPlannerException(String errorMessage) {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"        super(errorMessage);","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"YipWayne":3,"bobowoo2468":13}},{"path":"src/main/java/seedu/duke/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"bobowoo2468"},"content":" * Text UI of the application.","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"YipWayne"},"content":"public class Ui {","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"YipWayne"},"content":"    private static final String CLEAR_MESSAGE \u003d \"All clients have been deleted\";","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"    private static final String CUT_MESSAGE \u003d \"Client has been deleted:\";","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"    private static final String ADD_MESSAGE \u003d \"Client has been added:\";","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"    private static final String BYE_MESSAGE \u003d \"Thanks for using TourPlanner. Goodbye!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"    private static Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"     * Empty Ui class constructor.","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"Demonshaha"},"content":"    public Ui() {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Demonshaha"},"content":"        ;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Demonshaha"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Demonshaha"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"     * Prints a divider to the text Ui.","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"YipWayne"},"content":"    public static void showLine() {","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"YipWayne"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"     * Prints a welcome message to the user on the text Ui.","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"YipWayne"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"YipWayne"},"content":"        showLine();","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"Demonshaha"},"content":"        String logo \u003d \" █████  ███  █   █ ████  ████  █      ████  █    █ █    █ █████ ████\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Demonshaha"},"content":"                + \"   █   █   █ █   █ █   █ █   █ █     █    █ ██   █ ██   █ █     █   █\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Demonshaha"},"content":"                + \"   █   █   █ █   █ █████ ████  █     ██████ █ █  █ █ █  █ █████ █████\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Demonshaha"},"content":"                + \"   █   █   █ █   █ █  █  █     █     █    █ █  █ █ █  █ █ █     █  █\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Demonshaha"},"content":"                + \"   █    ███   ███  █   █ █     █████ █    █ █   ██ █   ██ █████ █   █\\n\";","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"YipWayne"},"content":"        String greet \u003d \"Hello, Welcome to TourPlanner!\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"YipWayne"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"        show(logo);","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"swongts"},"content":"        show(greet);","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"YipWayne"},"content":"        showLine();","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"bobowoo2468"},"content":"     * Prompts for user\u0027s input and read\u0027s the text entered by the user.","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"     * @return full input entered by the user","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"YipWayne"},"content":"    public String readCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"YipWayne"},"content":"        return in.nextLine();","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"bobowoo2468"},"content":"     * Outputs to the CLI the text to show the user.","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"bobowoo2468"},"content":"     * Creates a newline as well.","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"bobowoo2468"},"content":"     * @param textToShow the output text intended for the user","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"YipWayne"},"content":"    public void show(String textToShow) {","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"YipWayne"},"content":"        System.out.print(textToShow + System.lineSeparator());","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"bobowoo2468"},"content":"     * Ui response to clear client list command.","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"YipWayne"},"content":"    public void showClear() {","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"YipWayne"},"content":"        show(CLEAR_MESSAGE);","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"bobowoo2468"},"content":"     * Ui response to cut client command.","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"bobowoo2468"},"content":"     * @param client the client object that was cut","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"swongts"},"content":"    public void showCut(Client client) {","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"swongts"},"content":"        show(CUT_MESSAGE + \"\\n\" + client);","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"bobowoo2468"},"content":"     * Ui response to add client command.","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"bobowoo2468"},"content":"     * @param client the client that was just added","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"bobowoo2468"},"content":"    public void showAdd(Client client) {","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"bobowoo2468"},"content":"        show(ADD_MESSAGE + \"\\n\" + client);","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"bobowoo2468"},"content":"    public void showAddFlight(Flight flight) {","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"bobowoo2468"},"content":"        show(ADD_MESSAGE + \"\\n\" + flight);","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"bobowoo2468"},"content":"    public void showAddTour(Tour tour) {","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"bobowoo2468"},"content":"        show(ADD_MESSAGE + \"\\n\" + tour);","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"bobowoo2468"},"content":"     * Prints an exit message to the text Ui to acknowledge exiting the application.","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"bobowoo2468"},"content":"    public void showBye() {","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"bobowoo2468"},"content":"        show(BYE_MESSAGE);","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"bobowoo2468"},"content":"        showLine();","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"YipWayne":35,"Demonshaha":9,"bobowoo2468":59,"swongts":5}},{"path":"src/test/java/seedu/duke/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"class AddCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"    void addCommand_validData_correctlyConstructed() {","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":"//        Client testClient \u003d new Client(new String[]{\"botuan\", \"1234\", \"SQ123\", \"Intercontinental\", \"AUS_A\"});","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"//        Command addClient \u003d new AddCommand(testClient);","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"//","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"//        Client retrieveClient \u003d ((AddCommand) addClient).getClient();","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"//        assertEquals(\"botuan\", retrieveClient.getName());","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"//        assertEquals(\"1234\", retrieveClient.getContactNum());","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"//        assertEquals(\"SQ123\", retrieveClient.getFlight());","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"//        assertEquals(\"Intercontinental\", retrieveClient.getAccomms());","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"//        assertEquals(\"AUS_A\", retrieveClient.getTour());","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"    void addCommand_emptyClientList_populatedClientList() throws TourPlannerException {","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"//        ClientList testClientList \u003d new ClientList();","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"//        Ui testUi \u003d new Ui();","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"//        Client testClient \u003d new Client(new String[]{\"botuan\", \"1234\", \"SQ123\", \"Intercontinental\", \"AUS_A\"});","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"//        Command addClient \u003d new AddCommand(testClient);","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"//        addClient.execute(testClientList, testUi);","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"//","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"//        Client retrieveClient \u003d testClientList.getClient(0);","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"//        assertEquals(\"botuan\", retrieveClient.getName());","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"//        assertEquals(\"1234\", retrieveClient.getContactNum());","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"//        assertEquals(\"SQ123\", retrieveClient.getFlight());","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"//        assertEquals(\"Intercontinental\", retrieveClient.getAccomms());","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"//        assertEquals(\"AUS_A\", retrieveClient.getTour());","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"bobowoo2468":21,"swongts":15}},{"path":"src/test/java/seedu/duke/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":" * Junit testing for ClearCommand.","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"class ClearCommandTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"     * Asserts that client list is empty after clear command object is created.","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"    void clearCommand_populatedClientList_correctlyCleared() throws TourPlannerException {","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"//        ClientList testClientList \u003d new ClientList();","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"//        Ui testUi \u003d new Ui();","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"//        Client testClient1 \u003d new Client(new String[]{\"botuan\", \"1234\", \"SQ123\", \"Intercontinental\", \"AUS_A\"});","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"//        Client testClient2 \u003d new Client(new String[]{\"amy\", \"6234\", \"CQ456 \", \"Holiday Inn\", \"KOR_K\"});","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"//        Command addClient1 \u003d new AddCommand(testClient1);","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"//        Command addClient2 \u003d new AddCommand(testClient2);","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"//        addClient1.execute(testClientList, testUi);","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"//        addClient2.execute(testClientList, testUi);","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"//","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"//        Command clear \u003d new ClearCommand();","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"//        clear.execute(testClientList, testUi);","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"//        assertEquals(testClientList.getClientCount(), 0);","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"bobowoo2468":18,"swongts":12}},{"path":"src/test/java/seedu/duke/CutCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YipWayne"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"YipWayne"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"YipWayne"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"YipWayne"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":" * Junit testing for CutCommand.","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"YipWayne"},"content":"class CutCommandTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"YipWayne"},"content":"    ClientList clientList \u003d new ClientList();","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"YipWayne"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"YipWayne"},"content":"    Client testClient \u003d new Client(new String[]{\"botuan\", \"1234\", \"hgus\", \"hotel-one\", \"aus-a\"});","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"     * Asserts that if cut index is valid, a client in the list would be deleted.","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"YipWayne"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"YipWayne"},"content":"    void cutCommand_validData_correctlyDeleted() {","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"YipWayne"},"content":"        Command add \u003d new AddCommand(testClient);","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"YipWayne"},"content":"        add.execute(clientList, ui);","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"YipWayne"},"content":"        Command cut \u003d new CutCommand(0);","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"YipWayne"},"content":"        cut.execute(clientList, ui);","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"YipWayne"},"content":"        int length \u003d clientList.getClientCount();","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"YipWayne"},"content":"        assertEquals(0, length);","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"bobowoo2468"},"content":"     * Asserts that if cut index is invalid, a client in the list would not be deleted.","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"YipWayne"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"YipWayne"},"content":"    void cutCommand_invalidData_correctlyDeleted() {","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"YipWayne"},"content":"        Command add \u003d new AddCommand(testClient);","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"YipWayne"},"content":"        add.execute(clientList, ui);","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"YipWayne"},"content":"        Command cut \u003d new CutCommand(-1);","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"YipWayne"},"content":"        cut.execute(clientList, ui);","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"YipWayne"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"YipWayne"},"content":"        int length \u003d clientList.getClientCount();","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"YipWayne"},"content":"        assertEquals(1, length);","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"YipWayne"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"YipWayne"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"YipWayne":38,"bobowoo2468":9}},{"path":"src/test/java/seedu/duke/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bobowoo2468"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"bobowoo2468"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"bobowoo2468"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bobowoo2468"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"bobowoo2468"},"content":" * Junit testing of the Parser class.","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"bobowoo2468"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"bobowoo2468"},"content":"public class ParserTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"bobowoo2468"},"content":"    private static final String WRONG_ADD_DUPLICATE_PREFIX","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"bobowoo2468"},"content":"            \u003d \"add botuan /cn 9487 /f SQ123 /cn 5678 /a hotel-one /t aus-a\";","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"bobowoo2468"},"content":"    public static final String WRONG_ADD_MISSING_NAME \u003d \"add /cn 1234 /f SQ123 /a intercontinental /t jpn-a\";","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"bobowoo2468"},"content":"    private static final String WRONG_ADD_MISSING_PREFIX_ONE \u003d \"add botuan /f SQ1234 /a panpac\";","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"bobowoo2468"},"content":"    public static final String WRONG_ADD_MISSING_PREFIX_TWO \u003d \"add botuan /cn 1234 /f MH123 /t fra-b \";","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"bobowoo2468"},"content":"    public static final String CORRECT_ADD_ONE \u003d \"add botuan /cn 9487 /f SQ123 /a hotel-one /t aus-a\";","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"bobowoo2468"},"content":"    public static final String CORRECT_ADD_TWO \u003d \"   add botuan /cn   9487 /f SQ123 /a hotel-one /t aus-a\";","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"bobowoo2468"},"content":"    public static final String CORRECT_CLEAR \u003d \"clear\";","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"bobowoo2468"},"content":"    public static final String CORRECT_LIST \u003d \"list\";","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"bobowoo2468"},"content":"    public static final String CORRECT_CUT \u003d \"cut 0\";","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"bobowoo2468"},"content":"    public static final String CORRECT_BYE \u003d \"bye\";","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"bobowoo2468"},"content":"    public static final String WRONG_LIST \u003d \"list blah\";","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"bobowoo2468"},"content":"    public static final String WRONG_CLEAR \u003d \"clear blahblah\";","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"bobowoo2468"},"content":"    public static final String WRONG_BYE \u003d \"bye blah blah\";","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"bobowoo2468"},"content":"     * Asserts that add command is correctly parsed and returns an AddCommand object.","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if there are general exceptions to user\u0027s input","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"    void parse_addCommand_correctCommandCreated() throws TourPlannerException {","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"bobowoo2468"},"content":"        parseAndAssertCommandType(CORRECT_ADD_ONE, AddCommand.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"bobowoo2468"},"content":"        //whitespaces are allowed","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"bobowoo2468"},"content":"        parseAndAssertCommandType(CORRECT_ADD_TWO, AddCommand.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"bobowoo2468"},"content":"     * Asserts that clear command is correctly parsed and returns a ClearCommand object.","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if there are general exceptions to user\u0027s input","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"swongts"},"content":"    void parse_clearCommand_correctCommandCreated() throws TourPlannerException {","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"bobowoo2468"},"content":"        parseAndAssertCommandType(CORRECT_CLEAR, ClearCommand.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"bobowoo2468"},"content":"     * Asserts that list command is correctly parsed and returns a ListCommand object.","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if there are general exceptions to user\u0027s input","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"swongts"},"content":"    void parse_listCommand_correctCommandCreated() throws TourPlannerException {","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"bobowoo2468"},"content":"        parseAndAssertCommandType(CORRECT_LIST, ListCommand.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"bobowoo2468"},"content":"     * Asserts that cut command is correctly parsed and returns a CutCommand object.","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if there are general exceptions to user\u0027s input","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"swongts"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"swongts"},"content":"    void parse_cutCommand_correctCommandCreated() throws TourPlannerException {","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"bobowoo2468"},"content":"        parseAndAssertCommandType(CORRECT_CUT, CutCommand.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"bobowoo2468"},"content":"     * Asserts that bye command is correctly parsed and returns a ByeCommand object.","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"bobowoo2468"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"bobowoo2468"},"content":"     * @throws TourPlannerException if there are general exceptions to user\u0027s input","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"swongts"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"swongts"},"content":"    void parse_byeCommand_correctCommandCreated() throws TourPlannerException {","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"bobowoo2468"},"content":"        parseAndAssertCommandType(CORRECT_BYE, ByeCommand.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"bobowoo2468"},"content":"     * Asserts that parsing duplicates in params during execution of add command will cause an exception to be thrown.","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"bobowoo2468"},"content":"    void parse_duplicatePrefixes_failure() {","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"bobowoo2468"},"content":"        assertParseFailure(WRONG_ADD_DUPLICATE_PREFIX, Parser.ERROR_DUPLICATE_PREFIXES);","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"bobowoo2468"},"content":"     * Asserts that missing prefixes in params during execution of add will cause an exception to be thrown.","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"bobowoo2468"},"content":"    void parse_missingPrefixes_failure() {","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"bobowoo2468"},"content":"        //missing \"/a\"","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"bobowoo2468"},"content":"        assertParseFailure(WRONG_ADD_MISSING_PREFIX_TWO, Parser.ERROR_MISSING_PREFIXES);","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"bobowoo2468"},"content":"        //missing both \"/cn\" and \"/t\"","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"bobowoo2468"},"content":"        assertParseFailure(WRONG_ADD_MISSING_PREFIX_ONE, Parser.ERROR_MISSING_PREFIXES);","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"bobowoo2468"},"content":"     * Asserts that missing name in params string during execution of add will cause an exception to be thrown.","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"bobowoo2468"},"content":"    void parse_missingName_failure() {","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"bobowoo2468"},"content":"        assertParseFailure(WRONG_ADD_MISSING_NAME, Parser.ERROR_MISSING_NAME);","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":111,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"bobowoo2468"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":113,"author":{"gitId":"bobowoo2468"},"content":"     * Asserts that superfluous inputs other than the command itself for list, clear, bye will throw an exception.","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"bobowoo2468"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":115,"author":{"gitId":"bobowoo2468"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":116,"author":{"gitId":"bobowoo2468"},"content":"    void parse_superfluousInput_failure() {","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"bobowoo2468"},"content":"        assertParseFailure(WRONG_LIST, Parser.ERROR_EXTRA_INPUT);","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"bobowoo2468"},"content":"        assertParseFailure(WRONG_CLEAR, Parser.ERROR_EXTRA_INPUT);","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"bobowoo2468"},"content":"        assertParseFailure(WRONG_BYE, Parser.ERROR_EXTRA_INPUT);","lastModifiedDate":"2021-10-14"},{"lineNumber":120,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"swongts"},"content":"    private \u003cT extends Command\u003e T parseAndAssertCommandType(String input, Class\u003cT\u003e expectedCommandClass)","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"swongts"},"content":"            throws TourPlannerException {","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"swongts"},"content":"        final Command result \u003d Parser.parse(input);","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"swongts"},"content":"        assertTrue(result.getClass().isAssignableFrom(expectedCommandClass));","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"swongts"},"content":"        return (T) result;","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"bobowoo2468"},"content":"    private void assertParseFailure(String input, String expectedMessage) {","lastModifiedDate":"2021-10-14"},{"lineNumber":131,"author":{"gitId":"bobowoo2468"},"content":"        try {","lastModifiedDate":"2021-10-14"},{"lineNumber":132,"author":{"gitId":"bobowoo2468"},"content":"            Parser.parse(input);","lastModifiedDate":"2021-10-14"},{"lineNumber":133,"author":{"gitId":"bobowoo2468"},"content":"            throw new AssertionError(\"The expected exception was not thrown\");","lastModifiedDate":"2021-10-14"},{"lineNumber":134,"author":{"gitId":"bobowoo2468"},"content":"        } catch (TourPlannerException e) {","lastModifiedDate":"2021-10-14"},{"lineNumber":135,"author":{"gitId":"bobowoo2468"},"content":"            assertEquals(expectedMessage, e.getMessage());","lastModifiedDate":"2021-10-14"},{"lineNumber":136,"author":{"gitId":"bobowoo2468"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":137,"author":{"gitId":"bobowoo2468"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":138,"author":{"gitId":"bobowoo2468"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":139,"author":{"gitId":"bobowoo2468"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"bobowoo2468":114,"swongts":25}},{"path":"src/test/java/seedu/duke/TourPlannerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"Demonshaha"},"content":"class TourPlannerTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"Demonshaha":1,"-":11,"swongts":1}}]
