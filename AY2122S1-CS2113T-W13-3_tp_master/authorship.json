[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"SuibianP"},"content":"    implementation group: \u0027com.google.code.gson\u0027, name: \u0027gson\u0027, version: \u00272.8.8\u0027","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"SuibianP"},"content":"    implementation \u0027org.jetbrains:annotations:20.1.0\u0027","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"    implementation group: \u0027org.mnode.ical4j\u0027, name: \u0027ical4j\u0027, version: \u00273.1.0\u0027","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"SuibianP"},"content":"    implementation group: \u0027commons-io\u0027, name: \u0027commons-io\u0027, version: \u00272.11.0\u0027","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"    mainClassName \u003d \"seedu.tp.SchedUrMods\"","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"    archiveBaseName \u003d \"tp\"","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"SeanRobertDH"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SuibianP":3,"SeanRobertDH":4,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"# About us \u003ca id\u003d\"scrollToHere\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"SuibianP"},"content":"![](https://avatars.githubusercontent.com/SuibianP?s\u003d100) | Hu Jialun | [Github](https://github.com/SuibianP) | [Portfolio](team/suibianp.md)","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"APZH"},"content":"![](https://avatars.githubusercontent.com/APZH?s\u003d100) | Peh Zhenhao, Amos | [Github](https://github.com/APZH) | [Portfolio](team/apzh.md)","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SuibianP"},"content":"![](https://avatars.githubusercontent.com/SeanRobertDH?s\u003d100) | Sean den Hartog | [Github](https://github.com/SeanRobertDH) | [Portfolio](team/seanrobertdh.md)","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"SuibianP"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto?s\u003d100) | Hu Xuefei | [Github](https://github.com/Xuefei2001) | [Portfolio](team/xuefei2001.md)","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"APZH":1,"SuibianP":3,"SeanRobertDH":1,"-":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"# SchedUrMods Developer Guide \u003ca id\u003d\"scrollToHere\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"APZH"},"content":"- [1. Introduction](#1-introduction)","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"APZH"},"content":"  - [1.1 Purpose](#11-purpose)","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"APZH"},"content":"  - [1.2 Acknowledgments](#12-acknowledgements)","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"APZH"},"content":"- [2. Setting up, getting started](#2-setting-up-getting-started)","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"APZH"},"content":"  - [2.1 Pre-requisites](#21-pre-requisites)","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"APZH"},"content":"  - [2.2 Download the project on your computer](#22-download-the-project-on-your-computer)","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"APZH"},"content":"  - [2.3 Setting up the project in IntelliJ](#23-setting-up-the-project-in-intellij)","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"APZH"},"content":"- [3. Design](#3-design)","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"APZH"},"content":"  - [3.1 Architecture](#31-architecture)","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"APZH"},"content":"  - [3.2 UI Component](#32-ui-component)","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"APZH"},"content":"  - [3.3 Parser Component](#33-parser-component)","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"APZH"},"content":"  - [3.4 Command Component](#34-command-component)","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"APZH"},"content":"  - [3.5 TaskManager Component](#35-taskmanager-component)","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"  - [3.6 Storage Component](#36-storage-component)","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"  - [3.7 Logger Component](#37-logger-component)","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"  - [3.8 NUSMods API Component](#38-nusmods-api-component)","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"APZH"},"content":"- [4. Implementation](#4-implementation)","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"  - [4.1 Task Factories](#41-task-factories)","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"APZH"},"content":"  - [4.2 Filtering the tasklist](#42-filtering-the-tasklist)","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"    - [4.2.1 Time proximity based filtering](#421-time-proximity-based-filtering)","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"  - [4.3 [Proposed] Refactor TaskManager](#43-proposed-refactor-taskmanager)","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"APZH"},"content":"- [5. Appendix: Requirements](#5-appendix-requirements)","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"APZH"},"content":"  - [5.1 Product scope](#51-product-scope)","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"APZH"},"content":"  - [5.2 User stories](#52-user-stories)","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"APZH"},"content":"  - [5.3 Non-Functional Requirements](#53-non-functional-requirements)","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"APZH"},"content":"  - [5.4 Glossary](#54-glossary)","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"APZH"},"content":"- [6. Appendix: Instructions for manual testing](#6-appendix-instructions-for-manual-testing)","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"APZH"},"content":"  ","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"APZH"},"content":"## 1. Introduction","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"APZH"},"content":"**SchedUrMods** is a desktop application for NUS students who wish to manage ","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"APZH"},"content":"their assignments and semester-related information via CLI (command-line interface).","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"If you can type fast, SchedUrMods can help you manage your daily tasks faster ","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"as compared to a traditional GUI application.","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"APZH"},"content":"**SchedUrMods** is written in `Java 11` and utilises the **Object-Oriented Programming (OOP)** ","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"APZH"},"content":"paradigm to provide the following benefits during the development of the application. ","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"APZH"},"content":"- Modularity for easier troubleshooting","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"APZH"},"content":"- Reuse of code through inheritance ","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"APZH"},"content":"- Flexibility through polymorphism","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"APZH"},"content":"### 1.1 Purpose","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"APZH"},"content":"This developer guide is intended for software developers, designers, or testers who wish","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"APZH"},"content":"to contribute to the development of the **SchedUrMods** application. ","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"APZH"},"content":"The guide provides an overall architectural view of **SchedUrMods** and describes the ","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"APZH"},"content":"implementation of key features of the application that is supplemented with easy to understand","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"APZH"},"content":"UML diagrams.","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"APZH"},"content":"### 1.2 Acknowledgements","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"APZH"},"content":"This section provides a list 3rd-party libraries adapted in the development of **SchedUrMods**.","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"APZH"},"content":"1. [iCal4J](http://ical4j.github.io/)","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"APZH"},"content":"2. [Gson](https://github.com/google/gson)","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"APZH"},"content":"3. [Apache Commons IO](https://commons.apache.org/proper/commons-io/)","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"APZH"},"content":"4. [Checkstyle](https://checkstyle.sourceforge.io/)","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"APZH"},"content":"5. [JUnit](https://junit.org)","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"SeanRobertDH"},"content":"6. [Google Material Icons](https://google.github.io/material-design-icons/)","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"APZH"},"content":"## 2. Setting up, getting started","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"APZH"},"content":"This section provides instructions on how to set up the development environment of the **SchedUrMods** application.","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"APZH"},"content":"### 2.1 Pre-requisites","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"APZH"},"content":"Please ensure that you have the following software installed, prior to setting up the project:","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"APZH"},"content":"1. IDE: [`IntelliJ IDEA`](https://www.jetbrains.com/idea/download/)","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"APZH"},"content":"   1. Development platform used for the development for the application.","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"APZH"},"content":"2. JDK: [`Java 11`](https://docs.aws.amazon.com/corretto/latest/corretto-11-ug/downloads-list.html)","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"APZH"},"content":"   1. Programming language the application is written in.","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"APZH"},"content":"3. Revision Control: [`SourceTree`](https://www.sourcetreeapp.com/)","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"APZH"},"content":"   1. Version control software used by development team.","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"APZH"},"content":"### 2.2 Download the project on your computer","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"APZH"},"content":"Please follow the following steps below to download the project file on your computer:","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"APZH"},"content":"1. Click [here](https://github.com/AY2122S1-CS2113T-W13-3/tp) to access the Github repository of the **SchedUrMods** application. ","lastModifiedDate":"2021-11-02"},{"lineNumber":79,"author":{"gitId":"APZH"},"content":"2. **Fork** and **Clone** the repository using `SourceTree`.","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"APZH"},"content":"### 2.3 Setting up the project in IntelliJ","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"APZH"},"content":"Please follow the following steps below to set up the project in `IntelliJ`:","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"APZH"},"content":"1. Launch `IntelliJ` application.","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"APZH"},"content":"   1. On the toolbar, click on `file` and then `Open...`.","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"APZH"},"content":"   2. Find and select the project folder that was previously downloaded.","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"APZH"},"content":"2. Configure the **Project SDK** to use `Java 11`","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"APZH"},"content":"   1. On the toolbar, click on `file` and then `Project Structure...`","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"APZH"},"content":"   2. Select `Project`","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"APZH"},"content":"      1. Configure `Project SDK:` to use `Java 11`.","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"APZH"},"content":"      2. Configure `Project language level:` to use `SDK default`.","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"APZH"},"content":"3. Verify the setup:","lastModifiedDate":"2021-11-02"},{"lineNumber":93,"author":{"gitId":"APZH"},"content":"   1. After completing steps **1** and **2**, right-click on the following java class ","lastModifiedDate":"2021-11-02"},{"lineNumber":94,"author":{"gitId":"APZH"},"content":"   `\\src\\main\\java\\seedu\\SchedUrMods.java` and select `Run SchedUrMods.main()`","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"APZH"},"content":"   2. Assuming the project is set up correctly, you should see the following display in the terminal:","lastModifiedDate":"2021-11-02"},{"lineNumber":96,"author":{"gitId":"APZH"},"content":"   ","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"APZH"},"content":"```","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"APZH"},"content":" _____        _                _  _   _       ___  ___            _","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"APZH"},"content":"/  ___|      | |              | || | | |      |  \\/  |           | |","lastModifiedDate":"2021-11-02"},{"lineNumber":100,"author":{"gitId":"APZH"},"content":"\\ `--.   ___ | |__    ___   __| || | | | _ __ | .  . |  ___    __| | ___","lastModifiedDate":"2021-11-02"},{"lineNumber":101,"author":{"gitId":"APZH"},"content":" `--. \\ / __|| \u0027_ \\  / _ \\ / _` || | | || \u0027__|| |\\/| | / _ \\  / _` |/ __|","lastModifiedDate":"2021-11-02"},{"lineNumber":102,"author":{"gitId":"APZH"},"content":"/\\__/ /| (__ | | | ||  __/| (_| || |_| || |   | |  | || (_) || (_| |\\__ \\","lastModifiedDate":"2021-11-02"},{"lineNumber":103,"author":{"gitId":"APZH"},"content":"\\____/  \\___||_| |_| \\___| \\__,_| \\___/ |_|   \\_|  |_/ \\___/  \\__,_||___/","lastModifiedDate":"2021-11-02"},{"lineNumber":104,"author":{"gitId":"APZH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-02"},{"lineNumber":105,"author":{"gitId":"APZH"},"content":"Command-Line Interface for NUSMODS                               (v2.1.0)","lastModifiedDate":"2021-11-02"},{"lineNumber":106,"author":{"gitId":"APZH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-02"},{"lineNumber":107,"author":{"gitId":"APZH"},"content":"[user]:","lastModifiedDate":"2021-11-02"},{"lineNumber":108,"author":{"gitId":"APZH"},"content":"```","lastModifiedDate":"2021-11-02"},{"lineNumber":109,"author":{"gitId":"APZH"},"content":"      ","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"APZH"},"content":"## 3. Design","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"APZH"},"content":"### 3.1 Architecture","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"APZH"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":113,"author":{"gitId":"APZH"},"content":"    \u003cimg src\u003d\"images/AmosUMLDiagrams/Architecture.png\"\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"APZH"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":116,"author":{"gitId":"APZH"},"content":"The Architecture Diagram above shows the high-level design of **SchedUrMods** ","lastModifiedDate":"2021-11-02"},{"lineNumber":117,"author":{"gitId":"APZH"},"content":"and how **SchedUrMods** main components are connected.","lastModifiedDate":"2021-11-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"SeanRobertDH"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":120,"author":{"gitId":"SeanRobertDH"},"content":"    \u003cimg src\u003d\"images/SeanUMLDiagrams/SchedUrMods_Architecture.png\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":121,"author":{"gitId":"SeanRobertDH"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":122,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":123,"author":{"gitId":"SeanRobertDH"},"content":"The Diagram above shows the class associations on a more granular level.","lastModifiedDate":"2021-11-08"},{"lineNumber":124,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":125,"author":{"gitId":"APZH"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":127,"author":{"gitId":"APZH"},"content":"`SchedUrMods` contains the main method of the application. It is responsible for,","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"APZH"},"content":"- **At app launch**: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"APZH"},"content":"- **While app is running**: Reads user input and outputs the appropriate command result.","lastModifiedDate":"2021-11-03"},{"lineNumber":130,"author":{"gitId":"APZH"},"content":"- **At shut down**: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2021-11-03"},{"lineNumber":131,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":132,"author":{"gitId":"APZH"},"content":"The rest of the App consists of seven main components.","lastModifiedDate":"2021-11-03"},{"lineNumber":133,"author":{"gitId":"APZH"},"content":"- `UI`: Handles user input and displaying of messages on the terminal.","lastModifiedDate":"2021-11-03"},{"lineNumber":134,"author":{"gitId":"APZH"},"content":"- `Parser`: Interpret user input and decides which `Command` is to be executed.","lastModifiedDate":"2021-11-03"},{"lineNumber":135,"author":{"gitId":"APZH"},"content":"- `Command`: Collection of user command classes + Handles command execution","lastModifiedDate":"2021-11-03"},{"lineNumber":136,"author":{"gitId":"APZH"},"content":"- `Storage`: Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2021-11-03"},{"lineNumber":137,"author":{"gitId":"APZH"},"content":"- `Utility`: Collection of classes used by multiple other components.","lastModifiedDate":"2021-11-03"},{"lineNumber":138,"author":{"gitId":"APZH"},"content":"- `Logger`: Handles the logging throughout all classes","lastModifiedDate":"2021-11-03"},{"lineNumber":139,"author":{"gitId":"APZH"},"content":"- `NUSMods API`: Communicate with NUSMods server to pull module related information.","lastModifiedDate":"2021-11-03"},{"lineNumber":140,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":141,"author":{"gitId":"APZH"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2021-11-03"},{"lineNumber":142,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"APZH"},"content":"The **Sequence Diagram** below shows how the components interact with each other for the ","lastModifiedDate":"2021-11-03"},{"lineNumber":144,"author":{"gitId":"APZH"},"content":"scenario where the **user inputs any valid command** in to the application.","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":146,"author":{"gitId":"APZH"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":147,"author":{"gitId":"APZH"},"content":"    \u003cimg src\u003d\"images/AmosUMLDiagrams/SD_ValidInput.png\"\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":148,"author":{"gitId":"APZH"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":150,"author":{"gitId":"APZH"},"content":"### 3.2 UI Component","lastModifiedDate":"2021-11-03"},{"lineNumber":151,"author":{"gitId":"APZH"},"content":"The **main API** of this component is specified in [`Ui.java`](https://github.com/AY2122S1-CS2113T-W13-3/tp/blob/master/src/main/java/seedu/duke/ui/Ui.java)","lastModifiedDate":"2021-11-04"},{"lineNumber":152,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":153,"author":{"gitId":"APZH"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":154,"author":{"gitId":"APZH"},"content":"    \u003cimg src\u003d\"images/AmosUMLDiagrams/CD_UIComponent.png\"\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":155,"author":{"gitId":"APZH"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":156,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":157,"author":{"gitId":"APZH"},"content":"The UI Component consists of the `Ui.java` class, which handles all user input and output operations within the ","lastModifiedDate":"2021-11-03"},{"lineNumber":158,"author":{"gitId":"APZH"},"content":"**SchedUrMods** application. The application structure (i.e. logo, borders, cursor...) is also defined in this ","lastModifiedDate":"2021-11-03"},{"lineNumber":159,"author":{"gitId":"APZH"},"content":"class as constant `String` variables to improve readability of the class and allow changes to be made","lastModifiedDate":"2021-11-03"},{"lineNumber":160,"author":{"gitId":"APZH"},"content":"to the general user interface easier.","lastModifiedDate":"2021-11-03"},{"lineNumber":161,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":162,"author":{"gitId":"APZH"},"content":"The `Ui.java` class implements the below functionalities using the following methods:","lastModifiedDate":"2021-11-03"},{"lineNumber":163,"author":{"gitId":"APZH"},"content":"- `printLogo`: Prints the application logo when the application is launched.","lastModifiedDate":"2021-11-04"},{"lineNumber":164,"author":{"gitId":"APZH"},"content":"- `printCursor`: Prints the user\u0027s cursor to indicate point of entering commands.","lastModifiedDate":"2021-11-04"},{"lineNumber":165,"author":{"gitId":"APZH"},"content":"- `readInput`: Obtain user input entered as a `String` to be parsed later on.","lastModifiedDate":"2021-11-04"},{"lineNumber":166,"author":{"gitId":"APZH"},"content":"- `printMessage`: Prints the system generated messages (i.e. command execution, errors, exceptions...)","lastModifiedDate":"2021-11-04"},{"lineNumber":167,"author":{"gitId":"APZH"},"content":"in a pre-defined formatting.","lastModifiedDate":"2021-11-04"},{"lineNumber":168,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":169,"author":{"gitId":"APZH"},"content":"### 3.3 Parser Component","lastModifiedDate":"2021-11-04"},{"lineNumber":170,"author":{"gitId":"APZH"},"content":"The **main API** of this component is specified in [`CommandParser.java`](https://github.com/AY2122S1-CS2113T-W13-3/tp/blob/master/src/main/java/seedu/duke/parser/CommandParser.java)","lastModifiedDate":"2021-11-04"},{"lineNumber":171,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":172,"author":{"gitId":"APZH"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":173,"author":{"gitId":"APZH"},"content":"    \u003cimg src\u003d\"images/AmosUMLDiagrams/CD_ParserComponent.png\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":174,"author":{"gitId":"APZH"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":175,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":176,"author":{"gitId":"APZH"},"content":"The Parser Component consists of `CommandParser.java` and other additional helper parsers such as `DateParser.java`, ","lastModifiedDate":"2021-11-04"},{"lineNumber":177,"author":{"gitId":"APZH"},"content":"`TaskParser.java`, and `TaskUsageParser.java` classes. Importantly, the `CommandParser.java` class is responsible ","lastModifiedDate":"2021-11-04"},{"lineNumber":178,"author":{"gitId":"APZH"},"content":"for parsing the user\u0027s input and generating the correct `Command` object to be returned to the `SchedUrMods` class.","lastModifiedDate":"2021-11-04"},{"lineNumber":179,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":180,"author":{"gitId":"APZH"},"content":"Any flags and arguments present in the user\u0027s input are extracted out and stored in a `Map\u003cString, String\u003e` as a ","lastModifiedDate":"2021-11-04"},{"lineNumber":181,"author":{"gitId":"APZH"},"content":"flag to argument keyset. This `Map` is then parsed as a parameter during the creation of the `Command` object along","lastModifiedDate":"2021-11-04"},{"lineNumber":182,"author":{"gitId":"APZH"},"content":"with the **main command** converted into a `CommandEnum`.","lastModifiedDate":"2021-11-04"},{"lineNumber":183,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":184,"author":{"gitId":"APZH"},"content":"The `CommandParser.java` class implements the below functionalities using the following methods:","lastModifiedDate":"2021-11-04"},{"lineNumber":185,"author":{"gitId":"APZH"},"content":"- `getCommandOptions`: Converts the command arguments entered by the user into a `Map\u003cString, String\u003e` variable. ","lastModifiedDate":"2021-11-04"},{"lineNumber":186,"author":{"gitId":"APZH"},"content":"The purpose of this is to enable direct and easier access to flags based on the name.","lastModifiedDate":"2021-11-04"},{"lineNumber":187,"author":{"gitId":"APZH"},"content":"- `createCommand`: Creates the correct `Command` based on the main command and any flags or arguments it may have.","lastModifiedDate":"2021-11-04"},{"lineNumber":188,"author":{"gitId":"APZH"},"content":"- `parseCommand`: Parent method that calls the above methods after splitting and sanitising the user\u0027s input into","lastModifiedDate":"2021-11-04"},{"lineNumber":189,"author":{"gitId":"APZH"},"content":"a `CommandEnum` variable for the **main command** and a `Map\u003cString, String\u003e` variable for the flags or arguments ","lastModifiedDate":"2021-11-04"},{"lineNumber":190,"author":{"gitId":"APZH"},"content":"associated with it.","lastModifiedDate":"2021-11-07"},{"lineNumber":191,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":192,"author":{"gitId":"APZH"},"content":"### 3.4 Command Component","lastModifiedDate":"2021-11-03"},{"lineNumber":193,"author":{"gitId":"SeanRobertDH"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":194,"author":{"gitId":"SeanRobertDH"},"content":"    \u003cimg src\u003d\"images/SeanUMLDiagrams/Command_Class_Diagram.png\" width\u003d\"850\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":195,"author":{"gitId":"SeanRobertDH"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":196,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":197,"author":{"gitId":"SeanRobertDH"},"content":"The `Command` component consists of an abstract class `Command` that all commands should inherit from. There are then 3 seperate types of Commands.","lastModifiedDate":"2021-11-07"},{"lineNumber":198,"author":{"gitId":"SeanRobertDH"},"content":" - `XYZCommand`: These are commands that do not interact with `TaskManager` and need no flags. e.g. the \u0027bye\u0027 command.","lastModifiedDate":"2021-11-07"},{"lineNumber":199,"author":{"gitId":"SeanRobertDH"},"content":" - `XYZTaskManagerCommand`: These are commands that perform a function with `TaskManager` based on the flags that are entered in the `Map\u003cString, String\u003e` e.g. the \u0027edit\u0027 or \u0027sort\u0027 command.","lastModifiedDate":"2021-11-07"},{"lineNumber":200,"author":{"gitId":"SeanRobertDH"},"content":" - `TaskCommand` these are commands that add Tasks to the `TaskManager`. individual TaskCommands will inherit from this class and set the `TaskFactory` and Task usage e.g. the \u0027Deadline\u0027 command.","lastModifiedDate":"2021-11-08"},{"lineNumber":201,"author":{"gitId":"SeanRobertDH"},"content":"   \u003e💡 **Note**: The `ModuleCommand` is implemented with `XYZTaskManagerCommand` instead of `TaskCommand` as it does **not** use a `TaskFactory`.  ","lastModifiedDate":"2021-11-07"},{"lineNumber":202,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":203,"author":{"gitId":"SeanRobertDH"},"content":"On executing the command (`executeCommand()` called), the `CommandResult` should be returned with 2 variables. `message` is the message to be printed back to the user and `isExited` is whether the program should exit after this command.","lastModifiedDate":"2021-11-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":205,"author":{"gitId":"APZH"},"content":"### 3.5 TaskManager Component","lastModifiedDate":"2021-11-03"},{"lineNumber":206,"author":{"gitId":"SeanRobertDH"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":207,"author":{"gitId":"SeanRobertDH"},"content":"    \u003cimg src\u003d\"images/SeanUMLDiagrams/TaskManager_Object_Diagram.png\" width\u003d\"850\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":208,"author":{"gitId":"SeanRobertDH"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":209,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":210,"author":{"gitId":"SeanRobertDH"},"content":"The `TaskManager` component is what manages all the Tasks in the program.  ","lastModifiedDate":"2021-11-08"},{"lineNumber":211,"author":{"gitId":"SeanRobertDH"},"content":"In `TaskManager`, there are 2 lists. `taskList` and `latestFilteredList`.","lastModifiedDate":"2021-11-08"},{"lineNumber":212,"author":{"gitId":"SeanRobertDH"},"content":"- `taskList`: corresponds to the list of all tasks currently stored in the `TaskManager`.","lastModifiedDate":"2021-11-08"},{"lineNumber":213,"author":{"gitId":"SeanRobertDH"},"content":"- `latestFilteredList`: corresponds to the latest list that was printed by the `list` command.","lastModifiedDate":"2021-11-08"},{"lineNumber":214,"author":{"gitId":"SeanRobertDH"},"content":"   - This list was created to make it easier for users to delete and edit tasks as they can use the index in `latestFilteredList`. E.g. if they wanted to delete all `low` priority tasks, they can list with a filter of `low` priority and delete all those tasks.","lastModifiedDate":"2021-11-08"},{"lineNumber":215,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":216,"author":{"gitId":"SeanRobertDH"},"content":"When listing tasks. `refreshDate()` is called before listing tasks. This is to enure that all dates are recurred to the latest date if they have a `recurrence` that is not `none`.","lastModifiedDate":"2021-11-08"},{"lineNumber":217,"author":{"gitId":"SeanRobertDH"},"content":"The `Task` object is what is managed by the `TaskManager`. ","lastModifiedDate":"2021-11-08"},{"lineNumber":218,"author":{"gitId":"SeanRobertDH"},"content":" - Each Task has a `description`, `priority` and `recurrence` with concrete Tasks adding any additional variables and formatting the `getTaskEntryDescription()` method respectively.","lastModifiedDate":"2021-11-08"},{"lineNumber":219,"author":{"gitId":"SeanRobertDH"},"content":"   \u003e💡 **Note**: Fixed values such as `priority` and `recurrence` are stored as an enum to ensure standardisation and that there are no invalid values being stored.","lastModifiedDate":"2021-11-08"},{"lineNumber":220,"author":{"gitId":"SeanRobertDH"},"content":" - They also each have their own `TaskFlag` class which includes a list of all valid flags for agruments in creating the specific task.","lastModifiedDate":"2021-11-08"},{"lineNumber":221,"author":{"gitId":"SeanRobertDH"},"content":"   - This is used in the \u0027`checkAllEditFlagsValid()` in the `edit` command function in editing tasks to ensure that all the flags entered by the user are correct for the respective task.  ","lastModifiedDate":"2021-11-08"},{"lineNumber":222,"author":{"gitId":"SeanRobertDH"},"content":" - `taskEdit()` is to be overridden to check the `Map\u003cString, String\u003e` for the respective flags in the concrete `Taskflag` and edit the parameters in the concrete `Task` object respectively.","lastModifiedDate":"2021-11-08"},{"lineNumber":223,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":224,"author":{"gitId":"APZH"},"content":"### 3.6 Storage Component","lastModifiedDate":"2021-11-03"},{"lineNumber":225,"author":{"gitId":"SeanRobertDH"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":226,"author":{"gitId":"SeanRobertDH"},"content":"    \u003cimg src\u003d\"images/SeanUMLDiagrams/Storage_Sequence_Diagram1.png\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":227,"author":{"gitId":"SeanRobertDH"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":228,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":229,"author":{"gitId":"SeanRobertDH"},"content":"The Storage is handled by the `DataManager` class.","lastModifiedDate":"2021-11-08"},{"lineNumber":230,"author":{"gitId":"SeanRobertDH"},"content":" - All of the objects are initialised on starting the program in `SchedUrMods` class.","lastModifiedDate":"2021-11-08"},{"lineNumber":231,"author":{"gitId":"SeanRobertDH"},"content":" - The `DataManager` class takes in a `FileCreator` which creates the file for storing the Task data.","lastModifiedDate":"2021-11-08"},{"lineNumber":232,"author":{"gitId":"SeanRobertDH"},"content":" - The `TaskManager` class takes in a `DataManager` and loads the `taskList` using the DataManager. It also adds the `DataManager` as an `Observer` so that it can update the `DataManager` whenever `taskList` changes.","lastModifiedDate":"2021-11-08"},{"lineNumber":233,"author":{"gitId":"SeanRobertDH"},"content":" - The `DataManager` has been designed with **Dependency injection** in mind so that programmers would know what objects are required for each class.","lastModifiedDate":"2021-11-08"},{"lineNumber":234,"author":{"gitId":"SeanRobertDH"},"content":"   \u003e💡 **Note**: `TaskManager` can be initialised without any `DataManager` as an argument. In which case it would still work albeit without any storage functionality. (useful for testing)","lastModifiedDate":"2021-11-08"},{"lineNumber":235,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":236,"author":{"gitId":"SeanRobertDH"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":237,"author":{"gitId":"SeanRobertDH"},"content":"    \u003cimg src\u003d\"images/SeanUMLDiagrams/Storage_Sequence_Diagram2.png\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":238,"author":{"gitId":"SeanRobertDH"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":239,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":240,"author":{"gitId":"SeanRobertDH"},"content":" - Whenever a Create, Read or Update function is performed in TaskManager on `taskList`, the `updateObservers()` function should be called so that `DataManager` can write the updated `taskList` to the Task save file.","lastModifiedDate":"2021-11-08"},{"lineNumber":241,"author":{"gitId":"SeanRobertDH"},"content":" - Because `taskList` is created in `DataManager` and returned to `TaskManager` (as seen in the first sequence diagram), there is no need to constantly pass the `taskList` as an argument to `DataManager` when calling `update()` as they **both** have the same reference to `taskList`.","lastModifiedDate":"2021-11-08"},{"lineNumber":242,"author":{"gitId":"SeanRobertDH"},"content":" - The Tasks are stored in a `json` format in the file `data/tasks.dat` and are parsed using the [`Gson`](https://github.com/google/gson) library.","lastModifiedDate":"2021-11-08"},{"lineNumber":243,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":244,"author":{"gitId":"SeanRobertDH"},"content":"\u003e💡 **Note**: The storage component has been implemented using the [Observer Design Pattern](https://en.wikipedia.org/wiki/Observer_pattern) where `TaskManager` implements `Subject` and `DataManager` implements `Observer`.","lastModifiedDate":"2021-11-08"},{"lineNumber":245,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":246,"author":{"gitId":"SeanRobertDH"},"content":"### 3.7 Logger Component","lastModifiedDate":"2021-11-08"},{"lineNumber":247,"author":{"gitId":"SeanRobertDH"},"content":" - The Logger has been implemented with the `java.util.logging` library.","lastModifiedDate":"2021-11-08"},{"lineNumber":248,"author":{"gitId":"SeanRobertDH"},"content":" - It\u0027s designed to be as easy to use as possible where in order to log any message, you only have to use `Log.\u003cseverity\u003e(message)`.","lastModifiedDate":"2021-11-08"},{"lineNumber":249,"author":{"gitId":"SeanRobertDH"},"content":"   - E.g. `Log.info(\"this is an info log\")`.","lastModifiedDate":"2021-11-08"},{"lineNumber":250,"author":{"gitId":"SeanRobertDH"},"content":" - The logger will automatically log your message in the following format:","lastModifiedDate":"2021-11-08"},{"lineNumber":251,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":252,"author":{"gitId":"SeanRobertDH"},"content":"[YYYY-MM-dd HH:mm:ss] [full.class.path]","lastModifiedDate":"2021-11-08"},{"lineNumber":253,"author":{"gitId":"SeanRobertDH"},"content":"SEVERITY: Log Message Here ","lastModifiedDate":"2021-11-08"},{"lineNumber":254,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":255,"author":{"gitId":"SeanRobertDH"},"content":"- The way the logger gets the class name is by using the `Thread.currentThread().getStackTrace()` function to determine which class called the log function.","lastModifiedDate":"2021-11-08"},{"lineNumber":256,"author":{"gitId":"SeanRobertDH"},"content":"- All individual class loggers are stored in a hashmap `Map\u003cString, Logger\u003e` where if a class name is not already in the hashmap on calling any log function, it will be added automatically.","lastModifiedDate":"2021-11-08"},{"lineNumber":257,"author":{"gitId":"SeanRobertDH"},"content":"- All log messages above `Level.SEVERE` will be printed to console and all log messages above `Level.FINE` will be added to the log file `log.txt`.","lastModifiedDate":"2021-11-08"},{"lineNumber":258,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":259,"author":{"gitId":"SeanRobertDH"},"content":"### 3.8 NUSMods API Component","lastModifiedDate":"2021-11-08"},{"lineNumber":260,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":261,"author":{"gitId":"SuibianP"},"content":"The major parts of this component lies within the nusmods package.","lastModifiedDate":"2021-11-07"},{"lineNumber":262,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":263,"author":{"gitId":"SuibianP"},"content":"The parsing logic is implemented in the NusModsParser class, which exposes the following public API,","lastModifiedDate":"2021-11-07"},{"lineNumber":264,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":265,"author":{"gitId":"SuibianP"},"content":"![NusModsParser class diagram](images/JialunUMLDiagrams/CD_NusModsParser.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":266,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":267,"author":{"gitId":"SuibianP"},"content":"- `getLessons`: Obtain an array of Lesson objects given a module code and a lesson number. ","lastModifiedDate":"2021-11-07"},{"lineNumber":268,"author":{"gitId":"SuibianP"},"content":"This relies on either local cache or network being available.","lastModifiedDate":"2021-11-07"},{"lineNumber":269,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":270,"author":{"gitId":"SuibianP"},"content":"Additionally, the auxiliary class `Semester` implements complement utility for handling NUS semesters and offers two-way","lastModifiedDate":"2021-11-07"},{"lineNumber":271,"author":{"gitId":"SuibianP"},"content":"conversion between java time API and semesters. The enumeration class `Semester` exposes the following APIs,","lastModifiedDate":"2021-11-07"},{"lineNumber":272,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":273,"author":{"gitId":"SuibianP"},"content":"![Semester class diagram](images/JialunUMLDiagrams/CD_Semester.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":274,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":275,"author":{"gitId":"SuibianP"},"content":"- `getSemester`: Get the semester at a certain time, or at the current instant.","lastModifiedDate":"2021-11-07"},{"lineNumber":276,"author":{"gitId":"SuibianP"},"content":"- `fromInt`: Convert the integer representation from NUSMods API response to the enumeration.","lastModifiedDate":"2021-11-07"},{"lineNumber":277,"author":{"gitId":"SuibianP"},"content":"- `getWeekLength`: Get the number of weeks in a certain semester.","lastModifiedDate":"2021-11-07"},{"lineNumber":278,"author":{"gitId":"SuibianP"},"content":"- `acadWeeksToRealWeeks`: Convert academic weeks to real weeks.","lastModifiedDate":"2021-11-07"},{"lineNumber":279,"author":{"gitId":"SuibianP"},"content":"- `getStartingMonday`: Get the starting Monday of a specific semester, or the current semester.","lastModifiedDate":"2021-11-07"},{"lineNumber":280,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":281,"author":{"gitId":"APZH"},"content":"## 4. Implementation","lastModifiedDate":"2021-11-03"},{"lineNumber":282,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":283,"author":{"gitId":"SeanRobertDH"},"content":"### 4.1 Task Factories","lastModifiedDate":"2021-11-08"},{"lineNumber":284,"author":{"gitId":"SeanRobertDH"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":285,"author":{"gitId":"SeanRobertDH"},"content":"    \u003cimg src\u003d\"images/SeanUMLDiagrams/TaskFactory_Sequence_Diagram.png\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":286,"author":{"gitId":"SeanRobertDH"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":287,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":288,"author":{"gitId":"SeanRobertDH"},"content":"`Todo`, `Deadline` and `Event` Tasks are created using their respective Task factories.","lastModifiedDate":"2021-11-08"},{"lineNumber":289,"author":{"gitId":"SeanRobertDH"},"content":" - All Task factories inherit from the abstract `TaskFactory` class and are created using similar steps:","lastModifiedDate":"2021-11-08"},{"lineNumber":290,"author":{"gitId":"SeanRobertDH"},"content":"   1. It firstly checks that all the required flags for making the concrete Task are present and throws `RequiredArgmentNotProvidedException` if a flag is missing.","lastModifiedDate":"2021-11-08"},{"lineNumber":291,"author":{"gitId":"SeanRobertDH"},"content":"   2. It then initialises the `description`, `priority` and `recurrence`. ","lastModifiedDate":"2021-11-08"},{"lineNumber":292,"author":{"gitId":"SeanRobertDH"},"content":"   3. From there it sets any additional variables that are present in the concrete Task.","lastModifiedDate":"2021-11-08"},{"lineNumber":293,"author":{"gitId":"SeanRobertDH"},"content":"   4. It creates the task and sets the `priority` and `recurrence` if they are not `null`","lastModifiedDate":"2021-11-08"},{"lineNumber":294,"author":{"gitId":"SeanRobertDH"},"content":"   5. It returns the created concrete Task.","lastModifiedDate":"2021-11-08"},{"lineNumber":295,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":296,"author":{"gitId":"SeanRobertDH"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":297,"author":{"gitId":"SeanRobertDH"},"content":"    \u003cimg src\u003d\"images/SeanUMLDiagrams/TaskFactory_Object_Diagram.png\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":298,"author":{"gitId":"SeanRobertDH"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":299,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":300,"author":{"gitId":"SeanRobertDH"},"content":"The `TaskFactory` has been designed using the [Factory Method Pattern](https://en.wikipedia.org/wiki/Factory_method_pattern#UML_class_diagram). It was also designed to be easily extendable to allow for more concrete Task factories to be easily added. Each set of variables are initialised in their respective factories. e.g. `priority` is a `Task` variable so it\u0027s initialised and set in `TaskFactory` while `dueDate` is a `Deadline` variable so it\u0027s initialised and set in `DeadlineFactory`.","lastModifiedDate":"2021-11-08"},{"lineNumber":301,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":302,"author":{"gitId":"SeanRobertDH"},"content":"1. To extend the `TaskFactory`, you should create a constructor which takes in a `Map\u003cString, String\u003e flags` argument and define `TypeEnum taskType` and `String[] requiredFlags` as constants.","lastModifiedDate":"2021-11-08"},{"lineNumber":303,"author":{"gitId":"SeanRobertDH"},"content":"2. From there you have to override the `setAdditionalVariables()` function to set any new variables that are unique to the concrete Task you want to impelment.","lastModifiedDate":"2021-11-08"},{"lineNumber":304,"author":{"gitId":"SeanRobertDH"},"content":"3. override `createTask()` to return the constructed Task (you can ignore `priority` and `recurrence` as they are set in `TaskFactory`)","lastModifiedDate":"2021-11-08"},{"lineNumber":305,"author":{"gitId":"SeanRobertDH"},"content":"4. optional: you may override `getTask()` to return the concrete Task instead of the abstract `Task`.","lastModifiedDate":"2021-11-08"},{"lineNumber":306,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":307,"author":{"gitId":"APZH"},"content":"### 4.2 Filtering the tasklist","lastModifiedDate":"2021-11-03"},{"lineNumber":308,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":309,"author":{"gitId":"APZH"},"content":"The sequence diagram and description below shows the process of filtering the user\u0027s tasklist that is managed","lastModifiedDate":"2021-11-07"},{"lineNumber":310,"author":{"gitId":"APZH"},"content":"by the `TaskManager.java` class.","lastModifiedDate":"2021-11-05"},{"lineNumber":311,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":312,"author":{"gitId":"APZH"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":313,"author":{"gitId":"APZH"},"content":"    \u003cimg src\u003d\"images/AmosUMLDiagrams/SD_FilteringTasklist.png\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":314,"author":{"gitId":"APZH"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":315,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":316,"author":{"gitId":"APZH"},"content":"**Step 1**: When the `ListCommand` receives the call to be executed by the main class `SchedUrMods`, it will proceed to call the `listTasklistWithFilter()` method ","lastModifiedDate":"2021-11-07"},{"lineNumber":317,"author":{"gitId":"APZH"},"content":"and input the command arguments stored as a flag-argument `Map\u003cString, String\u003e`, in this case the **filters** entered by the user, ","lastModifiedDate":"2021-11-07"},{"lineNumber":318,"author":{"gitId":"APZH"},"content":"that was previously sanitised by the `CommandParser`.","lastModifiedDate":"2021-11-07"},{"lineNumber":319,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":320,"author":{"gitId":"APZH"},"content":"**Step 2**: The `listTasklistWithFilter()` method will then loop through all the **filters** and check the validity of the filters","lastModifiedDate":"2021-11-07"},{"lineNumber":321,"author":{"gitId":"APZH"},"content":"currently stored in the flag-argument `Map\u003cString, String\u003e`.","lastModifiedDate":"2021-11-07"},{"lineNumber":322,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":323,"author":{"gitId":"APZH"},"content":"**Step 3**: For each valid filter found, the respective filter functions will be called and will filter out all the tasks that","lastModifiedDate":"2021-11-07"},{"lineNumber":324,"author":{"gitId":"APZH"},"content":"do not match the filter specified by the user. For instance, if the filter flag equals to `type` and it\u0027s corresponding mapped","lastModifiedDate":"2021-11-07"},{"lineNumber":325,"author":{"gitId":"APZH"},"content":"value is `Todo`, then the method `filterListByTaskType()` will filter out all the tasks who do not have task type equals to `Todo`,","lastModifiedDate":"2021-11-07"},{"lineNumber":326,"author":{"gitId":"APZH"},"content":"and return a filtered tasklist with only `Todo` tasks.","lastModifiedDate":"2021-11-07"},{"lineNumber":327,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":328,"author":{"gitId":"APZH"},"content":"**Step 4**: The returned filtered tasklist will be reused for the remaining filters present in the flag-argument `Map\u003cString, String\u003e`","lastModifiedDate":"2021-11-07"},{"lineNumber":329,"author":{"gitId":"APZH"},"content":"of the filters to allow for multi-level filter to increase the filtering depth for the user to locate specific tasks","lastModifiedDate":"2021-11-07"},{"lineNumber":330,"author":{"gitId":"APZH"},"content":"that matches multiple filters.","lastModifiedDate":"2021-11-07"},{"lineNumber":331,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":332,"author":{"gitId":"APZH"},"content":"**Step 5**: Once the `listTasklistWithFilter()` method has looped through all the filters stored in the `Map\u003cString, String\u003e`,","lastModifiedDate":"2021-11-07"},{"lineNumber":333,"author":{"gitId":"APZH"},"content":"it will call the `getListTasklistWithFilterMessage()` method along with the final filtered tasklist to obtain a nicely ","lastModifiedDate":"2021-11-07"},{"lineNumber":334,"author":{"gitId":"APZH"},"content":"pre-formatted `String` containing a neat list of the final filtered tasks that matched all the filtering criteria.","lastModifiedDate":"2021-11-07"},{"lineNumber":335,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":336,"author":{"gitId":"APZH"},"content":"**Step 6**: A `CommandResult` object is then created and stores the `String` containing the filtered tasklist","lastModifiedDate":"2021-11-07"},{"lineNumber":337,"author":{"gitId":"APZH"},"content":"as the command execution message to be handled by the `Ui` and displayed to the user on the terminal interface.","lastModifiedDate":"2021-11-07"},{"lineNumber":338,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":339,"author":{"gitId":"SeanRobertDH"},"content":"### 4.2.1 Time proximity based filtering","lastModifiedDate":"2021-11-08"},{"lineNumber":340,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":341,"author":{"gitId":"SuibianP"},"content":"All tasks are first gotten and converted into a stream for layer mutilation. Then, the time is first found for each task using the unified interface `Task::getHappenTime`, to filter out tasks that does not have an associated time. Subsequently, the next occurrence is obtained with,","lastModifiedDate":"2021-11-08"},{"lineNumber":342,"author":{"gitId":"SuibianP"},"content":"- `Lesson::getNextOccurrence` if the task is a lesson, since lessons have irregular recurrences, or,","lastModifiedDate":"2021-11-08"},{"lineNumber":343,"author":{"gitId":"SuibianP"},"content":"- `RecurrenceEnum::getNextRecurredDate` otherwise.","lastModifiedDate":"2021-11-08"},{"lineNumber":344,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":345,"author":{"gitId":"SuibianP"},"content":"If the time of the next occurrence falls within the threshold time length from now, the task is preserved.","lastModifiedDate":"2021-11-08"},{"lineNumber":346,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":347,"author":{"gitId":"SuibianP"},"content":"Finally, the stream is sorted by the occurrence time and collected into a string for return.","lastModifiedDate":"2021-11-08"},{"lineNumber":348,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":349,"author":{"gitId":"SeanRobertDH"},"content":"### 4.3 [Proposed] Refactor `TaskManager`","lastModifiedDate":"2021-11-08"},{"lineNumber":350,"author":{"gitId":"SeanRobertDH"},"content":"The team has thought of refactoring `TaskManager` because as of currently, it does not seem to be following the \u0027Single Responsibility Principle\u0027. Because `TaskManager` both manages the `taskList` and `latestFilteredList`, it seems that it is having 2 responsibilities. The team believes that this issue can be fixed using either the \u0027Facade\u0027, \u0027Decorator\u0027 or \u0027Proxy\u0027 design pattern. However, due to lack of time, we have bundled the two Task lists into one class.","lastModifiedDate":"2021-11-08"},{"lineNumber":351,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":352,"author":{"gitId":"APZH"},"content":"## 5. Appendix: Requirements","lastModifiedDate":"2021-11-03"},{"lineNumber":353,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":354,"author":{"gitId":"APZH"},"content":"### 5.1 Product scope","lastModifiedDate":"2021-11-03"},{"lineNumber":355,"author":{"gitId":"APZH"},"content":"**Target User Profile**","lastModifiedDate":"2021-11-03"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":357,"author":{"gitId":"APZH"},"content":"The target user profile of **SchedUrMods** are NUS students from all faculties.","lastModifiedDate":"2021-11-03"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":359,"author":{"gitId":"APZH"},"content":"**Needs of Target Users**","lastModifiedDate":"2021-11-03"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":361,"author":{"gitId":"APZH"},"content":"- Prefer CLI interface as opposed to GUI interface.","lastModifiedDate":"2021-11-03"},{"lineNumber":362,"author":{"gitId":"APZH"},"content":"- Needs a quick way to manage their homework and assignments.","lastModifiedDate":"2021-11-03"},{"lineNumber":363,"author":{"gitId":"APZH"},"content":"- Needs a quick way to launch lesson zoom links.","lastModifiedDate":"2021-11-03"},{"lineNumber":364,"author":{"gitId":"APZH"},"content":"- Needs a quick way to view semester timetable.","lastModifiedDate":"2021-11-03"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":366,"author":{"gitId":"APZH"},"content":"### 5.2 User stories","lastModifiedDate":"2021-11-03"},{"lineNumber":367,"author":{"gitId":"APZH"},"content":"**Priorities**: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2021-11-03"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":369,"author":{"gitId":"APZH"},"content":"| Priority | As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2021-11-03"},{"lineNumber":370,"author":{"gitId":"APZH"},"content":"|----------|----------|---------------|------------------|","lastModifiedDate":"2021-11-03"},{"lineNumber":371,"author":{"gitId":"APZH"},"content":"|`* * *`|new user|see usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2021-11-07"},{"lineNumber":372,"author":{"gitId":"APZH"},"content":"|`* * *`|new user|update my timetable via NUSMODS automatically|stop keeping track of changes made on NUSMODS|","lastModifiedDate":"2021-11-07"},{"lineNumber":373,"author":{"gitId":"APZH"},"content":"|`* * *`|user|add tasks to my tasklist|track all of my tasks I have easily|","lastModifiedDate":"2021-11-07"},{"lineNumber":374,"author":{"gitId":"APZH"},"content":"|`* * *`|user|view all my tasks in my tasklist|know which tasks are soon to be due|","lastModifiedDate":"2021-11-07"},{"lineNumber":375,"author":{"gitId":"APZH"},"content":"|`* *`|user|have different kinds of task types|know the nature of my task|","lastModifiedDate":"2021-11-07"},{"lineNumber":376,"author":{"gitId":"APZH"},"content":"|`* *`|user|set priorities to tasks in my tasklist|know which tasks are more important than others|","lastModifiedDate":"2021-11-07"},{"lineNumber":377,"author":{"gitId":"APZH"},"content":"|`* *`|user|set a task to recur automatically|reduce the number of times I need to update the tasklist|","lastModifiedDate":"2021-11-07"},{"lineNumber":378,"author":{"gitId":"APZH"},"content":"|`* *`|user|add zoom links to a lesson task|save time spent finding the zoom link|","lastModifiedDate":"2021-11-07"},{"lineNumber":379,"author":{"gitId":"APZH"},"content":"|`* *`|user|launch zoom links from the application|save time opening browser|","lastModifiedDate":"2021-11-07"},{"lineNumber":380,"author":{"gitId":"APZH"},"content":"|`* *`|user|filter my tasklist|find tasks that match a certain criteria quickly|","lastModifiedDate":"2021-11-07"},{"lineNumber":381,"author":{"gitId":"APZH"},"content":"|`* *`|user|view the upcoming recurrences of a task|plan my schedule accordingly|","lastModifiedDate":"2021-11-07"},{"lineNumber":382,"author":{"gitId":"APZH"},"content":"|`* *`|user|sort my tasklist by priority|view the most important tasks I have at the top of the tasklist|","lastModifiedDate":"2021-11-07"},{"lineNumber":383,"author":{"gitId":"APZH"},"content":"|`* *`|user|edit my tasks|reduce the number of times I have to add new tasks|","lastModifiedDate":"2021-11-07"},{"lineNumber":384,"author":{"gitId":"APZH"},"content":"|`* *`|user|set reminders for my tasks|will not forget if I have a task upcoming|","lastModifiedDate":"2021-11-07"},{"lineNumber":385,"author":{"gitId":"APZH"},"content":"|`*`|user|have tab completion|reduce the time spent typing commands|","lastModifiedDate":"2021-11-07"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":387,"author":{"gitId":"APZH"},"content":"### 5.3 Non-Functional Requirements","lastModifiedDate":"2021-11-07"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":389,"author":{"gitId":"APZH"},"content":"1. Should work on any mainstream OS as long as it has Java 11 or above installed.","lastModifiedDate":"2021-11-03"},{"lineNumber":390,"author":{"gitId":"APZH"},"content":"2. Should be able to hold up to 100 tasks without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-11-07"},{"lineNumber":391,"author":{"gitId":"APZH"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) ","lastModifiedDate":"2021-11-07"},{"lineNumber":392,"author":{"gitId":"APZH"},"content":"should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-11-03"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":394,"author":{"gitId":"APZH"},"content":"### 5.4 Glossary","lastModifiedDate":"2021-11-07"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":396,"author":{"gitId":"APZH"},"content":"* *Mainstream OS* - Windows, Linux, Unix, OS-X","lastModifiedDate":"2021-11-03"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":398,"author":{"gitId":"APZH"},"content":"## 6. Appendix: Instructions for manual testing","lastModifiedDate":"2021-11-03"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":400,"author":{"gitId":"APZH"},"content":"### Launch and Exit","lastModifiedDate":"2021-11-07"},{"lineNumber":401,"author":{"gitId":"APZH"},"content":"Initial Launch:","lastModifiedDate":"2021-11-07"},{"lineNumber":402,"author":{"gitId":"APZH"},"content":"1. Download the **SchedUrMods** latest JAR file [here](https://github.com/AY2122S1-CS2113T-W13-3/tp) and copy it into an empty folder.","lastModifiedDate":"2021-11-07"},{"lineNumber":403,"author":{"gitId":"APZH"},"content":"2. Launch a terminal from the folder containing the **SchedUrMods** JAR file.","lastModifiedDate":"2021-11-07"},{"lineNumber":404,"author":{"gitId":"APZH"},"content":"3. Type `java -jar SchedUrMods.jar` into the terminal to start **SchedUrMods**.","lastModifiedDate":"2021-11-07"},{"lineNumber":405,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":406,"author":{"gitId":"APZH"},"content":"    **Expected Output**: The welcome screen of the **SchedUrMods** application (Logo + User Interface)","lastModifiedDate":"2021-11-07"},{"lineNumber":407,"author":{"gitId":"APZH"},"content":"    with the corresponding correct version number.","lastModifiedDate":"2021-11-07"},{"lineNumber":408,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":409,"author":{"gitId":"APZH"},"content":"    ```","lastModifiedDate":"2021-11-07"},{"lineNumber":410,"author":{"gitId":"APZH"},"content":"     _____        _                _  _   _       ___  ___            _","lastModifiedDate":"2021-11-07"},{"lineNumber":411,"author":{"gitId":"APZH"},"content":"    /  ___|      | |              | || | | |      |  \\/  |           | |","lastModifiedDate":"2021-11-07"},{"lineNumber":412,"author":{"gitId":"APZH"},"content":"    \\ `--.   ___ | |__    ___   __| || | | | _ __ | .  . |  ___    __| | ___","lastModifiedDate":"2021-11-07"},{"lineNumber":413,"author":{"gitId":"APZH"},"content":"    `--.  \\ / __|| \u0027_ \\  / _ \\ / _` || | | || \u0027_| | |\\/| | / _ \\  / _` |/ __|","lastModifiedDate":"2021-11-07"},{"lineNumber":414,"author":{"gitId":"APZH"},"content":"    /\\__/ /| (__ | | | ||  __/| (_| || |_| || |   | |  | || (_) || (_| |\\__ \\","lastModifiedDate":"2021-11-07"},{"lineNumber":415,"author":{"gitId":"APZH"},"content":"    \\____/  \\___||_| |_| \\___| \\__,_| \\___/ |_|   \\_|  |_/ \\___/  \\__,_||___/","lastModifiedDate":"2021-11-07"},{"lineNumber":416,"author":{"gitId":"APZH"},"content":"    -------------------------------------------------------------------------","lastModifiedDate":"2021-11-07"},{"lineNumber":417,"author":{"gitId":"APZH"},"content":"    Command-Line Interface for NUSMODS                               (v2.1.0)","lastModifiedDate":"2021-11-07"},{"lineNumber":418,"author":{"gitId":"APZH"},"content":"    -------------------------------------------------------------------------","lastModifiedDate":"2021-11-07"},{"lineNumber":419,"author":{"gitId":"APZH"},"content":"    [user]:","lastModifiedDate":"2021-11-07"},{"lineNumber":420,"author":{"gitId":"APZH"},"content":"    ```","lastModifiedDate":"2021-11-07"},{"lineNumber":421,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":422,"author":{"gitId":"APZH"},"content":"Exiting the application:","lastModifiedDate":"2021-11-07"},{"lineNumber":423,"author":{"gitId":"APZH"},"content":"1. Type `bye` into the terminal to exit **SchedUrMods**.","lastModifiedDate":"2021-11-07"},{"lineNumber":424,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":425,"author":{"gitId":"APZH"},"content":"   **Expected Output**: Message indicating that the program is exiting.","lastModifiedDate":"2021-11-07"},{"lineNumber":426,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":427,"author":{"gitId":"APZH"},"content":"    ```","lastModifiedDate":"2021-11-07"},{"lineNumber":428,"author":{"gitId":"APZH"},"content":"    -------------------------------------------------------------------------","lastModifiedDate":"2021-11-07"},{"lineNumber":429,"author":{"gitId":"APZH"},"content":"    [user]: bye","lastModifiedDate":"2021-11-07"},{"lineNumber":430,"author":{"gitId":"APZH"},"content":"    || Exiting program!","lastModifiedDate":"2021-11-07"},{"lineNumber":431,"author":{"gitId":"APZH"},"content":"    -------------------------------------------------------------------------","lastModifiedDate":"2021-11-07"},{"lineNumber":432,"author":{"gitId":"APZH"},"content":"    ```","lastModifiedDate":"2021-11-07"},{"lineNumber":433,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":434,"author":{"gitId":"APZH"},"content":"### Listing the Tasklist","lastModifiedDate":"2021-11-07"},{"lineNumber":435,"author":{"gitId":"APZH"},"content":"**Case A**: Tasklist is empty","lastModifiedDate":"2021-11-07"},{"lineNumber":436,"author":{"gitId":"APZH"},"content":"1. Type `list`","lastModifiedDate":"2021-11-07"},{"lineNumber":437,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":438,"author":{"gitId":"APZH"},"content":"   **Expected Output**: Warning message informing user that the tasklist is empty.","lastModifiedDate":"2021-11-07"},{"lineNumber":439,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":440,"author":{"gitId":"APZH"},"content":"**Case B**: Tasklist is not empty","lastModifiedDate":"2021-11-07"},{"lineNumber":441,"author":{"gitId":"APZH"},"content":"1. Type `list`","lastModifiedDate":"2021-11-07"},{"lineNumber":442,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":443,"author":{"gitId":"APZH"},"content":"   **Expected Output**: List of the user\u0027s tasks that was added before.","lastModifiedDate":"2021-11-07"},{"lineNumber":444,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":445,"author":{"gitId":"APZH"},"content":"### Filtering the Tasklist","lastModifiedDate":"2021-11-07"},{"lineNumber":446,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":447,"author":{"gitId":"APZH"},"content":"\u003e💡 **Note**: If none of the filters match, only the header of the tasklist will be returned.","lastModifiedDate":"2021-11-07"},{"lineNumber":448,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":449,"author":{"gitId":"APZH"},"content":"**Case A**: By task type","lastModifiedDate":"2021-11-07"},{"lineNumber":450,"author":{"gitId":"APZH"},"content":"1. Type `list --type todo`","lastModifiedDate":"2021-11-07"},{"lineNumber":451,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":452,"author":{"gitId":"APZH"},"content":"   **Expected Output**: List of all the `Todo` type tasks.","lastModifiedDate":"2021-11-07"},{"lineNumber":453,"author":{"gitId":"APZH"},"content":"2. Type `list --type deadline`","lastModifiedDate":"2021-11-07"},{"lineNumber":454,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":455,"author":{"gitId":"APZH"},"content":"   **Expected Output**: List of all the `Deadline` type tasks.","lastModifiedDate":"2021-11-07"},{"lineNumber":456,"author":{"gitId":"APZH"},"content":"3. Type `list --type event`","lastModifiedDate":"2021-11-07"},{"lineNumber":457,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":458,"author":{"gitId":"APZH"},"content":"   **Expected Output**: List of all the `Event` type tasks.","lastModifiedDate":"2021-11-07"},{"lineNumber":459,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":460,"author":{"gitId":"APZH"},"content":"**Case B**: By priority","lastModifiedDate":"2021-11-07"},{"lineNumber":461,"author":{"gitId":"APZH"},"content":"1. Type `list --priority low`","lastModifiedDate":"2021-11-07"},{"lineNumber":462,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":463,"author":{"gitId":"APZH"},"content":"   **Expected Output**: List of all the tasks with priority `low`.","lastModifiedDate":"2021-11-07"},{"lineNumber":464,"author":{"gitId":"APZH"},"content":"2. Type `list --priority medium`","lastModifiedDate":"2021-11-07"},{"lineNumber":465,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":466,"author":{"gitId":"APZH"},"content":"   **Expected Output**: List of all the tasks with priority `medium`","lastModifiedDate":"2021-11-07"},{"lineNumber":467,"author":{"gitId":"APZH"},"content":"3. Type `list --priority high`","lastModifiedDate":"2021-11-07"},{"lineNumber":468,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":469,"author":{"gitId":"APZH"},"content":"   **Expected Output**: List of all the tasks with priority `high`","lastModifiedDate":"2021-11-07"},{"lineNumber":470,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":471,"author":{"gitId":"APZH"},"content":"**Case C**: By recurrence","lastModifiedDate":"2021-11-07"},{"lineNumber":472,"author":{"gitId":"APZH"},"content":"1. Type `list --recur none`","lastModifiedDate":"2021-11-07"},{"lineNumber":473,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":474,"author":{"gitId":"APZH"},"content":"   **Expected Output**: List of all the tasks do not recur.","lastModifiedDate":"2021-11-07"},{"lineNumber":475,"author":{"gitId":"APZH"},"content":"2. Type `list --recur daily`","lastModifiedDate":"2021-11-07"},{"lineNumber":476,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":477,"author":{"gitId":"APZH"},"content":"   **Expected Output**: List of all the tasks that recurs `daily`","lastModifiedDate":"2021-11-07"},{"lineNumber":478,"author":{"gitId":"APZH"},"content":"3. Type `list --recur weekly`","lastModifiedDate":"2021-11-07"},{"lineNumber":479,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":480,"author":{"gitId":"APZH"},"content":"   **Expected Output**: List of all the tasks that recurs `weekly`","lastModifiedDate":"2021-11-07"},{"lineNumber":481,"author":{"gitId":"APZH"},"content":"4. Type `list --recur monthly`","lastModifiedDate":"2021-11-07"},{"lineNumber":482,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":483,"author":{"gitId":"APZH"},"content":"   **Expected Output**: List of all the tasks that recurs `monthly`","lastModifiedDate":"2021-11-07"},{"lineNumber":484,"author":{"gitId":"APZH"},"content":"5. Type `list --recur yearly`","lastModifiedDate":"2021-11-07"},{"lineNumber":485,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":486,"author":{"gitId":"APZH"},"content":"   **Expected Output**: List of all the tasks that recurs `yearly`","lastModifiedDate":"2021-11-07"},{"lineNumber":487,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":488,"author":{"gitId":"APZH"},"content":"### Sorting the Tasklist","lastModifiedDate":"2021-11-07"},{"lineNumber":489,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":490,"author":{"gitId":"APZH"},"content":"\u003e💡 **Pre-requisite**: Add at least 1 tasks of each task type and priority, and name all task descriptions","lastModifiedDate":"2021-11-07"},{"lineNumber":491,"author":{"gitId":"APZH"},"content":"\u003e after the letters of the alphabets.","lastModifiedDate":"2021-11-07"},{"lineNumber":492,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":493,"author":{"gitId":"APZH"},"content":"**Case A**: Sort by task type","lastModifiedDate":"2021-11-07"},{"lineNumber":494,"author":{"gitId":"APZH"},"content":"1. Type `sort --by type`","lastModifiedDate":"2021-11-07"},{"lineNumber":495,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":496,"author":{"gitId":"APZH"},"content":"   **Expected Output**: Message informing user that the tasklist has been sorted by task type.","lastModifiedDate":"2021-11-07"},{"lineNumber":497,"author":{"gitId":"APZH"},"content":"2. Type `list`","lastModifiedDate":"2021-11-07"},{"lineNumber":498,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":499,"author":{"gitId":"APZH"},"content":"   **Expected Output**: All tasks with same task types are now grouped together in the tasklist.","lastModifiedDate":"2021-11-07"},{"lineNumber":500,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":501,"author":{"gitId":"APZH"},"content":"**Case B**: Sort by description","lastModifiedDate":"2021-11-07"},{"lineNumber":502,"author":{"gitId":"APZH"},"content":"1. Type `sort --by description`","lastModifiedDate":"2021-11-07"},{"lineNumber":503,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":504,"author":{"gitId":"APZH"},"content":"   **Expected Output**: Message informing user that the tasklist has been sorted in alphabetical order.","lastModifiedDate":"2021-11-07"},{"lineNumber":505,"author":{"gitId":"APZH"},"content":"2. Type `list`","lastModifiedDate":"2021-11-07"},{"lineNumber":506,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":507,"author":{"gitId":"APZH"},"content":"   **Expected Output**: All tasks are now sorted alphabetically.","lastModifiedDate":"2021-11-07"},{"lineNumber":508,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":509,"author":{"gitId":"APZH"},"content":"**Case B**: Sort by priority","lastModifiedDate":"2021-11-07"},{"lineNumber":510,"author":{"gitId":"APZH"},"content":"1. Type `sort --by priority`","lastModifiedDate":"2021-11-07"},{"lineNumber":511,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":512,"author":{"gitId":"APZH"},"content":"   **Expected Output**: Message informing user that the tasklist has been sorted by priority.","lastModifiedDate":"2021-11-07"},{"lineNumber":513,"author":{"gitId":"APZH"},"content":"2. Type `list`","lastModifiedDate":"2021-11-07"},{"lineNumber":514,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":515,"author":{"gitId":"APZH"},"content":"   **Expected Output**: All tasks are now sorted from highest to lowest priority.","lastModifiedDate":"2021-11-07"},{"lineNumber":516,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":517,"author":{"gitId":"APZH"},"content":"### Viewing the recurrence of a task","lastModifiedDate":"2021-11-07"},{"lineNumber":518,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":519,"author":{"gitId":"APZH"},"content":"\u003e💡 **Pre-requisite**: Add 1 task into the tasklist with a recurrence value of `daily`. The recurrence","lastModifiedDate":"2021-11-07"},{"lineNumber":520,"author":{"gitId":"APZH"},"content":"\u003e value can be modified and changed to  test the correctness of the recurrence feature.","lastModifiedDate":"2021-11-07"},{"lineNumber":521,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":522,"author":{"gitId":"APZH"},"content":"**Case A**: Task is a non-recurring task","lastModifiedDate":"2021-11-07"},{"lineNumber":523,"author":{"gitId":"APZH"},"content":"1. Type `list \u003ctask id of a non-recurring task\u003e`","lastModifiedDate":"2021-11-07"},{"lineNumber":524,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":525,"author":{"gitId":"APZH"},"content":"   **Expected Output**: Warning message telling the user that the selected task is non-recurring and to choose another task.","lastModifiedDate":"2021-11-07"},{"lineNumber":526,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":527,"author":{"gitId":"APZH"},"content":"**Case B**: Task is a recurring task","lastModifiedDate":"2021-11-07"},{"lineNumber":528,"author":{"gitId":"APZH"},"content":"1. Type `list \u003ctask id of a recurring task\u003e`","lastModifiedDate":"2021-11-07"},{"lineNumber":529,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":530,"author":{"gitId":"APZH"},"content":"    **Expected Output**: The next 4 recurrences of the task that are in increments of the type of recurrence.","lastModifiedDate":"2021-11-07"},{"lineNumber":531,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":532,"author":{"gitId":"SeanRobertDH"},"content":"### Adding a task to task list","lastModifiedDate":"2021-11-08"},{"lineNumber":533,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":534,"author":{"gitId":"SeanRobertDH"},"content":"\u003e💡 **Pre-requisite**: None","lastModifiedDate":"2021-11-08"},{"lineNumber":535,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":536,"author":{"gitId":"SeanRobertDH"},"content":"**Case A**: Adding a deadline","lastModifiedDate":"2021-11-08"},{"lineNumber":537,"author":{"gitId":"SeanRobertDH"},"content":"1. Type `deadline CS2106 Lab 3 --priority high --due 20-10-2021 02:00`","lastModifiedDate":"2021-11-08"},{"lineNumber":538,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":539,"author":{"gitId":"SeanRobertDH"},"content":"   **Expected Output**:","lastModifiedDate":"2021-11-08"},{"lineNumber":540,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":541,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":542,"author":{"gitId":"SeanRobertDH"},"content":"[user]: deadline CS2106 Lab 3 --priority high --due 20-10-2021 02:00","lastModifiedDate":"2021-11-08"},{"lineNumber":543,"author":{"gitId":"SeanRobertDH"},"content":"|| Task created!","lastModifiedDate":"2021-11-08"},{"lineNumber":544,"author":{"gitId":"SeanRobertDH"},"content":"|| [D] CS2106 Lab 3 \u003chigh\u003e {none} (dueDate: 20-10-2021 02:00)","lastModifiedDate":"2021-11-08"},{"lineNumber":545,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":546,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":547,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":548,"author":{"gitId":"SeanRobertDH"},"content":"**Case B**: Adding an event","lastModifiedDate":"2021-11-08"},{"lineNumber":549,"author":{"gitId":"SeanRobertDH"},"content":"1. Type `event Marquee Christmas Party --priority high --start 25-12-2020 22:00 --end 26-12-2020 04:00`","lastModifiedDate":"2021-11-08"},{"lineNumber":550,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":551,"author":{"gitId":"SeanRobertDH"},"content":"   **Expected Output**:","lastModifiedDate":"2021-11-08"},{"lineNumber":552,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":553,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":554,"author":{"gitId":"SeanRobertDH"},"content":"[user]: event Marquee Christmas Party --priority high --start 25-12-2020 22:00 --end 26-12-2020 04:00","lastModifiedDate":"2021-11-08"},{"lineNumber":555,"author":{"gitId":"SeanRobertDH"},"content":"|| Task created!","lastModifiedDate":"2021-11-08"},{"lineNumber":556,"author":{"gitId":"SeanRobertDH"},"content":"|| [E] Marquee Christmas Party \u003chigh\u003e {none} (startDate: 25-12-2020 22:00 - endDate: 26-12-2020 04:00)","lastModifiedDate":"2021-11-08"},{"lineNumber":557,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":558,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":559,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":560,"author":{"gitId":"SeanRobertDH"},"content":"**Case C**: Adding an invalid event (start date after end date)","lastModifiedDate":"2021-11-08"},{"lineNumber":561,"author":{"gitId":"SeanRobertDH"},"content":"1. Type `event Marquee Christmas Party --priority high --start 26-12-2020 22:00 --end 26-12-2020 04:00`","lastModifiedDate":"2021-11-08"},{"lineNumber":562,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":563,"author":{"gitId":"SeanRobertDH"},"content":"   **Expected Output**:","lastModifiedDate":"2021-11-08"},{"lineNumber":564,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":565,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":566,"author":{"gitId":"SeanRobertDH"},"content":"[user]: event Marquee Christmas Party --priority high --start 26-12-2020 22:00 --end 26-12-2020 04:00","lastModifiedDate":"2021-11-08"},{"lineNumber":567,"author":{"gitId":"SeanRobertDH"},"content":"|| Start date provided cannot be after End date!","lastModifiedDate":"2021-11-08"},{"lineNumber":568,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":569,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":570,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":571,"author":{"gitId":"SeanRobertDH"},"content":"**Case D**: Adding an invalid deadline (no due date)","lastModifiedDate":"2021-11-08"},{"lineNumber":572,"author":{"gitId":"SeanRobertDH"},"content":"1. Type `deadline CS2106 Lab 3 --priority high`","lastModifiedDate":"2021-11-08"},{"lineNumber":573,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":574,"author":{"gitId":"SeanRobertDH"},"content":"   **Expected Output**:","lastModifiedDate":"2021-11-08"},{"lineNumber":575,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":576,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":577,"author":{"gitId":"SeanRobertDH"},"content":"[user]: deadline CS2106 Lab 3 --priority high","lastModifiedDate":"2021-11-08"},{"lineNumber":578,"author":{"gitId":"SeanRobertDH"},"content":"|| Required argument \u0027due\u0027 was not provided when creating new deadline.","lastModifiedDate":"2021-11-08"},{"lineNumber":579,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":580,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":581,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":582,"author":{"gitId":"SeanRobertDH"},"content":"**Case E**: Adding an invalid todo (no arguments)","lastModifiedDate":"2021-11-08"},{"lineNumber":583,"author":{"gitId":"SeanRobertDH"},"content":"1. Type `todo`","lastModifiedDate":"2021-11-08"},{"lineNumber":584,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":585,"author":{"gitId":"SeanRobertDH"},"content":"   **Expected Output**:","lastModifiedDate":"2021-11-08"},{"lineNumber":586,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":587,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":588,"author":{"gitId":"SeanRobertDH"},"content":"[user]: todo","lastModifiedDate":"2021-11-08"},{"lineNumber":589,"author":{"gitId":"SeanRobertDH"},"content":"|| Usage: -\u003e Adding a todo: todo \u003cdescription\u003e [--doOn dd-MM-yyyy HH:mm] [--priority high|medium|low] [--recur daily|weekly|monthly|yearly]","lastModifiedDate":"2021-11-08"},{"lineNumber":590,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":591,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":592,"author":{"gitId":"SeanRobertDH"},"content":"**After all your commands**:","lastModifiedDate":"2021-11-08"},{"lineNumber":593,"author":{"gitId":"SeanRobertDH"},"content":"You can type `list` to ensure that all the valid commands have indeed been added to the `TaskManager` `taskList`.","lastModifiedDate":"2021-11-08"},{"lineNumber":594,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":595,"author":{"gitId":"SeanRobertDH"},"content":"\u003e💡 **Note**: This is a non-exhaustive list of test cases. refer to the user guide on the `todo`, `deadline` and `event` commands usage to perform more exploratory testing.","lastModifiedDate":"2021-11-08"},{"lineNumber":596,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":597,"author":{"gitId":"SeanRobertDH"},"content":"### Editing a task in task list","lastModifiedDate":"2021-11-08"},{"lineNumber":598,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":599,"author":{"gitId":"SeanRobertDH"},"content":"\u003e💡 **Pre-requisite**: Use the index from **the most recent list command** to edit the task you wish to edit.","lastModifiedDate":"2021-11-08"},{"lineNumber":600,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":601,"author":{"gitId":"SeanRobertDH"},"content":"**Case A**: editing an event","lastModifiedDate":"2021-11-08"},{"lineNumber":602,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":603,"author":{"gitId":"SeanRobertDH"},"content":"1. Type `event Marquee Christmas Party --priority high --start 25-12-2020 22:00 --end 26-12-2020 04:00`.","lastModifiedDate":"2021-11-08"},{"lineNumber":604,"author":{"gitId":"SeanRobertDH"},"content":"2. Type `list --priority high`.","lastModifiedDate":"2021-11-08"},{"lineNumber":605,"author":{"gitId":"SeanRobertDH"},"content":"3. find the index corresponding to the event `Marquee Christmas Party`. Let\u0027s call this {index}.","lastModifiedDate":"2021-11-08"},{"lineNumber":606,"author":{"gitId":"SeanRobertDH"},"content":"4. Type `edit {index} --description stay home and celebrate Christmas alone --start 25-12-2020 12:00`.","lastModifiedDate":"2021-11-08"},{"lineNumber":607,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":608,"author":{"gitId":"SeanRobertDH"},"content":"   **Expected Output**:","lastModifiedDate":"2021-11-08"},{"lineNumber":609,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":610,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":611,"author":{"gitId":"SeanRobertDH"},"content":"[user]: edit {index} --description stay home and celebrate Christmas alone --start 25-12-2020 12:00","lastModifiedDate":"2021-11-08"},{"lineNumber":612,"author":{"gitId":"SeanRobertDH"},"content":"|| Task(s) edited:","lastModifiedDate":"2021-11-08"},{"lineNumber":613,"author":{"gitId":"SeanRobertDH"},"content":"|| [E] stay home and celebrate Chritmas alone \u003chigh\u003e {none} (startDate: 25-12-2020 12:00 - endDate: 26-12-2020 04:00)","lastModifiedDate":"2021-11-08"},{"lineNumber":614,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":615,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":616,"author":{"gitId":"SeanRobertDH"},"content":"5. Type `list` to see that the task has been edited accordingly.","lastModifiedDate":"2021-11-08"},{"lineNumber":617,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":618,"author":{"gitId":"SeanRobertDH"},"content":"**Case B**: editing an event with invalid argument (start date would end up being after end date)","lastModifiedDate":"2021-11-08"},{"lineNumber":619,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":620,"author":{"gitId":"SeanRobertDH"},"content":"1. Type `event Marquee Christmas Party --priority high --start 25-12-2020 22:00 --end 26-12-2020 04:00`.","lastModifiedDate":"2021-11-08"},{"lineNumber":621,"author":{"gitId":"SeanRobertDH"},"content":"2. Type `list --recur none`.","lastModifiedDate":"2021-11-08"},{"lineNumber":622,"author":{"gitId":"SeanRobertDH"},"content":"3. find the index corresponding to the event `Marquee Christmas Party`. Let\u0027s call this {index}.","lastModifiedDate":"2021-11-08"},{"lineNumber":623,"author":{"gitId":"SeanRobertDH"},"content":"4. Type `edit {index} --description Endigomon says \"Go back to the beginning.\" --end 6-10-2000 12:00`.","lastModifiedDate":"2021-11-08"},{"lineNumber":624,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":625,"author":{"gitId":"SeanRobertDH"},"content":"   **Expected Output**:","lastModifiedDate":"2021-11-08"},{"lineNumber":626,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":627,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":628,"author":{"gitId":"SeanRobertDH"},"content":"[user]: edit {index} --description Endigomon says \"Go back to the beginning.\" --end 6-10-2000 12:00","lastModifiedDate":"2021-11-08"},{"lineNumber":629,"author":{"gitId":"SeanRobertDH"},"content":"|| Start date provided cannot be after End date!","lastModifiedDate":"2021-11-08"},{"lineNumber":630,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":631,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":632,"author":{"gitId":"SeanRobertDH"},"content":"5. Type `list` to see that the task description has been edited but not the end date.","lastModifiedDate":"2021-11-08"},{"lineNumber":633,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":634,"author":{"gitId":"SeanRobertDH"},"content":"**Case C**: editing an event with invalid argument (flag blarg)","lastModifiedDate":"2021-11-08"},{"lineNumber":635,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":636,"author":{"gitId":"SeanRobertDH"},"content":"1. Type `event Marquee Christmas Party --priority high --start 25-12-2020 22:00 --end 26-12-2020 04:00`.","lastModifiedDate":"2021-11-08"},{"lineNumber":637,"author":{"gitId":"SeanRobertDH"},"content":"2. Type `list --type event`.","lastModifiedDate":"2021-11-08"},{"lineNumber":638,"author":{"gitId":"SeanRobertDH"},"content":"3. find the index corresponding to the event `Marquee Christmas Party`. Let\u0027s call this {index}.","lastModifiedDate":"2021-11-08"},{"lineNumber":639,"author":{"gitId":"SeanRobertDH"},"content":"4. Type `edit {index} --description I ran out of ideas --blarg wibble`.","lastModifiedDate":"2021-11-08"},{"lineNumber":640,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":641,"author":{"gitId":"SeanRobertDH"},"content":"   **Expected Output**:","lastModifiedDate":"2021-11-08"},{"lineNumber":642,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":643,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":644,"author":{"gitId":"SeanRobertDH"},"content":"[user]: edit 5 --blarg wibble","lastModifiedDate":"2021-11-08"},{"lineNumber":645,"author":{"gitId":"SeanRobertDH"},"content":"|| Invalid flags Entered:","lastModifiedDate":"2021-11-08"},{"lineNumber":646,"author":{"gitId":"SeanRobertDH"},"content":"|| blarg","lastModifiedDate":"2021-11-08"},{"lineNumber":647,"author":{"gitId":"SeanRobertDH"},"content":"|| Type \u0027edit\u0027 to see command usage.","lastModifiedDate":"2021-11-08"},{"lineNumber":648,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":649,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":650,"author":{"gitId":"SeanRobertDH"},"content":"5. Type `list` to see that the event has not been edited.","lastModifiedDate":"2021-11-08"},{"lineNumber":651,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":652,"author":{"gitId":"SeanRobertDH"},"content":"\u003e💡 **Note**: This is a non-exhaustive list of test cases. refer to the user guide on the `edit` command usage to perform more exploratory testing.","lastModifiedDate":"2021-11-08"},{"lineNumber":653,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":654,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":655,"author":{"gitId":"SeanRobertDH"},"content":"### Deleting tasks in task list","lastModifiedDate":"2021-11-08"},{"lineNumber":656,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":657,"author":{"gitId":"SeanRobertDH"},"content":"\u003e💡 **Pre-requisite**: Use the indexes from **the most recent list command** to delete the tasks you wish to delete.","lastModifiedDate":"2021-11-08"},{"lineNumber":658,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":659,"author":{"gitId":"SeanRobertDH"},"content":"**Case A**: deleting low priority tasks","lastModifiedDate":"2021-11-08"},{"lineNumber":660,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":661,"author":{"gitId":"SeanRobertDH"},"content":"1. Ensure task list is empty","lastModifiedDate":"2021-11-08"},{"lineNumber":662,"author":{"gitId":"SeanRobertDH"},"content":"   - You can type `list` folowed by `delete 1-{last index in list}` to delete all your tasks from your task list.","lastModifiedDate":"2021-11-08"},{"lineNumber":663,"author":{"gitId":"SeanRobertDH"},"content":"2. Type `event event1 --priority low --start 25-12-2020 22:00 --end 26-12-2020 04:00`.","lastModifiedDate":"2021-11-08"},{"lineNumber":664,"author":{"gitId":"SeanRobertDH"},"content":"3. Type `event event2 --priority high --start 25-12-2020 22:00 --end 26-12-2020 04:00`.","lastModifiedDate":"2021-11-08"},{"lineNumber":665,"author":{"gitId":"SeanRobertDH"},"content":"4. Type `event event3 --priority high --start 25-12-2020 22:00 --end 26-12-2020 04:00`.","lastModifiedDate":"2021-11-08"},{"lineNumber":666,"author":{"gitId":"SeanRobertDH"},"content":"5. Type `deadline deadline1 --priority low --due 20-10-2021 02:00`.","lastModifiedDate":"2021-11-08"},{"lineNumber":667,"author":{"gitId":"SeanRobertDH"},"content":"6. Type `deadline deadline2 --priority low --due 20-10-2021 02:00`.","lastModifiedDate":"2021-11-08"},{"lineNumber":668,"author":{"gitId":"SeanRobertDH"},"content":"7. Type `list --priority low`.","lastModifiedDate":"2021-11-08"},{"lineNumber":669,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":670,"author":{"gitId":"SeanRobertDH"},"content":"   **Expected Output**:","lastModifiedDate":"2021-11-08"},{"lineNumber":671,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":672,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":673,"author":{"gitId":"SeanRobertDH"},"content":"[user]: list --priority low","lastModifiedDate":"2021-11-08"},{"lineNumber":674,"author":{"gitId":"SeanRobertDH"},"content":"|| -------------","lastModifiedDate":"2021-11-08"},{"lineNumber":675,"author":{"gitId":"SeanRobertDH"},"content":"||  MY TASKLIST","lastModifiedDate":"2021-11-08"},{"lineNumber":676,"author":{"gitId":"SeanRobertDH"},"content":"|| -------------","lastModifiedDate":"2021-11-08"},{"lineNumber":677,"author":{"gitId":"SeanRobertDH"},"content":"|| 1. [E] event1 \u003clow\u003e {none} (startDate: 25-12-2020 22:00 - endDate: 26-12-2020 04:00)","lastModifiedDate":"2021-11-08"},{"lineNumber":678,"author":{"gitId":"SeanRobertDH"},"content":"|| 2. [D] deadline1 \u003clow\u003e {none} (dueDate: 20-10-2021 02:00)","lastModifiedDate":"2021-11-08"},{"lineNumber":679,"author":{"gitId":"SeanRobertDH"},"content":"|| 3. [D] deadline2 \u003clow\u003e {none} (dueDate: 20-10-2021 02:00)","lastModifiedDate":"2021-11-08"},{"lineNumber":680,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":681,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":682,"author":{"gitId":"SeanRobertDH"},"content":"8. Type `delete 1-3`.","lastModifiedDate":"2021-11-08"},{"lineNumber":683,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":684,"author":{"gitId":"SeanRobertDH"},"content":"   **Expected Output**:","lastModifiedDate":"2021-11-08"},{"lineNumber":685,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":686,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":687,"author":{"gitId":"SeanRobertDH"},"content":"[user]: delete 1-3","lastModifiedDate":"2021-11-08"},{"lineNumber":688,"author":{"gitId":"SeanRobertDH"},"content":"|| Task(s) deleted:","lastModifiedDate":"2021-11-08"},{"lineNumber":689,"author":{"gitId":"SeanRobertDH"},"content":"|| [E] event1 \u003clow\u003e {none} (startDate: 25-12-2020 22:00 - endDate: 26-12-2020 04:00)","lastModifiedDate":"2021-11-08"},{"lineNumber":690,"author":{"gitId":"SeanRobertDH"},"content":"|| [D] deadline1 \u003clow\u003e {none} (dueDate: 20-10-2021 02:00)","lastModifiedDate":"2021-11-08"},{"lineNumber":691,"author":{"gitId":"SeanRobertDH"},"content":"|| [D] deadline2 \u003clow\u003e {none} (dueDate: 20-10-2021 02:00)","lastModifiedDate":"2021-11-08"},{"lineNumber":692,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":693,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":694,"author":{"gitId":"SeanRobertDH"},"content":"9. Type `list`.","lastModifiedDate":"2021-11-08"},{"lineNumber":695,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":696,"author":{"gitId":"SeanRobertDH"},"content":"   **Expected Output**:","lastModifiedDate":"2021-11-08"},{"lineNumber":697,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":698,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":699,"author":{"gitId":"SeanRobertDH"},"content":"[user]: list","lastModifiedDate":"2021-11-08"},{"lineNumber":700,"author":{"gitId":"SeanRobertDH"},"content":"|| -------------","lastModifiedDate":"2021-11-08"},{"lineNumber":701,"author":{"gitId":"SeanRobertDH"},"content":"||  MY TASKLIST","lastModifiedDate":"2021-11-08"},{"lineNumber":702,"author":{"gitId":"SeanRobertDH"},"content":"|| -------------","lastModifiedDate":"2021-11-08"},{"lineNumber":703,"author":{"gitId":"SeanRobertDH"},"content":"|| 1. [E] event2 \u003chigh\u003e {none} (startDate: 25-12-2020 22:00 - endDate: 26-12-2020 04:00)","lastModifiedDate":"2021-11-08"},{"lineNumber":704,"author":{"gitId":"SeanRobertDH"},"content":"|| 2. [E] event3 \u003chigh\u003e {none} (startDate: 25-12-2020 22:00 - endDate: 26-12-2020 04:00)","lastModifiedDate":"2021-11-08"},{"lineNumber":705,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":706,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":707,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":708,"author":{"gitId":"SeanRobertDH"},"content":"**Case B**: Comma Seperated delete","lastModifiedDate":"2021-11-08"},{"lineNumber":709,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":710,"author":{"gitId":"SeanRobertDH"},"content":"1. Follow `Case A` step 1-6","lastModifiedDate":"2021-11-08"},{"lineNumber":711,"author":{"gitId":"SeanRobertDH"},"content":"2. Type `list`.","lastModifiedDate":"2021-11-08"},{"lineNumber":712,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":713,"author":{"gitId":"SeanRobertDH"},"content":"   **Expected Output**:","lastModifiedDate":"2021-11-08"},{"lineNumber":714,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":715,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":716,"author":{"gitId":"SeanRobertDH"},"content":"[user]: list","lastModifiedDate":"2021-11-08"},{"lineNumber":717,"author":{"gitId":"SeanRobertDH"},"content":"|| -------------","lastModifiedDate":"2021-11-08"},{"lineNumber":718,"author":{"gitId":"SeanRobertDH"},"content":"||  MY TASKLIST","lastModifiedDate":"2021-11-08"},{"lineNumber":719,"author":{"gitId":"SeanRobertDH"},"content":"|| -------------","lastModifiedDate":"2021-11-08"},{"lineNumber":720,"author":{"gitId":"SeanRobertDH"},"content":"|| 1. [E] event1 \u003clow\u003e {none} (startDate: 25-12-2020 22:00 - endDate: 26-12-2020 04:00)","lastModifiedDate":"2021-11-08"},{"lineNumber":721,"author":{"gitId":"SeanRobertDH"},"content":"|| 2. [E] event2 \u003chigh\u003e {none} (startDate: 25-12-2020 22:00 - endDate: 26-12-2020 04:00)","lastModifiedDate":"2021-11-08"},{"lineNumber":722,"author":{"gitId":"SeanRobertDH"},"content":"|| 3. [E] event3 \u003chigh\u003e {none} (startDate: 25-12-2020 22:00 - endDate: 26-12-2020 04:00)","lastModifiedDate":"2021-11-08"},{"lineNumber":723,"author":{"gitId":"SeanRobertDH"},"content":"|| 4. [D] deadline1 \u003clow\u003e {none} (dueDate: 20-10-2021 02:00)","lastModifiedDate":"2021-11-08"},{"lineNumber":724,"author":{"gitId":"SeanRobertDH"},"content":"|| 5. [D] deadline2 \u003clow\u003e {none} (dueDate: 20-10-2021 02:00)","lastModifiedDate":"2021-11-08"},{"lineNumber":725,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":726,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":727,"author":{"gitId":"SeanRobertDH"},"content":"3. Type `delete 1,3-4`.","lastModifiedDate":"2021-11-08"},{"lineNumber":728,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":729,"author":{"gitId":"SeanRobertDH"},"content":"   **Expected Output**:","lastModifiedDate":"2021-11-08"},{"lineNumber":730,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":731,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":732,"author":{"gitId":"SeanRobertDH"},"content":"[user]: list","lastModifiedDate":"2021-11-08"},{"lineNumber":733,"author":{"gitId":"SeanRobertDH"},"content":"|| -------------","lastModifiedDate":"2021-11-08"},{"lineNumber":734,"author":{"gitId":"SeanRobertDH"},"content":"||  MY TASKLIST","lastModifiedDate":"2021-11-08"},{"lineNumber":735,"author":{"gitId":"SeanRobertDH"},"content":"|| -------------","lastModifiedDate":"2021-11-08"},{"lineNumber":736,"author":{"gitId":"SeanRobertDH"},"content":"|| 1. [E] event1 \u003clow\u003e {none} (startDate: 25-12-2020 22:00 - endDate: 26-12-2020 04:00)","lastModifiedDate":"2021-11-08"},{"lineNumber":737,"author":{"gitId":"SeanRobertDH"},"content":"|| 2. [E] event2 \u003chigh\u003e {none} (startDate: 25-12-2020 22:00 - endDate: 26-12-2020 04:00)","lastModifiedDate":"2021-11-08"},{"lineNumber":738,"author":{"gitId":"SeanRobertDH"},"content":"|| 3. [E] event3 \u003chigh\u003e {none} (startDate: 25-12-2020 22:00 - endDate: 26-12-2020 04:00)","lastModifiedDate":"2021-11-08"},{"lineNumber":739,"author":{"gitId":"SeanRobertDH"},"content":"|| 4. [D] deadline1 \u003clow\u003e {none} (dueDate: 20-10-2021 02:00)","lastModifiedDate":"2021-11-08"},{"lineNumber":740,"author":{"gitId":"SeanRobertDH"},"content":"|| 5. [D] deadline2 \u003clow\u003e {none} (dueDate: 20-10-2021 02:00)","lastModifiedDate":"2021-11-08"},{"lineNumber":741,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":742,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":743,"author":{"gitId":"SeanRobertDH"},"content":"4. Type `list`.","lastModifiedDate":"2021-11-08"},{"lineNumber":744,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":745,"author":{"gitId":"SeanRobertDH"},"content":"   **Expected Output**:","lastModifiedDate":"2021-11-08"},{"lineNumber":746,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":747,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":748,"author":{"gitId":"SeanRobertDH"},"content":"[user]: list","lastModifiedDate":"2021-11-08"},{"lineNumber":749,"author":{"gitId":"SeanRobertDH"},"content":"|| -------------","lastModifiedDate":"2021-11-08"},{"lineNumber":750,"author":{"gitId":"SeanRobertDH"},"content":"||  MY TASKLIST","lastModifiedDate":"2021-11-08"},{"lineNumber":751,"author":{"gitId":"SeanRobertDH"},"content":"|| -------------","lastModifiedDate":"2021-11-08"},{"lineNumber":752,"author":{"gitId":"SeanRobertDH"},"content":"|| 1. [E] event2 \u003chigh\u003e {none} (startDate: 25-12-2020 22:00 - endDate: 26-12-2020 04:00)","lastModifiedDate":"2021-11-08"},{"lineNumber":753,"author":{"gitId":"SeanRobertDH"},"content":"|| 2. [D] deadline2 \u003clow\u003e {none} (dueDate: 20-10-2021 02:00)","lastModifiedDate":"2021-11-08"},{"lineNumber":754,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":755,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":756,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":757,"author":{"gitId":"SeanRobertDH"},"content":"**Case C**: invalid index","lastModifiedDate":"2021-11-08"},{"lineNumber":758,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":759,"author":{"gitId":"SeanRobertDH"},"content":"1. Select a very large index that does not correspond to any task in your list. e.g. \u00271337\u0027.","lastModifiedDate":"2021-11-08"},{"lineNumber":760,"author":{"gitId":"SeanRobertDH"},"content":"2. Type `list`. ","lastModifiedDate":"2021-11-08"},{"lineNumber":761,"author":{"gitId":"SeanRobertDH"},"content":"3. Type `delete 1337`.","lastModifiedDate":"2021-11-08"},{"lineNumber":762,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":763,"author":{"gitId":"SeanRobertDH"},"content":"   **Expected Output**:","lastModifiedDate":"2021-11-08"},{"lineNumber":764,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":765,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":766,"author":{"gitId":"SeanRobertDH"},"content":"[user]: delete 1337","lastModifiedDate":"2021-11-08"},{"lineNumber":767,"author":{"gitId":"SeanRobertDH"},"content":"|| [!] Task index \u00271337\u0027 does not correspond to any task!","lastModifiedDate":"2021-11-08"},{"lineNumber":768,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":769,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":770,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":771,"author":{"gitId":"SeanRobertDH"},"content":"\u003e💡 **Note**: This is a non-exhaustive list of test cases. refer to the user guide on the `delete` command usage to perform more exploratory testing.","lastModifiedDate":"2021-11-08"},{"lineNumber":772,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":773,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":774,"author":{"gitId":"SeanRobertDH"},"content":"### Saving files","lastModifiedDate":"2021-11-08"},{"lineNumber":775,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":776,"author":{"gitId":"SeanRobertDH"},"content":"As of currently, it is out of scope for our program to handle corrupted data files. As such, we have put a disclaimer in the user guide that the team is not responsible for any loss of data or undefined behaviour if users directly modify the task save file.","lastModifiedDate":"2021-11-08"},{"lineNumber":777,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":778,"author":{"gitId":"SeanRobertDH"},"content":"**Case A**: No permission to write to task save file","lastModifiedDate":"2021-11-08"},{"lineNumber":779,"author":{"gitId":"SeanRobertDH"},"content":"1. Modify `date\\tasks.dat` to read only","lastModifiedDate":"2021-11-08"},{"lineNumber":780,"author":{"gitId":"SeanRobertDH"},"content":"2. Try to create a Task e.g. Type `Todo blah`","lastModifiedDate":"2021-11-08"},{"lineNumber":781,"author":{"gitId":"SeanRobertDH"},"content":"   **Expected Output**:","lastModifiedDate":"2021-11-08"},{"lineNumber":782,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":783,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":784,"author":{"gitId":"SeanRobertDH"},"content":"[user]: todo blah","lastModifiedDate":"2021-11-08"},{"lineNumber":785,"author":{"gitId":"SeanRobertDH"},"content":"|| Task created!","lastModifiedDate":"2021-11-08"},{"lineNumber":786,"author":{"gitId":"SeanRobertDH"},"content":"[2021-11-08 06:04:47] [seedu.tp.storage.DataManager]","lastModifiedDate":"2021-11-08"},{"lineNumber":787,"author":{"gitId":"SeanRobertDH"},"content":"SEVERE: No permission to write to save file. Ensure the program has write access to C:\\Users\\seand\\Documents\\tp\\data\\tasks.dat","lastModifiedDate":"2021-11-08"},{"lineNumber":788,"author":{"gitId":"SeanRobertDH"},"content":"and restart the program to allow created tasks to be saved! ","lastModifiedDate":"2021-11-08"},{"lineNumber":789,"author":{"gitId":"SeanRobertDH"},"content":"|| [T] blah \u003cmedium\u003e {none} (doOn: 08-11-2021 07:00)","lastModifiedDate":"2021-11-08"},{"lineNumber":790,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":791,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":792,"author":{"gitId":"SeanRobertDH"},"content":"The todo will be shown in the task list but will not be reflected in the data folder.","lastModifiedDate":"2021-11-08"},{"lineNumber":793,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":794,"author":{"gitId":"SeanRobertDH"},"content":"**Case B**: File exists with save folder name","lastModifiedDate":"2021-11-08"},{"lineNumber":795,"author":{"gitId":"SeanRobertDH"},"content":"On program run:","lastModifiedDate":"2021-11-08"},{"lineNumber":796,"author":{"gitId":"SeanRobertDH"},"content":"   **Expected Output**:","lastModifiedDate":"2021-11-08"},{"lineNumber":797,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":798,"author":{"gitId":"SeanRobertDH"},"content":"[2021-11-08 06:03:21] [seedu.tp.storage.FileCreator]","lastModifiedDate":"2021-11-08"},{"lineNumber":799,"author":{"gitId":"SeanRobertDH"},"content":"SEVERE: File \u0027data\u0027 already exists in project folder. Please remove it and restart the application to be able to save tasks!","lastModifiedDate":"2021-11-08"},{"lineNumber":800,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":801,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"APZH":370,"SuibianP":28,"SeanRobertDH":373,"-":30}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"APZH"},"content":"# SchedUrMods","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"APZH"},"content":"**SchedUrMods** is a desktop application for NUS students who wish to manage","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"APZH"},"content":"their assignments and semester-related information via CLI (command-line interface).","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"APZH"},"content":"If you can type fast, SchedUrMods can help you manage your daily tasks faster than","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"APZH"},"content":"traditional GUI application.","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"APZH":5,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"APZH"},"content":"# SchedUrMods User Guide","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"APZH"},"content":"SchedUrMods is a **desktop application for NUS Students to manage their NUSMODS timetable and","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"everyday tasks optimised for usage via a Command Line Interface (CLI).** If you can type fast, ","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"SchedUrMods can help you manage your daily tasks faster as compared to a traditional GUI application.","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"Below is the guide on how you can get started using our program to start **\"Scheduling Ur Mods!\"**.  ","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"## Overview \u003ca id\u003d\"scrollToHere\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"APZH"},"content":"- [1. Quick Start](#1-quick-start)","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"APZH"},"content":"- [2. Features](#2-features)","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"APZH"},"content":"    - [2.1 Viewing help: `help`](#21-viewing-help--help)","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"    - [2.2 Adding your tasks:](#22-adding-your-tasks)","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"APZH"},"content":"      - [2.2.1 Todo: `todo`](#221-todo-todo)","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"APZH"},"content":"      - [2.2.2 Deadline: `deadline`](#222-deadline-deadline)","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"APZH"},"content":"      - [2.2.3 Event: `event`](#223-event-event)","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"      - [2.2.4 Date Format: `\u003cdateFormat\u003e`](#224-date-format-dateformat)","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"    - [2.3 Listing your tasks: `list`](#23-listing-your-tasks-list)","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"      - [2.3.1 Listing your entire task list](#231-listing-your-entire-task-list)","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"      - [2.3.2 Filtering your task list](#232-filtering-your-task-list)","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"      - [2.3.3 Listing the recurrence of a task](#233-listing-the-recurrence-of-a-task)","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"      - [2.3.4 Listing your upcoming tasks: `upcoming`](#234-listing-your-upcoming-tasks-upcoming)","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"    - [2.4 Sorting your task list: `sort`](#24-sorting-your-task-list-sort)","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"    - [2.5 Setting reminders to your tasks: `reminder`](#25-setting-reminders-to-your-tasks-reminder)","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"    - [2.6 Editing your tasks: `edit`](#26-editing-your-tasks-edit)","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"    - [2.7 Adding your NUS timetable:](#27-adding-your-nus-timetable)","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"      - [2.7.1 Module: `module`](#271-module-module)","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"      - [2.7.2 Browse: `browse`](#272-browse-browse)","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"APZH"},"content":"    - [2.8 Deleting your tasks: `delete`](#28-deleting-your-tasks-delete)","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"APZH"},"content":"    - [2.9 Exiting the program: `bye`](#29-exiting-the-program-bye)","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"    - [2.10 Storage](#210-storage)","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"APZH"},"content":"- [3. FAQ](#3-faq)","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"APZH"},"content":"- [4. Command Summary](#4-command-summary)","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"APZH"},"content":"## 1. Quick Start","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"1. Ensure you have [Java **11** jdk](https://docs.aws.amazon.com/corretto/latest/corretto-11-ug/downloads-list.html) installed in your Computer, ","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"SuibianP"},"content":"and that `java` is in your `PATH` environment variable.","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"SuibianP"},"content":"2. Download the latest zip file from [here](https://github.com/AY2122S1-CS2113T-W13-3/tp/releases/latest).","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"SuibianP"},"content":"3. Decompress the zip file to the folder you want to use as the _home folder_ for SchedUrMods.","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"SuibianP"},"content":"   \u003e **⚠️Warning**: Only decompress the zip file. Do *not* decompress any jar file even if it shows as an archive on your file manager.","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"   \u003e💡 **Note**: Ensure you have permission to create files and folders in this _home folder_.","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"SuibianP"},"content":"4. Open a terminal window in the _home folder_ you designated in step 3.","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"SeanRobertDH"},"content":"5. Type `java -jar SchedUrMods.jar` into the terminal to start SchedUrMods.","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"SeanRobertDH"},"content":"6. The following display should appear in a few seconds:","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"APZH"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"APZH"},"content":" _____        _                _  _   _       ___  ___            _","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"APZH"},"content":"/  ___|      | |              | || | | |      |  \\/  |           | |","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"APZH"},"content":"\\ `--.   ___ | |__    ___   __| || | | | _ __ | .  . |  ___    __| | ___","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"SeanRobertDH"},"content":"`--.  \\ / __|| \u0027_ \\  / _ \\ / _` || | | || \u0027_| | |\\/| | / _ \\  / _` |/ __|","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"APZH"},"content":"/\\__/ /| (__ | | | ||  __/| (_| || |_| || |   | |  | || (_) || (_| |\\__ \\","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"APZH"},"content":"\\____/  \\___||_| |_| \\___| \\__,_| \\___/ |_|   \\_|  |_/ \\___/  \\__,_||___/","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"APZH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"APZH"},"content":"Command-Line Interface for NUSMODS                               (v2.1.0)","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"APZH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"APZH"},"content":"[user]:","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"APZH"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"APZH"},"content":"7. You may now enter commands into SchedUrMods. Type a command beside","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"SeanRobertDH"},"content":"`[user]:` (as shown above) and press `Enter` on your keyboard to execute the command.","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"APZH"},"content":"8. Refer to the [Features](#2-features) below for details of each command.","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"APZH"},"content":"## 2. Features","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"APZH"},"content":"### 2.1 Viewing help : `help`","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"SeanRobertDH"},"content":"Displays all available commands for the SchedUrMods application.","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"SeanRobertDH"},"content":"**Format**: `help`","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"SeanRobertDH"},"content":"### 2.2 Adding your tasks:","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"APZH"},"content":"\u003e #### 📝 **Some notes when adding tasks**:","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"SeanRobertDH"},"content":"\u003e - All commands are case-insensitive. For example, `todo` is the same as `Todo` or `TODO`.","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"SeanRobertDH"},"content":"\u003e - Command arguments within `\u003c \u003e` are **mandatory** fields and must be followed strictly.","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"SeanRobertDH"},"content":"\u003e - Command arguments within `[ ]` are **optional** fields and may be arranged in any order or left out.","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"SeanRobertDH"},"content":"\u003e - Command arguments such as `\u003ca|b|c\u003e` Means that the argument must **strictly** either be `a`, `b` or `c`. ","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"SeanRobertDH"},"content":"\u003e - If `[--priority \u003chigh|medium|low\u003e]` flag is not used, the **default priority** will be set to `medium`. ","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"SeanRobertDH"},"content":"\u003e - If `[--recur \u003cnone|daily|weekly|monthly|yearly\u003e]` flag is not used, the **default recurrence** will be set to `none`. ","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"APZH"},"content":"### 2.2.1 Todo: `todo`","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"SeanRobertDH"},"content":"Adds your **todo** to your task list.","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"SeanRobertDH"},"content":"**Format**: `todo \u003cdescription\u003e [--flag \u003cargument\u003e]`","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"SeanRobertDH"},"content":"- `\u003cdescription\u003e` specifies the description of your todo.","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"SeanRobertDH"},"content":"- `[--flag \u003cargument\u003e]` specifies optional details of your todo.","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"SeanRobertDH"},"content":"  - When your task is to be done: \u003ccode\u003e[--doOn \u003ca href\u003d\"#224-date-format-dateformat\"\u003e\u0026lt;dateFormat\u0026gt;\u003c/a\u003e]\u003c/code\u003e.","lastModifiedDate":"2021-11-08"},{"lineNumber":85,"author":{"gitId":"SeanRobertDH"},"content":"     \u003e💡 **Note**: if flag is unused, date will be set to the current time rounded up to the nearest hour.","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"SeanRobertDH"},"content":"  - The priority of your task: `[--priority high|medium|low]`.","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"SeanRobertDH"},"content":"  - How often your task is to repeat: `[--recur daily|weekly|monthly|yearly]`.","lastModifiedDate":"2021-11-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"SeanRobertDH"},"content":"**Example**: `todo read book --doOn 20-10-2021 02:00 --recur daily`","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"SeanRobertDH"},"content":"- Adds a todo task with the description \u0027`read book`\u0027 to your task list.","lastModifiedDate":"2021-11-08"},{"lineNumber":91,"author":{"gitId":"SeanRobertDH"},"content":"- Specifies that the priority of the task is \u0027`medium`\u0027 (default priority).","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"SeanRobertDH"},"content":"- Specifies that the task is to be done on \u0027`20-10-2021 02:00`\u0027.","lastModifiedDate":"2021-11-08"},{"lineNumber":93,"author":{"gitId":"SeanRobertDH"},"content":"- Specifies that the task is to repeat \u0027`daily`\u0027.","lastModifiedDate":"2021-11-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"SeanRobertDH"},"content":"**Expected Outcome**:","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"APZH"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"APZH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"SeanRobertDH"},"content":"[user]: todo read book --doOn 20-10-2021 02:00 --recur daily","lastModifiedDate":"2021-11-08"},{"lineNumber":100,"author":{"gitId":"APZH"},"content":"|| Task created!","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"SeanRobertDH"},"content":"|| [T] read book \u003cmedium\u003e {daily} (doOn: 20-10-2021 02:00)","lastModifiedDate":"2021-11-08"},{"lineNumber":102,"author":{"gitId":"APZH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"APZH"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"APZH"},"content":"### 2.2.2 Deadline: `deadline`","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"SeanRobertDH"},"content":"Adds your **deadline** to your task list.","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"SeanRobertDH"},"content":"**Format**: `deadline \u003cdescription\u003e \u003c--due dd/MM/yyyy HH:mm\u003e [--flag \u003cargument\u003e]`","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"SeanRobertDH"},"content":"- `\u003cdescription\u003e` specifies the description of your deadline.","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"SeanRobertDH"},"content":"- \u003ccode\u003e\u0026lt;--due \u003ca href\u003d\"#224-date-format-dateformat\"\u003e\u0026lt;dateFormat\u0026gt;\u003c/a\u003e\u0026gt;\u003c/code\u003e specifies when your deadline is due.","lastModifiedDate":"2021-11-08"},{"lineNumber":111,"author":{"gitId":"SeanRobertDH"},"content":"- `[--flag \u003cargument\u003e]` specifies optional details of your deadline.","lastModifiedDate":"2021-11-05"},{"lineNumber":112,"author":{"gitId":"SeanRobertDH"},"content":"  - The priority of your task: `[--priority \u003chigh|medium|low\u003e]`.","lastModifiedDate":"2021-11-08"},{"lineNumber":113,"author":{"gitId":"SeanRobertDH"},"content":"  - How often your task is to repeat: `[--recur \u003cnone|daily|weekly|monthly|yearly\u003e]`.","lastModifiedDate":"2021-11-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"SeanRobertDH"},"content":"**Example**: `deadline CS2106 Lab 3 --priority high --due 20-10-2021 02:00`","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"SeanRobertDH"},"content":"- Adds a deadline task with the description \u0027`CS2106 Lab 3`\u0027 to your task list.","lastModifiedDate":"2021-11-08"},{"lineNumber":117,"author":{"gitId":"SeanRobertDH"},"content":"- Specifies that the priority of the task is \u0027`high`\u0027.","lastModifiedDate":"2021-11-08"},{"lineNumber":118,"author":{"gitId":"SeanRobertDH"},"content":"- Specifies that the task is to be done on \u0027`20-10-2021 02:00`\u0027.","lastModifiedDate":"2021-11-08"},{"lineNumber":119,"author":{"gitId":"SeanRobertDH"},"content":"- Specifies that the task will have no recurrence (default recurrence).","lastModifiedDate":"2021-11-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"SeanRobertDH"},"content":"**Expected Outcome**:","lastModifiedDate":"2021-11-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"APZH"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"SeanRobertDH"},"content":"[user]: deadline CS2106 Lab 3 --priority high --due 20-10-2021 02:00","lastModifiedDate":"2021-11-05"},{"lineNumber":126,"author":{"gitId":"SeanRobertDH"},"content":"|| Task created!","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"SeanRobertDH"},"content":"|| [D] CS2106 Lab 3 \u003chigh\u003e {none} (dueDate: 20-10-2021 02:00)","lastModifiedDate":"2021-11-05"},{"lineNumber":128,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"APZH"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"APZH"},"content":"### 2.2.3 Event: `event`","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"SeanRobertDH"},"content":"Adds your **event** to your task list.","lastModifiedDate":"2021-11-05"},{"lineNumber":133,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"SeanRobertDH"},"content":"**Format**: `event \u003cdescription\u003e \u003c--start dd/MM/yyyy HH:mm\u003e \u003c--end dd/MM/yyyy HH:mm\u003e [--flag \u003cargument\u003e]`","lastModifiedDate":"2021-11-05"},{"lineNumber":135,"author":{"gitId":"SeanRobertDH"},"content":"- `\u003cdescription\u003e` specifies the description of your event.","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"SeanRobertDH"},"content":"- \u003ccode\u003e\u0026lt;--start \u003ca href\u003d\"#224-date-format-dateformat\"\u003e\u0026lt;dateFormat\u0026gt;\u003c/a\u003e\u0026gt;\u003c/code\u003e specifies when your event starts.","lastModifiedDate":"2021-11-05"},{"lineNumber":137,"author":{"gitId":"SeanRobertDH"},"content":"- \u003ccode\u003e\u0026lt;--end \u003ca href\u003d\"#224-date-format-dateformat\"\u003e\u0026lt;dateFormat\u0026gt;\u003c/a\u003e\u0026gt;\u003c/code\u003e specifies when your event ends.","lastModifiedDate":"2021-11-05"},{"lineNumber":138,"author":{"gitId":"SeanRobertDH"},"content":"- `[--flag \u003cargument\u003e]` specifies optional details of your event.","lastModifiedDate":"2021-11-05"},{"lineNumber":139,"author":{"gitId":"SeanRobertDH"},"content":"  - The priority of your task: `[--priority \u003chigh|medium|low\u003e]`.","lastModifiedDate":"2021-11-08"},{"lineNumber":140,"author":{"gitId":"SeanRobertDH"},"content":"  - How often your task is to repeat: `[--recur \u003cnone|daily|weekly|monthly|yearly\u003e]`.","lastModifiedDate":"2021-11-08"},{"lineNumber":141,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"SeanRobertDH"},"content":"**Example**: `event Marquee Christmas Party --priority high --start 25-12-2020 22:00 --end 26-12-2020 04:00`","lastModifiedDate":"2021-11-05"},{"lineNumber":143,"author":{"gitId":"SeanRobertDH"},"content":"- Adds an event task with the description \u0027`Marquee Christmas Party`\u0027 to your task list.","lastModifiedDate":"2021-11-08"},{"lineNumber":144,"author":{"gitId":"SeanRobertDH"},"content":"- Specifies that the priority of the task is \u0027`high`\u0027.","lastModifiedDate":"2021-11-08"},{"lineNumber":145,"author":{"gitId":"SeanRobertDH"},"content":"- Specifies that the task starts on \u0027`25-12-2020 22:00`\u0027 and ends on \u0027`26-12-2020 04:00`\u0027.","lastModifiedDate":"2021-11-08"},{"lineNumber":146,"author":{"gitId":"SeanRobertDH"},"content":"- Specifies that the task will have no recurrence (default recurrence).","lastModifiedDate":"2021-11-08"},{"lineNumber":147,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"SeanRobertDH"},"content":"**Expected Outcome**:","lastModifiedDate":"2021-11-05"},{"lineNumber":149,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":150,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-05"},{"lineNumber":151,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-05"},{"lineNumber":152,"author":{"gitId":"SeanRobertDH"},"content":"[user]: event Marquee Christmas Party --priority high --start 25-12-2020 22:00 --end 26-12-2020 04:00","lastModifiedDate":"2021-11-05"},{"lineNumber":153,"author":{"gitId":"SeanRobertDH"},"content":"|| Task created!","lastModifiedDate":"2021-11-05"},{"lineNumber":154,"author":{"gitId":"SeanRobertDH"},"content":"|| [E] Marquee Christmas Party \u003chigh\u003e {none} (startDate: 25-12-2020 22:00 - endDate: 26-12-2020 04:00)","lastModifiedDate":"2021-11-05"},{"lineNumber":155,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-05"},{"lineNumber":156,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-05"},{"lineNumber":157,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":158,"author":{"gitId":"SeanRobertDH"},"content":"### 2.2.4 Date Format: `\u003cdateFormat\u003e`","lastModifiedDate":"2021-10-29"},{"lineNumber":159,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":160,"author":{"gitId":"SeanRobertDH"},"content":"When entering dates into SchedUrMods, we accept multiple date formats to allow you to reduce how much you have to type.  ","lastModifiedDate":"2021-11-08"},{"lineNumber":161,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":162,"author":{"gitId":"SeanRobertDH"},"content":"The accepted date formats in SchedUrMods are:","lastModifiedDate":"2021-11-08"},{"lineNumber":163,"author":{"gitId":"SeanRobertDH"},"content":"- `dd-MM-yyyy HH:mm` or `dd-MM-yy HH:mm`","lastModifiedDate":"2021-11-08"},{"lineNumber":164,"author":{"gitId":"SeanRobertDH"},"content":"- `dd-MM-yyyy HH` or `dd-MM-yy HH`","lastModifiedDate":"2021-11-08"},{"lineNumber":165,"author":{"gitId":"SeanRobertDH"},"content":"- `dd-MM HH:mm`","lastModifiedDate":"2021-11-08"},{"lineNumber":166,"author":{"gitId":"SeanRobertDH"},"content":"- `dd-MM HH`","lastModifiedDate":"2021-11-08"},{"lineNumber":167,"author":{"gitId":"SeanRobertDH"},"content":"- `dd HH:mm`","lastModifiedDate":"2021-10-29"},{"lineNumber":168,"author":{"gitId":"SeanRobertDH"},"content":"- `dd HH`","lastModifiedDate":"2021-10-29"},{"lineNumber":169,"author":{"gitId":"SeanRobertDH"},"content":"- `HH`  ","lastModifiedDate":"2021-10-29"},{"lineNumber":170,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":171,"author":{"gitId":"SeanRobertDH"},"content":"**Legend**:","lastModifiedDate":"2021-11-05"},{"lineNumber":172,"author":{"gitId":"SeanRobertDH"},"content":"- `dd` represents the **day** the of month.","lastModifiedDate":"2021-11-05"},{"lineNumber":173,"author":{"gitId":"SeanRobertDH"},"content":"- `MM` represents the **month** the of year.","lastModifiedDate":"2021-11-05"},{"lineNumber":174,"author":{"gitId":"SeanRobertDH"},"content":"- `yyyy` represents the **year**.","lastModifiedDate":"2021-11-05"},{"lineNumber":175,"author":{"gitId":"SeanRobertDH"},"content":"- `yy` represents the **year** (in the 21st century)","lastModifiedDate":"2021-11-05"},{"lineNumber":176,"author":{"gitId":"SeanRobertDH"},"content":"    -  e.g. `04` represents 2004.","lastModifiedDate":"2021-11-05"},{"lineNumber":177,"author":{"gitId":"SeanRobertDH"},"content":"- `HH` represents the **hour** of the day on a 24-hour clock.","lastModifiedDate":"2021-11-05"},{"lineNumber":178,"author":{"gitId":"SeanRobertDH"},"content":"- `mm` represents the **minute** of the hour.","lastModifiedDate":"2021-11-05"},{"lineNumber":179,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":180,"author":{"gitId":"SeanRobertDH"},"content":"\u003e💡 **Note**: When day (`dd`), month (`MM`) or year (`yyyy` or `yy`) is unspecified, they will be replaced with the **current** day, month and year respectively.  ","lastModifiedDate":"2021-11-05"},{"lineNumber":181,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":182,"author":{"gitId":"SeanRobertDH"},"content":"\u003e💡 **Note**: When minute (`mm`) is unspecified, it will be replaced with `0`.","lastModifiedDate":"2021-11-05"},{"lineNumber":183,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":184,"author":{"gitId":"SeanRobertDH"},"content":"**Examples**:","lastModifiedDate":"2021-11-05"},{"lineNumber":185,"author":{"gitId":"SeanRobertDH"},"content":"- `03-10-2004 03` translates to `3rd October 2004, 3:00am`.","lastModifiedDate":"2021-11-08"},{"lineNumber":186,"author":{"gitId":"SeanRobertDH"},"content":"- `15:30` translates to `Your current year, month and day at 3.30pm`.","lastModifiedDate":"2021-11-05"},{"lineNumber":187,"author":{"gitId":"SeanRobertDH"},"content":"- `15 12:30` translates to `Your current year and month on the 15th at 12.30pm`.","lastModifiedDate":"2021-11-05"},{"lineNumber":188,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"SeanRobertDH"},"content":"### 2.3 Listing your tasks: `list`","lastModifiedDate":"2021-11-08"},{"lineNumber":190,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":191,"author":{"gitId":"APZH"},"content":"There are **3 main features** you can use with the list command.","lastModifiedDate":"2021-11-04"},{"lineNumber":192,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":193,"author":{"gitId":"SeanRobertDH"},"content":"#### 2.3.1 Listing your entire task list","lastModifiedDate":"2021-11-08"},{"lineNumber":194,"author":{"gitId":"APZH"},"content":"List all tasks currently stored locally in your task list.","lastModifiedDate":"2021-11-04"},{"lineNumber":195,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":196,"author":{"gitId":"SeanRobertDH"},"content":"**Format**: `list`","lastModifiedDate":"2021-11-05"},{"lineNumber":197,"author":{"gitId":"APZH"},"content":"- The command displays the following information for each task:","lastModifiedDate":"2021-11-04"},{"lineNumber":198,"author":{"gitId":"SeanRobertDH"},"content":"  - **Task index**:","lastModifiedDate":"2021-11-08"},{"lineNumber":199,"author":{"gitId":"SeanRobertDH"},"content":"    - A positive integer i.e. `1.` which identifies the task. This index is used to identify tasks in the [`edit`](#26-editing-your-tasks-edit), [`browse`](#272-browse-browse) and [`delete`](#28-deleting-your-tasks-delete) commands.","lastModifiedDate":"2021-11-08"},{"lineNumber":200,"author":{"gitId":"APZH"},"content":"  - **Task type**:","lastModifiedDate":"2021-11-04"},{"lineNumber":201,"author":{"gitId":"SeanRobertDH"},"content":"    - A task can either be a Todo, Deadline, Event or Lesson and they are all represented with the first letter of their task type.","lastModifiedDate":"2021-11-08"},{"lineNumber":202,"author":{"gitId":"SeanRobertDH"},"content":"    - `[T]` represents a `Todo`.","lastModifiedDate":"2021-11-08"},{"lineNumber":203,"author":{"gitId":"SeanRobertDH"},"content":"    - `[D]` represents a `Deadline`.","lastModifiedDate":"2021-11-08"},{"lineNumber":204,"author":{"gitId":"SeanRobertDH"},"content":"    - `[E]` represents a `Event`.","lastModifiedDate":"2021-11-08"},{"lineNumber":205,"author":{"gitId":"SeanRobertDH"},"content":"    - `[L]` represents a `Lesson`.","lastModifiedDate":"2021-11-08"},{"lineNumber":206,"author":{"gitId":"APZH"},"content":"  - **Task description**:","lastModifiedDate":"2021-11-04"},{"lineNumber":207,"author":{"gitId":"SeanRobertDH"},"content":"    - General details of the task.","lastModifiedDate":"2021-11-08"},{"lineNumber":208,"author":{"gitId":"APZH"},"content":"  - **Task priority `[priority]`**:","lastModifiedDate":"2021-11-04"},{"lineNumber":209,"author":{"gitId":"APZH"},"content":"    - A task can either have `low`, `medium`, or `high` priority. ","lastModifiedDate":"2021-11-04"},{"lineNumber":210,"author":{"gitId":"APZH"},"content":"    - This value determines the urgency of the task.","lastModifiedDate":"2021-11-04"},{"lineNumber":211,"author":{"gitId":"SeanRobertDH"},"content":"  - **Task recurrence `{recurrence}`**:","lastModifiedDate":"2021-11-08"},{"lineNumber":212,"author":{"gitId":"APZH"},"content":"    - A task can either have `none`, `daily`, `weekly`, `monthly`, or `yearly` recurrence.","lastModifiedDate":"2021-11-04"},{"lineNumber":213,"author":{"gitId":"APZH"},"content":"    - This value determines how often a task recurs.","lastModifiedDate":"2021-11-04"},{"lineNumber":214,"author":{"gitId":"SeanRobertDH"},"content":"        \u003e💡 **Note**: Tasks with a recurrence will automatically be recurred to the next date that has not occured yet every time you list them.","lastModifiedDate":"2021-11-08"},{"lineNumber":215,"author":{"gitId":"APZH"},"content":"  - **Task date field**:","lastModifiedDate":"2021-11-04"},{"lineNumber":216,"author":{"gitId":"SeanRobertDH"},"content":"    - For a `Todo`, it represents the date and time to do the task.","lastModifiedDate":"2021-11-08"},{"lineNumber":217,"author":{"gitId":"APZH"},"content":"    - For a `Deadline`, it represents the due date of the task.","lastModifiedDate":"2021-11-04"},{"lineNumber":218,"author":{"gitId":"SeanRobertDH"},"content":"    - For an `Event`, it represents the start date and end date of the event.","lastModifiedDate":"2021-11-08"},{"lineNumber":219,"author":{"gitId":"APZH"},"content":"    - For a `Lesson`, it represents the date and duration of the lesson.","lastModifiedDate":"2021-11-04"},{"lineNumber":220,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":221,"author":{"gitId":"SeanRobertDH"},"content":"\u003e💡 **Note**: For `Lesson` tasks, the task date field is combined with the task description.","lastModifiedDate":"2021-11-08"},{"lineNumber":222,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":223,"author":{"gitId":"SeanRobertDH"},"content":"**Example**: `list`","lastModifiedDate":"2021-11-05"},{"lineNumber":224,"author":{"gitId":"SeanRobertDH"},"content":"- List all tasks that are in your task list.","lastModifiedDate":"2021-11-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":226,"author":{"gitId":"SeanRobertDH"},"content":"**Expected Outcome**:","lastModifiedDate":"2021-11-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":228,"author":{"gitId":"APZH"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":229,"author":{"gitId":"APZH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-07"},{"lineNumber":230,"author":{"gitId":"APZH"},"content":"[user]: list","lastModifiedDate":"2021-10-20"},{"lineNumber":231,"author":{"gitId":"APZH"},"content":"|| -------------","lastModifiedDate":"2021-10-20"},{"lineNumber":232,"author":{"gitId":"APZH"},"content":"||  MY TASK LIST","lastModifiedDate":"2021-10-20"},{"lineNumber":233,"author":{"gitId":"APZH"},"content":"|| -------------","lastModifiedDate":"2021-10-20"},{"lineNumber":234,"author":{"gitId":"APZH"},"content":"|| 1. [T] read book \u003clow\u003e {daily} (doOn: 05-11-2021 02:00)","lastModifiedDate":"2021-11-04"},{"lineNumber":235,"author":{"gitId":"APZH"},"content":"|| 2. [D] return book \u003cmedium\u003e {weekly} (dueDate: 11-11-2021 03:00)","lastModifiedDate":"2021-11-04"},{"lineNumber":236,"author":{"gitId":"APZH"},"content":"|| 3. [E] project meeting \u003chigh\u003e {monthly} (startDate: 22-11-2021 04:00 - endDate: 22-11-2021 05:00)","lastModifiedDate":"2021-11-04"},{"lineNumber":237,"author":{"gitId":"APZH"},"content":"|| 4. [T] exercise \u003cmedium\u003e {none} (doOn: 04-11-2021 18:00)","lastModifiedDate":"2021-11-04"},{"lineNumber":238,"author":{"gitId":"APZH"},"content":"|| 5. [T] wash clothes \u003cmedium\u003e {weekly} (doOn: 10-11-2021 02:00)","lastModifiedDate":"2021-11-04"},{"lineNumber":239,"author":{"gitId":"APZH"},"content":"|| 6. [D] project submission \u003chigh\u003e {monthly} (dueDate: 21-11-2021 03:00)","lastModifiedDate":"2021-11-04"},{"lineNumber":240,"author":{"gitId":"APZH"},"content":"|| 7. [E] movie screening \u003clow\u003e {daily} (startDate: 05-11-2021 04:00 - endDate: 05-11-2021 05:00)","lastModifiedDate":"2021-11-04"},{"lineNumber":241,"author":{"gitId":"APZH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-07"},{"lineNumber":242,"author":{"gitId":"APZH"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":244,"author":{"gitId":"SeanRobertDH"},"content":"#### 2.3.2 Filtering your task list","lastModifiedDate":"2021-11-08"},{"lineNumber":245,"author":{"gitId":"SeanRobertDH"},"content":"Filters the task list for all tasks that matches the filters applied.","lastModifiedDate":"2021-11-08"},{"lineNumber":246,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":247,"author":{"gitId":"SeanRobertDH"},"content":"**Format**: `list [--filter \u003cargument\u003e] [--filter \u003cargument\u003e] ...`","lastModifiedDate":"2021-11-05"},{"lineNumber":248,"author":{"gitId":"APZH"},"content":"- `[--flag \u003cargument\u003e]` specifies the filter to be applied to your task list.","lastModifiedDate":"2021-11-04"},{"lineNumber":249,"author":{"gitId":"SeanRobertDH"},"content":"  - Type of the task: `[--type \u003ctodo|deadline|event|lesson\u003e]`.","lastModifiedDate":"2021-11-08"},{"lineNumber":250,"author":{"gitId":"SeanRobertDH"},"content":"  - Priority of the task: `[--priority \u003clow|medium|high\u003e]`.","lastModifiedDate":"2021-11-08"},{"lineNumber":251,"author":{"gitId":"SeanRobertDH"},"content":"  - Recurrence of the task: `[--recur \u003cnone|daily|weekly|monthly|yearly\u003e]`.","lastModifiedDate":"2021-11-08"},{"lineNumber":252,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":253,"author":{"gitId":"SeanRobertDH"},"content":"**Example**: `list --type todo --priority medium`","lastModifiedDate":"2021-11-05"},{"lineNumber":254,"author":{"gitId":"SeanRobertDH"},"content":"- List all tasks that are of type `Todo` and has a priority of `medium`.","lastModifiedDate":"2021-11-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":256,"author":{"gitId":"SeanRobertDH"},"content":"**Expected Outcome**:","lastModifiedDate":"2021-11-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":258,"author":{"gitId":"APZH"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":259,"author":{"gitId":"APZH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-07"},{"lineNumber":260,"author":{"gitId":"APZH"},"content":"[user]: list --type todo --priority medium","lastModifiedDate":"2021-11-04"},{"lineNumber":261,"author":{"gitId":"APZH"},"content":"|| -------------","lastModifiedDate":"2021-10-20"},{"lineNumber":262,"author":{"gitId":"APZH"},"content":"||  MY TASK LIST","lastModifiedDate":"2021-10-20"},{"lineNumber":263,"author":{"gitId":"APZH"},"content":"|| -------------","lastModifiedDate":"2021-10-20"},{"lineNumber":264,"author":{"gitId":"APZH"},"content":"|| 1. [T] exercise \u003cmedium\u003e {none} (doOn: 04-11-2021 18:00)","lastModifiedDate":"2021-11-04"},{"lineNumber":265,"author":{"gitId":"APZH"},"content":"|| 2. [T] wash clothes \u003cmedium\u003e {weekly} (doOn: 10-11-2021 02:00)","lastModifiedDate":"2021-11-04"},{"lineNumber":266,"author":{"gitId":"APZH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-07"},{"lineNumber":267,"author":{"gitId":"APZH"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":269,"author":{"gitId":"SeanRobertDH"},"content":"#### 2.3.3 Listing the recurrence of a task","lastModifiedDate":"2021-11-08"},{"lineNumber":270,"author":{"gitId":"SeanRobertDH"},"content":"Displays the next four recurrences of a task.","lastModifiedDate":"2021-11-08"},{"lineNumber":271,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":272,"author":{"gitId":"SeanRobertDH"},"content":"**Format 2**: `list [id]`","lastModifiedDate":"2021-11-08"},{"lineNumber":273,"author":{"gitId":"SeanRobertDH"},"content":"- `[id]` specifies the id of the task to display the next four recurrences of.","lastModifiedDate":"2021-11-08"},{"lineNumber":274,"author":{"gitId":"SeanRobertDH"},"content":"  \u003e💡 **Note**: To obtain the correct task id of each task, please use the `list` command without any filters.","lastModifiedDate":"2021-11-08"},{"lineNumber":275,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":276,"author":{"gitId":"SeanRobertDH"},"content":"**Example (with task id)**: `list 3`","lastModifiedDate":"2021-11-05"},{"lineNumber":277,"author":{"gitId":"SeanRobertDH"},"content":"- Lists the next four recurrences of the task with the index `3`.","lastModifiedDate":"2021-11-08"},{"lineNumber":278,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":279,"author":{"gitId":"SeanRobertDH"},"content":"**Expected Outcome**:","lastModifiedDate":"2021-11-05"},{"lineNumber":280,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":281,"author":{"gitId":"APZH"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":282,"author":{"gitId":"APZH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-07"},{"lineNumber":283,"author":{"gitId":"APZH"},"content":"[user]: list 3","lastModifiedDate":"2021-11-04"},{"lineNumber":284,"author":{"gitId":"APZH"},"content":"|| -------------","lastModifiedDate":"2021-10-29"},{"lineNumber":285,"author":{"gitId":"APZH"},"content":"||  MY TASK LIST","lastModifiedDate":"2021-10-29"},{"lineNumber":286,"author":{"gitId":"APZH"},"content":"|| -------------","lastModifiedDate":"2021-10-29"},{"lineNumber":287,"author":{"gitId":"APZH"},"content":"|| Listing next 4 recurrences for:","lastModifiedDate":"2021-10-29"},{"lineNumber":288,"author":{"gitId":"APZH"},"content":"|| [E] project meeting \u003chigh\u003e {monthly} (startDate: 22-11-2021 04:00 - endDate: 22-11-2021 05:00)","lastModifiedDate":"2021-11-04"},{"lineNumber":289,"author":{"gitId":"APZH"},"content":"|| -\u003e 22-12-2021 04:00","lastModifiedDate":"2021-11-04"},{"lineNumber":290,"author":{"gitId":"APZH"},"content":"|| -\u003e 22-01-2022 04:00","lastModifiedDate":"2021-11-04"},{"lineNumber":291,"author":{"gitId":"APZH"},"content":"|| -\u003e 22-02-2022 04:00","lastModifiedDate":"2021-11-04"},{"lineNumber":292,"author":{"gitId":"APZH"},"content":"|| -\u003e 22-03-2022 04:00","lastModifiedDate":"2021-11-04"},{"lineNumber":293,"author":{"gitId":"APZH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-07"},{"lineNumber":294,"author":{"gitId":"APZH"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":295,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":296,"author":{"gitId":"SeanRobertDH"},"content":"#### 2.3.4 Listing your upcoming tasks: `upcoming`","lastModifiedDate":"2021-11-08"},{"lineNumber":297,"author":{"gitId":"SeanRobertDH"},"content":"Allows you to easily list your tasks over the upcoming week.","lastModifiedDate":"2021-11-08"},{"lineNumber":298,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":299,"author":{"gitId":"SeanRobertDH"},"content":"**Format**: `upcoming`","lastModifiedDate":"2021-11-08"},{"lineNumber":300,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":301,"author":{"gitId":"SuibianP"},"content":"**Example**: `upcoming`","lastModifiedDate":"2021-11-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":303,"author":{"gitId":"SeanRobertDH"},"content":"**Expected Outcome**:","lastModifiedDate":"2021-11-08"},{"lineNumber":304,"author":{"gitId":"SuibianP"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":305,"author":{"gitId":"SuibianP"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":306,"author":{"gitId":"SuibianP"},"content":"[user]: upcoming","lastModifiedDate":"2021-11-08"},{"lineNumber":307,"author":{"gitId":"SuibianP"},"content":"|| [L] CS2113T C02: 10-11-2021 13:00 to 10-11-2021 14:00 \u003cmedium\u003e {weekly} ","lastModifiedDate":"2021-11-08"},{"lineNumber":308,"author":{"gitId":"SuibianP"},"content":"|| [T] buy groceries \u003cmedium\u003e {none} (doOn: 10-11-2021 17:30)","lastModifiedDate":"2021-11-08"},{"lineNumber":309,"author":{"gitId":"SuibianP"},"content":"|| [L] CS2113T C02: 11-11-2021 14:00 to 11-11-2021 16:00 \u003cmedium\u003e {weekly} ","lastModifiedDate":"2021-11-08"},{"lineNumber":310,"author":{"gitId":"SuibianP"},"content":"|| [L] CS2113T C02: 12-11-2021 16:00 to 12-11-2021 18:00 \u003cmedium\u003e {weekly} ","lastModifiedDate":"2021-11-08"},{"lineNumber":311,"author":{"gitId":"SuibianP"},"content":"|| [L] CS2113T C02: 15-11-2021 14:00 to 15-11-2021 16:00 \u003cmedium\u003e {weekly} ","lastModifiedDate":"2021-11-08"},{"lineNumber":312,"author":{"gitId":"SuibianP"},"content":"|| [E] finals \u003cmedium\u003e {none} (startDate: 15-11-2021 15:00 - endDate: 15-11-2021 18:00)","lastModifiedDate":"2021-11-08"},{"lineNumber":313,"author":{"gitId":"SuibianP"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":314,"author":{"gitId":"SuibianP"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":315,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":316,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":317,"author":{"gitId":"SeanRobertDH"},"content":"### 2.4 Sorting your task list: `sort`","lastModifiedDate":"2021-11-08"},{"lineNumber":318,"author":{"gitId":"SeanRobertDH"},"content":"Sorts your task list by a given criteria.","lastModifiedDate":"2021-10-25"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":320,"author":{"gitId":"SeanRobertDH"},"content":"**Format**: `sort --by \u003ccriteria\u003e`","lastModifiedDate":"2021-11-05"},{"lineNumber":321,"author":{"gitId":"SeanRobertDH"},"content":"- `\u003ccriteria\u003e` specifies what to sort your task list by.","lastModifiedDate":"2021-10-25"},{"lineNumber":322,"author":{"gitId":"SeanRobertDH"},"content":"  - Type of the task: `type`.","lastModifiedDate":"2021-11-08"},{"lineNumber":323,"author":{"gitId":"SeanRobertDH"},"content":"  - Description of the task: `description`.","lastModifiedDate":"2021-11-08"},{"lineNumber":324,"author":{"gitId":"SeanRobertDH"},"content":"  - Priority of the task: `priority`.","lastModifiedDate":"2021-11-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":326,"author":{"gitId":"SeanRobertDH"},"content":"**Example**: `sort --by priority` + `list`","lastModifiedDate":"2021-11-05"},{"lineNumber":327,"author":{"gitId":"APZH"},"content":"- Sort your current task list by `priority` from `high` to `low`.","lastModifiedDate":"2021-11-08"},{"lineNumber":328,"author":{"gitId":"APZH"},"content":"- Print out the sorted list with the `list` command.","lastModifiedDate":"2021-11-08"},{"lineNumber":329,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":330,"author":{"gitId":"SeanRobertDH"},"content":"**Expected Outcome**:","lastModifiedDate":"2021-11-05"},{"lineNumber":331,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":332,"author":{"gitId":"APZH"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":333,"author":{"gitId":"APZH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-07"},{"lineNumber":334,"author":{"gitId":"APZH"},"content":"[user]: sort --by priority","lastModifiedDate":"2021-10-20"},{"lineNumber":335,"author":{"gitId":"APZH"},"content":"|| [!] Task list has been sorted by: priority","lastModifiedDate":"2021-11-04"},{"lineNumber":336,"author":{"gitId":"APZH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-10-20"},{"lineNumber":337,"author":{"gitId":"APZH"},"content":"[user]: list","lastModifiedDate":"2021-10-20"},{"lineNumber":338,"author":{"gitId":"APZH"},"content":"|| -------------","lastModifiedDate":"2021-10-20"},{"lineNumber":339,"author":{"gitId":"APZH"},"content":"||  MY TASK LIST","lastModifiedDate":"2021-10-20"},{"lineNumber":340,"author":{"gitId":"APZH"},"content":"|| -------------","lastModifiedDate":"2021-10-20"},{"lineNumber":341,"author":{"gitId":"APZH"},"content":"|| 1. [E] project meeting \u003chigh\u003e {monthly} (startDate: 22-11-2021 04:00 - endDate: 22-11-2021 05:00)","lastModifiedDate":"2021-11-04"},{"lineNumber":342,"author":{"gitId":"APZH"},"content":"|| 2. [D] project submission \u003chigh\u003e {monthly} (dueDate: 21-11-2021 03:00)","lastModifiedDate":"2021-11-04"},{"lineNumber":343,"author":{"gitId":"APZH"},"content":"|| 3. [D] return book \u003cmedium\u003e {weekly} (dueDate: 11-11-2021 03:00)","lastModifiedDate":"2021-11-04"},{"lineNumber":344,"author":{"gitId":"APZH"},"content":"|| 4. [T] exercise \u003cmedium\u003e {none} (doOn: 04-11-2021 18:00)","lastModifiedDate":"2021-11-04"},{"lineNumber":345,"author":{"gitId":"APZH"},"content":"|| 5. [T] wash clothes \u003cmedium\u003e {weekly} (doOn: 10-11-2021 02:00)","lastModifiedDate":"2021-11-04"},{"lineNumber":346,"author":{"gitId":"APZH"},"content":"|| 6. [T] read book \u003clow\u003e {daily} (doOn: 05-11-2021 02:00)","lastModifiedDate":"2021-11-04"},{"lineNumber":347,"author":{"gitId":"APZH"},"content":"|| 7. [E] movie screening \u003clow\u003e {daily} (startDate: 05-11-2021 04:00 - endDate: 05-11-2021 05:00)","lastModifiedDate":"2021-11-04"},{"lineNumber":348,"author":{"gitId":"APZH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-07"},{"lineNumber":349,"author":{"gitId":"APZH"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":351,"author":{"gitId":"SeanRobertDH"},"content":"### 2.5 Setting reminders for your tasks: `reminder`","lastModifiedDate":"2021-11-08"},{"lineNumber":352,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":353,"author":{"gitId":"SeanRobertDH"},"content":"### 2.6 Editing your tasks: `edit`","lastModifiedDate":"2021-11-08"},{"lineNumber":354,"author":{"gitId":"SeanRobertDH"},"content":"Edits a single [Todo](#221-todo-todo), [Deadline](#222-deadline-deadline) or [Event](#223-event-event) based on the flags entered.","lastModifiedDate":"2021-11-06"},{"lineNumber":355,"author":{"gitId":"SeanRobertDH"},"content":"**Format**: `edit \u003cindex\u003e \u003c--flag \u003cvalue\u003e\u003e [--flag \u003cvalue\u003e] [--flag \u003cvalue\u003e]...`","lastModifiedDate":"2021-11-06"},{"lineNumber":356,"author":{"gitId":"SeanRobertDH"},"content":"- `\u003cindex\u003e` is the index of the task you want to edit from the most recent [list](#23-listing-your-tasks-list) command that you have run.","lastModifiedDate":"2021-11-08"},{"lineNumber":357,"author":{"gitId":"SeanRobertDH"},"content":"   \u003e💡 **Note**: if the task you want to edit was not in your most recent [list](#23-listing-your-tasks-list) command, simply type `list` to list all tasks and use its corresponding index to edit it.","lastModifiedDate":"2021-11-08"},{"lineNumber":358,"author":{"gitId":"SeanRobertDH"},"content":"- at least one `\u003c--flag \u003cvalue\u003e\u003e` must be specified, though you can edit multiple values at once by providing multiple more `[--flag \u003cvalue\u003e]` arguments.","lastModifiedDate":"2021-11-06"},{"lineNumber":359,"author":{"gitId":"SeanRobertDH"},"content":"- **Flags**","lastModifiedDate":"2021-11-06"},{"lineNumber":360,"author":{"gitId":"SeanRobertDH"},"content":"  - `--description \u003cdescription\u003e` modifies your task description.","lastModifiedDate":"2021-11-08"},{"lineNumber":361,"author":{"gitId":"SeanRobertDH"},"content":"  - `--priority \u003chigh|medium|low\u003e` modifie yours task priority.","lastModifiedDate":"2021-11-08"},{"lineNumber":362,"author":{"gitId":"SeanRobertDH"},"content":"  - `--recur \u003cnone|daily|weekly|monthly|yearly\u003e` modifies your task recurrence.","lastModifiedDate":"2021-11-08"},{"lineNumber":363,"author":{"gitId":"SeanRobertDH"},"content":"  - \u003ccode\u003e--doOn \u003ca href\u003d\"#224-date-format-dateformat\"\u003e\u0026lt;dateFormat\u0026gt;\u003c/a\u003e\u003c/code\u003e modifies when your [Todo](#221-todo-todo) is to be done.","lastModifiedDate":"2021-11-08"},{"lineNumber":364,"author":{"gitId":"SeanRobertDH"},"content":"  - \u003ccode\u003e--due \u003ca href\u003d\"#224-date-format-dateformat\"\u003e\u0026lt;dateFormat\u0026gt;\u003c/a\u003e\u003c/code\u003e modifies when your [Deadline](#222-deadline-deadline) is due.","lastModifiedDate":"2021-11-08"},{"lineNumber":365,"author":{"gitId":"SeanRobertDH"},"content":"  - \u003ccode\u003e--start \u003ca href\u003d\"#224-date-format-dateformat\"\u003e\u0026lt;dateFormat\u0026gt;\u003c/a\u003e\u003c/code\u003e modifies when your [Event](#223-event-event) starts.","lastModifiedDate":"2021-11-08"},{"lineNumber":366,"author":{"gitId":"SeanRobertDH"},"content":"  - \u003ccode\u003e--end \u003ca href\u003d\"#224-date-format-dateformat\"\u003e\u0026lt;dateFormat\u0026gt;\u003c/a\u003e\u003c/code\u003e modifies when your [Event](#223-event-event) ends.","lastModifiedDate":"2021-11-08"},{"lineNumber":367,"author":{"gitId":"SeanRobertDH"},"content":"  - `--link \u003curl\u003e` modifies your Lesson link.","lastModifiedDate":"2021-11-06"},{"lineNumber":368,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":369,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":370,"author":{"gitId":"SeanRobertDH"},"content":"### 2.7 Adding your NUS timetable:","lastModifiedDate":"2021-11-08"},{"lineNumber":371,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":372,"author":{"gitId":"SeanRobertDH"},"content":"Allows you to add modules into your task list and browse to their meeting links with your Operating System\u0027s default internet browser.","lastModifiedDate":"2021-11-08"},{"lineNumber":373,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":374,"author":{"gitId":"SeanRobertDH"},"content":"#### 2.7.1 Module: `module`","lastModifiedDate":"2021-11-08"},{"lineNumber":375,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":376,"author":{"gitId":"SeanRobertDH"},"content":"Adds your modules and classes into your task list.","lastModifiedDate":"2021-11-08"},{"lineNumber":377,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":378,"author":{"gitId":"SeanRobertDH"},"content":"**Format**: `module {\u003cmodule code\u003e:{\u003cclass number\u003e,}...;}...`","lastModifiedDate":"2021-11-08"},{"lineNumber":379,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":380,"author":{"gitId":"SeanRobertDH"},"content":"- `\u003cmodule code\u003e` is the official module code of a module. E.g. `CS2113T`.","lastModifiedDate":"2021-11-08"},{"lineNumber":381,"author":{"gitId":"SeanRobertDH"},"content":"- `\u003cclass number\u003e` is the official class group number. E.g. `C02`.","lastModifiedDate":"2021-11-08"},{"lineNumber":382,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":383,"author":{"gitId":"SeanRobertDH"},"content":"**Example**: `module CS2113T:C02;LAJ2203:1,A2,B4`","lastModifiedDate":"2021-11-08"},{"lineNumber":384,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":385,"author":{"gitId":"SeanRobertDH"},"content":"- Adds class \u0027`C02`\u0027 of the module \u0027`CS2113T`\u0027 and classes \u0027`1`\u0027, \u0027`A2`\u0027, and \u0027`B4`\u0027 of the module \u0027`LAJ2203`\u0027 into your task list.","lastModifiedDate":"2021-11-08"},{"lineNumber":386,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":387,"author":{"gitId":"SeanRobertDH"},"content":"**Expected outcome**:","lastModifiedDate":"2021-11-08"},{"lineNumber":388,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":389,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":390,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":391,"author":{"gitId":"SeanRobertDH"},"content":"[user]: module CS2113T:C02;LAJ2203:1,A2,B4","lastModifiedDate":"2021-11-08"},{"lineNumber":392,"author":{"gitId":"SeanRobertDH"},"content":"|| Added CS2113T C02","lastModifiedDate":"2021-11-08"},{"lineNumber":393,"author":{"gitId":"SeanRobertDH"},"content":"|| Added LAJ2203 1","lastModifiedDate":"2021-11-08"},{"lineNumber":394,"author":{"gitId":"SeanRobertDH"},"content":"|| Added LAJ2203 A2","lastModifiedDate":"2021-11-08"},{"lineNumber":395,"author":{"gitId":"SeanRobertDH"},"content":"|| Added LAJ2203 B4","lastModifiedDate":"2021-11-08"},{"lineNumber":396,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":397,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":398,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":399,"author":{"gitId":"SeanRobertDH"},"content":"#### 2.7.2 Browse: `browse`","lastModifiedDate":"2021-11-08"},{"lineNumber":400,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":401,"author":{"gitId":"SeanRobertDH"},"content":"Browse to links that were added to your `Lesson` with the [`edit`](#26-editing-your-tasks-edit) command.","lastModifiedDate":"2021-11-08"},{"lineNumber":402,"author":{"gitId":"SeanRobertDH"},"content":"**Format**: `browse \u003cindex\u003e`","lastModifiedDate":"2021-11-08"},{"lineNumber":403,"author":{"gitId":"SeanRobertDH"},"content":"- `\u003cindex\u003e` is the index of the task you want to browse to (open in an internet browser) in the most recent [list](#23-listing-your-tasks-list) command that you have run.","lastModifiedDate":"2021-11-08"},{"lineNumber":404,"author":{"gitId":"SeanRobertDH"},"content":"  \u003e💡 **Note**: if the task you want to browse to was not in your most recent [list](#23-listing-your-tasks-list) command, simply type `list` to list all your tasks and use its corresponding index to browse to the task\u0027s url.","lastModifiedDate":"2021-11-08"},{"lineNumber":405,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":406,"author":{"gitId":"SeanRobertDH"},"content":"**Example**: `browse 2`","lastModifiedDate":"2021-11-08"},{"lineNumber":407,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":408,"author":{"gitId":"SeanRobertDH"},"content":"**Expected outcome**:","lastModifiedDate":"2021-11-08"},{"lineNumber":409,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":410,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":411,"author":{"gitId":"SeanRobertDH"},"content":"[user]: browse 2","lastModifiedDate":"2021-11-08"},{"lineNumber":412,"author":{"gitId":"SeanRobertDH"},"content":"|| https://google.com","lastModifiedDate":"2021-11-08"},{"lineNumber":413,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":414,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":415,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":416,"author":{"gitId":"SeanRobertDH"},"content":"\u003e💡 **Note**: The opening of the link in your default browser is done by the operating system. As such, the actual protocols supported is","lastModifiedDate":"2021-11-08"},{"lineNumber":417,"author":{"gitId":"SeanRobertDH"},"content":"\u003e dependent on your OS.","lastModifiedDate":"2021-11-08"},{"lineNumber":418,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":419,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":420,"author":{"gitId":"SeanRobertDH"},"content":"\u003e💡 **Note**: There may be error messages printed on your terminal which can be from the associated application","lastModifiedDate":"2021-11-08"},{"lineNumber":421,"author":{"gitId":"SeanRobertDH"},"content":"\u003e used in opening the link, such as Chrome, and not SchedUrMods.","lastModifiedDate":"2021-11-08"},{"lineNumber":422,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":423,"author":{"gitId":"SeanRobertDH"},"content":"\u003e💡 **Note**: If there is no link in the lesson being specified, you will be prompted with an error:","lastModifiedDate":"2021-11-08"},{"lineNumber":424,"author":{"gitId":"SeanRobertDH"},"content":"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":425,"author":{"gitId":"SeanRobertDH"},"content":"\u003e ```","lastModifiedDate":"2021-11-08"},{"lineNumber":426,"author":{"gitId":"SeanRobertDH"},"content":"\u003e -------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":427,"author":{"gitId":"SeanRobertDH"},"content":"\u003e [user]: browse 2","lastModifiedDate":"2021-11-08"},{"lineNumber":428,"author":{"gitId":"SeanRobertDH"},"content":"\u003e || There is no link associated with the requested task.","lastModifiedDate":"2021-11-08"},{"lineNumber":429,"author":{"gitId":"SeanRobertDH"},"content":"\u003e -------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":430,"author":{"gitId":"SeanRobertDH"},"content":"\u003e ```","lastModifiedDate":"2021-11-08"},{"lineNumber":431,"author":{"gitId":"SeanRobertDH"},"content":"\u003e You can conveniently list the tasks and see if the lesson has a link.","lastModifiedDate":"2021-11-08"},{"lineNumber":432,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":433,"author":{"gitId":"APZH"},"content":"### 2.8 Deleting your tasks: `delete`","lastModifiedDate":"2021-11-04"},{"lineNumber":434,"author":{"gitId":"SeanRobertDH"},"content":"Deletes all task(s) specified in a comma-separated argument.","lastModifiedDate":"2021-11-08"},{"lineNumber":435,"author":{"gitId":"SeanRobertDH"},"content":"**Format**: `delete \u003cindexes\u003e`","lastModifiedDate":"2021-11-06"},{"lineNumber":436,"author":{"gitId":"SeanRobertDH"},"content":"- `\u003cindexes\u003e` are the indexes of the task you want to edit from the most recent [list](#23-listing-your-tasks-list) command that you have run.","lastModifiedDate":"2021-11-08"},{"lineNumber":437,"author":{"gitId":"SeanRobertDH"},"content":"   \u003e💡 **Note**: if the task(s) you want to delete was not in your most recent [list](#23-listing-your-tasks-list) command, simply type `list` to list the tasks and use their indexes to delete them.","lastModifiedDate":"2021-11-08"},{"lineNumber":438,"author":{"gitId":"SeanRobertDH"},"content":"  - Indexes should be comma separated single integers such as `5` and/or ranges of two indexes such as `1-3`.","lastModifiedDate":"2021-11-08"},{"lineNumber":439,"author":{"gitId":"SeanRobertDH"},"content":"  - **Example**:","lastModifiedDate":"2021-11-06"},{"lineNumber":440,"author":{"gitId":"SeanRobertDH"},"content":"   - `delete 1,3,5` would delete tasks with indexes 1, 3 and 5.","lastModifiedDate":"2021-10-21"},{"lineNumber":441,"author":{"gitId":"SeanRobertDH"},"content":"   - `delete 1-3` would delete tasks with indexes 1, 2 and 3.","lastModifiedDate":"2021-10-21"},{"lineNumber":442,"author":{"gitId":"SeanRobertDH"},"content":"   - `delete 1-3, 5` would delete tasks with indexes 1, 2, 3 and 5.","lastModifiedDate":"2021-10-21"},{"lineNumber":443,"author":{"gitId":"SeanRobertDH"},"content":"   - `delete 5` would delete the task with the index 5.","lastModifiedDate":"2021-11-08"},{"lineNumber":444,"author":{"gitId":"SeanRobertDH"},"content":"      \u003e💡 **Note**: It does not matter if there are any spaces in-between the commas.","lastModifiedDate":"2021-11-08"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":446,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":447,"author":{"gitId":"SeanRobertDH"},"content":"**Example**: `delete 1-3, 5`","lastModifiedDate":"2021-11-05"},{"lineNumber":448,"author":{"gitId":"SeanRobertDH"},"content":"- delete the tasks with indexes 1, 2, 3 and 5.","lastModifiedDate":"2021-11-08"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":450,"author":{"gitId":"SeanRobertDH"},"content":"**List before deletion**:","lastModifiedDate":"2021-11-05"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":452,"author":{"gitId":"APZH"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":453,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-10-21"},{"lineNumber":454,"author":{"gitId":"SeanRobertDH"},"content":"[user]: list","lastModifiedDate":"2021-10-21"},{"lineNumber":455,"author":{"gitId":"SeanRobertDH"},"content":"|| -------------","lastModifiedDate":"2021-10-21"},{"lineNumber":456,"author":{"gitId":"SeanRobertDH"},"content":"||  MY TASK LIST","lastModifiedDate":"2021-10-21"},{"lineNumber":457,"author":{"gitId":"SeanRobertDH"},"content":"|| -------------","lastModifiedDate":"2021-10-21"},{"lineNumber":458,"author":{"gitId":"SeanRobertDH"},"content":"|| 1. [T] read book \u003clow\u003e {none} (doOn: 20-10-2021 02:00)","lastModifiedDate":"2021-11-06"},{"lineNumber":459,"author":{"gitId":"SeanRobertDH"},"content":"|| 2. [T] return book \u003clow\u003e {none} (doOn: 21-10-2021 03:00)","lastModifiedDate":"2021-11-06"},{"lineNumber":460,"author":{"gitId":"SeanRobertDH"},"content":"|| 3. [E] project meeting \u003chigh\u003e {none} (startDate: 22-10-2021 04:00 - endDate: 22-10-2021 05:00)","lastModifiedDate":"2021-11-06"},{"lineNumber":461,"author":{"gitId":"SeanRobertDH"},"content":"|| 4. [T] wash clothes \u003cmedium\u003e {none} (doOn: 20-10-2021 02:00)","lastModifiedDate":"2021-11-06"},{"lineNumber":462,"author":{"gitId":"SeanRobertDH"},"content":"|| 5. [D] homework \u003clow\u003e {none} (dueDate: 21-10-2021 03:00)","lastModifiedDate":"2021-11-06"},{"lineNumber":463,"author":{"gitId":"SeanRobertDH"},"content":"|| 6. [E] movie screening \u003clow\u003e {none} (startDate: 22-10-2021 04:00 - endDate: 22-10-2021 05:00)","lastModifiedDate":"2021-11-06"},{"lineNumber":464,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-11-06"},{"lineNumber":465,"author":{"gitId":"APZH"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":466,"author":{"gitId":"SeanRobertDH"},"content":"**Expected Outcome**:","lastModifiedDate":"2021-11-05"},{"lineNumber":467,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":468,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":469,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-10-21"},{"lineNumber":470,"author":{"gitId":"SeanRobertDH"},"content":"[user]: delete 1-3,5","lastModifiedDate":"2021-10-21"},{"lineNumber":471,"author":{"gitId":"SeanRobertDH"},"content":"|| Task(s) deleted:","lastModifiedDate":"2021-11-06"},{"lineNumber":472,"author":{"gitId":"SeanRobertDH"},"content":"|| [T] read book \u003clow\u003e {none} (doOn: 20-10-2021 02:00)","lastModifiedDate":"2021-11-06"},{"lineNumber":473,"author":{"gitId":"SeanRobertDH"},"content":"|| [T] return book \u003clow\u003e {none} (doOn: 21-10-2021 03:00)","lastModifiedDate":"2021-11-06"},{"lineNumber":474,"author":{"gitId":"SeanRobertDH"},"content":"|| [E] project meeting \u003chigh\u003e {none} (startDate: 22-10-2021 04:00 - endDate: 22-10-2021 05:00)","lastModifiedDate":"2021-11-06"},{"lineNumber":475,"author":{"gitId":"SeanRobertDH"},"content":"|| [D] homework \u003clow\u003e {none} (dueDate: 21-10-2021 03:00)","lastModifiedDate":"2021-11-06"},{"lineNumber":476,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-10-21"},{"lineNumber":477,"author":{"gitId":"APZH"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":478,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":479,"author":{"gitId":"SeanRobertDH"},"content":"**List after deletion**:","lastModifiedDate":"2021-11-05"},{"lineNumber":480,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":481,"author":{"gitId":"SeanRobertDH"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":482,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-10-21"},{"lineNumber":483,"author":{"gitId":"SeanRobertDH"},"content":"[user]: list","lastModifiedDate":"2021-10-21"},{"lineNumber":484,"author":{"gitId":"SeanRobertDH"},"content":"|| -------------","lastModifiedDate":"2021-10-21"},{"lineNumber":485,"author":{"gitId":"SeanRobertDH"},"content":"||  MY TASK LIST","lastModifiedDate":"2021-10-21"},{"lineNumber":486,"author":{"gitId":"SeanRobertDH"},"content":"|| -------------","lastModifiedDate":"2021-10-21"},{"lineNumber":487,"author":{"gitId":"SeanRobertDH"},"content":"|| 1. [T] wash clothes \u003cmedium\u003e {none} (doOn: 20-10-2021 02:00)","lastModifiedDate":"2021-11-06"},{"lineNumber":488,"author":{"gitId":"SeanRobertDH"},"content":"|| 2. [E] movie screening \u003clow\u003e {none} (startDate: 22-10-2021 04:00 - endDate: 22-10-2021 05:00)","lastModifiedDate":"2021-11-06"},{"lineNumber":489,"author":{"gitId":"SeanRobertDH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-10-21"},{"lineNumber":490,"author":{"gitId":"APZH"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":491,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":492,"author":{"gitId":"APZH"},"content":"### 2.9 Exiting the program: `bye`","lastModifiedDate":"2021-11-04"},{"lineNumber":493,"author":{"gitId":"APZH"},"content":"Displays goodbye message and exits the program.","lastModifiedDate":"2021-10-20"},{"lineNumber":494,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":495,"author":{"gitId":"SeanRobertDH"},"content":"**Format**: `bye`","lastModifiedDate":"2021-11-05"},{"lineNumber":496,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":497,"author":{"gitId":"SeanRobertDH"},"content":"**Expected Outcome**:","lastModifiedDate":"2021-11-05"},{"lineNumber":498,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":499,"author":{"gitId":"APZH"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":500,"author":{"gitId":"APZH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-10-20"},{"lineNumber":501,"author":{"gitId":"APZH"},"content":"[user]: bye","lastModifiedDate":"2021-10-20"},{"lineNumber":502,"author":{"gitId":"APZH"},"content":"|| Exiting program!","lastModifiedDate":"2021-10-20"},{"lineNumber":503,"author":{"gitId":"APZH"},"content":"-------------------------------------------------------------------------","lastModifiedDate":"2021-10-20"},{"lineNumber":504,"author":{"gitId":"APZH"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":505,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":506,"author":{"gitId":"SeanRobertDH"},"content":"### 2.10 Storage","lastModifiedDate":"2021-11-05"},{"lineNumber":507,"author":{"gitId":"SeanRobertDH"},"content":"The program will store and automatically update your tasks in the file `[project directory]/data/task.dat` on any change to your task list.  ","lastModifiedDate":"2021-11-08"},{"lineNumber":508,"author":{"gitId":"SeanRobertDH"},"content":"   \u003e **⚠️Warning**: The SchedUrMods team **strongly discourages** users from directly modifying Task data in `task.dat` as it can lead to undefined behaviour. The team **will not be responsible** for any *loss of data* or *undefined behaviour* as a result of users directly modifying values in the save file.","lastModifiedDate":"2021-11-08"},{"lineNumber":509,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":510,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":511,"author":{"gitId":"APZH"},"content":"## 3. FAQ","lastModifiedDate":"2021-10-20"},{"lineNumber":512,"author":{"gitId":"SeanRobertDH"},"content":"**Q**: What operating systems can the application work on?","lastModifiedDate":"2021-11-05"},{"lineNumber":513,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":514,"author":{"gitId":"SeanRobertDH"},"content":"**A**: The SchedUrMods application supports all Windows, Linux and Unix operating systems ","lastModifiedDate":"2021-11-05"},{"lineNumber":515,"author":{"gitId":"SeanRobertDH"},"content":"that have the `java 11 jdk` installed on their systems. ","lastModifiedDate":"2021-11-08"},{"lineNumber":516,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":517,"author":{"gitId":"SeanRobertDH"},"content":"**Q**: How do I transfer my data to another computer?","lastModifiedDate":"2021-11-05"},{"lineNumber":518,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":519,"author":{"gitId":"SeanRobertDH"},"content":"**A**: Install the program on the other computer and replace the new empty `tasks.dat`","lastModifiedDate":"2021-11-05"},{"lineNumber":520,"author":{"gitId":"SeanRobertDH"},"content":"it creates with the `tasks.dat` that you wish to transfer from your previous `SchedUrMods.jar`","lastModifiedDate":"2021-11-05"},{"lineNumber":521,"author":{"gitId":"APZH"},"content":"home folder.","lastModifiedDate":"2021-11-04"},{"lineNumber":522,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":523,"author":{"gitId":"SeanRobertDH"},"content":"**Q**: I encountered an error message `java.lang.reflect.InaccessibleObjectException` when executing the program. How do I fix it?","lastModifiedDate":"2021-11-08"},{"lineNumber":524,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":525,"author":{"gitId":"SeanRobertDH"},"content":"**A**: Ensure that you have installed and are running `java jdk 11`. Check your java version, by typing `java -version`","lastModifiedDate":"2021-11-08"},{"lineNumber":526,"author":{"gitId":"SeanRobertDH"},"content":"to ensure that the correct jdk version (`11.x.x`) is being recognised by your system.","lastModifiedDate":"2021-11-08"},{"lineNumber":527,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":528,"author":{"gitId":"APZH"},"content":"## 4. Command Summary","lastModifiedDate":"2021-10-20"},{"lineNumber":529,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":530,"author":{"gitId":"APZH"},"content":"Action   | Format                                           | Example                                                                                              |","lastModifiedDate":"2021-10-20"},{"lineNumber":531,"author":{"gitId":"APZH"},"content":"-------- | -------------------------------------------------| -----------------------------------------------------------------------------------------------------|","lastModifiedDate":"2021-11-04"},{"lineNumber":532,"author":{"gitId":"APZH"},"content":"help     | `help`                                           | `help`                                                                                               |","lastModifiedDate":"2021-10-20"},{"lineNumber":533,"author":{"gitId":"APZH"},"content":"todo     | `todo \u003cdescription\u003e [--flag \u003cargument\u003e]`         | `todo read book`                                                                                     |","lastModifiedDate":"2021-10-20"},{"lineNumber":534,"author":{"gitId":"SeanRobertDH"},"content":"deadline | `deadline \u003cdescription\u003e [--flag \u003cargument\u003e]`     |`deadline CS2106 Lab 3 --priority high --due 20-10-2021 02:00`                                        |","lastModifiedDate":"2021-11-08"},{"lineNumber":535,"author":{"gitId":"SeanRobertDH"},"content":"event    | `event \u003cdescription\u003e [--flag \u003cargument\u003e]`        | `event Marquee Christmas Party --priority high --start 25-12-2020 22:00:00 --end 26-12-2020 04:00`   |","lastModifiedDate":"2021-11-08"},{"lineNumber":536,"author":{"gitId":"SuibianP"},"content":"module   | `module {\u003cmodule code\u003e:{\u003cclass number\u003e,}...;}...`| `module CS2113T:C02;LAJ2203:1,A2,B4`                                                                 | ","lastModifiedDate":"2021-11-07"},{"lineNumber":537,"author":{"gitId":"SuibianP"},"content":"browse   | `browse \u003cindex\u003e`                                 | `browse 2`                                                                                           |","lastModifiedDate":"2021-11-07"},{"lineNumber":538,"author":{"gitId":"APZH"},"content":"list     | `list [--filter \u003cargument\u003e]` or `list [task id]` | `list` or `list --type todo --priority medium` or `list 3`                                           |","lastModifiedDate":"2021-11-04"},{"lineNumber":539,"author":{"gitId":"APZH"},"content":"reminder |                                                  |                                                                                                      |","lastModifiedDate":"2021-11-04"},{"lineNumber":540,"author":{"gitId":"APZH"},"content":"sort     | `sort --by \u003ccriteria\u003e`                           | `sort --by priority`                                                                                 |","lastModifiedDate":"2021-10-20"},{"lineNumber":541,"author":{"gitId":"SeanRobertDH"},"content":"delete   | `delete \u003cindex(es) of task(s) to delete\u003e`        | `delete 1, 2, 4-7`                                                                                   |","lastModifiedDate":"2021-11-08"},{"lineNumber":542,"author":{"gitId":"SeanRobertDH"},"content":"edit     | `edit \u003cindex of task to delete\u003e`                 | `edit 3`                                                                                             |","lastModifiedDate":"2021-11-08"},{"lineNumber":543,"author":{"gitId":"APZH"},"content":"bye      | `bye`                                            | `bye`                                                                                                |","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"APZH":168,"SuibianP":20,"SeanRobertDH":323,"-":32}},{"path":"docs/assets/css/style.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"---","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"---","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"@import \u0027jekyll-theme-cayman\u0027;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"code {","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"  border: solid 1px $border-color;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":".main-content code {","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"  font-size: 0.9em;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"#buttonToScrollToTop {","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"  position: fixed;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"  right: 10px;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"  bottom: 10px;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"  width: 50px;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"  height: 50px;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"  border-radius: 50%;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"  background:  $section-headings-color;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"  box-shadow: 0 0 10px rgba(0, 0, 0, 0.25);","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"  color: #ffffff;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"  border: none;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"  outline: none;","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"  cursor: pointer;","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"#buttonToScrollToTop:active {","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"  filter: brightness(85%);","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"@media print {","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"  #buttonToScrollToTop {","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"    display: none;","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"  }","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"SeanRobertDH":37}},{"path":"docs/team/apzh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"APZH"},"content":"# Peh Zhenhao, Amos - Project Portfolio Page","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"## Overview \u003ca id\u003d\"scrollToHere\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"APZH"},"content":"**SchedUrMods** is a desktop application for NUS students who wish to manage their assignments ","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"APZH"},"content":"and semester-related information via CLI (command-line interface). If you can type fast, SchedUrMods ","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"APZH"},"content":"can help you manage your daily tasks faster than traditional GUI application.","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"APZH"},"content":"Given below are the contributions I have made to this project.","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"APZH"},"content":"### Summary of Contributions","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"APZH"},"content":"---","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"APZH"},"content":"- **Code contributed:** [RepoSense Link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003dapzh\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dAPZH\u0026tabRepo\u003dAY2122S1-CS2113T-W13-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"APZH"},"content":"---","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"APZH"},"content":"- **Features implemented:**","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"APZH"},"content":"  - **Feature 1:** Added the `Ui.java` class. ","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"APZH"},"content":"    - **What it does:** Handles the reading of user inputs into the terminal and the displaying of ","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"APZH"},"content":"    application related messages such as the result of a command execution based on the user\u0027s input.","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"APZH"},"content":"    - **Justification:** Ensures a standardised reading and printing of application related messages to ensure","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"APZH"},"content":"    consistency in the user\u0027s experience when using the application. All display related formatting can be done","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"APZH"},"content":"    in this single class, allowing it to be easier to modify the UI design further down the developmental path.","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"APZH"},"content":"  - **Feature 2:** Added the `CommandParser.java` class.","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"APZH"},"content":"    - **What it does:** Parses and sanitises user input into the correct `Command` object.","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"APZH"},"content":"    - **Highlights:** Implemented feature to allow flags to be extracted out of the user\u0027s input/command as a `Map\u003cString, String\u003e` ","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"APZH"},"content":"    to be universally used across all `Command` objects. ","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"APZH"},"content":"    - **Justification:** To allow flexibility/modularity for each `Command` object to allow additional command arguments to be added subsequently.","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"APZH"},"content":"  - **Feature 3:** Added the `list` command. ","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"APZH"},"content":"    - **What it does:** Allows users to \"filter the tasklist based on the filter arguments entered by the user\" \u0026 \"view the recurrences of specific tasks in the tasklist\".","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"APZH"},"content":"    - **Additional Information:** Added the relevant command class `ListCommand.java` and the relevant exceptions associated with the `list` command.","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"APZH"},"content":"    - **Highlights:** Constitutes a majority of the methods in `TaskManager.java` class (around 80%) that are used to implement such functionality.","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"APZH"},"content":"    - **Justification 1 (filtering):** Improves the user experience by allowing users to quickly search for a task that matches certain filtering criteria","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"APZH"},"content":"    as opposed to eye-balling the task, especially when the tasklist grows in size.","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"APZH"},"content":"    - **Justification 2 (viewing recurrence):** Improves the user experience by allowing users to view the next 4 recurrences of a task,","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"APZH"},"content":"    such that they can plan their schedule ahead of time.","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"APZH"},"content":"  - **Feature 4:** Added the `sort` command. ","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"APZH"},"content":"    - **What it does:** Allows users to sort the tasklist by various descriptors associated each task, ","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"APZH"},"content":"    such as by **task type**, **priority**, or **description**. Methods are implemented in `TaskManager.java` class.","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"APZH"},"content":"    - **Additional Information:** Added the relevant command class `SortCommand.java` and the relevant exceptions associated with the `sort` command.","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"APZH"},"content":"    - **Highlights:** Implemented custom comparators catered to the attributes of the Task object, and its relevant subclasses as opposed","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"APZH"},"content":"    to using the standardised comparator methods.","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"APZH"},"content":"    - **Justification:** Improves the user experience by allowing users to sort their tasklist in a certain order to maintain the","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"APZH"},"content":"    neatness of the tasklist. Without this command, the ordering of the tasklist will be based on the order in which the tasks are added,","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"APZH"},"content":"    which reduces the logical grouping of tasks in the user\u0027s tasklist.","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"APZH"},"content":"  - **Feature 5:** Added general skeleton of the TP code based on my IP program structure.","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"APZH"},"content":"  ","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"APZH"},"content":"---","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"APZH"},"content":"- **Contributions to the UG**: ","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"APZH"},"content":"[#159](https://github.com/AY2122S1-CS2113T-W13-3/tp/pull/159) (C1-C5)","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"APZH"},"content":"  - **Contribution 1:** Created and maintained the skeleton/overview for the User Guide to help the team be consistent when adding information.","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"APZH"},"content":"  - **Contribution 2:** Added the documentation in \"1. Quick Start\".","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"APZH"},"content":"  - **Contribution 3:** Added the documentation in \"2.4 Listing your tasks: `list`\" + all it\u0027s sub-sections.","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"APZH"},"content":"  - **Contribution 4:** Added the documentation in \"2.5 Sorting your tasklist: `sort`\".","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"APZH"},"content":"  - **Contribution 5:** Updated \"4. Command Summary\" table with changes made to the `list` and `sort` command.","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"APZH"},"content":"---","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"APZH"},"content":"- **Contributions to the DG**: ","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"APZH"},"content":"[#149](https://github.com/AY2122S1-CS2113T-W13-3/tp/pull/149) (C1-C4), ","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"APZH"},"content":"[#155](https://github.com/AY2122S1-CS2113T-W13-3/tp/pull/155) (C5-C6),","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"APZH"},"content":"[#160](https://github.com/AY2122S1-CS2113T-W13-3/tp/pull/160) +","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"APZH"},"content":"[#174](https://github.com/AY2122S1-CS2113T-W13-3/tp/pull/174) (C7-C8)","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"APZH"},"content":"  - **Contribution 1:** Created and maintained the skeleton/overview for the Developer Guide to help the team be consistent when adding information.","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"APZH"},"content":"  - **Contribution 2:** Added the documentation in \"1. Introduction\".","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"APZH"},"content":"    - Including all it\u0027s sub-sections: \"1.1 Purpose\" and \"1.2 Acknowledgments\".","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"APZH"},"content":"  - **Contribution 3:** Added the documentation in \"2. Setting up, getting started\".","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"APZH"},"content":"    - Including all it\u0027s sub-sections: \"2.1 Pre-requisites\", \"2.2 Download the project on your computer\", and \"2.3 Setting up the project in IntelliJ\".","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"APZH"},"content":"  - **Contribution 4:** Added the documentation in \"3.1 Architecture\".","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"APZH"},"content":"    -  **Architecture Diagram** [Image] - Showing the main components and flow of the general program","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"APZH"},"content":"    -  **Sequence Diagram** [Image] - Showing how the components interact with each other for the scenario ","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"APZH"},"content":"    where the user inputs any valid command in to the application. ","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"APZH"},"content":"  - **Contribution 5:** Added the information in \"3.2 UI Component\".","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"APZH"},"content":"    - **Class Diagram** [Image] of the Ui component.","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"APZH"},"content":"  - **Contribution 6:** Added the information in \"3.3 Parser Component\".","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"APZH"},"content":"    - **Class Diagram** [Image] of the Parser component.","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"APZH"},"content":"  - **Contribution 7:** Added the information in \"4.2 Filtering the tasklist\".","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"APZH"},"content":"    - **Sequence Diagram** [Image] - Showing how the process of filtering the user\u0027s tasklist that is managed ","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"APZH"},"content":"    by the TaskManager class.","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"APZH"},"content":"  - **Contribution 8:** Added instructions for manual testing for \"Launch and Exit\", \"Listing the Tasklist\", \"Filtering the Tasklist\", \"Sorting the Tasklist\",","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"APZH"},"content":"        and \"Viewing the recurrence of a task\".","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"APZH"},"content":"---","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"APZH"},"content":"- **Contributions to team-based tasks**:","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"APZH"},"content":"  - **Contribution 1:** Maintained the issue tracker and milestones for our team.","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"APZH"},"content":"  - **Contribution 2:** Handled the releases of versions `1.0` and `2.0` of our application.","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"APZH"},"content":"  - **Contribution 3:** General format update to both the User Guide and Developer Guide to ensure consistency and allow others to easily","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"APZH"},"content":"  add their assignment parts without affecting the general structure of the guide.","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"APZH"},"content":"  - **Contribution 4:** Added FAQs, Target Users, and tidied up sections in both the User Guide and Developer Guide.","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"APZH"},"content":"  - **Contribution 5:** Added user stories and formatted the table.","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":95,"author":{"gitId":"APZH"},"content":"---","lastModifiedDate":"2021-11-07"},{"lineNumber":96,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"APZH"},"content":"- **Review/mentoring contributions**:","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"APZH"},"content":"  - **Contribution 1:** Help team members to test their features to ensure they work prior to releases each version of our application on GitHub.","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"APZH"},"content":"  - **Contribution 2:** Help review PRs made by team members in general and offer advice and feedback prior to merging the PRs.","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":101,"author":{"gitId":"APZH"},"content":"---","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"APZH"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":104,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"APZH"},"content":"### Contributions to the Developer Guide (Extracts):","lastModifiedDate":"2021-11-05"},{"lineNumber":106,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"APZH"},"content":"These are the diagrams (General, Class, Sequence...) I have added into the Developer Guide:","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"APZH"},"content":"#### For \"3.1 Architecture\"...","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"APZH"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"APZH"},"content":"    \u003cimg src\u003d\"../images/AmosUMLDiagrams/Architecture.png\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"APZH"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":113,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"APZH"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":115,"author":{"gitId":"APZH"},"content":"    \u003cimg src\u003d\"../images/AmosUMLDiagrams/SD_ValidInput.png\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":116,"author":{"gitId":"APZH"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":117,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"APZH"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":119,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":120,"author":{"gitId":"APZH"},"content":"#### For \"3.2 UI Component\"...","lastModifiedDate":"2021-11-05"},{"lineNumber":121,"author":{"gitId":"APZH"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":122,"author":{"gitId":"APZH"},"content":"    \u003cimg src\u003d\"../images/AmosUMLDiagrams/CD_UIComponent.png\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":123,"author":{"gitId":"APZH"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":124,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":125,"author":{"gitId":"APZH"},"content":"#### For \"3.3 Parser Component\"...","lastModifiedDate":"2021-11-05"},{"lineNumber":126,"author":{"gitId":"APZH"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":127,"author":{"gitId":"APZH"},"content":"    \u003cimg src\u003d\"../images/AmosUMLDiagrams/CD_ParserComponent.png\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":128,"author":{"gitId":"APZH"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":129,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":130,"author":{"gitId":"APZH"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":131,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":132,"author":{"gitId":"APZH"},"content":"#### For\"4.2 Filtering the tasklist\"...","lastModifiedDate":"2021-11-05"},{"lineNumber":133,"author":{"gitId":"APZH"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":134,"author":{"gitId":"APZH"},"content":"    \u003cimg src\u003d\"../images/AmosUMLDiagrams/SD_FilteringTasklist.png\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":135,"author":{"gitId":"APZH"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":136,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":137,"author":{"gitId":"APZH"},"content":"---","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"APZH":136,"SeanRobertDH":1}},{"path":"docs/team/seanrobertdh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"# Sean Robert den Hartog - Project Portfolio Page","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"## Overview \u003ca id\u003d\"scrollToHere\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"**SchedUrMods** is a desktop application for NUS students who wish to manage their assignments","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"and semester-related information via CLI (command-line interface). If you can type fast, SchedUrMods","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"can help you manage your daily tasks faster than traditional GUI application.","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"Given below are the contributions I have made to this project.","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"### Summary of Contributions","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"- **Code contributed:** [RepoSense Link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dSeanRobertDH\u0026tabRepo\u003dAY2122S1-CS2113T-W13-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"- **Features implemented:**","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"    - **Feature 1:** Implemented Task creation using Task Factories: `TaskFactory.java`, `TodoFactory.java`, `EventFactory.java`, `DeadlineFactory.java` classes.","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"        - **What it does:** Handles the creation of Todos, Deadlines and Events.","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"        - **Justification:** Allows programmers to create any concrete Task easily with the factories. Also allows for users to easily add new concrete Task factories by extending `TaskFactory`.","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"        - **Highlights:** Implemented using [Factory Method Pattern](https://en.wikipedia.org/wiki/Factory_method_pattern).","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"    - **Feature 2:** Implemented storage functionality: `FileCreator.java`, `DataManager.java`, `TaskTypeAdapter.java`, `Observer.java`, `Subject.java` classes.","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"        - **What it does:** On any changes to `taskList` in `TaskManager`, `TaskManager` will update the `DataManager` which will then save the new `taskList`","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"        - **Highlights:** Designed with Dependency Injection in mind. Implemented using [Observer Pattern](https://en.wikipedia.org/wiki/Observer_pattern). ","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"           Used [Gson](https://github.com/google/gson) library to export and import tasks. Created a custom *JsonSerializer* and *JsonDeserializer* in `TaskTypeAdapter.java`","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"           to parse Tasks.","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"        - **Justification:** Used `Gson` library so I wouldn\u0027t have to stress about parsing data to and from file.","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"    - **Feature 3:** Implemented the `edit` command.","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"        - **What it does:** Allows users to edit multiple variables in any Task in the `TaskManager` in a single command.","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"        - **Justification:** Makes it easier for user to edit Tasks rather than having to delete and re-add the Tasks.","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"        - **Additional Information:** Uses polymorphism such that concrete Tasks need only to overwrite the `taskEdit()` and `getTaskFlag()` functions to be editable.","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"    - **Feature 4:** Implemented the `delete` command.","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"        - **What it does:** Allows users to delete multiple tasks at once from the `TaskManager`.","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"        - **Justification:** Improves the user experience by allowing users to delete tasks from the most recent filtered list e.g. if they listed","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"           all their low priority task then it\u0027s easier to delete them together because they have contiguous indexes.","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"          which reduces the logical grouping of tasks in the user\u0027s tasklist.","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"    - **Feature 5:** Implemented the date parser `DateParser.java` class","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"        - **What it does:** Parsed `LocalDateTime` to `String` and vice-versa","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"        - **Highlights:** Allows for multiple different formats e.g. `25-12-2020 22:00`, `25/12/2020 22:00`, `25:12:21 22.00`","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"SeanRobertDH"},"content":"           and year, month, day and minute are all optional arguments allowing users to type less and make less mistakes e.g. `12.00` would translate to `today at 12pm`.","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"SeanRobertDH"},"content":"    - **Feature 6:** Implemented the logger, `Log.java` class","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"SeanRobertDH"},"content":"        - **What it does:** Allows programmers to easily log messages without the hassle of setting up the logger. they just have to","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"SeanRobertDH"},"content":"           call `Log.\u003cseverity\u003e(\"Log Message\")` e.g `Log.(\"Log Message\")`. ","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"SeanRobertDH"},"content":"        - **Highlights:** The logger handles getting the class by using the `Thread.currentThread().getStackTrace()` function and manages a `Map\u003cString, Logger\u003e` of","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"SeanRobertDH"},"content":"           class names to loggers. That way, the whole process of setting up a fileHandler, consoleHandler and log class is done automatically and","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"SeanRobertDH"},"content":"           the user doesn\u0027t have to worry about it. Therefore, any issues that can arise from it. e.g. specifying the wrong class when creating a logger are no longer an issue.","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"SeanRobertDH"},"content":"    - **Feature 7:** Created `PriorityEnum` and `RecurrenceEnum` for storing of priorities and recurrences.","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"SeanRobertDH"},"content":"        - **Justification:** Forces the program to be unable to store an invalid recurrence or priority.  ","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"SeanRobertDH"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"SeanRobertDH"},"content":"- **Contributions to the UG**:","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"SeanRobertDH"},"content":"    - **Contribution 1:** Added the documentation in \"2.1 Viewing help: `help`\".","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"SeanRobertDH"},"content":"    - **Contribution 2:** Added the documentation in \"2.2 Adding your tasks:\" + all it\u0027s sub-sections.","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"SeanRobertDH"},"content":"    - **Contribution 3:** Added the documentation in \"2.7 Editing your tasks: `edit`\".","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"SeanRobertDH"},"content":"    - **Contribution 4:** Added the documentation in \"2.8 Deleting your tasks: `delete`\".","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"SeanRobertDH"},"content":"    - **Contribution 5:** Added the documentation in \"2.10 Storage\".","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"SeanRobertDH"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"SeanRobertDH"},"content":"- **Contributions to the DG**:","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"SeanRobertDH"},"content":"    - **Contribution 1:** Added the granular architecture diagram in \"3.1 Architecture\".","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"SeanRobertDH"},"content":"        -  **Architecture Diagram** [Image] - Showing the main components of the program on a more granular level.","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"SeanRobertDH"},"content":"    - **Contribution 2:** Added the information in \"3.5 TaskManager Component\".","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"SeanRobertDH"},"content":"        - **Class Diagram** [Image] of the TaskManager component.","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"SeanRobertDH"},"content":"    - **Contribution 3:** Added the information in \"3.6 Storage Component\".","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"SeanRobertDH"},"content":"        - **Sequence Diagram** [Image] of the initialisation of Storage Component.","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"SeanRobertDH"},"content":"        - **Sequence Diagram** [Image] of the updating of Task save file.","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"SeanRobertDH"},"content":"    - **Contribution 4:** Added the information in \"3.8 Logger Component\".","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"SeanRobertDH"},"content":"    - **Contribution 5:** Added the information in \"4.1 Task Factories\".","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"SeanRobertDH"},"content":"        - **Sequence Diagram** [Image] of the creation of concrete Tasks in their respective factories.","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"SeanRobertDH"},"content":"        - **Class Diagram** [Image] of the Task factories.","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"SeanRobertDH"},"content":"    - **Contribution 6:** Added the information in \"4.3 [Proposed] Refactor TaskManager\".","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"SeanRobertDH"},"content":"    - **Contribution 7:** Added instructions for manual testing for \"Adding a task to task list\", \"Editing a task in task list\",","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"SeanRobertDH"},"content":"       \"Deleting tasks in task list\" and \"Saving files\".","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"SeanRobertDH"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"SeanRobertDH"},"content":"- **Contributions to GitHub Pages**: [link](https://ay2122s1-cs2113t-w13-3.github.io/tp/)","lastModifiedDate":"2021-11-08"},{"lineNumber":79,"author":{"gitId":"SeanRobertDH"},"content":"    - **Contribution 1:** Added the `UserGuide`, `DeveloperGuide` and `AboutUs` to the GitHub pages header to allow","lastModifiedDate":"2021-11-08"},{"lineNumber":80,"author":{"gitId":"SeanRobertDH"},"content":"       for easier navigation through the documents.","lastModifiedDate":"2021-11-08"},{"lineNumber":81,"author":{"gitId":"SeanRobertDH"},"content":"    - **Contribution 2:** Added an arrow icon at the bottom right of the different page documents to allow ","lastModifiedDate":"2021-11-08"},{"lineNumber":82,"author":{"gitId":"SeanRobertDH"},"content":"       site visitors to navigate to the `Overview` of the page allowing for easier navigation through the documents.","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"SeanRobertDH"},"content":"        - **Highlights:** Used [Google Material Icons](https://google.github.io/material-design-icons/) for the icon.","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"SeanRobertDH"},"content":"    - **Contribution 3:** Modified the `asets/css/style.scss` to overwrite the code `font-size` so that the","lastModifiedDate":"2021-11-08"},{"lineNumber":85,"author":{"gitId":"SeanRobertDH"},"content":"       code comments in the documentation look more uniform with the div it\u0027s in.","lastModifiedDate":"2021-11-08"},{"lineNumber":86,"author":{"gitId":"SeanRobertDH"},"content":"       site visitors to navigate to the `Overview` of the page allowing for easier navigation through the documents.","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"SeanRobertDH"},"content":"    - **Note:** These features were implemented after reading the up on the GitHub Pages documentation.","lastModifiedDate":"2021-11-08"},{"lineNumber":88,"author":{"gitId":"SeanRobertDH"},"content":"        ","lastModifiedDate":"2021-11-08"},{"lineNumber":89,"author":{"gitId":"SeanRobertDH"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":91,"author":{"gitId":"SeanRobertDH"},"content":"- **Review/mentoring contributions**:","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"SeanRobertDH"},"content":"    - **Contribution 1:** Help team members to test their features to ensure they work prior to releases each version of our application on GitHub.","lastModifiedDate":"2021-11-08"},{"lineNumber":93,"author":{"gitId":"SeanRobertDH"},"content":"    - **Contribution 2:** Help review PRs made by team members in general and offer advice and feedback prior to merging the PRs.","lastModifiedDate":"2021-11-08"},{"lineNumber":94,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":95,"author":{"gitId":"SeanRobertDH"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":96,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":97,"author":{"gitId":"SeanRobertDH"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":98,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":99,"author":{"gitId":"SeanRobertDH"},"content":"### Contributions to the Developer Guide (Extracts):","lastModifiedDate":"2021-11-08"},{"lineNumber":100,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":101,"author":{"gitId":"SeanRobertDH"},"content":"These are the diagrams (General, Class, Sequence...) I have added into the Developer Guide:","lastModifiedDate":"2021-11-08"},{"lineNumber":102,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":103,"author":{"gitId":"SeanRobertDH"},"content":"#### For \"3.1 Architecture\"...","lastModifiedDate":"2021-11-08"},{"lineNumber":104,"author":{"gitId":"SeanRobertDH"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":105,"author":{"gitId":"SeanRobertDH"},"content":"    \u003cimg src\u003d\"../images/SeanUMLDiagrams/SchedUrMods_Architecture.png\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":106,"author":{"gitId":"SeanRobertDH"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":107,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":108,"author":{"gitId":"SeanRobertDH"},"content":"#### For \"3.5 TaskManager Component\"...","lastModifiedDate":"2021-11-08"},{"lineNumber":109,"author":{"gitId":"SeanRobertDH"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":110,"author":{"gitId":"SeanRobertDH"},"content":"    \u003cimg src\u003d\"../images/SeanUMLDiagrams/TaskManager_Object_Diagram.png\" width\u003d\"850\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":111,"author":{"gitId":"SeanRobertDH"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":112,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":113,"author":{"gitId":"SeanRobertDH"},"content":"#### For \"3.6 Storage Component\"...","lastModifiedDate":"2021-11-08"},{"lineNumber":114,"author":{"gitId":"SeanRobertDH"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":115,"author":{"gitId":"SeanRobertDH"},"content":"    \u003cimg src\u003d\"../images/SeanUMLDiagrams/Storage_Sequence_Diagram1.png\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":116,"author":{"gitId":"SeanRobertDH"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":117,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":118,"author":{"gitId":"SeanRobertDH"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":119,"author":{"gitId":"SeanRobertDH"},"content":"    \u003cimg src\u003d\"../images/SeanUMLDiagrams/Storage_Sequence_Diagram2.png\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":120,"author":{"gitId":"SeanRobertDH"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":121,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":122,"author":{"gitId":"SeanRobertDH"},"content":"#### For\"4.1 Task Factories\"...","lastModifiedDate":"2021-11-08"},{"lineNumber":123,"author":{"gitId":"SeanRobertDH"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":124,"author":{"gitId":"SeanRobertDH"},"content":"    \u003cimg src\u003d\"../images/SeanUMLDiagrams/TaskFactory_Sequence_Diagram.png\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":125,"author":{"gitId":"SeanRobertDH"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":126,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":127,"author":{"gitId":"SeanRobertDH"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":128,"author":{"gitId":"SeanRobertDH"},"content":"    \u003cimg src\u003d\"../images/SeanUMLDiagrams/TaskFactory_Object_Diagram.png\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":129,"author":{"gitId":"SeanRobertDH"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":130,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":131,"author":{"gitId":"SeanRobertDH"},"content":"---","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"SeanRobertDH":131}},{"path":"docs/team/suibianp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SuibianP"},"content":"# Hu Jialun - Project Portfolio Page","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"## Product Overview - SchedUrMods \u003ca id\u003d\"scrollToHere\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"SuibianP"},"content":"**SchedUrMods** is a highly organic blend of conventional calendar applications and the official NUS timetable service, NUSMods. It enables immense possibilities for command-line interface (CLI) users at NUS to manage the entire time planning at the convenience of their fingertips.","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"SuibianP"},"content":"I am honoured to have my contributions in this project. Please find below some descriptions of my contributions, and also see [RepoSense](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003dAY2122S1-CS2113T-W13-3\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dSuibianP\u0026tabRepo\u003dAY2122S1-CS2113T-W13-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse) for the exact parts of my contributions.","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"SuibianP"},"content":"## Major functionality","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"SuibianP"},"content":"### NUSMods API interfacing","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"SuibianP"},"content":"As a core flagship feature of our product, the ability to interface the NUSMods API, parse its response, be it from local cache or remote server, is crucial. Implemented the `NusModsParser` and `Semester` class forming the `nusmods` package  to efficiently handle various situations.","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"SuibianP"},"content":"### Lesson type","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"SuibianP"},"content":"Unlike most calendar applications, lessons with their unique characteristics tightly bound to NUS academic timetable are treated as primitive types in this project. Implemented the `Lesson` class to seamlessly integrate with the aforementioned interface.","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"SuibianP"},"content":"Nonetheless, with customisation capabilities in mind, the lesson type was made modifiable via standard edit command for the user to have greater control over them.","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"SuibianP"},"content":"### Attaching link to tasks","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"SuibianP"},"content":"Zoom classes and web lecture recordings have been prevalent at NUS for a relatively long time, and it is recognised as an annoyance to find those links all over the place, Hence, this project also acts as a link hub by allowing users to add link to tasks. ","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"SuibianP"},"content":"Two classes are constructed for this purpose, namely `command.BrowseCommand` and `utility.ExternalHelper`. This feature is implemented using OS capabilities so that protocol supports are as abundant as possible.","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"SuibianP"},"content":"## Documentation","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"SuibianP"},"content":"### User Guide","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"SuibianP"},"content":"Added comprehensive description for `module` and `browse` commands, together with common precautions that users are advised to take.","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"SuibianP"},"content":"### Developer Guide","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"SuibianP"},"content":"Added documentation for the `nusmods` package to complement JavaDoc inside the relevant source files.","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"SuibianP"},"content":"## Testing","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"SuibianP"},"content":"### Linux","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"SuibianP"},"content":"As a regular Linux user, executed unit tests as well as functional test on Manjaro Linux to ensure platform compatibility. Several OS-specific problems were discovered and subsequently rectified or documented, such as the user guide notice on external error messages and the EOF behaviour which is widely assumed by Linux users.","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"SuibianP"},"content":"### Test cases","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"SuibianP"},"content":"Wrote exceptional test cases simulating network outage and file manipulation failure to mimic extreme situations that may arise on users\u0027 clients.","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"SuibianP"},"content":"### Code auditing","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"SuibianP"},"content":"While JVM prevents common attacks, bugs can compromise the application and also degrade user experience. Reviewed others\u0027 code for earlier discovery of uncaught exceptions and other vulnerabilities.","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"SuibianP"},"content":"## Team task","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"SuibianP"},"content":"Set up the team GitHub organisation and tp repository. Created team PR to module repository.","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"SuibianP"},"content":"Pulled down entire nusmods data for AY20/21 to conform to the minimal network requirement.","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"SuibianP"},"content":"```shell","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"SuibianP"},"content":"curl \"https://api.nusmods.com/v2/2021-2022/moduleList.json\" |","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"SuibianP"},"content":"jq -r \u0027\"https://api.nusmods.com/v2/2021-2022/modules/\" + .[].moduleCode + \".json\"\u0027 |","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"SuibianP"},"content":"wget -i - -nc  2\u003e\u00261 \u003e\u003e log","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"SuibianP"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"SuibianP"},"content":"Tested dead links for the team GitHub page.","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"SuibianP"},"content":"```shell","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"SuibianP"},"content":"LANG\u003dC wget --spider -r -nv \u0027https://ay2122s1-cs2113t-w13-3.github.io/tp/\u0027 2\u003e\u00261 |","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"SuibianP"},"content":"grep broken -A 2","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"SuibianP"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"SuibianP"},"content":"## Unmerged enhancements","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"SuibianP"},"content":"### Use annotations and reflection for commands","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"SuibianP"},"content":"#### Benefits","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"SuibianP"},"content":"Annotations allow further conformance to the open-close principle by keeping everything task-related inside its class and eliminate the need to modify an overall class each time a new type is added.","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"SuibianP"},"content":"Moreover, it also allows further third-party plugin development by taking advantage of the dynamic linking nature.","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"SuibianP"},"content":"As such, a functional commit was implemented based upon this concept. There was also an attempt to integrate annotation proprocessors and add that to Gradle to guarantee a certain level of compile-time check on the annotations.","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"SuibianP"},"content":"##### Considerations","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"SuibianP"},"content":"This proposal is declined for the consideration of stability and maintainability, since runtime reflection is essentially bypassing compile time checks, which entails too much work for the scope of CS2113T.","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"SuibianP":77,"SeanRobertDH":1}},{"path":"src/main/java/seedu/tp/SchedUrMods.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.Command;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.CommandResult;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.storage.DataManager;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.parser.CommandParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.storage.FileCreator;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.taskmanager.TaskManager;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.ui.Ui;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"public class SchedUrMods {","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"APZH"},"content":"    private Ui ui;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"    public SchedUrMods() {","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"APZH"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"        FileCreator fileCreator \u003d new FileCreator();","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"        if (fileCreator.hasCreatedFolder()) {","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"            DataManager dataManager \u003d new DataManager(fileCreator);","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"            taskManager \u003d new TaskManager(dataManager);","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"        } else {","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"            taskManager \u003d new TaskManager();","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"APZH"},"content":"    public CommandResult runCommand(Command userCommand) {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"APZH"},"content":"        CommandResult commandResult \u003d null;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"APZH"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"APZH"},"content":"            commandResult \u003d userCommand.executeCommand();","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"APZH"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"            commandResult \u003d new CommandResult(e.toString(), false);","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"APZH"},"content":"        return commandResult;","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"APZH"},"content":"    public void startProgram() {","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"APZH"},"content":"        ui.printLogo();","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"APZH"},"content":"        Command userCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"APZH"},"content":"        CommandResult commandResult;","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"APZH"},"content":"        do {","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"APZH"},"content":"            String userInput \u003d ui.readInput();","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"APZH"},"content":"            userCommand \u003d CommandParser.parseCommand(taskManager, userInput);","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"APZH"},"content":"            commandResult \u003d runCommand(userCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"APZH"},"content":"            ui.printMessage(commandResult.getMessage());","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"APZH"},"content":"        } while (commandResult.getIsExited() !\u003d true);","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"APZH"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"SeanRobertDH"},"content":"        SchedUrMods schedUrMods \u003d new SchedUrMods();","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"SeanRobertDH"},"content":"        schedUrMods.startProgram();","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"APZH":38,"SeanRobertDH":21,"-":3}},{"path":"src/main/java/seedu/tp/command/BrowseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.command;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.BrowseFailException;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.InvalidTaskIndexException;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"SuibianP"},"content":"import seedu.tp.exception.NoLinkException;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SuibianP"},"content":"import seedu.tp.exception.NotALessonException;","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.parser.CommandParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.Task;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.taskmanager.TaskManager;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.type.Lesson;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.utility.ExternalHelper;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"SuibianP"},"content":"import java.net.URI;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"SuibianP"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"SuibianP"},"content":"//@@author SuibianP","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"SuibianP"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"SuibianP"},"content":" * The command for browsing a link within a Lesson.","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"SuibianP"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"SuibianP"},"content":"public class BrowseCommand extends Command {","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"SuibianP"},"content":"    private static final String USAGE \u003d \"-\u003e Launching a link tagged to a task: browse \u003cindex\u003e\";","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"SuibianP"},"content":"    public BrowseCommand(TaskManager taskManager, Map\u003cString, String\u003e commandArguments) {","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"SuibianP"},"content":"        super(taskManager, commandArguments);","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"SuibianP"},"content":"    @Override","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"SuibianP"},"content":"    protected String getUsage() {","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"SuibianP"},"content":"        return USAGE;","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"SuibianP"},"content":"    @Override","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"SuibianP"},"content":"    public CommandResult executeCommand() throws Exception {","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"SuibianP"},"content":"        String message;","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"SuibianP"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"SuibianP"},"content":"            String mainArgument \u003d getMainArgument();","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"SuibianP"},"content":"            if (mainArgument \u003d\u003d null) {","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"SuibianP"},"content":"                throw new NullPointerException();","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"SuibianP"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"SuibianP"},"content":"            int index \u003d CommandParser.parseTaskIndex(mainArgument) - 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"SuibianP"},"content":"            assert taskManager !\u003d null;","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"SuibianP"},"content":"            Task task \u003d taskManager.getFilteredTask(index);","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"SuibianP"},"content":"            if (!(task instanceof Lesson)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"SuibianP"},"content":"                throw new NotALessonException();","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"SuibianP"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"SuibianP"},"content":"            URI link \u003d ((Lesson) task).getLink();","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"SuibianP"},"content":"            ExternalHelper.browseUri(link);","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"SuibianP"},"content":"            message \u003d link.toString();","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"SuibianP"},"content":"        } catch (NullPointerException npe) {","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"SuibianP"},"content":"            message \u003d USAGE;","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"SuibianP"},"content":"        } catch (ClassCastException cce) {","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"SuibianP"},"content":"            message \u003d cce.getMessage();","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"SuibianP"},"content":"        } catch (InvalidTaskIndexException itie) {","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"SuibianP"},"content":"            message \u003d itie.getMessage();","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"SuibianP"},"content":"        } catch (BrowseFailException bfe) {","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"SuibianP"},"content":"            message \u003d bfe.getMessage();","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"SuibianP"},"content":"        } catch (NoLinkException nle) {","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"SuibianP"},"content":"            message \u003d nle.getMessage();","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"SuibianP"},"content":"        } catch (NotALessonException nale) {","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"SuibianP"},"content":"            message \u003d nale.getMessage();","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"SuibianP"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"SuibianP"},"content":"        return new CommandResult(message, false);","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"SuibianP"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"SuibianP":56,"SeanRobertDH":8}},{"path":"src/main/java/seedu/tp/command/ByeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.command;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"APZH"},"content":"    private static final String EXIT_MSG \u003d \"Exiting program!\";","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"APZH"},"content":"    private static final String USAGE \u003d \"-\u003e Exiting the program: bye\";","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"APZH"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"APZH"},"content":"    public CommandResult executeCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"        return new CommandResult(EXIT_MSG, true);","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"    protected String getUsage() {","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"        return USAGE;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"APZH"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"APZH":8,"SeanRobertDH":9}},{"path":"src/main/java/seedu/tp/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.command;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"SuibianP"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.taskmanager.TaskManager;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"APZH"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"APZH"},"content":" * Represents a command.","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"APZH"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"APZH"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"    public static final String MAIN_ARGUMENT \u003d \"mainArgument\";","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String USAGE_REGEX \u003d \"Usage: %s\";","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"    protected final TaskManager taskManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"SuibianP"},"content":"    protected final Map\u003cString, String\u003e commandArguments;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"    public Command() {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"        this.taskManager \u003d null;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"        this.commandArguments \u003d null;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"    public Command(TaskManager taskManager, Map\u003cString, String\u003e commandArguments) {","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"APZH"},"content":"        this.commandArguments \u003d commandArguments;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"    protected String getMainArgument() {","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"        return commandArguments.get(MAIN_ARGUMENT);","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"    protected abstract String getUsage();","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"    protected String getUsageMessage() {","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"        return String.format(USAGE_REGEX, getUsage());","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"APZH"},"content":"    public abstract CommandResult executeCommand() throws Exception;","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"APZH"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"APZH":16,"SuibianP":2,"SeanRobertDH":21}},{"path":"src/main/java/seedu/tp/command/CommandEnum.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.command;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"//@@author SeanRobertDH","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":" * {@link java.lang.Enum} class used to store the names of all commands.","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"public enum CommandEnum {","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"    BYE, HELP, TODO, DEADLINE, EVENT, LIST, DELETE, REMINDER, SORT, MODULE, EDIT, BROWSE, INVALID, UPCOMING;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns the {@link seedu.tp.command.CommandEnum} corresponding to String command.","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"     * If command does not match any command, {@link #INVALID} is returned.","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"     * @param command \u003ccode\u003eString\u003c/code\u003e of name of {@link seedu.tp.command.CommandEnum} to return.","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"     * @return {@link seedu.tp.command.CommandEnum} enum corresponding","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"     *     to \u003ccode\u003eString command\u003c/code\u003e {@link seedu.tp.command.CommandEnum}.","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"    public static CommandEnum getCommand(String command) {","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"        for (CommandEnum commandEnum : CommandEnum.values()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"            if (command.equalsIgnoreCase(commandEnum.name())) {","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"                return commandEnum;","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"        return CommandEnum.INVALID;","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns the name of {@link seedu.tp.command.CommandEnum} in lowercase.","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e of {@link seedu.tp.command.CommandEnum} enum name in lowercase.","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"    public String toString() {","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"        return this.name().toLowerCase();","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"SeanRobertDH":36}},{"path":"src/main/java/seedu/tp/command/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.command;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"APZH"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"APZH"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"APZH"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"APZH"},"content":"public class CommandResult {","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String MESSAGE_NOT_NULL_ASSERTION \u003d \"Command Result message cannot be null!\";","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"    private final boolean isExited;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"    private final String message;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"    public CommandResult(String message, boolean isExited) {","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"        assert message !\u003d null : MESSAGE_NOT_NULL_ASSERTION;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"        this.isExited \u003d isExited;","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"APZH"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"APZH"},"content":"        return this.message;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"APZH"},"content":"    public boolean getIsExited() {","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"APZH"},"content":"        return this.isExited;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"APZH"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"APZH":18,"SeanRobertDH":9}},{"path":"src/main/java/seedu/tp/command/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.command;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"SuibianP"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.TreeSet;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.EmptyTasklistException;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.InvalidTaskIndexException;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.ParseTaskIndexesFailedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.NoTasksSpecifiedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.parser.CommandParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.Task;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.taskmanager.TaskManager;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"//@@author SeanRobertDH","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":" * Class for DeleteCommand. to be executed when removing tasks from {@link #taskManager}.","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String TASK_DELETED \u003d \"Task(s) deleted:\\n\";","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String USAGE \u003d \"-\u003e Deleting a task: delete \u003cindex\u003e\";","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String SPACE_REGEX \u003d \"[\\\\s|_]+\";","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String SEPARATOR \u003d \",\";","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String LIST_NUMBERS \u003d \"-\";","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"     * Constructs the DeleteCommand with the program {@link #taskManager}","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"     * and the \u003ccode\u003ecommandArguments\u003c/code\u003e specified in Command.","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"     * @param taskManager the program\u0027s {@link seedu.tp.task.taskmanager.TaskManager}.","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"     * @param commandArguments a \u003ccode\u003eMap\u0026lt;String, String\u0026gt;\u003c/code\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"     *     of \u003ccode\u003eflags\u003c/code\u003e to \u003ccode\u003eflag values\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"    public DeleteCommand(TaskManager taskManager, Map\u003cString, String\u003e commandArguments) {","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"        super(taskManager, commandArguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"     * Parses and deletes the tasks specified in {@link #getMainArgument()}.","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"SeanRobertDH"},"content":"     * @return The message from the command in CommandResult.","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws java.lang.Exception Any uncaught Exceptions.","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"SeanRobertDH"},"content":"    public CommandResult executeCommand() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"SeanRobertDH"},"content":"        String message \u003d TASK_DELETED;","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"SeanRobertDH"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"SeanRobertDH"},"content":"            String mainArgument \u003d getMainArgument();","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"SeanRobertDH"},"content":"            if (mainArgument \u003d\u003d null || mainArgument.equals(\"\")) {","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"SeanRobertDH"},"content":"                throw new NullPointerException();","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"SeanRobertDH"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"SeanRobertDH"},"content":"            if (taskManager.isEmpty()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"SeanRobertDH"},"content":"                throw new EmptyTasklistException();","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"SeanRobertDH"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"SeanRobertDH"},"content":"            String[] taskIndexStrings \u003d splitIndexesString(mainArgument);","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"SeanRobertDH"},"content":"            TreeSet\u003cInteger\u003e tasksToDelete \u003d getTasksToDelete(taskIndexStrings);","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"SeanRobertDH"},"content":"            if (tasksToDelete.isEmpty()) {","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"SeanRobertDH"},"content":"                throw new NoTasksSpecifiedException(mainArgument);","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"SeanRobertDH"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"SeanRobertDH"},"content":"            message +\u003d deleteTasks(tasksToDelete);","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (NullPointerException npe) {","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"SeanRobertDH"},"content":"            message \u003d getUsageMessage();","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (EmptyTasklistException etle) {","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"SeanRobertDH"},"content":"            message \u003d etle.getMessage();","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (NoTasksSpecifiedException ntse) {","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"SeanRobertDH"},"content":"            message \u003d ntse.getMessage();","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"SeanRobertDH"},"content":"            message \u003d nfe.getMessage();","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (ParseTaskIndexesFailedException nie) {","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"SeanRobertDH"},"content":"            message \u003d String.format(nie.getMessage(), getMainArgument());","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (InvalidTaskIndexException itie) {","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"SeanRobertDH"},"content":"            message \u003d itie.getMessage();","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"SeanRobertDH"},"content":"        return new CommandResult(message, false);","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"SeanRobertDH"},"content":"    protected String getUsage() {","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"SeanRobertDH"},"content":"        return USAGE;","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns a \u003ccode\u003eString[]\u003c/code\u003e split by {@link #SEPARATOR} after having","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"SeanRobertDH"},"content":"     * its whitespace removed.","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"SeanRobertDH"},"content":"     * @param argument \u003ccode\u003eString\u003c/code\u003e to split.","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"SeanRobertDH"},"content":"     * @return \u003ccode\u003eString[]\u003c/code\u003e split by {@link #SEPARATOR} With whitespace removed.","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"SeanRobertDH"},"content":"    private String[] splitIndexesString(String argument) {","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"SeanRobertDH"},"content":"        String parsedArgument \u003d argument.replaceAll(SPACE_REGEX, \"\");","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"SeanRobertDH"},"content":"        return parsedArgument.split(SEPARATOR);","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"SeanRobertDH"},"content":"    private TreeSet\u003cInteger\u003e getTasksToDelete(String[] indexStrings) throws NumberFormatException,","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"SeanRobertDH"},"content":"            ParseTaskIndexesFailedException {","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"SeanRobertDH"},"content":"        TreeSet\u003cInteger\u003e indexes \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"SeanRobertDH"},"content":"        for (String indexString : indexStrings) {","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"SeanRobertDH"},"content":"            if (indexString.contains(LIST_NUMBERS)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"SeanRobertDH"},"content":"                addListIndexes(indexes, indexString);","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"SeanRobertDH"},"content":"            } else {","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"SeanRobertDH"},"content":"                indexes.add(CommandParser.parseTaskIndex(indexString));","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"SeanRobertDH"},"content":"            }","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"SeanRobertDH"},"content":"        return indexes;","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":106,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"SeanRobertDH"},"content":"     * Takes in a String of 2 integers separated by a \u0027-\u0027 and adds all integers in-between and inclusive","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"SeanRobertDH"},"content":"     * of the 2 integers into \u003ccode\u003eindexes\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"SeanRobertDH"},"content":"     * @param indexes The \u003ccode\u003eTreeSet\u0026lt;Integer\u0026gt;\u003c/code\u003e of integers corresponding to Tasks to be deleted.","lastModifiedDate":"2021-11-05"},{"lineNumber":112,"author":{"gitId":"SeanRobertDH"},"content":"     * @param indexString The \u003ccode\u003eString\u003c/code\u003e to be parsed for the indexes to add to \u003ccode\u003eindexes\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":113,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws seedu.tp.exception.ParseTaskIndexesFailedException If","lastModifiedDate":"2021-11-07"},{"lineNumber":114,"author":{"gitId":"SeanRobertDH"},"content":"     *     listIndexes[0] || listIndexes[1] is an empty \u003ccode\u003eString\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":115,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"SeanRobertDH"},"content":"    private void addListIndexes(TreeSet\u003cInteger\u003e indexes, String indexString) throws ParseTaskIndexesFailedException {","lastModifiedDate":"2021-11-05"},{"lineNumber":117,"author":{"gitId":"SeanRobertDH"},"content":"        String[] listIndexes \u003d indexString.split(LIST_NUMBERS, 2);","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"SeanRobertDH"},"content":"        Integer startIndex \u003d CommandParser.parseTaskIndex(listIndexes[0]);","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"SeanRobertDH"},"content":"        Integer endIndex \u003d CommandParser.parseTaskIndex(listIndexes[1]);","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"SeanRobertDH"},"content":"        for (Integer index \u003d startIndex; index \u003c\u003d endIndex; index++) {","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"SeanRobertDH"},"content":"            indexes.add(index);","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"SeanRobertDH"},"content":"    private String deleteTasks(TreeSet\u003cInteger\u003e indexes) throws InvalidTaskIndexException {","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.checkFilteredListIndexValid(indexes.first() - 1);","lastModifiedDate":"2021-10-28"},{"lineNumber":127,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.checkFilteredListIndexValid(indexes.last() - 1);","lastModifiedDate":"2021-10-28"},{"lineNumber":128,"author":{"gitId":"SeanRobertDH"},"content":"        int offset \u003d 0;","lastModifiedDate":"2021-11-05"},{"lineNumber":129,"author":{"gitId":"SeanRobertDH"},"content":"        String message \u003d \"\";","lastModifiedDate":"2021-11-05"},{"lineNumber":130,"author":{"gitId":"SeanRobertDH"},"content":"        for (Integer index : indexes) {","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"SeanRobertDH"},"content":"            Task deletedTask \u003d taskManager.deleteFilteredTask(index - 1 - offset++);","lastModifiedDate":"2021-10-28"},{"lineNumber":132,"author":{"gitId":"SeanRobertDH"},"content":"            message +\u003d deletedTask.getTaskEntryDescription() + \u0027\\n\u0027;","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"SeanRobertDH"},"content":"        return message;","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"SuibianP":1,"SeanRobertDH":135}},{"path":"src/main/java/seedu/tp/command/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.command;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.flags.DeadlineFlag;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.flags.EventFlag;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.flags.LessonFlag;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.flags.TaskFlag;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.flags.TodoFlag;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.EmptyDescriptionException;","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.EmptyTasklistException;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.InvalidFlagsException;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.InvalidPriorityException;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.InvalidTaskIndexException;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.ParseDateFailedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.StartDateAfterEndDateException;","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.parser.CommandParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.parser.DateParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.parser.TaskUsageParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.Task;","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.taskmanager.TaskManager;","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":" * Class for EditCommand. to be executed when editing tasks from {@link #taskManager}.","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String TASK_EDITED \u003d \"Task(s) edited:\\n\";","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"APZH"},"content":"    private static final String USAGE \u003d \"-\u003e Editing a task: edit \u003cindex\u003e \u003c--flag value\u003e [--flag value] \"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"APZH"},"content":"        + \"[--flag value]...\";","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String SEE_USAGE_MESSAGE \u003d \"Type \u0027edit\u0027 to see command usage.\";","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String FLAG_HEADER \u003d CommandParser.FLAG_HEADER;","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"    private static final char NEWLINE \u003d \u0027\\n\u0027;","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String FLAGS_MESSAGE \u003d","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"        \"Flags:\\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"            + FLAG_HEADER + TaskFlag.EDIT_DESCRIPTION + \" \u003cdescription\u003e modifies Task description.\" + NEWLINE","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"            + FLAG_HEADER + TaskFlag.PRIORITY + \" \u003c\" + TaskUsageParser.getPrioritiesListString()","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"                + \"\u003e modifies Task priority.\" + NEWLINE","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"            + FLAG_HEADER + TaskFlag.RECURRENCE + \" \u003c\" + TaskUsageParser.getRecurrencesListString()","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"SeanRobertDH"},"content":"                + \"\u003e modifies Task recurrence.\" + NEWLINE","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"SeanRobertDH"},"content":"            + FLAG_HEADER + TodoFlag.DO_ON_DATE + \" \u003c\" + DateParser.getDefaultDateFormat()","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"SeanRobertDH"},"content":"                + \"\u003e modifies when Todo is to be done.\" + NEWLINE","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"SeanRobertDH"},"content":"            + FLAG_HEADER + DeadlineFlag.DUE_DATE + \" \u003c\" + DateParser.getDefaultDateFormat()","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"SeanRobertDH"},"content":"            + \"\u003e modifies when Deadline is to due.\" + NEWLINE","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"SeanRobertDH"},"content":"            + FLAG_HEADER + EventFlag.START_DATE + \" \u003c\" + DateParser.getDefaultDateFormat()","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"SeanRobertDH"},"content":"            + \"\u003e modifies when Event starts.\" + NEWLINE","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"SeanRobertDH"},"content":"            + FLAG_HEADER + EventFlag.END_DATE + \" \u003c\" + DateParser.getDefaultDateFormat()","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"SeanRobertDH"},"content":"            + \"\u003e modifies when Event ends.\" + NEWLINE","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"SeanRobertDH"},"content":"            + FLAG_HEADER + LessonFlag.LINK + \" \u003curl\u003e modifies your Lesson link.\";","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"SeanRobertDH"},"content":"     * Constructs the EditCommand with the program {@link #taskManager}","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"SeanRobertDH"},"content":"     * and the \u003ccode\u003ecommandArguments\u003c/code\u003e specified in Command.","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"SeanRobertDH"},"content":"     * @param taskManager      the program\u0027s {@link seedu.tp.task.taskmanager.TaskManager}.","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"SeanRobertDH"},"content":"     * @param commandArguments a \u003ccode\u003eMap\u0026lt;String, String\u0026gt;\u003c/code\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"SeanRobertDH"},"content":"     *                         of \u003ccode\u003eflags\u003c/code\u003e to \u003ccode\u003eflag values\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"SeanRobertDH"},"content":"    public EditCommand(TaskManager taskManager, Map\u003cString, String\u003e commandArguments) {","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"SeanRobertDH"},"content":"        super(taskManager, commandArguments);","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"SeanRobertDH"},"content":"    protected String getUsage() {","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"SeanRobertDH"},"content":"        return USAGE;","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"SeanRobertDH"},"content":"     * Parses and edits the task specified in {@link #getMainArgument()}","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"SeanRobertDH"},"content":"     * using the {@link seedu.tp.command.flags.TaskFlag#EDIT_DESCRIPTION} to change","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"SeanRobertDH"},"content":"     * Task description and respective flags in superclasses of {@link seedu.tp.command.flags.TaskFlag}","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"SeanRobertDH"},"content":"     * to modify Task superclass values.","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"SeanRobertDH"},"content":"     * @return The message from the command in CommandResult.","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws java.lang.Exception Any uncaught Exceptions.","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"SeanRobertDH"},"content":"    public CommandResult executeCommand() throws Exception {","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"SeanRobertDH"},"content":"        String message \u003d TASK_EDITED;","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"SeanRobertDH"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"SeanRobertDH"},"content":"            String mainArgument \u003d getMainArgument();","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"SeanRobertDH"},"content":"            if (mainArgument \u003d\u003d null || mainArgument.equals(\"\") || commandArguments.size() \u003d\u003d 1) {","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"SeanRobertDH"},"content":"                throw new NullPointerException();","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"SeanRobertDH"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"SeanRobertDH"},"content":"            if (taskManager.isEmpty()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"SeanRobertDH"},"content":"                throw new EmptyTasklistException();","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"SeanRobertDH"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"SuibianP"},"content":"            int index \u003d CommandParser.parseTaskIndex(mainArgument);","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"SeanRobertDH"},"content":"            Task editedTask \u003d taskManager.editFilteredTask(index - 1, commandArguments);","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"SeanRobertDH"},"content":"            message +\u003d editedTask.getTaskEntryDescription();","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (NullPointerException npe) {","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"SeanRobertDH"},"content":"            message \u003d getUsageMessage() + NEWLINE + FLAGS_MESSAGE;","lastModifiedDate":"2021-11-06"},{"lineNumber":94,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (EmptyTasklistException etle) {","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"SeanRobertDH"},"content":"            message \u003d etle.getMessage();","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"SeanRobertDH"},"content":"            message \u003d nfe.getMessage();","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (EmptyDescriptionException ede) {","lastModifiedDate":"2021-11-08"},{"lineNumber":99,"author":{"gitId":"SeanRobertDH"},"content":"            message \u003d ede.getMessage();","lastModifiedDate":"2021-11-08"},{"lineNumber":100,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (InvalidTaskIndexException itie) {","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"SeanRobertDH"},"content":"            message \u003d itie.getMessage();","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (InvalidPriorityException ipe) {","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"SeanRobertDH"},"content":"            message \u003d ipe.getMessage();","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (ParseDateFailedException pdfe) {","lastModifiedDate":"2021-10-28"},{"lineNumber":105,"author":{"gitId":"SeanRobertDH"},"content":"            message \u003d pdfe.getMessage();","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (StartDateAfterEndDateException sdaede) {","lastModifiedDate":"2021-10-28"},{"lineNumber":107,"author":{"gitId":"SeanRobertDH"},"content":"            message \u003d sdaede.getMessage();","lastModifiedDate":"2021-10-28"},{"lineNumber":108,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (InvalidFlagsException ife) {","lastModifiedDate":"2021-11-06"},{"lineNumber":109,"author":{"gitId":"SeanRobertDH"},"content":"            message \u003d ife.getMessage();","lastModifiedDate":"2021-11-06"},{"lineNumber":110,"author":{"gitId":"SeanRobertDH"},"content":"            message +\u003d SEE_USAGE_MESSAGE;","lastModifiedDate":"2021-11-06"},{"lineNumber":111,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":112,"author":{"gitId":"SeanRobertDH"},"content":"        return new CommandResult(message, false);","lastModifiedDate":"2021-11-05"},{"lineNumber":113,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"APZH":2,"SuibianP":1,"SeanRobertDH":111}},{"path":"src/main/java/seedu/tp/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.command;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.addtask.DeadlineCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.addtask.EventCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.addtask.ModuleCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.addtask.TodoCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"//@@author SeanRobertDH","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":" * Class for HelpCommand. to be executed when the User needs to see usage for all {@link seedu.tp.command.Command}.","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String SEPARATOR \u003d \"......................................................................\\n\";","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String HEADER \u003d \"[!] Please kindly refer below for the list of commands available:\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"            + SEPARATOR;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String NEW_LINE \u003d System.lineSeparator();","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String ADDITIONAL_INFORMATION \u003d SEPARATOR","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"        + \"* \u003c--flag argument\u003e specifies a required argument\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"        + \"* [--flag argument] specifies an optional argument\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"        + SEPARATOR;","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"    private static final Command[] COMMANDS_TO_LIST \u003d {","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"        new ByeCommand(),","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"        new DeadlineCommand(null, null),","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"        new EventCommand(null, null),","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"        new TodoCommand(null, null),","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"        new ModuleCommand(null, null),","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"        new BrowseCommand(null, null),","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"        new ListCommand(null, null),","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"        new SortCommand(null, null),","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"        new DeleteCommand(null, null),","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"        new EditCommand(null, null),","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"        new ReminderCommand(null, null)","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"    };","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"    public CommandResult executeCommand() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"        String message \u003d HEADER;","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"        for (Command command : COMMANDS_TO_LIST) {","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"SeanRobertDH"},"content":"            message +\u003d command.getUsage() + NEW_LINE;","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"SeanRobertDH"},"content":"        message +\u003d ADDITIONAL_INFORMATION;","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"SeanRobertDH"},"content":"        return new CommandResult(message, false);","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"SeanRobertDH"},"content":"    protected String getUsage() {","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"SeanRobertDH"},"content":"        return null;","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"APZH":1,"SeanRobertDH":50}},{"path":"src/main/java/seedu/tp/command/InvalidCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.command;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"APZH"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"SuibianP"},"content":"    static final String INVALID_MSG \u003d \"The command you returned is not understood\";","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"APZH"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"APZH"},"content":"    public CommandResult executeCommand() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"        return new CommandResult(INVALID_MSG, false);","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"    protected String getUsage() {","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"        return null;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"APZH"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"APZH":6,"SuibianP":2,"SeanRobertDH":8}},{"path":"src/main/java/seedu/tp/command/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.command;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"SuibianP"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.EmptyTasklistException;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.InvalidPriorityException;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.InvalidRecurrenceException;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.InvalidTaskIndexException;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.InvalidTaskTypeException;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.ListFormatException;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.MissingFilterArgumentException;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.TaskIsNonRecurringException;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.taskmanager.TaskManager;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"APZH"},"content":"//@@author APZH","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"APZH"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"APZH"},"content":" * Represents a command to list the tasks in a tasklist.","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"APZH"},"content":" * This command can filter the tasklist and display the recurrences of a task.","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"APZH"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"APZH"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"APZH"},"content":"    private static final String USAGE \u003d \"-\u003e Listing/Filtering your tasklist: list [--flag value] [--flag value] ...\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"APZH"},"content":"            + \"-\u003e Listing a recurrence of a task: list \u003cindex\u003e\";","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"APZH"},"content":"    public ListCommand(TaskManager taskManager, Map\u003cString, String\u003e commandArguments) {","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"APZH"},"content":"        super(taskManager, commandArguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"APZH"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"APZH"},"content":"     * Executes the list command.","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"APZH"},"content":"     * Stores the message to be displayed to the user into {@code message}","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"APZH"},"content":"     * and to be passed as an input parameter of the {@code CommandResult} object to be returned.","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"APZH"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"APZH"},"content":"     * @return The command result of the execution.","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"APZH"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"APZH"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"APZH"},"content":"    public CommandResult executeCommand() {","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"APZH"},"content":"        String message \u003d \"\";","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"APZH"},"content":"        boolean containsMainArgument \u003d commandArguments.containsKey(MAIN_ARGUMENT);","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"APZH"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"APZH"},"content":"            taskManager.refreshListDates();","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"APZH"},"content":"            if (!containsMainArgument || (containsMainArgument \u0026\u0026 commandArguments.get(MAIN_ARGUMENT).equals(\"\"))) {","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"APZH"},"content":"                message \u003d taskManager.listTasklistWithFilter(commandArguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"APZH"},"content":"            } else if (containsMainArgument) {","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"APZH"},"content":"                message \u003d taskManager.listTaskRecurrence(commandArguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"APZH"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"APZH"},"content":"        } catch (EmptyTasklistException ete) {","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"APZH"},"content":"            message \u003d ete.toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"APZH"},"content":"        } catch (ListFormatException lfe) {","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"APZH"},"content":"            message \u003d lfe.toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"APZH"},"content":"        } catch (MissingFilterArgumentException mfae) {","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"APZH"},"content":"            message \u003d mfae.toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"APZH"},"content":"        } catch (InvalidTaskIndexException itie) {","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"APZH"},"content":"            message \u003d itie.toString();","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"APZH"},"content":"        } catch (InvalidTaskTypeException itte) {","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"APZH"},"content":"            message \u003d itte.toString();","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"APZH"},"content":"        } catch (InvalidPriorityException ipe) {","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"APZH"},"content":"            message \u003d ipe.toString();","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"APZH"},"content":"        } catch (InvalidRecurrenceException ire) {","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"APZH"},"content":"            message \u003d ire.toString();","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"APZH"},"content":"        } catch (TaskIsNonRecurringException tnrx) {","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"APZH"},"content":"            message \u003d tnrx.toString();","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"APZH"},"content":"        return new CommandResult(message, false);","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"APZH"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"APZH"},"content":"    protected String getUsage() {","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"APZH"},"content":"        return USAGE;","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"APZH"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"APZH":61,"SuibianP":2,"SeanRobertDH":10}},{"path":"src/main/java/seedu/tp/command/ReminderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.command;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.MissingReminderFieldException;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.MissingUserMessageException;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.MissingUserTimeException;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.taskmanager.TaskManager;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.reminder.ReminderManager;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Xuefei2001"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"Xuefei2001"},"content":"public class ReminderCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"APZH"},"content":"    private static final String USAGE \u003d \"-\u003e Setting a reminder for a task: reminder \u003cindex\u003e\";","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"Xuefei2001"},"content":"    public ReminderCommand(TaskManager taskManager, Map\u003cString, String\u003e commandArguments) {","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Xuefei2001"},"content":"        super(taskManager, commandArguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"Xuefei2001"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"Xuefei2001"},"content":"    protected String getUsage() {","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"        return USAGE;","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"Xuefei2001"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"Xuefei2001"},"content":"    public CommandResult executeCommand() throws Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"Xuefei2001"},"content":"        String message \u003d \"\";","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"Xuefei2001"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"Xuefei2001"},"content":"            message \u003d ReminderManager.customizeReminder(taskManager, commandArguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"Xuefei2001"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"Xuefei2001"},"content":"            message \u003d \"Please use integer values for time and index\";","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"Xuefei2001"},"content":"        } catch (MissingUserTimeException mute) {","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"Xuefei2001"},"content":"            message \u003d mute.getMessage();","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"Xuefei2001"},"content":"        } catch (MissingUserMessageException mume) {","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"Xuefei2001"},"content":"            message \u003d mume.getMessage();","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"Xuefei2001"},"content":"        } catch (MissingReminderFieldException mrfe) {","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"Xuefei2001"},"content":"            message \u003d mrfe.getMessage();","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"Xuefei2001"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"        return new CommandResult(message, false);","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"Xuefei2001"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"APZH":1,"SeanRobertDH":8,"Xuefei2001":30}},{"path":"src/main/java/seedu/tp/command/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.command;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.EmptySortCriteriaException;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.EmptyTasklistException;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.taskmanager.TaskManager;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"SuibianP"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"APZH"},"content":"//@@author APZH","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"APZH"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"APZH"},"content":" * Represents a command to sort the tasks in a tasklist.","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"APZH"},"content":" * This command can sort the tasklist by either task type, description, or priority.","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"APZH"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"APZH"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"APZH"},"content":"    private static final String USAGE \u003d \"-\u003e Sorting your tasklist: sort \u003c--by\u003e \u003cindex\u003e\";","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"APZH"},"content":"    public SortCommand(TaskManager taskManager, Map\u003cString, String\u003e commandArguments) {","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"APZH"},"content":"        super(taskManager, commandArguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"APZH"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"APZH"},"content":"     * Executes the sort command.","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"APZH"},"content":"     * Stores the message to be displayed to the user into {@code message}","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"APZH"},"content":"     * and to be passed as an input parameter of the {@code CommandResult} object to be returned.","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"APZH"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"APZH"},"content":"     * @return The command result of the execution.","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"APZH"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"APZH"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"APZH"},"content":"    public CommandResult executeCommand() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"APZH"},"content":"        String message \u003d \"\";","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"APZH"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"APZH"},"content":"            message \u003d taskManager.sortTasklist(commandArguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"APZH"},"content":"        } catch (EmptyTasklistException ete) {","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"APZH"},"content":"            message \u003d ete.toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"APZH"},"content":"        } catch (EmptySortCriteriaException esce) {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"APZH"},"content":"            message \u003d esce.toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"APZH"},"content":"        return new CommandResult(message, false);","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"APZH"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"APZH"},"content":"    protected String getUsage() {","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"APZH"},"content":"        return USAGE;","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"APZH"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"APZH":45,"SuibianP":1,"SeanRobertDH":4}},{"path":"src/main/java/seedu/tp/command/UpcomingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SuibianP"},"content":"package seedu.tp.command;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"SuibianP"},"content":"import seedu.tp.task.RecurrenceEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"SuibianP"},"content":"import seedu.tp.task.Task;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"SuibianP"},"content":"import seedu.tp.task.taskmanager.TaskManager;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SuibianP"},"content":"import seedu.tp.task.type.Lesson;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SuibianP"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SuibianP"},"content":"import java.time.Period;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SuibianP"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"SuibianP"},"content":"import java.util.Map;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"SuibianP"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"SuibianP"},"content":"public class UpcomingCommand extends Command {","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"SuibianP"},"content":"    public static final String NO_UPCOMING_MESSAGE \u003d \"[!] There is no upcoming task in your tasklist.\";","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"SuibianP"},"content":"    public UpcomingCommand(TaskManager taskManager, Map\u003cString, String\u003e commandOptions) {","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"SuibianP"},"content":"        super(taskManager, commandOptions);","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"SuibianP"},"content":"    @Override","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"SuibianP"},"content":"    protected String getUsage() {","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"SuibianP"},"content":"        return null;","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"SuibianP"},"content":"    private class SortByTaskHappenTime implements Comparator\u003cTask\u003e {","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"SuibianP"},"content":"        @Override","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"SuibianP"},"content":"        public int compare(Task o1, Task o2) {","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"            assert o1.getListDate() !\u003d null \u0026\u0026 o2.getListDate() !\u003d null;","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"            return o1.getListDate().compareTo(o2.getListDate());","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"SuibianP"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"SuibianP"},"content":"    @Override","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"SuibianP"},"content":"    public CommandResult executeCommand() throws Exception {","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"SuibianP"},"content":"        Period distance \u003d Period.ofWeeks(1);","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"SuibianP"},"content":"        LocalDateTime end \u003d LocalDateTime.now().plus(distance);","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"SuibianP"},"content":"        String message \u003d taskManager.getAllTasksView().stream().filter(task -\u003e {","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"SeanRobertDH"},"content":"            LocalDateTime startTime \u003d task.getListDate();","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"SuibianP"},"content":"            LocalDateTime next;","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"SuibianP"},"content":"            if (startTime \u003d\u003d null) {","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"SuibianP"},"content":"                return true;","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"SuibianP"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"SuibianP"},"content":"            if (task instanceof Lesson) {","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"SuibianP"},"content":"                next \u003d ((Lesson)task).getNextOccurrence();","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"SuibianP"},"content":"            } else {","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"SuibianP"},"content":"                // check if start time fall in the next distance time","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"SuibianP"},"content":"                return end.isAfter(task.getRecurrence().getNextRecurredDate(startTime));","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"SuibianP"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"SuibianP"},"content":"            return end.isAfter(next);","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"SuibianP"},"content":"        }).sorted(new SortByTaskHappenTime()).map(Task::getTaskEntryDescription)","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"SuibianP"},"content":"                .collect(Collectors.joining(System.lineSeparator()));","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"SuibianP"},"content":"        if (message.isEmpty()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"SuibianP"},"content":"            message \u003d NO_UPCOMING_MESSAGE;","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"SuibianP"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"SuibianP"},"content":"        return new CommandResult(message, false);","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"SuibianP"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"SuibianP":57,"SeanRobertDH":3}},{"path":"src/main/java/seedu/tp/command/addtask/DeadlineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.command.addtask;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"SuibianP"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.flags.DeadlineFlag;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.parser.DateParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.factory.DeadlineFactory;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.taskmanager.TaskManager;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"//@@author SeanRobertDH","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":" * Class for DeadlineCommand. Extends {@link seedu.tp.command.addtask.TaskCommand}","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":" * and sets the respective TaskFactory {@link seedu.tp.task.factory.DeadlineFactory}","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":" * using {@link #setTaskFactory()}.","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"public class DeadlineCommand extends TaskCommand {","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String USAGE \u003d \"-\u003e Adding a deadline: deadline \u003cdescription\u003e \u003c--%s %s\u003e\";","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"     * Constructs the DeadlineCommand with the program {@link #taskManager}","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"     * and the \u003ccode\u003ecommandArguments\u003c/code\u003e specified in Command.","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"     * @param taskManager the program\u0027s {@link seedu.tp.task.taskmanager.TaskManager}.","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"     * @param commandArguments a \u003ccode\u003eMap\u0026lt;String, String\u0026gt;\u003c/code\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"     *     of \u003ccode\u003eflags\u003c/code\u003e to \u003ccode\u003eflag values\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"    public DeadlineCommand(TaskManager taskManager, Map\u003cString, String\u003e commandArguments) {","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"        super(taskManager, commandArguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"    DeadlineFactory setTaskFactory() {","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"        return new DeadlineFactory(commandArguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"    protected String getTaskUsage() {","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"        return String.format(USAGE, DeadlineFlag.DUE_DATE, DateParser.getDefaultDateFormat());","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"SuibianP":2,"SeanRobertDH":39}},{"path":"src/main/java/seedu/tp/command/addtask/EventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.command.addtask;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"SuibianP"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.flags.EventFlag;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.parser.DateParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.factory.EventFactory;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.taskmanager.TaskManager;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"//@@author SeanRobertDH","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":" * Class for EventCommand. Extends {@link seedu.tp.command.addtask.TaskCommand}","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":" * and sets the respective TaskFactory {@link seedu.tp.task.factory.EventFactory}.","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":" *  using {@link EventCommand#setTaskFactory()}.","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"public class EventCommand extends TaskCommand {","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String USAGE \u003d \"-\u003e Adding an event: event \u003cdescription\u003e \u003c--%s %s\u003e \u003c--%s %s\u003e\";","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"     * Constructs the EventCommand with the program {@link #taskManager}","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"     * and the \u003ccode\u003ecommandArguments\u003c/code\u003e specified in Command.","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"     * @param taskManager the program\u0027s {@link seedu.tp.task.taskmanager.TaskManager}.","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"     * @param commandArguments a \u003ccode\u003eMap\u0026lt;String, String\u0026gt;\u003c/code\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"     *     of \u003ccode\u003eflags\u003c/code\u003e to \u003ccode\u003eflag values\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"    public EventCommand(TaskManager taskManager, Map\u003cString, String\u003e commandArguments) {","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"        super(taskManager, commandArguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"    EventFactory setTaskFactory() {","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"        return new EventFactory(commandArguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"    protected String getTaskUsage() {","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"        return String.format(USAGE,","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"            EventFlag.START_DATE, DateParser.getDefaultDateFormat(),","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"SeanRobertDH"},"content":"            EventFlag.END_DATE, DateParser.getDefaultDateFormat());","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"SuibianP":2,"SeanRobertDH":41}},{"path":"src/main/java/seedu/tp/command/addtask/ModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.command.addtask;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.Command;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.CommandResult;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.ModuleStringFormatIncorrectException;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SuibianP"},"content":"import seedu.tp.exception.NoSuchModuleException;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.nusmods.NusModsParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.taskmanager.TaskManager;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"SuibianP"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"SuibianP"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"SuibianP"},"content":"//@@author SuibianP","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"SuibianP"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"SuibianP"},"content":" * Command to add module lessons.","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"SuibianP"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"SuibianP"},"content":"public class ModuleCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"SuibianP"},"content":"    private static final String USAGE \u003d \"-\u003e Adding a module: module {\u003cmodule code\u003e:{\u003cclass number\u003e,}...;}...\";","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"SuibianP"},"content":"    public ModuleCommand(TaskManager taskManager, Map\u003cString, String\u003e commandArguments) {","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"SuibianP"},"content":"        super(taskManager, commandArguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"SuibianP"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"SuibianP"},"content":"    protected String getUsage() {","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"SuibianP"},"content":"        return USAGE;","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"SuibianP"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"SuibianP"},"content":"    public CommandResult executeCommand() throws Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"SuibianP"},"content":"        String message \u003d \"\";","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"SuibianP"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"SuibianP"},"content":"            for (String piece : getMainArgument().split(\";\")) {","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"SuibianP"},"content":"                String[] pair \u003d piece.split(\":\");","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"SuibianP"},"content":"                if (pair.length !\u003d 2) {","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"SuibianP"},"content":"                    throw new ModuleStringFormatIncorrectException();","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"SuibianP"},"content":"                }","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"SuibianP"},"content":"                String moduleCode \u003d pair[0];","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"SuibianP"},"content":"                for (String classNo : pair[1].split(\",\")) {","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"SuibianP"},"content":"                    taskManager.addTasks(Arrays.asList(new NusModsParser().getLessons(moduleCode, classNo)));","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"SuibianP"},"content":"                    message +\u003d \"Added \" + moduleCode + \u0027 \u0027 + classNo + System.lineSeparator();","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"SuibianP"},"content":"                }","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"SuibianP"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"SuibianP"},"content":"        } catch (ModuleStringFormatIncorrectException msfie) {","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"SuibianP"},"content":"            message \u003d msfie.getMessage();","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"SuibianP"},"content":"        } catch (NoSuchModuleException nsme) {","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"SuibianP"},"content":"            message \u003d nsme.getMessage();","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"SuibianP"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"SuibianP"},"content":"        return new CommandResult(message, false);","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"SuibianP"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"SuibianP":46,"SeanRobertDH":6}},{"path":"src/main/java/seedu/tp/command/addtask/TaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.command.addtask;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"SuibianP"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.Command;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.CommandResult;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.GetTaskFailedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.parser.TaskUsageParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.Task;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.taskmanager.TaskManager;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.factory.TaskFactory;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"//@@author SeanRobertDH","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":" * Class for TaskCommand. that is extended by Task Commands superclasses.","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"public abstract class TaskCommand extends Command {","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"    private static String TASK_CREATED_MESSAGE \u003d \"Task created!\\n%s\";","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String OPTIONAL_ARGUMENT_FORMAT \u003d \"[--%s]\";","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"     * Constructs the TaskCommand with the program {@link #taskManager}","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"     * and the \u003ccode\u003ecommandArguments\u003c/code\u003e specified in Command.","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"     * @param taskManager      the program\u0027s {@link seedu.tp.task.taskmanager.TaskManager}.","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"     * @param commandArguments a \u003ccode\u003eMap\u0026lt;String, String\u0026gt;\u003c/code\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"     *                         of \u003ccode\u003eflags\u003c/code\u003e to \u003ccode\u003eflag values\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"    public TaskCommand(TaskManager taskManager, Map\u003cString, String\u003e commandArguments) {","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"        super(taskManager, commandArguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"     * passes the \u003ccode\u003ecommandArguments\u003c/code\u003e to the respective superclasses of","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"     * {@link seedu.tp.task.factory.TaskFactory} defined","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"     * in superclasses of Task Commands and adds the created","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"     * Task to the {@link #taskManager}.","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"SeanRobertDH"},"content":"     * @return The message from the command in CommandResult.","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws java.lang.Exception Any uncaught Exceptions.","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"SeanRobertDH"},"content":"    public CommandResult executeCommand() throws Exception {","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"SeanRobertDH"},"content":"        String message;","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"SeanRobertDH"},"content":"        try {","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"SeanRobertDH"},"content":"            String mainArgument \u003d getMainArgument();","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"SeanRobertDH"},"content":"            if (mainArgument \u003d\u003d null || mainArgument.equals(\"\")) {","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"SeanRobertDH"},"content":"                throw new NullPointerException();","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"SeanRobertDH"},"content":"            }","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"SeanRobertDH"},"content":"            Task task \u003d addCreatedTask();","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"SeanRobertDH"},"content":"            message \u003d String.format(TASK_CREATED_MESSAGE, task.getTaskEntryDescription());","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (NullPointerException npe) {","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"SeanRobertDH"},"content":"            message \u003d getUsageMessage();","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (GetTaskFailedException gtfe) {","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"SeanRobertDH"},"content":"            message \u003d gtfe.getMessage();","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"SeanRobertDH"},"content":"        return new CommandResult(message, false);","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"SeanRobertDH"},"content":"    private Task addCreatedTask() throws GetTaskFailedException {","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"SeanRobertDH"},"content":"        TaskFactory taskFactory \u003d setTaskFactory();","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"SeanRobertDH"},"content":"        Task task \u003d taskFactory.getTask();","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(task);","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"SeanRobertDH"},"content":"        return task;","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"SeanRobertDH"},"content":"    protected String getUsage() {","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"SeanRobertDH"},"content":"        return getTaskUsage() + \u0027 \u0027","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"SeanRobertDH"},"content":"            + TaskUsageParser.getOptionalTaskArguments(OPTIONAL_ARGUMENT_FORMAT);","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"SeanRobertDH"},"content":"    abstract String getTaskUsage();","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"SeanRobertDH"},"content":"    abstract TaskFactory setTaskFactory();","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"SuibianP":2,"SeanRobertDH":77}},{"path":"src/main/java/seedu/tp/command/addtask/TodoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.command.addtask;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"SuibianP"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.flags.TodoFlag;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.parser.DateParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.factory.TodoFactory;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.taskmanager.TaskManager;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"//@@author SeanRobertDH","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":" * Class for TodoCommand. Extends {@link seedu.tp.command.addtask.TaskCommand}","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":" * and sets the respective TaskFactory {@link seedu.tp.task.factory.TodoFactory}.","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":" *  using {@link TodoCommand#setTaskFactory()}.","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"public class TodoCommand extends TaskCommand {","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"    private static String USAGE \u003d \"-\u003e Adding a todo: todo \u003cdescription\u003e [--%s %s]\";","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"     * Constructs the TodoCommand with the program {@link #taskManager}","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"     * and the \u003ccode\u003ecommandArguments\u003c/code\u003e specified in Command.","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"     * @param taskManager the program\u0027s {@link seedu.tp.task.taskmanager.TaskManager}.","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"     * @param commandArguments a \u003ccode\u003eMap\u0026lt;String, String\u0026gt;\u003c/code\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"     *     of \u003ccode\u003eflags\u003c/code\u003e to \u003ccode\u003eflag values\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"    public TodoCommand(TaskManager taskManager, Map\u003cString, String\u003e commandArguments) {","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"        super(taskManager, commandArguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"    TodoFactory setTaskFactory() {","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"        return new TodoFactory(commandArguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"    protected String getTaskUsage() {","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"        return String.format(USAGE, TodoFlag.DO_ON_DATE, DateParser.getDefaultDateFormat());","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"SuibianP":2,"SeanRobertDH":40}},{"path":"src/main/java/seedu/tp/command/flags/DeadlineFlag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.command.flags;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.List;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":" * Class used as flags to identify values entered by","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":" * user in {@link seedu.tp.command.addtask.DeadlineCommand}","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":" * for Deadline creation in {@link seedu.tp.task.factory.DeadlineFactory}.","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":" * Also inherits flags from {@link seedu.tp.command.flags.TaskFlag}.","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"public class DeadlineFlag extends TaskFlag {","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"APZH"},"content":"    public static final String DUE_DATE \u003d \"due\";","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"    public static final String[] REQUIRED_FLAGS \u003d {DESCRIPTION, DUE_DATE};","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"    public List\u003cString\u003e getAllEditFlags() {","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"        List\u003cString\u003e editFlags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"        editFlags.addAll(super.getAllEditFlags());","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"        editFlags.add(DUE_DATE);","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"        return editFlags;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"APZH":1,"SeanRobertDH":23}},{"path":"src/main/java/seedu/tp/command/flags/EventFlag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.command.flags;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.List;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":" * Class used as flags to identify values entered by","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":" * user in {@link seedu.tp.command.addtask.EventCommand}","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":" * for Event creation in {@link seedu.tp.task.factory.EventFactory}.","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":" * Also inherits flags from {@link seedu.tp.command.flags.TaskFlag}.","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"public class EventFlag extends TaskFlag {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"APZH"},"content":"    public static final String START_DATE \u003d \"start\";","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"APZH"},"content":"    public static final String END_DATE \u003d \"end\";","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"    public static final String[] REQUIRED_FLAGS \u003d {DESCRIPTION, START_DATE, END_DATE};","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"    public List\u003cString\u003e getAllEditFlags() {","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"        List\u003cString\u003e editFlags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"        editFlags.addAll(super.getAllEditFlags());","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"        editFlags.addAll(Arrays.asList(START_DATE, END_DATE));","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"        return editFlags;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"APZH":2,"SeanRobertDH":24}},{"path":"src/main/java/seedu/tp/command/flags/LessonFlag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.command.flags;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.List;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"SuibianP"},"content":"//@@author SuibianP","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SuibianP"},"content":"public class LessonFlag extends EventFlag {","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"SuibianP"},"content":"    public static final String LINK \u003d \"link\";","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"SuibianP"},"content":"    @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"SuibianP"},"content":"    public List\u003cString\u003e getAllEditFlags() {","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"SuibianP"},"content":"        List\u003cString\u003e editFlags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"SuibianP"},"content":"        editFlags.addAll(super.getAllEditFlags());","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"SuibianP"},"content":"        editFlags.add(LINK);","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"SuibianP"},"content":"        return editFlags;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"SuibianP"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"SuibianP":13,"SeanRobertDH":4}},{"path":"src/main/java/seedu/tp/command/flags/ListFlag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.command.flags;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"APZH"},"content":"//@@author APZH","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"APZH"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"APZH"},"content":" * Flags and arguments used by the \u0027list\u0027 command.","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"APZH"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"APZH"},"content":"public class ListFlag {","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"APZH"},"content":"    public static final String TASK_TYPE \u003d \"type\";","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"APZH"},"content":"    public static final String PRIORITY \u003d \"priority\";","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"APZH"},"content":"    public static final String RECURRENCE \u003d \"recur\";","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"APZH"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"APZH":10,"SeanRobertDH":1}},{"path":"src/main/java/seedu/tp/command/flags/ReminderFlag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.command.flags;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"Xuefei2001"},"content":"public class ReminderFlag {","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Xuefei2001"},"content":"    public static final String TIME_AHEAD \u003d \"time\";","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Xuefei2001"},"content":"    public static final String REMINDER_MESSAGE \u003d \"message\";","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Xuefei2001"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"SeanRobertDH":1,"Xuefei2001":5}},{"path":"src/main/java/seedu/tp/command/flags/SortFlag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.command.flags;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"APZH"},"content":"//@@author APZH","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"APZH"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"APZH"},"content":" * Flags and arguments used by the \u0027sort\u0027 command.","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"APZH"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"APZH"},"content":"public class SortFlag {","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"APZH"},"content":"    public static final String SORT_BY \u003d \"by\";","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"APZH"},"content":"    public static final String SORT_BY_TYPE_ARGUMENT \u003d \"type\";","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"APZH"},"content":"    public static final String SORT_BY_DESCRIPTION_ARGUMENT \u003d \"description\";","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"APZH"},"content":"    public static final String SORT_BY_PRIORITY_ARGUMENT \u003d \"priority\";","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"APZH"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"APZH":11,"SeanRobertDH":1}},{"path":"src/main/java/seedu/tp/command/flags/TaskFlag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.command.flags;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.List;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.Command;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"public abstract class TaskFlag {","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"    public static final String DESCRIPTION \u003d Command.MAIN_ARGUMENT;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"APZH"},"content":"    public static final String RECURRENCE \u003d \"recur\";","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"APZH"},"content":"    public static final String PRIORITY \u003d \"priority\";","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"    public static final String EDIT_DESCRIPTION \u003d \"description\";","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"    public List\u003cString\u003e getAllEditFlags() {","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"        return Arrays.asList(EDIT_DESCRIPTION, RECURRENCE, PRIORITY);","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"APZH":2,"SeanRobertDH":15}},{"path":"src/main/java/seedu/tp/command/flags/TodoFlag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.command.flags;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.List;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":" * Class used as flags to identify values entered by","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":" * user in {@link seedu.tp.command.addtask.TodoCommand}","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":" * for Todo creation in {@link seedu.tp.task.factory.TodoFactory}.","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":" * Also inherits flags from {@link seedu.tp.command.flags.TaskFlag}.","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"public class TodoFlag extends TaskFlag {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"APZH"},"content":"    public static final String DO_ON_DATE \u003d \"doOn\";","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"    public static final String[] REQUIRED_FLAGS \u003d {DESCRIPTION};","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"    public List\u003cString\u003e getAllEditFlags() {","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"        List\u003cString\u003e editFlags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"        editFlags.addAll(super.getAllEditFlags());","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"        editFlags.add(DO_ON_DATE);","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"        return editFlags;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"APZH":1,"SeanRobertDH":23}},{"path":"src/main/java/seedu/tp/exception/BrowseFailException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.exception;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"SuibianP"},"content":"//@@author SuibianP","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"SuibianP"},"content":"public class BrowseFailException extends Exception {","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"SuibianP"},"content":"    public static final String MESSAGE \u003d \"Cannot browse: %s\";","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"SuibianP"},"content":"    String msg;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"SuibianP"},"content":"    @Override","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"SuibianP"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"SuibianP"},"content":"        return String.format(MESSAGE, msg);","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"SuibianP"},"content":"    public BrowseFailException(String msg) {","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"SuibianP"},"content":"        super(msg);","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"SuibianP"},"content":"        this.msg \u003d msg;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"SuibianP"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"SuibianP":16,"SeanRobertDH":1}},{"path":"src/main/java/seedu/tp/exception/EmptyDescriptionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.exception;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":" * Exception to be thrown when the user tries to enter an empty","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":" * description in {@link seedu.tp.command.EditCommand}.","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String MESAGE \u003d \"Description cannot be empty!\";","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"    public EmptyDescriptionException() {","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"        super(MESAGE);","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"SeanRobertDH":13}},{"path":"src/main/java/seedu/tp/exception/EmptySortCriteriaException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.exception;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"APZH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":" * Exception to be thrown when the user\u0027s input in {@link seedu.tp.command.SortCommand}","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"APZH"},"content":" * did not specify any sort criteria to sort the tasklist by.","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"APZH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"APZH"},"content":"public class EmptySortCriteriaException extends Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"APZH"},"content":"    private static final String MESSAGE \u003d \"[!] Please specify a sort criteria...\\n\";","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"APZH"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"APZH"},"content":"    public String toString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"APZH"},"content":"        return MESSAGE;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"APZH"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"APZH":14,"SeanRobertDH":2}},{"path":"src/main/java/seedu/tp/exception/EmptyTasklistException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.exception;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":" * Exception to be thrown when {@link seedu.tp.task.taskmanager.TaskManager#isEmpty()}.","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"APZH"},"content":"public class EmptyTasklistException extends Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"APZH"},"content":"    private static final String MESSAGE \u003d \"[!] There are currently no tasks in your tasklist...\\n\";","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"    public EmptyTasklistException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"        super(MESSAGE);","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"APZH"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"APZH"},"content":"    public String toString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"APZH"},"content":"        return MESSAGE;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"APZH"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"APZH":11,"SeanRobertDH":8}},{"path":"src/main/java/seedu/tp/exception/GetTaskFailedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.exception;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":" * General Exception that is thrown when creating Tasks in {@link seedu.tp.task.factory.TaskFactory}.","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":" * Catches specific exceptions and passes the Message of those exceptions to whatever called the","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":" * method.","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"public class GetTaskFailedException extends Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"    public GetTaskFailedException(String message) {","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"        super(message);","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"SeanRobertDH":13}},{"path":"src/main/java/seedu/tp/exception/ImpossibleError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.exception;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"SuibianP"},"content":"//@@author SuibianP","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"SuibianP"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"SuibianP"},"content":" * For what should not happen.","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SuibianP"},"content":" * e.g. To make the compiler happy with a switch of enumeration w/o default handling.","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SuibianP"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"SuibianP"},"content":"public class ImpossibleError extends Error {","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"SuibianP"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"SuibianP":8,"SeanRobertDH":1}},{"path":"src/main/java/seedu/tp/exception/InvalidFlagsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.exception;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.List;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"public class InvalidFlagsException extends Exception {","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String MESSAGE \u003d \"Invalid flags Entered:\\n%s\\n\";","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String NEWLINE \u003d \"\\n\";","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"    public InvalidFlagsException(List\u003cString\u003e invalidFlags) {","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"        super(String.format(MESSAGE,","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"            String.join(NEWLINE, invalidFlags)","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"        ));","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"SeanRobertDH":14}},{"path":"src/main/java/seedu/tp/exception/InvalidPriorityException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.exception;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":" * Exception to be thrown when User enters an invalid {@link seedu.tp.task.PriorityEnum}.","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"public class InvalidPriorityException extends Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String MESSAGE \u003d \"Invalid parameter for priority inserted, \u0027%s\u0027.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"APZH"},"content":"    private static final String INVALID_PRIORITY_MESSAGE \u003d \"[!] The priority you entered is not valid...\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"APZH"},"content":"            + \"The following are examples of valid priorities: {Low, Medium, High}\";","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"APZH"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"APZH"},"content":"    public String toString() {","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"APZH"},"content":"        return INVALID_PRIORITY_MESSAGE;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"    public InvalidPriorityException(String priority) {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"        super(String.format(MESSAGE, priority));","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"APZH":8,"SeanRobertDH":12}},{"path":"src/main/java/seedu/tp/exception/InvalidRecurrenceException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.exception;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":" * Exception to be thrown when User enters an invalid {@link seedu.tp.task.RecurrenceEnum}.","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"public class InvalidRecurrenceException extends Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String MESSAGE \u003d \"Invalid parameter for recurrence inserted, \u0027%s\u0027.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"APZH"},"content":"    private static final String INVALID_RECURRENCE_MESSAGE \u003d \"[!] The recurrence you entered is not valid...\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"APZH"},"content":"            + \"The following are examples of valid recurrence: {None, Daily, Weekly, Monthly, Yearly}\";","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"APZH"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"APZH"},"content":"    public String toString() {","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"APZH"},"content":"        return INVALID_RECURRENCE_MESSAGE;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"    public InvalidRecurrenceException(String recurrence) {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"        super(String.format(MESSAGE, recurrence));","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"APZH":8,"SeanRobertDH":12}},{"path":"src/main/java/seedu/tp/exception/InvalidTaskIndexException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.exception;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":" * Exception to be thrown when User enters a Task Index that does not","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":" * correspond to any task in {@link seedu.tp.task.taskmanager.TaskManager#taskList}.","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"public class InvalidTaskIndexException extends Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"APZH"},"content":"    private static final String MESSAGE \u003d \"[!] Task index \u0027%d\u0027 does not correspond to any task!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"APZH"},"content":"    private static final String INVALID_TASK_ID_MESSAGE \u003d \"[!] The task ID you entered is not valid...\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"APZH"},"content":"            + \"It must be a non-negative number that is within the bounds of the tasklist!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"APZH"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"APZH"},"content":"    public String toString() {","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"APZH"},"content":"        return INVALID_TASK_ID_MESSAGE;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"    public InvalidTaskIndexException(int index) {","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"        super(String.format(MESSAGE, index));","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"APZH":9,"SeanRobertDH":12}},{"path":"src/main/java/seedu/tp/exception/InvalidTaskTypeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.exception;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"APZH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":" * Exception to be thrown when the user enters an invalid {@link seedu.tp.task.TypeEnum}.","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"APZH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"public class InvalidTaskTypeException extends Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String MESSAGE \u003d \"Invalid parameter for task type inserted, \u0027%s\u0027.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"APZH"},"content":"    private static final String INVALID_TASK_TYPE_MESSAGE \u003d \"[!] The task type you entered is not valid...\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"APZH"},"content":"            + \"The following are examples of valid task types: {Todo, Deadline, Event, Lesson}\";","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"APZH"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"APZH"},"content":"    public String toString() {","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"APZH"},"content":"        return INVALID_TASK_TYPE_MESSAGE;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"    public InvalidTaskTypeException(String taskType) {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"        super(String.format(MESSAGE, taskType));","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"APZH":10,"SeanRobertDH":10}},{"path":"src/main/java/seedu/tp/exception/LessonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.exception;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"SuibianP"},"content":"//@@author SuibianP","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"SuibianP"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SuibianP"},"content":" * Indicate that the requested lesson cannot be obtained.","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SuibianP"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SuibianP"},"content":"public class LessonNotFoundException extends Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"SuibianP"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"SuibianP":8,"SeanRobertDH":1}},{"path":"src/main/java/seedu/tp/exception/ListFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.exception;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"APZH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"APZH"},"content":" * Exception to be thrown when the format of the user\u0027s input for the list command","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":" * {@link seedu.tp.command.ListCommand} entered by the user is incorrect.","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"APZH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"APZH"},"content":"public class ListFormatException extends Exception {","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"APZH"},"content":"    private static final String INVALID_LIST_FORMAT_MESSAGE \u003d \"[!] Your list command is wrong...\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"APZH"},"content":"            + \"Please follow one of the formats below:\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"APZH"},"content":"            + \"-\u003e list\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"APZH"},"content":"            + \"-\u003e list --[type, priority, recur] \u003cargument\u003e\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"APZH"},"content":"            + \"-\u003e list \u003ctask id\u003e\";","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"APZH"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"APZH"},"content":"    public String toString() {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"APZH"},"content":"        return INVALID_LIST_FORMAT_MESSAGE;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"APZH"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"APZH":18,"SeanRobertDH":2}},{"path":"src/main/java/seedu/tp/exception/MissingFilterArgumentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.exception;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"APZH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":" * Exception to be thrown when user\u0027s input in {@link seedu.tp.command.ListCommand}","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"APZH"},"content":" * did not specify a filter argument for the filter when filtering the tasklist.","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"APZH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"APZH"},"content":"public class MissingFilterArgumentException extends Exception {","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"APZH"},"content":"    private static final String MISSING_FILTER_ARGUMENT_MESSAGE \u003d \"[!] One of your filter\u0027s is missing an argument...\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"APZH"},"content":"            + \"Please follow the format: list or list --[type, priority, recur] \u003cargument\u003e\";","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"APZH"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"APZH"},"content":"    public String toString() {","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"APZH"},"content":"        return MISSING_FILTER_ARGUMENT_MESSAGE;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"APZH"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"APZH":15,"SeanRobertDH":2}},{"path":"src/main/java/seedu/tp/exception/MissingReminderFieldException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.exception;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"Xuefei2001"},"content":"public class MissingReminderFieldException extends Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Xuefei2001"},"content":"    private static final String MESSAGE \u003d \"You cannot leave both time and message fields empty.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Xuefei2001"},"content":"    public String toString() {","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Xuefei2001"},"content":"        return MESSAGE;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Xuefei2001"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"SeanRobertDH":1,"Xuefei2001":8}},{"path":"src/main/java/seedu/tp/exception/MissingUserMessageException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.exception;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"Xuefei2001"},"content":"public class MissingUserMessageException extends Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Xuefei2001"},"content":"    private static final String MESSAGE \u003d \"You cannot leave reminder message empty\";","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Xuefei2001"},"content":"    public String toString() {","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Xuefei2001"},"content":"        return MESSAGE;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Xuefei2001"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"SeanRobertDH":1,"Xuefei2001":9}},{"path":"src/main/java/seedu/tp/exception/MissingUserTimeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.exception;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"Xuefei2001"},"content":"public class MissingUserTimeException extends Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Xuefei2001"},"content":"    private static final String MESSAGE \u003d \"You need to give a integer number for time field\";","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Xuefei2001"},"content":"    public String toString() {","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Xuefei2001"},"content":"        return MESSAGE;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Xuefei2001"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"SeanRobertDH":1,"Xuefei2001":8}},{"path":"src/main/java/seedu/tp/exception/ModuleStringFormatIncorrectException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.exception;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"SuibianP"},"content":"public class ModuleStringFormatIncorrectException extends Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"SuibianP"},"content":"    private static final String MESSAGE \u003d \"[!] The string you supplied cannot be parsed\"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"SuibianP"},"content":"            + \"as a valid list of module-class combinations.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"SuibianP"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"SuibianP"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"SuibianP"},"content":"        return MESSAGE;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"SuibianP"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"SuibianP":10,"SeanRobertDH":1}},{"path":"src/main/java/seedu/tp/exception/NoLinkException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SuibianP"},"content":"package seedu.tp.exception;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"SuibianP"},"content":"public class NoLinkException extends Exception {","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"SuibianP"},"content":"    public static final String MESSAGE \u003d \"There is no link associated with the requested task.\";","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SuibianP"},"content":"    @Override","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SuibianP"},"content":"    public String getMessage() {","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SuibianP"},"content":"        return MESSAGE;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SuibianP"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"SuibianP":10}},{"path":"src/main/java/seedu/tp/exception/NoSuchModuleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SuibianP"},"content":"package seedu.tp.exception;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"SuibianP"},"content":"//@author SuibianP","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"SuibianP"},"content":"/*","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"SuibianP"},"content":" * Indicating that there is no such requested module class combination in NUSMods","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SuibianP"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SuibianP"},"content":"public class NoSuchModuleException extends Throwable {","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SuibianP"},"content":"    public static final String MESSAGE \u003d \"There is no such module-class combination in NUSMods.\";","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SuibianP"},"content":"    @Override","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"SuibianP"},"content":"    public String getMessage() {","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"SuibianP"},"content":"        return MESSAGE;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"SuibianP"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"SuibianP":14}},{"path":"src/main/java/seedu/tp/exception/NoTasksSpecifiedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.exception;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":" * Exception to be thrown when User\u0027s input in {@link seedu.tp.command.DeleteCommand}","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":" * does not have any indexes specified.","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"public class NoTasksSpecifiedException extends Exception {","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String MESSAGE \u003d \"No tasks were specified in the argument \u0027%s\u0027\";","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"    public NoTasksSpecifiedException(String argument) {","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"        super(String.format(MESSAGE, argument));","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"SeanRobertDH":13}},{"path":"src/main/java/seedu/tp/exception/NotALessonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SuibianP"},"content":"package seedu.tp.exception;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"SuibianP"},"content":"public class NotALessonException extends Exception {","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"SuibianP"},"content":"    private static final String MESSAGE \u003d \"The task is not a lesson.\";","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"SuibianP"},"content":"    @Override","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"SuibianP"},"content":"    public String getMessage() {","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"SuibianP"},"content":"        return MESSAGE;","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"SuibianP"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"SuibianP":10}},{"path":"src/main/java/seedu/tp/exception/ParseDateFailedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.exception;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"public class ParseDateFailedException extends Exception {","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String MESSAGE \u003d \"String did not match date format: %s or invalid parameter entered.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"    public ParseDateFailedException(String dateFormat) {","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"        super(String.format(MESSAGE, dateFormat));","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"SeanRobertDH":10}},{"path":"src/main/java/seedu/tp/exception/ParseTaskIndexesFailedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.exception;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":" * Exception to be thrown when User\u0027s input in","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":" * {@link seedu.tp.command.DeleteCommand} cannot be parsed.","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"public class ParseTaskIndexesFailedException extends Exception {","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String MESSAGE \u003d \"Command failed to parse argument \u0027%s\u0027.\";","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"    public ParseTaskIndexesFailedException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"        super(MESSAGE);","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"SeanRobertDH":13}},{"path":"src/main/java/seedu/tp/exception/ReminderNotRequiredException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.exception;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"Xuefei2001"},"content":"public class ReminderNotRequiredException extends Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Xuefei2001"},"content":"    private static final String MESSAGE \u003d \"This task do not need reminder, hence cannot customize\";","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Xuefei2001"},"content":"    public String toString() {","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Xuefei2001"},"content":"        return MESSAGE;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Xuefei2001"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"SeanRobertDH":1,"Xuefei2001":9}},{"path":"src/main/java/seedu/tp/exception/RequiredArgmentNotProvidedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.exception;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":" * Exception to be thrown when User does not provide a required argument when","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":" * creating a Task in superclasses of {@link seedu.tp.task.factory.TaskFactory}.","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"public class RequiredArgmentNotProvidedException extends Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"    private static String MESSAGE \u003d \"Required argument \u0027%s\u0027 was not provided when creating new %s.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"    public RequiredArgmentNotProvidedException(String argument, String task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"        super(String.format(MESSAGE, argument, task));","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"SeanRobertDH":13}},{"path":"src/main/java/seedu/tp/exception/SortFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.exception;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"APZH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"APZH"},"content":" * Exception to be thrown when the format of the user\u0027s input for the list command","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":" * {@link seedu.tp.command.SortCommand} entered by the user is incorrect.","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"APZH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"APZH"},"content":"public class SortFormatException extends Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"APZH"},"content":"    private static final String MESSAGE \u003d \"[!] Your sort command is wrong...\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"APZH"},"content":"            + \"Please follow the format: sort --by [criteria]\";","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"APZH"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"APZH"},"content":"    public String toString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"APZH"},"content":"        return MESSAGE;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"APZH"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"APZH":15,"SeanRobertDH":2}},{"path":"src/main/java/seedu/tp/exception/StartDateAfterEndDateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.exception;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":" * Exception to be thrown when User attempts to set the {@link seedu.tp.task.type.Event}","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":" * {@link seedu.tp.task.type.Event#startDate} after {@link seedu.tp.task.type.Event#endDate}.","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"public class StartDateAfterEndDateException extends Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"    private static String MESSAGE \u003d \"Start date provided cannot be after End date!\";","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"    public StartDateAfterEndDateException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"        super(MESSAGE);","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"SeanRobertDH":13}},{"path":"src/main/java/seedu/tp/exception/TaskIsNonRecurringException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.exception;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"APZH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":" * Exception to be thrown when user\u0027s input in {@link seedu.tp.command.ListCommand}","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"APZH"},"content":" * specified a task id of a task that is non-recurring when trying to print the recurrence of the task.","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"APZH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"APZH"},"content":"public class TaskIsNonRecurringException extends Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"APZH"},"content":"    private static final String TASK_IS_NON_RECURRING_MESSAGE \u003d \"[!] The task indicated is non-recurring, \"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"APZH"},"content":"            + \"please choose another task id...\\n\";","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"APZH"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"APZH"},"content":"    public String toString() {","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"APZH"},"content":"        return TASK_IS_NON_RECURRING_MESSAGE;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"APZH"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"APZH":15,"SeanRobertDH":2}},{"path":"src/main/java/seedu/tp/log/Log.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.log;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"SuibianP"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.logging.LogRecord;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"//@@author SeanRobertDH","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":" * Log class. Contains \u003ccode\u003estatic\u003c/code\u003e {@link java.util.logging.Logger} methods.","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"public class Log {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"    private static final Level DEFAULT_CONSOLE_SEVERITY \u003d Level.SEVERE;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"    private static final Level DEFAULT_LOG_FILE_SEVERITY \u003d Level.FINE;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String LOG_FILE_NAME \u003d \"log.txt\";","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String LOG_FORMAT \u003d \"[%1$tF %1$tT] [%2$-7s]%n%4$s: %3$s %n\";","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String IOEXCEPTION_MESSAGE \u003d \"Failed to initialise log file.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"    private static final int METHOD_STACKTRACE_POSITION \u003d 4;","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"    private static final boolean DO_APPEND_TO_FILE \u003d true;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"    private static final boolean USE_DEFAULT_HANDLERS \u003d false;","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"    private static Map\u003cString, Logger\u003e loggers \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"    private static FileHandler getFileHandler() throws IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE_NAME, DO_APPEND_TO_FILE);","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"        fileHandler.setLevel(DEFAULT_LOG_FILE_SEVERITY);","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"        return fileHandler;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns a \u003ccode\u003eLogger\u003c/code\u003e created that is tied to the \u003ccode\u003eclass\u003c/code\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"SeanRobertDH"},"content":"     * that called the function.","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"SeanRobertDH"},"content":"     * Gets the Class that called the function using the \u003ccode\u003egetStackTrace()\u003c/code\u003e method.","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"SeanRobertDH"},"content":"     * @return \u003ccode\u003eLogger\u003c/code\u003e that corresponds to class.","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"SeanRobertDH"},"content":"    private static Logger getLogger() {","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"SeanRobertDH"},"content":"        StackTraceElement classToLog \u003d Thread.currentThread().getStackTrace()[METHOD_STACKTRACE_POSITION];","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"SeanRobertDH"},"content":"        String className \u003d classToLog.getClassName();","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"SeanRobertDH"},"content":"        if (loggers.containsKey(className)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"SeanRobertDH"},"content":"            return loggers.get(className);","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"SeanRobertDH"},"content":"        } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"SeanRobertDH"},"content":"            return createLogger(className);","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns a \u003ccode\u003eLogger\u003c/code\u003e created that is tied to the \u003ccode\u003eclassName\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"SeanRobertDH"},"content":"     * Adds the \u003ccode\u003eConsoleHandler\u003c/code\u003e with {@link #DEFAULT_CONSOLE_SEVERITY}.","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"SeanRobertDH"},"content":"     * Adds the created \u003ccode\u003eLogger\u003c/code\u003e to {@link #loggers}.","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"SeanRobertDH"},"content":"     * @param className Name of class to create \u003ccode\u003eLogger\u003c/code\u003e for.","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"SeanRobertDH"},"content":"     * @return \u003ccode\u003eLogger\u003c/code\u003e for Class with name \u003c\u003ccode\u003eclassName\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"SeanRobertDH"},"content":"    private static Logger createLogger(String className) {","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"SeanRobertDH"},"content":"        Logger logger \u003d Logger.getLogger(className);","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"SeanRobertDH"},"content":"        logger.setUseParentHandlers(USE_DEFAULT_HANDLERS);","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"SeanRobertDH"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"SeanRobertDH"},"content":"        consoleHandler.setLevel(DEFAULT_CONSOLE_SEVERITY);","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"SeanRobertDH"},"content":"        consoleHandler.setFormatter(getLogFormat());","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"SeanRobertDH"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"SeanRobertDH"},"content":"        loggers.put(className, logger);","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"SeanRobertDH"},"content":"        return logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"SeanRobertDH"},"content":"    private static SimpleFormatter getLogFormat() {","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"SeanRobertDH"},"content":"        return new SimpleFormatter() {","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"SeanRobertDH"},"content":"            private static final String format \u003d LOG_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"SeanRobertDH"},"content":"            @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"SeanRobertDH"},"content":"            public synchronized String format(","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"SeanRobertDH"},"content":"                LogRecord logRecord) {","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"SeanRobertDH"},"content":"                return String.format(format, new Date(logRecord.getMillis()),","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"SeanRobertDH"},"content":"                    logRecord.getLoggerName(), logRecord.getMessage(), logRecord.getLevel());","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"SeanRobertDH"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"SeanRobertDH"},"content":"        };","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"SeanRobertDH"},"content":"     * Logs \u003ccode\u003emessage\u003c/code\u003e with the","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"SeanRobertDH"},"content":"     * logger from {@link #getLogger()}.","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"SeanRobertDH"},"content":"     * Adds \u003ccode\u003eFileHandler\u003c/code\u003e before logging message","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"SeanRobertDH"},"content":"     * and closes \u003ccode\u003eFileHandler\u003c/code\u003e afterwards.","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"SeanRobertDH"},"content":"     * @param level Log severity level.","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"SeanRobertDH"},"content":"     * @param message Message to log.","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"SeanRobertDH"},"content":"    private static void logMessage(Level level, String message) {","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"SeanRobertDH"},"content":"        Logger logger \u003d getLogger();","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"SeanRobertDH"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"SeanRobertDH"},"content":"            FileHandler fileHandler \u003d getFileHandler();","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"SeanRobertDH"},"content":"            fileHandler.setFormatter(getLogFormat());","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"SeanRobertDH"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"SeanRobertDH"},"content":"            logger.log(level, message);","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"SeanRobertDH"},"content":"            fileHandler.close();","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"SeanRobertDH"},"content":"            //The console logger still works, so we log a message to console.","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"SeanRobertDH"},"content":"            logger.severe(IOEXCEPTION_MESSAGE);","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"SeanRobertDH"},"content":"    public static void finest(String message) {","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"SeanRobertDH"},"content":"        logMessage(Level.FINEST, message);","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"SeanRobertDH"},"content":"    public static void finer(String message) {","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"SeanRobertDH"},"content":"        logMessage(Level.FINER, message);","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"SeanRobertDH"},"content":"    public static void fine(String message) {","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"SeanRobertDH"},"content":"        logMessage(Level.FINE, message);","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"SeanRobertDH"},"content":"    public static void info(String message) {","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"SeanRobertDH"},"content":"        logMessage(Level.INFO, message);","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"SeanRobertDH"},"content":"    public static void warning(String message) {","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"SeanRobertDH"},"content":"        logMessage(Level.WARNING, message);","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"SeanRobertDH"},"content":"    public static void severe(String message) {","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"SeanRobertDH"},"content":"        logMessage(Level.SEVERE, message);","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"SuibianP":1,"SeanRobertDH":135}},{"path":"src/main/java/seedu/tp/nusmods/NusModsParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.nusmods;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"SuibianP"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"SuibianP"},"content":"import com.google.gson.JsonArray;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"SuibianP"},"content":"import com.google.gson.JsonElement;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"SuibianP"},"content":"import com.google.gson.JsonObject;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"SuibianP"},"content":"import com.google.gson.JsonParser;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.GetTaskFailedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SuibianP"},"content":"import seedu.tp.exception.NoSuchModuleException;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.type.Lesson;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"SuibianP"},"content":"import java.io.File;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"SuibianP"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"SuibianP"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"SuibianP"},"content":"import java.io.Reader;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"SuibianP"},"content":"import java.net.URL;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"SuibianP"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"SuibianP"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"SuibianP"},"content":"import java.time.Month;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"SuibianP"},"content":"import java.time.Year;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"SuibianP"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"SuibianP"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"SuibianP"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"SuibianP"},"content":"import java.util.stream.StreamSupport;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"SuibianP"},"content":"import static org.apache.commons.io.FileUtils.copyURLToFile;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"SuibianP"},"content":"//@@author SuibianP","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"SuibianP"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"SuibianP"},"content":" * Utility class for fetching and parsing NUSMods API.","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"SuibianP"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"SuibianP"},"content":"public class NusModsParser {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"SuibianP"},"content":"    public static final String CACHEDIR \u003d \"cache/\";","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"SuibianP"},"content":"    private static final String ENDPOINT \u003d \"https://api.nusmods.com/v2/\";","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"SuibianP"},"content":"    private static final int TIMEOUT \u003d 5000;","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"SuibianP"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"SuibianP"},"content":"     * Get Lesson objects of a particular class.","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"SuibianP"},"content":"     * @param moduleCode The module code to be queried","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"SuibianP"},"content":"     * @param classNo The class number to be queried","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"SuibianP"},"content":"     * @return An array of Lessons denoting all class occurrences","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"SuibianP"},"content":"     * @throws GetTaskFailedException If there is neither network connection nor local cache","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"SuibianP"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"SuibianP"},"content":"    public Lesson[] getLessons(String moduleCode, String classNo) throws GetTaskFailedException, NoSuchModuleException {","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"SuibianP"},"content":"        Reader moduleReader;","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"SuibianP"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"SuibianP"},"content":"            moduleReader \u003d getModuleReader(moduleCode);","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"SuibianP"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"SuibianP"},"content":"            throw new GetTaskFailedException(ioe.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"SuibianP"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"SuibianP"},"content":"        JsonObject obj \u003d JsonParser.parseReader(moduleReader).getAsJsonObject();","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"SuibianP"},"content":"        JsonArray semesterData \u003d obj.getAsJsonArray(\"semesterData\");","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"SuibianP"},"content":"        Lesson[] lessons \u003d null;","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"SuibianP"},"content":"        for (JsonElement element : semesterData) {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"SuibianP"},"content":"            JsonObject semesterObject \u003d element.getAsJsonObject();","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"SuibianP"},"content":"            if (Semester.fromInt(semesterObject.get(\"semester\").getAsInt()) !\u003d Semester.getSemester()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"SuibianP"},"content":"                continue;","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"SuibianP"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"SuibianP"},"content":"            JsonArray timetable \u003d semesterObject.get(\"timetable\").getAsJsonArray();","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"SuibianP"},"content":"            lessons \u003d StreamSupport.stream(timetable.spliterator(), true)","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"SuibianP"},"content":"                .map(JsonElement::getAsJsonObject)","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"SuibianP"},"content":"                .filter(l -\u003e classNo.equals(l.get(\"classNo\").getAsString()))","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"SuibianP"},"content":"                .map(l -\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"SuibianP"},"content":"                    DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"SuibianP"},"content":"                    return new Lesson(moduleCode, classNo,","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"SuibianP"},"content":"                        DayOfWeek.from(DateTimeFormatter.ofPattern(\"EEEE\", Locale.ENGLISH)","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"SuibianP"},"content":"                                .parse(l.get(\"day\").getAsString())),","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"SuibianP"},"content":"                        LocalTime.parse(l.get(\"startTime\").getAsString(), timeFormatter),","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"SuibianP"},"content":"                        LocalTime.parse(l.get(\"endTime\").getAsString(), timeFormatter),","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"SuibianP"},"content":"                        Semester.acadWeeksToRealWeeks((new Gson()).fromJson(l.get(\"weeks\"), int[].class)));","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"SuibianP"},"content":"                })","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"SuibianP"},"content":"                .toArray(Lesson[]::new);","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"SuibianP"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"SuibianP"},"content":"        if (lessons.length \u003d\u003d 0) {","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"SuibianP"},"content":"            throw new NoSuchModuleException();","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"SuibianP"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"SuibianP"},"content":"        return lessons;","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"SuibianP"},"content":"    private Reader getModuleReader(String moduleCode) throws IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"SuibianP"},"content":"        if (!(new File(getModuleFilename(moduleCode)).isFile())) {","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"SuibianP"},"content":"            // file not existing","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"SuibianP"},"content":"            getModuleJson(moduleCode);","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"SuibianP"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"SuibianP"},"content":"        return new FileReader(getModuleFilename(moduleCode));","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"SuibianP"},"content":"    private String getModuleFilename(String moduleCode) {","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"SuibianP"},"content":"        return CACHEDIR + moduleCode + \".json\";","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"SuibianP"},"content":"    private static String getModuleUrl(String moduleCode) {","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"SuibianP"},"content":"        return ENDPOINT + formatAcadYear(getAcadYear()) + \"/modules/\" + moduleCode + \".json\";","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"SuibianP"},"content":"    private void getModuleJson(String moduleCode) throws IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"SuibianP"},"content":"        copyURLToFile(new URL(getModuleUrl(moduleCode)), new File(getModuleFilename(moduleCode)), TIMEOUT, TIMEOUT);","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"SuibianP"},"content":"    private static Year getAcadYear() {","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"SuibianP"},"content":"        YearMonth current \u003d YearMonth.now();","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"SuibianP"},"content":"        Year year \u003d Year.of(current.getYear());","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"SuibianP"},"content":"        if (current.getMonth().compareTo(Month.AUGUST) \u003c 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"SuibianP"},"content":"            year \u003d year.minusYears(1);","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"SuibianP"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"SuibianP"},"content":"        return year;","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"SuibianP"},"content":"    private static String formatAcadYear(Year year) {","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"SuibianP"},"content":"        return String.format(\"%tY-%tY\", year, year.plusYears(1));","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"SuibianP"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"SuibianP":109,"SeanRobertDH":3}},{"path":"src/main/java/seedu/tp/nusmods/Semester.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.nusmods;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.ImpossibleError;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"SuibianP"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"SuibianP"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"SuibianP"},"content":"import java.time.Month;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"SuibianP"},"content":"import java.time.Year;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"SuibianP"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"SuibianP"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"SuibianP"},"content":"import static java.time.temporal.TemporalAdjusters.firstInMonth;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"SuibianP"},"content":"//@@author SuibianP","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"SuibianP"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"SuibianP"},"content":" * Enumeration class for NUS semesters.","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"SuibianP"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"SuibianP"},"content":"public enum Semester {","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"SuibianP"},"content":"    S1, S2, ST1, ST2;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"SuibianP"},"content":"    public static Semester fromInt(int n) {","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"SuibianP"},"content":"        // n is 1-based, as in NUSMods data","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"SuibianP"},"content":"        return Semester.values()[n - 1];","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"SuibianP"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"SuibianP"},"content":"     * Get the semester which the date is in.","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"SuibianP"},"content":"     * @param date A date to be queried","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"SuibianP"},"content":"     * @return The semester of the date","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"SuibianP"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"SuibianP"},"content":"    public static Semester getSemester(LocalDate date) {","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"SuibianP"},"content":"        for (Semester s : Semester.values()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"SuibianP"},"content":"            if (ChronoUnit.DAYS.between(s.getStartingMonday(), date) \u003c\u003d s.getWeekLength() * 7) {","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"SuibianP"},"content":"                return s;","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"SuibianP"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"SuibianP"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"SuibianP"},"content":"        throw new ImpossibleError();","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"SuibianP"},"content":"    public static Semester getSemester() {","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"SuibianP"},"content":"        return getSemester(LocalDate.now());","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"SuibianP"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"SuibianP"},"content":"     * Get the standard number of weeks in a particular semester.","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"SuibianP"},"content":"     * @return The number of weeks in the semester","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"SuibianP"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"SuibianP"},"content":"    public long getWeekLength() {","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"SuibianP"},"content":"        switch (this) {","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"SuibianP"},"content":"        case S1:","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"SuibianP"},"content":"            return 18;","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"SuibianP"},"content":"        case S2:","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"SuibianP"},"content":"            return 17;","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"SuibianP"},"content":"        case ST1:","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"SuibianP"},"content":"        case ST2:","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"SuibianP"},"content":"        default:","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"SuibianP"},"content":"            return 6;","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"SuibianP"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"SuibianP"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"SuibianP"},"content":"     * Convert academic weeks to real weeks, accounting for recess weeks, etc.","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"SuibianP"},"content":"     * @param acadWeeks An array of academic weeks","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"SuibianP"},"content":"     * @return An array of real weeks","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"SuibianP"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"SuibianP"},"content":"    public static int[] acadWeeksToRealWeeks(int[] acadWeeks) {","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"SuibianP"},"content":"        return IntStream.of(acadWeeks).map(i -\u003e i \u003e 6 ? i + 1 : i).toArray();","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"SuibianP"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"SuibianP"},"content":"     * Get the starting Monday of a semester in a year.","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"SuibianP"},"content":"     * @param year A year","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"SuibianP"},"content":"     * @return The starting Monday","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"SuibianP"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"SuibianP"},"content":"    public LocalDate getStartingMonday(Year year) {","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"SuibianP"},"content":"        switch (this) {","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"SuibianP"},"content":"        case S1:","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"SuibianP"},"content":"            return year.atMonth(Month.AUGUST).atDay(1).with(firstInMonth(DayOfWeek.MONDAY));","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"SuibianP"},"content":"            // second Monday of August","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"SuibianP"},"content":"        case S2:","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"SuibianP"},"content":"            return year.atMonth(Month.JANUARY).atDay(1).with(firstInMonth(DayOfWeek.MONDAY));","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"SuibianP"},"content":"            // second Monday of January","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"SuibianP"},"content":"        case ST1:","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"SuibianP"},"content":"            return S2.getStartingMonday(year).plusWeeks(17);","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"SuibianP"},"content":"            // S2 + 17 week","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"SuibianP"},"content":"        case ST2:","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"SuibianP"},"content":"            return ST1.getStartingMonday(year).plusWeeks(6);","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"SuibianP"},"content":"            // ST1 + 6 week","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"SuibianP"},"content":"        default:","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"SuibianP"},"content":"            throw new ImpossibleError();","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"SuibianP"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"SuibianP"},"content":"    public LocalDate getStartingMonday() {","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"SuibianP"},"content":"        return getStartingMonday(Year.now());","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"SuibianP"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"SuibianP":95,"SeanRobertDH":2}},{"path":"src/main/java/seedu/tp/parser/CommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.parser;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.BrowseCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.ByeCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.Command;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.CommandEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.DeleteCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.EditCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.HelpCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.InvalidCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.ListCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.SortCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"SuibianP"},"content":"import seedu.tp.command.UpcomingCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.addtask.DeadlineCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.addtask.EventCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.addtask.ModuleCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.addtask.TodoCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.ParseTaskIndexesFailedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.log.Log;","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"SuibianP"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.taskmanager.TaskManager;","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.utility.Utility;","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"APZH"},"content":"//@@author APZH","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"APZH"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"APZH"},"content":" * Parses user input.","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"APZH"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"APZH"},"content":"public class CommandParser {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"APZH"},"content":"    public static final String FLAG_HEADER \u003d \"--\";","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"APZH"},"content":"    private static final String FLAG_REGEX \u003d \"^\" + FLAG_HEADER + \"\\\\w+\";","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"APZH"},"content":"    private static final String WHITESPACE_REGEX \u003d \"\\\\s+\";","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"APZH"},"content":"    private static final String WHITESPACE \u003d \" \";","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"APZH"},"content":"    private static final String SPLIT_INPUT_REGEX \u003d \"\\\\s+\";","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"APZH"},"content":"    private static final String INVALID_TASK_INDEX \u003d \"%s is not an integer!\";","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"APZH"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"APZH"},"content":"     * Returns a {@code Map} mapping command flags to the arguments entered by the user.","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"APZH"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"APZH"},"content":"     * @param commandArguments The command entered by the user.","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"APZH"},"content":"     * @return {@code Map} mapping command flags to the arguments.","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"APZH"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"APZH"},"content":"    public static Map\u003cString, String\u003e getCommandOptions(String commandArguments) {","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"APZH"},"content":"        Map\u003cString, String\u003e flagsToArguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"APZH"},"content":"        String[] tokens \u003d commandArguments.split(WHITESPACE_REGEX);","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"APZH"},"content":"        String mainArgument \u003d \"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"APZH"},"content":"        for (int i \u003d 0; i \u003c tokens.length; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"APZH"},"content":"            if (tokens[i].matches(FLAG_REGEX)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"APZH"},"content":"                String flag \u003d tokens[i];","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"APZH"},"content":"                String flagArguments \u003d \"\";","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"APZH"},"content":"                try {","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"APZH"},"content":"                    while (tokens[i + 1].matches(FLAG_REGEX) \u003d\u003d false) {","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"APZH"},"content":"                        flagArguments +\u003d tokens[i + 1] + WHITESPACE;","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"APZH"},"content":"                        i++;","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"APZH"},"content":"                    }","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"APZH"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"APZH"},"content":"                    Log.warning(e.getMessage());","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"APZH"},"content":"                }","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"APZH"},"content":"                flagsToArguments.put(flag.substring(2), flagArguments.trim());","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"APZH"},"content":"            } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"APZH"},"content":"                mainArgument +\u003d tokens[i] + WHITESPACE;","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"APZH"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"APZH"},"content":"        flagsToArguments.put(Command.MAIN_ARGUMENT, mainArgument.trim());","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"APZH"},"content":"        return flagsToArguments;","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"APZH"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"APZH"},"content":"     * Creates a {@code Command} object based on the {@code commandSyntax}.","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"APZH"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"APZH"},"content":"     * @param taskManager    {@code TaskManager} object that contains the tasklist to be executed upon.","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"APZH"},"content":"     * @param commandSyntax  Contains the type of command entered by the user.","lastModifiedDate":"2021-11-02"},{"lineNumber":79,"author":{"gitId":"APZH"},"content":"     * @param commandOptions Contains any flags and arguments associated with the command.","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"APZH"},"content":"     * @return The {@code commandSyntax} specified {@code Command} object.","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"APZH"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"APZH"},"content":"    public static Command createCommand(TaskManager taskManager, CommandEnum commandSyntax,","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"APZH"},"content":"                                        Map\u003cString, String\u003e commandOptions) {","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"APZH"},"content":"        switch (commandSyntax) {","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"APZH"},"content":"        case BYE:","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"APZH"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"APZH"},"content":"        case HELP:","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"APZH"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"APZH"},"content":"        case TODO:","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"APZH"},"content":"            return new TodoCommand(taskManager, commandOptions);","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"APZH"},"content":"        case DEADLINE:","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"APZH"},"content":"            return new DeadlineCommand(taskManager, commandOptions);","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"APZH"},"content":"        case EVENT:","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"APZH"},"content":"            return new EventCommand(taskManager, commandOptions);","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"APZH"},"content":"        case LIST:","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"APZH"},"content":"            return new ListCommand(taskManager, commandOptions);","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"APZH"},"content":"        case DELETE:","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"APZH"},"content":"            return new DeleteCommand(taskManager, commandOptions);","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"APZH"},"content":"        case SORT:","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"APZH"},"content":"            return new SortCommand(taskManager, commandOptions);","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"APZH"},"content":"        case MODULE:","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"APZH"},"content":"            return new ModuleCommand(taskManager, commandOptions);","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"APZH"},"content":"        case EDIT:","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"APZH"},"content":"            return new EditCommand(taskManager, commandOptions);","lastModifiedDate":"2021-10-28"},{"lineNumber":105,"author":{"gitId":"APZH"},"content":"        case BROWSE:","lastModifiedDate":"2021-10-31"},{"lineNumber":106,"author":{"gitId":"APZH"},"content":"            return new BrowseCommand(taskManager, commandOptions);","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"APZH"},"content":"        case UPCOMING:","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"APZH"},"content":"            return new UpcomingCommand(taskManager, commandOptions);","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"APZH"},"content":"        default:","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"APZH"},"content":"            return new InvalidCommand();","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"APZH"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":116,"author":{"gitId":"APZH"},"content":"     * Returns the {@code Command} to be executed based on the {@code userInput}.","lastModifiedDate":"2021-11-02"},{"lineNumber":117,"author":{"gitId":"APZH"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":118,"author":{"gitId":"APZH"},"content":"     * @param taskManager {@code TaskManager} object that contains the tasklist to be executed upon.","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"APZH"},"content":"     * @param userInput   User input to determine the {@code Command} to be executed.","lastModifiedDate":"2021-11-02"},{"lineNumber":120,"author":{"gitId":"APZH"},"content":"     * @return {@code Command} to be executed.","lastModifiedDate":"2021-11-02"},{"lineNumber":121,"author":{"gitId":"APZH"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":122,"author":{"gitId":"APZH"},"content":"    public static Command parseCommand(TaskManager taskManager, String userInput) {","lastModifiedDate":"2021-11-02"},{"lineNumber":123,"author":{"gitId":"APZH"},"content":"        String[] inputArguments \u003d userInput.split(SPLIT_INPUT_REGEX, 2);","lastModifiedDate":"2021-11-02"},{"lineNumber":124,"author":{"gitId":"APZH"},"content":"        String command \u003d inputArguments[0];","lastModifiedDate":"2021-11-02"},{"lineNumber":125,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"APZH"},"content":"        CommandEnum commandSyntax \u003d CommandEnum.getCommand(command);","lastModifiedDate":"2021-11-02"},{"lineNumber":127,"author":{"gitId":"APZH"},"content":"        Map\u003cString, String\u003e commandOptions \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-11-02"},{"lineNumber":128,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"APZH"},"content":"        if (inputArguments.length \u003d\u003d 2) {","lastModifiedDate":"2021-11-02"},{"lineNumber":130,"author":{"gitId":"APZH"},"content":"            commandOptions \u003d getCommandOptions(inputArguments[1]);","lastModifiedDate":"2021-11-02"},{"lineNumber":131,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"APZH"},"content":"        return createCommand(taskManager, commandSyntax, commandOptions);","lastModifiedDate":"2021-11-02"},{"lineNumber":134,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"SeanRobertDH"},"content":"    //@@author SeanRobertDH","lastModifiedDate":"2021-10-28"},{"lineNumber":137,"author":{"gitId":"SeanRobertDH"},"content":"    public static Integer parseTaskIndex(String index) throws NumberFormatException, ParseTaskIndexesFailedException {","lastModifiedDate":"2021-11-05"},{"lineNumber":138,"author":{"gitId":"SeanRobertDH"},"content":"        if (!Utility.isInteger(index)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"SeanRobertDH"},"content":"            if (index.equals(\"\")) {","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"SeanRobertDH"},"content":"                throw new ParseTaskIndexesFailedException();","lastModifiedDate":"2021-11-05"},{"lineNumber":141,"author":{"gitId":"SeanRobertDH"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"SeanRobertDH"},"content":"            throw new NumberFormatException(String.format(INVALID_TASK_INDEX, index));","lastModifiedDate":"2021-10-28"},{"lineNumber":143,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":144,"author":{"gitId":"SeanRobertDH"},"content":"        return Integer.parseInt(index);","lastModifiedDate":"2021-10-28"},{"lineNumber":145,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":146,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"APZH":111,"SuibianP":2,"SeanRobertDH":33}},{"path":"src/main/java/seedu/tp/parser/DateParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.parser;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.ParseDateFailedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.log.Log;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"//@@author SeanRobertDH","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":" * Parser Class. Contains methods pertaining to parsing {@link java.time.LocalDateTime}.","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"public class DateParser {","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String DEFAULT_DATE_FORMAT \u003d \"dd-MM-yyyy HH:mm\";","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String[] ACCEPTED_DATE_FORMATS","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"        \u003d {\"d-M-[yyyy][yy]_H-m\", \"d-M-[yyyy][yy]_H\", \"d-M_H-m\", \"d-M_H\", \"d_H-m\", \"d_H\", \"H-m\", \"H\"};","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String YEAR_CHAR_REPRESENTATION \u003d \"y\";","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String WHITESPACE_REGEX \u003d \"\\\\s+\";","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String DEFAULT_SEPARATOR \u003d \"-\";","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String DEFAULT_SPACE \u003d \"_\";","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"    private static int HALF_HOUR \u003d 30;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"    private static int HOUR \u003d 60;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String LOG_FORMATTED_DATE_MESSAGE \u003d \"Formatted date String is: \";","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String[] ACCEPTED_SEPARATORS","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"        \u003d {\":\", \"~\", \"\\\\.\", \"\\\\/\", \"\\\\|\", \"\\\\\\\\\"};","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"    private static LocalDateTime removeUnitsOfTimeBelowHour(LocalDateTime dateTime) {","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"        int minutes \u003d dateTime.getMinute();","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"        dateTime \u003d dateTime.minusMinutes(minutes);","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"        int seconds \u003d dateTime.getSecond();","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"SeanRobertDH"},"content":"        dateTime \u003d dateTime.minusSeconds(seconds);","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"SeanRobertDH"},"content":"        int nanos \u003d dateTime.getNano();","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"SeanRobertDH"},"content":"        dateTime \u003d dateTime.minusNanos(nanos);","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"SeanRobertDH"},"content":"        return dateTime;","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns \u003ccode\u003edateTime\u003c/code\u003e rounded up to the nearest hour.","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"SeanRobertDH"},"content":"     * @param dateTime {@link java.time.LocalDateTime} to round up","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"SeanRobertDH"},"content":"     * @return {@link java.time.LocalDateTime} rounded up to the nearest hour.","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"SeanRobertDH"},"content":"    public static LocalDateTime roundUpHour(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"SeanRobertDH"},"content":"        dateTime \u003d removeUnitsOfTimeBelowHour(dateTime);","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"SeanRobertDH"},"content":"        return dateTime.plusHours(1);","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns \u003ccode\u003edateTime\u003c/code\u003e as a \u003ccode\u003eString\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"SeanRobertDH"},"content":"     * @param dateTime {@link java.time.LocalDateTime} that is to be converted to \u003ccode\u003eString\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"SeanRobertDH"},"content":"     * @return \u003ccode\u003edateTime\u003c/code\u003e parsed using {@link #DEFAULT_DATE_FORMAT}.","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"SeanRobertDH"},"content":"    public static String dateToString(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"SeanRobertDH"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(DEFAULT_DATE_FORMAT);","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"SeanRobertDH"},"content":"        return dateFormat.format(dateTime);","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns \u003ccode\u003edateTime\u003c/code\u003e as a {@link java.time.LocalDateTime}.","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"SeanRobertDH"},"content":"     * @param dateTime \u003ccode\u003eString\u003c/code\u003e that is to be converted to {@link java.time.LocalDateTime}.","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"SeanRobertDH"},"content":"     * @return \u003ccode\u003edateTime\u003c/code\u003e parsed using the appropriate date format in {@link #ACCEPTED_DATE_FORMATS}.","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws ParseDateFailedException when \u003ccode\u003edateTime\u003c/code\u003e matches none","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"SeanRobertDH"},"content":"     *     of the date formats in {@link #ACCEPTED_DATE_FORMATS}.","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"SeanRobertDH"},"content":"    public static LocalDateTime stringToDate(String dateTime) throws ParseDateFailedException {","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"SeanRobertDH"},"content":"        String formattedDate \u003d formatDateString(dateTime);","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"SeanRobertDH"},"content":"        Log.info(LOG_FORMATTED_DATE_MESSAGE + formattedDate);","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"SeanRobertDH"},"content":"        for (String dateFormatString : ACCEPTED_DATE_FORMATS) {","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"SeanRobertDH"},"content":"            try {","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"SeanRobertDH"},"content":"                DateTimeFormatter dateFormat \u003d getDateTimeFormatter(dateFormatString);","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"SeanRobertDH"},"content":"                return LocalDateTime.parse(formattedDate, dateFormat);","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"SeanRobertDH"},"content":"            } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"SeanRobertDH"},"content":"                continue;","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"SeanRobertDH"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"SeanRobertDH"},"content":"        throw new ParseDateFailedException(getDefaultDateFormat());","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns the parsed \u003ccode\u003edateTime\u003c/code\u003e String to match","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"SeanRobertDH"},"content":"     * the format in {@link #ACCEPTED_DATE_FORMATS}.","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"SeanRobertDH"},"content":"     * @param dateTime Unformatted datetime String.","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"SeanRobertDH"},"content":"     * @return formatted datetime String.","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"SeanRobertDH"},"content":"    private static String formatDateString(String dateTime) {","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"SeanRobertDH"},"content":"        for (String separator : ACCEPTED_SEPARATORS) {","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"SeanRobertDH"},"content":"            dateTime \u003d dateTime.replaceAll(separator, DEFAULT_SEPARATOR);","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"SeanRobertDH"},"content":"        if (hasDateAndTime(dateTime)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"SeanRobertDH"},"content":"            dateTime \u003d dateTime.replaceFirst(WHITESPACE_REGEX, DEFAULT_SPACE);","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"SeanRobertDH"},"content":"        dateTime \u003d dateTime.replaceAll(WHITESPACE_REGEX, \"\");","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"SeanRobertDH"},"content":"        return dateTime;","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"SeanRobertDH"},"content":"    private static boolean hasDateAndTime(String date) {","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"SeanRobertDH"},"content":"        return date.split(WHITESPACE_REGEX).length \u003e\u003d 2;","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns the \u003ccode\u003eDateTimeFormatter\u003c/code\u003e from the \u003ccode\u003edateFormatString\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":115,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"SeanRobertDH"},"content":"     * @param dateFormatString the date format as a string.","lastModifiedDate":"2021-11-05"},{"lineNumber":117,"author":{"gitId":"SeanRobertDH"},"content":"     * @return \u003ccode\u003eDateTimeFormatter\u003c/code\u003e with defaults that are not specified in","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"SeanRobertDH"},"content":"     * \u003ccode\u003edateFormatString\u003c/code\u003e initialised.","lastModifiedDate":"2021-11-05"},{"lineNumber":119,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"SeanRobertDH"},"content":"    private static DateTimeFormatter getDateTimeFormatter(String dateFormatString) {","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"SeanRobertDH"},"content":"        DateTimeFormatterBuilder builder \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"SeanRobertDH"},"content":"            .appendPattern(dateFormatString);","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"SeanRobertDH"},"content":"        if (!dateFormatString.contains(YEAR_CHAR_REPRESENTATION)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"SeanRobertDH"},"content":"            builder \u003d builder.parseDefaulting(ChronoField.YEAR, LocalDateTime.now().getYear());","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":126,"author":{"gitId":"SeanRobertDH"},"content":"        return builder","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"SeanRobertDH"},"content":"            .parseDefaulting(ChronoField.MONTH_OF_YEAR, LocalDateTime.now().getMonthValue())","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"SeanRobertDH"},"content":"            .parseDefaulting(ChronoField.DAY_OF_MONTH, LocalDateTime.now().getDayOfMonth())","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"SeanRobertDH"},"content":"            .toFormatter();","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":132,"author":{"gitId":"SeanRobertDH"},"content":"    public static String getDefaultDateFormat() {","lastModifiedDate":"2021-10-15"},{"lineNumber":133,"author":{"gitId":"SeanRobertDH"},"content":"        return DEFAULT_DATE_FORMAT;","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":135,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"SeanRobertDH":135}},{"path":"src/main/java/seedu/tp/parser/TaskUsageParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.parser;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.flags.TaskFlag;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.PriorityEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.RecurrenceEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"//@@author SeanRobertDH","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"public class TaskUsageParser {","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String STRING_REGEX \u003d \"%s\";","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"    private static final char ARGUMENT_SPLIT \u003d \u0027|\u0027;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"    public static String getOptionalTaskArguments(String argumentFormat) {","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"        String optionalTaskArguments \u003d String.format(argumentFormat,","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"            TaskFlag.PRIORITY + \" \" + getPrioritiesListString()) + \" \";","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"        return optionalTaskArguments + String.format(argumentFormat,","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"            TaskFlag.RECURRENCE + \" \" + getRecurrencesListString());","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"    public static String getPrioritiesListString() {","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"        String listString \u003d STRING_REGEX;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"        for (PriorityEnum priority : PriorityEnum.values()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"            listString \u003d String.format(listString, priority.toString() + ARGUMENT_SPLIT + STRING_REGEX);","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"        listString \u003d listString.replaceAll(STRING_REGEX, \"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"        return listString.substring(0, listString.length() - 1);","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"    public static String getRecurrencesListString() {","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"        String listString \u003d STRING_REGEX;","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"        for (RecurrenceEnum recurrence : RecurrenceEnum.values()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"            listString \u003d String.format(listString, recurrence.toString() + ARGUMENT_SPLIT + STRING_REGEX);","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"        listString \u003d listString.replaceAll(STRING_REGEX, \"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"        return listString.substring(0, listString.length() - 1);","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"SeanRobertDH":38}},{"path":"src/main/java/seedu/tp/storage/DataManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.storage;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import com.google.gson.GsonBuilder;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import com.google.gson.JsonSyntaxException;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import com.google.gson.reflect.TypeToken;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import java.io.File;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"import java.io.Reader;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"import java.io.Writer;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"Xuefei2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.List;","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.log.Log;","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.Task;","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.taskmanager.Observer;","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.type.Deadline;","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.type.Event;","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.type.Lesson;","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.type.Todo;","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"//@@author SeanRobertDH","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":" * \u003ccode\u003eDataManager\u003c/code\u003e handles anything to do with loading and saving of Task data.","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"public class DataManager implements Observer {","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String LOAD_ERROR_MESSAGE \u003d \"Error occurred while loading task list.\"","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"        + \"Data will be overwritten when you add a task.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String READ_ACCESS_ERROR_MESSAGE \u003d \"No permission to read from save file.\"","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"        + \" Ensure the program has read access to %s\\nand restart the program to allow your tasks to be imported!\";","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String READ_IO_EXCEPTION \u003d \"IO Exception occurred when trying to read from save file.\"","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"        + \" Ensure the file %s exists\\nand you have enough disk space\";","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String WRITE_ACCESS_ERROR_MESSAGE \u003d \"No permission to write to save file.\"","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"        + \" Ensure the program has write access to %s\\nand restart the program to allow created tasks to be saved!\";","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String WRITE_IO_EXCEPTION \u003d \"IO Exception occurred when trying to read from save file.\"","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"        + \" Ensure the file %s exists\\nand you have enough disk space\";","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"SeanRobertDH"},"content":"    private static final boolean DO_APPEND_TO_FILE \u003d false;","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"SeanRobertDH"},"content":"    private final File taskFile;","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"SeanRobertDH"},"content":"    private final String taskFileName;","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"SeanRobertDH"},"content":"    private final Gson gson;","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"SeanRobertDH"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"SeanRobertDH"},"content":"    private boolean hasPrintedFileNotFoundException \u003d false;","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"SeanRobertDH"},"content":"    private boolean hasPrintedIoException \u003d false;","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"SeanRobertDH"},"content":"     * Constructs a new \u003ccode\u003eDataManager\u003c/code\u003e with a \u003ccode\u003eFileCreator\u003c/code\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"SeanRobertDH"},"content":"     * that created the file is uses to load and save date from.","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"SeanRobertDH"},"content":"     * Also initialises the Gson that is used to parse data.","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"SeanRobertDH"},"content":"     * @param fileCreator FileCreator that gets the Task file for loading and saving of data.","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"SeanRobertDH"},"content":"    public DataManager(FileCreator fileCreator) {","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"SeanRobertDH"},"content":"        taskFile \u003d fileCreator.getTaskFile();","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"SeanRobertDH"},"content":"        taskFileName \u003d fileCreator.getTaskFileName();","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"SeanRobertDH"},"content":"        gson \u003d buildGson();","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"SeanRobertDH"},"content":"    private Gson buildGson() {","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"SeanRobertDH"},"content":"        return new GsonBuilder()","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"SeanRobertDH"},"content":"            .registerTypeAdapter(Task.class, new TaskTypeAdapter())","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"SeanRobertDH"},"content":"            .registerTypeAdapter(Todo.class, new TaskTypeAdapter())","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"SeanRobertDH"},"content":"            .registerTypeAdapter(Deadline.class, new TaskTypeAdapter())","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"SeanRobertDH"},"content":"            .registerTypeAdapter(Event.class, new TaskTypeAdapter())","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"SeanRobertDH"},"content":"            .registerTypeAdapter(Lesson.class, new TaskTypeAdapter())","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"SeanRobertDH"},"content":"            .setPrettyPrinting().create();","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns the loaded {@link #taskList} from {@link #taskFile}.","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"SeanRobertDH"},"content":"     * If there was no loaded {@link #taskList}, a new {@link #taskList} is returned.","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"SeanRobertDH"},"content":"     * @param startingSize the size the {@link #taskList} should be initialised to.","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"SeanRobertDH"},"content":"    public List\u003cTask\u003e loadTaskList(int startingSize) {","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"SeanRobertDH"},"content":"        taskList \u003d new ArrayList\u003c\u003e(startingSize);","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"SeanRobertDH"},"content":"        try {","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"SeanRobertDH"},"content":"            Reader taskFileReader \u003d new FileReader(taskFile);","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"SeanRobertDH"},"content":"            List\u003cTask\u003e loadedTaskList \u003d gson.fromJson(taskFileReader, new TypeToken\u003cArrayList\u003cTask\u003e\u003e() {","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"SeanRobertDH"},"content":"            }.getType());","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"SeanRobertDH"},"content":"            taskFileReader.close();","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"SeanRobertDH"},"content":"            if (loadedTaskList !\u003d null) {","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"SeanRobertDH"},"content":"                taskList \u003d loadedTaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"SeanRobertDH"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"SeanRobertDH"},"content":"            Log.severe(String.format(READ_ACCESS_ERROR_MESSAGE, taskFileName));","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"SeanRobertDH"},"content":"            Log.severe(String.format(READ_IO_EXCEPTION, taskFileName));","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (JsonSyntaxException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"SeanRobertDH"},"content":"            Log.severe(LOAD_ERROR_MESSAGE);","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"SeanRobertDH"},"content":"            Log.severe(LOAD_ERROR_MESSAGE);","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"SeanRobertDH"},"content":"        return taskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"SeanRobertDH"},"content":"     * Updates the {@link #taskFile} to reflect the newest {@link #taskList}.","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"SeanRobertDH"},"content":"    public void update() {","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"SeanRobertDH"},"content":"        String taskListJson \u003d gson.toJson(taskList);","lastModifiedDate":"2021-10-29"},{"lineNumber":108,"author":{"gitId":"SeanRobertDH"},"content":"        writeToTaskFile(taskListJson);","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":110,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":111,"author":{"gitId":"SeanRobertDH"},"content":"    private void writeToTaskFile(String taskListJson) {","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"SeanRobertDH"},"content":"        try {","lastModifiedDate":"2021-10-29"},{"lineNumber":113,"author":{"gitId":"SeanRobertDH"},"content":"            Writer taskFileWriter \u003d new FileWriter(taskFile, DO_APPEND_TO_FILE);","lastModifiedDate":"2021-10-29"},{"lineNumber":114,"author":{"gitId":"SeanRobertDH"},"content":"            taskFileWriter.write(taskListJson);","lastModifiedDate":"2021-10-29"},{"lineNumber":115,"author":{"gitId":"SeanRobertDH"},"content":"            taskFileWriter.close();","lastModifiedDate":"2021-10-29"},{"lineNumber":116,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"SeanRobertDH"},"content":"            logFileNotFoundException();","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"SeanRobertDH"},"content":"            logIoException();","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":122,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":123,"author":{"gitId":"SeanRobertDH"},"content":"    private void logFileNotFoundException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":124,"author":{"gitId":"SeanRobertDH"},"content":"        if (!hasPrintedFileNotFoundException) {","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"SeanRobertDH"},"content":"            Log.severe(String.format(WRITE_ACCESS_ERROR_MESSAGE, taskFileName));","lastModifiedDate":"2021-11-05"},{"lineNumber":126,"author":{"gitId":"SeanRobertDH"},"content":"            hasPrintedFileNotFoundException \u003d true;","lastModifiedDate":"2021-11-03"},{"lineNumber":127,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":130,"author":{"gitId":"SeanRobertDH"},"content":"    private void logIoException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":131,"author":{"gitId":"SeanRobertDH"},"content":"        if (!hasPrintedIoException) {","lastModifiedDate":"2021-11-03"},{"lineNumber":132,"author":{"gitId":"SeanRobertDH"},"content":"            Log.severe(String.format(WRITE_IO_EXCEPTION, taskFileName));","lastModifiedDate":"2021-11-05"},{"lineNumber":133,"author":{"gitId":"SeanRobertDH"},"content":"            hasPrintedIoException \u003d true;","lastModifiedDate":"2021-11-03"},{"lineNumber":134,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"APZH":1,"SeanRobertDH":134,"Xuefei2001":1}},{"path":"src/main/java/seedu/tp/storage/FileCreator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.storage;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import java.io.File;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.log.Log;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"//@@author SeanRobertDH","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":" * \u003ccode\u003eFileCreator\u003c/code\u003e handles anything to do with file creation.","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"public class FileCreator {","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String LIST_STORAGE_FOLDER \u003d \"data/\";","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String LIST_STORAGE_FILE \u003d \"tasks.dat\";","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"    private File taskFile;","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"    private boolean hasCreatedFolder \u003d true;","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String IO_EXCEPTION_MESSAGE \u003d \"IO Exception occurred while trying to create \"","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"        + \"file for saving tasks: \" + LIST_STORAGE_FOLDER + LIST_STORAGE_FILE;","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String FILE_ALREADY_EXISTS \u003d \"File \u0027data\u0027 already exists in project folder.\"","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"        + \" Please remove it and restart the application to be able to save tasks!\";","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"     * Creates the files required for storing tasks if they are not already created.","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"    public FileCreator() {","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"        createFolder();","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"        try {","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"            taskFile \u003d createFile(LIST_STORAGE_FOLDER + LIST_STORAGE_FILE);","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"            Log.severe(IO_EXCEPTION_MESSAGE);","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"    private void createFolder() {","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"        File newFolder \u003d new File(LIST_STORAGE_FOLDER);","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"        if (newFolder.exists() \u0026\u0026 !newFolder.isDirectory()) {","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"            Log.severe(FILE_ALREADY_EXISTS);","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"            hasCreatedFolder \u003d false;","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"SeanRobertDH"},"content":"        if (!newFolder.exists()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"SeanRobertDH"},"content":"            newFolder.mkdir();","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"SeanRobertDH"},"content":"    private File createFile(String fileName) throws IOException {","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"SeanRobertDH"},"content":"        File file \u003d new File(fileName);","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"SeanRobertDH"},"content":"        if (!file.exists()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"SeanRobertDH"},"content":"            file.createNewFile();","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"SeanRobertDH"},"content":"        return file;","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns the {@link #taskFile} created by {@link seedu.tp.storage.FileCreator}.","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"SeanRobertDH"},"content":"    public File getTaskFile() {","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"SeanRobertDH"},"content":"        return taskFile;","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns the absolute file path of the {@link #taskFile} created by {@link seedu.tp.storage.FileCreator}.","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"SeanRobertDH"},"content":"    public String getTaskFileName() {","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"SeanRobertDH"},"content":"        return taskFile.getAbsolutePath();","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns whether the {@link #LIST_STORAGE_FOLDER} has been created.","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"SeanRobertDH"},"content":"    public boolean hasCreatedFolder() {","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"SeanRobertDH"},"content":"        return hasCreatedFolder;","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"SeanRobertDH":74}},{"path":"src/main/java/seedu/tp/storage/TaskTypeAdapter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.storage;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import com.google.gson.JsonDeserializationContext;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import com.google.gson.JsonDeserializer;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import com.google.gson.JsonElement;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import com.google.gson.JsonObject;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import com.google.gson.JsonParseException;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"import com.google.gson.JsonSerializationContext;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"import com.google.gson.JsonSerializer;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"import java.lang.reflect.Type;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.Task;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"//@@author SeanRobertDH","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":" * \u003ccode\u003eJsonSerializer\u003c/code\u003e and \u003ccode\u003eJsonDeserializer\u003c/code\u003e used by {@link seedu.tp.storage.DataManager}","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":" * for parsing superclasses of {@link seedu.tp.task.Task}.","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"class TaskTypeAdapter implements JsonSerializer\u003cTask\u003e, JsonDeserializer\u003cTask\u003e {","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String JSON_TYPE_KEY \u003d \"type\";","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"    private final Gson gson;","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"    public TaskTypeAdapter() {","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"        this.gson \u003d new Gson();","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"    public Task deserialize(JsonElement json, Type type, JsonDeserializationContext context) {","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"        JsonObject jsonObject \u003d json.getAsJsonObject();","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"        JsonElement jsonElement \u003d jsonObject.get(JSON_TYPE_KEY);","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"        Class\u003c? extends Task\u003e taskType \u003d getObjectClass(jsonElement.getAsString());","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"        return gson.fromJson(jsonObject, taskType);","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"    public JsonElement serialize(Task task, Type type, JsonSerializationContext context) {","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"        JsonObject jsonObject \u003d (JsonObject) gson.toJsonTree(task);","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"        jsonObject.addProperty(JSON_TYPE_KEY, task.getClass().getName());","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"        return jsonObject;","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"SeanRobertDH"},"content":"    private Class getObjectClass(String className) {","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"SeanRobertDH"},"content":"        try {","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"SeanRobertDH"},"content":"            return Class.forName(className);","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"SeanRobertDH"},"content":"            throw new JsonParseException(e.getMessage());","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"SeanRobertDH":50}},{"path":"src/main/java/seedu/tp/task/PriorityEnum.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.task;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.InvalidPriorityException;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"//@@author SeanRobertDH","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":" * {@link java.lang.Enum} class used to store the possible {@link seedu.tp.task.Task} priorities.","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"public enum PriorityEnum {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"    HIGH(2),","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"    MEDIUM(1),","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"    LOW(0);","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"    private final int priorityNumber;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"    PriorityEnum(final int priorityNumber) {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"        this.priorityNumber \u003d priorityNumber;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns the correspnding integer value for {@link seedu.tp.task.PriorityEnum}.","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"     * @return \u003ccode\u003eint\u003c/code\u003e of {@link PriorityEnum}.","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"    public int getValue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"        return this.priorityNumber;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns the name of {@link PriorityEnum} in lowercase.","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e of {@link PriorityEnum} name in lowercase.","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"        return super.toString().toLowerCase();","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns the Priority enum corresponding to \u003ccode\u003eint priorityNumber\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"SeanRobertDH"},"content":"     * @param priorityNumber the priority \u003ccode\u003eint\u003c/code\u003e corresponding to the {@link PriorityEnum} you want to obtain.","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"SeanRobertDH"},"content":"     * @return {@link PriorityEnum} enum corresponding to \u003ccode\u003eint priorityNumber\u003c/code\u003e argument.","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws InvalidPriorityException if \u003ccode\u003epriorityNumber\u003c/code\u003e does not","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"SeanRobertDH"},"content":"     *     correspond to a valid {@link seedu.tp.task.PriorityEnum}.","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"SeanRobertDH"},"content":"    public static PriorityEnum getPriority(int priorityNumber) throws InvalidPriorityException {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"SeanRobertDH"},"content":"        for (PriorityEnum priority : PriorityEnum.values()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"SeanRobertDH"},"content":"            if (priorityNumber \u003d\u003d priority.getValue()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"SeanRobertDH"},"content":"                return priority;","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"SeanRobertDH"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"SeanRobertDH"},"content":"        throw new InvalidPriorityException(Integer.toString(priorityNumber));","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns the {@link PriorityEnum} corresponding to \u003ccode\u003eString priority\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"SeanRobertDH"},"content":"     * @param priority the priority \u003ccode\u003eString\u003c/code\u003e corresponding to the {@link PriorityEnum} you want to obtain.","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"SeanRobertDH"},"content":"     * @return {@link PriorityEnum} enum corresponding to \u003ccode\u003eint priorityNumber\u003c/code\u003e argument.","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws InvalidPriorityException if \u003ccode\u003epriority\u003c/code\u003e does not","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"SeanRobertDH"},"content":"     *     correspond to a valid {@link seedu.tp.task.PriorityEnum}.","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"SeanRobertDH"},"content":"    public static PriorityEnum getPriority(String priority) throws InvalidPriorityException {","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"SeanRobertDH"},"content":"        for (PriorityEnum priorityEnum : values()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"SeanRobertDH"},"content":"            if (priority.equalsIgnoreCase(priorityEnum.name())) {","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"SeanRobertDH"},"content":"                return priorityEnum;","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"SeanRobertDH"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"SeanRobertDH"},"content":"        throw new InvalidPriorityException(priority);","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"SeanRobertDH":74}},{"path":"src/main/java/seedu/tp/task/RecurrenceEnum.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.task;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.InvalidRecurrenceException;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"//@@author SeanRobertDH","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":" * {@link java.lang.Enum} class used to store the possible {@link seedu.tp.task.Task} recurrences.","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"public enum RecurrenceEnum {","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"    NONE(null),","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"    DAILY(ChronoUnit.DAYS),","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"    WEEKLY(ChronoUnit.WEEKS),","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"    MONTHLY(ChronoUnit.MONTHS),","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"    YEARLY(ChronoUnit.YEARS);","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"    private final ChronoUnit chronoUnit;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"    RecurrenceEnum(ChronoUnit chronoUnit) {","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"        this.chronoUnit \u003d chronoUnit;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns the name of {@link RecurrenceEnum} in lowercase.","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e of {@link RecurrenceEnum} name in lowercase.","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"    public String toString() {","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"        return super.toString().toLowerCase();","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns a \u003ccode\u003eList\u003c/code\u003e of \u003ccode\u003eLocalDateTimes\u003c/code\u003e which is the next","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"     * \u003ccode\u003en\u003c/code\u003e recurrences of \u003ccode\u003edate\u003c/code\u003e argument.","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"     * If recurrenceEnum is {@link #NONE}, an empty list is returned.","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"SeanRobertDH"},"content":"     * @return \u003ccode\u003eList\u0026lt;String\u0026gt;\u003c/code\u003e of next \u003ccode\u003en\u003c/code\u003e recurrences of \u003ccode\u003edate\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"SeanRobertDH"},"content":"    public List\u003cLocalDateTime\u003e getNextNRecurredDates(LocalDateTime date, int n) {","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"SeanRobertDH"},"content":"        ArrayList\u003cLocalDateTime\u003e recurredDates \u003d new ArrayList\u003c\u003e(n);","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"SeanRobertDH"},"content":"        if (this \u003d\u003d NONE) {","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"SeanRobertDH"},"content":"            return recurredDates;","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"SeanRobertDH"},"content":"        for (int i \u003d 1; i \u003c\u003d n; i++) {","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"SeanRobertDH"},"content":"            recurredDates.add(date.plus(i, chronoUnit));","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"SeanRobertDH"},"content":"        return recurredDates;","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns the next recurred date of \u003ccode\u003edate\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"SeanRobertDH"},"content":"     * If recurrenceEnum is {@link #NONE}, \u003ccode\u003edate\u003c/code\u003e is returned.","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"SeanRobertDH"},"content":"     * @return Next recurrence of \u003ccode\u003edate\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"SeanRobertDH"},"content":"    public LocalDateTime getNextRecurredDate(LocalDateTime date) {","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"SeanRobertDH"},"content":"        if (this \u003d\u003d NONE) {","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"SeanRobertDH"},"content":"            return date;","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"SeanRobertDH"},"content":"        long i \u003d 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"SeanRobertDH"},"content":"        LocalDateTime recurredDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"SeanRobertDH"},"content":"        do {","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"SeanRobertDH"},"content":"            recurredDate \u003d date.plus(i++, chronoUnit);","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"SeanRobertDH"},"content":"        } while (recurredDate.isBefore(LocalDateTime.now()));","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"SeanRobertDH"},"content":"        return recurredDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns the {@link RecurrenceEnum} corresponding to \u003ccode\u003eString recurrence\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"SeanRobertDH"},"content":"     * @param recurrence the recurrence \u003ccode\u003eString\u003c/code\u003e corresponding","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"SeanRobertDH"},"content":"     *     to the {@link RecurrenceEnum} you want to obtain.","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"SeanRobertDH"},"content":"     * @return {@link RecurrenceEnum} enum corresponding to \u003ccode\u003eString recurrence\u003c/code\u003e argument.","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws InvalidRecurrenceException if \u003ccode\u003erecurrence\u003c/code\u003e does not","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"SeanRobertDH"},"content":"     *     correspond to a valid {@link RecurrenceEnum}.","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"SeanRobertDH"},"content":"    public static RecurrenceEnum getRecurrence(String recurrence) throws InvalidRecurrenceException {","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"SeanRobertDH"},"content":"        for (RecurrenceEnum recurrenceEnum : values()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"SeanRobertDH"},"content":"            if (recurrence.equalsIgnoreCase(recurrenceEnum.name())) {","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"SeanRobertDH"},"content":"                return recurrenceEnum;","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"SeanRobertDH"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"SeanRobertDH"},"content":"        throw new InvalidRecurrenceException(recurrence);","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"SeanRobertDH":92}},{"path":"src/main/java/seedu/tp/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.task;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"SuibianP"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"Xuefei2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"SuibianP"},"content":"import java.util.List;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SuibianP"},"content":"import org.jetbrains.annotations.Nullable;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.Command;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.flags.TaskFlag;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.EmptyDescriptionException;","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.InvalidFlagsException;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.reminder.Reminder;","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.InvalidPriorityException;","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.InvalidRecurrenceException;","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.ParseDateFailedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.StartDateAfterEndDateException;","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"public abstract class Task {","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"    private static final PriorityEnum DEFAULT_PRIORITY \u003d PriorityEnum.MEDIUM;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"    private static final RecurrenceEnum DEFAULT_RECURRENCE \u003d RecurrenceEnum.NONE;","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"APZH"},"content":"    private static final String TASK_ENTRY_DESCRIPTION_REGEX \u003d \"%s \u003c%s\u003e {%s}\";","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String DESCRIPTION_NOT_EMPTY_ASSERTION \u003d \"description should not be empty.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String DESCRIPTION_NOT_NULL_ASSERTION \u003d \"description should not be null.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String PRIORITY_ASSERTION \u003d \"priority should not be null.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String RECURRENCE_ASSERTION \u003d \"recurrence should not be null.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"    private String description;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"    private PriorityEnum priority;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"    private RecurrenceEnum recurrence;","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"    private Reminder reminder;","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"    protected Task(String description) {","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"        setDescription(description);","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"        setPriority(DEFAULT_PRIORITY);","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"SeanRobertDH"},"content":"        setRecurrence(DEFAULT_RECURRENCE);","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"APZH"},"content":"    protected Task(String description, PriorityEnum priority) {","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"SeanRobertDH"},"content":"        this(description);","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"SeanRobertDH"},"content":"        setPriority(priority);","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"SeanRobertDH"},"content":"    protected Task(String description, RecurrenceEnum recurrence) {","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"SeanRobertDH"},"content":"        this(description);","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"SeanRobertDH"},"content":"        setRecurrence(recurrence);","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"SeanRobertDH"},"content":"    protected Task(String description, PriorityEnum priority, RecurrenceEnum recurrence) {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"SeanRobertDH"},"content":"        this(description);","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"SeanRobertDH"},"content":"        setPriority(priority);","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"SeanRobertDH"},"content":"        setRecurrence(recurrence);","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"APZH"},"content":"    public String getTaskEntryDescription() {","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"APZH"},"content":"        return String.format(TASK_ENTRY_DESCRIPTION_REGEX, getDescription(), getPriority(), getRecurrence());","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"SeanRobertDH"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"SeanRobertDH"},"content":"        return description;","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"SeanRobertDH"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"SeanRobertDH"},"content":"        assert !description.equals(\"\") : DESCRIPTION_NOT_EMPTY_ASSERTION;","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"SeanRobertDH"},"content":"        assert description !\u003d null : DESCRIPTION_NOT_NULL_ASSERTION;","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"SeanRobertDH"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"APZH"},"content":"    public PriorityEnum getPriority() {","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"APZH"},"content":"        return priority;","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"APZH"},"content":"    public void setPriority(PriorityEnum priority) {","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"SeanRobertDH"},"content":"        assert priority !\u003d null : PRIORITY_ASSERTION;","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"APZH"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"SeanRobertDH"},"content":"    public Reminder getReminder() {","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"SeanRobertDH"},"content":"        return reminder;","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"SeanRobertDH"},"content":"    public String getReminder(LocalDateTime now) {","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"SeanRobertDH"},"content":"        return reminder.getRecurrenceMessage(now, getTaskEntryDescription(), getRecurrence());","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"SeanRobertDH"},"content":"    public void setReminder(Reminder reminder) {","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"SeanRobertDH"},"content":"        this.reminder \u003d reminder;","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"SeanRobertDH"},"content":"    public boolean needReminder() {","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"SeanRobertDH"},"content":"        return (reminder !\u003d null);","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"SeanRobertDH"},"content":"    public RecurrenceEnum getRecurrence() {","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"SeanRobertDH"},"content":"        return this.recurrence;","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"SeanRobertDH"},"content":"    public void setRecurrence(RecurrenceEnum recurrence) {","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"SeanRobertDH"},"content":"        assert recurrence !\u003d null : RECURRENCE_ASSERTION;","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"SeanRobertDH"},"content":"        this.recurrence \u003d recurrence;","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"APZH"},"content":"    public abstract TypeEnum getTaskType();","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"SeanRobertDH"},"content":"    //@@author SeanRobertDH","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":112,"author":{"gitId":"SeanRobertDH"},"content":"     * Edits the variables of {@link seedu.tp.task.Task} based off the flags in \u003ccode\u003earguments\u003c/code\u003e.","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"SeanRobertDH"},"content":"     * @param arguments \u003ccode\u003eMap\u0026lt;String, String\u0026gt;\u003c/code\u003e of","lastModifiedDate":"2021-11-05"},{"lineNumber":115,"author":{"gitId":"SeanRobertDH"},"content":"     *                  flags to values that should be edited in {@link seedu.tp.task.Task}.","lastModifiedDate":"2021-11-07"},{"lineNumber":116,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws InvalidPriorityException if attempting to edit","lastModifiedDate":"2021-11-06"},{"lineNumber":117,"author":{"gitId":"SeanRobertDH"},"content":"     *     {@link #priority} and the \u003ccode\u003epriority\u003c/code\u003e specified is invalid.","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws InvalidRecurrenceException if attempting to edit","lastModifiedDate":"2021-11-06"},{"lineNumber":119,"author":{"gitId":"SeanRobertDH"},"content":"     *     {@link #recurrence} and the \u003ccode\u003erecurrence\u003c/code\u003e specified is invalid.","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws ParseDateFailedException From {@link #taskEdit(java.util.Map)}.","lastModifiedDate":"2021-11-06"},{"lineNumber":121,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws StartDateAfterEndDateException From {@link #taskEdit(java.util.Map)}.","lastModifiedDate":"2021-11-06"},{"lineNumber":122,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws java.net.URISyntaxException From {@link #taskEdit(java.util.Map)}.","lastModifiedDate":"2021-11-05"},{"lineNumber":123,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":124,"author":{"gitId":"SeanRobertDH"},"content":"    public void edit(Map\u003cString, String\u003e arguments) throws InvalidPriorityException,","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"SeanRobertDH"},"content":"        InvalidRecurrenceException, ParseDateFailedException, StartDateAfterEndDateException,","lastModifiedDate":"2021-11-08"},{"lineNumber":126,"author":{"gitId":"SeanRobertDH"},"content":"        URISyntaxException, EmptyDescriptionException {","lastModifiedDate":"2021-11-08"},{"lineNumber":127,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":128,"author":{"gitId":"SeanRobertDH"},"content":"        if (arguments.containsKey(TaskFlag.EDIT_DESCRIPTION)) {","lastModifiedDate":"2021-11-06"},{"lineNumber":129,"author":{"gitId":"SeanRobertDH"},"content":"            String description \u003d arguments.get(TaskFlag.EDIT_DESCRIPTION);","lastModifiedDate":"2021-11-08"},{"lineNumber":130,"author":{"gitId":"SeanRobertDH"},"content":"            if (description.equals(\"\")) {","lastModifiedDate":"2021-11-08"},{"lineNumber":131,"author":{"gitId":"SeanRobertDH"},"content":"                throw  new EmptyDescriptionException();","lastModifiedDate":"2021-11-08"},{"lineNumber":132,"author":{"gitId":"SeanRobertDH"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":133,"author":{"gitId":"SeanRobertDH"},"content":"            setDescription(arguments.get(TaskFlag.EDIT_DESCRIPTION));","lastModifiedDate":"2021-11-06"},{"lineNumber":134,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":135,"author":{"gitId":"SeanRobertDH"},"content":"        if (arguments.containsKey(TaskFlag.PRIORITY)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":136,"author":{"gitId":"SeanRobertDH"},"content":"            String priority \u003d arguments.get(TaskFlag.PRIORITY);","lastModifiedDate":"2021-10-28"},{"lineNumber":137,"author":{"gitId":"SeanRobertDH"},"content":"            setPriority(PriorityEnum.getPriority(priority));","lastModifiedDate":"2021-11-05"},{"lineNumber":138,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"SeanRobertDH"},"content":"        if (arguments.containsKey(TaskFlag.RECURRENCE)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":140,"author":{"gitId":"SeanRobertDH"},"content":"            String recurrence \u003d arguments.get(TaskFlag.RECURRENCE);","lastModifiedDate":"2021-10-28"},{"lineNumber":141,"author":{"gitId":"SeanRobertDH"},"content":"            setRecurrence(RecurrenceEnum.getRecurrence(recurrence));","lastModifiedDate":"2021-11-05"},{"lineNumber":142,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":143,"author":{"gitId":"SeanRobertDH"},"content":"        taskEdit(arguments);","lastModifiedDate":"2021-10-28"},{"lineNumber":144,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":145,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":146,"author":{"gitId":"SeanRobertDH"},"content":"    //@@author SeanRobertDH","lastModifiedDate":"2021-11-05"},{"lineNumber":147,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":148,"author":{"gitId":"SeanRobertDH"},"content":"     * Edits the variables of subclass of {@link seedu.tp.task.Task} based off the flags in \u003ccode\u003earguments\u003c/code\u003e.","lastModifiedDate":"2021-11-07"},{"lineNumber":149,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":150,"author":{"gitId":"SeanRobertDH"},"content":"     * @param arguments \u003ccode\u003eMap\u0026lt;String, String\u0026gt;\u003c/code\u003e of flags to values that should be edited in subclasses.","lastModifiedDate":"2021-11-05"},{"lineNumber":151,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws seedu.tp.exception.ParseDateFailedException if unable to parse a","lastModifiedDate":"2021-11-07"},{"lineNumber":152,"author":{"gitId":"SeanRobertDH"},"content":"     *     value when editing a {@link java.time.LocalDateTime}.","lastModifiedDate":"2021-11-05"},{"lineNumber":153,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws StartDateAfterEndDateException From {@link seedu.tp.task.type.Event}.","lastModifiedDate":"2021-11-07"},{"lineNumber":154,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws java.net.URISyntaxException From {@link seedu.tp.task.type.Lesson}.","lastModifiedDate":"2021-11-07"},{"lineNumber":155,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":156,"author":{"gitId":"SeanRobertDH"},"content":"    protected abstract void taskEdit(Map\u003cString, String\u003e arguments)","lastModifiedDate":"2021-10-28"},{"lineNumber":157,"author":{"gitId":"SeanRobertDH"},"content":"        throws ParseDateFailedException, StartDateAfterEndDateException, URISyntaxException;","lastModifiedDate":"2021-11-02"},{"lineNumber":158,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":159,"author":{"gitId":"SeanRobertDH"},"content":"    //@@author SeanRobertDH","lastModifiedDate":"2021-11-06"},{"lineNumber":160,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":161,"author":{"gitId":"SeanRobertDH"},"content":"     * Checks that all the keys in \u003ccode\u003eMap\u0026lt;String, String\u0026gt; arguments\u003c/code\u003e are valid edit flags.","lastModifiedDate":"2021-11-06"},{"lineNumber":162,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":163,"author":{"gitId":"SeanRobertDH"},"content":"     * @param arguments \u003ccode\u003eMap\u0026lt;String, String\u0026gt;\u003c/code\u003e of flags to values to be checked for valid edit flags.","lastModifiedDate":"2021-11-06"},{"lineNumber":164,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws InvalidFlagsException If \u003ccode\u003earguments\u003c/code\u003e has invalid flags.","lastModifiedDate":"2021-11-06"},{"lineNumber":165,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":166,"author":{"gitId":"SeanRobertDH"},"content":"    public void checkAllEditFlagsValid(Map\u003cString, String\u003e arguments) throws InvalidFlagsException {","lastModifiedDate":"2021-11-06"},{"lineNumber":167,"author":{"gitId":"SeanRobertDH"},"content":"        HashSet\u003cString\u003e validFlags \u003d new HashSet\u003c\u003e(getTaskFlag().getAllEditFlags());","lastModifiedDate":"2021-11-06"},{"lineNumber":168,"author":{"gitId":"SeanRobertDH"},"content":"        ArrayList\u003cString\u003e invalidFlags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-06"},{"lineNumber":169,"author":{"gitId":"SeanRobertDH"},"content":"        for (String flag : arguments.keySet()) {","lastModifiedDate":"2021-11-06"},{"lineNumber":170,"author":{"gitId":"SeanRobertDH"},"content":"            if (flag \u003d\u003d Command.MAIN_ARGUMENT) {","lastModifiedDate":"2021-11-06"},{"lineNumber":171,"author":{"gitId":"SeanRobertDH"},"content":"                continue;","lastModifiedDate":"2021-11-06"},{"lineNumber":172,"author":{"gitId":"SeanRobertDH"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":173,"author":{"gitId":"SeanRobertDH"},"content":"            if (!validFlags.contains(flag)) {","lastModifiedDate":"2021-11-06"},{"lineNumber":174,"author":{"gitId":"SeanRobertDH"},"content":"                invalidFlags.add(flag);","lastModifiedDate":"2021-11-06"},{"lineNumber":175,"author":{"gitId":"SeanRobertDH"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":176,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":177,"author":{"gitId":"SeanRobertDH"},"content":"        if (!invalidFlags.isEmpty()) {","lastModifiedDate":"2021-11-06"},{"lineNumber":178,"author":{"gitId":"SeanRobertDH"},"content":"            throw new InvalidFlagsException(invalidFlags);","lastModifiedDate":"2021-11-06"},{"lineNumber":179,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":180,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":181,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":182,"author":{"gitId":"SeanRobertDH"},"content":"    //@@author SeanRobertDH","lastModifiedDate":"2021-11-06"},{"lineNumber":183,"author":{"gitId":"SeanRobertDH"},"content":"    protected abstract TaskFlag getTaskFlag();","lastModifiedDate":"2021-11-06"},{"lineNumber":184,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":185,"author":{"gitId":"SeanRobertDH"},"content":"    //@@author SeanRobertDH","lastModifiedDate":"2021-11-05"},{"lineNumber":186,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":187,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns the {@link java.time.LocalDateTime} that is the most relevant for the Task subclass.","lastModifiedDate":"2021-11-05"},{"lineNumber":188,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":189,"author":{"gitId":"SeanRobertDH"},"content":"    public abstract LocalDateTime getListDate();","lastModifiedDate":"2021-10-29"},{"lineNumber":190,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":191,"author":{"gitId":"SeanRobertDH"},"content":"    //@@author SeanRobertDH","lastModifiedDate":"2021-11-05"},{"lineNumber":192,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":193,"author":{"gitId":"SeanRobertDH"},"content":"     * Updates the {@link java.time.LocalDateTime} in subclasses if they have a recurrence","lastModifiedDate":"2021-11-05"},{"lineNumber":194,"author":{"gitId":"SeanRobertDH"},"content":"     * to the latest date.","lastModifiedDate":"2021-11-05"},{"lineNumber":195,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":196,"author":{"gitId":"SeanRobertDH"},"content":"    public abstract void refreshDate();","lastModifiedDate":"2021-11-05"},{"lineNumber":197,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"APZH":12,"SuibianP":4,"SeanRobertDH":176,"Xuefei2001":5}},{"path":"src/main/java/seedu/tp/task/TypeEnum.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.task;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":" * {@link java.lang.Enum} class used to store the possible {@link seedu.tp.task.Task} types.","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"public enum TypeEnum {","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"APZH"},"content":"    TODO, DEADLINE, EVENT, LESSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns the name of {@link TypeEnum} in lowercase.","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e of {@link TypeEnum} name in lowercase.","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"    public String toString() {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"        return super.toString().toLowerCase();","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"APZH":1,"SeanRobertDH":17}},{"path":"src/main/java/seedu/tp/task/factory/DeadlineFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.task.factory;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"SuibianP"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.flags.DeadlineFlag;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.GetTaskFailedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.ParseDateFailedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.Task;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.TypeEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.type.Deadline;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"//@@author SeanRobertDH","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":" * Factory class used to create {@link seedu.tp.task.type.Deadline}.","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"public class DeadlineFactory extends TaskFactory {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"    private static final TypeEnum TASK_TYPE \u003d TypeEnum.DEADLINE;","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"    LocalDateTime dueDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"     * Constructor for {@link seedu.tp.task.factory.DeadlineFactory}.","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"     * @param flags the \u003ccode\u003eMap\u0026lt;String, String\u0026gt;\u003c/code\u003e of flags to their values.","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"    public DeadlineFactory(Map\u003cString, String\u003e flags) {","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"        super(TASK_TYPE, DeadlineFlag.REQUIRED_FLAGS, flags);","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"    void setAdditionalVariables() throws GetTaskFailedException {","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"            String due \u003d flags.get(DeadlineFlag.DUE_DATE);","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"            dueDate \u003d getDate(due);","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (ParseDateFailedException pdfe) {","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"            throw new GetTaskFailedException(pdfe.getMessage());","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"SeanRobertDH"},"content":"    Task createTask() {","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"SeanRobertDH"},"content":"        return new Deadline(description, dueDate);","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns the {@link seedu.tp.task.type.Deadline} created.","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"SeanRobertDH"},"content":"     * @return created {@link seedu.tp.task.type.Deadline}.","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws GetTaskFailedException General Exception","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"SeanRobertDH"},"content":"     *     thrown when creating {@link seedu.tp.task.Task} fails.","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"SeanRobertDH"},"content":"    public Deadline getTask() throws GetTaskFailedException {","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"SeanRobertDH"},"content":"        return (Deadline) super.getTask();","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"SuibianP":1,"SeanRobertDH":58}},{"path":"src/main/java/seedu/tp/task/factory/EventFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.task.factory;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"SuibianP"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.GetTaskFailedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.ParseDateFailedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.StartDateAfterEndDateException;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.flags.EventFlag;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.Task;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.TypeEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.type.Event;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"//@@author SeanRobertDH","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":" * Factory class used to create {@link seedu.tp.task.type.Event}.","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"public class EventFactory extends TaskFactory {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"    private static final TypeEnum TASK_TYPE \u003d TypeEnum.EVENT;","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"    LocalDateTime startDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"    LocalDateTime endDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"     * Constructor for {@link seedu.tp.task.factory.EventFactory}.","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"     * @param flags the \u003ccode\u003eMap\u0026lt;String, String\u0026gt;\u003c/code\u003e of flags to their values.","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"    public EventFactory(Map\u003cString, String\u003e flags) {","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"        super(TASK_TYPE, EventFlag.REQUIRED_FLAGS, flags);","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"    void setAdditionalVariables() throws GetTaskFailedException {","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"            String start \u003d flags.get(EventFlag.START_DATE);","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"            String end \u003d flags.get(EventFlag.END_DATE);","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"            startDate \u003d getDate(start);","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"            endDate \u003d getDate(end);","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"SeanRobertDH"},"content":"            if (startDate.isAfter(endDate)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"SeanRobertDH"},"content":"                throw new StartDateAfterEndDateException();","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"SeanRobertDH"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (ParseDateFailedException pdfe) {","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"SeanRobertDH"},"content":"            throw new GetTaskFailedException(pdfe.getMessage());","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (StartDateAfterEndDateException sdaede) {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"SeanRobertDH"},"content":"            throw new GetTaskFailedException(sdaede.getMessage());","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"SeanRobertDH"},"content":"    Task createTask() {","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"SeanRobertDH"},"content":"        return new Event(description, startDate, endDate);","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns the {@link seedu.tp.task.type.Event} created.","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"SeanRobertDH"},"content":"     * @return created {@link seedu.tp.task.type.Event}.","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws GetTaskFailedException General Exception","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"SeanRobertDH"},"content":"     *     thrown when creating {@link seedu.tp.task.Task} fails.","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"SeanRobertDH"},"content":"    public Event getTask() throws GetTaskFailedException {","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"SeanRobertDH"},"content":"        return (Event) super.getTask();","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"SuibianP":1,"SeanRobertDH":68}},{"path":"src/main/java/seedu/tp/task/factory/TaskFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.task.factory;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.flags.TaskFlag;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.GetTaskFailedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.InvalidPriorityException;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.InvalidRecurrenceException;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.ParseDateFailedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.RequiredArgmentNotProvidedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.parser.DateParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.PriorityEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.RecurrenceEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.Task;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.TypeEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.utility.Utility;","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"//@@author SeanRobertDH","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":" * Task factory template to be extended in superclasses of Task factories.","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"public abstract class TaskFactory {","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"    private final TypeEnum taskType;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"    private final String[] requiredFlags;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"    final Map\u003cString, String\u003e flags;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"    String description;","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"    PriorityEnum priorityEnum;","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"    RecurrenceEnum recurrenceEnum;","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"     * {@link seedu.tp.task.factory.TaskFactory} Constructor.","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"     * @param taskType {@link seedu.tp.task.TypeEnum} of the","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"     *     respective {@link seedu.tp.task.Task} the factory is for.","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"     * @param requiredFlags Required flags that are to be present in \u003ccode\u003eflags\u003c/code\u003e for","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"     *     {@link seedu.tp.task.Task} creation to be valid.","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"     * @param flags the \u003ccode\u003eMap\u0026lt;String, String\u0026gt;\u003c/code\u003e of flags to their values.","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"    TaskFactory(TypeEnum taskType, String[] requiredFlags, Map\u003cString, String\u003e flags) {","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"SeanRobertDH"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"SeanRobertDH"},"content":"        this.requiredFlags \u003d requiredFlags;","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"SeanRobertDH"},"content":"        this.flags \u003d flags;","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"SeanRobertDH"},"content":"    //Template Method Pattern","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"SeanRobertDH"},"content":"     * The Template Method Pattern for superclasses of Task factories.","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"SeanRobertDH"},"content":"     * This method should be overwritten to Downcast the return task type.","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws GetTaskFailedException General Exception","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"SeanRobertDH"},"content":"     *     thrown when creating {@link seedu.tp.task.Task} fails.","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"SeanRobertDH"},"content":"    public Task getTask() throws GetTaskFailedException {","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"SeanRobertDH"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"SeanRobertDH"},"content":"            checkForRequiredArguments(flags);","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"SeanRobertDH"},"content":"            description \u003d flags.get(TaskFlag.DESCRIPTION);","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"SeanRobertDH"},"content":"            String priority \u003d flags.get(TaskFlag.PRIORITY);","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"SeanRobertDH"},"content":"            priorityEnum \u003d getPriorityEnum(priority);","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"SeanRobertDH"},"content":"            String recurrence \u003d flags.get(TaskFlag.RECURRENCE);","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"SeanRobertDH"},"content":"            recurrenceEnum \u003d getRecurrenceEnum(recurrence);","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"SeanRobertDH"},"content":"            setAdditionalVariables();","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"SeanRobertDH"},"content":"            Task task \u003d createTask();","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"SeanRobertDH"},"content":"            setOptionalTaskVariables(task);","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"SeanRobertDH"},"content":"            return task;","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (RequiredArgmentNotProvidedException ranpe) {","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"SeanRobertDH"},"content":"            throw new GetTaskFailedException(ranpe.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (InvalidPriorityException ipe) {","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"SeanRobertDH"},"content":"            throw new GetTaskFailedException(ipe.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (InvalidRecurrenceException ire) {","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"SeanRobertDH"},"content":"            throw new GetTaskFailedException(ire.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (GetTaskFailedException gtfe) {","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"SeanRobertDH"},"content":"            throw new GetTaskFailedException(gtfe.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"SeanRobertDH"},"content":"    private void setOptionalTaskVariables(Task task) {","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"SeanRobertDH"},"content":"        if (priorityEnum !\u003d null) {","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"SeanRobertDH"},"content":"            task.setPriority(priorityEnum);","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"SeanRobertDH"},"content":"        if (recurrenceEnum !\u003d null) {","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"SeanRobertDH"},"content":"            task.setRecurrence(recurrenceEnum);","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"SeanRobertDH"},"content":"     * Checks that all required flags are present in \u003ccode\u003eflags\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"SeanRobertDH"},"content":"    private void checkForRequiredArguments(Map\u003cString, String\u003e flags) throws RequiredArgmentNotProvidedException {","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"SeanRobertDH"},"content":"        for (String requiredArgument : requiredFlags) {","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"SeanRobertDH"},"content":"            String requiredFlag \u003d flags.get(requiredArgument);","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"SeanRobertDH"},"content":"            if (requiredFlag \u003d\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"SeanRobertDH"},"content":"                throw new RequiredArgmentNotProvidedException(requiredArgument, taskType.toString());","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"SeanRobertDH"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"SeanRobertDH"},"content":"     * Sets the respective variables in that Task and all unique Exceptions should be","lastModifiedDate":"2021-11-05"},{"lineNumber":106,"author":{"gitId":"SeanRobertDH"},"content":"     * caught with the message passed to {@link seedu.tp.exception.GetTaskFailedException}.","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"SeanRobertDH"},"content":"     * To be overwritten by subclasses.","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws GetTaskFailedException General Exception","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"SeanRobertDH"},"content":"     *     thrown when creating {@link seedu.tp.task.Task} fails.","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"SeanRobertDH"},"content":"    abstract void setAdditionalVariables() throws GetTaskFailedException;","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns the {@link seedu.tp.task.Task} created.","lastModifiedDate":"2021-11-07"},{"lineNumber":115,"author":{"gitId":"SeanRobertDH"},"content":"     * Function should be used to decide which constructor to use based on what optional","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"SeanRobertDH"},"content":"     * arguments are present.","lastModifiedDate":"2021-11-05"},{"lineNumber":117,"author":{"gitId":"SeanRobertDH"},"content":"     * @return created {@link seedu.tp.task.Task}.","lastModifiedDate":"2021-11-07"},{"lineNumber":118,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":119,"author":{"gitId":"SeanRobertDH"},"content":"    abstract Task createTask();","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":121,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":122,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns the {@link seedu.tp.task.PriorityEnum} based on \u003ccode\u003epriority\u003c/code\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":123,"author":{"gitId":"SeanRobertDH"},"content":"     * unless \u003ccode\u003epriority\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e then it returns \u003ccode\u003enull\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":124,"author":{"gitId":"SeanRobertDH"},"content":"     * @return {@link seedu.tp.task.PriorityEnum} based on \u003ccode\u003epriority\u003c/code\u003e.","lastModifiedDate":"2021-11-07"},{"lineNumber":125,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws seedu.tp.exception.InvalidPriorityException If \u003ccode\u003epriority\u003c/code\u003e is","lastModifiedDate":"2021-11-07"},{"lineNumber":126,"author":{"gitId":"SeanRobertDH"},"content":"     *     not \u003ccode\u003enull\u003c/code\u003e and it does not correspond to a valid {@link seedu.tp.task.PriorityEnum}.","lastModifiedDate":"2021-11-07"},{"lineNumber":127,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":128,"author":{"gitId":"SeanRobertDH"},"content":"    private PriorityEnum getPriorityEnum(String priority) throws InvalidPriorityException {","lastModifiedDate":"2021-11-05"},{"lineNumber":129,"author":{"gitId":"SeanRobertDH"},"content":"        if (priority \u003d\u003d null) {","lastModifiedDate":"2021-11-05"},{"lineNumber":130,"author":{"gitId":"SeanRobertDH"},"content":"            return null;","lastModifiedDate":"2021-11-05"},{"lineNumber":131,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":132,"author":{"gitId":"SeanRobertDH"},"content":"        if (Utility.isInteger(priority)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":133,"author":{"gitId":"SeanRobertDH"},"content":"            return PriorityEnum.getPriority(Integer.parseInt(priority));","lastModifiedDate":"2021-11-05"},{"lineNumber":134,"author":{"gitId":"SeanRobertDH"},"content":"        } else {","lastModifiedDate":"2021-11-05"},{"lineNumber":135,"author":{"gitId":"SeanRobertDH"},"content":"            return PriorityEnum.getPriority(priority);","lastModifiedDate":"2021-11-05"},{"lineNumber":136,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":137,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":138,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":139,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":140,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns the {@link seedu.tp.task.RecurrenceEnum} based on \u003ccode\u003erecurrence\u003c/code\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":141,"author":{"gitId":"SeanRobertDH"},"content":"     * unless \u003ccode\u003erecurrence\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e then it returns \u003ccode\u003enull\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":142,"author":{"gitId":"SeanRobertDH"},"content":"     * @return {@link seedu.tp.task.RecurrenceEnum} based on \u003ccode\u003erecurrence\u003c/code\u003e.","lastModifiedDate":"2021-11-07"},{"lineNumber":143,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws seedu.tp.exception.InvalidRecurrenceException If \u003ccode\u003erecurrence\u003c/code\u003e is","lastModifiedDate":"2021-11-07"},{"lineNumber":144,"author":{"gitId":"SeanRobertDH"},"content":"     *     not \u003ccode\u003enull\u003c/code\u003e and it does not correspond to a valid {@link seedu.tp.task.RecurrenceEnum}.","lastModifiedDate":"2021-11-07"},{"lineNumber":145,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":146,"author":{"gitId":"SeanRobertDH"},"content":"    private RecurrenceEnum getRecurrenceEnum(String recurrence) throws InvalidRecurrenceException {","lastModifiedDate":"2021-11-05"},{"lineNumber":147,"author":{"gitId":"SeanRobertDH"},"content":"        if (recurrence \u003d\u003d null) {","lastModifiedDate":"2021-11-05"},{"lineNumber":148,"author":{"gitId":"SeanRobertDH"},"content":"            return null;","lastModifiedDate":"2021-11-05"},{"lineNumber":149,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":150,"author":{"gitId":"SeanRobertDH"},"content":"        return RecurrenceEnum.getRecurrence(recurrence);","lastModifiedDate":"2021-11-05"},{"lineNumber":151,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":152,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":153,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":154,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns the {@link java.time.LocalDateTime} based on \u003ccode\u003edate\u003c/code\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":155,"author":{"gitId":"SeanRobertDH"},"content":"     * unless \u003ccode\u003edate\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e then it returns \u003ccode\u003enull\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":156,"author":{"gitId":"SeanRobertDH"},"content":"     * @return {@link java.time.LocalDateTime} based on \u003ccode\u003edate\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":157,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws seedu.tp.exception.ParseDateFailedException If \u003ccode\u003edate\u003c/code\u003e is","lastModifiedDate":"2021-11-07"},{"lineNumber":158,"author":{"gitId":"SeanRobertDH"},"content":"     *     not \u003ccode\u003enull\u003c/code\u003e and it is unable to be parsed.","lastModifiedDate":"2021-11-05"},{"lineNumber":159,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":160,"author":{"gitId":"SeanRobertDH"},"content":"    static LocalDateTime getDate(String date) throws ParseDateFailedException {","lastModifiedDate":"2021-11-05"},{"lineNumber":161,"author":{"gitId":"SeanRobertDH"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2021-11-05"},{"lineNumber":162,"author":{"gitId":"SeanRobertDH"},"content":"            return null;","lastModifiedDate":"2021-11-05"},{"lineNumber":163,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":164,"author":{"gitId":"SeanRobertDH"},"content":"        return DateParser.stringToDate(date);","lastModifiedDate":"2021-11-05"},{"lineNumber":165,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":166,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"SeanRobertDH":166}},{"path":"src/main/java/seedu/tp/task/factory/TodoFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.task.factory;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"SuibianP"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.GetTaskFailedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.ParseDateFailedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.flags.TodoFlag;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.Task;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.TypeEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.type.Todo;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"//@@author SeanRobertDH","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":" * Factory class used to create {@link seedu.tp.task.type.Todo}.","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"public class TodoFactory extends TaskFactory {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"    private static final TypeEnum TASK_TYPE \u003d TypeEnum.TODO;","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"    LocalDateTime doOnDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"     * Constructor for {@link seedu.tp.task.factory.TodoFactory}.","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"     * @param flags the \u003ccode\u003eMap\u0026lt;String, String\u0026gt;\u003c/code\u003e of flags to their values.","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"    public TodoFactory(Map\u003cString, String\u003e flags) {","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"        super(TASK_TYPE, TodoFlag.REQUIRED_FLAGS, flags);","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"    void setAdditionalVariables() throws GetTaskFailedException {","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"            String doOn \u003d flags.get(TodoFlag.DO_ON_DATE);","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"            doOnDate \u003d getDate(doOn);","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"        } catch (ParseDateFailedException pdfe) {","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"            throw new GetTaskFailedException(pdfe.getMessage());","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"SeanRobertDH"},"content":"    Task createTask() {","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"SeanRobertDH"},"content":"        if (doOnDate \u003d\u003d null) {","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"SeanRobertDH"},"content":"            return new Todo(description);","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"SeanRobertDH"},"content":"        } else {","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"SeanRobertDH"},"content":"            return new Todo(description, doOnDate);","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns the {@link seedu.tp.task.type.Todo} created.","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"SeanRobertDH"},"content":"     * @return created {@link seedu.tp.task.type.Todo}.","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws GetTaskFailedException General Exception","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"SeanRobertDH"},"content":"     *     thrown when creating {@link seedu.tp.task.Task} fails.","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"SeanRobertDH"},"content":"    public Todo getTask() throws GetTaskFailedException {","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"SeanRobertDH"},"content":"        return (Todo) super.getTask();","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"SuibianP":2,"SeanRobertDH":61}},{"path":"src/main/java/seedu/tp/task/reminder/Reminder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.task.reminder;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.RecurrenceEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Xuefei2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Xuefei2001"},"content":"public class Reminder {","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"Xuefei2001"},"content":"    private static final long BUFFER_SECOND \u003d 30;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Xuefei2001"},"content":"    private static final long RECURRENCE_INCREMENT \u003d 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Xuefei2001"},"content":"    private LocalDateTime taskTime;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"Xuefei2001"},"content":"    private LocalDateTime reminderTime;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"Xuefei2001"},"content":"    private boolean reminderDone;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"Xuefei2001"},"content":"    private long userTime \u003d 10;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Xuefei2001"},"content":"    private String message \u003d \"Reminder! 10 min before the following task:\";","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"Xuefei2001"},"content":"    private ReminderInformation information;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"Xuefei2001"},"content":"    public Reminder() {","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Xuefei2001"},"content":"        this.reminderDone \u003d false;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"    public Reminder(LocalDateTime time) {","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"        this.taskTime \u003d time;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"Xuefei2001"},"content":"        this.reminderTime \u003d taskTime.minusMinutes(userTime);","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Xuefei2001"},"content":"        setReminderDone();","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"Xuefei2001"},"content":"        setInformation();","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"Xuefei2001"},"content":"    public void setUserTime(long userTime) {","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"Xuefei2001"},"content":"        this.userTime \u003d userTime;","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"Xuefei2001"},"content":"        updateReminderTime();","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"Xuefei2001"},"content":"    public void updateReminderTime() {","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"Xuefei2001"},"content":"        this.reminderTime \u003d taskTime.minusMinutes(userTime);","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"Xuefei2001"},"content":"    public void setMessage(String message) {","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"Xuefei2001"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"Xuefei2001"},"content":"    public void setRecurReminderTime(LocalDateTime newReminderTime) {","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Xuefei2001"},"content":"        this.reminderTime \u003d newReminderTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Xuefei2001"},"content":"        this.reminderDone \u003d false;","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Xuefei2001"},"content":"    public void setReminderDone() {","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"Xuefei2001"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"Xuefei2001"},"content":"        if (now.isAfter(this.reminderTime.plusSeconds(BUFFER_SECOND))) {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Xuefei2001"},"content":"            this.reminderDone \u003d true;","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"Xuefei2001"},"content":"        } else {","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Xuefei2001"},"content":"            this.reminderDone \u003d false;","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"Xuefei2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Xuefei2001"},"content":"    public String getMessage(LocalDateTime now, String task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Xuefei2001"},"content":"        if (!reminderDone) {","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Xuefei2001"},"content":"            if (reminderTime.isAfter(now.minusSeconds(BUFFER_SECOND))","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Xuefei2001"},"content":"                    \u0026\u0026 reminderTime.isBefore(now.plusSeconds(BUFFER_SECOND))) {","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Xuefei2001"},"content":"                this.reminderDone \u003d true;","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"Xuefei2001"},"content":"                return (message + \"\\n\" + \"\\t\" + task + \"\\n\");","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"Xuefei2001"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Xuefei2001"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Xuefei2001"},"content":"        return \"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"Xuefei2001"},"content":"    public void setInformation() {","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"Xuefei2001"},"content":"        information \u003d new ReminderInformation(reminderDone, userTime, message);","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"Xuefei2001"},"content":"    public ReminderInformation getInformation() {","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"Xuefei2001"},"content":"        return information;","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"Xuefei2001"},"content":"    public String getRecurrenceMessage(LocalDateTime now, String task, RecurrenceEnum recurrence) {","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Xuefei2001"},"content":"        String reminderMessage \u003d \"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Xuefei2001"},"content":"        switch (recurrence) {","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Xuefei2001"},"content":"        case NONE:","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Xuefei2001"},"content":"            reminderMessage \u003d getMessage(now, task);","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"Xuefei2001"},"content":"            break;","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"Xuefei2001"},"content":"        case DAILY:","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"Xuefei2001"},"content":"            reminderMessage \u003d getMessage(now, task);","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"Xuefei2001"},"content":"            setRecurReminderTime(reminderTime.plusDays(RECURRENCE_INCREMENT));","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"Xuefei2001"},"content":"            break;","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"Xuefei2001"},"content":"        case WEEKLY:","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"Xuefei2001"},"content":"            reminderMessage \u003d getMessage(now, task);","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"Xuefei2001"},"content":"            setRecurReminderTime(reminderTime.plusWeeks(RECURRENCE_INCREMENT));","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"Xuefei2001"},"content":"            break;","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Xuefei2001"},"content":"        case MONTHLY:","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Xuefei2001"},"content":"            reminderMessage \u003d getMessage(now, task);","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"Xuefei2001"},"content":"            setRecurReminderTime(reminderTime.plusMonths(RECURRENCE_INCREMENT));","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Xuefei2001"},"content":"            break;","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Xuefei2001"},"content":"        case YEARLY:","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Xuefei2001"},"content":"            reminderMessage \u003d getMessage(now, task);","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"Xuefei2001"},"content":"            setRecurReminderTime(reminderTime.plusYears(RECURRENCE_INCREMENT));","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"Xuefei2001"},"content":"            break;","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"Xuefei2001"},"content":"        default:","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"Xuefei2001"},"content":"            break;","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"Xuefei2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"Xuefei2001"},"content":"        return reminderMessage;","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"Xuefei2001"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"SeanRobertDH":4,"Xuefei2001":97}},{"path":"src/main/java/seedu/tp/task/reminder/ReminderInformation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.task.reminder;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"Xuefei2001"},"content":"public class ReminderInformation {","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Xuefei2001"},"content":"    private boolean reminderDone;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Xuefei2001"},"content":"    private long userTime \u003d 10;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Xuefei2001"},"content":"    private String message \u003d \"Reminder! 10 min before the following task:\\n\";","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Xuefei2001"},"content":"    public ReminderInformation(boolean reminderDone, long userTime, String message) {","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"Xuefei2001"},"content":"        this.reminderDone \u003d reminderDone;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Xuefei2001"},"content":"        this.userTime \u003d userTime;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"Xuefei2001"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"Xuefei2001"},"content":"    public String getDone() {","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"Xuefei2001"},"content":"        if (reminderDone) {","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"Xuefei2001"},"content":"            return \"T\";","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"Xuefei2001"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"Xuefei2001"},"content":"            return \"F\";","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"Xuefei2001"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"Xuefei2001"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"Xuefei2001"},"content":"        return message;","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"Xuefei2001"},"content":"    public String getUserTime() {","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"Xuefei2001"},"content":"        return Long.toString(userTime);","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"Xuefei2001"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"SeanRobertDH":1,"Xuefei2001":28}},{"path":"src/main/java/seedu/tp/task/reminder/ReminderManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.task.reminder;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.Command;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.flags.ReminderFlag;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.InvalidTaskIndexException;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.ReminderNotRequiredException;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.MissingUserTimeException;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.MissingUserMessageException;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.MissingReminderFieldException;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.taskmanager.TaskManager;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"Xuefei2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"Xuefei2001"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"Xuefei2001"},"content":"public class ReminderManager {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"Xuefei2001"},"content":"    public ReminderManager() {","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"    public static String sendReminder(TaskManager taskManager) {","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"Xuefei2001"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Xuefei2001"},"content":"        String message \u003d \"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"        for (int i \u003d 0; i \u003c taskManager.getTaskListSize(); i++) {","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"            if (taskManager.getTask(i).needReminder()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"                message +\u003d (taskManager.getTask(i).getReminder(now));","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"Xuefei2001"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Xuefei2001"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Xuefei2001"},"content":"        return message;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Xuefei2001"},"content":"    public static void customizeReminderTime(long userTime, int index, TaskManager taskManager)","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"Xuefei2001"},"content":"            throws InvalidTaskIndexException, ReminderNotRequiredException {","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"Xuefei2001"},"content":"        if (index \u003c 0 || index \u003e taskManager.getTaskListSize() - 1) {","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"Xuefei2001"},"content":"            throw new InvalidTaskIndexException(++index);","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"Xuefei2001"},"content":"        } else if (taskManager.getTask(index).needReminder()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"            Reminder reminder \u003d taskManager.getTask(index).getReminder();","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"            reminder.setUserTime(userTime);","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"Xuefei2001"},"content":"        } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"Xuefei2001"},"content":"            throw new ReminderNotRequiredException();","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"Xuefei2001"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"Xuefei2001"},"content":"    public static void customizeReminderMessage(String message, int index, TaskManager taskManager)","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"Xuefei2001"},"content":"            throws InvalidTaskIndexException, ReminderNotRequiredException {","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"Xuefei2001"},"content":"        if (index \u003c 0 || index \u003e taskManager.getTaskListSize() - 1) {","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"Xuefei2001"},"content":"            throw new InvalidTaskIndexException(++index);","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"Xuefei2001"},"content":"        } else if (taskManager.getTask(index).needReminder()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"SeanRobertDH"},"content":"            Reminder reminder \u003d taskManager.getTask(index).getReminder();","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"SeanRobertDH"},"content":"            reminder.setMessage(message);","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"Xuefei2001"},"content":"        } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"Xuefei2001"},"content":"            throw new ReminderNotRequiredException();","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"Xuefei2001"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"Xuefei2001"},"content":"    public static String customizeReminder(TaskManager taskManager, Map\u003cString, String\u003e commandArguments)","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"Xuefei2001"},"content":"            throws NumberFormatException, MissingUserTimeException,","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"Xuefei2001"},"content":"            MissingUserMessageException, MissingReminderFieldException {","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"Xuefei2001"},"content":"        int index \u003d Integer.parseInt(commandArguments.get(Command.MAIN_ARGUMENT));","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"Xuefei2001"},"content":"        String outMessage \u003d \"\";","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"Xuefei2001"},"content":"        if (commandArguments.containsKey(ReminderFlag.TIME_AHEAD)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"Xuefei2001"},"content":"            if (commandArguments.get(ReminderFlag.TIME_AHEAD) !\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"Xuefei2001"},"content":"                long userTime \u003d Long.parseLong(commandArguments.get(ReminderFlag.TIME_AHEAD));","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"Xuefei2001"},"content":"                try {","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"Xuefei2001"},"content":"                    customizeReminderTime(userTime, index - 1, taskManager);","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"Xuefei2001"},"content":"                    outMessage +\u003d \"The time for reminding before task is updated to \" + userTime + \" minutes.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"Xuefei2001"},"content":"                } catch (InvalidTaskIndexException itie) {","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"Xuefei2001"},"content":"                    return itie.getMessage();","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"Xuefei2001"},"content":"                } catch (ReminderNotRequiredException rnre) {","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"Xuefei2001"},"content":"                    return rnre.toString();","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"Xuefei2001"},"content":"                }","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"Xuefei2001"},"content":"            } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"Xuefei2001"},"content":"                throw new MissingUserTimeException();","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"Xuefei2001"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"Xuefei2001"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"Xuefei2001"},"content":"        if (commandArguments.containsKey(ReminderFlag.REMINDER_MESSAGE)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"Xuefei2001"},"content":"            if (commandArguments.get(ReminderFlag.REMINDER_MESSAGE) !\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"Xuefei2001"},"content":"                String message \u003d commandArguments.get(ReminderFlag.REMINDER_MESSAGE);","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"Xuefei2001"},"content":"                try {","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"Xuefei2001"},"content":"                    customizeReminderMessage(message, index - 1, taskManager);","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"Xuefei2001"},"content":"                    outMessage +\u003d \"The reminder message is updated to \" + message;","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"Xuefei2001"},"content":"                } catch (InvalidTaskIndexException itie) {","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"Xuefei2001"},"content":"                    return itie.getMessage();","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"Xuefei2001"},"content":"                } catch (ReminderNotRequiredException rnre) {","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"Xuefei2001"},"content":"                    return rnre.toString();","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"Xuefei2001"},"content":"                }","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"Xuefei2001"},"content":"            } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"Xuefei2001"},"content":"                throw new MissingUserMessageException();","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"Xuefei2001"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"Xuefei2001"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"Xuefei2001"},"content":"        if (!commandArguments.containsKey(ReminderFlag.TIME_AHEAD)","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"Xuefei2001"},"content":"            \u0026\u0026 !commandArguments.containsKey(ReminderFlag.REMINDER_MESSAGE)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"Xuefei2001"},"content":"            throw new MissingReminderFieldException();","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"Xuefei2001"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"Xuefei2001"},"content":"        return outMessage;","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"Xuefei2001"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"SeanRobertDH":18,"Xuefei2001":81}},{"path":"src/main/java/seedu/tp/task/taskmanager/Observer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.task.taskmanager;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"//@@author SeanRobertDH","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":" * Observer interface used by {@link seedu.tp.storage.DataManager}","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":" * to observe {@link seedu.tp.task.taskmanager.TaskManager}.","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":" * Uses Observer design pattern.","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"public interface Observer {","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"    void update();","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"SeanRobertDH":11}},{"path":"src/main/java/seedu/tp/task/taskmanager/Subject.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.task.taskmanager;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"//@@author SeanRobertDH","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":" * Subject interface used by {@link seedu.tp.task.taskmanager.TaskManager}","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":" * to be observed by {@link seedu.tp.storage.DataManager}.","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":" * Uses Observer design pattern.","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"interface Subject {","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"    ArrayList\u003cObserver\u003e observers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"    default void addObserver(Observer observer) {","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"        observers.add(observer);","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"    default void updateObservers() {","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"        for (Observer observer : observers) {","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"            observer.update();","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"SeanRobertDH":23}},{"path":"src/main/java/seedu/tp/task/taskmanager/TaskManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.task.taskmanager;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"APZH"},"content":"import org.apache.commons.lang3.EnumUtils;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.Command;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.flags.ListFlag;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.flags.SortFlag;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.EmptyDescriptionException;","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.EmptySortCriteriaException;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.EmptyTasklistException;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.InvalidFlagsException;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.InvalidPriorityException;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.InvalidRecurrenceException;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.InvalidTaskIndexException;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.InvalidTaskTypeException;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.ListFormatException;","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.MissingFilterArgumentException;","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.ParseDateFailedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.SortFormatException;","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.StartDateAfterEndDateException;","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.TaskIsNonRecurringException;","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.storage.DataManager;","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.log.Log;","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"SuibianP"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"APZH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"SuibianP"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"APZH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"SuibianP"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"SuibianP"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"APZH"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"APZH"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.parser.DateParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.PriorityEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.RecurrenceEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.Task;","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.TypeEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.type.Deadline;","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.type.Event;","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.type.Todo;","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"APZH"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"APZH"},"content":" * Represents the {@code TaskManager} that manages the user\u0027s tasklist.","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"APZH"},"content":" * The {@code TaskManager} can add, delete to the user\u0027s tasklist in this class.","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"APZH"},"content":" * Other additional features includes displaying, filtering and sorting the user\u0027s tasklist.","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"APZH"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"SeanRobertDH"},"content":"public class TaskManager implements Subject {","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"SuibianP"},"content":"    public List\u003cTask\u003e getAllTasksView() {","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"SuibianP"},"content":"        return Collections.unmodifiableList(taskList);","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"SuibianP"},"content":"    private final List\u003cTask\u003e taskList;","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"APZH"},"content":"    private List\u003cTask\u003e latestFilteredList;","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"SeanRobertDH"},"content":"    static final int STARTING_SIZE \u003d 128;","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"APZH"},"content":"    private static final String LIST_HEADER \u003d \"-------------\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"APZH"},"content":"            + \" MY TASK LIST\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"APZH"},"content":"            + \"-------------\\n\";","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"APZH"},"content":"    private static final int numOfRecurredDates \u003d 4;","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"APZH"},"content":"    private static final String DIGIT_REGEX \u003d \"^[+-]?[0-9]*$\";","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"APZH"},"content":"    private static final String INVALID_SORT_ARGUMENT_MSG \u003d \"[!] The sort criteria entered is not valid\";","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"APZH"},"content":"    private static final String SORT_TASKLIST_COMPLETE_MSG \u003d \"[!] Task list has been sorted by: \";","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"SeanRobertDH"},"content":"    public TaskManager(DataManager dataManager) {","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"SeanRobertDH"},"content":"        taskList \u003d dataManager.loadTaskList(STARTING_SIZE);","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"SeanRobertDH"},"content":"        addObserver(dataManager);","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"SeanRobertDH"},"content":"        latestFilteredList \u003d new ArrayList\u003c\u003e(STARTING_SIZE);","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"SeanRobertDH"},"content":"    public TaskManager() {","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"SeanRobertDH"},"content":"        taskList \u003d new ArrayList\u003c\u003e(STARTING_SIZE);","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"SeanRobertDH"},"content":"        latestFilteredList \u003d new ArrayList\u003c\u003e(STARTING_SIZE);","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"APZH"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"APZH"},"content":"     * Returns a filtered tasklist as a {@code String}.","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"APZH"},"content":"     * If no filter is specified, returns the entire tasklist without any filter instead.","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"APZH"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"APZH"},"content":"     * @param filters Contains the filters to be applied to the tasklist.","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"APZH"},"content":"     * @return Filtered tasklist as a {@code String}.","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"APZH"},"content":"     * @throws EmptyTasklistException         If tasklist is empty.","lastModifiedDate":"2021-10-31"},{"lineNumber":89,"author":{"gitId":"APZH"},"content":"     * @throws ListFormatException            If the parameter \u0027filters\u0027 contains invalid filter flags.","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"APZH"},"content":"     * @throws MissingFilterArgumentException If filter flag does not contain any argument.","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"APZH"},"content":"     * @throws InvalidTaskTypeException       If task type filter argument is not valid.","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"APZH"},"content":"     * @throws InvalidPriorityException       If priority filter argument is not valid.","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"APZH"},"content":"     * @throws InvalidRecurrenceException     If recurrence filter argument is not valid.","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"APZH"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"APZH"},"content":"    public String listTasklistWithFilter(Map\u003cString, String\u003e filters) throws EmptyTasklistException,","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"APZH"},"content":"            ListFormatException, MissingFilterArgumentException, InvalidTaskTypeException,","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"APZH"},"content":"            InvalidPriorityException, InvalidRecurrenceException {","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"APZH"},"content":"        assert taskList.size() \u003e\u003d 0 : \"Tasklist cannot be negative\";","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"APZH"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"APZH"},"content":"            throw new EmptyTasklistException();","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"APZH"},"content":"        List\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e(taskList);","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"APZH"},"content":"        for (HashMap.Entry\u003cString, String\u003e entry : filters.entrySet()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"APZH"},"content":"            String filter \u003d entry.getKey();","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"APZH"},"content":"            String filterArgument \u003d entry.getValue();","lastModifiedDate":"2021-10-31"},{"lineNumber":106,"author":{"gitId":"APZH"},"content":"            if (filter.equals(Command.MAIN_ARGUMENT)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"APZH"},"content":"                continue;","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"APZH"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"APZH"},"content":"            switch (filter) {","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"APZH"},"content":"            case ListFlag.TASK_TYPE:","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"APZH"},"content":"                filteredTasks \u003d filterListByTaskType(filteredTasks, filterArgument);","lastModifiedDate":"2021-10-31"},{"lineNumber":112,"author":{"gitId":"APZH"},"content":"                break;","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"APZH"},"content":"            case ListFlag.PRIORITY:","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"APZH"},"content":"                filteredTasks \u003d filterListByPriority(filteredTasks, filterArgument);","lastModifiedDate":"2021-10-31"},{"lineNumber":115,"author":{"gitId":"APZH"},"content":"                break;","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"APZH"},"content":"            case ListFlag.RECURRENCE:","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"APZH"},"content":"                filteredTasks \u003d filterListByRecurrence(filteredTasks, filterArgument);","lastModifiedDate":"2021-10-31"},{"lineNumber":118,"author":{"gitId":"APZH"},"content":"                break;","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"APZH"},"content":"            default:","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"APZH"},"content":"                throw new ListFormatException();","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"APZH"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"APZH"},"content":"        updateFilteredTaskList(filteredTasks);","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"APZH"},"content":"        return getListTasklistWithFilterMessage(filteredTasks);","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-31"},{"lineNumber":128,"author":{"gitId":"APZH"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":129,"author":{"gitId":"APZH"},"content":"     * Returns a formatted message of the list of tasks as a {@code String}.","lastModifiedDate":"2021-11-01"},{"lineNumber":130,"author":{"gitId":"APZH"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":131,"author":{"gitId":"APZH"},"content":"    private String getListTasklistWithFilterMessage(List\u003cTask\u003e filteredTasks) {","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"APZH"},"content":"        String taskEntries \u003d \"\";","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"APZH"},"content":"        for (int i \u003d 0; i \u003c filteredTasks.size(); i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"APZH"},"content":"            taskEntries +\u003d i + 1 + \". \" + filteredTasks.get(i).getTaskEntryDescription() + \"\\n\";","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"APZH"},"content":"        return LIST_HEADER + taskEntries;","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"APZH"},"content":"    public void refreshListDates() {","lastModifiedDate":"2021-10-29"},{"lineNumber":140,"author":{"gitId":"APZH"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-10-29"},{"lineNumber":141,"author":{"gitId":"APZH"},"content":"            if (task.getRecurrence() !\u003d RecurrenceEnum.NONE \u0026\u0026 task.getListDate().isBefore(LocalDateTime.now())) {","lastModifiedDate":"2021-10-29"},{"lineNumber":142,"author":{"gitId":"APZH"},"content":"                task.refreshDate();","lastModifiedDate":"2021-10-29"},{"lineNumber":143,"author":{"gitId":"APZH"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"APZH"},"content":"        updateObservers();","lastModifiedDate":"2021-10-29"},{"lineNumber":146,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"APZH"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":150,"author":{"gitId":"APZH"},"content":"     * Returns a {@code List} of tasks that matches the {@code taskTypeFilter}.","lastModifiedDate":"2021-10-31"},{"lineNumber":151,"author":{"gitId":"APZH"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":152,"author":{"gitId":"APZH"},"content":"     * @param taskList       Contains the tasklist to apply the {@code taskTypeFilter}.","lastModifiedDate":"2021-10-31"},{"lineNumber":153,"author":{"gitId":"APZH"},"content":"     * @param taskTypeFilter Contains the task type to be filtered for.","lastModifiedDate":"2021-10-31"},{"lineNumber":154,"author":{"gitId":"APZH"},"content":"     * @return Filtered {@code List} of tasks based on task type.","lastModifiedDate":"2021-10-31"},{"lineNumber":155,"author":{"gitId":"APZH"},"content":"     * @throws MissingFilterArgumentException If {@code taskTypeFilter} is empty.","lastModifiedDate":"2021-10-31"},{"lineNumber":156,"author":{"gitId":"APZH"},"content":"     * @throws InvalidTaskTypeException       If {@code taskTypeFilter} is not valid.","lastModifiedDate":"2021-10-31"},{"lineNumber":157,"author":{"gitId":"APZH"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":158,"author":{"gitId":"APZH"},"content":"    private List\u003cTask\u003e filterListByTaskType(List\u003cTask\u003e taskList, String taskTypeFilter)","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"APZH"},"content":"            throws MissingFilterArgumentException, InvalidTaskTypeException {","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"APZH"},"content":"        if (taskTypeFilter.isEmpty()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"APZH"},"content":"            throw new MissingFilterArgumentException();","lastModifiedDate":"2021-10-20"},{"lineNumber":162,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":163,"author":{"gitId":"APZH"},"content":"        if (!EnumUtils.isValidEnum(TypeEnum.class, taskTypeFilter.toUpperCase())) {","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"APZH"},"content":"            throw new InvalidTaskTypeException(taskTypeFilter);","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"APZH"},"content":"        List\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"APZH"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"APZH"},"content":"            String currentTaskType \u003d taskList.get(i).getTaskType().name();","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"APZH"},"content":"            if (currentTaskType.equalsIgnoreCase(taskTypeFilter)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"APZH"},"content":"                filteredTasks.add(taskList.get(i));","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"APZH"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"APZH"},"content":"        return filteredTasks;","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":176,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"APZH"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":178,"author":{"gitId":"APZH"},"content":"     * Returns a {@code List} of tasks that matches the {@code priorityFilter}.","lastModifiedDate":"2021-10-31"},{"lineNumber":179,"author":{"gitId":"APZH"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":180,"author":{"gitId":"APZH"},"content":"     * @param taskList       Contains the tasklist to apply the {@code priorityFilter}.","lastModifiedDate":"2021-10-31"},{"lineNumber":181,"author":{"gitId":"APZH"},"content":"     * @param priorityFilter Contains the priority to be filtered for.","lastModifiedDate":"2021-10-31"},{"lineNumber":182,"author":{"gitId":"APZH"},"content":"     * @return Filtered {@code List} of tasks based on priority.","lastModifiedDate":"2021-10-31"},{"lineNumber":183,"author":{"gitId":"APZH"},"content":"     * @throws MissingFilterArgumentException If {@code priorityFilter} is empty.","lastModifiedDate":"2021-10-31"},{"lineNumber":184,"author":{"gitId":"APZH"},"content":"     * @throws InvalidPriorityException       If {@code priorityFilter} is not valid.","lastModifiedDate":"2021-10-31"},{"lineNumber":185,"author":{"gitId":"APZH"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":186,"author":{"gitId":"APZH"},"content":"    private List\u003cTask\u003e filterListByPriority(List\u003cTask\u003e taskList, String priorityFilter)","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"APZH"},"content":"            throws MissingFilterArgumentException, InvalidPriorityException {","lastModifiedDate":"2021-10-27"},{"lineNumber":188,"author":{"gitId":"APZH"},"content":"        if (priorityFilter.isEmpty()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"APZH"},"content":"            throw new MissingFilterArgumentException();","lastModifiedDate":"2021-10-20"},{"lineNumber":190,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":191,"author":{"gitId":"APZH"},"content":"        if (!EnumUtils.isValidEnum(PriorityEnum.class, priorityFilter.toUpperCase())) {","lastModifiedDate":"2021-10-27"},{"lineNumber":192,"author":{"gitId":"APZH"},"content":"            throw new InvalidPriorityException(priorityFilter);","lastModifiedDate":"2021-10-27"},{"lineNumber":193,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"APZH"},"content":"        List\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":195,"author":{"gitId":"APZH"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-10-14"},{"lineNumber":196,"author":{"gitId":"APZH"},"content":"            String currentPriority \u003d taskList.get(i).getPriority().name();","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"APZH"},"content":"            if (currentPriority.equalsIgnoreCase(priorityFilter)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"APZH"},"content":"                filteredTasks.add(taskList.get(i));","lastModifiedDate":"2021-10-20"},{"lineNumber":199,"author":{"gitId":"APZH"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":200,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":201,"author":{"gitId":"APZH"},"content":"        return filteredTasks;","lastModifiedDate":"2021-10-20"},{"lineNumber":202,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"APZH"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":206,"author":{"gitId":"APZH"},"content":"     * Returns a {@code List} of tasks that matches the {@code recurrenceFilter}.","lastModifiedDate":"2021-10-31"},{"lineNumber":207,"author":{"gitId":"APZH"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":208,"author":{"gitId":"APZH"},"content":"     * @param taskList         Contains the tasklist to apply the {@code recurrenceFilter}.","lastModifiedDate":"2021-10-31"},{"lineNumber":209,"author":{"gitId":"APZH"},"content":"     * @param recurrenceFilter Contains the type of recurrence to be filtered for.","lastModifiedDate":"2021-10-31"},{"lineNumber":210,"author":{"gitId":"APZH"},"content":"     * @return Filtered {@code List} of tasks based on recurrence.","lastModifiedDate":"2021-10-31"},{"lineNumber":211,"author":{"gitId":"APZH"},"content":"     * @throws MissingFilterArgumentException If {@code recurrenceFilter} is empty.","lastModifiedDate":"2021-10-31"},{"lineNumber":212,"author":{"gitId":"APZH"},"content":"     * @throws InvalidRecurrenceException     If {@code recurrenceFilter} is not valid.","lastModifiedDate":"2021-10-31"},{"lineNumber":213,"author":{"gitId":"APZH"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":214,"author":{"gitId":"APZH"},"content":"    private List\u003cTask\u003e filterListByRecurrence(List\u003cTask\u003e taskList, String recurrenceFilter)","lastModifiedDate":"2021-10-27"},{"lineNumber":215,"author":{"gitId":"APZH"},"content":"            throws MissingFilterArgumentException, InvalidRecurrenceException {","lastModifiedDate":"2021-10-27"},{"lineNumber":216,"author":{"gitId":"APZH"},"content":"        if (recurrenceFilter.isEmpty()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":217,"author":{"gitId":"APZH"},"content":"            throw new MissingFilterArgumentException();","lastModifiedDate":"2021-10-20"},{"lineNumber":218,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":219,"author":{"gitId":"APZH"},"content":"        if (!EnumUtils.isValidEnum(RecurrenceEnum.class, recurrenceFilter.toUpperCase())) {","lastModifiedDate":"2021-10-27"},{"lineNumber":220,"author":{"gitId":"APZH"},"content":"            throw new InvalidRecurrenceException(recurrenceFilter);","lastModifiedDate":"2021-10-27"},{"lineNumber":221,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":222,"author":{"gitId":"APZH"},"content":"        List\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"APZH"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":224,"author":{"gitId":"APZH"},"content":"            String currentRecurrence \u003d taskList.get(i).getRecurrence().name();","lastModifiedDate":"2021-10-20"},{"lineNumber":225,"author":{"gitId":"APZH"},"content":"            if (currentRecurrence.equalsIgnoreCase(recurrenceFilter)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":226,"author":{"gitId":"APZH"},"content":"                filteredTasks.add(taskList.get(i));","lastModifiedDate":"2021-10-20"},{"lineNumber":227,"author":{"gitId":"APZH"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":228,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":229,"author":{"gitId":"APZH"},"content":"        return filteredTasks;","lastModifiedDate":"2021-10-20"},{"lineNumber":230,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":231,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":232,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-19"},{"lineNumber":233,"author":{"gitId":"APZH"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":234,"author":{"gitId":"APZH"},"content":"     * Returns the next 4 recurrence of a task as a formatted {@code String}.","lastModifiedDate":"2021-11-01"},{"lineNumber":235,"author":{"gitId":"APZH"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":236,"author":{"gitId":"APZH"},"content":"     * @param parameters Contains the task ID of the task to list the recurrence.","lastModifiedDate":"2021-11-01"},{"lineNumber":237,"author":{"gitId":"APZH"},"content":"     * @return Returns {@code String} containing next 4 recurrences of a task.","lastModifiedDate":"2021-11-01"},{"lineNumber":238,"author":{"gitId":"APZH"},"content":"     * @throws EmptyTasklistException      If tasklist is empty.","lastModifiedDate":"2021-11-01"},{"lineNumber":239,"author":{"gitId":"APZH"},"content":"     * @throws InvalidTaskIndexException   If task ID is lesser than 0 or greater than the tasklist size.","lastModifiedDate":"2021-11-01"},{"lineNumber":240,"author":{"gitId":"APZH"},"content":"     * @throws ListFormatException         If the parameter \u0027filters\u0027 contains invalid filter flags.","lastModifiedDate":"2021-11-01"},{"lineNumber":241,"author":{"gitId":"APZH"},"content":"     * @throws TaskIsNonRecurringException If the task is a non-recurring task.","lastModifiedDate":"2021-11-01"},{"lineNumber":242,"author":{"gitId":"APZH"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":243,"author":{"gitId":"APZH"},"content":"    public String listTaskRecurrence(Map\u003cString, String\u003e parameters) throws EmptyTasklistException,","lastModifiedDate":"2021-10-31"},{"lineNumber":244,"author":{"gitId":"APZH"},"content":"            InvalidTaskIndexException, ListFormatException, TaskIsNonRecurringException {","lastModifiedDate":"2021-10-31"},{"lineNumber":245,"author":{"gitId":"APZH"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-31"},{"lineNumber":246,"author":{"gitId":"APZH"},"content":"            throw new EmptyTasklistException();","lastModifiedDate":"2021-10-31"},{"lineNumber":247,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":248,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":249,"author":{"gitId":"APZH"},"content":"        String taskIdAsString \u003d parameters.get(Command.MAIN_ARGUMENT);","lastModifiedDate":"2021-10-31"},{"lineNumber":250,"author":{"gitId":"APZH"},"content":"        if (!taskIdAsString.matches(DIGIT_REGEX)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":251,"author":{"gitId":"APZH"},"content":"            throw new ListFormatException();","lastModifiedDate":"2021-10-31"},{"lineNumber":252,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":253,"author":{"gitId":"APZH"},"content":"        int taskId \u003d Integer.parseInt(taskIdAsString);","lastModifiedDate":"2021-11-01"},{"lineNumber":254,"author":{"gitId":"APZH"},"content":"        int taskIndex \u003d taskId - 1;","lastModifiedDate":"2021-11-01"},{"lineNumber":255,"author":{"gitId":"APZH"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e taskList.size() - 1) {","lastModifiedDate":"2021-10-31"},{"lineNumber":256,"author":{"gitId":"APZH"},"content":"            throw new InvalidTaskIndexException(taskId);","lastModifiedDate":"2021-10-31"},{"lineNumber":257,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":258,"author":{"gitId":"APZH"},"content":"        RecurrenceEnum recurValue \u003d taskList.get(taskIndex).getRecurrence();","lastModifiedDate":"2021-10-31"},{"lineNumber":259,"author":{"gitId":"APZH"},"content":"        if (recurValue.equals(RecurrenceEnum.NONE)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":260,"author":{"gitId":"APZH"},"content":"            throw new TaskIsNonRecurringException();","lastModifiedDate":"2021-10-31"},{"lineNumber":261,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":262,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":263,"author":{"gitId":"APZH"},"content":"        List\u003cLocalDateTime\u003e recurredDatesList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-01"},{"lineNumber":264,"author":{"gitId":"APZH"},"content":"        if (taskList.get(taskIndex) instanceof Todo) {","lastModifiedDate":"2021-10-31"},{"lineNumber":265,"author":{"gitId":"APZH"},"content":"            recurredDatesList \u003d getToDoListOfRecurrence((Todo) taskList.get(taskIndex));","lastModifiedDate":"2021-11-01"},{"lineNumber":266,"author":{"gitId":"APZH"},"content":"        } else if (taskList.get(taskIndex) instanceof Deadline) {","lastModifiedDate":"2021-10-31"},{"lineNumber":267,"author":{"gitId":"APZH"},"content":"            recurredDatesList \u003d getDeadlineListOfRecurrence((Deadline) taskList.get(taskIndex));","lastModifiedDate":"2021-11-01"},{"lineNumber":268,"author":{"gitId":"APZH"},"content":"        } else if (taskList.get(taskIndex) instanceof Event) {","lastModifiedDate":"2021-10-31"},{"lineNumber":269,"author":{"gitId":"APZH"},"content":"            recurredDatesList \u003d getEventListOfRecurrence((Event) taskList.get(taskIndex));","lastModifiedDate":"2021-11-01"},{"lineNumber":270,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":271,"author":{"gitId":"APZH"},"content":"        return getListTaskRecurrenceMessage(taskList.get(taskIndex).getTaskEntryDescription(), recurredDatesList,","lastModifiedDate":"2021-10-31"},{"lineNumber":272,"author":{"gitId":"APZH"},"content":"                numOfRecurredDates);","lastModifiedDate":"2021-10-31"},{"lineNumber":273,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":274,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":275,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-31"},{"lineNumber":276,"author":{"gitId":"APZH"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":277,"author":{"gitId":"APZH"},"content":"     * Returns a formatted message of the next 4 recurrences of a task as a {@code String}.","lastModifiedDate":"2021-11-01"},{"lineNumber":278,"author":{"gitId":"APZH"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":279,"author":{"gitId":"APZH"},"content":"    private String getListTaskRecurrenceMessage(String task, List\u003cLocalDateTime\u003e recurredDatesList, int numRecurrence) {","lastModifiedDate":"2021-10-31"},{"lineNumber":280,"author":{"gitId":"APZH"},"content":"        String dates \u003d \"Listing next \" + numRecurrence + \" recurrences for:\\n\" + task + \"\\n\";","lastModifiedDate":"2021-10-31"},{"lineNumber":281,"author":{"gitId":"APZH"},"content":"        for (int i \u003d 0; i \u003c numRecurrence; i++) {","lastModifiedDate":"2021-10-31"},{"lineNumber":282,"author":{"gitId":"APZH"},"content":"            dates +\u003d \"-\u003e \" + DateParser.dateToString(recurredDatesList.get(i)) + \"\\n\";","lastModifiedDate":"2021-10-31"},{"lineNumber":283,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":284,"author":{"gitId":"APZH"},"content":"        return LIST_HEADER + dates;","lastModifiedDate":"2021-10-31"},{"lineNumber":285,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":286,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":287,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-11-01"},{"lineNumber":288,"author":{"gitId":"APZH"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":289,"author":{"gitId":"APZH"},"content":"     * Returns a {@code List} of the next 4 recurrences of a to-do task.","lastModifiedDate":"2021-11-01"},{"lineNumber":290,"author":{"gitId":"APZH"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":291,"author":{"gitId":"APZH"},"content":"     * @param task To-do task to get the recurrences for.","lastModifiedDate":"2021-11-01"},{"lineNumber":292,"author":{"gitId":"APZH"},"content":"     * @return Next 4 recurrences of the to-do task as a {@code List}.","lastModifiedDate":"2021-11-01"},{"lineNumber":293,"author":{"gitId":"APZH"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":294,"author":{"gitId":"APZH"},"content":"    private List\u003cLocalDateTime\u003e getToDoListOfRecurrence(Todo task) {","lastModifiedDate":"2021-11-01"},{"lineNumber":295,"author":{"gitId":"APZH"},"content":"        LocalDateTime initialDate \u003d task.getDoOnDate();","lastModifiedDate":"2021-11-01"},{"lineNumber":296,"author":{"gitId":"APZH"},"content":"        return task.getRecurrence().getNextNRecurredDates(initialDate, numOfRecurredDates);","lastModifiedDate":"2021-11-01"},{"lineNumber":297,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":298,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":299,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-11-01"},{"lineNumber":300,"author":{"gitId":"APZH"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":301,"author":{"gitId":"APZH"},"content":"     * Returns a {@code List} of the next 4 recurrences of a deadline task.","lastModifiedDate":"2021-11-01"},{"lineNumber":302,"author":{"gitId":"APZH"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":303,"author":{"gitId":"APZH"},"content":"     * @param task Deadline task to get the recurrences for.","lastModifiedDate":"2021-11-01"},{"lineNumber":304,"author":{"gitId":"APZH"},"content":"     * @return Next 4 recurrences of the deadline task as a {@code List}.","lastModifiedDate":"2021-11-01"},{"lineNumber":305,"author":{"gitId":"APZH"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":306,"author":{"gitId":"APZH"},"content":"    private List\u003cLocalDateTime\u003e getDeadlineListOfRecurrence(Deadline task) {","lastModifiedDate":"2021-11-01"},{"lineNumber":307,"author":{"gitId":"APZH"},"content":"        LocalDateTime initialDate \u003d task.getDueDate();","lastModifiedDate":"2021-11-01"},{"lineNumber":308,"author":{"gitId":"APZH"},"content":"        return task.getRecurrence().getNextNRecurredDates(initialDate, numOfRecurredDates);","lastModifiedDate":"2021-11-01"},{"lineNumber":309,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":310,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":311,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-11-01"},{"lineNumber":312,"author":{"gitId":"APZH"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":313,"author":{"gitId":"APZH"},"content":"     * Returns a {@code List} of the next 4 recurrences of an event task.","lastModifiedDate":"2021-11-01"},{"lineNumber":314,"author":{"gitId":"APZH"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":315,"author":{"gitId":"APZH"},"content":"     * @param task Event task to get the recurrences for.","lastModifiedDate":"2021-11-01"},{"lineNumber":316,"author":{"gitId":"APZH"},"content":"     * @return Next 4 recurrences of the event task as a {@code List}.","lastModifiedDate":"2021-11-01"},{"lineNumber":317,"author":{"gitId":"APZH"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":318,"author":{"gitId":"APZH"},"content":"    private List\u003cLocalDateTime\u003e getEventListOfRecurrence(Event task) {","lastModifiedDate":"2021-11-01"},{"lineNumber":319,"author":{"gitId":"APZH"},"content":"        LocalDateTime initialDate \u003d task.getStartDate();","lastModifiedDate":"2021-11-01"},{"lineNumber":320,"author":{"gitId":"APZH"},"content":"        return task.getRecurrence().getNextNRecurredDates(initialDate, numOfRecurredDates);","lastModifiedDate":"2021-11-01"},{"lineNumber":321,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":322,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":323,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-19"},{"lineNumber":324,"author":{"gitId":"APZH"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":325,"author":{"gitId":"APZH"},"content":"     * Returns a sorted tasklist as a formatted {@code String}.","lastModifiedDate":"2021-11-01"},{"lineNumber":326,"author":{"gitId":"APZH"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":327,"author":{"gitId":"APZH"},"content":"     * @param criteria Contains the sort criteria to sort the tasklist by.","lastModifiedDate":"2021-11-01"},{"lineNumber":328,"author":{"gitId":"APZH"},"content":"     * @return Sorted tasklist as a {@code String}.","lastModifiedDate":"2021-11-01"},{"lineNumber":329,"author":{"gitId":"APZH"},"content":"     * @throws EmptyTasklistException     If tasklist is empty.","lastModifiedDate":"2021-11-01"},{"lineNumber":330,"author":{"gitId":"APZH"},"content":"     * @throws SortFormatException        If the sort command syntax is incorrect.","lastModifiedDate":"2021-11-01"},{"lineNumber":331,"author":{"gitId":"APZH"},"content":"     * @throws EmptySortCriteriaException If the sort criteria specified is empty.","lastModifiedDate":"2021-11-01"},{"lineNumber":332,"author":{"gitId":"APZH"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":333,"author":{"gitId":"APZH"},"content":"    public String sortTasklist(Map\u003cString, String\u003e criteria) throws EmptyTasklistException,","lastModifiedDate":"2021-10-27"},{"lineNumber":334,"author":{"gitId":"APZH"},"content":"            SortFormatException, EmptySortCriteriaException {","lastModifiedDate":"2021-10-19"},{"lineNumber":335,"author":{"gitId":"APZH"},"content":"        if (getTaskListSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-27"},{"lineNumber":336,"author":{"gitId":"APZH"},"content":"            Log.warning(\"tasklist is empty, throwing EmptyTasklistException\");","lastModifiedDate":"2021-10-19"},{"lineNumber":337,"author":{"gitId":"APZH"},"content":"            throw new EmptyTasklistException();","lastModifiedDate":"2021-10-19"},{"lineNumber":338,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":339,"author":{"gitId":"APZH"},"content":"        if (!criteria.containsKey(SortFlag.SORT_BY) || !criteria.get(Command.MAIN_ARGUMENT).isEmpty()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":340,"author":{"gitId":"APZH"},"content":"            Log.warning(\"user did not indicate \u0027by\u0027 flag, throwing SortFormatException\");","lastModifiedDate":"2021-10-20"},{"lineNumber":341,"author":{"gitId":"APZH"},"content":"            throw new SortFormatException();","lastModifiedDate":"2021-10-19"},{"lineNumber":342,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":343,"author":{"gitId":"APZH"},"content":"        String sortCriteria \u003d criteria.get(SortFlag.SORT_BY);","lastModifiedDate":"2021-11-01"},{"lineNumber":344,"author":{"gitId":"APZH"},"content":"        if (sortCriteria.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":345,"author":{"gitId":"APZH"},"content":"            Log.warning(\"user did not indicate any sort criteria, throwing EmptySortCriteriaException\");","lastModifiedDate":"2021-10-19"},{"lineNumber":346,"author":{"gitId":"APZH"},"content":"            throw new EmptySortCriteriaException();","lastModifiedDate":"2021-10-19"},{"lineNumber":347,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":348,"author":{"gitId":"APZH"},"content":"        switch (sortCriteria) {","lastModifiedDate":"2021-10-19"},{"lineNumber":349,"author":{"gitId":"APZH"},"content":"        case SortFlag.SORT_BY_TYPE_ARGUMENT:","lastModifiedDate":"2021-11-01"},{"lineNumber":350,"author":{"gitId":"APZH"},"content":"            Collections.sort(taskList, new SortByTaskType());","lastModifiedDate":"2021-11-01"},{"lineNumber":351,"author":{"gitId":"APZH"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":352,"author":{"gitId":"APZH"},"content":"        case SortFlag.SORT_BY_DESCRIPTION_ARGUMENT:","lastModifiedDate":"2021-11-01"},{"lineNumber":353,"author":{"gitId":"APZH"},"content":"            Collections.sort(taskList, new SortByDescription());","lastModifiedDate":"2021-11-01"},{"lineNumber":354,"author":{"gitId":"APZH"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":355,"author":{"gitId":"APZH"},"content":"        case SortFlag.SORT_BY_PRIORITY_ARGUMENT:","lastModifiedDate":"2021-11-01"},{"lineNumber":356,"author":{"gitId":"APZH"},"content":"            Collections.sort(taskList, new SortByPriority());","lastModifiedDate":"2021-11-01"},{"lineNumber":357,"author":{"gitId":"APZH"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":358,"author":{"gitId":"APZH"},"content":"        default:","lastModifiedDate":"2021-10-19"},{"lineNumber":359,"author":{"gitId":"APZH"},"content":"            return INVALID_SORT_ARGUMENT_MSG;","lastModifiedDate":"2021-11-01"},{"lineNumber":360,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":361,"author":{"gitId":"APZH"},"content":"        updateObservers();","lastModifiedDate":"2021-10-29"},{"lineNumber":362,"author":{"gitId":"APZH"},"content":"        return SORT_TASKLIST_COMPLETE_MSG + sortCriteria;","lastModifiedDate":"2021-11-01"},{"lineNumber":363,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":364,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":365,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-19"},{"lineNumber":366,"author":{"gitId":"APZH"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":367,"author":{"gitId":"APZH"},"content":"     * Custom comparator used by sortTasklist() to sort the tasklist by task type.","lastModifiedDate":"2021-11-01"},{"lineNumber":368,"author":{"gitId":"APZH"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":369,"author":{"gitId":"APZH"},"content":"    private class SortByTaskType implements Comparator\u003cTask\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":370,"author":{"gitId":"APZH"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":371,"author":{"gitId":"APZH"},"content":"        public int compare(Task o1, Task o2) {","lastModifiedDate":"2021-10-19"},{"lineNumber":372,"author":{"gitId":"APZH"},"content":"            return o1.getTaskType().name().compareTo(o2.getTaskType().name());","lastModifiedDate":"2021-10-19"},{"lineNumber":373,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":374,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":375,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":376,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-19"},{"lineNumber":377,"author":{"gitId":"APZH"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":378,"author":{"gitId":"APZH"},"content":"     * Custom comparator used by sortTasklist() to sort the tasklist lexicographically.","lastModifiedDate":"2021-11-01"},{"lineNumber":379,"author":{"gitId":"APZH"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":380,"author":{"gitId":"APZH"},"content":"    private class SortByDescription implements Comparator\u003cTask\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":381,"author":{"gitId":"APZH"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":382,"author":{"gitId":"APZH"},"content":"        public int compare(Task o1, Task o2) {","lastModifiedDate":"2021-10-19"},{"lineNumber":383,"author":{"gitId":"APZH"},"content":"            return o1.getDescription().compareTo(o2.getDescription());","lastModifiedDate":"2021-10-19"},{"lineNumber":384,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":385,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":386,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":387,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-19"},{"lineNumber":388,"author":{"gitId":"APZH"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":389,"author":{"gitId":"APZH"},"content":"     * Custom comparator used by sortTasklist() to sort the tasklist by task priority.","lastModifiedDate":"2021-11-01"},{"lineNumber":390,"author":{"gitId":"APZH"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":391,"author":{"gitId":"APZH"},"content":"    private class SortByPriority implements Comparator\u003cTask\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":392,"author":{"gitId":"APZH"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":393,"author":{"gitId":"APZH"},"content":"        public int compare(Task o1, Task o2) {","lastModifiedDate":"2021-10-19"},{"lineNumber":394,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":395,"author":{"gitId":"APZH"},"content":"            if (o1.getPriority().equals(PriorityEnum.LOW) \u0026\u0026 (o2.getPriority().equals(PriorityEnum.MEDIUM)","lastModifiedDate":"2021-10-19"},{"lineNumber":396,"author":{"gitId":"APZH"},"content":"                    || o2.getPriority().equals(PriorityEnum.HIGH))) {","lastModifiedDate":"2021-10-19"},{"lineNumber":397,"author":{"gitId":"APZH"},"content":"                return 1;","lastModifiedDate":"2021-11-02"},{"lineNumber":398,"author":{"gitId":"APZH"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":399,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":400,"author":{"gitId":"APZH"},"content":"            if (o1.getPriority().equals(PriorityEnum.MEDIUM) \u0026\u0026 o2.getPriority().equals(PriorityEnum.HIGH)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":401,"author":{"gitId":"APZH"},"content":"                return 1;","lastModifiedDate":"2021-11-02"},{"lineNumber":402,"author":{"gitId":"APZH"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":403,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":404,"author":{"gitId":"APZH"},"content":"            if (o1.getPriority().equals(PriorityEnum.HIGH) \u0026\u0026 (o2.getPriority().equals(PriorityEnum.MEDIUM)","lastModifiedDate":"2021-10-19"},{"lineNumber":405,"author":{"gitId":"APZH"},"content":"                    || o2.getPriority().equals(PriorityEnum.LOW))) {","lastModifiedDate":"2021-10-19"},{"lineNumber":406,"author":{"gitId":"APZH"},"content":"                return -1;","lastModifiedDate":"2021-11-02"},{"lineNumber":407,"author":{"gitId":"APZH"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":408,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":409,"author":{"gitId":"APZH"},"content":"            if (o1.getPriority().equals(PriorityEnum.MEDIUM) \u0026\u0026 o2.getPriority().equals(PriorityEnum.LOW)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":410,"author":{"gitId":"APZH"},"content":"                return -1;","lastModifiedDate":"2021-11-02"},{"lineNumber":411,"author":{"gitId":"APZH"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":412,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":413,"author":{"gitId":"APZH"},"content":"            // Returns 0 if both priority are the same","lastModifiedDate":"2021-11-02"},{"lineNumber":414,"author":{"gitId":"APZH"},"content":"            return 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":415,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":416,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":417,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":418,"author":{"gitId":"APZH"},"content":"    private void updateFilteredTaskList(List\u003cTask\u003e replacementTaskList) {","lastModifiedDate":"2021-11-05"},{"lineNumber":419,"author":{"gitId":"APZH"},"content":"        latestFilteredList \u003d replacementTaskList;","lastModifiedDate":"2021-11-05"},{"lineNumber":420,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":421,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":422,"author":{"gitId":"APZH"},"content":"    public Task getFilteredTask(int index) throws InvalidTaskIndexException {","lastModifiedDate":"2021-11-05"},{"lineNumber":423,"author":{"gitId":"APZH"},"content":"        checkFilteredListIndexValid(index);","lastModifiedDate":"2021-11-05"},{"lineNumber":424,"author":{"gitId":"APZH"},"content":"        return latestFilteredList.get(index);","lastModifiedDate":"2021-11-05"},{"lineNumber":425,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":426,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":427,"author":{"gitId":"APZH"},"content":"    public void addTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-11-05"},{"lineNumber":428,"author":{"gitId":"APZH"},"content":"        taskList.addAll(tasks);","lastModifiedDate":"2021-11-05"},{"lineNumber":429,"author":{"gitId":"APZH"},"content":"        updateObservers();","lastModifiedDate":"2021-11-05"},{"lineNumber":430,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":431,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":432,"author":{"gitId":"SeanRobertDH"},"content":"    //@@author SeanRobertDH","lastModifiedDate":"2021-10-27"},{"lineNumber":433,"author":{"gitId":"SeanRobertDH"},"content":"    public int getTaskListSize() {","lastModifiedDate":"2021-10-27"},{"lineNumber":434,"author":{"gitId":"SeanRobertDH"},"content":"        return taskList.size();","lastModifiedDate":"2021-10-14"},{"lineNumber":435,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":436,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":437,"author":{"gitId":"SeanRobertDH"},"content":"    //@@author SeanRobertDH","lastModifiedDate":"2021-10-27"},{"lineNumber":438,"author":{"gitId":"SeanRobertDH"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-27"},{"lineNumber":439,"author":{"gitId":"SeanRobertDH"},"content":"        return getTaskListSize() \u003d\u003d 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":440,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":441,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":442,"author":{"gitId":"SeanRobertDH"},"content":"    //@@author SeanRobertDH","lastModifiedDate":"2021-10-27"},{"lineNumber":443,"author":{"gitId":"SeanRobertDH"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-10-27"},{"lineNumber":444,"author":{"gitId":"SeanRobertDH"},"content":"        return taskList.get(index);","lastModifiedDate":"2021-10-14"},{"lineNumber":445,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":446,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":447,"author":{"gitId":"SeanRobertDH"},"content":"    //@@author SeanRobertDH","lastModifiedDate":"2021-10-27"},{"lineNumber":448,"author":{"gitId":"SeanRobertDH"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-10-27"},{"lineNumber":449,"author":{"gitId":"SeanRobertDH"},"content":"        taskList.add(task);","lastModifiedDate":"2021-10-14"},{"lineNumber":450,"author":{"gitId":"SeanRobertDH"},"content":"        updateObservers();","lastModifiedDate":"2021-10-29"},{"lineNumber":451,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":452,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":453,"author":{"gitId":"SeanRobertDH"},"content":"    //@@author SeanRobertDH","lastModifiedDate":"2021-10-27"},{"lineNumber":454,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":455,"author":{"gitId":"SeanRobertDH"},"content":"     * Checks if \u003ccode\u003eindex\u003c/code\u003e is a valid index in {@link #latestFilteredList}.","lastModifiedDate":"2021-11-05"},{"lineNumber":456,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":457,"author":{"gitId":"SeanRobertDH"},"content":"     * @param index Index to check exists in {@link #latestFilteredList}.","lastModifiedDate":"2021-11-05"},{"lineNumber":458,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws InvalidTaskIndexException if \u003ccode\u003eindex\u003c/code\u003e does not correspond to","lastModifiedDate":"2021-11-05"},{"lineNumber":459,"author":{"gitId":"SeanRobertDH"},"content":"     *     any {@link seedu.tp.task.Task} in {@link #latestFilteredList}.","lastModifiedDate":"2021-11-07"},{"lineNumber":460,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":461,"author":{"gitId":"SeanRobertDH"},"content":"    public void checkFilteredListIndexValid(int index) throws InvalidTaskIndexException {","lastModifiedDate":"2021-10-28"},{"lineNumber":462,"author":{"gitId":"SeanRobertDH"},"content":"        if (latestFilteredList.isEmpty()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":463,"author":{"gitId":"SeanRobertDH"},"content":"            latestFilteredList \u003d taskList;","lastModifiedDate":"2021-10-28"},{"lineNumber":464,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":465,"author":{"gitId":"SeanRobertDH"},"content":"        if (index \u003c 0 || index \u003e latestFilteredList.size() - 1) {","lastModifiedDate":"2021-10-28"},{"lineNumber":466,"author":{"gitId":"SeanRobertDH"},"content":"            throw new InvalidTaskIndexException(++index);","lastModifiedDate":"2021-10-18"},{"lineNumber":467,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":468,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":469,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":470,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":471,"author":{"gitId":"SeanRobertDH"},"content":"     * Deletes the {@link seedu.tp.task.Task} in {@link #taskList}","lastModifiedDate":"2021-11-07"},{"lineNumber":472,"author":{"gitId":"SeanRobertDH"},"content":"     * based off its index in {@link #latestFilteredList}.","lastModifiedDate":"2021-11-05"},{"lineNumber":473,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":474,"author":{"gitId":"SeanRobertDH"},"content":"     * @param index Index of task in {@link #latestFilteredList} to delete from {@link #taskList}.","lastModifiedDate":"2021-11-05"},{"lineNumber":475,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws InvalidTaskIndexException if \u003ccode\u003eindex\u003c/code\u003e does not correspond to","lastModifiedDate":"2021-11-05"},{"lineNumber":476,"author":{"gitId":"SeanRobertDH"},"content":"     *     any {@link seedu.tp.task.Task} in {@link #latestFilteredList}.","lastModifiedDate":"2021-11-07"},{"lineNumber":477,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":478,"author":{"gitId":"SeanRobertDH"},"content":"    //@@author SeanRobertDH","lastModifiedDate":"2021-10-27"},{"lineNumber":479,"author":{"gitId":"SeanRobertDH"},"content":"    public Task deleteFilteredTask(int index) throws InvalidTaskIndexException {","lastModifiedDate":"2021-10-28"},{"lineNumber":480,"author":{"gitId":"SeanRobertDH"},"content":"        checkFilteredListIndexValid(index);","lastModifiedDate":"2021-10-28"},{"lineNumber":481,"author":{"gitId":"SeanRobertDH"},"content":"        Task deletedTask \u003d latestFilteredList.remove(index);","lastModifiedDate":"2021-10-28"},{"lineNumber":482,"author":{"gitId":"SeanRobertDH"},"content":"        taskList.remove(deletedTask);","lastModifiedDate":"2021-10-28"},{"lineNumber":483,"author":{"gitId":"SeanRobertDH"},"content":"        updateObservers();","lastModifiedDate":"2021-10-29"},{"lineNumber":484,"author":{"gitId":"SeanRobertDH"},"content":"        return deletedTask;","lastModifiedDate":"2021-10-28"},{"lineNumber":485,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":486,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":487,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":488,"author":{"gitId":"SeanRobertDH"},"content":"     * Edits the {@link seedu.tp.task.Task} in {@link #taskList}","lastModifiedDate":"2021-11-07"},{"lineNumber":489,"author":{"gitId":"SeanRobertDH"},"content":"     * based off its index in {@link #latestFilteredList}.","lastModifiedDate":"2021-11-05"},{"lineNumber":490,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":491,"author":{"gitId":"SeanRobertDH"},"content":"     * @param index Index of task in {@link #latestFilteredList} to edit from {@link #taskList}.","lastModifiedDate":"2021-11-05"},{"lineNumber":492,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws InvalidTaskIndexException if \u003ccode\u003eindex\u003c/code\u003e does not correspond to","lastModifiedDate":"2021-11-05"},{"lineNumber":493,"author":{"gitId":"SeanRobertDH"},"content":"     *     any {@link seedu.tp.task.Task} in {@link #latestFilteredList}.","lastModifiedDate":"2021-11-07"},{"lineNumber":494,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":495,"author":{"gitId":"SeanRobertDH"},"content":"    //@@author SeanRobertDH","lastModifiedDate":"2021-10-28"},{"lineNumber":496,"author":{"gitId":"SeanRobertDH"},"content":"    public Task editFilteredTask(int index, Map\u003cString, String\u003e arguments) throws InvalidTaskIndexException,","lastModifiedDate":"2021-11-05"},{"lineNumber":497,"author":{"gitId":"SeanRobertDH"},"content":"        InvalidPriorityException, InvalidRecurrenceException, ParseDateFailedException, EmptyDescriptionException,","lastModifiedDate":"2021-11-08"},{"lineNumber":498,"author":{"gitId":"SeanRobertDH"},"content":"        StartDateAfterEndDateException, URISyntaxException, InvalidFlagsException {","lastModifiedDate":"2021-11-06"},{"lineNumber":499,"author":{"gitId":"SeanRobertDH"},"content":"        checkFilteredListIndexValid(index);","lastModifiedDate":"2021-10-28"},{"lineNumber":500,"author":{"gitId":"SeanRobertDH"},"content":"        Task toEdit \u003d latestFilteredList.get(index);","lastModifiedDate":"2021-11-06"},{"lineNumber":501,"author":{"gitId":"SeanRobertDH"},"content":"        toEdit.checkAllEditFlagsValid(arguments);","lastModifiedDate":"2021-11-06"},{"lineNumber":502,"author":{"gitId":"SeanRobertDH"},"content":"        latestFilteredList.get(index).edit(arguments);","lastModifiedDate":"2021-10-28"},{"lineNumber":503,"author":{"gitId":"SeanRobertDH"},"content":"        updateObservers();","lastModifiedDate":"2021-10-29"},{"lineNumber":504,"author":{"gitId":"SeanRobertDH"},"content":"        return latestFilteredList.get(index);","lastModifiedDate":"2021-10-28"},{"lineNumber":505,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":506,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"APZH":376,"SuibianP":9,"SeanRobertDH":121}},{"path":"src/main/java/seedu/tp/task/type/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.task.type;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"Xuefei2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SuibianP"},"content":"import org.jetbrains.annotations.Nullable;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.flags.DeadlineFlag;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.ParseDateFailedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.parser.DateParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.PriorityEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.RecurrenceEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.Task;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.TypeEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.reminder.Reminder;","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Xuefei2001"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"    private static final TypeEnum TASK_TYPE \u003d TypeEnum.DEADLINE;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"APZH"},"content":"    private static final String DEADLINE_ICON \u003d \"[D]\";","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String DEADLINE_DATE_DESCRIPTION_REGEX \u003d \" (dueDate: %s)\";","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String DUE_DATE_NOT_NULL_ASSERTION \u003d \"dueDate for Deadline cannot be null.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"    public Deadline(String description, LocalDateTime dueDate) {","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"Xuefei2001"},"content":"        super(description);","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"        setDueDate(dueDate);","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"    public Deadline(String description, LocalDateTime dueDate, PriorityEnum priority) {","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"        this(description, dueDate);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"        setPriority(priority);","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"    public Deadline(String description, LocalDateTime dueDate, RecurrenceEnum recurrence) {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"        this(description, dueDate);","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"        setRecurrence(recurrence);","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"SeanRobertDH"},"content":"    public Deadline(String description, LocalDateTime dueDate, PriorityEnum priority, RecurrenceEnum recurrence) {","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"SeanRobertDH"},"content":"        this(description, dueDate);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"SeanRobertDH"},"content":"        setPriority(priority);","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"SeanRobertDH"},"content":"        setRecurrence(recurrence);","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"APZH"},"content":"    public TypeEnum getTaskType() {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"SeanRobertDH"},"content":"        return this.TASK_TYPE;","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"SeanRobertDH"},"content":"    public LocalDateTime getDueDate() {","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"SeanRobertDH"},"content":"        return dueDate;","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"SeanRobertDH"},"content":"    public void setDueDate(LocalDateTime dueDate) {","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"SeanRobertDH"},"content":"        assert dueDate !\u003d null : DUE_DATE_NOT_NULL_ASSERTION;","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"SeanRobertDH"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"SeanRobertDH"},"content":"        setReminder(new Reminder(dueDate));","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"APZH"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"APZH"},"content":"    public String getTaskEntryDescription() {","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"APZH"},"content":"        return DEADLINE_ICON + \" \" + super.getTaskEntryDescription()","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"SeanRobertDH"},"content":"            + String.format(DEADLINE_DATE_DESCRIPTION_REGEX, DateParser.dateToString(getDueDate()));","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"SeanRobertDH"},"content":"    //@@author SeanRobertDH","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"SeanRobertDH"},"content":"     * Edits the {@link #dueDate} if {@link seedu.tp.command.flags.DeadlineFlag#DUE_DATE}","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"SeanRobertDH"},"content":"     *     is a key in \u003ccode\u003earguments\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"SeanRobertDH"},"content":"     * @param arguments \u003ccode\u003eMap\u0026lt;String, String\u0026gt;\u003c/code\u003e of flags to values","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"SeanRobertDH"},"content":"     *     that should be edited in {@link seedu.tp.task.type.Deadline}.","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws seedu.tp.exception.ParseDateFailedException if unable to parse \u003ccode\u003edue\u003c/code\u003e.","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"SeanRobertDH"},"content":"    protected void taskEdit(Map\u003cString, String\u003e arguments) throws ParseDateFailedException {","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"SeanRobertDH"},"content":"        if (arguments.containsKey(DeadlineFlag.DUE_DATE)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"SeanRobertDH"},"content":"            String due \u003d arguments.get(DeadlineFlag.DUE_DATE);","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"SeanRobertDH"},"content":"            setDueDate(DateParser.stringToDate(due));","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"SeanRobertDH"},"content":"    //@@author SeanRobertDH","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"SeanRobertDH"},"content":"     * Updates the {@link #dueDate} if {@link seedu.tp.task.type.Deadline} has a recurrence to the latest date.","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"SeanRobertDH"},"content":"    public void refreshDate() {","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"SeanRobertDH"},"content":"        LocalDateTime newDueDate \u003d getRecurrence().getNextRecurredDate(getDueDate());","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"SeanRobertDH"},"content":"        setDueDate(newDueDate);","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"SeanRobertDH"},"content":"    //@@author SeanRobertDH","lastModifiedDate":"2021-11-06"},{"lineNumber":97,"author":{"gitId":"SeanRobertDH"},"content":"    protected DeadlineFlag getTaskFlag() {","lastModifiedDate":"2021-11-06"},{"lineNumber":98,"author":{"gitId":"SeanRobertDH"},"content":"        return new DeadlineFlag();","lastModifiedDate":"2021-11-06"},{"lineNumber":99,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":100,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":101,"author":{"gitId":"SeanRobertDH"},"content":"    //@@author SeanRobertDH","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns {@link #dueDate}.","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"SeanRobertDH"},"content":"    public LocalDateTime getListDate() {","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"SeanRobertDH"},"content":"        return getDueDate();","lastModifiedDate":"2021-10-29"},{"lineNumber":108,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"APZH":9,"SuibianP":2,"SeanRobertDH":77,"Xuefei2001":21}},{"path":"src/main/java/seedu/tp/task/type/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.task.type;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"SuibianP"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"Xuefei2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SuibianP"},"content":"import org.jetbrains.annotations.Nullable;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.flags.EventFlag;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.ParseDateFailedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.StartDateAfterEndDateException;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.parser.DateParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.PriorityEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.RecurrenceEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.Task;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.TypeEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.reminder.Reminder;","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Xuefei2001"},"content":"public class Event extends Task {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"    private static final TypeEnum TASK_TYPE \u003d TypeEnum.EVENT;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"APZH"},"content":"    private static final String EVENT_ICON \u003d \"[E]\";","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String DEADLINE_DATE_DESCRIPTION_REGEX \u003d \" (startDate: %s - endDate: %s)\";","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String START_DATE_NOT_NULL_ASSERTION \u003d \"startDate for Event cannot be null\";","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String END_DATE_NOT_NULL_ASSERTION \u003d \"endDate for Event cannot be null\";","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String START_DATE_BEFORE_END_DATE_ASSERTION \u003d \"Start date must be before end date!\";","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"    public Event(String description, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"Xuefei2001"},"content":"        super(description);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"        setStartDate(startDate);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"        setEndDate(endDate);","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"    public Event(String description, LocalDateTime startDate, LocalDateTime endDate, PriorityEnum priority) {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"        this(description, startDate, endDate);","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"        setPriority(priority);","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"SeanRobertDH"},"content":"    public Event(String description, LocalDateTime startDate, LocalDateTime endDate, RecurrenceEnum recurrence) {","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"SeanRobertDH"},"content":"        this(description, startDate, endDate);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"SeanRobertDH"},"content":"        setRecurrence(recurrence);","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"SeanRobertDH"},"content":"    public Event(String description, LocalDateTime startDate,","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"SeanRobertDH"},"content":"                 LocalDateTime endDate, PriorityEnum priority, RecurrenceEnum recurrence) {","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"SeanRobertDH"},"content":"        this(description, startDate, endDate);","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"SeanRobertDH"},"content":"        setPriority(priority);","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"SeanRobertDH"},"content":"        setRecurrence(recurrence);","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"APZH"},"content":"    public TypeEnum getTaskType() {","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"SeanRobertDH"},"content":"        return this.TASK_TYPE;","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"SeanRobertDH"},"content":"    public LocalDateTime getStartDate() {","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"SeanRobertDH"},"content":"        return startDate;","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"SeanRobertDH"},"content":"    public void setStartDate(LocalDateTime startDate) {","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"SeanRobertDH"},"content":"        assert startDate !\u003d null : START_DATE_NOT_NULL_ASSERTION;","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"SeanRobertDH"},"content":"        if (endDate !\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"SeanRobertDH"},"content":"            assert startDate.isBefore(endDate) : START_DATE_BEFORE_END_DATE_ASSERTION;","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Xuefei2001"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"SeanRobertDH"},"content":"        setReminder(new Reminder(startDate));","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"SeanRobertDH"},"content":"    public LocalDateTime getEndDate() {","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"SeanRobertDH"},"content":"        return endDate;","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"SeanRobertDH"},"content":"    public void setEndDate(LocalDateTime endDate) {","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"SeanRobertDH"},"content":"        assert endDate !\u003d null : END_DATE_NOT_NULL_ASSERTION;","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"SeanRobertDH"},"content":"        if (startDate !\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"SeanRobertDH"},"content":"            assert startDate.isBefore(endDate) : START_DATE_BEFORE_END_DATE_ASSERTION;","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"APZH"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"APZH"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"APZH"},"content":"    public String getTaskEntryDescription() {","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"APZH"},"content":"        return EVENT_ICON + \" \" + super.getTaskEntryDescription()","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"SeanRobertDH"},"content":"            + String.format(DEADLINE_DATE_DESCRIPTION_REGEX,","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"SeanRobertDH"},"content":"            DateParser.dateToString(getStartDate()), DateParser.dateToString(getEndDate()));","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"SeanRobertDH"},"content":"    //@@author SeanRobertDH","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"SeanRobertDH"},"content":"     * Edits the {@link #startDate} and/or {@link #endDate} if {@link seedu.tp.command.flags.EventFlag#START_DATE}","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"SeanRobertDH"},"content":"     * and/or {@link seedu.tp.command.flags.EventFlag#END_DATE} is a key in \u003ccode\u003earguments\u003c/code\u003e.","lastModifiedDate":"2021-11-07"},{"lineNumber":95,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"SeanRobertDH"},"content":"     * @param arguments \u003ccode\u003eMap\u0026lt;String, String\u0026gt;\u003c/code\u003e of flags to values","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"SeanRobertDH"},"content":"     *     that should be edited in {@link seedu.tp.task.type.Event}.","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws seedu.tp.exception.ParseDateFailedException if unable to parse \u003ccode\u003estart\u003c/code\u003e or \u003ccode\u003eend\u003c/code\u003e.","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws seedu.tp.exception.StartDateAfterEndDateException if edited \u003ccode\u003estartDate\u003c/code\u003e and/or","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"SeanRobertDH"},"content":"     *     \u003ccode\u003eendDate\u003c/code\u003e would result in {@link #startDate} being before {@link #endDate}.","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"SeanRobertDH"},"content":"    protected void taskEdit(Map\u003cString, String\u003e arguments)","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"SeanRobertDH"},"content":"            throws ParseDateFailedException, StartDateAfterEndDateException, URISyntaxException {","lastModifiedDate":"2021-11-02"},{"lineNumber":105,"author":{"gitId":"SeanRobertDH"},"content":"        LocalDateTime startDate \u003d getStartDate();","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"SeanRobertDH"},"content":"        LocalDateTime endDate \u003d getEndDate();","lastModifiedDate":"2021-10-28"},{"lineNumber":107,"author":{"gitId":"SeanRobertDH"},"content":"        if (arguments.containsKey(EventFlag.START_DATE)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":108,"author":{"gitId":"SeanRobertDH"},"content":"            String start \u003d arguments.get(EventFlag.START_DATE);","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"SeanRobertDH"},"content":"            startDate \u003d DateParser.stringToDate(start);","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"SeanRobertDH"},"content":"        if (arguments.containsKey(EventFlag.END_DATE)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":112,"author":{"gitId":"SeanRobertDH"},"content":"            String end \u003d arguments.get(EventFlag.END_DATE);","lastModifiedDate":"2021-10-28"},{"lineNumber":113,"author":{"gitId":"SeanRobertDH"},"content":"            endDate \u003d DateParser.stringToDate(end);","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"SeanRobertDH"},"content":"        refreshDate();","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"SeanRobertDH"},"content":"        if (startDate.isAfter(endDate)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"SeanRobertDH"},"content":"            throw new StartDateAfterEndDateException();","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"SeanRobertDH"},"content":"        setStartDate(startDate);","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"SeanRobertDH"},"content":"        setEndDate(endDate);","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":122,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":123,"author":{"gitId":"SeanRobertDH"},"content":"    //@@author SeanRobertDH","lastModifiedDate":"2021-11-05"},{"lineNumber":124,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":125,"author":{"gitId":"SeanRobertDH"},"content":"     * Updates the {@link #startDate} and {@link #endDate}","lastModifiedDate":"2021-11-05"},{"lineNumber":126,"author":{"gitId":"SeanRobertDH"},"content":"     * if {@link seedu.tp.task.type.Event} has a recurrence to the latest date.","lastModifiedDate":"2021-11-07"},{"lineNumber":127,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":128,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":129,"author":{"gitId":"SeanRobertDH"},"content":"    public void refreshDate() {","lastModifiedDate":"2021-10-29"},{"lineNumber":130,"author":{"gitId":"SeanRobertDH"},"content":"        LocalDateTime newStartDate \u003d getRecurrence().getNextRecurredDate(getStartDate());","lastModifiedDate":"2021-10-29"},{"lineNumber":131,"author":{"gitId":"SeanRobertDH"},"content":"        LocalDateTime newEndDate \u003d getRecurrence().getNextRecurredDate(getEndDate());","lastModifiedDate":"2021-10-29"},{"lineNumber":132,"author":{"gitId":"SeanRobertDH"},"content":"        setEndDate(newEndDate);","lastModifiedDate":"2021-10-29"},{"lineNumber":133,"author":{"gitId":"SeanRobertDH"},"content":"        setStartDate(newStartDate);","lastModifiedDate":"2021-10-29"},{"lineNumber":134,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":135,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":136,"author":{"gitId":"SeanRobertDH"},"content":"    //@@author SeanRobertDH","lastModifiedDate":"2021-11-06"},{"lineNumber":137,"author":{"gitId":"SeanRobertDH"},"content":"    protected EventFlag getTaskFlag() {","lastModifiedDate":"2021-11-06"},{"lineNumber":138,"author":{"gitId":"SeanRobertDH"},"content":"        return new EventFlag();","lastModifiedDate":"2021-11-06"},{"lineNumber":139,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":140,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":141,"author":{"gitId":"SeanRobertDH"},"content":"    //@@author SeanRobertDH","lastModifiedDate":"2021-11-05"},{"lineNumber":142,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":143,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns {@link #startDate}.","lastModifiedDate":"2021-11-05"},{"lineNumber":144,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":145,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":146,"author":{"gitId":"SeanRobertDH"},"content":"    public LocalDateTime getListDate() {","lastModifiedDate":"2021-10-29"},{"lineNumber":147,"author":{"gitId":"SeanRobertDH"},"content":"        return getStartDate();","lastModifiedDate":"2021-10-29"},{"lineNumber":148,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":149,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"APZH":8,"SuibianP":3,"SeanRobertDH":110,"Xuefei2001":28}},{"path":"src/main/java/seedu/tp/task/type/Lesson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.task.type;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.flags.LessonFlag;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"SuibianP"},"content":"import seedu.tp.exception.NoLinkException;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"SuibianP"},"content":"import seedu.tp.log.Log;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.parser.DateParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.TypeEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.nusmods.Semester;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.RecurrenceEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"SuibianP"},"content":"import java.net.URI;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"SuibianP"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"SuibianP"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"SuibianP"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"SuibianP"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"SuibianP"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"SuibianP"},"content":"import java.util.Map;","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"SuibianP"},"content":"//@@author SuibianP","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"SuibianP"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"SuibianP"},"content":" * A single lesson class e.g. CS2101 C02 Thursday","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"SuibianP"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"SuibianP"},"content":"public class Lesson extends Event {","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"SuibianP"},"content":"    private static final String LESSON_ICON \u003d \"[L]\";","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"SuibianP"},"content":"    private static final TypeEnum TASK_TYPE \u003d TypeEnum.LESSON;","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"SuibianP"},"content":"    public LocalDateTime getNextOccurrence() {","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"SuibianP"},"content":"        LocalDateTime nearest \u003d Arrays.stream(occurrences).mapToObj(occurrence -\u003e getStartDate()","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"SuibianP"},"content":"                .plusWeeks(occurrence - 1))","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"SuibianP"},"content":"                .filter(date -\u003e date.isAfter(LocalDateTime.now()))","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"SuibianP"},"content":"                .min(LocalDateTime::compareTo)","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"SuibianP"},"content":"                .orElseThrow();","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"SuibianP"},"content":"        Log.info(Arrays.toString(occurrences));","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"SuibianP"},"content":"        Log.info(nearest.toString());","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"SuibianP"},"content":"        return nearest;","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"SuibianP"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"SuibianP"},"content":"     * 1-based occurrence.","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"SuibianP"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"SuibianP"},"content":"    private int[] occurrences;","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"SuibianP"},"content":"    public boolean hasLink() {","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"SuibianP"},"content":"        return link !\u003d null;","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"SuibianP"},"content":"    public URI getLink() throws NoLinkException {","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"SuibianP"},"content":"        if (!hasLink()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"SuibianP"},"content":"            throw new NoLinkException();","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"SuibianP"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"SuibianP"},"content":"        return link;","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"SuibianP"},"content":"    public void setLink(URI link) {","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"SuibianP"},"content":"        this.link \u003d link;","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"SuibianP"},"content":"    private URI link;","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"SuibianP"},"content":"    public String getModuleCode() {","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"SuibianP"},"content":"        return moduleCode;","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"SuibianP"},"content":"    public TypeEnum getTaskType() {","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"SuibianP"},"content":"        return this.TASK_TYPE;","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"SuibianP"},"content":"    private void setModuleCode(String moduleCode) {","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"SuibianP"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"SuibianP"},"content":"    private String moduleCode;","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"SuibianP"},"content":"    public String getClassNumber() {","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"SuibianP"},"content":"        return classNumber;","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"SuibianP"},"content":"    private void setClassNumber(String classNumber) {","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"SuibianP"},"content":"        this.classNumber \u003d classNumber;","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"SuibianP"},"content":"    private String classNumber;","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"SuibianP"},"content":"    @Override","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"SuibianP"},"content":"    protected void taskEdit(Map\u003cString, String\u003e arguments) throws URISyntaxException {","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"SuibianP"},"content":"        if (arguments.containsKey(LessonFlag.LINK)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"SuibianP"},"content":"            setLink(new URI(arguments.get(LessonFlag.LINK)));","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"SuibianP"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"SuibianP"},"content":"    public Lesson(String moduleCode, String classNumber,","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"SuibianP"},"content":"            DayOfWeek dayOfWeek, LocalTime start, LocalTime end, int[] weeks) {","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"SuibianP"},"content":"        super(moduleCode, Semester.getSemester().getStartingMonday().with(dayOfWeek).atTime(start),","lastModifiedDate":"2021-11-07"},{"lineNumber":95,"author":{"gitId":"SuibianP"},"content":"                Semester.getSemester().getStartingMonday().with(dayOfWeek).atTime(end),","lastModifiedDate":"2021-11-07"},{"lineNumber":96,"author":{"gitId":"SuibianP"},"content":"                RecurrenceEnum.WEEKLY);","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"SuibianP"},"content":"        setModuleCode(moduleCode);","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"SuibianP"},"content":"        setClassNumber(classNumber);","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"SuibianP"},"content":"        setOccurrences(weeks);","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"SuibianP"},"content":"    private void setOccurrences(int[] occurrences) {","lastModifiedDate":"2021-11-07"},{"lineNumber":103,"author":{"gitId":"SuibianP"},"content":"        this.occurrences \u003d occurrences;","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"SuibianP"},"content":"    private static final String LINK_INDICATOR \u003d \"(with link)\";","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"SuibianP"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"SuibianP"},"content":"    public String getTaskEntryDescription() {","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"SuibianP"},"content":"        return LESSON_ICON + \" \" + this.getModuleCode() + \u0027 \u0027 + this.getClassNumber() + \": \"","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"SuibianP"},"content":"                + DateParser.dateToString(getStartDate())","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"SuibianP"},"content":"                + \" to \" + DateParser.dateToString(getEndDate())","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"SuibianP"},"content":"                + \" \u003c\" + getPriority().toString() + \"\u003e\"","lastModifiedDate":"2021-11-08"},{"lineNumber":114,"author":{"gitId":"SuibianP"},"content":"                + \" {\" + getRecurrence().toString() + \"} \"","lastModifiedDate":"2021-11-08"},{"lineNumber":115,"author":{"gitId":"SuibianP"},"content":"                + (hasLink() ? LINK_INDICATOR : \"\");","lastModifiedDate":"2021-11-08"},{"lineNumber":116,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"SuibianP"},"content":"    @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":119,"author":{"gitId":"SuibianP"},"content":"    protected LessonFlag getTaskFlag() {","lastModifiedDate":"2021-11-06"},{"lineNumber":120,"author":{"gitId":"SuibianP"},"content":"        return new LessonFlag();","lastModifiedDate":"2021-11-06"},{"lineNumber":121,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":122,"author":{"gitId":"SuibianP"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"SuibianP":116,"SeanRobertDH":6}},{"path":"src/main/java/seedu/tp/task/type/Todo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.task.type;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Xuefei2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SuibianP"},"content":"import org.jetbrains.annotations.Nullable;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.flags.TodoFlag;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.ParseDateFailedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.parser.DateParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.PriorityEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.RecurrenceEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.Task;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.TypeEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.reminder.Reminder;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Xuefei2001"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"    private static final TypeEnum TASK_TYPE \u003d TypeEnum.TODO;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"APZH"},"content":"    private static final String TODO_ICON \u003d \"[T]\";","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String TODO_DATE_DESCRIPTION_REGEX \u003d \" (doOn: %s)\";","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"    private LocalDateTime doOnDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Xuefei2001"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Xuefei2001"},"content":"        super(description);","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"        setDoOnDate(DateParser.roundUpHour(LocalDateTime.now()));","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Xuefei2001"},"content":"    public Todo(String description, PriorityEnum priority) {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"        this(description);","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"        setPriority(priority);","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"    public Todo(String description, RecurrenceEnum recurrence) {","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"        this(description);","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"        setRecurrence(recurrence);","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"    public Todo(String description, LocalDateTime doOnDate) {","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"SeanRobertDH"},"content":"        this(description);","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"SeanRobertDH"},"content":"        setDoOnDate(doOnDate);","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"SeanRobertDH"},"content":"    public Todo(String description, PriorityEnum priority, LocalDateTime doOnDate) {","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"SeanRobertDH"},"content":"        this(description);","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"SeanRobertDH"},"content":"        setPriority(priority);","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"SeanRobertDH"},"content":"        setDoOnDate(doOnDate);","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"SeanRobertDH"},"content":"    public Todo(String description, LocalDateTime doOnDate, RecurrenceEnum recurrence) {","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"SeanRobertDH"},"content":"        this(description);","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"SeanRobertDH"},"content":"        setDoOnDate(doOnDate);","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"SeanRobertDH"},"content":"        setRecurrence(recurrence);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"SeanRobertDH"},"content":"    public Todo(String description, PriorityEnum priority, RecurrenceEnum recurrence) {","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"SeanRobertDH"},"content":"        this(description);","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"SeanRobertDH"},"content":"        setPriority(priority);","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"SeanRobertDH"},"content":"        setRecurrence(recurrence);","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"SeanRobertDH"},"content":"    public Todo(String description, PriorityEnum priority, LocalDateTime doOnDate, RecurrenceEnum recurrence) {","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"SeanRobertDH"},"content":"        this(description);","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"SeanRobertDH"},"content":"        setPriority(priority);","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"SeanRobertDH"},"content":"        setDoOnDate(doOnDate);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"SeanRobertDH"},"content":"        setRecurrence(recurrence);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"APZH"},"content":"    public TypeEnum getTaskType() {","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"SeanRobertDH"},"content":"        return this.TASK_TYPE;","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"SeanRobertDH"},"content":"    public LocalDateTime getDoOnDate() {","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"SeanRobertDH"},"content":"        return doOnDate;","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"SeanRobertDH"},"content":"    public void setDoOnDate(LocalDateTime doOnDate) {","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"SeanRobertDH"},"content":"        this.doOnDate \u003d doOnDate;","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"SeanRobertDH"},"content":"        setReminder(new Reminder(doOnDate));","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"APZH"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"APZH"},"content":"    public String getTaskEntryDescription() {","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"APZH"},"content":"        String description \u003d TODO_ICON + \" \" + super.getTaskEntryDescription();","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"SeanRobertDH"},"content":"        if (getDoOnDate() !\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"SeanRobertDH"},"content":"            description +\u003d String.format(TODO_DATE_DESCRIPTION_REGEX, DateParser.dateToString(getDoOnDate()));","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"SeanRobertDH"},"content":"        return description;","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"SeanRobertDH"},"content":"    //@@author SeanRobertDH","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"SeanRobertDH"},"content":"     * Edits the {@link #doOnDate} if {@link seedu.tp.command.flags.TodoFlag#DO_ON_DATE}","lastModifiedDate":"2021-11-07"},{"lineNumber":95,"author":{"gitId":"SeanRobertDH"},"content":"     *     is a key in \u003ccode\u003earguments\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"SeanRobertDH"},"content":"     * @param arguments \u003ccode\u003eMap\u0026lt;String, String\u0026gt;\u003c/code\u003e of flags to values","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"SeanRobertDH"},"content":"     *     that should be edited in {@link seedu.tp.task.type.Todo}.","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"SeanRobertDH"},"content":"     * @throws seedu.tp.exception.ParseDateFailedException if unable to parse \u003ccode\u003edoOn\u003c/code\u003e.","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"SeanRobertDH"},"content":"    protected void taskEdit(Map\u003cString, String\u003e arguments) throws ParseDateFailedException {","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"SeanRobertDH"},"content":"        if (arguments.containsKey(TodoFlag.DO_ON_DATE)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"SeanRobertDH"},"content":"            String doOn \u003d arguments.get(TodoFlag.DO_ON_DATE);","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"SeanRobertDH"},"content":"            setDoOnDate(DateParser.stringToDate(doOn));","lastModifiedDate":"2021-11-05"},{"lineNumber":106,"author":{"gitId":"SeanRobertDH"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":107,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":108,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"SeanRobertDH"},"content":"    //@@author SeanRobertDH","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"SeanRobertDH"},"content":"     * Updates the {@link #doOnDate} if {@link seedu.tp.task.type.Todo} has a recurrence to the latest date.","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":113,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":114,"author":{"gitId":"SeanRobertDH"},"content":"    public void refreshDate() {","lastModifiedDate":"2021-10-29"},{"lineNumber":115,"author":{"gitId":"SeanRobertDH"},"content":"        LocalDateTime newDoOnDate \u003d getRecurrence().getNextRecurredDate(getDoOnDate());","lastModifiedDate":"2021-10-29"},{"lineNumber":116,"author":{"gitId":"SeanRobertDH"},"content":"        setDoOnDate(newDoOnDate);","lastModifiedDate":"2021-10-29"},{"lineNumber":117,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"SeanRobertDH"},"content":"    //@@author SeanRobertDH","lastModifiedDate":"2021-11-06"},{"lineNumber":120,"author":{"gitId":"SeanRobertDH"},"content":"    protected TodoFlag getTaskFlag() {","lastModifiedDate":"2021-11-06"},{"lineNumber":121,"author":{"gitId":"SeanRobertDH"},"content":"        return new TodoFlag();","lastModifiedDate":"2021-11-06"},{"lineNumber":122,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":123,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":124,"author":{"gitId":"SeanRobertDH"},"content":"    //@@author SeanRobertDH","lastModifiedDate":"2021-11-05"},{"lineNumber":125,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":126,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns {@link #doOnDate}.","lastModifiedDate":"2021-11-05"},{"lineNumber":127,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":128,"author":{"gitId":"SeanRobertDH"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":129,"author":{"gitId":"SeanRobertDH"},"content":"    public LocalDateTime getListDate() {","lastModifiedDate":"2021-10-29"},{"lineNumber":130,"author":{"gitId":"SeanRobertDH"},"content":"        return getDoOnDate();","lastModifiedDate":"2021-10-29"},{"lineNumber":131,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":132,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"APZH":8,"SuibianP":2,"SeanRobertDH":95,"Xuefei2001":27}},{"path":"src/main/java/seedu/tp/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.ui;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"APZH"},"content":"//@@author APZH","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"APZH"},"content":"import seedu.tp.command.CommandEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"APZH"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"APZH"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"APZH"},"content":" * Text UI of the SchedUrMods application.","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"APZH"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"APZH"},"content":"public class Ui {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"APZH"},"content":"    private static final Scanner IN \u003d new Scanner(System.in);","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"APZH"},"content":"    private static final String LOGO \u003d \"\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"APZH"},"content":"            + \" _____        _                _  _   _       ___  ___            _\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"APZH"},"content":"            + \"/  ___|      | |              | || | | |      |  \\\\/  |           | |\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"APZH"},"content":"            + \"\\\\ `--.   ___ | |__    ___   __| || | | | _ __ | .  . |  ___    __| | ___\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"APZH"},"content":"            + \" `--. \\\\ / __|| \u0027_ \\\\  / _ \\\\ / _` || | | || \u0027__|| |\\\\/| | / _ \\\\  / _` |/ __|\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"APZH"},"content":"            + \"/\\\\__/ /| (__ | | | ||  __/| (_| || |_| || |   | |  | || (_) || (_| |\\\\__ \\\\\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"APZH"},"content":"            + \"\\\\____/  \\\\___||_| |_| \\\\___| \\\\__,_| \\\\___/ |_|   \\\\_|  |_/ \\\\___/  \\\\__,_||___/\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"APZH"},"content":"            + \"-------------------------------------------------------------------------\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"APZH"},"content":"            + \"Command-Line Interface for NUSMODS                               (v2.1.0)\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"APZH"},"content":"            + \"-------------------------------------------------------------------------\";","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"APZH"},"content":"    private static final String CURSOR \u003d \"[user]: \";","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"APZH"},"content":"    private static final String LINE_SEPARATOR \u003d \"---------------------------------------\"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"APZH"},"content":"            + \"----------------------------------\";","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"APZH"},"content":"    private static final String MESSAGE_BORDER \u003d \"|| \";","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"APZH"},"content":"    private static final String MESSAGE_REGEX \u003d \"\\\\r?\\\\n\";","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"APZH"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"APZH"},"content":"     * Prints logo of SchedUrMods upon the start of the application.","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"APZH"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"APZH"},"content":"    public void printLogo() {","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"APZH"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"APZH"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"APZH"},"content":"     * Prints the cursor used for user input.","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"APZH"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"APZH"},"content":"    public void printCursor() {","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"APZH"},"content":"        System.out.print(CURSOR);","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"APZH"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"APZH"},"content":"     * Reads and returns the user input into the command-line as a {@code String}.","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"APZH"},"content":"     * @return The user input.","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"APZH"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"APZH"},"content":"    public String readInput() {","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"APZH"},"content":"        printCursor();","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"APZH"},"content":"        if (!IN.hasNextLine()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"APZH"},"content":"            return CommandEnum.BYE.toString();","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"APZH"},"content":"        String input \u003d IN.nextLine();","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"APZH"},"content":"        return input;","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"APZH"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"APZH"},"content":"     * Prints out the UI display message with a custom formatting after a command is executed.","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"APZH"},"content":"     * @param message Message to be formatted.","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"APZH"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"APZH"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"APZH"},"content":"        String[] messageLines \u003d message.split(MESSAGE_REGEX);","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"APZH"},"content":"        for (int i \u003d 0; i \u003c messageLines.length; i++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"APZH"},"content":"            System.out.print(MESSAGE_BORDER + messageLines[i] + \"\\n\");","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"APZH"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"APZH"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"APZH":75,"SeanRobertDH":1}},{"path":"src/main/java/seedu/tp/utility/ExternalHelper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.utility;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.BrowseFailException;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"SuibianP"},"content":"import java.awt.Desktop;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"SuibianP"},"content":"import java.net.URI;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"SuibianP"},"content":"public class ExternalHelper {","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"SuibianP"},"content":"    public static void browseUri(URI uri) throws BrowseFailException {","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"SuibianP"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"SuibianP"},"content":"            Desktop.getDesktop().browse(uri);","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"SuibianP"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"SuibianP"},"content":"            throw new BrowseFailException(e.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"SuibianP"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"SuibianP"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"SuibianP":14,"SeanRobertDH":2}},{"path":"src/main/java/seedu/tp/utility/Utility.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.utility;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"public class Utility {","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String INTEGER_REGEX \u003d \"^\\\\d+$\";","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"     * Returns whether \u003ccode\u003etoCheck\u003c/code\u003e is an \u003ccode\u003eint\u003c/code\u003e.","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"     * @return \u003ccode\u003eboolean toCheck\u003c/code\u003e is \u003ccode\u003eint\u003c/code\u003e?","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"    public static boolean isInteger(String toCheck) {","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"        return toCheck.matches(INTEGER_REGEX);","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"SeanRobertDH":14}},{"path":"src/test/java/seedu/tp/SchedUrModsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.ui.Ui;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"SuibianP"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"class SchedUrModsTest {","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"SuibianP"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"SuibianP"},"content":"    void readInput_eof_Success() {","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"SuibianP"},"content":"        InputStream backup \u003d System.in;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"SuibianP"},"content":"        System.setIn(InputStream.nullInputStream());","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"APZH"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"APZH"},"content":"        ui.readInput();","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"SuibianP"},"content":"        System.setIn(backup);","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"APZH":2,"SuibianP":9,"SeanRobertDH":3,"-":10}},{"path":"src/test/java/seedu/tp/command/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.command;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"SuibianP"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.flags.DeadlineFlag;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.flags.EventFlag;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.flags.ListFlag;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.EmptyTasklistException;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.InvalidTaskIndexException;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.PriorityEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.taskmanager.TaskManager;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.factory.DeadlineFactory;","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.factory.EventFactory;","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.factory.TodoFactory;","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"//@@author SeanRobertDH","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"class DeleteCommandTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String VALID_DATE1 \u003d \"14-02-1998 02:00\";","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String VALID_DATE2 \u003d \"14-02-1998 04:40\";","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String TO_DELETE \u003d \"TO DELETE\";","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"    void clearTaskmanager() {","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager \u003d new TaskManager();","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"    void executeCommand_validSingleInput_expectTaskDeleted() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"        Map\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, \"1\");","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.START_DATE, VALID_DATE1);","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.END_DATE, VALID_DATE2);","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new EventFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, \"2\");","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(DeadlineFlag.DUE_DATE, VALID_DATE1);","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new DeadlineFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, TO_DELETE);","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new TodoFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, \"4\");","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new TodoFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, \"5\");","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new TodoFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(Command.MAIN_ARGUMENT, \"   __3__, , _\");","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"SeanRobertDH"},"content":"        new DeleteCommand(taskManager, arguments).executeCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"SeanRobertDH"},"content":"        assertFalse(taskManager.listTasklistWithFilter(new HashMap\u003c\u003e()).contains(TO_DELETE));","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"SeanRobertDH"},"content":"    void executeCommand_validListInput_expectTasksDeleted() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"SeanRobertDH"},"content":"        Map\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, \"1\");","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.START_DATE, VALID_DATE1);","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.END_DATE, VALID_DATE2);","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new EventFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, \"2\");","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(DeadlineFlag.DUE_DATE, VALID_DATE1);","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new DeadlineFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, TO_DELETE);","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new TodoFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, TO_DELETE);","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new TodoFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, TO_DELETE);","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new TodoFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(Command.MAIN_ARGUMENT, \"  _3-5      \");","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"SeanRobertDH"},"content":"        new DeleteCommand(taskManager, arguments).executeCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"SeanRobertDH"},"content":"        assertFalse(taskManager.listTasklistWithFilter(new HashMap\u003c\u003e()).contains(TO_DELETE));","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"SeanRobertDH"},"content":"    void executeCommand_validSingleInputAndListInput_expectTasksDeleted() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"SeanRobertDH"},"content":"        Map\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, TO_DELETE);","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.START_DATE, VALID_DATE1);","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.END_DATE, VALID_DATE2);","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new EventFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, \"2\");","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(DeadlineFlag.DUE_DATE, VALID_DATE1);","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new DeadlineFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, TO_DELETE);","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new TodoFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, TO_DELETE);","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new TodoFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, TO_DELETE);","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new TodoFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(Command.MAIN_ARGUMENT, \"  _3-5,   1   \");","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"SeanRobertDH"},"content":"        new DeleteCommand(taskManager, arguments).executeCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"SeanRobertDH"},"content":"        assertFalse(taskManager.listTasklistWithFilter(new HashMap\u003c\u003e()).contains(TO_DELETE));","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"SeanRobertDH"},"content":"    void executeCommand_validMultiSingleInput_expectTasksDeleted() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"SeanRobertDH"},"content":"        Map\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, TO_DELETE);","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.START_DATE, VALID_DATE1);","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.END_DATE, VALID_DATE2);","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new EventFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, \"2\");","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(DeadlineFlag.DUE_DATE, VALID_DATE1);","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new DeadlineFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, TO_DELETE);","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new TodoFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, \"4\");","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new TodoFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, TO_DELETE);","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new TodoFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(Command.MAIN_ARGUMENT, \"1, _ _ 3    _,_   5\");","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"SeanRobertDH"},"content":"        new DeleteCommand(taskManager, arguments).executeCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"SeanRobertDH"},"content":"        assertFalse(taskManager.listTasklistWithFilter(new HashMap\u003c\u003e()).contains(TO_DELETE));","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"SeanRobertDH"},"content":"    void executeCommand_validMultiInput_expectTasksDeleted() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"SeanRobertDH"},"content":"        Map\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, TO_DELETE);","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.START_DATE, VALID_DATE1);","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.END_DATE, VALID_DATE2);","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new EventFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, TO_DELETE);","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(DeadlineFlag.DUE_DATE, VALID_DATE1);","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new DeadlineFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, \"3\");","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new TodoFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, TO_DELETE);","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new TodoFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, TO_DELETE);","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new TodoFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(Command.MAIN_ARGUMENT, \"1-2, _ _ 4    _,_   5\");","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"SeanRobertDH"},"content":"        new DeleteCommand(taskManager, arguments).executeCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"SeanRobertDH"},"content":"        assertFalse(taskManager.listTasklistWithFilter(new HashMap\u003c\u003e()).contains(TO_DELETE));","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"SeanRobertDH"},"content":"    void executeCommand_noMainArgument_expectUsage() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"SeanRobertDH"},"content":"        Map\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"SeanRobertDH"},"content":"        Command delete \u003d new DeleteCommand(taskManager, arguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":172,"author":{"gitId":"SeanRobertDH"},"content":"        String result \u003d delete.executeCommand().getMessage();","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":174,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(delete.getUsageMessage(), result);","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":176,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":177,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":178,"author":{"gitId":"SeanRobertDH"},"content":"    void executeCommand_emptyTaskList_expectEmptyTaskListExceptionMessage() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":179,"author":{"gitId":"SeanRobertDH"},"content":"        Map\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(Command.MAIN_ARGUMENT, \"1\");","lastModifiedDate":"2021-10-18"},{"lineNumber":181,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"SeanRobertDH"},"content":"        Command delete \u003d new DeleteCommand(taskManager, arguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"SeanRobertDH"},"content":"        String result \u003d delete.executeCommand().getMessage();","lastModifiedDate":"2021-10-18"},{"lineNumber":184,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":185,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(new EmptyTasklistException().getMessage(), result);","lastModifiedDate":"2021-10-18"},{"lineNumber":186,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":187,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":188,"author":{"gitId":"SeanRobertDH"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":189,"author":{"gitId":"SeanRobertDH"},"content":"     * Message taken from {@link seedu.tp.command.DeleteCommand#INVALID_TASK_INDEX}.","lastModifiedDate":"2021-11-07"},{"lineNumber":190,"author":{"gitId":"SeanRobertDH"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":191,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":192,"author":{"gitId":"SeanRobertDH"},"content":"    void executeCommand_invalidInteger_expectDeleteClassNumberFormatExceptionMessage() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":193,"author":{"gitId":"SeanRobertDH"},"content":"        Map\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":195,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, \"3\");","lastModifiedDate":"2021-10-18"},{"lineNumber":196,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new TodoFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":197,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":198,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(Command.MAIN_ARGUMENT, \"1, 2, 3-4, blarg\");","lastModifiedDate":"2021-10-18"},{"lineNumber":199,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":200,"author":{"gitId":"SeanRobertDH"},"content":"        Command delete \u003d new DeleteCommand(taskManager, arguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":201,"author":{"gitId":"SeanRobertDH"},"content":"        String result \u003d delete.executeCommand().getMessage();","lastModifiedDate":"2021-10-18"},{"lineNumber":202,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":203,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(\"blarg is not an integer!\", result);","lastModifiedDate":"2021-10-18"},{"lineNumber":204,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":205,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":206,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":207,"author":{"gitId":"SeanRobertDH"},"content":"    void executeCommand_invalidTaskIndex_expectInvalidTaskIndexExceptionMessage() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":208,"author":{"gitId":"SeanRobertDH"},"content":"        Map\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":210,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, \"3\");","lastModifiedDate":"2021-10-18"},{"lineNumber":211,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new TodoFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":213,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(Command.MAIN_ARGUMENT, \"1, 2, 3-4\");","lastModifiedDate":"2021-10-18"},{"lineNumber":214,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":215,"author":{"gitId":"SeanRobertDH"},"content":"        Command delete \u003d new DeleteCommand(taskManager, arguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":216,"author":{"gitId":"SeanRobertDH"},"content":"        String result \u003d delete.executeCommand().getMessage();","lastModifiedDate":"2021-10-18"},{"lineNumber":217,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":218,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(new InvalidTaskIndexException(4).getMessage(), result);","lastModifiedDate":"2021-10-18"},{"lineNumber":219,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":220,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":221,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":222,"author":{"gitId":"SeanRobertDH"},"content":"    void executeCommand_validSingleInputAfterListing_expectTaskDeleted() throws Exception {","lastModifiedDate":"2021-10-28"},{"lineNumber":223,"author":{"gitId":"SeanRobertDH"},"content":"        Map\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-28"},{"lineNumber":224,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":225,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, \"1\");","lastModifiedDate":"2021-10-28"},{"lineNumber":226,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.START_DATE, VALID_DATE1);","lastModifiedDate":"2021-10-28"},{"lineNumber":227,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.END_DATE, VALID_DATE2);","lastModifiedDate":"2021-10-28"},{"lineNumber":228,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new EventFactory(arguments).getTask());","lastModifiedDate":"2021-10-28"},{"lineNumber":229,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":230,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, \"2\");","lastModifiedDate":"2021-10-28"},{"lineNumber":231,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(DeadlineFlag.DUE_DATE, VALID_DATE1);","lastModifiedDate":"2021-10-28"},{"lineNumber":232,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new DeadlineFactory(arguments).getTask());","lastModifiedDate":"2021-10-28"},{"lineNumber":233,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":234,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, \"3\");","lastModifiedDate":"2021-10-28"},{"lineNumber":235,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new TodoFactory(arguments).getTask());","lastModifiedDate":"2021-10-28"},{"lineNumber":236,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, \"4\");","lastModifiedDate":"2021-10-28"},{"lineNumber":237,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new TodoFactory(arguments).getTask());","lastModifiedDate":"2021-10-28"},{"lineNumber":238,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, TO_DELETE);","lastModifiedDate":"2021-10-28"},{"lineNumber":239,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.PRIORITY, PriorityEnum.LOW.toString());","lastModifiedDate":"2021-10-28"},{"lineNumber":240,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new TodoFactory(arguments).getTask());","lastModifiedDate":"2021-10-28"},{"lineNumber":241,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":242,"author":{"gitId":"SeanRobertDH"},"content":"        Map\u003cString, String\u003e listArguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-28"},{"lineNumber":243,"author":{"gitId":"SeanRobertDH"},"content":"        listArguments.put(ListFlag.PRIORITY, PriorityEnum.LOW.toString());","lastModifiedDate":"2021-10-28"},{"lineNumber":244,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":245,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(Command.MAIN_ARGUMENT, \"   1\");","lastModifiedDate":"2021-10-28"},{"lineNumber":246,"author":{"gitId":"SeanRobertDH"},"content":"        new ListCommand(taskManager, listArguments).executeCommand();","lastModifiedDate":"2021-10-28"},{"lineNumber":247,"author":{"gitId":"SeanRobertDH"},"content":"        new DeleteCommand(taskManager, arguments).executeCommand();","lastModifiedDate":"2021-10-28"},{"lineNumber":248,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":249,"author":{"gitId":"SeanRobertDH"},"content":"        assertFalse(taskManager.listTasklistWithFilter(new HashMap\u003c\u003e()).contains(TO_DELETE));","lastModifiedDate":"2021-10-28"},{"lineNumber":250,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":251,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":252,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":253,"author":{"gitId":"SeanRobertDH"},"content":"    void executeCommand_validMultiInputAfterListing_expectTaskDeleted() throws Exception {","lastModifiedDate":"2021-10-28"},{"lineNumber":254,"author":{"gitId":"SeanRobertDH"},"content":"        Map\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-28"},{"lineNumber":255,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":256,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.PRIORITY, PriorityEnum.LOW.toString());","lastModifiedDate":"2021-10-28"},{"lineNumber":257,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, \"1\");","lastModifiedDate":"2021-10-28"},{"lineNumber":258,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.START_DATE, VALID_DATE1);","lastModifiedDate":"2021-10-28"},{"lineNumber":259,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.END_DATE, VALID_DATE2);","lastModifiedDate":"2021-10-28"},{"lineNumber":260,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new EventFactory(arguments).getTask());","lastModifiedDate":"2021-10-28"},{"lineNumber":261,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":262,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.remove(EventFlag.PRIORITY);","lastModifiedDate":"2021-10-28"},{"lineNumber":263,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, \"2\");","lastModifiedDate":"2021-10-28"},{"lineNumber":264,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(DeadlineFlag.DUE_DATE, VALID_DATE1);","lastModifiedDate":"2021-10-28"},{"lineNumber":265,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new DeadlineFactory(arguments).getTask());","lastModifiedDate":"2021-10-28"},{"lineNumber":266,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":267,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, \"3\");","lastModifiedDate":"2021-10-28"},{"lineNumber":268,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new TodoFactory(arguments).getTask());","lastModifiedDate":"2021-10-28"},{"lineNumber":269,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, \"4\");","lastModifiedDate":"2021-10-28"},{"lineNumber":270,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new TodoFactory(arguments).getTask());","lastModifiedDate":"2021-10-28"},{"lineNumber":271,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":272,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, TO_DELETE);","lastModifiedDate":"2021-10-28"},{"lineNumber":273,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.PRIORITY, PriorityEnum.LOW.toString());","lastModifiedDate":"2021-10-28"},{"lineNumber":274,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(new TodoFactory(arguments).getTask());","lastModifiedDate":"2021-10-28"},{"lineNumber":275,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":276,"author":{"gitId":"SeanRobertDH"},"content":"        Map\u003cString, String\u003e listArguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-28"},{"lineNumber":277,"author":{"gitId":"SeanRobertDH"},"content":"        listArguments.put(ListFlag.PRIORITY, PriorityEnum.LOW.toString());","lastModifiedDate":"2021-10-28"},{"lineNumber":278,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":279,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(Command.MAIN_ARGUMENT, \"   1 -  2\");","lastModifiedDate":"2021-10-28"},{"lineNumber":280,"author":{"gitId":"SeanRobertDH"},"content":"        new ListCommand(taskManager, listArguments).executeCommand();","lastModifiedDate":"2021-10-28"},{"lineNumber":281,"author":{"gitId":"SeanRobertDH"},"content":"        new DeleteCommand(taskManager, arguments).executeCommand();","lastModifiedDate":"2021-10-28"},{"lineNumber":282,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":283,"author":{"gitId":"SeanRobertDH"},"content":"        assertFalse(taskManager.listTasklistWithFilter(new HashMap\u003c\u003e()).contains(TO_DELETE));","lastModifiedDate":"2021-10-28"},{"lineNumber":284,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":285,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":286,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"SuibianP":2,"SeanRobertDH":284}},{"path":"src/test/java/seedu/tp/command/ReminderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.command;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"Xuefei2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.Task;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.taskmanager.TaskManager;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Xuefei2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Xuefei2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Xuefei2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"Xuefei2001"},"content":"public class ReminderCommandTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"Xuefei2001"},"content":"    private ArrayList\u003cString\u003e expectedOut \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"Xuefei2001"},"content":"    TaskManager taskManager \u003d new TaskManager();","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Xuefei2001"},"content":"    Task todoReminder;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Xuefei2001"},"content":"    Task todoNoReminder;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"Xuefei2001"},"content":"    Task deadline;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"Xuefei2001"},"content":"    Task event;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"Xuefei2001"},"content":"    private static final String DATE1 \u003d \"2021-10-30T02:00\";","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"Xuefei2001"},"content":"    private static final String DATE2 \u003d \"2021-10-30T05:00\";","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"Xuefei2001"},"content":"    LocalDateTime startDate \u003d LocalDateTime.parse(DATE1);","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"Xuefei2001"},"content":"    LocalDateTime endDate \u003d LocalDateTime.parse(DATE2);","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"Xuefei2001"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"Xuefei2001"},"content":"    void executeCommandTest() throws Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"        /*","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"Xuefei2001"},"content":"        todoReminder \u003d new Todo(\"go jogging\", PriorityEnum.LOW, startDate, RecurrenceEnum.DAILY);","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"Xuefei2001"},"content":"        todoNoReminder \u003d new Todo(\"go jogging\");","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"Xuefei2001"},"content":"        deadline \u003d new Deadline(\"return book\", startDate, RecurrenceEnum.WEEKLY);","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"Xuefei2001"},"content":"        event \u003d new Event(\"project meeting\", startDate, endDate, RecurrenceEnum.MONTHLY);","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"Xuefei2001"},"content":"        taskManager.addTask(todoReminder);","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"Xuefei2001"},"content":"        taskManager.addTask(todoNoReminder);","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"Xuefei2001"},"content":"        taskManager.addTask(deadline);","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"Xuefei2001"},"content":"        taskManager.addTask(event);","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"Xuefei2001"},"content":"        Map\u003cString, String\u003e arguments1 \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"Xuefei2001"},"content":"        arguments1.put(Command.MAIN_ARGUMENT, \"1\");","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"Xuefei2001"},"content":"        arguments1.put(ReminderFlag.REMINDER_MESSAGE, \"HEY!\");","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"Xuefei2001"},"content":"        Command customize1 \u003d new ReminderCommand(taskManager, arguments1);","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"Xuefei2001"},"content":"        customize1.executeCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"Xuefei2001"},"content":"        Map\u003cString, String\u003e arguments2 \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"Xuefei2001"},"content":"        arguments2.put(Command.MAIN_ARGUMENT, \"2\");","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"Xuefei2001"},"content":"        arguments2.put(ReminderFlag.REMINDER_MESSAGE, \"HEY!\");","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"Xuefei2001"},"content":"        Command customize2 \u003d new ReminderCommand(taskManager, arguments2);","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"Xuefei2001"},"content":"        customize2.executeCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"Xuefei2001"},"content":"        Map\u003cString, String\u003e arguments3 \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"Xuefei2001"},"content":"        arguments3.put(Command.MAIN_ARGUMENT, \"3\");","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"Xuefei2001"},"content":"        arguments3.put(ReminderFlag.REMINDER_MESSAGE, \"HEY!\");","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"Xuefei2001"},"content":"        arguments3.put(ReminderFlag.TIME_AHEAD, \"15\");","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"Xuefei2001"},"content":"        Command customize3 \u003d new ReminderCommand(taskManager, arguments3);","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"Xuefei2001"},"content":"        customize3.executeCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"Xuefei2001"},"content":"        Map\u003cString, String\u003e arguments4 \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"Xuefei2001"},"content":"        arguments4.put(Command.MAIN_ARGUMENT, \"5\");","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"Xuefei2001"},"content":"        arguments4.put(ReminderFlag.REMINDER_MESSAGE, \"HEY!\");","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"Xuefei2001"},"content":"        arguments4.put(ReminderFlag.TIME_AHEAD, \"15\");","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"Xuefei2001"},"content":"        Command customize4 \u003d new ReminderCommand(taskManager, arguments4);","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"Xuefei2001"},"content":"        customize4.executeCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"Xuefei2001"},"content":"        expectedOut.add(\"todo|go jogging|2021-10-30T02:00|low|daily|\"","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"Xuefei2001"},"content":"                + \"10|HEY!\");","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"Xuefei2001"},"content":"        expectedOut.add(\"todo|go jogging|null|medium|none|null|null\");","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"Xuefei2001"},"content":"        expectedOut.add(\"deadline|return book|2021-10-30T02:00|medium|weekly|\"","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"Xuefei2001"},"content":"                + \"15|HEY!\");","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"Xuefei2001"},"content":"        expectedOut.add(\"event|project meeting|2021-10-30T02:00|2021-10-30T05:00|medium|monthly|\"","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"Xuefei2001"},"content":"                + \"10|Reminder! 10 min before the following task:\");","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"Xuefei2001"},"content":"        assertEquals(expectedOut, results);","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"SeanRobertDH"},"content":"        */","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"Xuefei2001"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"SeanRobertDH":5,"Xuefei2001":69}},{"path":"src/test/java/seedu/tp/local/DataManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.local;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"Xuefei2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Xuefei2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Xuefei2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.Task;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"Xuefei2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"Xuefei2001"},"content":"public class DataManagerTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"Xuefei2001"},"content":"    private ArrayList\u003cString\u003e expectedOut \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"Xuefei2001"},"content":"    Task todoReminder;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"Xuefei2001"},"content":"    Task todoNoReminder;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"Xuefei2001"},"content":"    Task deadline;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"Xuefei2001"},"content":"    Task event;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"Xuefei2001"},"content":"    private static final String DATE1 \u003d \"2021-10-30T02:00\";","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"Xuefei2001"},"content":"    private static final String DATE2 \u003d \"2021-10-30T05:00\";","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"Xuefei2001"},"content":"    LocalDateTime startDate \u003d LocalDateTime.parse(DATE1);","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"Xuefei2001"},"content":"    LocalDateTime endDate \u003d LocalDateTime.parse(DATE2);","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"Xuefei2001"},"content":"    DataManagerTest(){","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"Xuefei2001"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"Xuefei2001"},"content":"    void getStringLineList() {","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"        /*","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"Xuefei2001"},"content":"        todoReminder \u003d new Todo(\"go jogging\",PriorityEnum.LOW, startDate, RecurrenceEnum.DAILY);","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"Xuefei2001"},"content":"        todoNoReminder \u003d new Todo(\"go jogging\");","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"Xuefei2001"},"content":"        deadline \u003d new Deadline(\"return book\", startDate, RecurrenceEnum.WEEKLY);","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"Xuefei2001"},"content":"        event \u003d new Event(\"project meeting\", startDate, endDate, RecurrenceEnum.MONTHLY);","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"Xuefei2001"},"content":"        expectedOut.add(\"todo|go jogging|2021-10-30T02:00|low|daily|\"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"Xuefei2001"},"content":"                + \"10|Reminder! 10 min before the following task:\");","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"Xuefei2001"},"content":"        expectedOut.add(\"todo|go jogging|null|medium|none|null|null\");","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"Xuefei2001"},"content":"        expectedOut.add(\"deadline|return book|2021-10-30T02:00|medium|weekly|\"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"Xuefei2001"},"content":"                + \"10|Reminder! 10 min before the following task:\");","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"Xuefei2001"},"content":"        expectedOut.add(\"event|project meeting|2021-10-30T02:00|2021-10-30T05:00|medium|monthly|\"","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"Xuefei2001"},"content":"                + \"10|Reminder! 10 min before the following task:\");","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"Xuefei2001"},"content":"        ArrayList\u003cString\u003e results \u003d DataManager.getStringLineList();","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"Xuefei2001"},"content":"        assertEquals(expectedOut, results);","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"SeanRobertDH"},"content":"        */","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"Xuefei2001"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"SeanRobertDH":4,"Xuefei2001":44}},{"path":"src/test/java/seedu/tp/nusmods/NusModsParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.nusmods;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"SuibianP"},"content":"import org.apache.commons.io.FileUtils;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"SuibianP"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.GetTaskFailedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SuibianP"},"content":"import seedu.tp.exception.NoSuchModuleException;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.type.Lesson;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"SuibianP"},"content":"import java.io.File;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"SuibianP"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"SuibianP"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"SuibianP"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"SuibianP"},"content":"class NusModsParserTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"SuibianP"},"content":"    NusModsParser parser \u003d new NusModsParser();","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"SuibianP"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"SuibianP"},"content":"    void getModuleEvents_CS2113T_success() throws GetTaskFailedException, NoSuchModuleException {","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"SuibianP"},"content":"        Lesson[] moduleLessons \u003d parser.getLessons(\"CS2113T\", \"C02\");","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"SuibianP"},"content":"        for (Lesson moduleLesson : moduleLessons) {","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"SuibianP"},"content":"            System.out.println(moduleLesson.getTaskEntryDescription());","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"SuibianP"},"content":"        assertEquals(4, moduleLessons.length);","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"SuibianP"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"SuibianP"},"content":"    void getModuleEvents_noNetworkAndNoLocalCache_failure() {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"SuibianP"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"SuibianP"},"content":"            try {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"SuibianP"},"content":"                FileUtils.deleteDirectory(new File(NusModsParser.CACHEDIR)); // remove local cache if existing","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"SuibianP"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"SuibianP"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"SuibianP"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"SuibianP"},"content":"            System.setProperty(\"https.proxyHost\", \"localhost\"); // simulate network down","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"SuibianP"},"content":"            assertThrows(GetTaskFailedException.class,","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"SuibianP"},"content":"                () -\u003e parser.getLessons(\"CS2113T\", \"C02\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"SuibianP"},"content":"        } finally {","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"SuibianP"},"content":"            System.clearProperty(\"https.proxyHost\"); // revive network regardlessly","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"SuibianP"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"SuibianP"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"SuibianP"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"APZH":3,"SuibianP":38,"SeanRobertDH":3}},{"path":"src/test/java/seedu/tp/parser/CommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.parser;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"APZH"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"APZH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"APZH"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"SuibianP"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"APZH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"class CommandParserTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"SuibianP"},"content":"    private static Map\u003cString, String\u003e commandOptions \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"APZH"},"content":"    private final String commandArguments \u003d \"cs2113 tp project --type deadline --start 22-09-2021\"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"APZH"},"content":"            + \" --end 29-09-2021 --recur weekly --priority 2\";","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"APZH"},"content":"    private final String expectedSplit \u003d \"start \u003d 22-09-2021\\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"APZH"},"content":"            + \"recur \u003d weekly\\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"APZH"},"content":"            + \"end \u003d 29-09-2021\\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"APZH"},"content":"            + \"type \u003d deadline\\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"APZH"},"content":"            + \"priority \u003d 2\\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"APZH"},"content":"            + \"mainArgument \u003d cs2113 tp project\\n\";","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"APZH"},"content":"    // Used to debug and check the whether the user command mapping of flag-\u003evalue works","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"APZH"},"content":"    public static String printCommandOptions(Map\u003cString, String\u003e commandOptions) {","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"APZH"},"content":"        String flagsToArguments \u003d \"\";","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"APZH"},"content":"        for (String flag : commandOptions.keySet()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"APZH"},"content":"            flagsToArguments +\u003d flag + \" \u003d \" + commandOptions.get(flag) + \"\\n\";","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"APZH"},"content":"        System.out.println(flagsToArguments);","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"APZH"},"content":"        return flagsToArguments;","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"APZH"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"APZH"},"content":"    @DisplayName(\"When we check the command is able to split all fields properly\")","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"APZH"},"content":"    void parse_commandArguments_checkIfSplitCorrectly() {","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"APZH"},"content":"        commandOptions \u003d CommandParser.getCommandOptions(commandArguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"APZH"},"content":"        assertEquals(expectedSplit, printCommandOptions(commandOptions));","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"APZH"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"APZH":43,"SuibianP":2,"SeanRobertDH":2}},{"path":"src/test/java/seedu/tp/parser/DateParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.parser;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.ParseDateFailedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"//@@author SeanRobertDH","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"class DateParserTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"    void getStringAsDate_validArguments0_expectLocalDateTime() throws ParseDateFailedException {","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"        LocalDateTime dateTime \u003d DateParser.stringToDate(\"10-04-2021 03:29\");","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(10, dateTime.getDayOfMonth());","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(4, dateTime.getMonthValue());","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(2021, dateTime.getYear());","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(3, dateTime.getHour());","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(29, dateTime.getMinute());","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"    void getStringAsDate_validArguments1_expectLocalDateTime() throws ParseDateFailedException {","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"        LocalDateTime dateTime \u003d DateParser.stringToDate(\"10-04-23 03\");","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(10, dateTime.getDayOfMonth());","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(4, dateTime.getMonthValue());","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(2023, dateTime.getYear());","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(3, dateTime.getHour());","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(0, dateTime.getMinute());","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"    void getStringAsDate_validArguments2_expectLocalDateTime() throws ParseDateFailedException {","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"        LocalDateTime dateTime \u003d DateParser.stringToDate(\"10-04 03\");","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(10, dateTime.getDayOfMonth());","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(4, dateTime.getMonthValue());","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(LocalDateTime.now().getYear(), dateTime.getYear());","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(3, dateTime.getHour());","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(0, dateTime.getMinute());","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"SeanRobertDH"},"content":"    void getStringAsDate_validArguments3_expectLocalDateTime() throws ParseDateFailedException {","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"SeanRobertDH"},"content":"        LocalDateTime dateTime \u003d DateParser.stringToDate(\"3 03:29\");","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(3, dateTime.getDayOfMonth());","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(LocalDateTime.now().getMonthValue(), dateTime.getMonthValue());","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(LocalDateTime.now().getYear(), dateTime.getYear());","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(3, dateTime.getHour());","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(29, dateTime.getMinute());","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"SeanRobertDH"},"content":"    void getStringAsDate_validArguments4_expectLocalDateTime() throws ParseDateFailedException {","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"SeanRobertDH"},"content":"        LocalDateTime dateTime \u003d DateParser.stringToDate(\"03:29\");","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(LocalDateTime.now().getDayOfMonth(), dateTime.getDayOfMonth());","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(LocalDateTime.now().getMonthValue(), dateTime.getMonthValue());","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(LocalDateTime.now().getYear(), dateTime.getYear());","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(3, dateTime.getHour());","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(29, dateTime.getMinute());","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"SeanRobertDH"},"content":"    void getStringAsDate_validArgumentsWithDifferentFormat0_expectLocalDateTime() throws ParseDateFailedException {","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"SeanRobertDH"},"content":"        LocalDateTime dateTime \u003d DateParser.stringToDate(\"10/4/2021    03:29\");","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(10, dateTime.getDayOfMonth());","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(4, dateTime.getMonthValue());","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(2021, dateTime.getYear());","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(3, dateTime.getHour());","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(29, dateTime.getMinute());","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"SeanRobertDH"},"content":"    void getStringAsDate_validArgumentsWithDifferentFormat1_expectLocalDateTime() throws ParseDateFailedException {","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"SeanRobertDH"},"content":"        LocalDateTime dateTime \u003d DateParser.stringToDate(\"10|4|03      03.29\");","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(10, dateTime.getDayOfMonth());","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(4, dateTime.getMonthValue());","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(2003, dateTime.getYear());","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(3, dateTime.getHour());","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(29, dateTime.getMinute());","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"SeanRobertDH"},"content":"    void getStringAsDate_invalidArguments0_expectParseDateFailedException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"SeanRobertDH"},"content":"        assertThrows(ParseDateFailedException.class,","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"SeanRobertDH"},"content":"            () -\u003e DateParser.stringToDate(\"10-69-2021 03:29\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"SeanRobertDH"},"content":"    void getStringAsDate_invalidDate_expectDateCorrected() throws ParseDateFailedException {","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"SeanRobertDH"},"content":"        LocalDateTime dateTime \u003d DateParser.stringToDate(\"29-2-2021 03:29\");","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(28, dateTime.getDayOfMonth());","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(2, dateTime.getMonthValue());","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(2021, dateTime.getYear());","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(3, dateTime.getHour());","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(29, dateTime.getMinute());","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"SeanRobertDH":101}},{"path":"src/test/java/seedu/tp/task/PriorityEnumTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.task;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.InvalidPriorityException;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"//@@author SeanRobertDH","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"class PriorityEnumTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"    void getEnum_validInputs_expectPriorityEnum() throws InvalidPriorityException {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(PriorityEnum.HIGH, PriorityEnum.getPriority(2));","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(PriorityEnum.MEDIUM, PriorityEnum.getPriority(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(PriorityEnum.LOW, PriorityEnum.getPriority(0));","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"    void getEnum_invalidInputs_expectPriorityEnumDoesNotExistException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"        assertThrows(InvalidPriorityException.class,","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"            () -\u003e PriorityEnum.getPriority(-1));","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"        assertThrows(InvalidPriorityException.class,","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"            () -\u003e PriorityEnum.getPriority(10));","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"SeanRobertDH":25}},{"path":"src/test/java/seedu/tp/task/RecurrenceEnumTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.task;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"SeanRobertDH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.ParseDateFailedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.parser.DateParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"//@@author SeanRobertDH","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"class RecurrenceEnumTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"    void getNextNRecurredDates_validDate_expectRecurredDate() throws ParseDateFailedException {","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"        LocalDateTime dateTime \u003d DateParser.stringToDate(\"10-04-2021 03:29\");","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"        List\u003cLocalDateTime\u003e recurred \u003d RecurrenceEnum.NONE.getNextNRecurredDates(dateTime, 1);","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(0, recurred.size());","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"        recurred \u003d RecurrenceEnum.DAILY.getNextNRecurredDates(dateTime, 1);","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(DateParser.stringToDate(\"11-04-2021 03:29\"), recurred.get(0));","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"        recurred \u003d RecurrenceEnum.WEEKLY.getNextNRecurredDates(dateTime, 1);","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(DateParser.stringToDate(\"17-04-2021 03:29\"), recurred.get(0));","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"        recurred \u003d RecurrenceEnum.MONTHLY.getNextNRecurredDates(dateTime, 1);","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(DateParser.stringToDate(\"10-05-2021 03:29\"), recurred.get(0));","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"        recurred \u003d RecurrenceEnum.YEARLY.getNextNRecurredDates(dateTime, 1);","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(DateParser.stringToDate(\"10-04-2022 03:29\"), recurred.get(0));","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"    void getNextNRecurredDates_monthlyRecurredJan_expectFeb28() throws ParseDateFailedException {","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"        LocalDateTime dateTime \u003d DateParser.stringToDate(\"30-01-2021 03:29\");","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"        List\u003cLocalDateTime\u003e recurred \u003d RecurrenceEnum.MONTHLY.getNextNRecurredDates(dateTime, 1);","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(DateParser.stringToDate(\"28-02-2021 03:29\"), recurred.get(0));","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"SeanRobertDH"},"content":"    void getNextNRecurredDates_yearlyRecurredLeapYear_expectFeb28() throws ParseDateFailedException {","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"SeanRobertDH"},"content":"        LocalDateTime dateTime \u003d DateParser.stringToDate(\"29-02-2020 03:29\");","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"SeanRobertDH"},"content":"        List\u003cLocalDateTime\u003e recurred \u003d RecurrenceEnum.YEARLY.getNextNRecurredDates(dateTime, 1);","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(DateParser.stringToDate(\"28-02-2021 03:29\"), recurred.get(0));","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"SeanRobertDH"},"content":"    void getNextNRecurredDates_monthlyRecurred_expectRecurredDates() throws ParseDateFailedException {","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"SeanRobertDH"},"content":"        LocalDateTime dateTime \u003d DateParser.stringToDate(\"31-01-2020 03:29\");","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"SeanRobertDH"},"content":"        List\u003cLocalDateTime\u003e recurred \u003d RecurrenceEnum.MONTHLY.getNextNRecurredDates(dateTime, 3);","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(DateParser.stringToDate(\"29-02-2020 03:29\"), recurred.get(0));","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(DateParser.stringToDate(\"31-03-2020 03:29\"), recurred.get(1));","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(DateParser.stringToDate(\"30-04-2020 03:29\"), recurred.get(2));","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"SeanRobertDH"},"content":"    void getNextRecurredDate_monthlyRecurred_expectRecurredDates() throws ParseDateFailedException {","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"SeanRobertDH"},"content":"        LocalDateTime dateTime \u003d DateParser.stringToDate(\"15-01-2020 03:29\");","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"SeanRobertDH"},"content":"        LocalDateTime nextDateTime \u003d RecurrenceEnum.MONTHLY.getNextRecurredDate(dateTime);","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(15, nextDateTime.getDayOfMonth());","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"SeanRobertDH"},"content":"        assertFalse(nextDateTime.isBefore(LocalDateTime.now()));","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"SeanRobertDH":63}},{"path":"src/test/java/seedu/tp/task/TaskManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.task;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"APZH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"APZH"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"APZH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.ParseDateFailedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.parser.DateParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.taskmanager.TaskManager;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.type.Deadline;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.type.Event;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.type.Todo;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"APZH"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"SuibianP"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"APZH"},"content":"class TaskManagerTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"APZH"},"content":"    Task newToDo1;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"APZH"},"content":"    Task newDeadline1;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"APZH"},"content":"    Task newEvent1;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"APZH"},"content":"    Task newToDo2;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"APZH"},"content":"    Task newDeadline2;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"APZH"},"content":"    Task newEvent2;","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String VALID_DATE1 \u003d \"22-10-2021 02:00\";","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String VALID_DATE2 \u003d \"22-10-2021 05:00\";","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"APZH"},"content":"    private TaskManagerTest() throws ParseDateFailedException {","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"APZH"},"content":"        taskManager \u003d new TaskManager();","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"APZH"},"content":"        LocalDateTime startDate \u003d DateParser.stringToDate(VALID_DATE1);","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"APZH"},"content":"        LocalDateTime endDate \u003d DateParser.stringToDate(VALID_DATE2);","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"APZH"},"content":"        newToDo1 \u003d new Todo(\"read book\", PriorityEnum.LOW, startDate, RecurrenceEnum.DAILY);","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"APZH"},"content":"        newDeadline1 \u003d new Deadline(\"return book\", startDate, PriorityEnum.MEDIUM, RecurrenceEnum.WEEKLY);","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"APZH"},"content":"        newEvent1 \u003d new Event(\"project meeting\", startDate, endDate, PriorityEnum.HIGH, RecurrenceEnum.MONTHLY);","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"APZH"},"content":"        newToDo2 \u003d new Todo(\"buy groceries\", PriorityEnum.MEDIUM, startDate, RecurrenceEnum.WEEKLY);","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"APZH"},"content":"        newDeadline2 \u003d new Deadline(\"project submission\", startDate, PriorityEnum.HIGH, RecurrenceEnum.MONTHLY);","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"APZH"},"content":"        newEvent2 \u003d new Event(\"watch movie\", startDate, endDate, PriorityEnum.LOW, RecurrenceEnum.DAILY);","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"APZH"},"content":"        taskManager.addTask(newEvent1);","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"APZH"},"content":"        taskManager.addTask(newToDo1);","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"APZH"},"content":"        taskManager.addTask(newDeadline1);","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"APZH"},"content":"        taskManager.addTask(newEvent2);","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"APZH"},"content":"        taskManager.addTask(newToDo2);","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"APZH"},"content":"        taskManager.addTask(newDeadline2);","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"APZH"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"APZH"},"content":"    void testListTasklistWithFilterFormat() {","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"APZH"},"content":"        Map\u003cString, String\u003e listArguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"APZH"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"APZH"},"content":"            System.out.println(\"testListTasklistFormat\");","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"APZH"},"content":"            System.out.println(taskManager.listTasklistWithFilter(listArguments));","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"APZH"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"APZH"},"content":"            System.out.println(e);","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"APZH"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"APZH"},"content":"    void listTasklistWithFilter_ThrowsException_IfInvalidFlagEntered() {","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"APZH"},"content":"        String expectedErrorMessage \u003d \"[!] Your list command is wrong...\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"APZH"},"content":"                + \"Please follow one of the formats below:\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"APZH"},"content":"                + \"-\u003e list\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"APZH"},"content":"                + \"-\u003e list --[type, priority, recur] \u003cargument\u003e\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"APZH"},"content":"                + \"-\u003e list \u003ctask id\u003e\";","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"APZH"},"content":"        Map\u003cString, String\u003e listArguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"APZH"},"content":"        listArguments.put(\"invalid_flag\", \"dummy_value\");","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"APZH"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"APZH"},"content":"            System.out.println(\"listTasklistWithFilter_ThrowsException_IfInvalidFlagEntered\");","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"APZH"},"content":"            taskManager.listTasklistWithFilter(listArguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"APZH"},"content":"            fail(); // the test should not reach here","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"APZH"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"APZH"},"content":"            assertEquals(expectedErrorMessage, e.toString());","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"APZH"},"content":"            System.out.println(\"ListFormatException caught\");","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"APZH"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"APZH"},"content":"    void listTasklistWithFilter_ThrowsException_IfMissingFilterArgumentWithValidTaskTypeFlag() {","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"APZH"},"content":"        String expectedErrorMessage \u003d \"[!] One of your filter\u0027s is missing an argument...\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"APZH"},"content":"                + \"Please follow the format: list or list --[type, priority, recur] \u003cargument\u003e\";","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"APZH"},"content":"        Map\u003cString, String\u003e listArguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"APZH"},"content":"        listArguments.put(\"type\", \"\");","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"APZH"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"APZH"},"content":"            System.out.println(\"listTasklistWithFilter_ThrowsException_IfMissingFilterArgumentWithValidTaskTypeFlag\");","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"APZH"},"content":"            taskManager.listTasklistWithFilter(listArguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"APZH"},"content":"            fail(); // the test should not reach here","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"APZH"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"APZH"},"content":"            assertEquals(expectedErrorMessage, e.toString());","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"APZH"},"content":"            System.out.println(\"MissingFilterArgumentException caught\");","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"APZH"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"APZH"},"content":"    void listTasklistWithFilter_ThrowsException_IfMissingFilterArgumentWithValidPriorityFlag() {","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"APZH"},"content":"        String expectedErrorMessage \u003d \"[!] One of your filter\u0027s is missing an argument...\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"APZH"},"content":"                + \"Please follow the format: list or list --[type, priority, recur] \u003cargument\u003e\";","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"APZH"},"content":"        Map\u003cString, String\u003e listArguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"APZH"},"content":"        listArguments.put(\"priority\", \"\");","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"APZH"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"APZH"},"content":"            System.out.println(\"listTasklistWithFilter_ThrowsException_IfMissingFilterArgumentWithValidPriorityFlag\");","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"APZH"},"content":"            taskManager.listTasklistWithFilter(listArguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"APZH"},"content":"            fail(); // the test should not reach here","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"APZH"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"APZH"},"content":"            assertEquals(expectedErrorMessage, e.toString());","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"APZH"},"content":"            System.out.println(\"MissingFilterArgumentException caught\");","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"APZH"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"APZH"},"content":"    void listTasklistWithFilter_ThrowsException_IfMissingFilterArgumentWithValidRecurrenceFlag() {","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"APZH"},"content":"        String expectedErrorMessage \u003d \"[!] One of your filter\u0027s is missing an argument...\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"APZH"},"content":"                + \"Please follow the format: list or list --[type, priority, recur] \u003cargument\u003e\";","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"APZH"},"content":"        Map\u003cString, String\u003e listArguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"APZH"},"content":"        listArguments.put(\"recur\", \"\");","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"APZH"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"APZH"},"content":"            System.out.println(\"listTasklistWithFilter_ThrowsException_IfMissingFilterArgumentWithValidRecurrenceFlag\");","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"APZH"},"content":"            taskManager.listTasklistWithFilter(listArguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"APZH"},"content":"            fail(); // the test should not reach here","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"APZH"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"APZH"},"content":"            assertEquals(expectedErrorMessage, e.toString());","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"APZH"},"content":"            System.out.println(\"MissingFilterArgumentException caught\");","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"APZH"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"APZH"},"content":"    void listTasklistWithFilter_ThrowsException_IfInvalidFilterArgumentWithValidTaskTypeFlag() {","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"APZH"},"content":"        String expectedErrorMessage \u003d \"[!] The task type you entered is not valid...\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"APZH"},"content":"                + \"The following are examples of valid task types: {Todo, Deadline, Event, Lesson}\";","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"APZH"},"content":"        Map\u003cString, String\u003e listArguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"APZH"},"content":"        listArguments.put(\"type\", \"invalid_type\");","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"APZH"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":157,"author":{"gitId":"APZH"},"content":"            System.out.println(\"listTasklistWithFilter_ThrowsException_IfInvalidFilterArgumentWithValidTaskTypeFlag\");","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"APZH"},"content":"            taskManager.listTasklistWithFilter(listArguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"APZH"},"content":"            fail(); // the test should not reach here","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"APZH"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"APZH"},"content":"            assertEquals(expectedErrorMessage, e.toString());","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"APZH"},"content":"            System.out.println(\"InvalidTaskTypeException caught\");","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"APZH"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"APZH"},"content":"    void listTasklistWithFilter_ThrowsException_IfInvalidFilterArgumentWithValidPriorityFlag() {","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"APZH"},"content":"        String expectedErrorMessage \u003d \"[!] The priority you entered is not valid...\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"APZH"},"content":"                + \"The following are examples of valid priorities: {Low, Medium, High}\";","lastModifiedDate":"2021-10-27"},{"lineNumber":172,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":173,"author":{"gitId":"APZH"},"content":"        Map\u003cString, String\u003e listArguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"APZH"},"content":"        listArguments.put(\"priority\", \"invalid_priority\");","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"APZH"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"APZH"},"content":"            System.out.println(\"listTasklistWithFilter_ThrowsException_IfInvalidFilterArgumentWithValidPriorityFlag\");","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"APZH"},"content":"            taskManager.listTasklistWithFilter(listArguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"APZH"},"content":"            fail(); // the test should not reach here","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"APZH"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":181,"author":{"gitId":"APZH"},"content":"            assertEquals(expectedErrorMessage, e.toString());","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"APZH"},"content":"            System.out.println(\"InvalidPriorityException caught\");","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":184,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":185,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"APZH"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":188,"author":{"gitId":"APZH"},"content":"    void listTasklistWithFilter_ThrowsException_IfInvalidFilterArgumentWithValidRecurrenceFlag() {","lastModifiedDate":"2021-10-27"},{"lineNumber":189,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":190,"author":{"gitId":"APZH"},"content":"        String expectedErrorMessage \u003d \"[!] The recurrence you entered is not valid...\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":191,"author":{"gitId":"APZH"},"content":"                + \"The following are examples of valid recurrence: {None, Daily, Weekly, Monthly, Yearly}\";","lastModifiedDate":"2021-10-27"},{"lineNumber":192,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":193,"author":{"gitId":"APZH"},"content":"        Map\u003cString, String\u003e listArguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"APZH"},"content":"        listArguments.put(\"recur\", \"invalid_recurrence\");","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":196,"author":{"gitId":"APZH"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":197,"author":{"gitId":"APZH"},"content":"            System.out.println(\"listTasklistWithFilter_ThrowsException_IfInvalidFilterArgumentWithValidRecurrenceFlag\");","lastModifiedDate":"2021-10-27"},{"lineNumber":198,"author":{"gitId":"APZH"},"content":"            taskManager.listTasklistWithFilter(listArguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"APZH"},"content":"            fail(); // the test should not reach here","lastModifiedDate":"2021-10-27"},{"lineNumber":200,"author":{"gitId":"APZH"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":201,"author":{"gitId":"APZH"},"content":"            assertEquals(expectedErrorMessage, e.toString());","lastModifiedDate":"2021-10-27"},{"lineNumber":202,"author":{"gitId":"APZH"},"content":"            System.out.println(\"InvalidRecurrenceException caught\");","lastModifiedDate":"2021-10-27"},{"lineNumber":203,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":204,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":206,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-27"},{"lineNumber":207,"author":{"gitId":"APZH"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":208,"author":{"gitId":"APZH"},"content":"    void testListTaskRecurrenceFormat() {","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"APZH"},"content":"        Map\u003cString, String\u003e listArguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"APZH"},"content":"        listArguments.put(\"mainArgument\", \"1\");","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"APZH"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"APZH"},"content":"            System.out.println(\"testListTaskRecurrenceFormat\");","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"APZH"},"content":"            System.out.println(taskManager.listTaskRecurrence(listArguments));","lastModifiedDate":"2021-10-27"},{"lineNumber":214,"author":{"gitId":"APZH"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":215,"author":{"gitId":"APZH"},"content":"            System.out.println(e);","lastModifiedDate":"2021-10-27"},{"lineNumber":216,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":217,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":218,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":219,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-27"},{"lineNumber":220,"author":{"gitId":"APZH"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":221,"author":{"gitId":"APZH"},"content":"    void listTaskRecurrence_ThrowsException_IfTaskIdBiggerThanTaskListSize() {","lastModifiedDate":"2021-10-27"},{"lineNumber":222,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":223,"author":{"gitId":"APZH"},"content":"        String expectedErrorMessage \u003d \"[!] The task ID you entered is not valid...\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":224,"author":{"gitId":"APZH"},"content":"                + \"It must be a non-negative number that is within the bounds of the tasklist!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":225,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":226,"author":{"gitId":"APZH"},"content":"        Map\u003cString, String\u003e listArguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"APZH"},"content":"        listArguments.put(\"mainArgument\", \"999\");","lastModifiedDate":"2021-10-27"},{"lineNumber":228,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":229,"author":{"gitId":"APZH"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":230,"author":{"gitId":"APZH"},"content":"            System.out.println(\"listTaskRecurrence_ThrowsException_IfTaskIdBiggerThanTaskListSize\");","lastModifiedDate":"2021-10-27"},{"lineNumber":231,"author":{"gitId":"APZH"},"content":"            taskManager.listTaskRecurrence(listArguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":232,"author":{"gitId":"APZH"},"content":"            fail(); // the test should not reach here","lastModifiedDate":"2021-10-27"},{"lineNumber":233,"author":{"gitId":"APZH"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":234,"author":{"gitId":"APZH"},"content":"            assertEquals(expectedErrorMessage, e.toString());","lastModifiedDate":"2021-10-27"},{"lineNumber":235,"author":{"gitId":"APZH"},"content":"            System.out.println(\"InvalidTaskIndexException caught\");","lastModifiedDate":"2021-10-27"},{"lineNumber":236,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":237,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":238,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":239,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-27"},{"lineNumber":240,"author":{"gitId":"APZH"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":241,"author":{"gitId":"APZH"},"content":"    void listTaskRecurrence_ThrowsException_IfTaskIdIsNegative() {","lastModifiedDate":"2021-10-27"},{"lineNumber":242,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":243,"author":{"gitId":"APZH"},"content":"        String expectedErrorMessage \u003d \"[!] The task ID you entered is not valid...\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":244,"author":{"gitId":"APZH"},"content":"                + \"It must be a non-negative number that is within the bounds of the tasklist!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":245,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":246,"author":{"gitId":"APZH"},"content":"        Map\u003cString, String\u003e listArguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":247,"author":{"gitId":"APZH"},"content":"        listArguments.put(\"mainArgument\", \"-1\");","lastModifiedDate":"2021-10-27"},{"lineNumber":248,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":249,"author":{"gitId":"APZH"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":250,"author":{"gitId":"APZH"},"content":"            System.out.println(\"listTaskRecurrence_ThrowsException_IfInvalidTaskIdBiggerThanTaskListSize\");","lastModifiedDate":"2021-10-27"},{"lineNumber":251,"author":{"gitId":"APZH"},"content":"            taskManager.listTaskRecurrence(listArguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":252,"author":{"gitId":"APZH"},"content":"            fail(); // the test should not reach here","lastModifiedDate":"2021-10-27"},{"lineNumber":253,"author":{"gitId":"APZH"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":254,"author":{"gitId":"APZH"},"content":"            assertEquals(expectedErrorMessage, e.toString());","lastModifiedDate":"2021-10-27"},{"lineNumber":255,"author":{"gitId":"APZH"},"content":"            System.out.println(\"InvalidTaskIndexException caught\");","lastModifiedDate":"2021-10-27"},{"lineNumber":256,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":257,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":258,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":259,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-27"},{"lineNumber":260,"author":{"gitId":"APZH"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":261,"author":{"gitId":"APZH"},"content":"    void testSortTasklistByPriority() {","lastModifiedDate":"2021-10-19"},{"lineNumber":262,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":263,"author":{"gitId":"APZH"},"content":"        Map\u003cString, String\u003e sortArguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":264,"author":{"gitId":"APZH"},"content":"        sortArguments.put(\"by\", \"priority\");","lastModifiedDate":"2021-10-20"},{"lineNumber":265,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":266,"author":{"gitId":"APZH"},"content":"        Map\u003cString, String\u003e listArguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":267,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":268,"author":{"gitId":"APZH"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":269,"author":{"gitId":"APZH"},"content":"            System.out.println(\"testSortTasklistByPriority\");","lastModifiedDate":"2021-10-27"},{"lineNumber":270,"author":{"gitId":"APZH"},"content":"            taskManager.sortTasklist(sortArguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":271,"author":{"gitId":"APZH"},"content":"            System.out.println(taskManager.listTasklistWithFilter(listArguments));","lastModifiedDate":"2021-10-27"},{"lineNumber":272,"author":{"gitId":"APZH"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":273,"author":{"gitId":"APZH"},"content":"            System.out.println(\"Exception occurred\");","lastModifiedDate":"2021-10-19"},{"lineNumber":274,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":275,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":276,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":277,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":278,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-27"},{"lineNumber":279,"author":{"gitId":"APZH"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":280,"author":{"gitId":"APZH"},"content":"    void testSortTasklistByDescription() {","lastModifiedDate":"2021-10-19"},{"lineNumber":281,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":282,"author":{"gitId":"APZH"},"content":"        Map\u003cString, String\u003e sortArguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":283,"author":{"gitId":"APZH"},"content":"        sortArguments.put(\"by\", \"description\");","lastModifiedDate":"2021-10-20"},{"lineNumber":284,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":285,"author":{"gitId":"APZH"},"content":"        Map\u003cString, String\u003e listArguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":286,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":287,"author":{"gitId":"APZH"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":288,"author":{"gitId":"APZH"},"content":"            System.out.println(\"testSortTasklistByDescription\");","lastModifiedDate":"2021-10-27"},{"lineNumber":289,"author":{"gitId":"APZH"},"content":"            taskManager.sortTasklist(sortArguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":290,"author":{"gitId":"APZH"},"content":"            System.out.println(taskManager.listTasklistWithFilter(listArguments));","lastModifiedDate":"2021-10-27"},{"lineNumber":291,"author":{"gitId":"APZH"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":292,"author":{"gitId":"APZH"},"content":"            System.out.println(\"Exception occurred\");","lastModifiedDate":"2021-10-19"},{"lineNumber":293,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":294,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":295,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":296,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":297,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-27"},{"lineNumber":298,"author":{"gitId":"APZH"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":299,"author":{"gitId":"APZH"},"content":"    void testSortTasklistByTaskType() {","lastModifiedDate":"2021-10-19"},{"lineNumber":300,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":301,"author":{"gitId":"APZH"},"content":"        Map\u003cString, String\u003e sortArguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":302,"author":{"gitId":"APZH"},"content":"        sortArguments.put(\"by\", \"type\");","lastModifiedDate":"2021-10-20"},{"lineNumber":303,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":304,"author":{"gitId":"APZH"},"content":"        Map\u003cString, String\u003e listArguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":305,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":306,"author":{"gitId":"APZH"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":307,"author":{"gitId":"APZH"},"content":"            System.out.println(\"testSortTasklistByTaskType\");","lastModifiedDate":"2021-10-27"},{"lineNumber":308,"author":{"gitId":"APZH"},"content":"            taskManager.sortTasklist(sortArguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":309,"author":{"gitId":"APZH"},"content":"            System.out.println(taskManager.listTasklistWithFilter(listArguments));","lastModifiedDate":"2021-10-27"},{"lineNumber":310,"author":{"gitId":"APZH"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":311,"author":{"gitId":"APZH"},"content":"            System.out.println(\"Exception occurred\");","lastModifiedDate":"2021-10-19"},{"lineNumber":312,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":313,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":314,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":315,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":316,"author":{"gitId":"APZH"},"content":"    //@@author APZH","lastModifiedDate":"2021-10-27"},{"lineNumber":317,"author":{"gitId":"APZH"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":318,"author":{"gitId":"APZH"},"content":"    void sortTasklist_ThrowsException_IfMissingByFlag() {","lastModifiedDate":"2021-10-19"},{"lineNumber":319,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":320,"author":{"gitId":"APZH"},"content":"        Map\u003cString, String\u003e sortArguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":321,"author":{"gitId":"APZH"},"content":"        sortArguments.put(\"random_flag\", \"random_criteria\");","lastModifiedDate":"2021-10-20"},{"lineNumber":322,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":323,"author":{"gitId":"APZH"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":324,"author":{"gitId":"APZH"},"content":"            System.out.println(\"sortTasklist_ThrowsException_IfMissingByFlag\");","lastModifiedDate":"2021-10-27"},{"lineNumber":325,"author":{"gitId":"APZH"},"content":"            taskManager.sortTasklist(sortArguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":326,"author":{"gitId":"APZH"},"content":"            fail(); // the test should not reach here","lastModifiedDate":"2021-10-19"},{"lineNumber":327,"author":{"gitId":"APZH"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":328,"author":{"gitId":"APZH"},"content":"            assertEquals(\"[!] Your sort command is wrong...\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":329,"author":{"gitId":"APZH"},"content":"                    + \"Please follow the format: sort --by [criteria]\", e.toString());","lastModifiedDate":"2021-10-19"},{"lineNumber":330,"author":{"gitId":"APZH"},"content":"            System.out.println(\"SortFormatException caught\");","lastModifiedDate":"2021-10-27"},{"lineNumber":331,"author":{"gitId":"APZH"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":332,"author":{"gitId":"APZH"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":333,"author":{"gitId":"APZH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":334,"author":{"gitId":"APZH"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"APZH":321,"SuibianP":1,"SeanRobertDH":12}},{"path":"src/test/java/seedu/tp/task/factory/DeadlineFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.task.factory;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"SuibianP"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.flags.DeadlineFlag;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.GetTaskFailedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.InvalidRecurrenceException;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.ParseDateFailedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.RequiredArgmentNotProvidedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.parser.DateParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.PriorityEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.RecurrenceEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.TypeEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.type.Deadline;","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"//@@author SeanRobertDH","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"class DeadlineFactoryTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String DESCRIPTION \u003d \"buy vegetables\";","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String VALID_DATE1 \u003d \"14-02-1998 02:00\";","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"    void getDeadline_validTodoInputs_expectDeadline() throws GetTaskFailedException {","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"        Map\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(DeadlineFlag.DESCRIPTION, DESCRIPTION);","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(DeadlineFlag.DUE_DATE, VALID_DATE1);","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(DeadlineFlag.PRIORITY, Integer.toString(PriorityEnum.HIGH.getValue()));","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(DeadlineFlag.RECURRENCE, RecurrenceEnum.MONTHLY.toString());","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"        Deadline deadline \u003d new DeadlineFactory(arguments).getTask();","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(deadline.getDescription(), DESCRIPTION);","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(DateParser.dateToString(deadline.getDueDate()), VALID_DATE1);","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(deadline.getPriority(), PriorityEnum.HIGH);","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(deadline.getRecurrence(), RecurrenceEnum.MONTHLY);","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"SeanRobertDH"},"content":"    void getDeadline_minimumDeadlineInputs_expectDeadline() throws GetTaskFailedException {","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"SeanRobertDH"},"content":"        Map\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(DeadlineFlag.DESCRIPTION, DESCRIPTION);","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(DeadlineFlag.DUE_DATE, VALID_DATE1);","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"SeanRobertDH"},"content":"        Deadline deadline \u003d new DeadlineFactory(arguments).getTask();","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(deadline.getDescription(), DESCRIPTION);","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(DateParser.dateToString(deadline.getDueDate()), VALID_DATE1);","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(deadline.getPriority(), PriorityEnum.MEDIUM);","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(deadline.getRecurrence(), RecurrenceEnum.NONE);","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"SeanRobertDH"},"content":"    void getDeadline_deadlineWithNoDueDate_expectGetTaskFailedException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"SeanRobertDH"},"content":"        Map\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(DeadlineFlag.DESCRIPTION, DESCRIPTION);","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"SeanRobertDH"},"content":"        GetTaskFailedException thrown \u003d assertThrows(","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"SeanRobertDH"},"content":"            GetTaskFailedException.class,","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"SeanRobertDH"},"content":"            () -\u003e new DeadlineFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"SeanRobertDH"},"content":"        RequiredArgmentNotProvidedException ranpe \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"SeanRobertDH"},"content":"            new RequiredArgmentNotProvidedException(DeadlineFlag.DUE_DATE, TypeEnum.DEADLINE.toString());","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(thrown.getMessage(), ranpe.getMessage());","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"SeanRobertDH"},"content":"    void getDeadline_deadlineWithInvalidRecurrence_expectGetTaskFailedException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"SeanRobertDH"},"content":"        Map\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"SeanRobertDH"},"content":"        String invalidRecurrence \u003d \"wibble\";","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(DeadlineFlag.DESCRIPTION, DESCRIPTION);","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(DeadlineFlag.DUE_DATE, VALID_DATE1);","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(DeadlineFlag.RECURRENCE, invalidRecurrence);","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"SeanRobertDH"},"content":"        GetTaskFailedException thrown \u003d assertThrows(","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"SeanRobertDH"},"content":"            GetTaskFailedException.class,","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"SeanRobertDH"},"content":"            () -\u003e new DeadlineFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"SeanRobertDH"},"content":"        InvalidRecurrenceException ire \u003d new InvalidRecurrenceException(invalidRecurrence);","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(thrown.getMessage(), ire.getMessage());","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"SeanRobertDH"},"content":"    void getDeadline_deadlineWithInvalidDate_expectGetTaskFailedException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"SeanRobertDH"},"content":"        Map\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"SeanRobertDH"},"content":"        String invalidDate \u003d \"blarg\";","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(DeadlineFlag.DESCRIPTION, DESCRIPTION);","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(DeadlineFlag.DUE_DATE, \"blarg\");","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":102,"author":{"gitId":"SeanRobertDH"},"content":"        GetTaskFailedException thrown \u003d assertThrows(","lastModifiedDate":"2021-10-15"},{"lineNumber":103,"author":{"gitId":"SeanRobertDH"},"content":"            GetTaskFailedException.class,","lastModifiedDate":"2021-10-15"},{"lineNumber":104,"author":{"gitId":"SeanRobertDH"},"content":"            () -\u003e new DeadlineFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":106,"author":{"gitId":"SeanRobertDH"},"content":"        ParseDateFailedException pdfe \u003d new ParseDateFailedException(DateParser.getDefaultDateFormat());","lastModifiedDate":"2021-10-15"},{"lineNumber":107,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":108,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(thrown.getMessage(), pdfe.getMessage());","lastModifiedDate":"2021-10-15"},{"lineNumber":109,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":110,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"SuibianP":2,"SeanRobertDH":108}},{"path":"src/test/java/seedu/tp/task/factory/EventFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.task.factory;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"SuibianP"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.flags.EventFlag;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.GetTaskFailedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.InvalidPriorityException;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.RequiredArgmentNotProvidedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.StartDateAfterEndDateException;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.parser.DateParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.PriorityEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.RecurrenceEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.TypeEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.type.Event;","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"SeanRobertDH"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"//@@author SeanRobertDH","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"class EventFactoryTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String DESCRIPTION \u003d \"buy vegetables\";","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String VALID_DATE1 \u003d \"14-02-1998 02:00\";","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String VALID_DATE2 \u003d \"14-02-1998 03:30\";","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"    void getEvent_validEventInputs_expectEvent() throws GetTaskFailedException {","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"        Map\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, DESCRIPTION);","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.START_DATE, VALID_DATE1);","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.END_DATE, VALID_DATE2);","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.PRIORITY, Integer.toString(PriorityEnum.LOW.getValue()));","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.RECURRENCE, RecurrenceEnum.YEARLY.toString());","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"        Event event \u003d new EventFactory(arguments).getTask();","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(event.getDescription(), DESCRIPTION);","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(DateParser.dateToString(event.getStartDate()), VALID_DATE1);","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(DateParser.dateToString(event.getEndDate()), VALID_DATE2);","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(event.getPriority(), PriorityEnum.LOW);","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(event.getRecurrence(), RecurrenceEnum.YEARLY);","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"SeanRobertDH"},"content":"    void getEvent_minimumEventInputs_expectEvent() throws GetTaskFailedException {","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"SeanRobertDH"},"content":"        Map\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, DESCRIPTION);","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.START_DATE, VALID_DATE1);","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.END_DATE, VALID_DATE2);","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"SeanRobertDH"},"content":"        Event event \u003d new EventFactory(arguments).getTask();","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(event.getDescription(), DESCRIPTION);","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(DateParser.dateToString(event.getStartDate()), VALID_DATE1);","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(DateParser.dateToString(event.getEndDate()), VALID_DATE2);","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(event.getPriority(), PriorityEnum.MEDIUM);","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(event.getRecurrence(), RecurrenceEnum.NONE);","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"SeanRobertDH"},"content":"    void getEvent_eventWithNoEndDate_expectGetTaskFailedException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"SeanRobertDH"},"content":"        Map\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, DESCRIPTION);","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.START_DATE, VALID_DATE1);","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"SeanRobertDH"},"content":"        GetTaskFailedException thrown \u003d assertThrows(","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"SeanRobertDH"},"content":"            GetTaskFailedException.class,","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"SeanRobertDH"},"content":"            () -\u003e new EventFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"SeanRobertDH"},"content":"        RequiredArgmentNotProvidedException ranpe \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"SeanRobertDH"},"content":"            new RequiredArgmentNotProvidedException(EventFlag.END_DATE, TypeEnum.EVENT.toString());","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(thrown.getMessage(), ranpe.getMessage());","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"SeanRobertDH"},"content":"    void getEvent_eventWithNoStartDate_expectGetTaskFailedException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"SeanRobertDH"},"content":"        Map\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, DESCRIPTION);","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.END_DATE, VALID_DATE2);","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"SeanRobertDH"},"content":"        GetTaskFailedException thrown \u003d assertThrows(","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"SeanRobertDH"},"content":"            GetTaskFailedException.class,","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"SeanRobertDH"},"content":"            () -\u003e new EventFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"SeanRobertDH"},"content":"        RequiredArgmentNotProvidedException ranpe \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"SeanRobertDH"},"content":"            new RequiredArgmentNotProvidedException(EventFlag.START_DATE, TypeEnum.EVENT.toString());","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(thrown.getMessage(), ranpe.getMessage());","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"SeanRobertDH"},"content":"    void getEvent_eventStartDateAfterEndDate_expectGetTaskFailedException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"SeanRobertDH"},"content":"        Map\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, DESCRIPTION);","lastModifiedDate":"2021-10-15"},{"lineNumber":102,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.START_DATE, VALID_DATE2);","lastModifiedDate":"2021-10-15"},{"lineNumber":103,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.END_DATE, VALID_DATE1);","lastModifiedDate":"2021-10-15"},{"lineNumber":104,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":105,"author":{"gitId":"SeanRobertDH"},"content":"        GetTaskFailedException thrown \u003d assertThrows(","lastModifiedDate":"2021-10-15"},{"lineNumber":106,"author":{"gitId":"SeanRobertDH"},"content":"            GetTaskFailedException.class,","lastModifiedDate":"2021-10-15"},{"lineNumber":107,"author":{"gitId":"SeanRobertDH"},"content":"            () -\u003e new EventFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":109,"author":{"gitId":"SeanRobertDH"},"content":"        StartDateAfterEndDateException sdaede \u003d new StartDateAfterEndDateException();","lastModifiedDate":"2021-10-15"},{"lineNumber":110,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":111,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(thrown.getMessage(), sdaede.getMessage());","lastModifiedDate":"2021-10-15"},{"lineNumber":112,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":113,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":114,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":115,"author":{"gitId":"SeanRobertDH"},"content":"    void getEvent_eventInvalidPriorityInteger_expectGetTaskFailedException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":116,"author":{"gitId":"SeanRobertDH"},"content":"        Map\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":118,"author":{"gitId":"SeanRobertDH"},"content":"        String invalidPriority \u003d \"69\";","lastModifiedDate":"2021-10-15"},{"lineNumber":119,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":120,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.DESCRIPTION, DESCRIPTION);","lastModifiedDate":"2021-10-15"},{"lineNumber":121,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.START_DATE, VALID_DATE2);","lastModifiedDate":"2021-10-15"},{"lineNumber":122,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.END_DATE, VALID_DATE1);","lastModifiedDate":"2021-10-15"},{"lineNumber":123,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(EventFlag.PRIORITY, invalidPriority);","lastModifiedDate":"2021-10-15"},{"lineNumber":124,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":125,"author":{"gitId":"SeanRobertDH"},"content":"        GetTaskFailedException thrown \u003d assertThrows(","lastModifiedDate":"2021-10-15"},{"lineNumber":126,"author":{"gitId":"SeanRobertDH"},"content":"            GetTaskFailedException.class,","lastModifiedDate":"2021-10-15"},{"lineNumber":127,"author":{"gitId":"SeanRobertDH"},"content":"            () -\u003e new EventFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":129,"author":{"gitId":"SeanRobertDH"},"content":"        InvalidPriorityException ipe \u003d new InvalidPriorityException(invalidPriority);","lastModifiedDate":"2021-10-15"},{"lineNumber":130,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":131,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(thrown.getMessage(), ipe.getMessage());","lastModifiedDate":"2021-10-15"},{"lineNumber":132,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":133,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"SuibianP":2,"SeanRobertDH":131}},{"path":"src/test/java/seedu/tp/task/factory/TodoFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.task.factory;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"SuibianP"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"SuibianP"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.command.flags.TodoFlag;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.GetTaskFailedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.InvalidPriorityException;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.exception.RequiredArgmentNotProvidedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.parser.DateParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.PriorityEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.RecurrenceEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.TypeEnum;","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.type.Todo;","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"SeanRobertDH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"SuibianP"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"//@@author SeanRobertDH","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"SeanRobertDH"},"content":"class TodoFactoryTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String DESCRIPTION \u003d \"buy vegetables\";","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"    private static final String VALID_DATE1 \u003d \"14-02-1998 02:00\";","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"    void getTask_validTodoInputs_expectTodo() throws GetTaskFailedException {","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"        Map\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(TodoFlag.DESCRIPTION, DESCRIPTION);","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(TodoFlag.DO_ON_DATE, VALID_DATE1);","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(TodoFlag.PRIORITY, PriorityEnum.HIGH.toString());","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"        Todo todo \u003d new TodoFactory(arguments).getTask();","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(todo.getDescription(), DESCRIPTION);","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(DateParser.dateToString(todo.getDoOnDate()), VALID_DATE1);","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(todo.getPriority(), PriorityEnum.HIGH);","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(todo.getRecurrence(), RecurrenceEnum.NONE);","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"SeanRobertDH"},"content":"    void getTask_minimumTodoInputs_expectTodo() throws GetTaskFailedException {","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"SeanRobertDH"},"content":"        Map\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(TodoFlag.DESCRIPTION, DESCRIPTION);","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"SeanRobertDH"},"content":"        Todo todo \u003d new TodoFactory(arguments).getTask();","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(todo.getDescription(), DESCRIPTION);","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(0, todo.getDoOnDate().getMinute());","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(LocalDateTime.now().getHour() + 1, todo.getDoOnDate().getHour());","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(todo.getPriority(), PriorityEnum.MEDIUM);","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(todo.getRecurrence(), RecurrenceEnum.NONE);","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"SeanRobertDH"},"content":"    void getTask_todoNoDate_expectTaskWithRoundedUpDateTime() throws GetTaskFailedException {","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"SeanRobertDH"},"content":"        Map\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(TodoFlag.DESCRIPTION, DESCRIPTION);","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(TodoFlag.RECURRENCE, RecurrenceEnum.DAILY.toString());","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"SeanRobertDH"},"content":"        Todo todo \u003d new TodoFactory(arguments).getTask();","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(0, todo.getDoOnDate().getMinute());","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(LocalDateTime.now().getHour() + 1, todo.getDoOnDate().getHour());","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"SeanRobertDH"},"content":"    void getTask_todoWithNoDescription_expectGetTaskFailedException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"SeanRobertDH"},"content":"        Map\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"SeanRobertDH"},"content":"        GetTaskFailedException thrown \u003d assertThrows(","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"SeanRobertDH"},"content":"            GetTaskFailedException.class,","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"SeanRobertDH"},"content":"            () -\u003e new TodoFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"SeanRobertDH"},"content":"        RequiredArgmentNotProvidedException ranpe \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"SeanRobertDH"},"content":"            new RequiredArgmentNotProvidedException(TodoFlag.DESCRIPTION, TypeEnum.TODO.toString());","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(thrown.getMessage(), ranpe.getMessage());","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"SeanRobertDH"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"SeanRobertDH"},"content":"    void getTask_todoWithInvalidPriority_expectGetTaskFailedException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"SeanRobertDH"},"content":"        Map\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"SeanRobertDH"},"content":"        String invalidPriority \u003d \"blarg\";","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(TodoFlag.DESCRIPTION, DESCRIPTION);","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"SeanRobertDH"},"content":"        arguments.put(TodoFlag.PRIORITY, invalidPriority);","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"SeanRobertDH"},"content":"        GetTaskFailedException thrown \u003d assertThrows(","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"SeanRobertDH"},"content":"            GetTaskFailedException.class,","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"SeanRobertDH"},"content":"            () -\u003e new TodoFactory(arguments).getTask());","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"SeanRobertDH"},"content":"        InvalidPriorityException ipe \u003d new InvalidPriorityException(invalidPriority);","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(thrown.getMessage(), ipe.getMessage());","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":102,"author":{"gitId":"SeanRobertDH"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"SuibianP":3,"SeanRobertDH":99}},{"path":"src/test/java/seedu/tp/task/reminder/ReminderManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanRobertDH"},"content":"package seedu.tp.task.reminder;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"SeanRobertDH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"SeanRobertDH"},"content":"import java.time.ZoneId;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Xuefei2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.Task;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.taskmanager.TaskManager;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.type.Deadline;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.type.Event;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"SeanRobertDH"},"content":"import seedu.tp.task.type.Todo;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Xuefei2001"},"content":"import java.util.Calendar;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Xuefei2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Xuefei2001"},"content":"class ReminderManagerTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Xuefei2001"},"content":"    private String expectedOut;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"SeanRobertDH"},"content":"    ReminderManagerTest(){","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"SeanRobertDH"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"SeanRobertDH"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"Xuefei2001"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Xuefei2001"},"content":"    void sendReminder() {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"SeanRobertDH"},"content":"        TaskManager taskManager \u003d new TaskManager();","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"SeanRobertDH"},"content":"        Calendar start \u003d Calendar.getInstance();","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"SeanRobertDH"},"content":"        start.add(Calendar.MINUTE, 10);","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"SeanRobertDH"},"content":"        Calendar end \u003d Calendar.getInstance();","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"SeanRobertDH"},"content":"        end.add(Calendar.MINUTE, 20);","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"SeanRobertDH"},"content":"        LocalDateTime startDate \u003d start.getTime().toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime();","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"SeanRobertDH"},"content":"        LocalDateTime endDate \u003d end.getTime().toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime();","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"Xuefei2001"},"content":"        Task todoWithReminder \u003d new Todo(\"lecture with reminder\", startDate);","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(todoWithReminder);","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"Xuefei2001"},"content":"        Task todoWithoutReminder \u003d new Todo(\"lecture without reminder\", endDate);","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(todoWithoutReminder);","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"Xuefei2001"},"content":"        Task deadlineWithReminder \u003d new Deadline(\"exercise 1\", startDate);","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(deadlineWithReminder);","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"Xuefei2001"},"content":"        Task deadlineWithoutReminder \u003d new Deadline(\"exercise 1\", endDate);","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(deadlineWithoutReminder);","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"Xuefei2001"},"content":"        Task eventTest \u003d new Event(\"meeting\", startDate, endDate);","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"SeanRobertDH"},"content":"        taskManager.addTask(eventTest);","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"Xuefei2001"},"content":"        expectedOut \u003d \"Reminder! 10 min before the following task:\\n\" + \"\\t\"","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"Xuefei2001"},"content":"                + todoWithReminder.getTaskEntryDescription() + \"\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"Xuefei2001"},"content":"                + \"Reminder! 10 min before the following task:\\n\" + \"\\t\"","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"Xuefei2001"},"content":"                + deadlineWithReminder.getTaskEntryDescription() + \"\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"Xuefei2001"},"content":"                + \"Reminder! 10 min before the following task:\\n\" + \"\\t\"","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"Xuefei2001"},"content":"                + eventTest.getTaskEntryDescription() + \"\\n\";","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"Xuefei2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"SeanRobertDH"},"content":"        assertEquals(expectedOut, ReminderManager.sendReminder(taskManager));","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"Xuefei2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"Xuefei2001"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"SeanRobertDH":24,"Xuefei2001":29}}]
