[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"    mainClassName \u003d \"seedu.duke.Click\"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"    archiveBaseName \u003d \"click\"","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nvbinh15":2,"ngnigel99":1,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Svetha Mahadevan | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Nguyen Van Binh | [Github](https://github.com/nvbinh15) | [Portfolio](docs/team/nguyenvanbinh.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"shoibloya"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Shoib Loya | [Github](https://github.com/) | [Portfolio](docs/team/shoibloya.md)","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Nigel Ng | [Github](https://github.com/ngnigel99) | [Portfolio](docs/team/ngnigel99.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Mahadevan Swati | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"SvethaMahadevan":1,"nvbinh15":1,"ngnigel99":1,"-":4,"shoibloya":1,"swatimahadevan":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"# Click - Developer Guide","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"## Table of Contents","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"## 1. Introduction","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"## 2. Setting Up","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"## 3. Design","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"## 4. Implementation","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{Describe the design and implementation of the product. Use UML diagrams and short code snippets where applicable.}","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"## 5. Testing","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"## 6. Dev Ops","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"## Appendices","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"### Appendix A: Product scope","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"### Appendix B: Target user profile","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"{Describe the target user profile}","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"### Appendix C: Value proposition","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"{Describe the value proposition: what problem does it solve?}","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"### Appendix D: User Stories","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"### Appendix E: Non-Functional Requirements","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"### Appendix F: Glossary","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"nvbinh15":19,"-":25}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"# Click - User Guide","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"## Table of Contents","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"1. [Introduction](#1-introduction)","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"1. [Quick Start](#2-quick-start)","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"1. [Features](#3-features)","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"1. [Command Summary](#4-command-summary)","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"1. [Frequently Asked Questions](#5-frequently-asked-questions)","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"## 1. Introduction","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"Click (which stands for \"command line interface for cramming \u0026 knowledge\") is a desktop app for managing modules, lifestyle, schedule, and CAP planning, optimized for use via a Command Line Interface (CLI).","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"## 2. Quick Start","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"2. Download the latest `click.jar` from [here]().","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for Click.","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"4. In the home folder for Click, launch the `jar` file using the `java -jar click.jar` command on Command Prompt (for Windows) or Terminal (for Unix-based OS, such as macOS and Linux) to start the app. If the setup is correct, you should see some think like this:","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"```","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"```","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"## 3. Features ","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"{Give detailed description of each feature}","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"### Adding a todo: `todo`","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Adds a new item to the list of todo items.","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Format: `todo n/TODO_NAME d/DEADLINE`","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* The `DEADLINE` can be in a natural language format.","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* The `TODO_NAME` cannot contain punctuation.  ","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"`todo n/Write the rest of the User Guide d/next week`","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"`todo n/Refactor the User Guide to remove passive voice d/13/04/2020`","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"## 4. Command Summary","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"{Give a \u0027cheat sheet\u0027 of commands here}","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"## 5. Frequently Asked Questions","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"Below are the answers to some of frequently askes questions about Click.","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"**Q:** Can I use Click on different operating systems such as Windows and macOS?","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"**A:** Yes. Click is compatible with Windows, macOS, and Linus as long as you have Java 11 or above installed in your machine.","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"**Q:** What will happen to my data if Click crashed?","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"A: Data is saved automatically to `STORAGEFILE` whenever you change your tasks. Therefore, your data will be safely saved even though Click is crashed.","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"**Q:** Can I exit Click without using the bye command?","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"**A:** Yes, you can. As mentioned above, your data will be saved automatically if a change of the tasks occurs, so you can exit Click worry-free.","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"nvbinh15":33,"-":29}},{"path":"docs/images/calendar/CalendarDisplaySequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"@startuml","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"!define CLICK_COLOR #1D8900","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"!define PARSER_COLOR #3333C4","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"!define COMMAND_COLOR #9D0012","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"skinparam BackgroundColor #FFFFFFF","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"skinparam Shadowing false","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"skinparam Class {","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"    BorderThickness 1","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"    FontName Arial","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"skinparam Actor {","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"    Color USER_COLOR","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"    FontName Arial","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"skinparam Sequence {","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"    MessageAlign center","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"    BoxFontSize 15","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"    BoxPadding 0","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"    FontName Arial","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"skinparam Participant {","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"    Padding 20","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"skinparam Shadowing false","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"hide footbox","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"hide members","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"hide circle","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"Participant \":Click\" as click CLICK_COLOR","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"Participant \":Parser\" as parser PARSER_COLOR","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"swatimahadevan"},"content":"Participant \":DisplayCalendarCommand\" as displayCalendarCommand COMMAND_COLOR","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"swatimahadevan"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"swatimahadevan"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"swatimahadevan"},"content":"user -[USER_COLOR]\u003e click : \"calendar 10-2021\"","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"swatimahadevan"},"content":"activate click CLICK_COLOR","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"swatimahadevan"},"content":"click -[USER_COLOR]\u003e parser : parseCommand(\"calendar 10-2021\")","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"swatimahadevan"},"content":"activate parser PARSER_COLOR","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"swatimahadevan"},"content":"parser --[USER_COLOR]\u003e click","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"swatimahadevan"},"content":"deactivate parser","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"swatimahadevan"},"content":"parser -[USER_COLOR]\u003e displayCalendarCommand : new DisplayCalendarCommand(\"calendar 10-2021\")","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"swatimahadevan"},"content":"parser -[USER_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"swatimahadevan"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"swatimahadevan"},"content":"parser -[PARSER_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"swatimahadevan"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"swatimahadevan"},"content":"storage -[USER_COLOR]\u003e storage : Save to file","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"swatimahadevan"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"swatimahadevan"},"content":"storage --[USER_COLOR]\u003e storage","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"swatimahadevan"},"content":"deactivate storage","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"swatimahadevan"},"content":"@enduml","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"swatimahadevan":78}},{"path":"docs/images/module/Module.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"class Module {","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"    - code : String","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"    - name : String","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"class ModuleList {","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"    getNumberOfModules() : int","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"    getModuleByIndex(index : int) : Module","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"    addModule(module : Module) : void","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"    removeModuleByIndex(index : int) : void","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"ModuleList --\u003e \"*\" Module","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"Module --\u003e \"1\" Grade","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"enum Grade {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"A_PLUS, A, A_MINUS","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"B_PLUS, B, B_MINUS","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"C_PLUS, C, D_PLUS","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"D, F, CS, CU, NA","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"nvbinh15":26}},{"path":"docs/team/DG_binh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"# Module-related Features","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"## Adding a Module","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"This feature allows user to add a new Module. ","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"If the creation is successful, a confirmation message on the newly created Module will be displayed to the user.","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"**Implementation**","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"## Removing a Module","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"This feature allows user to remove a Module created in the past.","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"If the deletion is successful, a confirmation message on the Module deletion will be displayed to the user.","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"**Implementation**","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"## Listing All Modules","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"This feature allows user to view all Modules.","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"**Implementation**","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"When the user types `module list`, the following sequence of steps will then occur:","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"1. User executes `module list`\\","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"i. `Click` receives user\u0027s input.\\","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"ii. `Parser` calls `parser.parseCommand(userInput)` to parse user\u0027s input into a `Command`.","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"2. Creating `ListModuleCommand` object.","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"3. Executing command.","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"4. Prompting result to the user.","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"## Calculating Expected CAP","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"nvbinh15":34}},{"path":"docs/team/DG_swati.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"### Calendar display feature ","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"#### Implementation","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"The command for displaying the calendar for a specific month is implemented by the `DisplayCalendarCommand` class that extends `Command`.","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"Given below is an example usage scenario and how the display calendar mechanism behaves at each step.","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"*Step 1:* The user enters the command `calendar 10-2021`. This command is then sent for parsing in the `Click` class to `parseCommand` method in the `Parser` class. The `parseCommand` method first splits the entire command into an array `todoArguments` containing `calendar` and `10-2021`.","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"*Step 2:* The string `calendar` from the first index of todoArguments is checked against switch cases and is found to match `COMMAND_CALENDAR` which is the constant string \"calendar\". Upon finding this match, the string from the second index `todoArguments`is further split based on the delimiter of a single white space. This is then checked against possible suffixes for `calendar` that indicate a particular command and the `Command` object `DisplayCalendarCommand` is returned to the `Click` class. ","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"*Step 3:* `Click` class then calls the method `execute` of `DisplayCalendarCommand` class. `DisplayCalendarCommand` extends `Command` class and has three steps in its `execute` method.","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"- The `parseCalendarCommand` is first called, and it returns the year and month values after splitting `10-2021` into `10` and `2021`. This is put together into an YearMonth object `inputYearMonth`.","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":" \u003e  **NOTE:** The input is validated first and if the input date given is invalid, i.e., the month not between 1-12, then the calendar for the current month is displayed.","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"- The `inputYearMonth` is passed into `Ui` class method `printCalenderTitle` and this prints out the title of that month with the month name and the year. In this example, it will display,","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"  ![](../images/calendar/calendar_header.png)","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"- Then, the method `parserTaskList` in `Schedule` class is called, and it takes in `storage.tasksList` (the TaskList object with all the currently stored tasks drawn from storage), `calendarTasks` (an ArrayList\u003cArrayList\u003cString\u003e\u003e object initialized with empty ArrayLists of type String), `month` (the month input by the user, which in this example is the integer `10`) and year `month` (the year input by the user, which in this example is the integer `2021`), and adds the tasks to the days in the empty String ArrayLists initialized before in `calendarTasks`.","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"- Then, the method `displayCalendar` in `Schedule` class is called, and it takes in `inputYearMonth` (the YearMonth object created from the month and year parsed from the user input), and `calendarTasks` (that was filled with the tasks for each day in the previous step). The method `displayCalendar` performs the necessary logic to print out a calendar with tasks as below.","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":" ![](../images/calendar/calendar_body.png)","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"    \u003e  **NOTE:** Three tasks are displayed for each day based on the order in which the user added the tasks, and if there are more , the other tasks will show as and when the user deletes the tasks that are currently displayed.","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"Diagrams(3): Class, Sequence, Activity","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"Design Considerations","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"---\u003e point + rationale + alternatives considered","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"### Add `todo` tasks feature","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"#### Implementation","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"The command for adding a `todo` task to a specific day is implemented by the `AddTodoCommand` class that extends `Command`.","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"Given below is an example usage scenario and how the add todo task mechanism behaves at each step.","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"*Step 1:* take from user send to parser","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"*Step 2:* parser to command and execute command","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"*Step 3:* steps for command","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"Diagrams(3): Class, Sequence, Activity","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"Design Considerations","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"---\u003e point + rationale + alternatives considered","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"swatimahadevan":45}},{"path":"src/main/java/seedu/duke/Click.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.commands.calendar.DeleteTaskCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.logger.ClickLogger;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.ExceptionHandler;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"public class Click {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"    private static ExceptionHandler exceptionHandler \u003d new ExceptionHandler();","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"    private static Storage storage;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"    private static Logger logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"    private static Parser parser \u003d new Parser();","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"    static {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"     * Reads and executes commands from user inputs.","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"    private static void run() {","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"        logger \u003d ClickLogger.getNewLogger();","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"        logger.info(\"running click\");","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"        ui.printGreeting();","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"        while (true) {","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"            String userInput \u003d in.hasNextLine() ? in.nextLine()  : null;","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"            try {","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"                Command c \u003d parser.parseCommand(userInput);","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"                c.execute(ui, storage);","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"            } catch (ClickException e) {","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"                exceptionHandler.handleDukeExceptions(e, userInput);","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"            } catch (Exception  e) {","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"                exceptionHandler.handleOtherExceptions(e);","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"            }","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"     * Main entry method to run Duke.","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"     * @param args Unused params.","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"        new Click();","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"        Click.run();","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nvbinh15":40,"ngnigel99":5,"-":7,"swatimahadevan":12}},{"path":"src/main/java/seedu/duke/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":" * An abstract representation of Command.","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"public abstract class Command implements Comparator\u003cCommand\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"    public String helpMessage \u003d \"default help message\";","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    public String syntax \u003d \"default syntax message\";","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"     * Executes command.","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"     * @param ui      The component of Duke that deals with the interaction with the user.","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"     * @param storage The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"     * @throws ClickException If there is an exception of type ClickException occurs.","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"     * @throws Exception      If there is an exception of type other than DukeException occurs.","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"    public abstract void execute(Ui ui, Storage storage) throws ClickException, Exception;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"    public void help() {","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"        Ui.printHelpMessage(helpMessage, syntax);","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"     * Prints command name in a readable format for help.","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"    public void printClassNameAndSyntax() {","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"        Class currentClass \u003d getClass();","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"        String fullClassName \u003d currentClass.getSimpleName();","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"        String[] r \u003d fullClassName.split(\"(?\u003d\\\\p{Upper})\"); //format by camel case","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"        for (String s : r) {","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"            if (!s.equals(\"Command\")) {","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"                System.out.print(s + \" \");","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(\" : \" + syntax);","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"     * For comparing commands by name of the class file.","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"     * Note we sort lexicographically so A appears first etc.","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"     * @param command1 some command to compare.","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"     * @param command2 some command to compare.","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"     * @return index of whichever command has a lower ASCII value name.","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"nvbinh15"},"content":"    public int compare(Command command1, Command command2) {","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"nvbinh15"},"content":"        String className1 \u003d command1.getClass().getSimpleName();","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"nvbinh15"},"content":"        String className2 \u003d command2.getClass().getSimpleName();","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"nvbinh15"},"content":"        return className1.compareTo(className2);","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":65,"ngnigel99":4,"swatimahadevan":1}},{"path":"src/main/java/seedu/duke/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":" * A representation of the command for exiting the program.","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"     * Executes the exit command.","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"     *  @param ui The component of Duke that deals with the interaction with the user.","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"     * @param storage The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"    public void execute(Ui ui, Storage storage) {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"        ui.printGoodBye();","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"        System.exit(0);","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":23,"ngnigel99":2,"swatimahadevan":1}},{"path":"src/main/java/seedu/duke/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shoibloya"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.help.ClassPackageReader;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"shoibloya"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"shoibloya"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"     * Finds all valid commands at runtime and prints syntax to user.","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"     * @param ui      The component of Duke that deals with the interaction with the user.","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"     * @param storage The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"     * @throws InvocationTargetException If printSyntax method fails to run.","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"     * @throws InstantiationException If printSyntax method fails to run.","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"     * @throws IllegalAccessException If printSyntax method fails to run.","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"shoibloya"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    public void execute(Ui ui, Storage storage) throws InvocationTargetException,","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"            InstantiationException, IllegalAccessException {","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"        ClassPackageReader.getCommandsAndPrintSyntax();","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"        Ui.printMessage(\"Done printing all commands! Enjoy CLICKing :)\");","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"shoibloya"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"ngnigel99":17,"shoibloya":15}},{"path":"src/main/java/seedu/duke/commands/calendar/AddTodoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.calendar;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import java.text.DateFormat;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.DuplicateTaskException;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.InvalidDateException;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.StorageTasks;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.Todo;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.INDEX_TODO_DESCRIPTION;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.INDEX_TODO_DATE;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":" * Class to execute adding of todo task.","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":" *","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":" * @author swatimahadevan","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"    private ArrayList\u003cString\u003e arguments;","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    public AddTodoCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"        syntax \u003d \"calendar todo n/ TASK_NAME d/ DD-MM-YYYY\";","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"     * Constructor for AddTodoCommand.","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"     * @param arguments which has the todo task arguments.","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"    public AddTodoCommand(ArrayList\u003cString\u003e arguments) {","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"        super();","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"        helpMessage \u003d \"Add a todo task to calendar\";","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"     * To check that date is in the format dd-MM-YYYY.","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"     * @param todoDateStringFormat todo date","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"     * @return","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"    public static boolean isValid(String todoDateStringFormat) {","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"        DateFormat dateFormat \u003d new SimpleDateFormat(\"dd-MM-yyyy\");","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"swatimahadevan"},"content":"        dateFormat.setLenient(false);","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"swatimahadevan"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"swatimahadevan"},"content":"            dateFormat.parse(todoDateStringFormat);","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"swatimahadevan"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"swatimahadevan"},"content":"            return false;","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"swatimahadevan"},"content":"        return true;","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"swatimahadevan"},"content":"    public static void checkIfDateValid(String todoDateStringFormat) throws InvalidDateException {","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"swatimahadevan"},"content":"        if (!isValid(todoDateStringFormat)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"swatimahadevan"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"swatimahadevan"},"content":"    public static void checkIfDuplicate(Task task) throws InvalidDateException, DuplicateTaskException {","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"swatimahadevan"},"content":"        for (int i \u003d 0; i \u003c Storage.tasksList.getTaskList().size(); i++) {","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"swatimahadevan"},"content":"            if (task.getDescription().equals(Storage.tasksList.getTaskList().get(i).getDescription())) {","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"swatimahadevan"},"content":"                throw new DuplicateTaskException();","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"swatimahadevan"},"content":"     * To execute adding of todo.","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"swatimahadevan"},"content":"     * @param ui      The component of CLICK that deals with the interaction with the user.","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"swatimahadevan"},"content":"     * @param storage The component of CLICK that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"swatimahadevan"},"content":"     * @throws IOException in case of writing to save file error.","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"swatimahadevan"},"content":"     * @throws ParseException in case of error while parsing.","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"swatimahadevan"},"content":"     * @throws InvalidDateException in case date is incorrect.","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"swatimahadevan"},"content":"     * @throws DuplicateTaskException in case task already exists.","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"swatimahadevan"},"content":"    public void execute(Ui ui, Storage storage) throws IOException,","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"swatimahadevan"},"content":"            ParseException, DuplicateTaskException, InvalidDateException {","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"swatimahadevan"},"content":"        String description \u003d arguments.get(INDEX_TODO_DESCRIPTION).trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"swatimahadevan"},"content":"        String todoDateStringFormat \u003d arguments.get(INDEX_TODO_DATE);","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"swatimahadevan"},"content":"        Task task \u003d new Todo(description, todoDateStringFormat);","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"swatimahadevan"},"content":"        checkIfDuplicate(task);","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"swatimahadevan"},"content":"        checkIfDateValid(todoDateStringFormat);","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"swatimahadevan"},"content":"        storage.tasksList.addTask(task);","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"swatimahadevan"},"content":"        Ui.printTaskAddedMessage();","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"SvethaMahadevan"},"content":"        StorageTasks.writeTaskList(storage.tasksList);","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"SvethaMahadevan":2,"nvbinh15":2,"ngnigel99":6,"swatimahadevan":89}},{"path":"src/main/java/seedu/duke/commands/calendar/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.calendar;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.IncorrectNumberOfArgumentsException;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.calendar.CalendarIndexNotFoundException;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.storage.StorageTasks;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.DELETED_TASK;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"    private int index;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"    private String userInput;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    public DeleteTaskCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"        syntax \u003d \"calendar delete TASK_INDEX\";","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"     * Constructor for DeleteTaskCommand class.","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"     * @param index index of task to be deleted","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"     * @param userInput input from user","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"    public DeleteTaskCommand(int index, String userInput) {","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"        helpMessage \u003d \"Delete task from calendar\";","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"        syntax \u003d \"calendar delete TASK_INDEX\";","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"     * Executed delete task command.","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"     * @param ui      The component of CLICK that deals with the interaction with the user.","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"     * @param storage The component of CLICK that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"     * @throws IOException in case of writing to save file error.","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"     * @throws CalendarIndexNotFoundException if index is not found.","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"     * @throws IncorrectNumberOfArgumentsException in case of wrong number of arguments.","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"    public void execute(Ui ui, Storage storage) throws IOException,","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"            CalendarIndexNotFoundException, IncorrectNumberOfArgumentsException {","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"        if (this.index \u003e storage.tasksList.getTaskList().size()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"            throw new CalendarIndexNotFoundException();","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"        Storage.tasksList.deleteTask(this.index);","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(DELETED_TASK);","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"        StorageTasks.writeTaskList(Storage.tasksList);","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"nvbinh15":3,"ngnigel99":11,"swatimahadevan":41}},{"path":"src/main/java/seedu/duke/commands/calendar/DisplayCalendarCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.calendar;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.InvalidMonthException;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.logger.ClickLogger;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.parser.schedule.ParserSchedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.schedule.Schedule;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.MONTH_LOWER_LIMIT;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.MONTH_UPPER_LIMIT;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.TOTAL_SIZE;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.DELIMITER_DATE;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"public class DisplayCalendarCommand extends Command {","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"    private int year;","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"    private int month;","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"    private YearMonth inputYearMonth;","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"    private String[] yearMonthArguments;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"    private ArrayList\u003cArrayList\u003cString\u003e\u003e calendarTasks \u003d new ArrayList\u003c\u003e(TOTAL_SIZE);","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    public DisplayCalendarCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"        syntax \u003d \"calendar MM-YYYY\";","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"    public DisplayCalendarCommand(String input) {","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"        helpMessage \u003d \"Display Calendar\";","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"        syntax \u003d \"calendar MM-YYYY\";","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"        Schedule.intializeCalendarDayTasksList(calendarTasks);","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"            this.yearMonthArguments \u003d ParserSchedule.parseCalendarCommand(input);","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"            this.year \u003d Integer.parseInt(yearMonthArguments[1]);","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"            this.month \u003d Integer.parseInt(yearMonthArguments[0]);","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"            if ((month \u003c MONTH_LOWER_LIMIT || month \u003e MONTH_UPPER_LIMIT)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"                System.out.println(\"Month is invalid and \"","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"                        + \"I will therefore display the calendar for the current month!\");","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"                this.inputYearMonth \u003d YearMonth.now();","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"            } else {","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"                this.inputYearMonth \u003d YearMonth.of(year, month);","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException c) {","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"            ClickLogger.getNewLogger().log(Level.WARNING, \"Calendar display failed...\");","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"            Ui.printInvalidCalendarInput();","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"swatimahadevan"},"content":"    public void execute(Ui ui, Storage storage) {","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"swatimahadevan"},"content":"        Ui.printCalenderTitle(inputYearMonth);","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"swatimahadevan"},"content":"        Schedule.parseTaskList(storage.tasksList, calendarTasks, this.month, this.year);","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"swatimahadevan"},"content":"        Schedule.displayCalendar(inputYearMonth, calendarTasks);","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"nvbinh15":2,"ngnigel99":6,"swatimahadevan":53,"shoibloya":1}},{"path":"src/main/java/seedu/duke/commands/calendar/EditTasksCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.commands.calendar;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.DuplicateTaskException;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.IncorrectNumberOfArgumentsException;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.InvalidDateException;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.calendar.CalendarIndexNotFoundException;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.parser.schedule.ParserSchedule;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.storage.StorageTasks;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.Todo;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.INDEX_TODO_DESCRIPTION;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.INDEX_TODO_DATE;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":" * Class to execute editing of todo task.","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":" *","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":" * @author swatimahadevan","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"public class EditTasksCommand extends Command {","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"    private int index;","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    public EditTasksCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"        syntax \u003d \"calendar delete TASK_INDEX\";","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"     * Constructor for EditTasksCommand class.","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"     * @param index index of task to be deleted","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"    public EditTasksCommand(int index) {","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"        helpMessage \u003d \"Delete task from calendar\";","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"        syntax \u003d \"calendar delete TASK_INDEX\";","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"     * Executed edit task command.","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"     * @param ui      The component of CLICK that deals with the interaction with the user.","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"     * @param storage The component of CLICK that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"     * @throws IOException in case of writing to save file error.","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"     * @throws CalendarIndexNotFoundException if index is not found.","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"swatimahadevan"},"content":"     * @throws IncorrectNumberOfArgumentsException in case of wrong number of arguments.","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"swatimahadevan"},"content":"    public void execute(Ui ui, Storage storage) throws IOException, IncorrectNumberOfArgumentsException,","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"swatimahadevan"},"content":"            CalendarIndexNotFoundException, InvalidDateException, DuplicateTaskException {","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"swatimahadevan"},"content":"        if (this.index \u003e storage.tasksList.getTaskList().size()) {","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"swatimahadevan"},"content":"            throw new CalendarIndexNotFoundException();","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(\"Enter the entire todo command \"","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"swatimahadevan"},"content":"                + \"with the desired description and date that you \"","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"swatimahadevan"},"content":"                + \"want to replace in place of the current task at index \" + this.index);","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"swatimahadevan"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"swatimahadevan"},"content":"        String followUpInput \u003d in.nextLine();","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cString\u003e arguments \u003d ParserSchedule.parseTodoCommand(followUpInput);","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"swatimahadevan"},"content":"        String description \u003d arguments.get(INDEX_TODO_DESCRIPTION).trim();","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"swatimahadevan"},"content":"        String date \u003d arguments.get(INDEX_TODO_DATE);","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"swatimahadevan"},"content":"        Task task \u003d new Todo(description, date);","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"swatimahadevan"},"content":"        AddTodoCommand.checkIfDuplicate(task);","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"swatimahadevan"},"content":"        AddTodoCommand.checkIfDateValid(date);","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"swatimahadevan"},"content":"        Storage.tasksList.editTask(this.index, description, date);","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(\"Edited Task!\");","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"swatimahadevan"},"content":"        StorageTasks.writeTaskList(Storage.tasksList);","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"ngnigel99":8,"swatimahadevan":68}},{"path":"src/main/java/seedu/duke/commands/calendar/ListTasksCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.calendar;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.InvalidArgumentsException;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.StorageTasks;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"public class ListTasksCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"    public ListTasksCommand() {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"        this.helpMessage \u003d \"List all tasks\";","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"shoibloya"},"content":"        this.syntax \u003d \"calendar list\";","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"     * Executes listing of tasks.","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"     * @param ui The component of CLICK that deals with the interaction with the user.","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"     * @param storage The component of CLICK that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"     * @throws IOException If command entered is wrong.","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"    public void execute(Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"SvethaMahadevan"},"content":"        TaskList tasks \u003d StorageTasks.readTaskList();","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"        Ui.printTaskList(tasks.getTaskList());","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"SvethaMahadevan":2,"nvbinh15":2,"ngnigel99":2,"swatimahadevan":27,"shoibloya":1}},{"path":"src/main/java/seedu/duke/commands/food/AddFoodCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.food;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.ArgumentsNotFoundException;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.food.FoodRecord;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.food.IllegalFoodParameterException;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.storage.StorageFood;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":" * Command to add a food item to the existing  list.","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":" * prefix would be food add [FOOD_NAME] [CALORIE_COUNT(kcal)]","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":" *","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":" * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"public class AddFoodCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    private String inputString; //name + calorie","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    public AddFoodCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"        syntax \u003d \"food add n/ [FOOD_NAME] c/ [CALORIE]\";","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    public AddFoodCommand(String inputString) {","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"        super();","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"        this.inputString \u003d inputString;","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"shoibloya"},"content":"        this.helpMessage \u003d \"Adds a food item to a list\";","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"     * Executes add food command.","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"     * @param ui      The component of Duke that deals with the interaction with the user.","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"     * @param storage The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"     * @throws IllegalFoodParameterException If syntax is not followed.","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"     * @throws IOException If there is an error while reading/ saving data to file.","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"    public void execute(Ui ui, Storage storage) throws IllegalFoodParameterException, IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"        FoodRecord foodRecord  \u003d null;","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"            foodRecord \u003d Parser.parseFoodRecord(inputString);","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"        } catch (ArgumentsNotFoundException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"            e.printStackTrace();    //dividers are not aligned with syntax","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"        storage.whatIAteTodayList.addToList(foodRecord, false);","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"        StorageFood.saveList(storage.whatIAteTodayList);","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"nvbinh15":3,"ngnigel99":49,"shoibloya":3}},{"path":"src/main/java/seedu/duke/commands/food/ClearFoodCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.food;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.storage.StorageFood;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":" * Clears the current list  of food, and clear entries in storage.","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":" * @author  ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"public class ClearFoodCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"shoibloya"},"content":"    public ClearFoodCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"        helpMessage \u003d \"Clears the current list of food, and clear entries in storage\";","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"        syntax \u003d \"food clear\";","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"     * Executes clear food command.","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"     * @param ui      The component of Duke that deals with the interaction with the user.","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"     * @param storage The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"     * @throws IOException If there is an error reading/ writing to save file.","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    public void execute(Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"        storage.whatIAteTodayList.clearList();","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"        StorageFood.saveList(storage.whatIAteTodayList);","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"nvbinh15":2,"ngnigel99":27,"swatimahadevan":1,"shoibloya":5}},{"path":"src/main/java/seedu/duke/commands/food/DeleteFoodCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.food;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.food.FoodIndexNotFoundException;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.food.FoodRecord;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.storage.StorageFood;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":" * Deletes a food item from a list given  a  valid index.","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":" * @author ngnigel99","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"public class DeleteFoodCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    private final int indexNotFoundConstant \u003d  -1; ","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    private String inputString; //represents index to delete","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    public DeleteFoodCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"        syntax \u003d \"food delete [INDEX]\";","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    public DeleteFoodCommand(String inputString) {","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"        super();","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"        this.inputString \u003d inputString.trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"        helpMessage \u003d \"Deletes aa food item from a list given a valid index\";","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"        syntax \u003d \"food delete [INDEX]\";","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"     * Executes delete food command.","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"     * @param ui      The component of Duke that deals with the interaction with the user.","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"     * @param storage The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"     * @throws FoodIndexNotFoundException If index is not in list.","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"     * @throws IOException If there is an error saving updated list to save file.","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"    public void execute(Ui ui, Storage storage) throws FoodIndexNotFoundException, IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"        int indexToDelete \u003d getIndexToDelete();","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"        checkIndexAndThrowException(storage, indexToDelete);","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"        FoodRecord toDelete \u003d storage.whatIAteTodayList.getList().get(indexToDelete - 1);","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"        deleteFoodRecordAndSave(storage, indexToDelete, toDelete);","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"     * Given an input string, parses it to an integer.","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"     * Note: capability to handle multiple strings,","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"     *       perhaps in later versions.","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"     * @return indexToDelete integer parsed.","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"    private int getIndexToDelete() {","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"            ArrayList\u003cInteger\u003e indexesToDelete \u003d Parser.parseStringToIntegerList(inputString);","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"            int indexToDelete \u003d indexesToDelete.get(0);","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"            return indexToDelete;","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"            Ui.printOnlyIntegers();","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"        return indexNotFoundConstant;  //if integer is not given","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"     * Assumes index in list at this point, then delete item.","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"     * @param storage  The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"     * @param indexToDelete Index of food item to be deleted.","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"     * @param toDelete Food record to delete.","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"     * @throws IOException If there is an error saving updated list to save file.","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"    private void deleteFoodRecordAndSave(Storage storage, int indexToDelete, FoodRecord toDelete) throws IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"ngnigel99"},"content":"            storage.whatIAteTodayList.getList().remove(toDelete);","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"ngnigel99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"ngnigel99"},"content":"            Ui.printErrorMessageGeneral();","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"ngnigel99"},"content":"        } finally {","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"ngnigel99"},"content":"            Ui.printDoneDeleteFood(toDelete, indexToDelete);","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"ngnigel99"},"content":"            StorageFood.saveList(storage.whatIAteTodayList);","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"ngnigel99"},"content":"     * Verifies index used exists in given list.","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"ngnigel99"},"content":"     * In particular, for food items.","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"ngnigel99"},"content":"     * @param storage Storage object that contains list.","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"ngnigel99"},"content":"     * @param indexToDelete Index of food item in list to delete.","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"ngnigel99"},"content":"     * @throws FoodIndexNotFoundException If index is not in list range.","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"ngnigel99"},"content":"    private void checkIndexAndThrowException(Storage storage, int indexToDelete) throws FoodIndexNotFoundException {","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"ngnigel99"},"content":"        if (indexToDelete \u003c 0","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"ngnigel99"},"content":"                || indexToDelete \u003e\u003d storage.whatIAteTodayList.getList().size()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"ngnigel99"},"content":"            throw new FoodIndexNotFoundException();","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"nvbinh15":3,"ngnigel99":98}},{"path":"src/main/java/seedu/duke/commands/food/ListFoodCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.food;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":" * List all current records (assumed today for simplicity).","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":" * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"public class ListFoodCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"shoibloya"},"content":"    public ListFoodCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"        helpMessage \u003d \"Lists all food items recorded\";","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"        syntax \u003d \"food list\";","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"    public void execute(Ui ui, Storage storage) {","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"        storage.whatIAteTodayList.printList();","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"nvbinh15":2,"ngnigel99":17,"swatimahadevan":2,"shoibloya":3}},{"path":"src/main/java/seedu/duke/commands/journal/AddEntryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.journal;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.EmptyEntryArgumentsException;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.EmptyEntryNameException;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.journal.EmptyNoteNameException;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.journal.NotebookArgumentNotFoundException;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.journal.NotebookNotFoundForEntryAddition;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.journal.Note;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.parser.journal.ParserJournal;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.StorageEntries;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"public class AddEntryCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"    public String userInput;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    public AddEntryCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"        syntax \u003d \"journal entry n/ NOTEBOOK_NAME e/ ENTRY_NAME\";","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"SvethaMahadevan"},"content":"     * Constructor for the AddEntryCommand.","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param userInput input from the user","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"SvethaMahadevan"},"content":"    public AddEntryCommand(String userInput) {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"SvethaMahadevan"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"shoibloya"},"content":"        this.helpMessage \u003d \"Add an entry to the desired notebook\";","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"shoibloya"},"content":"        this.syntax \u003d \"journal entry n/ NOTEBOOK_NAME e/ ENTRY_NAME\";","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"SvethaMahadevan"},"content":"     * Allows for the adding of entry.","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param ui allows for printing of a message to indicate that the entry has been added","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param storage to allow for storing of entries","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws EmptyNoteNameException No note name entered after \u0027n/\u0027","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws EmptyEntryArgumentsException if no arguments found for the entry","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"SvethaMahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"SvethaMahadevan"},"content":"    public void execute(Ui ui, Storage storage) throws EmptyNoteNameException, EmptyEntryArgumentsException,","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"SvethaMahadevan"},"content":"            NotebookArgumentNotFoundException, EmptyEntryNameException, IOException,","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"SvethaMahadevan"},"content":"            NotebookNotFoundForEntryAddition {","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"SvethaMahadevan"},"content":"        String[] argumentsNoteEntry \u003d ParserJournal.parseAddEntryCommand(userInput, storage);","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cNote\u003e notes \u003d storage.collectionOfNotes.getNotesArrayList();","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"SvethaMahadevan"},"content":"        for (Note note : notes) {","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"SvethaMahadevan"},"content":"            if (note.getNoteName().equals(argumentsNoteEntry[0])) {","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"SvethaMahadevan"},"content":"                storage.collectionOfEntries.addEntry(argumentsNoteEntry[0], argumentsNoteEntry[1]);","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"SvethaMahadevan"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"SvethaMahadevan"},"content":"        ui.printAddedEntryMessage(argumentsNoteEntry[1]);","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"SvethaMahadevan"},"content":"        StorageEntries.writeEntries(storage.collectionOfEntries);","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"SvethaMahadevan":47,"nvbinh15":5,"ngnigel99":4,"shoibloya":2}},{"path":"src/main/java/seedu/duke/commands/journal/AddNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.journal;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.journal.DuplicateNoteException;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.journal.EmptyNoteArgumentsException;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.journal.EmptyNoteNameException;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.journal.NotebookArgumentNotFoundException;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.parser.journal.ParserJournal;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.StorageNotes;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"public class AddNoteCommand extends Command {","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"    public String userInput;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    public AddNoteCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"        syntax \u003d \"journal notebook n/ NOTEBOOK_NAME\";","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"SvethaMahadevan"},"content":"     * Constructor for the AddNoteCommand.","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param userInput input from the user.","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"SvethaMahadevan"},"content":"    public AddNoteCommand(String userInput) {","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"        helpMessage \u003d \"Add a notebook to list\";","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"        syntax \u003d \"journal notebook n/ NOTEBOOK_NAME\";","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"SvethaMahadevan"},"content":"     * Adds the notebooks to a collection of notebooks.","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param ui allows for printing that note is added","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param storage to allow for storage of notes","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws EmptyNoteNameException No note name entered after \u0027n/\u0027.","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws EmptyNoteArgumentsException if no arguments found for notebook.","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"SvethaMahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"SvethaMahadevan"},"content":"    public void execute(Ui ui, Storage storage) throws EmptyNoteNameException, EmptyNoteArgumentsException, IOException,","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"SvethaMahadevan"},"content":"            DuplicateNoteException, NotebookArgumentNotFoundException {","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"SvethaMahadevan"},"content":"        String noteName \u003d ParserJournal.parseAddNoteCommand(userInput, storage);","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"SvethaMahadevan"},"content":"        if (noteName \u003d\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"SvethaMahadevan"},"content":"            throw new NotebookArgumentNotFoundException(\"Note argument not found!\");","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"SvethaMahadevan"},"content":"        assert (noteName !\u003d null);","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"SvethaMahadevan"},"content":"        ui.printAddedNoteMessage(noteName);","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"SvethaMahadevan"},"content":"        storage.collectionOfNotes.addNote(noteName);","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"SvethaMahadevan"},"content":"        StorageNotes.writeCollectionOfNotes(storage.collectionOfNotes);","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"SvethaMahadevan":42,"nvbinh15":6,"ngnigel99":7,"shoibloya":1}},{"path":"src/main/java/seedu/duke/commands/journal/ListJournalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.journal;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.journal.Entry;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.journal.Note;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"public class ListJournalCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"    public ListJournalCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"        helpMessage \u003d \"Listing notebooks with entries\";","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"        syntax \u003d \"journal list\";","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"     * Allows for the listing of notebooks and entries.","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param ui allows for printing of a message to indicate that the note has been added","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param storage to print from storage","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"SvethaMahadevan"},"content":"    public void execute(Ui ui, Storage storage) {","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cNote\u003e notes \u003d storage.collectionOfNotes.getNotesArrayList();","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cEntry\u003e entries \u003d storage.collectionOfEntries.getEntriesArrayList();","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"SvethaMahadevan"},"content":"        for (Note note : notes) {","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"SvethaMahadevan"},"content":"            System.out.println(\"The notebook \" + note.getNoteName() + \" contains:\");","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"SvethaMahadevan"},"content":"            for (Entry entry : entries) {","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"SvethaMahadevan"},"content":"                if (entry.getEntryNoteName().equals(note.getNoteName())) {","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"SvethaMahadevan"},"content":"                    System.out.println(entry.getNameOfJournalEntry());","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"SvethaMahadevan"},"content":"                }","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"SvethaMahadevan"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"SvethaMahadevan":34,"nvbinh15":2,"ngnigel99":2}},{"path":"src/main/java/seedu/duke/commands/module/AddModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.module;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.module.IllegalModuleException;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.module.Module;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.module.ModuleList;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":" * A representation of the command for adding a Module.","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"public class AddModuleCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    String commandArgs;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    public AddModuleCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"        syntax \u003d \"module add c/ [MODULE_CODE] n/ [MODULE_NAME] e/ [EXPECTED_GRADE]\";","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor.","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"     * @param commandArgs The command arguments.","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"    public AddModuleCommand(String commandArgs) {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"        this.commandArgs \u003d commandArgs;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"        this.helpMessage \u003d \"Add a module\";","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"        this.syntax \u003d \"module add c/ [MODULE_CODE] n/ [MODULE_NAME] e/ [EXPECTED_GRADE]\";","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"     * Execute the AddModuleCommand.","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"     * @param ui The component of Duke that deals with the interaction with the user.","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"     * @param storage The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"     * @throws ClickException If there is an exception of type ClickException occurs.","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"     * @throws IOException If there is an error while saving data to file.","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"    public void execute(Ui ui, Storage storage) throws ClickException, IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"        int indexOfCode \u003d commandArgs.indexOf(\"c/\");","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"        int indexOfName \u003d commandArgs.indexOf(\"n/\");","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"        int indexOfExpectedGrade \u003d commandArgs.indexOf(\"e/\");","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"        Module module \u003d getModule(indexOfCode, indexOfName, indexOfExpectedGrade);","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"        ModuleList moduleList \u003d storage.storageModule.readDataFromFile();","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"        moduleList.addModule(module);","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(\"Added \" + module);","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"        storage.storageModule.saveDataToFile(moduleList);","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"     * Returns a new Module based on user\u0027s input.","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"     * @param indexOfCode Index of Module code.","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"     * @param indexOfName Index of Module name.","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"     * @param indexOfExpectedGrade Index of Module expected grade.","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"     * @return A new Module based on user\u0027s input.","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"     * @throws IllegalModuleException If user\u0027s input is not in the correct format.","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"    private Module getModule(int indexOfCode, int indexOfName, int indexOfExpectedGrade) throws IllegalModuleException {","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"nvbinh15"},"content":"        String code;","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"nvbinh15"},"content":"        String name;","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"nvbinh15"},"content":"        String expectedGrade;","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"nvbinh15"},"content":"        Module module;","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"nvbinh15"},"content":"        boolean isInvalidInput \u003d (indexOfCode \u003d\u003d -1) || (indexOfName !\u003d -1 \u0026\u0026 indexOfCode \u003e indexOfName)","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"nvbinh15"},"content":"                || (indexOfName \u003d\u003d -1 \u0026\u0026 indexOfExpectedGrade !\u003d -1)","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"nvbinh15"},"content":"                || (indexOfExpectedGrade !\u003d -1","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"nvbinh15"},"content":"                \u0026\u0026 (indexOfName \u003e indexOfExpectedGrade || indexOfCode \u003e indexOfExpectedGrade));","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"nvbinh15"},"content":"        if (isInvalidInput) {","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"nvbinh15"},"content":"            throw new IllegalModuleException();","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"nvbinh15"},"content":"        if (indexOfName !\u003d -1 \u0026\u0026 indexOfExpectedGrade !\u003d -1) {","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"nvbinh15"},"content":"            code \u003d commandArgs.substring(indexOfCode + 2, indexOfName).strip();","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"nvbinh15"},"content":"            name \u003d commandArgs.substring(indexOfName + 2, indexOfExpectedGrade).strip();","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"nvbinh15"},"content":"            expectedGrade \u003d commandArgs.substring(indexOfExpectedGrade + 2).strip();","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"nvbinh15"},"content":"            module \u003d new Module(code, name, expectedGrade);","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"nvbinh15"},"content":"        } else if (indexOfName !\u003d -1) {","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"nvbinh15"},"content":"            code \u003d commandArgs.substring(indexOfCode + 2, indexOfName).strip();","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"nvbinh15"},"content":"            name \u003d commandArgs.substring(indexOfName + 2).strip();","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"nvbinh15"},"content":"            module \u003d new Module(code, name);","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"nvbinh15"},"content":"        } else { // indexOfName \u003d\u003d -1","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"nvbinh15"},"content":"            code \u003d commandArgs.substring(indexOfCode + 2).strip();","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"nvbinh15"},"content":"            module \u003d new Module(code);","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"nvbinh15"},"content":"        return module;","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"nvbinh15":90,"ngnigel99":1}},{"path":"src/main/java/seedu/duke/commands/module/DeleteModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.module;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.module.IllegalModuleIndexException;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.module.ModuleList;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":" * A representation of the command for deleting a Module.","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"public class DeleteModuleCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_DELETE_MODULE \u003d \"I have deleted this module:\";","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    String commandArgs;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    public DeleteModuleCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"        syntax \u003d \"food add n/ [FOOD_NAME] c/ [CALORIE]\";","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor.","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"     * @param commandArgs The command arguments.","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"    public DeleteModuleCommand(String commandArgs) {","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"        this.commandArgs \u003d commandArgs;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"        this.helpMessage \u003d \"Delete a listed module\";","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"        this.syntax \u003d \"module delete [MODULE_INDEX]\";","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"     * Executes the DeleteModuleCommand.","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"     * @param ui      The component of Duke that deals with the interaction with the user.","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"     * @param storage The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"     * @throws ClickException If there is an exception of type ClickException occurs.","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"     * @throws Exception If there is an exception of type other than ClickException occurs.","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"    public void execute(Ui ui, Storage storage) throws ClickException, Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"        ModuleList moduleList \u003d storage.storageModule.readDataFromFile();","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"        int moduleIndex \u003d Integer.parseInt(commandArgs.strip()) - 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"        boolean isValidIndex \u003d (moduleIndex \u003e\u003d 0) \u0026\u0026 (moduleIndex \u003c moduleList.getNumberOfModules());","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"        if (!isValidIndex) {","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"            throw new IllegalModuleIndexException();","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(MESSAGE_DELETE_MODULE);","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(moduleList.getModuleByIndex(moduleIndex));","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"        moduleList.removeModuleByIndex(moduleIndex);","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"        storage.storageModule.saveDataToFile(moduleList);","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"nvbinh15":55}},{"path":"src/main/java/seedu/duke/commands/module/ListModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.module;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.module.Module;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.module.ModuleList;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":" * A representation of the command for listing Modules.","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"public class ListModuleCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_NO_MODULE \u003d \"You don\u0027t have any modules\";","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_LISTING_MODULES \u003d \"Here are the modules in your list:\";","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"    public ListModuleCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"        helpMessage \u003d \"List all added modules\";","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"        syntax \u003d \"module list\";","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"     * Executes the ListModuleCommand.","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"     * @param ui      The component of Duke that deals with the interaction with the user.","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"     * @param storage The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"     * @throws ClickException If there is an exception of type ClickException occurs.","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"     * @throws Exception If there is an exception of type other than ClickException occurs.","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"    public void execute(Ui ui, Storage storage) throws ClickException, Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"        ModuleList moduleList \u003d storage.storageModule.readDataFromFile();","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"        if (moduleList.getNumberOfModules() \u003c\u003d 0) {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"            System.out.println(MESSAGE_NO_MODULE);","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"            return;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(MESSAGE_LISTING_MODULES);","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"        for (Module m : moduleList.getModules()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"            System.out.println(i + \". \" + m);","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"            i++;","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"nvbinh15":47}},{"path":"src/main/java/seedu/duke/commands/zoom/AddZoomCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.zoom;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.exceptions.FileNotFoundException;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.storage.StorageZoom;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"shoibloya"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"shoibloya"},"content":"public class AddZoomCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"shoibloya"},"content":"    private String moduleName;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"shoibloya"},"content":"    private String zoomLink;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    public AddZoomCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"        syntax \u003d \"zoom add [MODULE_CODE] [ZOOM_LINK]\";","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"shoibloya"},"content":"    public AddZoomCommand(String moduleName, String zoomLink) {","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"        helpMessage \u003d \"Adds zoom links\";","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"        syntax \u003d \"zoom add [MODULE_CODE] [ZOOM_LINK]\";","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"        this.zoomLink \u003d zoomLink;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"shoibloya"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"shoibloya"},"content":"    public void execute(Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"shoibloya"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"shoibloya"},"content":"            StorageZoom.saveLink(moduleName, zoomLink);","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"shoibloya"},"content":"            System.out.println(\"Successful\");","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"shoibloya"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"shoibloya"},"content":"            System.out.println(\"Unsuccessful\");","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"shoibloya"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"shoibloya"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"nvbinh15":2,"ngnigel99":8,"shoibloya":26}},{"path":"src/main/java/seedu/duke/commands/zoom/ListZoomLinks.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.zoom;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.storage.StorageZoom;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"public class ListZoomLinks extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"    public ListZoomLinks() {","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"        syntax \u003d \"zoom list\";","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"shoibloya"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"shoibloya"},"content":"    public void execute(Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"shoibloya"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"shoibloya"},"content":"            StorageZoom.displayLinks();","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"shoibloya"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"shoibloya"},"content":"            System.out.println(\"Unable to open the file\");","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"shoibloya"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"shoibloya"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"nvbinh15":2,"ngnigel99":3,"shoibloya":16}},{"path":"src/main/java/seedu/duke/constants/CommandConstants.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.constants;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":" * A class that contains constants related to Commands.","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"public class CommandConstants {","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"    public static final String COMMAND_EXIT \u003d \"exit\";","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"    public static final String COMMAND_CALENDAR \u003d \"calendar\";","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"    public static final String COMMAND_FOOD     \u003d \"food\";","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    public static final String COMMAND_SUFFIX_ADD \u003d \"add\";","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"    public static final String COMMAND_SUFFIX_CLEAR \u003d \"clear\";","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    public static final String COMMAND_SUFFIX_LIST \u003d \"list\";","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"    public static final String COMMAND_ADD_NOTE \u003d \"notebook\";","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"    public static final String COMMAND_ADD_ENTRY \u003d \"entry\";","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"    public static final String COMMAND_JOURNAL_LIST \u003d \"list\";","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"    public static final String COMMAND_NOTE \u003d \"journal\";","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"    public static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    public static final String COMMAND_MODULE \u003d \"module\";","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"    public static final String COMMAND_SUFFIX_DELETE \u003d \"delete\";","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"    public static final String COMMAND_SUFFIX_EDIT \u003d \"edit\";","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"shoibloya"},"content":"    public static final String COMMAND_HElP \u003d \"help\";","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"shoibloya"},"content":"    public static final String COMMAND_ZOOM \u003d \"zoom\";","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"shoibloya"},"content":"    public static final String COMMAND_ZOOM_SUFFIX_ADD \u003d \"add\";","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    public static final String COMMAND_ZOOM_SUFFIX_LIST \u003d \"show\";","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"SvethaMahadevan":4,"nvbinh15":11,"ngnigel99":5,"swatimahadevan":3,"shoibloya":4}},{"path":"src/main/java/seedu/duke/constants/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.constants;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"public class Messages {","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"    public static final String LOGO \u003d \"\\t\" + \" _____ _  _     _\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"            + \"\\t\" + \"/  __ \\\\ |(_)   | |\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"            + \"\\t\" + \"| /  \\\\/ |_  ___| | __\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"            + \"\\t\" + \"| \\\\__/\\\\ | | (__|   \u003c\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"            + \"\\t\" + \"\\\\_____/_|_|\\\\___|_|\\\\_\\\\\\n\\n\";","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"    public static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"    public static final String LINE_PREFIX \u003d \"\\t\";","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"    public static final String LINE_SEPARATOR \u003d System.lineSeparator();","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    public static final String NEW_LINE \u003d LINE_SEPARATOR + LINE_PREFIX;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"    public static final String HORIZONTAL_LINE \u003d LINE_PREFIX + \"__________________________________________________\";","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_GREETING \u003d LINE_PREFIX + \"Hello! I\u0027m Duke\" + NEW_LINE + \"What can I do for you?\";","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_GOODBYE \u003d LINE_PREFIX + \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    // Food partition","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_DONE_CLEAR_LIST \u003d \"Cleared food record list for today!\";","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_ADD_FOOD_SYNTAX \u003d \"Please enter the name of the food [TEXT] \"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"                                                        + \"followed by the calorie count [INT]\";","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    public static final String NON_NULL_INPUT \u003d \"Please do not leave fields empty!\";","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    public static final String RECORD_ATTRIBUTE_DIVIDER \u003d \" : \";","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    public static final String LIST_PROPER_FEATURE  \u003d  \"Please list a proper feature tagged with \";","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_NOT_AN_INT \u003d \"Please only enter Integers\";","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_ERROR_MESSAGE_GENERAL \u003d \"Oops, error encountered.\";","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_DONE_DELETE_INDEX \u003d \"Deleted food record \";","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    //end of Food","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"    //@author swatim","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"    //SCHEDULE BEGIN","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"    public static String CALENDAR_HEADER_LINE \u003d \"________________________________________________________\";","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"    public static final String INVALID_CALENDAR_INPUT \u003d \" Invalid Input for Calendar Command! \";","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"    public static final int MONTH_UPPER_LIMIT \u003d 12;","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"    public static final int MONTH_LOWER_LIMIT \u003d 1;","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"    public static final String TASK_FORMATTER \u003d \"    |\";","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"    public static final String CALENDER_DATE_FORMATTER \u003d \"            |\";","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"    public static final String SEPARATOR_DISPLAY \u003d \"|\";","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"    public static final String EMPTY_SPACE \u003d \"\";","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"    public static final int NUMBER_OF_DAYS_IN_WEEK \u003d 7;","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"    public static final String LEAVE_EMPTY_IN_DISPLAY \u003d \"  \";","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"    public static final String[] DAYS_IN_MONTH \u003d {\"01\", \"02\", \"03\", \"04\", \"05\",","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"        \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\", \"13\",","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"        \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\",","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"        \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\"};","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"    public static final String TODO \u003d \"todo\";","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"    public static final int INDEX_TODO_DESCRIPTION \u003d 1;","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"    public static final int INDEX_TODO_DATE \u003d 2;","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"    public static final int TOTAL_SIZE \u003d 32;","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"    public static final String ADDED_TASK \u003d \"Task has been added successfully!\";","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"swatimahadevan"},"content":"    public static final String LIST_TASKS_HEADER \u003d \"Here\u0027s your task list:\";","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"swatimahadevan"},"content":"    public static final String DISPLAY_LINE \u003d \"-------------------------\"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"swatimahadevan"},"content":"            + \"----------------------------------------\"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"swatimahadevan"},"content":"            + \"-----------------------------------------\";","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"swatimahadevan"},"content":"    public static final String DAY_DEMARCATION \u003d \"|\";","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"swatimahadevan"},"content":"    public static final String NO_TASK_IN_DAY \u003d \"              |\";","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"swatimahadevan"},"content":"    public static final String DELETED_TASK \u003d \"Task has been deleted!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"swatimahadevan"},"content":"    public static final String CALENDAR_INVALID_ARGS \u003d \"\u0027calendar\u0027 should be followed by a suffixed command!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"swatimahadevan"},"content":"    public static final String CALENDAR_EDIT_DELETE_INVALID_ARGS \u003d \"Task index not entered...\";","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"swatimahadevan"},"content":"    public static final String NAME_ABSENT \u003d \" Task name not found after n/\";","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"swatimahadevan"},"content":"    public static final String DELIMITER_DATE \u003d \"-\";","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"swatimahadevan"},"content":"    public static final int CALENDAR_COMMAND_SPLIT \u003d 9;","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"swatimahadevan"},"content":"    public static final int INDEX_ZERO \u003d 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"swatimahadevan"},"content":"    public static final int INDEX_ONE \u003d 1;","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"swatimahadevan"},"content":"    //SCHEDULE END","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"shoibloya"},"content":"    //HELP BEGIN","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"shoibloya"},"content":"    public static final String HELP_MESSAGE \u003d \"List of valid commands:\\n1. module\\n2. calendar\\n3. food\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"shoibloya"},"content":"            + \"4. exit\\nType help \u003cCOMMAND_NAME\u003e to get a detailed description\";","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"shoibloya"},"content":"    public static final String HELP_MESSAGE_MODULE \u003d \"\";","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"shoibloya"},"content":"    public static final String HELP_MESSAGE_CALENDAR \u003d \"\";","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"    public static final String HELP_MESSAGE_FOOD \u003d \"food add n/ [FOOD_NAME] c/ [CALORIE]\\nfood list\\nfood clear\";","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"shoibloya"},"content":"    public static final String HELP_MESSAGE_EXIT \u003d \"Saves your current progress and exits the application\";","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"shoibloya"},"content":"    //HELP END","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":15,"ngnigel99":12,"swatimahadevan":42,"shoibloya":8}},{"path":"src/main/java/seedu/duke/exceptions/ArgumentsNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"public class ArgumentsNotFoundException extends ClickException{","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"ngnigel99":4}},{"path":"src/main/java/seedu/duke/exceptions/ClickException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":" * A base class that represents checked specific exceptions thrown by Click.","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"public class ClickException extends Exception {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"    public String message;  //author ngnigel99","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":10}},{"path":"src/main/java/seedu/duke/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"public class DuplicateTaskException extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(\"A task by this name has already been added!\");","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"swatimahadevan":7}},{"path":"src/main/java/seedu/duke/exceptions/EmptyEntryArgumentsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"public class EmptyEntryArgumentsException extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"    public EmptyEntryArgumentsException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"No arguments found for entry.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"SvethaMahadevan":7}},{"path":"src/main/java/seedu/duke/exceptions/EmptyEntryNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"public class EmptyEntryNameException extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"    public EmptyEntryNameException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"No entry name entered after \u0027e/\u0027 \");","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"SvethaMahadevan":7}},{"path":"src/main/java/seedu/duke/exceptions/ExceptionHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":" * A class that handles exceptions thrown by Duke.","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"public class ExceptionHandler {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"     * Handles duke exceptions.","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"     * @param e Exception of type DukeException thrown by Duke.","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    public static void handleDukeExceptions(ClickException e, String userInput) {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"hey, I can\u0027t \" + userInput + \" yet, try help for more commands\");","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"     * Handles other exceptions.","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"     * @param e Exception of types other than DukeException thrown by Duke.","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"    public static void handleOtherExceptions(Exception e) {","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"OOPs, invalid command, try help for more commands.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":26,"ngnigel99":3}},{"path":"src/main/java/seedu/duke/exceptions/FileNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shoibloya"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"shoibloya"},"content":"public class FileNotFoundException extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"shoibloya"},"content":"    public FileNotFoundException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"shoibloya"},"content":"        System.out.println(\"Error: File not found\");","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"shoibloya"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"shoibloya":7}},{"path":"src/main/java/seedu/duke/exceptions/IllegalDateTimeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":" * A class that represents exceptions thrown when a input date time is illegal.","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"public class IllegalDateTimeException extends Exception {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":9}},{"path":"src/main/java/seedu/duke/exceptions/IncorrectDateFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"public class IncorrectDateFormatException extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"    public IncorrectDateFormatException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(\"You have given a date of incorrect format! Try DD-MM-YYY...\");","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"swatimahadevan":7}},{"path":"src/main/java/seedu/duke/exceptions/IncorrectNumberOfArgumentsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"public class IncorrectNumberOfArgumentsException extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"    public IncorrectNumberOfArgumentsException(String message) {","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(message);","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"swatimahadevan":7}},{"path":"src/main/java/seedu/duke/exceptions/InvalidArgumentsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":" * Thrown when command entered by user starts with a correct keyword,","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":" * but full command does not exist.","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":" *","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" * @author ngnigel99","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"public class InvalidArgumentsException extends Exception{","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"ngnigel99":6,"swatimahadevan":4}},{"path":"src/main/java/seedu/duke/exceptions/InvalidDateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"public class InvalidDateException extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"    private static String message \u003d \"Invalid date given, use format DD-MM-YYYY!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"    public InvalidDateException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(message);","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"        return message;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"swatimahadevan":14}},{"path":"src/main/java/seedu/duke/exceptions/InvalidMonthException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"public class InvalidMonthException extends ClickException {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"    private static String message \u003d \"The month has to be a value between 01-12!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"    public InvalidMonthException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"        return message;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"    public static void printMessage() {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(message);","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"swatimahadevan":17}},{"path":"src/main/java/seedu/duke/exceptions/MissingTodoArgumentsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"public class MissingTodoArgumentsException extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"    public MissingTodoArgumentsException(String message) {","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(message);","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"swatimahadevan":7}},{"path":"src/main/java/seedu/duke/exceptions/StorageException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"public class StorageException extends ClickException {","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"nvbinh15":4}},{"path":"src/main/java/seedu/duke/exceptions/WrongDividerOrderException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"public class WrongDividerOrderException extends ClickException{","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"ngnigel99":4}},{"path":"src/main/java/seedu/duke/exceptions/calendar/CalendarIndexNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions.calendar;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"public class CalendarIndexNotFoundException extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"    public CalendarIndexNotFoundException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(\"Cannot find index of task to delete! Use \u0027calendar list\u0027 first\"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"                + \"to find desired task index\");","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"nvbinh15":1,"ngnigel99":2,"swatimahadevan":5}},{"path":"src/main/java/seedu/duke/exceptions/calendar/InvalidCalendarArgumentsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions.calendar;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"public class InvalidCalendarArgumentsException extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"    public InvalidCalendarArgumentsException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(\"Incorrect arguments found for calendar!\");","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"nvbinh15":1,"swatimahadevan":6}},{"path":"src/main/java/seedu/duke/exceptions/food/FoodIndexNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions.food;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"public class FoodIndexNotFoundException extends ClickException {","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"    public FoodIndexNotFoundException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"Cannot find index of food record to delete! Use \u0027food list\u0027 first\"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"                + \" to find desired food record index\");","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"nvbinh15":3,"ngnigel99":7}},{"path":"src/main/java/seedu/duke/exceptions/food/IllegalFoodParameterException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions.food;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" * Exception thrown when parameters are left blank when adding a food item.","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" * More specifically, when user input is not 2 words consisting of name, calorie count.","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" *","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":" * @author ngnigel99","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"public class IllegalFoodParameterException extends ClickException {","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    public IllegalFoodParameterException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"        this.message \u003d Messages.PRINT_ADD_FOOD_SYNTAX;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"        return message;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"nvbinh15":2,"ngnigel99":19}},{"path":"src/main/java/seedu/duke/exceptions/journal/DuplicateNoteException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions.journal;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"public class DuplicateNoteException extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"    public DuplicateNoteException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"Error ! The notebook already exists\");","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"SvethaMahadevan":6,"nvbinh15":1}},{"path":"src/main/java/seedu/duke/exceptions/journal/EmptyJournalArgumentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions.journal;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"public class EmptyJournalArgumentException extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"    public EmptyJournalArgumentException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"No arguments found for journal.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"SvethaMahadevan":6,"nvbinh15":1}},{"path":"src/main/java/seedu/duke/exceptions/journal/EmptyNoteArgumentsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions.journal;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"public class EmptyNoteArgumentsException extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"    public EmptyNoteArgumentsException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"No arguments found for notebook.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"SvethaMahadevan":6,"nvbinh15":1}},{"path":"src/main/java/seedu/duke/exceptions/journal/EmptyNoteNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions.journal;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"public class EmptyNoteNameException extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"    public EmptyNoteNameException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"No note name entered after \u0027n/\u0027 \");","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"SvethaMahadevan":6,"nvbinh15":1}},{"path":"src/main/java/seedu/duke/exceptions/journal/IncorrectJournalArgumentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions.journal;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"public class IncorrectJournalArgumentException extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"    public IncorrectJournalArgumentException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"Incorrect arguments found for journal.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"SvethaMahadevan":6,"nvbinh15":1}},{"path":"src/main/java/seedu/duke/exceptions/journal/NotebookArgumentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions.journal;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"public class NotebookArgumentNotFoundException extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"    public NotebookArgumentNotFoundException(String message) {","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(message);","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"SvethaMahadevan":6,"nvbinh15":1}},{"path":"src/main/java/seedu/duke/exceptions/journal/NotebookNotFoundForEntryAddition.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions.journal;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"public class NotebookNotFoundForEntryAddition extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"    public NotebookNotFoundForEntryAddition() {","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"Notebook hasn\u0027t been created yet!\");","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"Cannot add entry!\");","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"SvethaMahadevan":7,"nvbinh15":1}},{"path":"src/main/java/seedu/duke/exceptions/module/IllegalModuleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions.module;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"public class IllegalModuleException extends ClickException {","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"nvbinh15":6}},{"path":"src/main/java/seedu/duke/exceptions/module/IllegalModuleIndexException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions.module;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"public class IllegalModuleIndexException extends ClickException {","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"nvbinh15":6}},{"path":"src/main/java/seedu/duke/food/FoodRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.food;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" *  A food record simply records the name and calorie count of a food item.","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" *  [FOOD_NAME] [CALORIES]","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" *","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":" * @author  ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"public class FoodRecord {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    private String foodName;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    private Integer calorieCount;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    public FoodRecord(String foodName, Integer calorieCount) {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"        this.foodName \u003d foodName;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"        this.calorieCount \u003d calorieCount;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    public String getFoodName() {","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"        return foodName;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    public Integer getCalorieCount() {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"        return calorieCount;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"        return foodName","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"                + Messages.RECORD_ATTRIBUTE_DIVIDER","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"                + calorieCount;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"    public String toSaveListFormat() {","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"        return foodName + \"|\" + calorieCount + \"\\n\";","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"ngnigel99":40}},{"path":"src/main/java/seedu/duke/food/ListOfRecords.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.food;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":" * An abstract class for implementing food record  lists.","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"public abstract class ListOfRecords\u003cT\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    protected ArrayList\u003cT\u003e list \u003d  new  ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    protected ArrayList\u003cT\u003e getList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"        return list;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"     * Adds items to a list.","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"     * @param recordToAdd record to add into list","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    protected void addToList(T recordToAdd) {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"        list.add(recordToAdd);","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"     * Prints a list.","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    protected void printList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"        for (T listRecord : list) {","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(listRecord);","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"     * Clears a list,  and wipes  storage.","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"     * @author  ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"    protected void clearList()  {","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"        list.clear();","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"ngnigel99":45}},{"path":"src/main/java/seedu/duke/food/WhatIAteList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.food;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" * Represents a list of what the user has eaten.","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":" *  This would include the date of the record and","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":" *      the food items consumed.","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":" *","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":" * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"public class WhatIAteList extends ListOfRecords\u003cFoodRecord\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    private Date dayOfRecordList;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    public WhatIAteList(Date dayOfRecordList) {","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"        this.dayOfRecordList \u003d dayOfRecordList;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    //if date not given","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    public WhatIAteList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    public ArrayList\u003cFoodRecord\u003e getList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"        return list;","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"     * Adds a food Record to a list, then notifies the user of what  item","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"     *  they  have entered.","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"     * @author  ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"     * @param recordToAdd record to add to list","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"     * @param isSilent checks whether to print Ui message","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"    public void addToList(FoodRecord recordToAdd, boolean isSilent) {","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"        super.addToList(recordToAdd);","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"        if (!isSilent) {","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"            Ui.printAddRecord(recordToAdd);","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"     * Prints  index with suffix for visuals.","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"     * @param index index of list","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"    public void printIndexWithSuffix(int index) {","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"        String[] suffixList \u003d {\"st\", \"nd\", \"rd\", \"th\"};","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"        String suffixToPrint;","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"        if ((index - 1) %  10 \u003d\u003d 0) {","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"            suffixToPrint \u003d suffixList[0];","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"        } else if ((index - 2) % 10 \u003d\u003d 0) {","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"            suffixToPrint \u003d suffixList[1];","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"        } else if ((index - 3) % 10 \u003d\u003d 0) {","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"            suffixToPrint \u003d suffixList[2];","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"        } else {","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"            suffixToPrint \u003d suffixList[3];","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"        System.out.print(index + suffixToPrint  +  \",\");","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"     * Prints food records collated in list.","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"     * In context, for today.","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"    public void printList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"        int index \u003d 1;  //TODO integrate this with storage so it\u0027s not a magic number","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"ngnigel99"},"content":"        int calorieSum \u003d  0;","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"ngnigel99"},"content":"        for (FoodRecord listRecord : list) {","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"ngnigel99"},"content":"            printIndexWithSuffix(index);","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"You consumed  \" + listRecord.getFoodName()","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"ngnigel99"},"content":"                                + \" , which has a calorie count of : \"","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"ngnigel99"},"content":"                                + listRecord.getCalorieCount() + \"!\");","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"ngnigel99"},"content":"            index++;","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"ngnigel99"},"content":"            calorieSum +\u003d listRecord.getCalorieCount();","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"Wow, that\u0027s a lot of food! Finished reading today\u0027s list\");","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"You consumed \" + calorieSum +  \" calories in total today!\");","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"ngnigel99"},"content":"    public void clearList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"ngnigel99"},"content":"        super.clearList();","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"ngnigel99"},"content":"        Ui.printDoneClearList();","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"ngnigel99":95}},{"path":"src/main/java/seedu/duke/help/ClassPackageReader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.help;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":" * Enables accessing classes on a realtime basis.","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":" * This is used in conjunction with help command,","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":" * to enable easy printing of syntax and command messages","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":" * without string overwrite on each update of command.","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":" * reference: https://www.baeldung.com/java-find-all-classes-in-package","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":" * @author ngnigel99","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"public class ClassPackageReader {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    private static final String CALENDAR_PACKAGE \u003d \"seedu.duke.commands.calendar\";","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    private static final String FOOD_PACKAGE \u003d \"seedu.duke.commands.food\";","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    private static final String JOURNAL_PACKAGE \u003d \"seedu.duke.commands.journal\";","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"    private static final String MODULE_PACKAGE \u003d \"seedu.duke.commands.module\";","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"    private static final String ZOOM_PACKAGE \u003d \"seedu.duke.commands.zoom\";","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"    private static final String METHOD_NAME \u003d \"printClassNameAndSyntax\";    //in Command class","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"     * The system class loader loads all the classes found in the classpath.","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"     * @param packageName name of package to access","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"     * @return set of classes accessed","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"    public static Set\u003cClass\u003e getClasses(String packageName) {","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"        InputStream stream \u003d ClassLoader.getSystemClassLoader()","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"                .getResourceAsStream(packageName.replaceAll(\"[.]\", \"/\"));   //stream to URL","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"        BufferedReader reader \u003d new BufferedReader(new InputStreamReader(stream));","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"        return reader.lines()","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"                .filter(line -\u003e line.endsWith(\".class\"))","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"                .map(line -\u003e getClass(line, packageName))","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"     * Merges sets together.","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"     * @param a Set to be merged.","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"     * @param b Set(s) to be merged.","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"     * @param \u003cT\u003e Generic type of the final set.","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"     * @return Set some set with a, b, ... merged into.","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"    public static \u003cT\u003e Set\u003cT\u003e mergeSet(Set\u003cT\u003e a, Set\u003cT\u003e... b) {","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"        return new HashSet\u003cT\u003e() {","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"            {","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"                addAll(a);","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"                for (Set\u003cT\u003e c : b) {","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"                    addAll(c);","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"                }","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"        };","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"     * Loads a class given class name and package name.","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"     * @param className name of the class to be loaded.","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"     * @param packageName name of the package in which the class is found.","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"     * @return class some class to be loaded.","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"ngnigel99"},"content":"    public static Class getClass(String className, String packageName) {","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"ngnigel99"},"content":"            return Class.forName(packageName + \".\"","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"ngnigel99"},"content":"                    + className.substring(0, className.lastIndexOf(\u0027.\u0027)));","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"ngnigel99"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"ngnigel99"},"content":"            Ui.printMessage(\"Not found\");","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"ngnigel99"},"content":"        return null;","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"ngnigel99"},"content":"     * Reads all classes on runtime, filters out commands.","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"ngnigel99"},"content":"     * From filtered list, prints syntax variable tagged to command,","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"ngnigel99"},"content":"     * using the printSyntax method in Command class.","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"ngnigel99"},"content":"     * @throws InstantiationException if method fails to run.","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"ngnigel99"},"content":"     * @throws IllegalAccessException if method fails to run.","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"ngnigel99"},"content":"     * @throws InvocationTargetException if method fails to run.","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"ngnigel99"},"content":"    public static void getCommandsAndPrintSyntax() throws InstantiationException,","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"ngnigel99"},"content":"                                                            IllegalAccessException,","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"ngnigel99"},"content":"                                                            InvocationTargetException {","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"ngnigel99"},"content":"        Set\u003cClass\u003e calendarCommands \u003d getClasses(CALENDAR_PACKAGE);","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"ngnigel99"},"content":"        Set\u003cClass\u003e foodCommands \u003d getClasses(FOOD_PACKAGE);","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"ngnigel99"},"content":"        Set\u003cClass\u003e journalCommands \u003d getClasses(JOURNAL_PACKAGE);","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"ngnigel99"},"content":"        Set\u003cClass\u003e moduleCommands \u003d getClasses(MODULE_PACKAGE);","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"ngnigel99"},"content":"        Set\u003cClass\u003e zoomCommands \u003d getClasses(ZOOM_PACKAGE);","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"ngnigel99"},"content":"        Set\u003cClass\u003e allClasses \u003d mergeSet(calendarCommands,foodCommands,","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"ngnigel99"},"content":"                                        journalCommands, moduleCommands,","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"ngnigel99"},"content":"                                        zoomCommands);","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"ngnigel99"},"content":"        List\u003cClass\u003e filteredCommands \u003d filterClassesByCommand(allClasses);","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"ngnigel99"},"content":"        sortCommandByName(filteredCommands);    //sorts by naming convention","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"ngnigel99"},"content":"        runSyntaxCommands(filteredCommands);","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"ngnigel99"},"content":"     * Runs the overloaded \u003ccode\u003egetSyntax\u003c/code\u003e method in Commands.","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"ngnigel99"},"content":"     * Assumptions: List only includes classes that extend Command,","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"ngnigel99"},"content":"     *              and thus can invoke the getSyntax method,","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"ngnigel99"},"content":"     *              which prints the syntax of the command to the user.","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"ngnigel99"},"content":"     * @param filteredCommands list of classes that extend Command.","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"ngnigel99"},"content":"     * @throws InstantiationException If method fails to invoke.","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"ngnigel99"},"content":"     * @throws IllegalAccessException If method fails to invoke.","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"ngnigel99"},"content":"     * @throws InvocationTargetException If method fails to invoke.","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"ngnigel99"},"content":"    private static void runSyntaxCommands(List\u003cClass\u003e filteredCommands) throws InstantiationException,","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"ngnigel99"},"content":"                                                                                IllegalAccessException,","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"ngnigel99"},"content":"                                                                                InvocationTargetException {","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"ngnigel99"},"content":"        for (Class s : filteredCommands) {","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"ngnigel99"},"content":"            try {","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"ngnigel99"},"content":"                Method getSyntax \u003d s.getMethod(METHOD_NAME); //void method","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"ngnigel99"},"content":"                Object newInstance \u003d s.getDeclaredConstructor().newInstance();","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"ngnigel99"},"content":"                getSyntax.invoke(newInstance);    //run void method","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"ngnigel99"},"content":"            } catch (NoSuchMethodException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"ngnigel99"},"content":"                System.out.println(\"check spelling\");","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"ngnigel99"},"content":"     * Differentiates command classes from others.","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"ngnigel99"},"content":"     * @param allClasses all classes read at runtime.","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"ngnigel99"},"content":"     * @return filteredCommands list of classes that extend Command.","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"ngnigel99"},"content":"    private static List\u003cClass\u003e filterClassesByCommand(Set\u003cClass\u003e allClasses) {","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"ngnigel99"},"content":"        List\u003cClass\u003e filteredCommands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"ngnigel99"},"content":"        for (Class s : allClasses) {","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"ngnigel99"},"content":"            if (Command.class.isAssignableFrom(s)) {    //filter commands","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"ngnigel99"},"content":"                filteredCommands.add(s);","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"ngnigel99"},"content":"            } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"ngnigel99"},"content":"                allClasses.remove(s);","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"ngnigel99"},"content":"        return filteredCommands;","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"ngnigel99"},"content":"     * Sorts command by name lexicographically.","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"ngnigel99"},"content":"     * @param filteredCommands list of commands.","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"ngnigel99"},"content":"    private static void sortCommandByName(List\u003cClass\u003e filteredCommands) {","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"ngnigel99"},"content":"        Collections.sort(filteredCommands, new Comparator\u003cClass\u003e() {","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"ngnigel99"},"content":"            @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"ngnigel99"},"content":"            public int compare(Class h1, Class h2) {","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"ngnigel99"},"content":"                return h1.getSimpleName().compareTo(h2.getSimpleName());","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"ngnigel99"},"content":"        });","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"ngnigel99":169}},{"path":"src/main/java/seedu/duke/journal/CollectionOfEntries.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.journal;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"public class CollectionOfEntries {","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"    private static ArrayList\u003cEntry\u003e entries \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"    public CollectionOfEntries() {","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"        this.entries \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"     * Returns list of entries.","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"     * @return list of entries","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"    public ArrayList\u003cEntry\u003e getEntriesArrayList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"        return entries;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"SvethaMahadevan"},"content":"     * Adds entry to collection of entries.","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param nameOfNote contains notebook name in which to add entry","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param nameOfEntry contains name of entry","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"SvethaMahadevan"},"content":"    public static void addEntry(String nameOfNote, String nameOfEntry) {","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"SvethaMahadevan"},"content":"        entries.add(new Entry(nameOfNote, nameOfEntry));","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"SvethaMahadevan":31}},{"path":"src/main/java/seedu/duke/journal/CollectionOfNotes.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.journal;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"public class CollectionOfNotes {","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"    private static ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"    public CollectionOfNotes() {","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"        this.notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"     * Returns list of notes.","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"     * @return list of notes.","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"    public ArrayList\u003cNote\u003e getNotesArrayList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"        return notes;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"SvethaMahadevan"},"content":"     * Adds notebooks to a collection of notebooks.","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param nameOfNote contains notebook name","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"SvethaMahadevan"},"content":"    public static void addNote(String nameOfNote) {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"SvethaMahadevan"},"content":"        notes.add(new Note(nameOfNote));","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"SvethaMahadevan":30}},{"path":"src/main/java/seedu/duke/journal/Entry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.journal;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"public class Entry {","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"    private String entryName;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"    private String noteName;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"     * Constructor of Entry class.","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param noteName name of the notebook","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param titleOfJournalEntry title of the entry.","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"    public Entry(String noteName, String titleOfJournalEntry) {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"        this.entryName \u003d titleOfJournalEntry;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"        this.noteName \u003d noteName;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"     * Returns the name of the entry.","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"SvethaMahadevan"},"content":"     * @return entryName which is a string variable which stores the name of entry","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"SvethaMahadevan"},"content":"    public String getNameOfJournalEntry() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"        return entryName;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"SvethaMahadevan"},"content":"     * Returns the name of the notebook corresponding to the entry.","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"SvethaMahadevan"},"content":"     * @return noteName stores name of notebook corresponding to entry.","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"SvethaMahadevan"},"content":"    public String getEntryNoteName() {","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"SvethaMahadevan"},"content":"        return noteName;","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"SvethaMahadevan"},"content":"     * Returns names of entry and its corresponding notebook in format to save in data file.","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"SvethaMahadevan"},"content":"     * @return  formattedNameOfNoteAndEntry names of entry and its notebook in format","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"SvethaMahadevan"},"content":"    public String toSaveFileFormat() {","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"SvethaMahadevan"},"content":"        String formattedNameOfNoteAndEntry \u003d  noteName + \"|\" + entryName;","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"SvethaMahadevan"},"content":"        return formattedNameOfNoteAndEntry;","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"SvethaMahadevan":45}},{"path":"src/main/java/seedu/duke/journal/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.journal;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"public class Note {","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"    protected String noteName;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"     * Constructor of Note class.","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param noteName name of the note","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"    public Note(String noteName) {","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"        this.noteName \u003d noteName;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"     * Returns the name of the note.","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"     * @return noteName which stores the name of the note.","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"SvethaMahadevan"},"content":"    public String getNoteName() {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"SvethaMahadevan"},"content":"        return noteName;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"SvethaMahadevan"},"content":"     * Returns name of notebook in format to save in data file.","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"SvethaMahadevan"},"content":"     * @return  stringForStorage name of notebook in format to save in data file.","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"SvethaMahadevan"},"content":"    public String toSaveFileFormat() {","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"SvethaMahadevan"},"content":"        String stringForStorage \u003d \"note\" + \"|\" + noteName;","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"SvethaMahadevan"},"content":"        return stringForStorage;","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"SvethaMahadevan":34}},{"path":"src/main/java/seedu/duke/logger/ClickLogger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import java.io.File;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":" * A class to handle logging file.","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"public class ClickLogger {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"    private Logger logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"    private static ClickLogger loggerInstance \u003d null;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"    public static final String PROJECT_ROOT \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    public static final String PATH_TO_LOG_FILE \u003d Paths.get(PROJECT_ROOT, \"logs\", \"ClickLogs.log\").toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"     * Private constructor.","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"    private ClickLogger() {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"            File file \u003d new File(PATH_TO_LOG_FILE);","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"            file.createNewFile();","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"            SimpleFormatter formatter \u003d new SimpleFormatter();","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"            FileHandler fileHandler \u003d new FileHandler(PATH_TO_LOG_FILE);","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"            fileHandler.setFormatter(formatter);","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"            logger \u003d Logger.getLogger(\"ClickLogger\");","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"            logger.setUseParentHandlers(false);","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"     * Returns a new ClickLogger.","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"     * @return An instance of ClickLogger.","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"    public static Logger getNewLogger() {","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"        if (loggerInstance \u003d\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"            loggerInstance \u003d new ClickLogger();","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"        return loggerInstance.logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"nvbinh15":53}},{"path":"src/main/java/seedu/duke/module/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.module;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":" * A representation of a Module.","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"public class Module {","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"    private String code;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"    private String name;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"    private String expectedGrade; // to be replaced with enumeration","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"    private static final String DEFAULT_MODULE_NAME \u003d \"NONE\";","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    private static final String DEFAULT_EXPECTED_GRADE \u003d \"N/A\";","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor specifying the module code.","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"     * @param code The module code.","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    public Module(String code) {","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"        this.code \u003d code;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"        this.name \u003d DEFAULT_MODULE_NAME;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"        this.expectedGrade \u003d DEFAULT_EXPECTED_GRADE;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor specifying the module code and module name.","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"     * @param code The module code.","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"     * @param name The module name.","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"    public Module(String code, String name) {","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"        this.code \u003d code;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"        this.expectedGrade \u003d DEFAULT_EXPECTED_GRADE;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor specifying the module code, module name, and the expected grade.","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"     * @param code The module code.","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"     * @param name The module name.","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"     * @param expectedGrade The expected grade of the module.","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"    public Module(String code, String name, String expectedGrade) {","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"        this.code \u003d code;","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"        this.expectedGrade \u003d expectedGrade;","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"     * Returns the module code.","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"     * @return the module code.","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"    public String getCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"        return code;","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"     * Returns the module name.","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"     * @return the module name.","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"nvbinh15"},"content":"    public String getName() {","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"nvbinh15"},"content":"        return name;","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"nvbinh15"},"content":"     * Returns the module expected grade.","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"nvbinh15"},"content":"     * @return the module expected grade.","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"nvbinh15"},"content":"    public String getExpectedGrade() {","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"nvbinh15"},"content":"        return expectedGrade;","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"nvbinh15"},"content":"     * Sets the code of the module.","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"nvbinh15"},"content":"     * @param code The code to be set.","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"nvbinh15"},"content":"    public void setCode(String code) {","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"nvbinh15"},"content":"        this.code \u003d code;","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"nvbinh15"},"content":"     * Sets the name of the module.","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"nvbinh15"},"content":"     * @param name The name to be set.","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"nvbinh15"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"nvbinh15"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"nvbinh15"},"content":"     * Sets the expected grade of the module.","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"nvbinh15"},"content":"     * @param expectedGrade The grade to be set.","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"nvbinh15"},"content":"    public void setExpectedGrade(String expectedGrade) {","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"nvbinh15"},"content":"        this.expectedGrade \u003d expectedGrade;","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"nvbinh15"},"content":"     * Overrides toString method of class Object to get the string representation of Module.","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"nvbinh15"},"content":"     * @return The string representation of the module.","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"nvbinh15"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"nvbinh15"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"nvbinh15"},"content":"        if (this.name.equals(DEFAULT_MODULE_NAME) \u0026 this.expectedGrade \u003d\u003d DEFAULT_EXPECTED_GRADE) {","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"nvbinh15"},"content":"            return this.code;","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"nvbinh15"},"content":"        } else if (this.expectedGrade \u003d\u003d DEFAULT_EXPECTED_GRADE) {","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"nvbinh15"},"content":"            return this.code + \" | \" + this.name;","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"nvbinh15"},"content":"        } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"nvbinh15"},"content":"            return this.code + \" | \" + this.name + \" | Expected grade: \" + this.expectedGrade;","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"nvbinh15":122}},{"path":"src/main/java/seedu/duke/module/ModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.module;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":" * A class that deals with operations related to Modules.","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"public class ModuleList {","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"    private ArrayList\u003cModule\u003e modules;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor.","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"     * Creates an empty ArrayList of Module.","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    public ModuleList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"        this.modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    public ModuleList(ArrayList\u003cModule\u003e modules) {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"        this.modules \u003d modules;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"     * Gets the list of modules.","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"     * @return The list of modules.","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"    public ArrayList\u003cModule\u003e getModules() {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"        return modules;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"     * Sets the list of modules.","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"     * @param modules The list of modules to be set.","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"    public void setModules(ArrayList\u003cModule\u003e modules) {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"        this.modules \u003d modules;","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"     * Returns the total number of modules.","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"     * @return The total number of modules.","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"    public int getNumberOfModules() {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"        return modules.size();","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"     * Returns a module knowing its index in the ArrayList of modules (0-based).","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"     * @param index Index of the module to be returned (0-based).","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"     * @return The module having the given index","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"    public Module getModuleByIndex(int index) {","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"        return modules.get(index);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"     * Adds a new module to modules.","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"nvbinh15"},"content":"     * @param module The module to be added.","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"nvbinh15"},"content":"    public void addModule(Module module) {","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"nvbinh15"},"content":"        modules.add(module);","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"nvbinh15"},"content":"     * Removes a module from modules.","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"nvbinh15"},"content":"     * @param index Index of the module to be removed (0-based).","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"nvbinh15"},"content":"    public void removeModuleByIndex(int index) {","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"nvbinh15"},"content":"        modules.remove(index);","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"nvbinh15":79}},{"path":"src/main/java/seedu/duke/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.commands.calendar.DeleteTaskCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.commands.calendar.EditTasksCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.commands.calendar.AddTodoCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.commands.calendar.ListTasksCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.commands.calendar.DisplayCalendarCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.journal.AddEntryCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.food.AddFoodCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.module.AddModuleCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.journal.AddNoteCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.zoom.AddZoomCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.food.ClearFoodCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.food.DeleteFoodCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.module.DeleteModuleCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.commands.ExitCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.commands.HelpCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.food.ListFoodCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.journal.ListJournalCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.module.ListModuleCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.commands.zoom.ListZoomLinks;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.IncorrectNumberOfArgumentsException;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.ArgumentsNotFoundException;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.IllegalDateTimeException;","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.WrongDividerOrderException;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.StorageException;","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.food.IllegalFoodParameterException;","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.journal.EmptyJournalArgumentException;","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.journal.IncorrectJournalArgumentException;","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.food.FoodRecord;","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.module.Module;","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.parser.schedule.ParserSchedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_ADD_ENTRY;","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_ADD_NOTE;","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_CALENDAR;","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_EXIT;","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_FOOD;","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_HElP;","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_JOURNAL_LIST;","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_SUFFIX_EDIT;","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_MODULE;","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_NOTE;","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_SUFFIX_ADD;","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_SUFFIX_CLEAR;","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_SUFFIX_DELETE;","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_SUFFIX_LIST;","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_TODO;","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_ZOOM;","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_ZOOM_SUFFIX_ADD;","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_ZOOM_SUFFIX_LIST;","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"import static seedu.duke.constants.Messages.EMPTY_STRING;","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.PRINT_NOT_AN_INT;","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.CALENDAR_INVALID_ARGS;","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.CALENDAR_EDIT_DELETE_INVALID_ARGS;","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"nvbinh15"},"content":"public class Parser {","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"nvbinh15"},"content":"    static final String INPUT_DATE_TIME_FORMAT \u003d \"dd-MM-yyyy HHmm\";","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"nvbinh15"},"content":"    static final String OUTPUT_DATE_TIME_FORMAT \u003d \"MMM dd yyyy HH:mm\";","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"nvbinh15"},"content":"    static final int FOOD_MINIMUM_PARAMETER \u003d 4; // tags {/n /c} + 2 inputs {name, calorie}","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"nvbinh15"},"content":"    static final String FOOD_NAME_DIVIDER \u003d \"n/\";","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"nvbinh15"},"content":"    static final String FOOD_CALORIE_DIVIDER \u003d \"c/\";","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"nvbinh15"},"content":"     * Converts date and time in string format to a LocalDateTime object.","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"nvbinh15"},"content":"     * @param string Date and time in string format.","lastModifiedDate":"2021-10-04"},{"lineNumber":80,"author":{"gitId":"nvbinh15"},"content":"     * @return A LocalDateTime object that represents the given date and time.","lastModifiedDate":"2021-10-04"},{"lineNumber":81,"author":{"gitId":"nvbinh15"},"content":"     * @throws IllegalDateTimeException If the input date time is invalid.","lastModifiedDate":"2021-10-04"},{"lineNumber":82,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":83,"author":{"gitId":"nvbinh15"},"content":"    public static LocalDateTime stringToDateTime(String string) throws IllegalDateTimeException {","lastModifiedDate":"2021-10-04"},{"lineNumber":84,"author":{"gitId":"nvbinh15"},"content":"        try {","lastModifiedDate":"2021-10-04"},{"lineNumber":85,"author":{"gitId":"nvbinh15"},"content":"            return LocalDateTime.parse(string, DateTimeFormatter.ofPattern(INPUT_DATE_TIME_FORMAT));","lastModifiedDate":"2021-10-04"},{"lineNumber":86,"author":{"gitId":"nvbinh15"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-04"},{"lineNumber":87,"author":{"gitId":"nvbinh15"},"content":"            throw new IllegalDateTimeException();","lastModifiedDate":"2021-10-04"},{"lineNumber":88,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":89,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":90,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":91,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":92,"author":{"gitId":"nvbinh15"},"content":"     * Converts date and time in LocalDateTime format to a string.","lastModifiedDate":"2021-10-04"},{"lineNumber":93,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":94,"author":{"gitId":"nvbinh15"},"content":"     * @param dateTime A LocalDateTime object that represents the given date and time.","lastModifiedDate":"2021-10-04"},{"lineNumber":95,"author":{"gitId":"nvbinh15"},"content":"     * @return The string representation of the given LocalDateTime object.","lastModifiedDate":"2021-10-04"},{"lineNumber":96,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":97,"author":{"gitId":"nvbinh15"},"content":"    public static String dateTimeToString(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-04"},{"lineNumber":98,"author":{"gitId":"nvbinh15"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(OUTPUT_DATE_TIME_FORMAT));","lastModifiedDate":"2021-10-04"},{"lineNumber":99,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":100,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":101,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":102,"author":{"gitId":"nvbinh15"},"content":"     * Formats the user\u0027s input date time.","lastModifiedDate":"2021-10-04"},{"lineNumber":103,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":104,"author":{"gitId":"nvbinh15"},"content":"     * @param rawDateTime The raw date time from user\u0027s input.","lastModifiedDate":"2021-10-04"},{"lineNumber":105,"author":{"gitId":"nvbinh15"},"content":"     * @return The string representation of other form of the given date time.","lastModifiedDate":"2021-10-04"},{"lineNumber":106,"author":{"gitId":"nvbinh15"},"content":"     * @throws IllegalDateTimeException If the input date time is invalid.","lastModifiedDate":"2021-10-04"},{"lineNumber":107,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":108,"author":{"gitId":"nvbinh15"},"content":"    public static String formatDateTime(String rawDateTime) throws IllegalDateTimeException {","lastModifiedDate":"2021-10-04"},{"lineNumber":109,"author":{"gitId":"nvbinh15"},"content":"        try {","lastModifiedDate":"2021-10-04"},{"lineNumber":110,"author":{"gitId":"nvbinh15"},"content":"            return dateTimeToString(stringToDateTime(rawDateTime));","lastModifiedDate":"2021-10-04"},{"lineNumber":111,"author":{"gitId":"nvbinh15"},"content":"        } catch (IllegalDateTimeException e) {","lastModifiedDate":"2021-10-04"},{"lineNumber":112,"author":{"gitId":"nvbinh15"},"content":"            throw new IllegalDateTimeException();","lastModifiedDate":"2021-10-04"},{"lineNumber":113,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":114,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":115,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":116,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":117,"author":{"gitId":"nvbinh15"},"content":"     * Splits raw user input into command word and command arguments.","lastModifiedDate":"2021-10-04"},{"lineNumber":118,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":119,"author":{"gitId":"nvbinh15"},"content":"     * @param userInput Raw input from user.","lastModifiedDate":"2021-10-04"},{"lineNumber":120,"author":{"gitId":"nvbinh15"},"content":"     * @return a String array of size 2 including the command type and the arguments.","lastModifiedDate":"2021-10-04"},{"lineNumber":121,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":122,"author":{"gitId":"nvbinh15"},"content":"    public static String[] splitCommandAndArgs(String userInput) {","lastModifiedDate":"2021-10-04"},{"lineNumber":123,"author":{"gitId":"nvbinh15"},"content":"        String[] tokens \u003d userInput.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2021-10-04"},{"lineNumber":124,"author":{"gitId":"nvbinh15"},"content":"        String command \u003d tokens[0];","lastModifiedDate":"2021-10-04"},{"lineNumber":125,"author":{"gitId":"nvbinh15"},"content":"        if (tokens.length \u003d\u003d 2) {","lastModifiedDate":"2021-10-04"},{"lineNumber":126,"author":{"gitId":"nvbinh15"},"content":"            return tokens;","lastModifiedDate":"2021-10-04"},{"lineNumber":127,"author":{"gitId":"nvbinh15"},"content":"        } else {","lastModifiedDate":"2021-10-04"},{"lineNumber":128,"author":{"gitId":"nvbinh15"},"content":"            return new String[] {command, EMPTY_STRING};","lastModifiedDate":"2021-10-04"},{"lineNumber":129,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":130,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":131,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":132,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"nvbinh15"},"content":"     * Parses a line of text to a food record.","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"nvbinh15"},"content":"     * Assumes that both name, calories field not null.","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"nvbinh15"},"content":"     * Note format: [NAME] | [CALORIES]","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"nvbinh15"},"content":"     * @param readLine line of text to read","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"nvbinh15"},"content":"     * @return FoodRecord food record object","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"nvbinh15"},"content":"    public static FoodRecord parseFoodSavedListToRecord(String readLine) {","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"nvbinh15"},"content":"        String[] nameCalories \u003d readLine.split(\"\\\\|\");","lastModifiedDate":"2021-10-09"},{"lineNumber":141,"author":{"gitId":"nvbinh15"},"content":"        return new FoodRecord(nameCalories[0], Integer.parseInt(nameCalories[1]));","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":145,"author":{"gitId":"nvbinh15"},"content":"     * Returns a command to be executed based on the raw input from user.","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":147,"author":{"gitId":"nvbinh15"},"content":"     * @param userInput The raw input from user.","lastModifiedDate":"2021-10-04"},{"lineNumber":148,"author":{"gitId":"nvbinh15"},"content":"     * @return The command to be executed.","lastModifiedDate":"2021-10-04"},{"lineNumber":149,"author":{"gitId":"nvbinh15"},"content":"     * @throws ClickException If there is an exception to type DukeException occurs.","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":151,"author":{"gitId":"nvbinh15"},"content":"    public Command parseCommand(String userInput)","lastModifiedDate":"2021-10-13"},{"lineNumber":152,"author":{"gitId":"nvbinh15"},"content":"            throws ClickException, IncorrectNumberOfArgumentsException, IncorrectJournalArgumentException,","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"nvbinh15"},"content":"            EmptyJournalArgumentException {","lastModifiedDate":"2021-10-13"},{"lineNumber":154,"author":{"gitId":"nvbinh15"},"content":"        final String[] commandTypeAndParams \u003d splitCommandAndArgs(userInput);","lastModifiedDate":"2021-10-04"},{"lineNumber":155,"author":{"gitId":"nvbinh15"},"content":"        assert commandTypeAndParams.length \u003d\u003d 2;","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"nvbinh15"},"content":"        final String commandType \u003d commandTypeAndParams[0];","lastModifiedDate":"2021-10-04"},{"lineNumber":157,"author":{"gitId":"nvbinh15"},"content":"        final String commandArgs \u003d commandTypeAndParams[1];","lastModifiedDate":"2021-10-04"},{"lineNumber":158,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":159,"author":{"gitId":"nvbinh15"},"content":"        switch (commandType) {","lastModifiedDate":"2021-10-04"},{"lineNumber":160,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_EXIT:","lastModifiedDate":"2021-10-04"},{"lineNumber":161,"author":{"gitId":"nvbinh15"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-10-04"},{"lineNumber":162,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_CALENDAR:","lastModifiedDate":"2021-10-06"},{"lineNumber":163,"author":{"gitId":"nvbinh15"},"content":"            return getCalendarCommand(commandArgs, userInput);","lastModifiedDate":"2021-10-16"},{"lineNumber":164,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_FOOD:","lastModifiedDate":"2021-10-09"},{"lineNumber":165,"author":{"gitId":"nvbinh15"},"content":"            return getFoodCommand(userInput, commandArgs);","lastModifiedDate":"2021-10-13"},{"lineNumber":166,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_NOTE:","lastModifiedDate":"2021-10-11"},{"lineNumber":167,"author":{"gitId":"nvbinh15"},"content":"            String[] noteArguments \u003d commandArgs.split(\" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"nvbinh15"},"content":"            switch (noteArguments[0]) {","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"nvbinh15"},"content":"            case COMMAND_ADD_NOTE:","lastModifiedDate":"2021-10-09"},{"lineNumber":170,"author":{"gitId":"nvbinh15"},"content":"                return new AddNoteCommand(userInput);","lastModifiedDate":"2021-10-09"},{"lineNumber":171,"author":{"gitId":"nvbinh15"},"content":"            case COMMAND_ADD_ENTRY:","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"nvbinh15"},"content":"                return new AddEntryCommand(userInput);","lastModifiedDate":"2021-10-11"},{"lineNumber":173,"author":{"gitId":"nvbinh15"},"content":"            case COMMAND_JOURNAL_LIST:","lastModifiedDate":"2021-10-13"},{"lineNumber":174,"author":{"gitId":"nvbinh15"},"content":"                return new ListJournalCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":175,"author":{"gitId":"nvbinh15"},"content":"            case \"\":","lastModifiedDate":"2021-10-13"},{"lineNumber":176,"author":{"gitId":"nvbinh15"},"content":"                throw new EmptyJournalArgumentException();","lastModifiedDate":"2021-10-13"},{"lineNumber":177,"author":{"gitId":"nvbinh15"},"content":"            default:","lastModifiedDate":"2021-10-11"},{"lineNumber":178,"author":{"gitId":"nvbinh15"},"content":"                throw new IncorrectJournalArgumentException();","lastModifiedDate":"2021-10-13"},{"lineNumber":179,"author":{"gitId":"nvbinh15"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":180,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_MODULE:","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"nvbinh15"},"content":"            return getModuleCommand(commandArgs);","lastModifiedDate":"2021-10-13"},{"lineNumber":182,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_ZOOM:","lastModifiedDate":"2021-10-13"},{"lineNumber":183,"author":{"gitId":"nvbinh15"},"content":"            String[] zoomArgs \u003d commandArgs.split(\" \");","lastModifiedDate":"2021-10-13"},{"lineNumber":184,"author":{"gitId":"nvbinh15"},"content":"            switch (zoomArgs[0]) {","lastModifiedDate":"2021-10-13"},{"lineNumber":185,"author":{"gitId":"nvbinh15"},"content":"            case COMMAND_ZOOM_SUFFIX_ADD:","lastModifiedDate":"2021-10-13"},{"lineNumber":186,"author":{"gitId":"nvbinh15"},"content":"                return new AddZoomCommand(zoomArgs[1], zoomArgs[2]);","lastModifiedDate":"2021-10-13"},{"lineNumber":187,"author":{"gitId":"nvbinh15"},"content":"            case COMMAND_SUFFIX_LIST:","lastModifiedDate":"2021-10-18"},{"lineNumber":188,"author":{"gitId":"nvbinh15"},"content":"                return new ListZoomLinks();","lastModifiedDate":"2021-10-18"},{"lineNumber":189,"author":{"gitId":"nvbinh15"},"content":"            default:","lastModifiedDate":"2021-10-13"},{"lineNumber":190,"author":{"gitId":"nvbinh15"},"content":"                throw new ArgumentsNotFoundException();","lastModifiedDate":"2021-10-17"},{"lineNumber":191,"author":{"gitId":"nvbinh15"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":192,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":193,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_HElP:","lastModifiedDate":"2021-10-13"},{"lineNumber":194,"author":{"gitId":"nvbinh15"},"content":"            String[] helpArgs \u003d commandArgs.split(\" \");","lastModifiedDate":"2021-10-13"},{"lineNumber":195,"author":{"gitId":"nvbinh15"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":196,"author":{"gitId":"nvbinh15"},"content":"        default:","lastModifiedDate":"2021-10-18"},{"lineNumber":197,"author":{"gitId":"nvbinh15"},"content":"            throw new ClickException();","lastModifiedDate":"2021-10-18"},{"lineNumber":198,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":199,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":200,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":201,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":202,"author":{"gitId":"nvbinh15"},"content":"     * Returns appropriate command related to Food based  on user\u0027s input.","lastModifiedDate":"2021-10-13"},{"lineNumber":203,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":204,"author":{"gitId":"nvbinh15"},"content":"     * @param userInput Full string entered by user.","lastModifiedDate":"2021-10-13"},{"lineNumber":205,"author":{"gitId":"nvbinh15"},"content":"     * @param commandArgs second word onwards from userInput.","lastModifiedDate":"2021-10-13"},{"lineNumber":206,"author":{"gitId":"nvbinh15"},"content":"     * @return A command that\u0027s related to Food based on userInput.","lastModifiedDate":"2021-10-13"},{"lineNumber":207,"author":{"gitId":"nvbinh15"},"content":"     * @throws IllegalArgumentException if command entered does not exists, but starts with food.","lastModifiedDate":"2021-10-13"},{"lineNumber":208,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":209,"author":{"gitId":"nvbinh15"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-13"},{"lineNumber":210,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":211,"author":{"gitId":"nvbinh15"},"content":"    private Command getFoodCommand(String userInput, String commandArgs) throws IllegalArgumentException {","lastModifiedDate":"2021-10-13"},{"lineNumber":212,"author":{"gitId":"nvbinh15"},"content":"        String[] foodArgs \u003d commandArgs.split(\" \");","lastModifiedDate":"2021-10-13"},{"lineNumber":213,"author":{"gitId":"nvbinh15"},"content":"        switch (foodArgs[0]) {  //consider 2nd word","lastModifiedDate":"2021-10-13"},{"lineNumber":214,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_SUFFIX_ADD:","lastModifiedDate":"2021-10-13"},{"lineNumber":215,"author":{"gitId":"nvbinh15"},"content":"            return new AddFoodCommand(","lastModifiedDate":"2021-10-13"},{"lineNumber":216,"author":{"gitId":"nvbinh15"},"content":"                    filterStringAfterCommand(userInput, COMMAND_FOOD + \" \" + COMMAND_SUFFIX_ADD)","lastModifiedDate":"2021-10-13"},{"lineNumber":217,"author":{"gitId":"nvbinh15"},"content":"            );","lastModifiedDate":"2021-10-13"},{"lineNumber":218,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_SUFFIX_DELETE:","lastModifiedDate":"2021-10-13"},{"lineNumber":219,"author":{"gitId":"nvbinh15"},"content":"            return new DeleteFoodCommand(","lastModifiedDate":"2021-10-13"},{"lineNumber":220,"author":{"gitId":"nvbinh15"},"content":"                    filterStringAfterCommand(userInput, COMMAND_FOOD + \" \" + COMMAND_SUFFIX_DELETE)","lastModifiedDate":"2021-10-13"},{"lineNumber":221,"author":{"gitId":"nvbinh15"},"content":"            );","lastModifiedDate":"2021-10-13"},{"lineNumber":222,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_SUFFIX_CLEAR:","lastModifiedDate":"2021-10-13"},{"lineNumber":223,"author":{"gitId":"nvbinh15"},"content":"            return new ClearFoodCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":224,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_SUFFIX_LIST:","lastModifiedDate":"2021-10-13"},{"lineNumber":225,"author":{"gitId":"nvbinh15"},"content":"            return new ListFoodCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":226,"author":{"gitId":"nvbinh15"},"content":"        default:","lastModifiedDate":"2021-10-13"},{"lineNumber":227,"author":{"gitId":"nvbinh15"},"content":"            throw new IllegalArgumentException(Messages.LIST_PROPER_FEATURE +  COMMAND_FOOD);","lastModifiedDate":"2021-10-13"},{"lineNumber":228,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":229,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":230,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":231,"author":{"gitId":"nvbinh15"},"content":"    //@@author nvbinh15","lastModifiedDate":"2021-10-13"},{"lineNumber":232,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":233,"author":{"gitId":"nvbinh15"},"content":"     * Returns a command related to Module based on user\u0027s input.","lastModifiedDate":"2021-10-13"},{"lineNumber":234,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":235,"author":{"gitId":"nvbinh15"},"content":"     * @param commandArgs The command arguments.","lastModifiedDate":"2021-10-13"},{"lineNumber":236,"author":{"gitId":"nvbinh15"},"content":"     * @return A command that related to Module based on user\u0027s input.","lastModifiedDate":"2021-10-13"},{"lineNumber":237,"author":{"gitId":"nvbinh15"},"content":"     * @throws ClickException If there is an exception of type ClickException occurs.","lastModifiedDate":"2021-10-13"},{"lineNumber":238,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":239,"author":{"gitId":"nvbinh15"},"content":"    private Command getModuleCommand(String commandArgs) throws ClickException {","lastModifiedDate":"2021-10-13"},{"lineNumber":240,"author":{"gitId":"nvbinh15"},"content":"        String[] moduleCommandAndArgs \u003d splitCommandAndArgs(commandArgs);","lastModifiedDate":"2021-10-12"},{"lineNumber":241,"author":{"gitId":"nvbinh15"},"content":"        assert moduleCommandAndArgs.length \u003d\u003d 2;","lastModifiedDate":"2021-10-13"},{"lineNumber":242,"author":{"gitId":"nvbinh15"},"content":"        switch (moduleCommandAndArgs[0]) {","lastModifiedDate":"2021-10-12"},{"lineNumber":243,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_SUFFIX_ADD:","lastModifiedDate":"2021-10-12"},{"lineNumber":244,"author":{"gitId":"nvbinh15"},"content":"            return new AddModuleCommand(moduleCommandAndArgs[1]);","lastModifiedDate":"2021-10-12"},{"lineNumber":245,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_SUFFIX_LIST:","lastModifiedDate":"2021-10-12"},{"lineNumber":246,"author":{"gitId":"nvbinh15"},"content":"            return new ListModuleCommand();","lastModifiedDate":"2021-10-12"},{"lineNumber":247,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_SUFFIX_DELETE:","lastModifiedDate":"2021-10-12"},{"lineNumber":248,"author":{"gitId":"nvbinh15"},"content":"            return new DeleteModuleCommand(moduleCommandAndArgs[1]);","lastModifiedDate":"2021-10-12"},{"lineNumber":249,"author":{"gitId":"nvbinh15"},"content":"        default:","lastModifiedDate":"2021-10-12"},{"lineNumber":250,"author":{"gitId":"nvbinh15"},"content":"            throw new ClickException();","lastModifiedDate":"2021-10-12"},{"lineNumber":251,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":252,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":253,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":254,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":255,"author":{"gitId":"nvbinh15"},"content":"     * Returns a Calendar command based on the user input.","lastModifiedDate":"2021-10-16"},{"lineNumber":256,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":257,"author":{"gitId":"nvbinh15"},"content":"     * @param commandArgs The part of user given input from second word.","lastModifiedDate":"2021-10-16"},{"lineNumber":258,"author":{"gitId":"nvbinh15"},"content":"     * @param userInput Input entered by user of type String.","lastModifiedDate":"2021-10-16"},{"lineNumber":259,"author":{"gitId":"nvbinh15"},"content":"     * @return A calendar based command.","lastModifiedDate":"2021-10-16"},{"lineNumber":260,"author":{"gitId":"nvbinh15"},"content":"     * @throws IncorrectNumberOfArgumentsException If command entered","lastModifiedDate":"2021-10-16"},{"lineNumber":261,"author":{"gitId":"nvbinh15"},"content":"     *         by the user does not have the required number of arguments.","lastModifiedDate":"2021-10-16"},{"lineNumber":262,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":263,"author":{"gitId":"nvbinh15"},"content":"     * @author swatimahadevan","lastModifiedDate":"2021-10-16"},{"lineNumber":264,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":265,"author":{"gitId":"nvbinh15"},"content":"    private Command getCalendarCommand(String commandArgs, String userInput)","lastModifiedDate":"2021-10-16"},{"lineNumber":266,"author":{"gitId":"nvbinh15"},"content":"        throws IncorrectNumberOfArgumentsException {","lastModifiedDate":"2021-10-16"},{"lineNumber":267,"author":{"gitId":"nvbinh15"},"content":"        String[] calendarArguments \u003d commandArgs.split(\" \");","lastModifiedDate":"2021-10-16"},{"lineNumber":268,"author":{"gitId":"nvbinh15"},"content":"        switch (calendarArguments[0]) {","lastModifiedDate":"2021-10-16"},{"lineNumber":269,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_SUFFIX_LIST:","lastModifiedDate":"2021-10-16"},{"lineNumber":270,"author":{"gitId":"nvbinh15"},"content":"            return new ListTasksCommand();","lastModifiedDate":"2021-10-16"},{"lineNumber":271,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_SUFFIX_EDIT:","lastModifiedDate":"2021-10-16"},{"lineNumber":272,"author":{"gitId":"nvbinh15"},"content":"            return new EditTasksCommand(getTaskIndex(calendarArguments));","lastModifiedDate":"2021-10-16"},{"lineNumber":273,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_TODO:","lastModifiedDate":"2021-10-16"},{"lineNumber":274,"author":{"gitId":"nvbinh15"},"content":"            ArrayList\u003cString\u003e arguments \u003d ParserSchedule.parseTodoCommand(userInput);","lastModifiedDate":"2021-10-16"},{"lineNumber":275,"author":{"gitId":"nvbinh15"},"content":"            return new AddTodoCommand(arguments);","lastModifiedDate":"2021-10-16"},{"lineNumber":276,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_SUFFIX_DELETE:","lastModifiedDate":"2021-10-16"},{"lineNumber":277,"author":{"gitId":"nvbinh15"},"content":"            return new DeleteTaskCommand(getTaskIndex(calendarArguments), userInput);","lastModifiedDate":"2021-10-16"},{"lineNumber":278,"author":{"gitId":"nvbinh15"},"content":"        case EMPTY_STRING:","lastModifiedDate":"2021-10-16"},{"lineNumber":279,"author":{"gitId":"nvbinh15"},"content":"            throw new IncorrectNumberOfArgumentsException(CALENDAR_INVALID_ARGS);","lastModifiedDate":"2021-10-16"},{"lineNumber":280,"author":{"gitId":"nvbinh15"},"content":"        default:","lastModifiedDate":"2021-10-16"},{"lineNumber":281,"author":{"gitId":"nvbinh15"},"content":"            return new DisplayCalendarCommand(userInput);","lastModifiedDate":"2021-10-16"},{"lineNumber":282,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":283,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":284,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":285,"author":{"gitId":"nvbinh15"},"content":"    private int getTaskIndex(String[] calendarArguments) throws IncorrectNumberOfArgumentsException {","lastModifiedDate":"2021-10-16"},{"lineNumber":286,"author":{"gitId":"nvbinh15"},"content":"        if (calendarArguments.length \u003d\u003d 1) {","lastModifiedDate":"2021-10-16"},{"lineNumber":287,"author":{"gitId":"nvbinh15"},"content":"            throw new IncorrectNumberOfArgumentsException(CALENDAR_EDIT_DELETE_INVALID_ARGS);","lastModifiedDate":"2021-10-16"},{"lineNumber":288,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":289,"author":{"gitId":"nvbinh15"},"content":"        int indexOfTaskToBeEdited \u003d 0;","lastModifiedDate":"2021-10-16"},{"lineNumber":290,"author":{"gitId":"nvbinh15"},"content":"        try {","lastModifiedDate":"2021-10-16"},{"lineNumber":291,"author":{"gitId":"nvbinh15"},"content":"            indexOfTaskToBeEdited \u003d Integer.parseInt(calendarArguments[1]);","lastModifiedDate":"2021-10-16"},{"lineNumber":292,"author":{"gitId":"nvbinh15"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-16"},{"lineNumber":293,"author":{"gitId":"nvbinh15"},"content":"            System.out.println(PRINT_NOT_AN_INT);","lastModifiedDate":"2021-10-16"},{"lineNumber":294,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":295,"author":{"gitId":"nvbinh15"},"content":"        return indexOfTaskToBeEdited;","lastModifiedDate":"2021-10-16"},{"lineNumber":296,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":297,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":298,"author":{"gitId":"nvbinh15"},"content":"    public static int getWordCount(String input) {","lastModifiedDate":"2021-10-11"},{"lineNumber":299,"author":{"gitId":"nvbinh15"},"content":"        return input.trim().split(\" \").length;","lastModifiedDate":"2021-10-11"},{"lineNumber":300,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":301,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":302,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":303,"author":{"gitId":"nvbinh15"},"content":"     * Returns a string representing a data block, separated by 2 dividers.","lastModifiedDate":"2021-10-11"},{"lineNumber":304,"author":{"gitId":"nvbinh15"},"content":"     * For example, n/ [DATA_1] c/ [DATA_2], if n/ is passed, DATA_1 would be returned.","lastModifiedDate":"2021-10-11"},{"lineNumber":305,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":306,"author":{"gitId":"nvbinh15"},"content":"     * @param input input that contains dividers and data","lastModifiedDate":"2021-10-11"},{"lineNumber":307,"author":{"gitId":"nvbinh15"},"content":"     * @param dividerBefore divider before the data","lastModifiedDate":"2021-10-11"},{"lineNumber":308,"author":{"gitId":"nvbinh15"},"content":"     * @param dividerAfter divider after the data","lastModifiedDate":"2021-10-11"},{"lineNumber":309,"author":{"gitId":"nvbinh15"},"content":"     * @return data Array List of data extracted, containing both DATA_1 and DATA_2","lastModifiedDate":"2021-10-11"},{"lineNumber":310,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":311,"author":{"gitId":"nvbinh15"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-11"},{"lineNumber":312,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":313,"author":{"gitId":"nvbinh15"},"content":"    public static String[] getData(String input,","lastModifiedDate":"2021-10-11"},{"lineNumber":314,"author":{"gitId":"nvbinh15"},"content":"                                   String dividerBefore,","lastModifiedDate":"2021-10-11"},{"lineNumber":315,"author":{"gitId":"nvbinh15"},"content":"                                   String dividerAfter)","lastModifiedDate":"2021-10-11"},{"lineNumber":316,"author":{"gitId":"nvbinh15"},"content":"            throws WrongDividerOrderException, ArgumentsNotFoundException {","lastModifiedDate":"2021-10-11"},{"lineNumber":317,"author":{"gitId":"nvbinh15"},"content":"        if (!(input.contains(dividerBefore) \u0026\u0026 input.contains(dividerAfter))) {","lastModifiedDate":"2021-10-11"},{"lineNumber":318,"author":{"gitId":"nvbinh15"},"content":"            throw new ArgumentsNotFoundException();","lastModifiedDate":"2021-10-11"},{"lineNumber":319,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":320,"author":{"gitId":"nvbinh15"},"content":"        if (input.indexOf(dividerBefore) \u003e\u003d input.indexOf(dividerAfter)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":321,"author":{"gitId":"nvbinh15"},"content":"            throw new WrongDividerOrderException();","lastModifiedDate":"2021-10-11"},{"lineNumber":322,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":323,"author":{"gitId":"nvbinh15"},"content":"        assert !input.equals(\"\") : \"exception not accounted for empty string!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":324,"author":{"gitId":"nvbinh15"},"content":"        assert input.indexOf(dividerBefore) \u003c input.indexOf(dividerAfter) : \"divider order is wrong!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":325,"author":{"gitId":"nvbinh15"},"content":"        String afterFirstDivider  \u003d input.split(dividerBefore)[1];","lastModifiedDate":"2021-10-11"},{"lineNumber":326,"author":{"gitId":"nvbinh15"},"content":"        String dataFirst          \u003d afterFirstDivider.split(dividerAfter)[0].trim();","lastModifiedDate":"2021-10-11"},{"lineNumber":327,"author":{"gitId":"nvbinh15"},"content":"        String afterSecondDivider \u003d afterFirstDivider.split(dividerAfter)[1];","lastModifiedDate":"2021-10-11"},{"lineNumber":328,"author":{"gitId":"nvbinh15"},"content":"        String dataSecond         \u003d afterSecondDivider.trim();","lastModifiedDate":"2021-10-11"},{"lineNumber":329,"author":{"gitId":"nvbinh15"},"content":"        return  new String[] {dataFirst, dataSecond};","lastModifiedDate":"2021-10-11"},{"lineNumber":330,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":331,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":332,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":333,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":334,"author":{"gitId":"nvbinh15"},"content":"     * Parses a string into a food item.","lastModifiedDate":"2021-10-06"},{"lineNumber":335,"author":{"gitId":"nvbinh15"},"content":"     * current implementation: {food add} n/ [NAME] c/ [CALORIES].","lastModifiedDate":"2021-10-11"},{"lineNumber":336,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":337,"author":{"gitId":"nvbinh15"},"content":"     * @param input string consisting of food name and calories.","lastModifiedDate":"2021-10-13"},{"lineNumber":338,"author":{"gitId":"nvbinh15"},"content":"     * @return recordToAdd if valid syntax given.","lastModifiedDate":"2021-10-13"},{"lineNumber":339,"author":{"gitId":"nvbinh15"},"content":"     * @throws IllegalFoodParameterException Invalid types given.","lastModifiedDate":"2021-10-13"},{"lineNumber":340,"author":{"gitId":"nvbinh15"},"content":"     * @throws ArgumentsNotFoundException Invalid syntax given.","lastModifiedDate":"2021-10-13"},{"lineNumber":341,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":342,"author":{"gitId":"nvbinh15"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-06"},{"lineNumber":343,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":344,"author":{"gitId":"nvbinh15"},"content":"    public static FoodRecord parseFoodRecord(String input) throws IllegalFoodParameterException,","lastModifiedDate":"2021-10-11"},{"lineNumber":345,"author":{"gitId":"nvbinh15"},"content":"            ArgumentsNotFoundException {","lastModifiedDate":"2021-10-11"},{"lineNumber":346,"author":{"gitId":"nvbinh15"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":347,"author":{"gitId":"nvbinh15"},"content":"            if (getWordCount(input) \u003c FOOD_MINIMUM_PARAMETER) {","lastModifiedDate":"2021-10-11"},{"lineNumber":348,"author":{"gitId":"nvbinh15"},"content":"                throw new IllegalFoodParameterException();","lastModifiedDate":"2021-10-06"},{"lineNumber":349,"author":{"gitId":"nvbinh15"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":350,"author":{"gitId":"nvbinh15"},"content":"            String[] data \u003d getData(input, FOOD_NAME_DIVIDER, FOOD_CALORIE_DIVIDER);","lastModifiedDate":"2021-10-11"},{"lineNumber":351,"author":{"gitId":"nvbinh15"},"content":"            String name \u003d data[0];","lastModifiedDate":"2021-10-11"},{"lineNumber":352,"author":{"gitId":"nvbinh15"},"content":"            int calories \u003d Integer.parseInt(data[1]);","lastModifiedDate":"2021-10-11"},{"lineNumber":353,"author":{"gitId":"nvbinh15"},"content":"            FoodRecord recordToAdd \u003d new FoodRecord(name, calories);","lastModifiedDate":"2021-10-06"},{"lineNumber":354,"author":{"gitId":"nvbinh15"},"content":"            return recordToAdd;","lastModifiedDate":"2021-10-06"},{"lineNumber":355,"author":{"gitId":"nvbinh15"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":356,"author":{"gitId":"nvbinh15"},"content":"            Ui.printAddFoodSyntax();","lastModifiedDate":"2021-10-06"},{"lineNumber":357,"author":{"gitId":"nvbinh15"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":358,"author":{"gitId":"nvbinh15"},"content":"            Ui.printNonNullInput();","lastModifiedDate":"2021-10-06"},{"lineNumber":359,"author":{"gitId":"nvbinh15"},"content":"        } catch (WrongDividerOrderException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":360,"author":{"gitId":"nvbinh15"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-11"},{"lineNumber":361,"author":{"gitId":"nvbinh15"},"content":"            System.out.println(\"Oops, internal error\");","lastModifiedDate":"2021-10-11"},{"lineNumber":362,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":363,"author":{"gitId":"nvbinh15"},"content":"        return null;","lastModifiedDate":"2021-10-06"},{"lineNumber":364,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":365,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":366,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":367,"author":{"gitId":"nvbinh15"},"content":"     * Parses a string list to an integer list.","lastModifiedDate":"2021-10-13"},{"lineNumber":368,"author":{"gitId":"nvbinh15"},"content":"     * Current implementation supports single integer, but","lastModifiedDate":"2021-10-13"},{"lineNumber":369,"author":{"gitId":"nvbinh15"},"content":"     * future implementations would involve reading a list.","lastModifiedDate":"2021-10-13"},{"lineNumber":370,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":371,"author":{"gitId":"nvbinh15"},"content":"     * @param strings any amount of string input to be converted","lastModifiedDate":"2021-10-13"},{"lineNumber":372,"author":{"gitId":"nvbinh15"},"content":"     * @return integerList integers that are successfully parsed","lastModifiedDate":"2021-10-13"},{"lineNumber":373,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":374,"author":{"gitId":"nvbinh15"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-13"},{"lineNumber":375,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":376,"author":{"gitId":"nvbinh15"},"content":"    public static ArrayList\u003cInteger\u003e parseStringToIntegerList(String... strings) {","lastModifiedDate":"2021-10-13"},{"lineNumber":377,"author":{"gitId":"nvbinh15"},"content":"        ArrayList\u003cInteger\u003e integerList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":378,"author":{"gitId":"nvbinh15"},"content":"        for (String string : strings) {","lastModifiedDate":"2021-10-13"},{"lineNumber":379,"author":{"gitId":"nvbinh15"},"content":"            try {","lastModifiedDate":"2021-10-13"},{"lineNumber":380,"author":{"gitId":"nvbinh15"},"content":"                integerList.add(Integer.parseInt(string));","lastModifiedDate":"2021-10-13"},{"lineNumber":381,"author":{"gitId":"nvbinh15"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":382,"author":{"gitId":"nvbinh15"},"content":"                Ui.printOnlyIntegers();","lastModifiedDate":"2021-10-13"},{"lineNumber":383,"author":{"gitId":"nvbinh15"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":384,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":385,"author":{"gitId":"nvbinh15"},"content":"        return integerList;","lastModifiedDate":"2021-10-13"},{"lineNumber":386,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":387,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":388,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":389,"author":{"gitId":"nvbinh15"},"content":"     * Returns string after \"food add\" for the purpose of","lastModifiedDate":"2021-10-13"},{"lineNumber":390,"author":{"gitId":"nvbinh15"},"content":"     * parsing those characters into integers.","lastModifiedDate":"2021-10-13"},{"lineNumber":391,"author":{"gitId":"nvbinh15"},"content":"     * @param userInput full line of user input","lastModifiedDate":"2021-10-13"},{"lineNumber":392,"author":{"gitId":"nvbinh15"},"content":"     * @param  command command syntax e.g. food delete","lastModifiedDate":"2021-10-13"},{"lineNumber":393,"author":{"gitId":"nvbinh15"},"content":"     * @return string after command from userInput","lastModifiedDate":"2021-10-13"},{"lineNumber":394,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":395,"author":{"gitId":"nvbinh15"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-13"},{"lineNumber":396,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":397,"author":{"gitId":"nvbinh15"},"content":"    public static String filterStringAfterCommand(String userInput, String command) {","lastModifiedDate":"2021-10-13"},{"lineNumber":398,"author":{"gitId":"nvbinh15"},"content":"        assert userInput.contains(command) : \"Please check correct command syntax\";","lastModifiedDate":"2021-10-13"},{"lineNumber":399,"author":{"gitId":"nvbinh15"},"content":"        return userInput.split(command)[1].trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":400,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":401,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":402,"author":{"gitId":"nvbinh15"},"content":"    public static String formatModuleToStore(Module module) {","lastModifiedDate":"2021-10-12"},{"lineNumber":403,"author":{"gitId":"nvbinh15"},"content":"        String code \u003d module.getCode();","lastModifiedDate":"2021-10-12"},{"lineNumber":404,"author":{"gitId":"nvbinh15"},"content":"        String name \u003d module.getName();","lastModifiedDate":"2021-10-12"},{"lineNumber":405,"author":{"gitId":"nvbinh15"},"content":"        String expectedGrade \u003d module.getExpectedGrade();","lastModifiedDate":"2021-10-12"},{"lineNumber":406,"author":{"gitId":"nvbinh15"},"content":"        String data \u003d code + \" | \" + name + \" | \" + expectedGrade + \"\\n\";","lastModifiedDate":"2021-10-12"},{"lineNumber":407,"author":{"gitId":"nvbinh15"},"content":"        return data;","lastModifiedDate":"2021-10-12"},{"lineNumber":408,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":409,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":410,"author":{"gitId":"nvbinh15"},"content":"    public static Module retrieveStoredModule(String data) throws StorageException {","lastModifiedDate":"2021-10-12"},{"lineNumber":411,"author":{"gitId":"nvbinh15"},"content":"        String[] tokens \u003d data.split(\"\\\\|\");","lastModifiedDate":"2021-10-12"},{"lineNumber":412,"author":{"gitId":"nvbinh15"},"content":"        assert tokens.length \u003d\u003d 3;","lastModifiedDate":"2021-10-12"},{"lineNumber":413,"author":{"gitId":"nvbinh15"},"content":"        String code \u003d tokens[0];","lastModifiedDate":"2021-10-12"},{"lineNumber":414,"author":{"gitId":"nvbinh15"},"content":"        String name \u003d tokens[1];","lastModifiedDate":"2021-10-12"},{"lineNumber":415,"author":{"gitId":"nvbinh15"},"content":"        String expectedGrade \u003d tokens[2];","lastModifiedDate":"2021-10-12"},{"lineNumber":416,"author":{"gitId":"nvbinh15"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":417,"author":{"gitId":"nvbinh15"},"content":"            return new Module(code, name, expectedGrade);","lastModifiedDate":"2021-10-12"},{"lineNumber":418,"author":{"gitId":"nvbinh15"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":419,"author":{"gitId":"nvbinh15"},"content":"            throw new StorageException();","lastModifiedDate":"2021-10-12"},{"lineNumber":420,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":421,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":422,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":423,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"},{"lineNumber":424,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":382,"ngnigel99":7,"swatimahadevan":16,"shoibloya":19}},{"path":"src/main/java/seedu/duke/parser/journal/ParserJournal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.parser.journal;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.journal.DuplicateNoteException;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.EmptyEntryArgumentsException;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.journal.EmptyNoteArgumentsException;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.journal.EmptyNoteNameException;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.EmptyEntryNameException;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.journal.NotebookArgumentNotFoundException;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.journal.NotebookNotFoundForEntryAddition;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.journal.Note;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"public class ParserJournal {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"     * Returns the name of the notebook.","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param input contains notebook information","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"SvethaMahadevan"},"content":"     * @return noteName a string which contains the name of the notebook","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws DuplicateNoteException if notebook with same name has been added before","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"SvethaMahadevan"},"content":"    public static String parseAddNoteCommand(String input, Storage storage) throws DuplicateNoteException,","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"SvethaMahadevan"},"content":"            EmptyNoteNameException, EmptyNoteArgumentsException {","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"SvethaMahadevan"},"content":"        if (isValidNotebookCommand(input)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"SvethaMahadevan"},"content":"            ArrayList\u003cNote\u003e notes \u003d storage.collectionOfNotes.getNotesArrayList();","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"SvethaMahadevan"},"content":"            String noteName \u003d checkDuplicateOrNot(input, notes);","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"SvethaMahadevan"},"content":"            return noteName;","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"SvethaMahadevan"},"content":"        return null;","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"SvethaMahadevan"},"content":"     * Checking if addition of notebook will result in duplicates.","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param input getting userInput regarding notebook","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param notes list of notes","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"SvethaMahadevan"},"content":"     * @return notebook name if it is not duplicate","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws DuplicateNoteException checks for duplicate note","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"SvethaMahadevan"},"content":"    public static String checkDuplicateOrNot(String input, ArrayList\u003cNote\u003e notes) throws DuplicateNoteException {","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"SvethaMahadevan"},"content":"        String noteNameDetails \u003d input.trim().split(\"notebook\")[1];","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"SvethaMahadevan"},"content":"        String noteName \u003d noteNameDetails.split(\"n/\")[1].trim();","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"SvethaMahadevan"},"content":"        for (Note note : notes) {","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"SvethaMahadevan"},"content":"            if (note.getNoteName().equals(noteName)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"SvethaMahadevan"},"content":"                throw new DuplicateNoteException();","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"SvethaMahadevan"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"SvethaMahadevan"},"content":"        return noteName;","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"SvethaMahadevan"},"content":"     * To check if notebook command is valid, else false.","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param input user input","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"SvethaMahadevan"},"content":"     * @return true if notebook command is valid, else false","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws EmptyNoteArgumentsException checks if note arguments are empty","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws EmptyNoteNameException checks if notebook name is not entered","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"SvethaMahadevan"},"content":"    public static boolean isValidNotebookCommand(String input) throws EmptyNoteArgumentsException,","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"SvethaMahadevan"},"content":"            EmptyNoteNameException {","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"SvethaMahadevan"},"content":"        final String[] commandTypeAndParams \u003d Parser.splitCommandAndArgs(input);","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"SvethaMahadevan"},"content":"        final String commandArgs \u003d commandTypeAndParams[1];","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"SvethaMahadevan"},"content":"        String[] noteArguments \u003d commandArgs.split(\" \");","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"SvethaMahadevan"},"content":"        if (noteArguments.length \u003d\u003d 1) {","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"SvethaMahadevan"},"content":"            throw new EmptyNoteArgumentsException();","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"SvethaMahadevan"},"content":"        if (noteArguments.length \u003d\u003d 2 \u0026\u0026 noteArguments[1].equals(\"n/\")) {","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"SvethaMahadevan"},"content":"            throw new EmptyNoteNameException();","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"SvethaMahadevan"},"content":"        return true;","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"SvethaMahadevan"},"content":"     * Returns the name of the notebook and entry to allow for adding of entry.","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param input contains information about entry and the desired notebook from user","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"SvethaMahadevan"},"content":"     * @return a String array which stores notebook name and entry name","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws EmptyEntryArgumentsException if no arguments found after entry","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws EmptyNoteNameException if no note name found after n/","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws EmptyEntryNameException if no entry name found after e/","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws NotebookArgumentNotFoundException note or entry argument not found when adding entry.","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws NotebookNotFoundForEntryAddition if notebook to add entry doesn\u0027t exist","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"SvethaMahadevan"},"content":"    public static String[] parseAddEntryCommand(String input, Storage storage) throws EmptyEntryArgumentsException,","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"SvethaMahadevan"},"content":"            EmptyNoteNameException, EmptyEntryNameException, NotebookArgumentNotFoundException,","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"SvethaMahadevan"},"content":"            NotebookNotFoundForEntryAddition {","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"SvethaMahadevan"},"content":"        final String[] commandTypeAndParams \u003d Parser.splitCommandAndArgs(input);","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"SvethaMahadevan"},"content":"        final String commandArgs \u003d commandTypeAndParams[1];","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cNote\u003e notes \u003d storage.collectionOfNotes.getNotesArrayList();","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"SvethaMahadevan"},"content":"        String[] noteArguments \u003d commandArgs.split(\" \");","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"SvethaMahadevan"},"content":"        if (noteArguments.length \u003d\u003d 1) {","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"SvethaMahadevan"},"content":"            throw new EmptyEntryArgumentsException();","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"SvethaMahadevan"},"content":"        if (noteArguments.length \u003d\u003d 2 \u0026\u0026 noteArguments[1].equals(\"n/\")) {","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"SvethaMahadevan"},"content":"            throw new EmptyNoteNameException();","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"SvethaMahadevan"},"content":"        if (noteArguments.length \u003d\u003d 4 \u0026\u0026 noteArguments[3].equals(\"e/\")) {","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"SvethaMahadevan"},"content":"            throw new EmptyEntryNameException();","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"SvethaMahadevan"},"content":"        boolean isNoteArgumentPresent \u003d false;","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"SvethaMahadevan"},"content":"        boolean isEntryArgumentPresent \u003d false;","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"SvethaMahadevan"},"content":"        for (String noteArgument : noteArguments) {","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"SvethaMahadevan"},"content":"            if (noteArgument.equals(\"n/\")) {","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"SvethaMahadevan"},"content":"                isNoteArgumentPresent \u003d true;","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"SvethaMahadevan"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"SvethaMahadevan"},"content":"            if (noteArgument.equals(\"e/\")) {","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"SvethaMahadevan"},"content":"                isEntryArgumentPresent \u003d true;","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"SvethaMahadevan"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"SvethaMahadevan"},"content":"        if (isEntryArgumentPresent \u0026\u0026 isNoteArgumentPresent) {","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"SvethaMahadevan"},"content":"            String[] noteEntryNames \u003d parseNoteEntryName(input);","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"SvethaMahadevan"},"content":"            int flagNotebook \u003d notes.stream().anyMatch(note -\u003e note.getNoteName().equals(noteEntryNames[0])) ? 1 : 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"SvethaMahadevan"},"content":"            if (flagNotebook \u003d\u003d 0) {","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"SvethaMahadevan"},"content":"                throw new NotebookNotFoundForEntryAddition();","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"SvethaMahadevan"},"content":"            } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"SvethaMahadevan"},"content":"                return new String[]{noteEntryNames[0], noteEntryNames[1]};","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"SvethaMahadevan"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"SvethaMahadevan"},"content":"        } else if (isEntryArgumentPresent \u0026\u0026 !isNoteArgumentPresent) {","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"SvethaMahadevan"},"content":"            throw new NotebookArgumentNotFoundException(\"Note argument not found!\");","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"SvethaMahadevan"},"content":"        } else if (!isEntryArgumentPresent \u0026\u0026 isNoteArgumentPresent) {","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"SvethaMahadevan"},"content":"            throw new NotebookArgumentNotFoundException(\"Entry argument not found!\");","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"SvethaMahadevan"},"content":"        return null;","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"SvethaMahadevan"},"content":"     * Parsing notebook and entry name.","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param input from user","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"SvethaMahadevan"},"content":"     * @return notebook name and entry name in form of string array","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"SvethaMahadevan"},"content":"    public static String[] parseNoteEntryName(String input) {","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"SvethaMahadevan"},"content":"        String noteNameDetails \u003d input.trim().split(\"entry\")[1];","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"SvethaMahadevan"},"content":"        String noteAndEntryName \u003d noteNameDetails.split(\"n/\")[1].trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"SvethaMahadevan"},"content":"        String entryName \u003d noteAndEntryName.split(\"e/\")[1].trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"SvethaMahadevan"},"content":"        String noteName \u003d noteAndEntryName.split(\"e/\")[0].trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"SvethaMahadevan"},"content":"        return new String[]{noteName, entryName};","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"SvethaMahadevan":138,"nvbinh15":5}},{"path":"src/main/java/seedu/duke/parser/schedule/ParserSchedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.parser.schedule;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.IncorrectNumberOfArgumentsException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.TODO;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.CALENDAR_COMMAND_SPLIT;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.DELIMITER_DATE;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.MONTH_UPPER_LIMIT;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.INDEX_ZERO;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.INDEX_ONE;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.NAME_ABSENT;","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"public class ParserSchedule {","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"     * Parsing of calendar command for JUnit.","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"     * @param input from user.","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"     * @return year and month","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"    public static YearMonth parseCalendarCommandForJunit(String input) {","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"        // takes substring excluding \"calendar\" from command","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"        String extractMonthYear \u003d input.substring(CALENDAR_COMMAND_SPLIT);","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"        var arguments \u003d extractMonthYear.split(DELIMITER_DATE);","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"        int month \u003d Integer.parseInt(arguments[INDEX_ZERO]);","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"        assert month \u003c\u003d MONTH_UPPER_LIMIT;","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"        int year \u003d Integer.parseInt(arguments[1]);","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"        YearMonth yearMonth \u003d YearMonth.of(year, month);","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"        return yearMonth;","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"    public static String parseTodoWhenDateNotGiven(String input) {","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd-MM-yyyy\");","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"        String date \u003d sdf.format(new Date());","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"        input \u003d input + \" \" + date;","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"        return input;","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"    //modified from @author SvethaMahadevan","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"     * Parsing of todo command.","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"     * @param input from user.","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"     * @return Checking for whether arguments are present.","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"swatimahadevan"},"content":"     * @throws IncorrectNumberOfArgumentsException to check if correct number of arguments.","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"swatimahadevan"},"content":"    public static ArrayList\u003cString\u003e parseTodoCommand(String input) throws IncorrectNumberOfArgumentsException {","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"swatimahadevan"},"content":"        final String[] commandTypeAndParams \u003d Parser.splitCommandAndArgs(input);","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"swatimahadevan"},"content":"        assert commandTypeAndParams.length \u003d\u003d 2;","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"swatimahadevan"},"content":"        final String commandArgs \u003d commandTypeAndParams[1];","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"swatimahadevan"},"content":"        boolean isNameArgumentPresent \u003d false;","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"swatimahadevan"},"content":"        boolean isDateArgumentPresent \u003d false;","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"swatimahadevan"},"content":"        String[] todoArguments \u003d commandArgs.split(\" \");","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"swatimahadevan"},"content":"        for (int i \u003d 0; i \u003c todoArguments.length; i++) {","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"swatimahadevan"},"content":"            if (todoArguments[i].equals(\"n/\")) {","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"swatimahadevan"},"content":"                isNameArgumentPresent \u003d true;","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"swatimahadevan"},"content":"                if (todoArguments.length \u003d\u003d i + 1 || todoArguments[i + 1].equals(\"d/\")) {","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"swatimahadevan"},"content":"                    throw new IncorrectNumberOfArgumentsException(NAME_ABSENT);","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"swatimahadevan"},"content":"                }","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"swatimahadevan"},"content":"            if (todoArguments[i].equals(\"d/\")) {","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"swatimahadevan"},"content":"                isDateArgumentPresent \u003d true;","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"swatimahadevan"},"content":"                if (todoArguments.length \u003d\u003d i + 1) {","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"swatimahadevan"},"content":"                    System.out.println(\"You have not provided a date so \"","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"swatimahadevan"},"content":"                            + \"I will add the task to today\u0027s date...\"","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"swatimahadevan"},"content":"                            + \"please specify one in DD-MM-YYYY next time!\");","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"swatimahadevan"},"content":"                    input \u003d parseTodoWhenDateNotGiven(input);","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"swatimahadevan"},"content":"                }","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"swatimahadevan"},"content":"        if (isNameArgumentPresent \u0026\u0026 isDateArgumentPresent) {","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"swatimahadevan"},"content":"            return parseTodoArgumentsArray(input);","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"swatimahadevan"},"content":"        if (isNameArgumentPresent) {","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"swatimahadevan"},"content":"            throw new IncorrectNumberOfArgumentsException(\"Date argument not found!\");","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"swatimahadevan"},"content":"        if (isDateArgumentPresent) {","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"swatimahadevan"},"content":"            throw new IncorrectNumberOfArgumentsException(\"Name argument not found!\");","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"swatimahadevan"},"content":"        } else {","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"swatimahadevan"},"content":"            throw new IncorrectNumberOfArgumentsException(\"Name and date arguments not found!\");","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"swatimahadevan"},"content":"     * Parsing of todo arguments.","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"swatimahadevan"},"content":"     * @param input from user.","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"swatimahadevan"},"content":"     * @return Returning arguments of todo command.","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"swatimahadevan"},"content":"     * @throws IncorrectNumberOfArgumentsException to check if correct number of arguments.","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"swatimahadevan"},"content":"    public static ArrayList\u003cString\u003e parseTodoArgumentsArray(String input) {","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cString\u003e argumentsTodoCommand \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"swatimahadevan"},"content":"        String todoDetails \u003d input.trim().substring(CALENDAR_COMMAND_SPLIT);","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"swatimahadevan"},"content":"        String descriptionAndDate \u003d todoDetails.split(\"n/\")[INDEX_ONE].trim();","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"swatimahadevan"},"content":"        String description \u003d descriptionAndDate.split(\"d/\")[INDEX_ZERO].trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"swatimahadevan"},"content":"        String date \u003d descriptionAndDate.split(\"d/\")[INDEX_ONE].trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"swatimahadevan"},"content":"        List\u003cString\u003e todoInformation \u003d Arrays.asList(TODO, description, date);","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"swatimahadevan"},"content":"        argumentsTodoCommand.addAll(todoInformation);","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"swatimahadevan"},"content":"        return argumentsTodoCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"swatimahadevan"},"content":"     * Parsing of calendar command.","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"swatimahadevan"},"content":"     * @param input from user.","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"swatimahadevan"},"content":"     * @return month and year arguments.","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"swatimahadevan"},"content":"    public static String[] parseCalendarCommand(String input) {","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"swatimahadevan"},"content":"        // takes substring excluding \"calendar\" from command","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"swatimahadevan"},"content":"        String extractMonthYear \u003d input.substring(CALENDAR_COMMAND_SPLIT);","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"swatimahadevan"},"content":"        String[] arguments \u003d extractMonthYear.split(DELIMITER_DATE);","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"swatimahadevan"},"content":"        return arguments;","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"swatimahadevan":124}},{"path":"src/main/java/seedu/duke/schedule/Schedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.schedule;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import java.util.concurrent.atomic.AtomicInteger;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.DELIMITER_DATE;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.TOTAL_SIZE;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.DAYS_IN_MONTH;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.INDEX_ZERO;","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.INDEX_ONE;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.NUMBER_OF_DAYS_IN_WEEK;","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.LEAVE_EMPTY_IN_DISPLAY;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.EMPTY_SPACE;","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.TASK_FORMATTER;","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.SEPARATOR_DISPLAY;","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.CALENDER_DATE_FORMATTER;","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":" * Represents the logic and UI behind calendar with tasks display.","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"public class Schedule {","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"    public static void parseTaskList(TaskList taskList,","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"                                     ArrayList\u003cArrayList\u003cString\u003e\u003e calendarTasks, int month, int year) {","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"        for (Task task : taskList.getTaskList()) {","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"            String description \u003d task.getDescription();","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"            String[] dateArguments \u003d task.getDate().split(DELIMITER_DATE);","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"            addTaskToCalendarDay(dateArguments, description, month, year, calendarTasks);","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"    public static void intializeCalendarDayTasksList(ArrayList\u003cArrayList\u003cString\u003e\u003e calendarTasks) {","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"        while (calendarTasks.size() !\u003d TOTAL_SIZE) {","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"            calendarTasks.add(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"    private static void addTaskToCalendarDay(String[] dateArguments,","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"                                             String description, int month,","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"                                             int year, ArrayList\u003cArrayList\u003cString\u003e\u003e calendarTasks) {","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"        if (month \u003d\u003d Integer.parseInt(dateArguments[1])","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"                \u0026\u0026 year \u003d\u003d Integer.parseInt(dateArguments[2])) {","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"            int date \u003d Integer.parseInt(dateArguments[0]);","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"            calendarTasks.get(date).add(description);","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"swatimahadevan"},"content":"     * Prints out the calendar after the calendar display command is used.","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"swatimahadevan"},"content":"     * @param inputYearMonth YearMonth object that is parsed from the year and month given by the user.","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"swatimahadevan"},"content":"     * @param calendarTasks  The calendar","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"swatimahadevan"},"content":"    public static void displayCalendar(YearMonth inputYearMonth, ArrayList\u003cArrayList\u003cString\u003e\u003e calendarTasks) {","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cString\u003e calendar \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"swatimahadevan"},"content":"        addDatesForDaysInMonth(inputYearMonth, calendar);","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"swatimahadevan"},"content":"        addNoDatesInBeginning(inputYearMonth, calendar);","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"swatimahadevan"},"content":"        addNoDatesInEnd(calendar);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"swatimahadevan"},"content":"        // Print out the entire display in week rows","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"swatimahadevan"},"content":"        int totalWeeks \u003d (int) Math.ceil((double)calendar.size() / NUMBER_OF_DAYS_IN_WEEK);","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"swatimahadevan"},"content":"        int currentWeek \u003d 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"swatimahadevan"},"content":"        Ui.printCalendarLine();","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"swatimahadevan"},"content":"        printEntireCalendar(totalWeeks, currentWeek, calendar, calendarTasks);","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"swatimahadevan"},"content":"    private static void printEntireCalendar(int totalWeeks, int currentWeek,","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"swatimahadevan"},"content":"                                            ArrayList\u003cString\u003e calendar, ArrayList\u003cArrayList\u003cString\u003e\u003e calendarTasks) {","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"swatimahadevan"},"content":"        AtomicInteger j \u003d new AtomicInteger();","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"swatimahadevan"},"content":"        while (currentWeek \u003c totalWeeks) {","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"swatimahadevan"},"content":"            int indexOfDay \u003d currentWeek * NUMBER_OF_DAYS_IN_WEEK;","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"swatimahadevan"},"content":"            Ui.printDayDemarcation();","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"swatimahadevan"},"content":"            printCalendarDates(calendar, indexOfDay);","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"swatimahadevan"},"content":"            System.out.println();","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"swatimahadevan"},"content":"            printTaskForWeek(calendarTasks, calendar, indexOfDay);","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"swatimahadevan"},"content":"            Ui.printCalendarLine();","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"swatimahadevan"},"content":"            currentWeek++;","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"swatimahadevan"},"content":"    //Add all dates that are available in the month from 01-value of last day of month","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"swatimahadevan"},"content":"    private static void addDatesForDaysInMonth(YearMonth inputYearMonth, ArrayList\u003cString\u003e calendar) {","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"swatimahadevan"},"content":"        String[] daysInMonth \u003d DAYS_IN_MONTH;","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"swatimahadevan"},"content":"        calendar.addAll(Arrays.asList(daysInMonth).subList(INDEX_ZERO, inputYearMonth.lengthOfMonth()));","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":95,"author":{"gitId":"swatimahadevan"},"content":"    // Add in spaces at the beginning for display upto day 1","lastModifiedDate":"2021-10-04"},{"lineNumber":96,"author":{"gitId":"swatimahadevan"},"content":"    private static void addNoDatesInBeginning(YearMonth inputYearMonth, ArrayList\u003cString\u003e calendar) {","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"swatimahadevan"},"content":"        DayOfWeek dayOneOfMonth \u003d inputYearMonth.atDay(INDEX_ONE).getDayOfWeek();","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"swatimahadevan"},"content":"        if (dayOneOfMonth !\u003d DayOfWeek.SUNDAY) {","lastModifiedDate":"2021-10-04"},{"lineNumber":99,"author":{"gitId":"swatimahadevan"},"content":"            IntStream.range(INDEX_ZERO, dayOneOfMonth.getValue()).forEachOrdered(i -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"swatimahadevan"},"content":"                    calendar.add(INDEX_ZERO, LEAVE_EMPTY_IN_DISPLAY));","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":102,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":103,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"swatimahadevan"},"content":"    //Add in spaces at the end after the last day to fill in the week","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"swatimahadevan"},"content":"    private static void addNoDatesInEnd(ArrayList\u003cString\u003e calendar) {","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"swatimahadevan"},"content":"        while (calendar.size() % NUMBER_OF_DAYS_IN_WEEK !\u003d INDEX_ZERO) {","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"swatimahadevan"},"content":"            calendar.add(LEAVE_EMPTY_IN_DISPLAY);","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":109,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":111,"author":{"gitId":"swatimahadevan"},"content":"    //Print out the top rows with dates from 01-value of last day of month","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"swatimahadevan"},"content":"    private static void printCalendarDates(ArrayList\u003cString\u003e calendar, int indexOfDay) {","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"swatimahadevan"},"content":"        for (int dayOfWeek \u003d INDEX_ZERO; dayOfWeek \u003c NUMBER_OF_DAYS_IN_WEEK; dayOfWeek++) {","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"swatimahadevan"},"content":"            String s \u003d EMPTY_SPACE + calendar.get(indexOfDay + dayOfWeek) + CALENDER_DATE_FORMATTER;","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"swatimahadevan"},"content":"            System.out.print(s);","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"swatimahadevan"},"content":"    private static void printTaskForWeek(ArrayList\u003cArrayList\u003cString\u003e\u003e calendarTasks,","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"swatimahadevan"},"content":"                                         ArrayList\u003cString\u003e calendar, int indexOfDay) {","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"swatimahadevan"},"content":"        int calendarRow \u003d 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"swatimahadevan"},"content":"        while (calendarRow \u003c 3) {","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"swatimahadevan"},"content":"            System.out.print(SEPARATOR_DISPLAY);","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"swatimahadevan"},"content":"            for (int day \u003d INDEX_ZERO; day \u003c NUMBER_OF_DAYS_IN_WEEK; day++) {","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"swatimahadevan"},"content":"                printDetails(calendarTasks, calendar, indexOfDay, calendarRow, day);","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"swatimahadevan"},"content":"            System.out.println();","lastModifiedDate":"2021-10-04"},{"lineNumber":128,"author":{"gitId":"swatimahadevan"},"content":"            calendarRow++;","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"swatimahadevan"},"content":"    private static void printDetails(ArrayList\u003cArrayList\u003cString\u003e\u003e calendarTasks,","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"swatimahadevan"},"content":"                                     ArrayList\u003cString\u003e calendarDates, int indexOfDay, int calendarRow, int day) {","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"swatimahadevan"},"content":"        String dayString \u003d calendarDates.get(indexOfDay + day).trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"swatimahadevan"},"content":"        if (!dayString.equals(EMPTY_SPACE) \u0026\u0026 calendarTasks.get(Integer.parseInt(dayString)).size() \u003e calendarRow) {","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"swatimahadevan"},"content":"            int currentDay \u003d Integer.parseInt(dayString);","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"swatimahadevan"},"content":"            String taskName \u003d calendarTasks.get(currentDay).get(calendarRow);","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"swatimahadevan"},"content":"            if (taskName.length() \u003e 10) {","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"swatimahadevan"},"content":"                taskName \u003d taskName.substring(INDEX_ZERO, 10);","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"swatimahadevan"},"content":"            } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"swatimahadevan"},"content":"                taskName \u003d String.format(\"%-\" + 10 + \"s\", taskName);","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"swatimahadevan"},"content":"            System.out.print(EMPTY_SPACE + taskName + TASK_FORMATTER);","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"swatimahadevan"},"content":"        } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"swatimahadevan"},"content":"            Ui.printEmptyTaskSpot();","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"swatimahadevan":149}},{"path":"src/main/java/seedu/duke/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.food.WhatIAteList;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.journal.CollectionOfEntries;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.journal.CollectionOfNotes;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.logger.ClickLogger;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"import java.io.File;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"public class Storage {","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"     * Synchronised date with food record  list.","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"     * */","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"    private Date todaysDate;    //TODO sync date with file","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    private String tasksFilePath;","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    public WhatIAteList whatIAteTodayList \u003d  StorageFood.load();","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"    public static TaskList tasksList;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"    static {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"            tasksList \u003d StorageTasks.readTaskList();","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"SvethaMahadevan"},"content":"    public CollectionOfNotes collectionOfNotes \u003d StorageNotes.readCollectionOfNotes();","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"SvethaMahadevan"},"content":"    public CollectionOfEntries collectionOfEntries \u003d StorageEntries.readEntries();","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"    public StorageModule storageModule \u003d new StorageModule();","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"    public Storage() throws IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"     * Creates directory if directory folderName is not found.","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"     * access modifier left empty for working in Storage.","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"     * @param folderName folder name to check","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"     * @throws IOException case where directory not found","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"    static void checkAndAddDirectory(String folderName) throws IOException {","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"        assert folderName.contains(\"/\") : \"Please follow format [DIR_NAME]/\";   //checks syntax of constant","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"SvethaMahadevan"},"content":"        String home \u003d new File(\"\").getAbsolutePath() + \u0027/\u0027;","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"SvethaMahadevan"},"content":"        File dirCheck \u003d new File(home + folderName);","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"        ClickLogger.getNewLogger().log(Level.INFO,  \"checking if directory exists!\");","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"SvethaMahadevan"},"content":"        if (dirCheck.isDirectory()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"            ClickLogger.getNewLogger().log(Level.INFO, \"nice, directory found!\");","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"SvethaMahadevan"},"content":"            return;","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"        ClickLogger.getNewLogger().log(Level.CONFIG, \"not nice, no directory found,\"","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"                +     \"creating  new directory\");","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"Hey, I didn\u0027t find directory \" + folderName);","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"adding \" + folderName + \" into repository...\");","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"SvethaMahadevan"},"content":"        Files.createDirectories(Paths.get(home + folderName));","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"swatimahadevan"},"content":"    //@author swatim","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"swatimahadevan"},"content":"    //Loads data in the form of ArrayList\u003cString\u003e data from the save file","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"    public static ArrayList\u003cString\u003e loadDataFromSaveFile(String filePath) throws IOException {","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"swatimahadevan"},"content":"        FileReader fileReader \u003d new FileReader(filePath);","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"swatimahadevan"},"content":"        BufferedReader bufferedReader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"swatimahadevan"},"content":"        String line;","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"swatimahadevan"},"content":"        while ((line \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"swatimahadevan"},"content":"            data.add(line);","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"swatimahadevan"},"content":"        return data;","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"swatimahadevan"},"content":"    //Write data from ArrayList\u003cString\u003e data onto save file","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"ngnigel99"},"content":"    public static void writeDataOntoSaveFile(String filePath, ArrayList\u003cString\u003e data) throws IOException {","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"swatimahadevan"},"content":"        BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"ngnigel99"},"content":"        for (String dataObject : data) {","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"swatimahadevan"},"content":"            bufferedWriter.write(dataObject + \u0027\\n\u0027);","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"swatimahadevan"},"content":"        bufferedWriter.close();","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"SvethaMahadevan":16,"nvbinh15":5,"ngnigel99":35,"swatimahadevan":38}},{"path":"src/main/java/seedu/duke/storage/StorageEntries.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.journal.CollectionOfEntries;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.journal.Entry;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.File;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"public class StorageEntries {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"    public static final String folderName \u003d \"journalData/\";","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"    public static final String fileName   \u003d \"journalEntries.txt\";","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"    public static final String filePath \u003d folderName + fileName;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"    static ArrayList\u003cEntry\u003e dataToEntries(ArrayList\u003cString\u003e data) {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cEntry\u003e entries \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"SvethaMahadevan"},"content":"        int dataSize \u003d data.size();","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"SvethaMahadevan"},"content":"        while (i \u003c dataSize) {","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"SvethaMahadevan"},"content":"            String dataLine \u003d data.get(i);","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"SvethaMahadevan"},"content":"            String[] entryArguments \u003d dataLine.split(\"\\\\|\");","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"            entries.add(addEntry(entryArguments));","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"SvethaMahadevan"},"content":"            i++;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"SvethaMahadevan"},"content":"        return entries;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"SvethaMahadevan"},"content":"    private static Entry addEntry(String[] noteArguments) {","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"SvethaMahadevan"},"content":"        String noteName \u003d noteArguments[0].trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"SvethaMahadevan"},"content":"        String entryName \u003d noteArguments[1].trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"SvethaMahadevan"},"content":"        return new Entry(noteName, entryName);","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"SvethaMahadevan"},"content":"    public static ArrayList\u003cString\u003e entriesToData(ArrayList\u003cEntry\u003e entries) {","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"SvethaMahadevan"},"content":"        for (Entry entry : entries) {","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"SvethaMahadevan"},"content":"            data.add(entry.toSaveFileFormat());","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"SvethaMahadevan"},"content":"        return data;","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"SvethaMahadevan"},"content":"    public static void writeEntries(CollectionOfEntries collectionOfEntries) throws IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cEntry\u003e entries \u003d collectionOfEntries.getEntriesArrayList();","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cString\u003e data \u003d entriesToData(entries);","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"SvethaMahadevan"},"content":"        Storage.writeDataOntoSaveFile(filePath, data);","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"SvethaMahadevan"},"content":"    public static CollectionOfEntries readEntries() throws NullPointerException, IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"SvethaMahadevan"},"content":"        CollectionOfEntries collectionOfEntries \u003d new CollectionOfEntries();","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cEntry\u003e entries;","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"SvethaMahadevan"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"SvethaMahadevan"},"content":"            Storage.checkAndAddDirectory(StorageEntries.folderName);","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"SvethaMahadevan"},"content":"            ArrayList\u003cString\u003e data \u003d Storage.loadDataFromSaveFile(StorageEntries.filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"SvethaMahadevan"},"content":"            entries \u003d StorageEntries.dataToEntries(data);","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"SvethaMahadevan"},"content":"            for (int i \u003d 0; i \u003c entries.size(); i++) {","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"SvethaMahadevan"},"content":"                collectionOfEntries.addEntry(entries.get(i).getEntryNoteName(), entries.get(i).getNameOfJournalEntry());","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"SvethaMahadevan"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"SvethaMahadevan"},"content":"            return collectionOfEntries;","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"SvethaMahadevan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"SvethaMahadevan"},"content":"            File f \u003d new File(StorageEntries.filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"SvethaMahadevan"},"content":"            System.out.println(\"Hey, I didn\u0027t find \" + StorageEntries.fileName + \" in \" + StorageEntries.folderName","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"SvethaMahadevan"},"content":"                    + \"!\");","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"SvethaMahadevan"},"content":"            System.out.println(\"creating new file...\");","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"SvethaMahadevan"},"content":"        return collectionOfEntries;","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"SvethaMahadevan":69}},{"path":"src/main/java/seedu/duke/storage/StorageFood.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.food.FoodRecord;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.food.WhatIAteList;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.logger.ClickLogger;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"import java.io.File;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":" * This class deals with passing food records to and fro a save file.","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":" * Note: i used my IP implementation, TBD on final format.","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":" * @author ngnigel99","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"public class StorageFood {","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    private static final String folderName \u003d \"fooddata/\";","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    private static final String fileName \u003d \"food.txt\";","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    private static String filePath \u003d  folderName +  fileName;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"    public StorageFood(String filePathToInput) {","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"        filePath \u003d filePathToInput;","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"     * Saves list to save file.","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"     * @param whatIAteList food record list to save","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"     * @throws IOException if file/ directory not found","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"     *                     - handled by creating new directory/ file if necessary","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"    public static void saveList(WhatIAteList whatIAteList) throws IOException {","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"        assert !whatIAteList.equals(null) : \"Please instantiate the list object correctly\";","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"        Storage.checkAndAddDirectory(folderName);","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"        File newList \u003d new File(folderName + fileName);","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"        FileWriter fw \u003d new FileWriter(folderName + fileName);","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"        ClickLogger.getNewLogger().log(Level.INFO, \"Writing to \" + folderName + fileName);","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"        for (FoodRecord f : whatIAteList.getList()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"            fw.write(f.toSaveListFormat());","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"        ClickLogger.getNewLogger().log(Level.INFO, \"done writing to \" + folderName + fileName);","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"        fw.close();","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"     * Returns a food list.","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"     * format of task per line of save file:","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"     * [NAME] |  [CALORIES]","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"     * @return listToReturn food list generated from save file","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"     *          if save file not found, create new list and return","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"    public static WhatIAteList load() {","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"        WhatIAteList listToReturn \u003d new WhatIAteList();","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"            Storage.checkAndAddDirectory(folderName);","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"            Scanner scanList \u003d new Scanner(f);","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"            while (scanList.hasNext()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"                String readLine \u003d scanList.nextLine();","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"                if (readLine.equals(\"\")) {","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"                    break;","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"                }","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"                listToReturn.addToList(Parser.parseFoodSavedListToRecord(readLine), true);","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"            return listToReturn;","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"ngnigel99"},"content":"            ClickLogger.getNewLogger().log(Level.WARNING, \"file not found on load\");","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"ngnigel99"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"Hey, I didn\u0027t find list.txt in \" + folderName + \"!\");","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"creating new file...\");","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"ngnigel99"},"content":"            ClickLogger.getNewLogger().log(Level.CONFIG, \"create new text file\");","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"ngnigel99"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"Null Pointer Exception, try again!\");","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"ngnigel99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"Hey, Input/ Output exception, returning empty list...\");","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"ngnigel99"},"content":"        return listToReturn;","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"ngnigel99":89}},{"path":"src/main/java/seedu/duke/storage/StorageModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.StorageException;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.module.Module;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.module.ModuleList;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import java.io.File;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":" * A class that deals with loading modules from the file and saving modules into the file.","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"public class StorageModule {","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"    private static Parser parser \u003d new Parser();","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"    public static final String PROJECT_ROOT \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"    public static final String STORAGE_FOLDER \u003d \"module\";","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"    public static final String FILE_NAME \u003d \"module.txt\";","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"    public static final Path PATH_TO_STORAGE_FILE \u003d Paths.get(PROJECT_ROOT, STORAGE_FOLDER, FILE_NAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"     * Creates a new file to store data related to Modules.","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"     * @throws IOException If there are failed or interrupted I/O operations.","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"    public static void createFile() throws IOException {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"        File file \u003d new File(String.valueOf(PATH_TO_STORAGE_FILE));","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"        if (file.exists()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"            file.delete();","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"        file.createNewFile();","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"     * Reads data that stored in the Module storage file.","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"     * @return The data stored in the Module storage file or a new ModuleList if there is","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"     *      something wrong with the data file.","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"     * @throws IOException If there are failed or interrupted I/O operations.","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"    public static ModuleList readDataFromFile() throws IOException {","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"        if (Files.notExists(PATH_TO_STORAGE_FILE)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"            createFile();","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"        assert Files.exists(PATH_TO_STORAGE_FILE);","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"        ArrayList\u003cModule\u003e storedModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"        File file \u003d new File(String.valueOf(PATH_TO_STORAGE_FILE));","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"                Module module;","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"                module \u003d parser.retrieveStoredModule(scanner.nextLine());","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"nvbinh15"},"content":"                storedModules.add(module);","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"nvbinh15"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"nvbinh15"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"nvbinh15"},"content":"            System.out.println(\"MESSAGE_FILE_NOT_FOUND\");","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"nvbinh15"},"content":"            return new ModuleList();","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"nvbinh15"},"content":"        } catch (StorageException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"nvbinh15"},"content":"            createFile();","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"nvbinh15"},"content":"            System.out.println(\"MESSAGE_STORAGE_EXCEPTION\");","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"nvbinh15"},"content":"            return new ModuleList();","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"nvbinh15"},"content":"        return new ModuleList(storedModules);","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"nvbinh15"},"content":"     * Saves data to the Module storage file.","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"nvbinh15"},"content":"     * @param moduleList The ModuleList to be stored","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"nvbinh15"},"content":"     * @throws IOException If there are failed or interrupted I/O operations.","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"nvbinh15"},"content":"    public static void saveDataToFile(ModuleList moduleList) throws IOException {","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"nvbinh15"},"content":"        FileWriter fileWriter \u003d new FileWriter(String.valueOf(PATH_TO_STORAGE_FILE));","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"nvbinh15"},"content":"        for (Module m : moduleList.getModules()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"nvbinh15"},"content":"            fileWriter.write(parser.formatModuleToStore(m));","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"nvbinh15"},"content":"        fileWriter.close();","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"nvbinh15":91}},{"path":"src/main/java/seedu/duke/storage/StorageNotes.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.journal.CollectionOfNotes;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.journal.Note;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.logger.ClickLogger;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.File;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"public class StorageNotes {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"    public static final String folderName \u003d \"journalData/\";","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"    public static final String fileName   \u003d \"journalNotes.txt\";","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"    public static final String filePath \u003d folderName + fileName;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"    static ArrayList\u003cNote\u003e dataToNotes(ArrayList\u003cString\u003e data) {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"SvethaMahadevan"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"SvethaMahadevan"},"content":"        int dataSize \u003d data.size();","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"SvethaMahadevan"},"content":"        while (i \u003c dataSize) {","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"SvethaMahadevan"},"content":"            String dataLine \u003d data.get(i);","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"            String[] noteArguments \u003d dataLine.split(\"\\\\|\");","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"SvethaMahadevan"},"content":"            notes.add(addNote(noteArguments));","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"SvethaMahadevan"},"content":"            i++;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"SvethaMahadevan"},"content":"        return notes;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"SvethaMahadevan"},"content":"    private static Note addNote(String[] noteArguments) {","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"SvethaMahadevan"},"content":"        String name \u003d noteArguments[1].trim();","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"SvethaMahadevan"},"content":"        return new Note(name);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"SvethaMahadevan"},"content":"    public static ArrayList\u003cString\u003e notesToData(ArrayList\u003cNote\u003e notes) {","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"SvethaMahadevan"},"content":"        for (Note note : notes) {","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"SvethaMahadevan"},"content":"            data.add(note.toSaveFileFormat());","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"SvethaMahadevan"},"content":"        return data;","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"SvethaMahadevan"},"content":"    public static void writeCollectionOfNotes(CollectionOfNotes collectionOfNotes) throws IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cNote\u003e notes \u003d collectionOfNotes.getNotesArrayList();","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cString\u003e data \u003d notesToData(notes);","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"SvethaMahadevan"},"content":"        Storage.writeDataOntoSaveFile(filePath, data);","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"SvethaMahadevan"},"content":"    public static CollectionOfNotes readCollectionOfNotes() throws NullPointerException, IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"SvethaMahadevan"},"content":"        CollectionOfNotes collectionOfNotes \u003d new CollectionOfNotes();","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cNote\u003e notes;","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"SvethaMahadevan"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"SvethaMahadevan"},"content":"            Storage.checkAndAddDirectory(StorageNotes.folderName);","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"SvethaMahadevan"},"content":"            ArrayList\u003cString\u003e data \u003d Storage.loadDataFromSaveFile(StorageNotes.filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"SvethaMahadevan"},"content":"            notes \u003d StorageNotes.dataToNotes(data);","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"SvethaMahadevan"},"content":"            for (int i \u003d 0; i \u003c notes.size(); i++) {","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"SvethaMahadevan"},"content":"                collectionOfNotes.addNote(notes.get(i).getNoteName());","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"SvethaMahadevan"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"SvethaMahadevan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"SvethaMahadevan"},"content":"            ClickLogger.getNewLogger().log(Level.WARNING, \"file not found on load\");","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"SvethaMahadevan"},"content":"            File f \u003d new File(StorageNotes.filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"SvethaMahadevan"},"content":"            System.out.println(\"Hey, I didn\u0027t find \" + StorageNotes.fileName + \" in \" + StorageNotes.folderName + \"!\");","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"SvethaMahadevan"},"content":"            System.out.println(\"creating new file...\");","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"SvethaMahadevan"},"content":"        return collectionOfNotes;","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"SvethaMahadevan":68}},{"path":"src/main/java/seedu/duke/storage/StorageTasks.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.Todo;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.File;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.TODO;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.INDEX_TODO_DESCRIPTION;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.INDEX_TODO_DATE;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.INDEX_ZERO;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"//@author swatim","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"public class StorageTasks {","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    //author ngnigel99 - create in folder","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    public static final String folderName \u003d \"tasksdata/\";","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    public static final String fileName   \u003d \"scheduleTasks.txt\";","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    public static final String filePath \u003d folderName + fileName;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"     * Gets tasks from storage.","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"     * @param data data from file.","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"     * @return tasks","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"    public static ArrayList\u003cTask\u003e dataToTask(ArrayList\u003cString\u003e data) {","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"        int dataSize \u003d data.size();","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"        while (i \u003c dataSize) {","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"            String dataLine \u003d data.get(i);","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"            String[] todoArguments \u003d dataLine.split(\"\\\\|\");","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"            if (TODO.equals(todoArguments[INDEX_ZERO])) {","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"                String description \u003d todoArguments[INDEX_TODO_DESCRIPTION].trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"                String date \u003d todoArguments[INDEX_TODO_DATE].trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"                tasks.add(new Todo(description, date));","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"            i++;","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"        return tasks;","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"     * Writes task list to storage in string format.","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"     * @throws IOException if command entered is wrong.","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"SvethaMahadevan"},"content":"    public static void writeTaskList(TaskList taskList) throws IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTaskList();","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"swatimahadevan"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"swatimahadevan"},"content":"            data.add(task.toSaveFileFormat());","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"SvethaMahadevan"},"content":"        Storage.writeDataOntoSaveFile(StorageTasks.filePath, data);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"swatimahadevan"},"content":"     * Reads data in string format from storage and returns task list.","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"swatimahadevan"},"content":"     * @return task list","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"swatimahadevan"},"content":"     * @throws NullPointerException in case if empty.","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"swatimahadevan"},"content":"     * @throws IOException if command entered is wrong.","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"SvethaMahadevan"},"content":"    public static TaskList readTaskList() throws NullPointerException, IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"SvethaMahadevan"},"content":"        TaskList tasksList \u003d new TaskList();","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"SvethaMahadevan"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"SvethaMahadevan"},"content":"            Storage.checkAndAddDirectory(StorageTasks.folderName);","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"SvethaMahadevan"},"content":"            ArrayList\u003cString\u003e data \u003d Storage.loadDataFromSaveFile(StorageTasks.filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"SvethaMahadevan"},"content":"            tasks \u003d StorageTasks.dataToTask(data);","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"SvethaMahadevan"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"SvethaMahadevan"},"content":"                tasksList.addTask(tasks.get(i));","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"SvethaMahadevan"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"SvethaMahadevan"},"content":"            return tasksList;","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"SvethaMahadevan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"SvethaMahadevan"},"content":"            File f \u003d new File(StorageTasks.filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"SvethaMahadevan"},"content":"            System.out.println(\"Hey, I didn\u0027t find \" + StorageTasks.fileName + \" in \" + StorageTasks.folderName + \"!\");","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"SvethaMahadevan"},"content":"            System.out.println(\"creating new file...\");","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"SvethaMahadevan"},"content":"        return tasksList;","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"SvethaMahadevan":28,"ngnigel99":4,"swatimahadevan":55}},{"path":"src/main/java/seedu/duke/storage/StorageZoom.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shoibloya"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"shoibloya"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"shoibloya"},"content":"import java.io.File;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"shoibloya"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"shoibloya"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"shoibloya"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"shoibloya"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"shoibloya"},"content":"public class StorageZoom {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"shoibloya"},"content":"    private static final String folderName \u003d \"zoomdata/\";","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"shoibloya"},"content":"    private static final String fileName \u003d \"zoom.txt\";","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"shoibloya"},"content":"    private static String filePath \u003d  folderName +  fileName;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"shoibloya"},"content":"    public static void saveLink(String moduleName, String zoomLink) throws IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"        Storage.checkAndAddDirectory(folderName);","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"shoibloya"},"content":"        File newList \u003d new File(folderName + fileName);","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"shoibloya"},"content":"        FileWriter fw \u003d new FileWriter(folderName + fileName, true);","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"shoibloya"},"content":"        fw.write(moduleName + \u0027-\u0027 + zoomLink + \"\\n\");","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"shoibloya"},"content":"        fw.close();","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"shoibloya"},"content":"    public static void displayLinks() {","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"shoibloya"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"shoibloya"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(folderName + fileName));","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"shoibloya"},"content":"            String line;","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"shoibloya"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"shoibloya"},"content":"                String moduleName \u003d line.split(\"-\", 2)[0];","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"shoibloya"},"content":"                String zoomLink \u003d line.split(\"-\", 2)[1];","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"shoibloya"},"content":"                Ui.displayZoomLink(moduleName, zoomLink);","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"shoibloya"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"shoibloya"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"shoibloya"},"content":"            System.out.println(\"File cannot be found!\");","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"shoibloya"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"shoibloya"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"ngnigel99":2,"shoibloya":40}},{"path":"src/main/java/seedu/duke/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.task;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"public abstract class Task {","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"    protected String description;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"    protected String date;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"     * Constructor of Task class.","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"     * @param description of task","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"     * @param date of task","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"    public Task(String description, String date) {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"     * Get task description.","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"     * @return task description","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"        return description;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"     * Get date of task.","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"     * @return date","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"    public String getDate() {","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"        return date;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"    public abstract String toSaveFileFormat();","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"     * Returns task description.","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"     * @return description of task","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"        return description;","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"swatimahadevan":48}},{"path":"src/main/java/seedu/duke/task/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.task;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"public class TaskList {","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"    public TaskList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"        return tasks;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"     * Allows for adding of task to list of tasks.","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"     * @param task task to be added.","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"        tasks.add(task);","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"     * Allows for deleting of task from list of tasks.","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"     * @param index index of task to be deleted.","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"    public void editTask(int index, String description, String date) {","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"        Task task \u003d new Todo(description, date);","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"        tasks.set(index - 1, task);","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"swatimahadevan":40}},{"path":"src/main/java/seedu/duke/task/Todo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.task;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"    public Todo(String description, String date) {","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"        super(description, date);","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"     * Returns in format for storage file.","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"     * @return storage file in string format.","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"    public String toSaveFileFormat() {","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"        return \"todo\" + \"|\" + description + \"|\" + date;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"     * Returns todo information in format for printing.","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"     * @return todo information in format for printing","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"        return super.toString() + \" (on: \" + date + \")\";","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"swatimahadevan":29}},{"path":"src/main/java/seedu/duke/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.calendar.DisplayCalendarCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.IncorrectNumberOfArgumentsException;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.food.FoodRecord;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.Messages.ADDED_TASK;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.DISPLAY_LINE;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.DAY_DEMARCATION;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.NO_TASK_IN_DAY;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.Messages.CALENDAR_HEADER_LINE;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.Messages.HORIZONTAL_LINE;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.Messages.INVALID_CALENDAR_INPUT;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.Messages.LIST_TASKS_HEADER;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.Messages.LOGO;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.Messages.MESSAGE_GOODBYE;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.Messages.MESSAGE_GREETING;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"public class Ui {","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"    private static Storage storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"    static {","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"     * Reads the text entered by the user.","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"     * @param in The Scanner to read user input.","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"     * @return line Full line entered by the user.","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"    public String getUserInput(Scanner in) {","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"        String line \u003d in.nextLine();","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"        return line;","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"     * Prints the divider HORIZONTAL_LINE.","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"    public static void printLine() {","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"     * Prints the greeting message to standard output.","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"    public static void printGreeting() {","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"        printMessage(LOGO + MESSAGE_GREETING);","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"swatimahadevan"},"content":"        //printCurrentMonthCalendar();","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"nvbinh15"},"content":"     * Prints the goodbye message to standard output.","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"nvbinh15"},"content":"    public static void printGoodBye() {","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"nvbinh15"},"content":"        printMessage(MESSAGE_GOODBYE);","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"nvbinh15"},"content":"     * Prints message to the standard output.","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"nvbinh15"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":80,"author":{"gitId":"nvbinh15"},"content":"    public static void printMessage(String message) {","lastModifiedDate":"2021-10-04"},{"lineNumber":81,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-10-04"},{"lineNumber":82,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(message);","lastModifiedDate":"2021-10-04"},{"lineNumber":83,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-10-04"},{"lineNumber":84,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":85,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"ngnigel99"},"content":"    //start of FOOD","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"ngnigel99"},"content":"     * Prints the name of the record, as well as the calorie count.","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"swatimahadevan"},"content":"     * @param record record to be added","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"ngnigel99"},"content":"    //TODO  remove messages, may be neater","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"ngnigel99"},"content":"    public static void printAddRecord(FoodRecord record)  {","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"Nice.  I\u0027ve added \"","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"ngnigel99"},"content":"                + record.getFoodName()","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"ngnigel99"},"content":"                + \" to the list, with \"","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"ngnigel99"},"content":"                + record.getCalorieCount()","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"ngnigel99"},"content":"                + \" calories!\");","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"ngnigel99"},"content":"     * Prints success on clear message to user.","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"ngnigel99"},"content":"    public static void printDoneClearList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(Messages.PRINT_DONE_CLEAR_LIST);","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"ngnigel99"},"content":"    public static void printAddFoodSyntax() {","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(Messages.PRINT_ADD_FOOD_SYNTAX);","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"ngnigel99"},"content":"    public static void printNonNullInput() {","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(Messages.NON_NULL_INPUT);","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"ngnigel99"},"content":"    public static void printOnlyIntegers() {","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(Messages.PRINT_NOT_AN_INT);","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"ngnigel99"},"content":"     * Prints a general error message.","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"ngnigel99"},"content":"     * Ideally should be more specific, try not to use this","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"ngnigel99"},"content":"     * for exceptions - implement in further testing versions.","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"ngnigel99"},"content":"    public static void printErrorMessageGeneral() {","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(Messages.PRINT_ERROR_MESSAGE_GENERAL);","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"ngnigel99"},"content":"    public static void printDoneDeleteFood(FoodRecord foodRecord, int index) {","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(Messages.PRINT_DONE_DELETE_INDEX + \" \"","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"ngnigel99"},"content":"                +  foodRecord.getFoodName()","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"ngnigel99"},"content":"                + \" at index: \" + index);","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"ngnigel99"},"content":"    //end of FOOD","lastModifiedDate":"2021-10-06"},{"lineNumber":137,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"SvethaMahadevan"},"content":"     * Prints message to indicate note has been added.","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"SvethaMahadevan"},"content":"     * @author SvethaMahadevan","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"swatimahadevan"},"content":"    public static void printAddedNoteMessage(String noteName) {","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"Great you have added the note: \" + noteName);","lastModifiedDate":"2021-10-06"},{"lineNumber":145,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"SvethaMahadevan"},"content":"     * Prints message to indicate entry has been added.","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":150,"author":{"gitId":"SvethaMahadevan"},"content":"     * @author SvethaMahadevan","lastModifiedDate":"2021-10-13"},{"lineNumber":151,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":152,"author":{"gitId":"SvethaMahadevan"},"content":"    public static void printAddedEntryMessage(String entryName) {","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"Great you have added the entry: \" + entryName);","lastModifiedDate":"2021-10-13"},{"lineNumber":154,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":155,"author":{"gitId":"SvethaMahadevan"},"content":"    //end of UI for journal","lastModifiedDate":"2021-10-06"},{"lineNumber":156,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":157,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":158,"author":{"gitId":"swatimahadevan"},"content":"    //Schedule","lastModifiedDate":"2021-10-06"},{"lineNumber":159,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":160,"author":{"gitId":"swatimahadevan"},"content":"     * Prints the header of the calendar with the month and year.","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":162,"author":{"gitId":"swatimahadevan"},"content":"     * @param inputYearMonth The YearMonth object parsed from user input string.","lastModifiedDate":"2021-10-06"},{"lineNumber":163,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":164,"author":{"gitId":"swatimahadevan"},"content":"    public static void printCalenderTitle(YearMonth inputYearMonth) {","lastModifiedDate":"2021-10-06"},{"lineNumber":165,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(\"                     \" + inputYearMonth.getMonth() + \" \"","lastModifiedDate":"2021-10-06"},{"lineNumber":166,"author":{"gitId":"swatimahadevan"},"content":"                + inputYearMonth.getYear());","lastModifiedDate":"2021-10-06"},{"lineNumber":167,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(CALENDAR_HEADER_LINE);","lastModifiedDate":"2021-10-06"},{"lineNumber":168,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":169,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":170,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":171,"author":{"gitId":"swatimahadevan"},"content":"     * Prints error message for all invalid calendar inputs","lastModifiedDate":"2021-10-13"},{"lineNumber":172,"author":{"gitId":"swatimahadevan"},"content":"     * telling user to use \u0027command help\u0027.","lastModifiedDate":"2021-10-13"},{"lineNumber":173,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":174,"author":{"gitId":"swatimahadevan"},"content":"    public static void printInvalidCalendarInput() {","lastModifiedDate":"2021-10-06"},{"lineNumber":175,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(INVALID_CALENDAR_INPUT);","lastModifiedDate":"2021-10-13"},{"lineNumber":176,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":177,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":178,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":179,"author":{"gitId":"swatimahadevan"},"content":"     * Prints calendar for current month (intro display).","lastModifiedDate":"2021-10-06"},{"lineNumber":180,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":181,"author":{"gitId":"swatimahadevan"},"content":"    public static void printCurrentMonthCalendar() throws","lastModifiedDate":"2021-10-13"},{"lineNumber":182,"author":{"gitId":"swatimahadevan"},"content":"            IncorrectNumberOfArgumentsException {","lastModifiedDate":"2021-10-13"},{"lineNumber":183,"author":{"gitId":"swatimahadevan"},"content":"        YearMonth currentYearMonth \u003d YearMonth.now();","lastModifiedDate":"2021-10-06"},{"lineNumber":184,"author":{"gitId":"swatimahadevan"},"content":"        String month \u003d String.valueOf(currentYearMonth.getMonthValue());","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"swatimahadevan"},"content":"        String year \u003d String.valueOf(currentYearMonth.getYear());","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"swatimahadevan"},"content":"        new DisplayCalendarCommand(\"calendar \" + month + \"-\" + year).execute(ui, storage);","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":188,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":189,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":190,"author":{"gitId":"swatimahadevan"},"content":"     * Prints confirmatory message after task is added successfully.","lastModifiedDate":"2021-10-09"},{"lineNumber":191,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":192,"author":{"gitId":"swatimahadevan"},"content":"    public static void printTaskAddedMessage() {","lastModifiedDate":"2021-10-09"},{"lineNumber":193,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(ADDED_TASK);","lastModifiedDate":"2021-10-09"},{"lineNumber":194,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":195,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":196,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":197,"author":{"gitId":"swatimahadevan"},"content":"     * Prints out tasks list.","lastModifiedDate":"2021-10-09"},{"lineNumber":198,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":199,"author":{"gitId":"swatimahadevan"},"content":"     * @param tasks List of tasks to be displayed.","lastModifiedDate":"2021-10-09"},{"lineNumber":200,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":201,"author":{"gitId":"swatimahadevan"},"content":"    public static void printTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-10-09"},{"lineNumber":202,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(LIST_TASKS_HEADER);","lastModifiedDate":"2021-10-09"},{"lineNumber":203,"author":{"gitId":"swatimahadevan"},"content":"        if (!tasks.isEmpty()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":204,"author":{"gitId":"swatimahadevan"},"content":"            int i \u003d 1;","lastModifiedDate":"2021-10-09"},{"lineNumber":205,"author":{"gitId":"swatimahadevan"},"content":"            for (Task item : tasks) {","lastModifiedDate":"2021-10-09"},{"lineNumber":206,"author":{"gitId":"swatimahadevan"},"content":"                System.out.println((i++) + \". \" + item);","lastModifiedDate":"2021-10-09"},{"lineNumber":207,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":208,"author":{"gitId":"swatimahadevan"},"content":"        } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":209,"author":{"gitId":"swatimahadevan"},"content":"            System.out.println(\"NO TASKS!\");","lastModifiedDate":"2021-10-09"},{"lineNumber":210,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":211,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":212,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":213,"author":{"gitId":"shoibloya"},"content":"    public static void printHelpMessage(String helpMessage, String syntax) {","lastModifiedDate":"2021-10-13"},{"lineNumber":214,"author":{"gitId":"shoibloya"},"content":"        System.out.println(\"Description: \" + helpMessage);","lastModifiedDate":"2021-10-13"},{"lineNumber":215,"author":{"gitId":"shoibloya"},"content":"        //System.out.println(\"Syntax: \");","lastModifiedDate":"2021-10-13"},{"lineNumber":216,"author":{"gitId":"shoibloya"},"content":"        System.out.println(\"Syntax: \" + syntax);","lastModifiedDate":"2021-10-13"},{"lineNumber":217,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":218,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":219,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":220,"author":{"gitId":"swatimahadevan"},"content":"     * Prints calendar lines for display.","lastModifiedDate":"2021-10-13"},{"lineNumber":221,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":222,"author":{"gitId":"swatimahadevan"},"content":"    public static void printCalendarLine() {","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(DISPLAY_LINE);","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":227,"author":{"gitId":"swatimahadevan"},"content":"     * Prints out the vertical lines between days.","lastModifiedDate":"2021-10-13"},{"lineNumber":228,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":229,"author":{"gitId":"swatimahadevan"},"content":"    public static void printDayDemarcation() {","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"swatimahadevan"},"content":"        System.out.print(DAY_DEMARCATION);","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":234,"author":{"gitId":"swatimahadevan"},"content":"     * Prints out the task grid for empty task days.","lastModifiedDate":"2021-10-13"},{"lineNumber":235,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":236,"author":{"gitId":"swatimahadevan"},"content":"    public static void printEmptyTaskSpot() {","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"swatimahadevan"},"content":"        System.out.print(NO_TASK_IN_DAY);","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":239,"author":{"gitId":"swatimahadevan"},"content":"    //End Schedule","lastModifiedDate":"2021-10-06"},{"lineNumber":240,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":241,"author":{"gitId":"shoibloya"},"content":"    public static void displayZoomLink(String moduleName, String zoomLink) {","lastModifiedDate":"2021-10-13"},{"lineNumber":242,"author":{"gitId":"shoibloya"},"content":"        System.out.println(\"Module: \" + moduleName);","lastModifiedDate":"2021-10-13"},{"lineNumber":243,"author":{"gitId":"shoibloya"},"content":"        System.out.println(\"Zoom: \" + zoomLink + \"\\n\");","lastModifiedDate":"2021-10-13"},{"lineNumber":244,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":245,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":246,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":247,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"SvethaMahadevan":17,"nvbinh15":50,"ngnigel99":56,"swatimahadevan":102,"shoibloya":22}},{"path":"src/test/java/seedu/duke/ClickTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"class ClickTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"nvbinh15":1,"-":11}},{"path":"src/test/java/seedu/duke/commands/AddTodoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.calendar.AddTodoCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.InvalidDateException;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"class AddTodoCommandTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"    void addTodoCommand_checkDate_returnFalse() {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"        Boolean isValidDate \u003d AddTodoCommand.isValid(\"11-22-2021\");","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"        assertEquals(false, isValidDate);","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"    void addTodoCommand_checkDate_throwInvalidDateException() throws InvalidDateException {","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"        String todoDateStringFormat \u003d \"22-22-2021\";","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"            AddTodoCommand.checkIfDateValid(todoDateStringFormat);","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"            assertEquals(\"Invalid date given, use format DD-MM-YYYY!\", e.getMessage());","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"nvbinh15":1,"swatimahadevan":27}},{"path":"src/test/java/seedu/duke/commands/DisplayCalendarCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.calendar.DisplayCalendarCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.InvalidMonthException;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"class DisplayCalendarCommandTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"    void displayCalendar_wrongMonthValue_throwException() throws InvalidMonthException {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"            Command command \u003d new DisplayCalendarCommand(\"calendar 22-2021\");","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"            assertEquals(\"The month has to be a value between 01-12!\", e.getMessage());","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"nvbinh15":1,"swatimahadevan":19}},{"path":"src/test/java/seedu/duke/food/FoodTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.food;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.ArgumentsNotFoundException;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.food.IllegalFoodParameterException;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"import static org.junit.jupiter.api.Assertions.assertSame;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"public class FoodTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"     * Checks food toString correctly.","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    void testFoodToString() {","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"        assertEquals(\"Samurai Burger : 433\", new FoodRecord(\"Samurai Burger\", 433).toString());","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"     * Checks for NumberFormatException on adding a food item.","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"     * Checks correct food syntax parsed in correctly.","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"    void testAddFoodCommand() throws IllegalFoodParameterException, ArgumentsNotFoundException {","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"        String correctUserInput \u003d \"food add n/ Samurai Burger c/ 433\";","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"        FoodRecord testFoodRecord \u003d  parser.parseFoodRecord(correctUserInput);","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"        FoodRecord actualFoodRecord \u003d new FoodRecord(\"Samurai Burger\", 433);","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"        //test fields are correctly constructed","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"        assertEquals(testFoodRecord.getFoodName(), actualFoodRecord.getFoodName());","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"        assertEquals(testFoodRecord.getCalorieCount(), actualFoodRecord.getCalorieCount());","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"    void addFoodItem_stringNotInt_illegalFoodParameterThrown() throws IllegalFoodParameterException {","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"        boolean nfeThrown \u003d false;","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"            FoodRecord foodRecord \u003d parser.parseFoodRecord(\"name_test\" + \" \" + \"sample_string\");","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"            assertEquals(Messages.PRINT_ADD_FOOD_SYNTAX, e.getMessage());","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"     * Checks for IllegalFoodParameterException thrown when word count !\u003d 2.","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"    void addFoodItem_wrongSyntax_illegalFoodParameterExceptionThrown() throws IllegalFoodParameterException {","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"            FoodRecord foodRecord \u003d parser.parseFoodRecord(\"Cheezburger\");  //calorie count not included","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"            assertEquals(Messages.PRINT_ADD_FOOD_SYNTAX, e.getMessage());","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"     * Checks for illegal food parameter exception thrown on null input.","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"    void addFoodItem_noInputGiven_illegalFoodParameterThrown() throws IllegalFoodParameterException {","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"            FoodRecord foodRecord \u003d parser.parseFoodRecord(\"\");","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"            assertEquals(Messages.PRINT_ADD_FOOD_SYNTAX, e.getMessage());","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"nvbinh15":1,"ngnigel99":79}},{"path":"src/test/java/seedu/duke/journal/NoteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.journal;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"class NoteTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"    static Note parser \u003d new Note(\"Trial\");","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"    void getNoteNameTest() {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"        assertEquals(\"Trial\", parser.getNoteName());","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"SvethaMahadevan":14}},{"path":"src/test/java/seedu/duke/module/ModuleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.module;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"class ModuleTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"    void getCode_newModuleSpecifyingCode_specifiedCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"        String moduleCode \u003d \"CS2113T\";","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"        Module module \u003d new Module(moduleCode);","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(moduleCode, module.getCode());","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    void getName_newModuleSpecifyingCodeAndName_specifiedName() {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"        String moduleCode \u003d \"CS2113T\";","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"        String moduleName \u003d \"Software Engineering \u0026 Object-Oriented Programming\";","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"        Module module \u003d new Module(moduleCode, moduleName);","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(moduleName, module.getName());","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"    void getExpectedGrade_newModuleSpecifyingCodeNameAndGrade_specifiedGrade() {","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"        String moduleCode \u003d \"CS2113T\";","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"        String moduleName \u003d \"Software Engineering \u0026 Object-Oriented Programming\";","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"        String expectedGrade \u003d \"A-\";","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"        Module module \u003d new Module(moduleCode, moduleName, expectedGrade);","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(expectedGrade, module.getExpectedGrade());","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"    void setCode_newModuleChangeToNewCode_newCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"        String moduleCode \u003d \"CS2113T\";","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"        Module module \u003d new Module(moduleCode);","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"        String newModuleCode \u003d \"CS2113\";","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"        module.setCode(newModuleCode);","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(newModuleCode, module.getCode());","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"    void setName_newModuleChangeToNewName_newName() {","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"        String moduleCode \u003d \"CS2113T\";","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"        String moduleName \u003d \"Software Engineering \u0026 Object-Oriented Programming\";","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"        Module module \u003d new Module(moduleCode, moduleName);","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"        String newModuleName \u003d \"Software Engineering and Object-Oriented Programming\";","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"        module.setName(newModuleName);","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(newModuleName, module.getName());","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"    void setExpectedGrade_newModuleChangeToNewGrade_newGrade() {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"        String moduleCode \u003d \"CS2113T\";","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"        String moduleName \u003d \"Software Engineering \u0026 Object-Oriented Programming\";","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"        String expectedGrade \u003d \"A-\";","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"        Module module \u003d new Module(moduleCode, moduleName, expectedGrade);","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"        String newExpectedGrade \u003d \"A\";","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"        module.setExpectedGrade(newExpectedGrade);","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(newExpectedGrade, module.getExpectedGrade());","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"    void testToString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"nvbinh15"},"content":"        String moduleCode \u003d \"CS2113T\";","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"nvbinh15"},"content":"        String moduleName \u003d \"Software Engineering \u0026 Object-Oriented Programming\";","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"nvbinh15"},"content":"        String expectedGrade \u003d \"A\";","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"nvbinh15"},"content":"        String moduleStringRepresentation \u003d moduleCode + \" | \" + moduleName + \" | Expected grade: \" + expectedGrade;","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"nvbinh15"},"content":"        Module module \u003d new Module(moduleCode, moduleName, expectedGrade);","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(moduleStringRepresentation, module.toString());","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"nvbinh15":72}},{"path":"src/test/java/seedu/duke/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.IllegalDateTimeException;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"class ParserTest {","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"    static Parser parser \u003d new Parser();","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"    void formatDateTime_legalDateTime_dateTimeOfOtherFormat() throws IllegalDateTimeException {","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"        String inputDateTime \u003d \"01-10-2021 2359\";","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"        String expectedDateTime \u003d \"Oct 01 2021 23:59\";","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(expectedDateTime, parser.formatDateTime(inputDateTime));","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"    void formatDateTime_illegalDateTime_illegalDateTimeException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"        String illegalDateTime \u003d \"01/01/2021 2359\";","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"        assertThrows(IllegalDateTimeException.class, () -\u003e parser.formatDateTime(illegalDateTime));","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":28,"swatimahadevan":2}},{"path":"src/test/java/seedu/duke/parser/journal/ParserJournalTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.parser.journal;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.journal.Note;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"class ParserJournalTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"    static ParserJournal parser \u003d new  ParserJournal();","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"    static Storage storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"    static {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"SvethaMahadevan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"SvethaMahadevan"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"SvethaMahadevan"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"SvethaMahadevan"},"content":"    void parserNotebookCommand_noNoteNameGiven() {","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"SvethaMahadevan"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"SvethaMahadevan"},"content":"            Boolean isValidNoteName \u003d ParserJournal.isValidNotebookCommand(\"journal notebook n/\");","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"SvethaMahadevan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"SvethaMahadevan"},"content":"            assertEquals(false, false);","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"SvethaMahadevan"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"SvethaMahadevan"},"content":"    void parserNotebookCommand_noNoteArgumentsFound() {","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"SvethaMahadevan"},"content":"        Boolean isValidNoteArguments \u003d false;","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"SvethaMahadevan"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"SvethaMahadevan"},"content":"            isValidNoteArguments \u003d ParserJournal.isValidNotebookCommand(\"journal notebook\");","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"SvethaMahadevan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"SvethaMahadevan"},"content":"            assertEquals(false, isValidNoteArguments);","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"SvethaMahadevan"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"SvethaMahadevan"},"content":"    void parserNotebookCommand_duplicateNotebookName_throwDuplicateNoteException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cNote\u003e notes \u003d storage.collectionOfNotes.getNotesArrayList();","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"SvethaMahadevan"},"content":"        String noteName \u003d \" \";","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"SvethaMahadevan"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"SvethaMahadevan"},"content":"            noteName \u003d parser.checkDuplicateOrNot(\"journal notebook n/ notInStorageName \", notes);","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"SvethaMahadevan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"SvethaMahadevan"},"content":"            assertEquals(\"notInStorageName\", noteName);","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"SvethaMahadevan":54}},{"path":"src/test/java/seedu/duke/parser/schedule/ParserScheduleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.parser.schedule;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.IncorrectNumberOfArgumentsException;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"//@author swatim","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"class ParserScheduleTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"    static ParserSchedule parser \u003d new ParserSchedule();","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"    void formatYearMonth() {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"        assertEquals(YearMonth.of(2021, 10), parser.parseCalendarCommandForJunit(\"calendar 10-2021\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"    void parseTodoCommand_noTaskName_returnNullArguments() throws IncorrectNumberOfArgumentsException {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cString\u003e todoArguments \u003d null;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"            todoArguments \u003d parser.parseTodoArgumentsArray(\"calendar todo n/ \");","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"            assertEquals(null, todoArguments);","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"swatimahadevan":32}}]
