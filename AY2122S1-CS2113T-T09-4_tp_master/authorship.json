[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"    mainClassName \u003d \"seedu.duke.Click\"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"    archiveBaseName \u003d \"click\"","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nvbinh15":2,"ngnigel99":1,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Svetha Mahadevan | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Nguyen Van Binh | [Github](https://github.com/nvbinh15) | [Portfolio](docs/team/nvbinh15.md)","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"shoibloya"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Shoib Loya | [Github](https://github.com/) | [Portfolio](docs/team/shoibloya.md)","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Nigel Ng | [Github](https://github.com/ngnigel99) | [Portfolio](docs/team/ngnigel99.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Mahadevan Swati | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"SvethaMahadevan":1,"nvbinh15":1,"ngnigel99":1,"-":4,"shoibloya":1,"swatimahadevan":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"# Click - Developer Guide","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"## Table of Contents","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"1. [Introduction](#1-introduction)\\","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"1.1 [Background](#11-background)\\","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"1.2 [Purpose](#12-purpose)\\","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"1.3 [Scope](#13-scope)","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"2. [Setting Up](#2-setting-up)\\","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"2.1 [Prerequisite](#21-prerequisite)\\","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"2.2 [Setting up the Project in Your Computer](#22-setting-up-the-project-in-your-computer)","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"3. [Design](#3-design)","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"## 1. Introduction","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"### 1.1 Background","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"**_Welcome to Click_!** It\u0027s a Java-based  Command-Line Interface for Cramming and Knowledge (CLICK), providing a one-stop access point","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"for managing various parts of your Computing student life here at NUS. We aim to provide a simple interface ","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"that quantifies how you use your time and if you\u0027re taking care of your overall well-being. ","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"### 1.2 Purpose","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"This guide aims to give you a big-picture view of how our application operates. From the macro view on how Click runs its main program,","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"to the micro view on  how  we  translate sentence input to an object with attributes.","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"By sharing this information, we appreciate feedback on any ways we can improve the functionality or documentation in order to give you the best experience on Click.","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"### 1.3 Scope","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"This document describes the software architecture, software design requirement, implementation and testing for Click. This guide is mainly for software developers, designers, and software engineers that are going to work on Click.","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"## 2. Setting Up","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"### 2.1 Prerequisite","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"1. JDK `11`","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"2. IntelliJ IDEA","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"### 2.2 Setting up the Project in Your Computer","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"1. Fork [this repository](https://github.com/AY2122S1-CS2113T-T09-4/tp) and clone the fork to your computer.","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"2. Open IntelliJ IDEA (if you are not in the welcome screen, close the existing project by clicking `File` \u003e `Close Project`)","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"3. Set up the correct JDK version:\\","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"i. Click `File` \u003e `Project Structure`. Under `Project Setting`, choose `Project` \u003e `Project SDK`.\\","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"ii. If `JDK 11` is listed in the dropdown, select it. Otherwise, click `+ Add SDK` \u003e `JDK...` and select the directory where you installed `JDK 11`.\\","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"iii. Click `OK`.","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"4. Click `Import Project`.","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"5. Locate the `buid.gradle` file in the repository you have cloned and select it. Click `OK`.","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"6. Click `OK` to accept the default setting.","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"7. Verify the setup:\\","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"i. Go to `src/main/java/seedu.duke.Click`, run `Click.main()` and trying a few commands.\\","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"ii. Go to `src/test/java/seedu.duke` and run `Tests in seedu.duke` to ensure they all pass.","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"## 3. Design","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"This section is designed to demonstrate our software design description, and aims to provide you with an overall guidance to the architecture of Duke.","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"The following sequence diagram illustrates a command call by the user to Click. ","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"The steps are as follows:","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"1. When the user runs Click, a greeting would be printed to the user","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"1. User enters some input which may be a command","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"1. The command entered by the user would be parsed","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"    1. if command, go ahead and execute it respectively","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"    1. if not throw exception and ask for input again","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"1. Parser returns control to Click","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"![](./images/ClickRun.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"You should note that this is a general overview of the Click functionality, and the `:Command` entity simply represents a Command to be called by the Parser.","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"Another point for you to note is the difference between a Duke exception and other exception. Duke, as aptly referenced from our Individual project, has unique","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"exceptions that belong to our program. For instance, invalid dates extending beyond a  student\u0027s  matriculation,  or a  lack of entries when adding a journal. ","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"This is different from that of an \"other\" exception, which could be briefly categorized as a general exception. For instance, a `NumberFormatException` on the parsing","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"of a String to an Integer.","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"nvbinh15"},"content":"## 4. Implementation","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"This  section provides  the mechanisms of the many features of Click, where you can find documentation for the features as well","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"ngnigel99"},"content":"as code examples.","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":79,"author":{"gitId":"nvbinh15"},"content":"### 4.1. Module-related Features","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"nvbinh15"},"content":"#### 4.1.1 Adding a Module","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"nvbinh15"},"content":"This feature allows user to add a new Module.","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"nvbinh15"},"content":"If the creation is successful, a confirmation message on the newly created Module will be displayed to the user.","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"nvbinh15"},"content":"**Implementation**","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"nvbinh15"},"content":"The command for listing all modules is implemented by the `AddModuleCommand` class that extends `Command`.","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"nvbinh15"},"content":"When the user types `module add c/CS2113T n/Software Engineering e/A`, the following sequence of steps will then occur:","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"nvbinh15"},"content":"1. User executes `module add c/CS2113T n/Software Engineering e/A`\\","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"nvbinh15"},"content":"   i. `Click` receives user\u0027s input.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"nvbinh15"},"content":"   ii. `Parser` calls `parser.parseCommand(userInput)` to parse user\u0027s input into a `Command`.","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"nvbinh15"},"content":"2. Creating `AddModuleCommand` object.","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"nvbinh15"},"content":"3. Executing command.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"nvbinh15"},"content":"   i. `AddModuleCommand` find `indexOfCode`, `indexOfName`, and `indexOfExpectedGrade` in user\u0027s input.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"nvbinh15"},"content":"   ii. `AddModuleCommand` calls `getModule()` to create a new `module` based on user\u0027s input.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"nvbinh15"},"content":"   iii. `AddModuleCommand` calls `storage.StorageModule.readDataFromFile()` to read Module-related data `moduleList` from the storage file.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"nvbinh15"},"content":"   iv. `AddModuleCommand` calls `moduleList.addModule(module)` to add a new `module` to the list.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"nvbinh15"},"content":"   v. `AddModuleCommand` prompts the successful message to the user.","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"nvbinh15"},"content":"   vi. `AddModuleCommand` calls `storage.storageModule.saveDataToFile(moduleList)` to save the new data to the storage file.","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"nvbinh15"},"content":"#### 4.1.2 Removing a Module","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"nvbinh15"},"content":"This feature allows user to remove a Module created in the past.","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"nvbinh15"},"content":"If the deletion is successful, a confirmation message on the Module deletion will be displayed to the user.","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"nvbinh15"},"content":"**Implementation**","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"nvbinh15"},"content":"The command for listing all modules is implemented by the `DeleteModuleCommand` class that extends `Command`.","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"nvbinh15"},"content":"When the user types `module delete 2`, the following sequence of steps will then occur:","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"nvbinh15"},"content":"1. User executes `module delete 2`\\","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"nvbinh15"},"content":"   i. `Click` receives user\u0027s input.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"nvbinh15"},"content":"   ii. `Parser` calls `parser.parseCommand(userInput)` to parse user\u0027s input into a `Command`.","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"nvbinh15"},"content":"2. Creating `DeleteModuleCommand` object.","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"nvbinh15"},"content":"3. Executing command.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"nvbinh15"},"content":"   i. `DeleteModuleCommand` calls `storage.StorageModule.readDataFromFile()` to read Module-related data from the storage file.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"nvbinh15"},"content":"   ii. `DeleteModuleCommand` finds the `moduleIndex` based on user\u0027s input.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"nvbinh15"},"content":"   iii. `DeleteModuleCommand` checks if `moduleIndex` is valid or not. If not, throw an `IllegalModuleIndexException`.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"nvbinh15"},"content":"   iv. `DeleteModuleCommand` calls `moduleList.addModule(module)` to add a new `module` to the list.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"nvbinh15"},"content":"   v. `DeleteModuleCommand` prompts the successful message to the user.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"nvbinh15"},"content":"   vi. `DeleteModuleCommand` calls `moduleList.removeModuleByIndex(moduleIndex)` to delete the specified module.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"nvbinh15"},"content":"   vii. `DeleteModuleCommand` calls `storage.storageModule.saveDataToFile(moduleList)` to save the new data to the storage file.","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"nvbinh15"},"content":"#### 4.1.3 Listing All Modules","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"nvbinh15"},"content":"This feature allows user to view all Modules.","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"nvbinh15"},"content":"**Implementation**","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"nvbinh15"},"content":"The command for listing all modules is implemented by the `ListModuleCommand` class that extends `Command`.","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"nvbinh15"},"content":"When the user types `module list`, the following sequence of steps will then occur:","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"nvbinh15"},"content":"1. User executes `module list`\\","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"nvbinh15"},"content":"   i. `Click` receives user\u0027s input.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"nvbinh15"},"content":"   ii. `Parser` calls `parser.parseCommand(userInput)` to parse user\u0027s input into a `Command`.","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"nvbinh15"},"content":"2. Creating `ListModuleCommand` object.","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"nvbinh15"},"content":"3. Executing command.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"nvbinh15"},"content":"   i. `ListModuleCommand` calls `storage.StorageModule.readDataFromFile()` to read Module-related data from the storage file.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"nvbinh15"},"content":"   ii. `ListModuleCommand` check if there is any Modules in the list. If not, prints the message of having no Modules then return.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"nvbinh15"},"content":"   iii. `ListModuleCommand` prompts the message to list the Modules to the user and prints out the Modules line by line.","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"nvbinh15"},"content":"The sequence diagram below summarizes how listing modules work:","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"nvbinh15"},"content":"![](images/module/ListModule.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"ngnigel99"},"content":"### 4.2 Zoom related features","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"shoibloya"},"content":"#### 4.2.1 Showing all available zoom links","lastModifiedDate":"2021-10-22"},{"lineNumber":158,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":159,"author":{"gitId":"shoibloya"},"content":"This command is implemented by the `ShowZoomLinks` class. The basic functionality of this command is to access the data stored on the local drive to display the relevant zoom links along with the module codes.","lastModifiedDate":"2021-10-22"},{"lineNumber":160,"author":{"gitId":"shoibloya"},"content":"The `ShowZoomLinks` class extends `Command`.","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"shoibloya"},"content":"Syntax: `zoom list`","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"shoibloya"},"content":"#### 4.2.2 Adding a new zoom link","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"shoibloya"},"content":"This command is implemented by the `AddZoomCommand` class. The basic functionality of this command is to write a new zoom link to a local storage file and associate it to the relevant module code. The `AddZoomCommand`","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"shoibloya"},"content":"class extends `Command`.","lastModifiedDate":"2021-10-22"},{"lineNumber":168,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":169,"author":{"gitId":"shoibloya"},"content":"Syntax: `zoom add LINK MODULE_CODE`","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"shoibloya"},"content":"Example: `zoom add nus.sg/testlink ABC101`","lastModifiedDate":"2021-10-22"},{"lineNumber":171,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"ngnigel99"},"content":"### 4.3 Calendar-related Features","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"swatimahadevan"},"content":"#### 4.3.1 Displaying the calendar","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"nvbinh15"},"content":"**Implementation**","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"swatimahadevan"},"content":"The command for displaying the calendar for a specific month is implemented by the `DisplayCommand` class that extends `Command`.","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"swatimahadevan"},"content":"Given below is an example usage scenario and how the display calendar mechanism behaves at each step.","lastModifiedDate":"2021-10-20"},{"lineNumber":182,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":183,"author":{"gitId":"swatimahadevan"},"content":"1. The user enters the command `calendar display 10-2021`. This command is then sent for parsing in the `Click` class to `parseCommand` method in the `Parser` class. The `parseCommand` method first splits the entire command into an array `todoArguments` containing `calendar`, `display` and `10-2021`.","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":185,"author":{"gitId":"swatimahadevan"},"content":"2. The string `calendar` from the first index of todoArguments is checked against switch cases and is found to match `COMMAND_CALENDAR` which is the constant string \"calendar\". Upon finding this match, the string from the second index `todoArguments`is further split based on the delimiter of a single white space. The string `display` id checked against possible suffixes and `Command` object `DisplayCommand` is returned to the `Click` class.","lastModifiedDate":"2021-10-21"},{"lineNumber":186,"author":{"gitId":"swatimahadevan"},"content":"3. `Click` class then calls the method `execute` of `DisplayCommand` class. `DisplayCommand` extends `Command` class and has three steps in its `execute` method.\\","lastModifiedDate":"2021-10-21"},{"lineNumber":187,"author":{"gitId":"swatimahadevan"},"content":"         i. The `parseCalendarCommand` is first called, and it returns the year and month values after splitting `10-2021` into `10` and `2021`. This is put together into an YearMonth object `inputYearMonth`\\","lastModifiedDate":"2021-10-21"},{"lineNumber":188,"author":{"gitId":"swatimahadevan"},"content":"      \u003e  **NOTE:** The input is validated first and if the input date given is invalid, i.e., the month not between 1-12, then the calendar for the current month is displayed.","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"swatimahadevan"},"content":"   ","lastModifiedDate":"2021-10-21"},{"lineNumber":190,"author":{"gitId":"swatimahadevan"},"content":"      ii. The `inputYearMonth` is passed into `Ui` class method `printCalenderTitle` and this prints out the title of that month with the month name and the year. In this example, it will display as given in the figure below.","lastModifiedDate":"2021-10-21"},{"lineNumber":191,"author":{"gitId":"swatimahadevan"},"content":"     ![](./images/calendar/calendar_header.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":192,"author":{"gitId":"swatimahadevan"},"content":"      iii. Then, the method `arrangeTaskList` in `Schedule` class is called, and it takes in `storage.tasksList` (the TaskList object with all the currently stored tasks drawn from storage), `calendarTasks` (an ArrayList\u003cArrayList\u003cString\u003e\u003e object initialized with empty ArrayLists of type String), `month` (the month input by the user, which in this example is the integer `10`) and year `month` (the year input by the user, which in this example is the integer `2021`), and adds the tasks to the days in the empty String ArrayLists initialized before in `calendarTasks`.","lastModifiedDate":"2021-10-21"},{"lineNumber":193,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":194,"author":{"gitId":"swatimahadevan"},"content":"      iv.The method `arrangeLectureList` is also called and the process is same as in the previous step, except with `storage.lectureList` and `calendarLecture` replacing the first two input parameters of `arrangeTaskList`.","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"swatimahadevan"},"content":"      v.Then, the method `displayCalendar` in `Schedule` class is called, and it takes in `inputYearMonth` (the YearMonth object created from the month and year parsed from the user input), the `calendarTasks` (that was filled with the tasks for each day in the Step (iii)) and `calendarLecture` (that was filled with the lectures for each day in the Step (iv)). The method `displayCalendar` performs the necessary logic to print out the calendar.","lastModifiedDate":"2021-10-21"},{"lineNumber":196,"author":{"gitId":"swatimahadevan"},"content":"  \u003e  **NOTE:** Two tasks and two lectures are displayed for each day based on the order in which the user added them, and if there are more, they will show as and when the user deletes the tasks/lectures that are currently displayed.","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"swatimahadevan"},"content":"The below sequence diagram shows the execution process of the calendar display feature.","lastModifiedDate":"2021-10-20"},{"lineNumber":199,"author":{"gitId":"swatimahadevan"},"content":"![](./images/calendar/CalendarDisplaySequence.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":200,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":201,"author":{"gitId":"ngnigel99"},"content":"#### 4.3.2 Design Considerations","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"swatimahadevan"},"content":"The following design considerations were kept in mind while implementing the calendar display feature,","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"swatimahadevan"},"content":"- Aspect: Calendar visual display","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"swatimahadevan"},"content":"    - Alternative 1: Display two tasks and two lectures at any time.","lastModifiedDate":"2021-10-20"},{"lineNumber":205,"author":{"gitId":"swatimahadevan"},"content":"        - Pros : The calendar displayed would appear even and solution is easier to implement.","lastModifiedDate":"2021-10-20"},{"lineNumber":206,"author":{"gitId":"swatimahadevan"},"content":"        - Cons: All the tasks and lectures not displayed.","lastModifiedDate":"2021-10-20"},{"lineNumber":207,"author":{"gitId":"swatimahadevan"},"content":"    - Alternative 2: Set the size of the calendar to accommodate the largest number of tasks and lectures for a particular day. For example, if a day has 8 tasks and lectures and that is the highest amongst all the days, then the calendar would change to show all 8 for this day and the remaining days would have filled display up till how many tasks and lectures they have and the remaining spots empty.","lastModifiedDate":"2021-10-20"},{"lineNumber":208,"author":{"gitId":"swatimahadevan"},"content":"        - Pros : The calendar displayed would show all the tasks and lectures.","lastModifiedDate":"2021-10-20"},{"lineNumber":209,"author":{"gitId":"swatimahadevan"},"content":"        - Cons: Difficult to implement.","lastModifiedDate":"2021-10-20"},{"lineNumber":210,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":211,"author":{"gitId":"ngnigel99"},"content":"### 4.4 Journaling Feature","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":213,"author":{"gitId":"ngnigel99"},"content":"#### 4.4.1 Feature list","lastModifiedDate":"2021-10-21"},{"lineNumber":214,"author":{"gitId":"ngnigel99"},"content":"#### Add notebook feature","lastModifiedDate":"2021-10-21"},{"lineNumber":215,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":216,"author":{"gitId":"SvethaMahadevan"},"content":"The command for adding notebook is implemented by the `AddNoteCommand` class that extends `Command`.","lastModifiedDate":"2021-10-20"},{"lineNumber":217,"author":{"gitId":"SvethaMahadevan"},"content":"On adding notebook successfully, the message \"Great you have added the note: NOTEBOOK_NAME\" will be displayed.","lastModifiedDate":"2021-10-20"},{"lineNumber":218,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":219,"author":{"gitId":"ngnigel99"},"content":"#### Add entry feature","lastModifiedDate":"2021-10-21"},{"lineNumber":220,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":221,"author":{"gitId":"SvethaMahadevan"},"content":"The command for adding entry is implemented by the `AddEntryCommand` class that extends `Command`.","lastModifiedDate":"2021-10-20"},{"lineNumber":222,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":223,"author":{"gitId":"SvethaMahadevan"},"content":"On adding entry successfully, the message \"Great you have added the entry: ENTRY_NAME\" will be displayed.","lastModifiedDate":"2021-10-20"},{"lineNumber":224,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":225,"author":{"gitId":"ngnigel99"},"content":"#### List notebooks and entries","lastModifiedDate":"2021-10-21"},{"lineNumber":226,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":227,"author":{"gitId":"SvethaMahadevan"},"content":"The command for adding notebook is implemented by the `ListJournalCommand` class that extends `Command`.","lastModifiedDate":"2021-10-20"},{"lineNumber":228,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":229,"author":{"gitId":"SvethaMahadevan"},"content":"A list of notebooks along with their entries will be displayed.","lastModifiedDate":"2021-10-20"},{"lineNumber":230,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":231,"author":{"gitId":"ngnigel99"},"content":"#### 4.4.2 Testing","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":233,"author":{"gitId":"SvethaMahadevan"},"content":"1. You can enter the command journal notebook n/ \u003cNOTEBOOK_NAME\u003e to add a notebook.","lastModifiedDate":"2021-10-20"},{"lineNumber":234,"author":{"gitId":"SvethaMahadevan"},"content":"   You are free to enter a notebook name of your choice and observe the output of this command.","lastModifiedDate":"2021-10-20"},{"lineNumber":235,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":236,"author":{"gitId":"SvethaMahadevan"},"content":"   `Test case: journal notebook n/ TRIAL","lastModifiedDate":"2021-10-21"},{"lineNumber":237,"author":{"gitId":"SvethaMahadevan"},"content":"   Expected: Great you have added the notebook: TRIAL`","lastModifiedDate":"2021-10-21"},{"lineNumber":238,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":239,"author":{"gitId":"SvethaMahadevan"},"content":"2.You can enter the command journal entry n/ \u003cENTRY_NAME\u003e to add an entry to a specific notebook.","lastModifiedDate":"2021-10-20"},{"lineNumber":240,"author":{"gitId":"SvethaMahadevan"},"content":"You are free to enter an entry name of your choice and observe the output of this command.","lastModifiedDate":"2021-10-20"},{"lineNumber":241,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":242,"author":{"gitId":"SvethaMahadevan"},"content":"    Test case: journal entry n/ TRIAL e/ TEST","lastModifiedDate":"2021-10-20"},{"lineNumber":243,"author":{"gitId":"SvethaMahadevan"},"content":"    Expected: Great you have added the entry: TEST","lastModifiedDate":"2021-10-20"},{"lineNumber":244,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":245,"author":{"gitId":"SvethaMahadevan"},"content":"3.You can enter the command journal list to view list of notebooks and their entries","lastModifiedDate":"2021-10-20"},{"lineNumber":246,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":247,"author":{"gitId":"SvethaMahadevan"},"content":"    Test case: journal list","lastModifiedDate":"2021-10-20"},{"lineNumber":248,"author":{"gitId":"SvethaMahadevan"},"content":"    Expected: The notebook TRIAL contains:","lastModifiedDate":"2021-10-20"},{"lineNumber":249,"author":{"gitId":"SvethaMahadevan"},"content":"              TEST","lastModifiedDate":"2021-10-20"},{"lineNumber":250,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":251,"author":{"gitId":"ngnigel99"},"content":"### 4.5 Food related features","lastModifiedDate":"2021-10-21"},{"lineNumber":252,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":253,"author":{"gitId":"ngnigel99"},"content":"This segment focuses on describing the implementation of food-related features,","lastModifiedDate":"2021-10-21"},{"lineNumber":254,"author":{"gitId":"ngnigel99"},"content":"the functionality of the commands as well as the design considerations taken.","lastModifiedDate":"2021-10-21"},{"lineNumber":255,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":256,"author":{"gitId":"ngnigel99"},"content":"#### 4.5.1 Architecture","lastModifiedDate":"2021-10-21"},{"lineNumber":257,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":258,"author":{"gitId":"ngnigel99"},"content":"##### Class Diagram of Food","lastModifiedDate":"2021-10-21"},{"lineNumber":259,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":260,"author":{"gitId":"ngnigel99"},"content":"Food-related commands operate on a list of food records, and a food storage object. The following diagram  illustrates","lastModifiedDate":"2021-10-21"},{"lineNumber":261,"author":{"gitId":"ngnigel99"},"content":"how the storage in a text file, and the current food list interact with each other.","lastModifiedDate":"2021-10-21"},{"lineNumber":262,"author":{"gitId":"ngnigel99"},"content":"Food storage object contains static methods to read and write data from said list.","lastModifiedDate":"2021-10-21"},{"lineNumber":263,"author":{"gitId":"ngnigel99"},"content":"The saving of data from the list to the storage file is elaborated further in the diagram below.","lastModifiedDate":"2021-10-21"},{"lineNumber":264,"author":{"gitId":"ngnigel99"},"content":"Further discussion on the design considerations of writing an abstract class are discussed in ","lastModifiedDate":"2021-10-21"},{"lineNumber":265,"author":{"gitId":"ngnigel99"},"content":"design considerations.","lastModifiedDate":"2021-10-21"},{"lineNumber":266,"author":{"gitId":"ngnigel99"},"content":"![](./images/food/foodClassDiagram.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":267,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":268,"author":{"gitId":"ngnigel99"},"content":"##### Sequence diagram when food is parsed","lastModifiedDate":"2021-10-21"},{"lineNumber":269,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":270,"author":{"gitId":"ngnigel99"},"content":"The following diagram displays the interactions between the classes when the user enters a command starting with","lastModifiedDate":"2021-10-21"},{"lineNumber":271,"author":{"gitId":"ngnigel99"},"content":"\"food\". You should take note of the interactions between the constructed command classes, and the current list it\u0027s","lastModifiedDate":"2021-10-21"},{"lineNumber":272,"author":{"gitId":"ngnigel99"},"content":"iterating over - `WhatIAteTodayList`, especially the updates shown after the  end of every  command. An update is ","lastModifiedDate":"2021-10-21"},{"lineNumber":273,"author":{"gitId":"ngnigel99"},"content":"defined as a manual overwrite over the text file saved in the user\u0027s hard disk. By convention, this text file is saved","lastModifiedDate":"2021-10-21"},{"lineNumber":274,"author":{"gitId":"ngnigel99"},"content":"in the directory `fooddata` , with the text file named aptly as `food.txt`. Current improvements in this functionality","lastModifiedDate":"2021-10-21"},{"lineNumber":275,"author":{"gitId":"ngnigel99"},"content":"would be to integrate the dates in `Calendar` with  the `food.txt` file, enabling the user to search what they ate on a","lastModifiedDate":"2021-10-21"},{"lineNumber":276,"author":{"gitId":"ngnigel99"},"content":"given day.","lastModifiedDate":"2021-10-21"},{"lineNumber":277,"author":{"gitId":"ngnigel99"},"content":"![](./images/food/food_architecture.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":278,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":279,"author":{"gitId":"ngnigel99"},"content":"#### 4.5.2 Feature List","lastModifiedDate":"2021-10-21"},{"lineNumber":280,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":281,"author":{"gitId":"ngnigel99"},"content":"\u003e **Note**: the methods invoked in the following commands are visually depicted in the sequence  diagram,","lastModifiedDate":"2021-10-21"},{"lineNumber":282,"author":{"gitId":"ngnigel99"},"content":"\u003e and thus only the general functionality  is discussed, as  well as the design considerations taken.","lastModifiedDate":"2021-10-21"},{"lineNumber":283,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":284,"author":{"gitId":"ngnigel99"},"content":"##### Adding Food Record","lastModifiedDate":"2021-10-21"},{"lineNumber":285,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":286,"author":{"gitId":"ngnigel99"},"content":"This feature allows user to add a new Food Record.","lastModifiedDate":"2021-10-21"},{"lineNumber":287,"author":{"gitId":"ngnigel99"},"content":"Tags `n/` `c/` stand for name and calorie count respectively.","lastModifiedDate":"2021-10-21"},{"lineNumber":288,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":289,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":290,"author":{"gitId":"ngnigel99"},"content":"**Code example**","lastModifiedDate":"2021-10-21"},{"lineNumber":291,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":292,"author":{"gitId":"ngnigel99"},"content":"`food add n/ Samurai Burger c/ 433`","lastModifiedDate":"2021-10-21"},{"lineNumber":293,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":294,"author":{"gitId":"ngnigel99"},"content":"##### Removing Food Record","lastModifiedDate":"2021-10-21"},{"lineNumber":295,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":296,"author":{"gitId":"ngnigel99"},"content":"This feature allows user to remove a Food Record created in the past.","lastModifiedDate":"2021-10-21"},{"lineNumber":297,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":298,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":299,"author":{"gitId":"ngnigel99"},"content":"**Code example**","lastModifiedDate":"2021-10-21"},{"lineNumber":300,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":301,"author":{"gitId":"ngnigel99"},"content":"`food delete [INDEX]`","lastModifiedDate":"2021-10-21"},{"lineNumber":302,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":303,"author":{"gitId":"ngnigel99"},"content":"##### Listing All Food Records","lastModifiedDate":"2021-10-21"},{"lineNumber":304,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":305,"author":{"gitId":"ngnigel99"},"content":"This feature allows user to view all Food Records.","lastModifiedDate":"2021-10-21"},{"lineNumber":306,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":307,"author":{"gitId":"ngnigel99"},"content":"This would be particularly useful for deleting items.","lastModifiedDate":"2021-10-21"},{"lineNumber":308,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":309,"author":{"gitId":"ngnigel99"},"content":"**Code example**","lastModifiedDate":"2021-10-21"},{"lineNumber":310,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":311,"author":{"gitId":"ngnigel99"},"content":"`food list`","lastModifiedDate":"2021-10-21"},{"lineNumber":312,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":313,"author":{"gitId":"ngnigel99"},"content":"##### Clearing food list","lastModifiedDate":"2021-10-21"},{"lineNumber":314,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":315,"author":{"gitId":"ngnigel99"},"content":"This feature allows users to clear their Food List.","lastModifiedDate":"2021-10-21"},{"lineNumber":316,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":317,"author":{"gitId":"ngnigel99"},"content":"**Code example**","lastModifiedDate":"2021-10-21"},{"lineNumber":318,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":319,"author":{"gitId":"ngnigel99"},"content":"`food clear`","lastModifiedDate":"2021-10-21"},{"lineNumber":320,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":321,"author":{"gitId":"ngnigel99"},"content":"##### Saving food list on successful command","lastModifiedDate":"2021-10-21"},{"lineNumber":322,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":323,"author":{"gitId":"ngnigel99"},"content":"The storage on hard-disk would be automatically","lastModifiedDate":"2021-10-21"},{"lineNumber":324,"author":{"gitId":"ngnigel99"},"content":"updated on every successful command entered by the user.","lastModifiedDate":"2021-10-21"},{"lineNumber":325,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":326,"author":{"gitId":"ngnigel99"},"content":"The interworking of this is described in detail in architecture.","lastModifiedDate":"2021-10-21"},{"lineNumber":327,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":328,"author":{"gitId":"ngnigel99"},"content":"#### 4.5.3 Food Design considerations","lastModifiedDate":"2021-10-21"},{"lineNumber":329,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":330,"author":{"gitId":"ngnigel99"},"content":"1. Why is there a need for calorie count?","lastModifiedDate":"2021-10-21"},{"lineNumber":331,"author":{"gitId":"ngnigel99"},"content":"   \u003e Health tracking is important for students, especially during the pandemic","lastModifiedDate":"2021-10-21"},{"lineNumber":332,"author":{"gitId":"ngnigel99"},"content":"   where we stress eat during online lessons.","lastModifiedDate":"2021-10-21"},{"lineNumber":333,"author":{"gitId":"ngnigel99"},"content":"1. Why is there a need to remove a record? We can\u0027t un-eat stuff","lastModifiedDate":"2021-10-21"},{"lineNumber":334,"author":{"gitId":"ngnigel99"},"content":"   \u003e Yes, however due to the limitations of the CLI interface there may be wrongly spelled","lastModifiedDate":"2021-10-21"},{"lineNumber":335,"author":{"gitId":"ngnigel99"},"content":"   entries that the user wouldn\u0027t want reflected in the list.","lastModifiedDate":"2021-10-21"},{"lineNumber":336,"author":{"gitId":"ngnigel99"},"content":"   Additionally, each food calorie count","lastModifiedDate":"2021-10-21"},{"lineNumber":337,"author":{"gitId":"ngnigel99"},"content":"   would be summed up to show the user the total calories consumed per day. If the calories","lastModifiedDate":"2021-10-21"},{"lineNumber":338,"author":{"gitId":"ngnigel99"},"content":"   entered are missing or have an additional 0 the sum would be overinflated ","lastModifiedDate":"2021-10-21"},{"lineNumber":339,"author":{"gitId":"ngnigel99"},"content":"1. Why implement  `ListOfRecords`?  It seems like a duplicate of `ArrayList\u003cT\u003e`","lastModifiedDate":"2021-10-21"},{"lineNumber":340,"author":{"gitId":"ngnigel99"},"content":"    \u003e The abstract class `ListOfRecords` may seem uneventful to you on the surface, however","lastModifiedDate":"2021-10-21"},{"lineNumber":341,"author":{"gitId":"ngnigel99"},"content":"    much consideration was taken in account in the making. For instance, in our current iteration","lastModifiedDate":"2021-10-21"},{"lineNumber":342,"author":{"gitId":"ngnigel99"},"content":"    we are introducing a way to integrate current food names and calorie count from existing","lastModifiedDate":"2021-10-21"},{"lineNumber":343,"author":{"gitId":"ngnigel99"},"content":"    food courts - e.g. TechnoEdge. Another class could inherit from `ListOfRecords` in order to parse in","lastModifiedDate":"2021-10-21"},{"lineNumber":344,"author":{"gitId":"ngnigel99"},"content":"    the correct data, hence the generic `T` type used in the list.","lastModifiedDate":"2021-10-21"},{"lineNumber":345,"author":{"gitId":"ngnigel99"},"content":"   ","lastModifiedDate":"2021-10-21"},{"lineNumber":346,"author":{"gitId":"ngnigel99"},"content":"### 4.6  Help command","lastModifiedDate":"2021-10-21"},{"lineNumber":347,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":348,"author":{"gitId":"ngnigel99"},"content":"This segment focuses on describing the not so-simple implementations behind what would otherwise","lastModifiedDate":"2021-10-21"},{"lineNumber":349,"author":{"gitId":"ngnigel99"},"content":"be considered a simple feature. An interesting point for you to note before exploring this portion ","lastModifiedDate":"2021-10-21"},{"lineNumber":350,"author":{"gitId":"ngnigel99"},"content":"would be the runtime-analysis of classes  done by the compiler, which reads the classes from the","lastModifiedDate":"2021-10-21"},{"lineNumber":351,"author":{"gitId":"ngnigel99"},"content":"source code and extracts the syntax. This is perhaps more functional than printing out a string","lastModifiedDate":"2021-10-21"},{"lineNumber":352,"author":{"gitId":"ngnigel99"},"content":"concatenating all command syntax.","lastModifiedDate":"2021-10-21"},{"lineNumber":353,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":354,"author":{"gitId":"ngnigel99"},"content":"#### 4.6.1 Architecture  of Help Command","lastModifiedDate":"2021-10-21"},{"lineNumber":355,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":356,"author":{"gitId":"ngnigel99"},"content":"The following diagram illustrates the  interactions between the functional class `ClassPackageReader` and","lastModifiedDate":"2021-10-21"},{"lineNumber":357,"author":{"gitId":"ngnigel99"},"content":"a particular command `ClickCommand`.","lastModifiedDate":"2021-10-21"},{"lineNumber":358,"author":{"gitId":"ngnigel99"},"content":"![](./images/help/helpCommandsClassDiagram.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":359,"author":{"gitId":"ngnigel99"},"content":"A class package reader  is implemented in order to:","lastModifiedDate":"2021-10-21"},{"lineNumber":360,"author":{"gitId":"ngnigel99"},"content":"1.  Read classes from a specified package","lastModifiedDate":"2021-10-21"},{"lineNumber":361,"author":{"gitId":"ngnigel99"},"content":"1.  Get names of all classes declared","lastModifiedDate":"2021-10-21"},{"lineNumber":362,"author":{"gitId":"ngnigel99"},"content":"1.  Filter out the classes that are not commands by inheritance","lastModifiedDate":"2021-10-21"},{"lineNumber":363,"author":{"gitId":"ngnigel99"},"content":"1.  Collect the commands in a set","lastModifiedDate":"2021-10-21"},{"lineNumber":364,"author":{"gitId":"ngnigel99"},"content":"1.  Iterate through all other listed packages and merge the sets","lastModifiedDate":"2021-10-21"},{"lineNumber":365,"author":{"gitId":"ngnigel99"},"content":"1.  Sort the filtered commands by alphabetical order for readability","lastModifiedDate":"2021-10-21"},{"lineNumber":366,"author":{"gitId":"ngnigel99"},"content":"1.  Read the specific syntax  of a command, and print it to the user","lastModifiedDate":"2021-10-21"},{"lineNumber":367,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":368,"author":{"gitId":"ngnigel99"},"content":"The abstract class `Command` has the following methods which ","lastModifiedDate":"2021-10-21"},{"lineNumber":369,"author":{"gitId":"ngnigel99"},"content":"implement steps 3 \u0026 4:","lastModifiedDate":"2021-10-21"},{"lineNumber":370,"author":{"gitId":"ngnigel99"},"content":"1. `public int compare(Command command1, Command command2){...}`","lastModifiedDate":"2021-10-21"},{"lineNumber":371,"author":{"gitId":"ngnigel99"},"content":"   \u003eThis comparator is used in the","lastModifiedDate":"2021-10-21"},{"lineNumber":372,"author":{"gitId":"ngnigel99"},"content":"`ClassPackageReader` to sort out the Commands by name, and is further elaborated in Logic.","lastModifiedDate":"2021-10-21"},{"lineNumber":373,"author":{"gitId":"ngnigel99"},"content":"1. `public void printClassNameAndSyntax()` ","lastModifiedDate":"2021-10-21"},{"lineNumber":374,"author":{"gitId":"ngnigel99"},"content":"    \u003e This function splits the name of the class by upper and lower case, and also to remove the","lastModifiedDate":"2021-10-21"},{"lineNumber":375,"author":{"gitId":"ngnigel99"},"content":"    \"command\" word at the end of the class. ","lastModifiedDate":"2021-10-21"},{"lineNumber":376,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":377,"author":{"gitId":"ngnigel99"},"content":"Next, we decided to run the `ClassPackageReader` through a package rather than iterate through all classes.","lastModifiedDate":"2021-10-21"},{"lineNumber":378,"author":{"gitId":"ngnigel99"},"content":"The former is better than the latter considering our implementation of the commands. For instance, all module-","lastModifiedDate":"2021-10-21"},{"lineNumber":379,"author":{"gitId":"ngnigel99"},"content":"related commands are grouped together in the `module` package, food-related commands in `food` etc. Thus, by","lastModifiedDate":"2021-10-21"},{"lineNumber":380,"author":{"gitId":"ngnigel99"},"content":"accessing the packages and filtering out the commands, the `ClassPackageReader` presents the name of the command","lastModifiedDate":"2021-10-21"},{"lineNumber":381,"author":{"gitId":"ngnigel99"},"content":"and the syntax in a readable format to the user. Do note that the packages have to be manually input by the developers.","lastModifiedDate":"2021-10-21"},{"lineNumber":382,"author":{"gitId":"ngnigel99"},"content":"However, the core functionality of Click is already partitioned nicely into the packages and hence we do not expect","lastModifiedDate":"2021-10-21"},{"lineNumber":383,"author":{"gitId":"ngnigel99"},"content":"many updates over the lifeline of this project.","lastModifiedDate":"2021-10-21"},{"lineNumber":384,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":385,"author":{"gitId":"ngnigel99"},"content":"#### 4.6.2 Logic of Help Command","lastModifiedDate":"2021-10-21"},{"lineNumber":386,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":387,"author":{"gitId":"ngnigel99"},"content":"After describing the [architecture](#461-architecture--of-help-command) of the help command, this portion will then describe the sequence of activation by","lastModifiedDate":"2021-10-21"},{"lineNumber":388,"author":{"gitId":"ngnigel99"},"content":"the user when parsing a `help` command. Take the following sequence diagram for reference.","lastModifiedDate":"2021-10-21"},{"lineNumber":389,"author":{"gitId":"ngnigel99"},"content":"![](./images/help/HelpCommand_execute-Help_Commands.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":390,"author":{"gitId":"ngnigel99"},"content":"The sequence diagram provides a high-level view on how the entities interact. You should notice the interaction between","lastModifiedDate":"2021-10-21"},{"lineNumber":391,"author":{"gitId":"ngnigel99"},"content":"`ClassPackageReader` and the `Command` entities, where the former gets the syntax of the latter by having a class as","lastModifiedDate":"2021-10-21"},{"lineNumber":392,"author":{"gitId":"ngnigel99"},"content":"input. This translates into a scalable option on addition of commands, where a syntax attribute is required to be present","lastModifiedDate":"2021-10-21"},{"lineNumber":393,"author":{"gitId":"ngnigel99"},"content":"in an empty constructor rather than concatenating additional syntax onto a constant String variable.","lastModifiedDate":"2021-10-21"},{"lineNumber":394,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":395,"author":{"gitId":"ngnigel99"},"content":"We reviewed the high-level functionality of `ClassPackageReader`, but it is also important for developers to take note of how","lastModifiedDate":"2021-10-21"},{"lineNumber":396,"author":{"gitId":"ngnigel99"},"content":"this class works on a lower-level. The function described here is `getCommandsAndPrintSyntax()`","lastModifiedDate":"2021-10-21"},{"lineNumber":397,"author":{"gitId":"ngnigel99"},"content":"1. Get classes from given packages, have each package converted into a Set of Classes.","lastModifiedDate":"2021-10-21"},{"lineNumber":398,"author":{"gitId":"ngnigel99"},"content":"1. Merge all the Sets together","lastModifiedDate":"2021-10-21"},{"lineNumber":399,"author":{"gitId":"ngnigel99"},"content":"1. Filter out the classes that are not Commands by inheritance, and add them into a List","lastModifiedDate":"2021-10-21"},{"lineNumber":400,"author":{"gitId":"ngnigel99"},"content":"1. Sort classes in List by name","lastModifiedDate":"2021-10-21"},{"lineNumber":401,"author":{"gitId":"ngnigel99"},"content":"1. For each command in List, (non-command classes are excluded in previous step)","lastModifiedDate":"2021-10-21"},{"lineNumber":402,"author":{"gitId":"ngnigel99"},"content":"    1. Get the declared method of abstract class Command `printClassNameAndSyntax()`","lastModifiedDate":"2021-10-21"},{"lineNumber":403,"author":{"gitId":"ngnigel99"},"content":"    1. Create default constructor of command and invoke the method given in (i)","lastModifiedDate":"2021-10-21"},{"lineNumber":404,"author":{"gitId":"ngnigel99"},"content":"    ","lastModifiedDate":"2021-10-21"},{"lineNumber":405,"author":{"gitId":"ngnigel99"},"content":"You should take note that by step 5, this help functionality relies heavily on a _default constructor_. ","lastModifiedDate":"2021-10-21"},{"lineNumber":406,"author":{"gitId":"ngnigel99"},"content":"\u003eThus, ","lastModifiedDate":"2021-10-21"},{"lineNumber":407,"author":{"gitId":"ngnigel99"},"content":"when writing new `Commands`, a default constructor that contains no parameters has to overwrite the `syntax` element","lastModifiedDate":"2021-10-21"},{"lineNumber":408,"author":{"gitId":"ngnigel99"},"content":"in abstract class `Command`. This ensures that the  method creation and invocation of method in step 5 would be ready","lastModifiedDate":"2021-10-21"},{"lineNumber":409,"author":{"gitId":"ngnigel99"},"content":"to execute.","lastModifiedDate":"2021-10-21"},{"lineNumber":410,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":411,"author":{"gitId":"ngnigel99"},"content":"#### 4.6.3 Design considerations of Help Command","lastModifiedDate":"2021-10-21"},{"lineNumber":412,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":413,"author":{"gitId":"ngnigel99"},"content":"##### Aspect:  How to implement Help feature    ","lastModifiedDate":"2021-10-21"},{"lineNumber":414,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":415,"author":{"gitId":"ngnigel99"},"content":"| \\ | Alternative 1 (current choice): Reads the name and syntax from the Classes | Alternative 2 (previous choice): Prints all available commands from a String, hard-coding every syntax and printing |","lastModifiedDate":"2021-10-21"},{"lineNumber":416,"author":{"gitId":"ngnigel99"},"content":"|---|---|---|","lastModifiedDate":"2021-10-21"},{"lineNumber":417,"author":{"gitId":"ngnigel99"},"content":"| Pros | 1. Dynamic, works well and sorts the names by order as long as the constructor is included for a command\u003cbr\u003e2. Very readable and testable due to sorted names\u003cbr\u003e3. OOP implementation with overloaded methods and branching on inheritance\u003cbr\u003e4. The user gets to easily view *ALL*  possible commands with a single word | 1. Easy to implement, just adding all available commands into a String and print it out\u003cbr\u003e2. Relatively fewer lines of code (LoC)\u003cbr\u003e3. User gets specific syntax with command entered |","lastModifiedDate":"2021-10-21"},{"lineNumber":418,"author":{"gitId":"ngnigel99"},"content":"| Cons | 1. Possible depreciated methods (`Class.getMethod`, `Class.getDeclaredConstructor`) which may be outdated, however,\u003cbr\u003e  are still functional\u003cbr\u003e2. Many more lines of code  (LoC) for implementation \u003cbr\u003e3. The user  is bombarded with *ALL* possible commands with a single word | 1. Hard-coding and sorting help commands manually is a chore\u003cbr\u003e2. User still has to remember the command in order to access the syntax |","lastModifiedDate":"2021-10-21"},{"lineNumber":419,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":420,"author":{"gitId":"ngnigel99"},"content":"While we submitted Alternative 2 in version 1 due to a lack of time and easier implementation. with more time given in Version 2.0 - we","lastModifiedDate":"2021-10-21"},{"lineNumber":421,"author":{"gitId":"ngnigel99"},"content":"decided  to switch over to Alternative 1 for the user to easily view all the syntax at a glance.","lastModifiedDate":"2021-10-21"},{"lineNumber":422,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":423,"author":{"gitId":"ngnigel99"},"content":"## 5. Testing","lastModifiedDate":"2021-10-21"},{"lineNumber":424,"author":{"gitId":"ngnigel99"},"content":"\u003e ***WORK IN PROGRESS***","lastModifiedDate":"2021-10-21"},{"lineNumber":425,"author":{"gitId":"ngnigel99"},"content":"\u003e To include code coverage, instructions for the reader to self test","lastModifiedDate":"2021-10-21"},{"lineNumber":426,"author":{"gitId":"nvbinh15"},"content":"## 6. Dev Ops","lastModifiedDate":"2021-10-19"},{"lineNumber":427,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":428,"author":{"gitId":"nvbinh15"},"content":"## Appendices","lastModifiedDate":"2021-10-19"},{"lineNumber":429,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":430,"author":{"gitId":"nvbinh15"},"content":"### Appendix A: Product scope","lastModifiedDate":"2021-10-19"},{"lineNumber":431,"author":{"gitId":"nvbinh15"},"content":"### Appendix B: Target user profile","lastModifiedDate":"2021-10-19"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":433,"author":{"gitId":"-"},"content":"{Describe the target user profile}","lastModifiedDate":"2020-05-24"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":435,"author":{"gitId":"nvbinh15"},"content":"### Appendix C: Value proposition","lastModifiedDate":"2021-10-19"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":437,"author":{"gitId":"-"},"content":"{Describe the value proposition: what problem does it solve?}","lastModifiedDate":"2020-05-24"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":439,"author":{"gitId":"nvbinh15"},"content":"### Appendix D: User Stories","lastModifiedDate":"2021-10-19"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":441,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":442,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":443,"author":{"gitId":"-"},"content":"|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2020-05-24"},{"lineNumber":444,"author":{"gitId":"-"},"content":"|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|","lastModifiedDate":"2020-05-24"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":446,"author":{"gitId":"nvbinh15"},"content":"### Appendix E: Non-Functional Requirements","lastModifiedDate":"2021-10-19"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":448,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":450,"author":{"gitId":"nvbinh15"},"content":"### Appendix F: Glossary","lastModifiedDate":"2021-10-19"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":452,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"SvethaMahadevan":34,"nvbinh15":135,"ngnigel99":207,"-":26,"shoibloya":16,"swatimahadevan":35}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"Welcome to your all-in-one desktop app for managing modules, tracking your food consumption, time scheduling, journaling, and CAP planning!","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"We know that you are a Computing student here at NUS 👨‍🎓 and may prefer typing ⌨ to swiping (Hello Vim! 😉)","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":", so we think that our command line interface for cramming \u0026 knowledge (Click) is a great fit for you!","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"nvbinh15":4,"-":7}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"# Click - User Guide","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"## Table of Contents","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"1. [Introduction](#1-introduction)","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"2. [Quick Start](#2-quick-start)","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"3. [Features](#3-features)\\","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"3.0 [Getting Help](#30-getting-help)\\","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"3.1 [Managing your modules](#31-managing-your-modules)\\","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"3.2 [Managing your zoom-links](#32-managing-your-zoom-links)\\","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"3.3 [Managing your calendar](#33-managing-your-calendar)\\","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"3.4 [Managing your journal](#34-managing-your-journal)\\","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"3.5 [Managing your food consumption](#35-managing-your-food-consumption)\\","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"3.6 [Exit](#36-exit)","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"4. [Command Summary](#4-command-summary)","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"5. [Frequently Asked Questions](#5-frequently-asked-questions)","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"6. [Bug reports](#6-bug-reports)","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"## 1. Introduction","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"Welcome to your all-in-one desktop app for managing modules, tracking your food consumption, time scheduling, journaling, and CAP planning!","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"We know that you are a Computing student here at NUS 👨‍🎓 and may prefer typing ⌨ to swiping (Hello Vim! 😉)","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":", so we think that our command line interface for cramming \u0026 knowledge (Click) is a great fit for you! ","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"This user guide serves to give you a brief overview of our features, as well as how to use them. ","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"\u003e**To use this guide effectively** ","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"\u003e ","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"\u003e We ordered the commands and features in ***sequential order*** for you,","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"\u003e so some commands cannot work independently without using other commands first.","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"\u003e If you want to follow our sequence, please enter every command given in the examples.","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"\u003e ","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"\u003e An example of dependent commands is : you cannot add a lecture or zoom link without adding the specified module.","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"\u003e ","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"\u003e Therefore, please follow the sequence from 3.0 on to 3.6! ","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"Jump in to the section [2. Quick Start](#2-quick-start) to get started!","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"## 2. Quick Start","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"2. Download the latest `click.jar` from [here](https://github.com/AY2122S1-CS2113T-T09-4/tp/releases/tag/v2.0).","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for Click.","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"4. In the home folder for Click, launch the `jar` file using the `java -jar click.jar` command on Command Prompt (for Windows) or Terminal (for Unix-based OS, such as macOS and Linux) to start the app. If the setup is correct, you should see the following:","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"```","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"\t _____ _  _     _","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"\t/  __ \\ |(_)   | |","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"\t| /  \\/ |_  ___| | __","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"\t| \\__/\\ | | (__|   \u003c","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"\t\\_____/_|_|\\___|_|\\_\\","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"\tHello! I\u0027m Click","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"\tWhat can I do for you?","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"```","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"5. Type the valid command into the terminal (or Command Prompt) and press \u003ckbd\u003ereturn\u003c/kbd\u003e (or \u003ckbd\u003eEnter\u003c/kbd\u003e) to run the command.","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"## 3. Features ","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"**Before you begin, please note the command format:**","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"- Words in `UPPER_CASE` are the parameters to be supplied by you.","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"  ","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"- The `INDEX` used in various commands must be a number specifying the order of an item in the list of items.","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"The smallest index would naturally be 1. (1-based)","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"  ","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"- The `{}` wrapping indicates an optional parameter.","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"nvbinh15"},"content":"- Parameters cannot be reordered.","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"nvbinh15"},"content":"  Example: If the command specifies `module add c/MODULE_CODE n/MODULE_NAME`, keying in `module add n/MODULE_NAME c/MODULE_CODE` will result in an invalid command.","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"\u003e **NOTE**: ","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"\u003e We left out some expected commands for readability as they will print out similar messages","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"nvbinh15"},"content":"### 3.0 Getting Help","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"ngnigel99"},"content":"Click helps you by showing all available commands and syntax","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"ngnigel99"},"content":"Format: `help`","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"ngnigel99"},"content":"You can refer  to [Command Summary](#4-command-summary) for a TLDR version.","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"ngnigel99"},"content":"### 3.1 Managing your modules","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":87,"author":{"gitId":"nvbinh15"},"content":"#### 3.1.1 Adding a Module: `module add`","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":89,"author":{"gitId":"nvbinh15"},"content":"Adds a new module to the list of modules so that you can keep track of the modules you are taking or planning to take.","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":91,"author":{"gitId":"nvbinh15"},"content":"Click supports 4 ways of adding Modules:","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"nvbinh15"},"content":"- Adding with module code, module name, modular credits and expected grade.","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"nvbinh15"},"content":"- Adding with module code, module name, and modular credits.","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"nvbinh15"},"content":"- Adding with module code and module name.","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"nvbinh15"},"content":"- Adding with module code only.","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"nvbinh15"},"content":"\u003e **Note:**","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"nvbinh15"},"content":"\u003e - The supported expected grades are: `A+`, `A`, `A-`, `B+`, `B`, `B-`, `C+`, `C`, `D+`, `D`, `F`, `CS`, `CU`, `NA`. Specifying the expected grade other than the supported grades will cause an error.","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"nvbinh15"},"content":"\u003e - The default values of module name, modular credits, and expected grades are `None`, `4`, and `NA`, respectively.","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"nvbinh15"},"content":"\u003e - The modular credit must be a positive integer.","lastModifiedDate":"2021-11-02"},{"lineNumber":101,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":102,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"nvbinh15"},"content":"**Adding with module code, module name, modular credits, and expected grade**","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"nvbinh15"},"content":"Format: `module add c/MODULE_CODE n/MODULE_NAME mc/MODULAR_CREDITS e/EXPECTED_GRADE`","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"nvbinh15"},"content":"Example: `module add c/CS2113T n/Software Engineering mc/4 e/A`","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"nvbinh15"},"content":"Expected outcome:","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"nvbinh15"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"nvbinh15"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"nvbinh15"},"content":"\tI have added this module:","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"nvbinh15"},"content":"\tCS2113T | Software Engineering | MC: 4 | Expected grade: A","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"nvbinh15"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"nvbinh15"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"nvbinh15"},"content":"**Adding with module code, module name, and modular credits**","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"nvbinh15"},"content":"Format: `module add c/MODULE_CODE n/MODULE_NAME mc/MODULAR_CREDITS`","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"nvbinh15"},"content":"Example: `module add c/CS1231 n/Discrete Structure mc/4`","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"nvbinh15"},"content":"Expected outcome:","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"nvbinh15"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"nvbinh15"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"nvbinh15"},"content":"\tI have added this module:","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"nvbinh15"},"content":"\tCS1231 | Discrete Structure | MC: 4 | Expected grade: NA","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"nvbinh15"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"nvbinh15"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"nvbinh15"},"content":"**Adding with module code and module name**","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"nvbinh15"},"content":"Format: `module add c/MODULE_CODE n/MODULE_NAME`","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"nvbinh15"},"content":"Example: `module add c/CS1010 n/Programming Methodology`","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"nvbinh15"},"content":"Expected outcome:","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"nvbinh15"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"nvbinh15"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"nvbinh15"},"content":"\tI have added this module:","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"nvbinh15"},"content":"\tCS1010 | Programming Methodology | MC: 4 | Expected grade: NA","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"nvbinh15"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"nvbinh15"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"nvbinh15"},"content":"**Adding with module code only**","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"nvbinh15"},"content":"Format: `module add c/MODULE_CODE`","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"nvbinh15"},"content":"Example: `module add c/CG2028`","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"nvbinh15"},"content":"Expected outcome:","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"nvbinh15"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"nvbinh15"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"nvbinh15"},"content":"\tI have added this module:","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"nvbinh15"},"content":"\tCG2028 | None | MC: 4 | Expected grade: NA","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"nvbinh15"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"nvbinh15"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":163,"author":{"gitId":"nvbinh15"},"content":"#### 3.1.2 Listing Modules: `module list`","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":165,"author":{"gitId":"nvbinh15"},"content":"Lists all modules in Click with numbering according to the order they are added (1-based index) so that you can have an overview of your modules.","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":167,"author":{"gitId":"nvbinh15"},"content":"Format: `module list`","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"nvbinh15"},"content":"Expected outcome:","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"nvbinh15"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"nvbinh15"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"nvbinh15"},"content":"\tHere are the modules in your list:","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"nvbinh15"},"content":"\t1. CS2113T | Software Engineering | MC: 4 | Expected grade: A","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"nvbinh15"},"content":"\t2. CS1231 | Discrete Structure | MC: 4 | Expected grade: NA","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"nvbinh15"},"content":"\t3. CS1010 | Programming Methodology | MC: 4 | Expected grade: NA","lastModifiedDate":"2021-10-26"},{"lineNumber":177,"author":{"gitId":"nvbinh15"},"content":"\t4. CG2028 | None | MC: 4 | Expected grade: NA","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"nvbinh15"},"content":"    __________________________________________________","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"ngnigel99"},"content":"    ","lastModifiedDate":"2021-10-31"},{"lineNumber":180,"author":{"gitId":"nvbinh15"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"nvbinh15"},"content":"#### 3.1.3 Deleting a Module: `module delete`","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"nvbinh15"},"content":"Deletes the specified module from the list of modules so that you can get rid of the modules you do not want to take anymore.","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":186,"author":{"gitId":"ngnigel99"},"content":"Format: `module delete INDEX`","lastModifiedDate":"2021-10-21"},{"lineNumber":187,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":188,"author":{"gitId":"nvbinh15"},"content":"Example: `module delete 3`","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"nvbinh15"},"content":"Expected outcome:","lastModifiedDate":"2021-10-21"},{"lineNumber":191,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":192,"author":{"gitId":"nvbinh15"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":193,"author":{"gitId":"nvbinh15"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-26"},{"lineNumber":194,"author":{"gitId":"nvbinh15"},"content":"\tI have deleted this module:","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"nvbinh15"},"content":"\tCS1010 | Programming Methodology | MC: 4 | Expected grade: NA","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"nvbinh15"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-26"},{"lineNumber":197,"author":{"gitId":"nvbinh15"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":198,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":199,"author":{"gitId":"nvbinh15"},"content":"#### 3.1.4 Editing CAP Information","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":201,"author":{"gitId":"nvbinh15"},"content":"Edits information of your current Cumulative Average Point (CAP) and the number of modular credits you have taken so that Click can calculate your expected CAP.","lastModifiedDate":"2021-10-26"},{"lineNumber":202,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":203,"author":{"gitId":"nvbinh15"},"content":"Format: `cap edit`","lastModifiedDate":"2021-10-26"},{"lineNumber":204,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":205,"author":{"gitId":"nvbinh15"},"content":"Example:","lastModifiedDate":"2021-10-26"},{"lineNumber":206,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":207,"author":{"gitId":"nvbinh15"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":208,"author":{"gitId":"nvbinh15"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-26"},{"lineNumber":209,"author":{"gitId":"nvbinh15"},"content":"\tWhat is your current cumulative average point (CAP)?","lastModifiedDate":"2021-10-26"},{"lineNumber":210,"author":{"gitId":"nvbinh15"},"content":"4.5","lastModifiedDate":"2021-10-26"},{"lineNumber":211,"author":{"gitId":"nvbinh15"},"content":"\tHow many modular credits contributing to CAP you have taken?","lastModifiedDate":"2021-10-26"},{"lineNumber":212,"author":{"gitId":"nvbinh15"},"content":"40","lastModifiedDate":"2021-10-26"},{"lineNumber":213,"author":{"gitId":"nvbinh15"},"content":"\tThank you for your information. You can view your expected CAP by keying in cap expected","lastModifiedDate":"2021-10-26"},{"lineNumber":214,"author":{"gitId":"nvbinh15"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-26"},{"lineNumber":215,"author":{"gitId":"nvbinh15"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":216,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":217,"author":{"gitId":"ngnigel99"},"content":"\u003e**Note**:","lastModifiedDate":"2021-10-29"},{"lineNumber":218,"author":{"gitId":"nvbinh15"},"content":"\u003e * Your current CAP has to be in the range [0.0 - 5.0].","lastModifiedDate":"2021-10-29"},{"lineNumber":219,"author":{"gitId":"nvbinh15"},"content":"\u003e * The modular credits contributing to CAP you have taken has to be an integer.","lastModifiedDate":"2021-10-29"},{"lineNumber":220,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":221,"author":{"gitId":"nvbinh15"},"content":"#### 3.1.5 Getting the Expected CAP","lastModifiedDate":"2021-10-26"},{"lineNumber":222,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":223,"author":{"gitId":"nvbinh15"},"content":"Gets the expected CAP based on the provided information and the modules you are taking.","lastModifiedDate":"2021-10-26"},{"lineNumber":224,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":225,"author":{"gitId":"nvbinh15"},"content":"Format: `cap expected`","lastModifiedDate":"2021-10-26"},{"lineNumber":226,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":227,"author":{"gitId":"nvbinh15"},"content":"Expected outcome:","lastModifiedDate":"2021-10-26"},{"lineNumber":228,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":229,"author":{"gitId":"nvbinh15"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":230,"author":{"gitId":"nvbinh15"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-26"},{"lineNumber":231,"author":{"gitId":"nvbinh15"},"content":"\tYour current CAP is 4.5, and the total of MCs contributing to your CAP is 40","lastModifiedDate":"2021-10-26"},{"lineNumber":232,"author":{"gitId":"nvbinh15"},"content":"\tYour expected CAP based on the modules you are taking is: 4.55","lastModifiedDate":"2021-10-26"},{"lineNumber":233,"author":{"gitId":"nvbinh15"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-26"},{"lineNumber":234,"author":{"gitId":"nvbinh15"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":236,"author":{"gitId":"ngnigel99"},"content":"### 3.2 Managing your Zoom links","lastModifiedDate":"2021-10-21"},{"lineNumber":237,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":238,"author":{"gitId":"shoibloya"},"content":"#### 3.2.1 Adding a new zoom link: `zoom add`","lastModifiedDate":"2021-10-27"},{"lineNumber":239,"author":{"gitId":"shoibloya"},"content":"Adds a zoom link.","lastModifiedDate":"2021-10-27"},{"lineNumber":240,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":241,"author":{"gitId":"shoibloya"},"content":"Note: You cannot add a lecture to a module unless the module has been added previously.","lastModifiedDate":"2021-10-27"},{"lineNumber":242,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":243,"author":{"gitId":"shoibloya"},"content":"Format: `zoom add [MODULE_CODE] [ZOOM_LINK]`","lastModifiedDate":"2021-10-27"},{"lineNumber":244,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":245,"author":{"gitId":"shoibloya"},"content":"Example:","lastModifiedDate":"2021-10-27"},{"lineNumber":246,"author":{"gitId":"shoibloya"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":247,"author":{"gitId":"shoibloya"},"content":"zoom add CS2113T https://nus-sg.com","lastModifiedDate":"2021-10-27"},{"lineNumber":248,"author":{"gitId":"shoibloya"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":249,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":250,"author":{"gitId":"shoibloya"},"content":"Expected outcome:","lastModifiedDate":"2021-10-27"},{"lineNumber":251,"author":{"gitId":"shoibloya"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":252,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":253,"author":{"gitId":"ngnigel99"},"content":"        Zoom link updated successfully!","lastModifiedDate":"2021-10-29"},{"lineNumber":254,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":255,"author":{"gitId":"shoibloya"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":256,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":257,"author":{"gitId":"shoibloya"},"content":"#### 3.2.2 Updating a zoom link: `zoom add`","lastModifiedDate":"2021-10-27"},{"lineNumber":258,"author":{"gitId":"shoibloya"},"content":"Updates a zoom link.","lastModifiedDate":"2021-10-27"},{"lineNumber":259,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":260,"author":{"gitId":"shoibloya"},"content":"Note: You can edit the zoom link for a module only if it already exists.","lastModifiedDate":"2021-10-27"},{"lineNumber":261,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":262,"author":{"gitId":"shoibloya"},"content":"Format: `zoom add [MODULE_CODE] [ZOOM_LINK]`","lastModifiedDate":"2021-10-27"},{"lineNumber":263,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":264,"author":{"gitId":"shoibloya"},"content":"Example:","lastModifiedDate":"2021-10-27"},{"lineNumber":265,"author":{"gitId":"shoibloya"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":266,"author":{"gitId":"shoibloya"},"content":"zoom add CS2113T https://nus-sg.com/updatedLink","lastModifiedDate":"2021-10-27"},{"lineNumber":267,"author":{"gitId":"shoibloya"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":268,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":269,"author":{"gitId":"shoibloya"},"content":"Expected outcome:","lastModifiedDate":"2021-10-27"},{"lineNumber":270,"author":{"gitId":"shoibloya"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":271,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":272,"author":{"gitId":"shoibloya"},"content":"        Zoom link updated successfully!","lastModifiedDate":"2021-10-27"},{"lineNumber":273,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":274,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":275,"author":{"gitId":"shoibloya"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":276,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":277,"author":{"gitId":"shoibloya"},"content":"#### 3.2.3 List all zoom links: `zoom list`","lastModifiedDate":"2021-10-27"},{"lineNumber":278,"author":{"gitId":"shoibloya"},"content":"Lists all zoom links.","lastModifiedDate":"2021-10-27"},{"lineNumber":279,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":280,"author":{"gitId":"shoibloya"},"content":"Format: `zoom list`","lastModifiedDate":"2021-10-27"},{"lineNumber":281,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":282,"author":{"gitId":"shoibloya"},"content":"Example:","lastModifiedDate":"2021-10-27"},{"lineNumber":283,"author":{"gitId":"shoibloya"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":284,"author":{"gitId":"shoibloya"},"content":"zoom list","lastModifiedDate":"2021-10-27"},{"lineNumber":285,"author":{"gitId":"shoibloya"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":286,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":287,"author":{"gitId":"shoibloya"},"content":"Expected outcome:","lastModifiedDate":"2021-10-27"},{"lineNumber":288,"author":{"gitId":"shoibloya"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":289,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":290,"author":{"gitId":"shoibloya"},"content":"        Module: CS2113T","lastModifiedDate":"2021-10-27"},{"lineNumber":291,"author":{"gitId":"shoibloya"},"content":"        Zoom: https://nus-sg.com/updatedLink","lastModifiedDate":"2021-10-27"},{"lineNumber":292,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":293,"author":{"gitId":"shoibloya"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":294,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":295,"author":{"gitId":"shoibloya"},"content":"#### 3.2.4 Opens the zoom link on browser: `zoom open`","lastModifiedDate":"2021-10-27"},{"lineNumber":296,"author":{"gitId":"shoibloya"},"content":"Opens zoom link on browser.","lastModifiedDate":"2021-10-27"},{"lineNumber":297,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":298,"author":{"gitId":"shoibloya"},"content":"Format: `zoom open [MODULE_CODE]`","lastModifiedDate":"2021-10-27"},{"lineNumber":299,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":300,"author":{"gitId":"shoibloya"},"content":"Example:","lastModifiedDate":"2021-10-27"},{"lineNumber":301,"author":{"gitId":"shoibloya"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":302,"author":{"gitId":"shoibloya"},"content":"zoom open CS2113T","lastModifiedDate":"2021-10-27"},{"lineNumber":303,"author":{"gitId":"shoibloya"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":304,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":305,"author":{"gitId":"ngnigel99"},"content":"### 3.3 Managing your calendar","lastModifiedDate":"2021-10-21"},{"lineNumber":306,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":307,"author":{"gitId":"nvbinh15"},"content":"#### 3.3.1 Adding a lecture: `calendar lecture`","lastModifiedDate":"2021-10-26"},{"lineNumber":308,"author":{"gitId":"swatimahadevan"},"content":"Adds a lecture item.","lastModifiedDate":"2021-10-21"},{"lineNumber":309,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":310,"author":{"gitId":"ngnigel99"},"content":"Note: You cannot add a lecture to a module unless the module has been added previously.","lastModifiedDate":"2021-10-21"},{"lineNumber":311,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":312,"author":{"gitId":"swatimahadevan"},"content":"Format: `calendar lecture m/ MODULE_CODE s/ DD-MM-YYYY(START_DATE) e/ DD-MM-YYYY(END_DATE)`","lastModifiedDate":"2021-10-21"},{"lineNumber":313,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":314,"author":{"gitId":"swatimahadevan"},"content":"Example:","lastModifiedDate":"2021-10-21"},{"lineNumber":315,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":316,"author":{"gitId":"ngnigel99"},"content":"calendar lecture m/ CS1231 s/ 7-10-2021 e/ 31-10-2021","lastModifiedDate":"2021-10-31"},{"lineNumber":317,"author":{"gitId":"swatimahadevan"},"content":"calendar lecture m/ CS2113T s/ 7-10-2021 e/ 31-10-2021","lastModifiedDate":"2021-10-21"},{"lineNumber":318,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":319,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":320,"author":{"gitId":"swatimahadevan"},"content":"Expected outcome:","lastModifiedDate":"2021-10-21"},{"lineNumber":321,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":322,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":323,"author":{"gitId":"swatimahadevan"},"content":"        Added lecture!","lastModifiedDate":"2021-10-21"},{"lineNumber":324,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":325,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":326,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":327,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":328,"author":{"gitId":"SvethaMahadevan"},"content":"#### 3.3.2 Adding a todo task: `calendar todo`","lastModifiedDate":"2021-10-27"},{"lineNumber":329,"author":{"gitId":"swatimahadevan"},"content":"Adds a task item.","lastModifiedDate":"2021-10-21"},{"lineNumber":330,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":331,"author":{"gitId":"swatimahadevan"},"content":"Format: `calendar todo n/ TASK_NAME d/ DD-MM-YYYY`","lastModifiedDate":"2021-10-21"},{"lineNumber":332,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":333,"author":{"gitId":"swatimahadevan"},"content":"Example:","lastModifiedDate":"2021-10-21"},{"lineNumber":334,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":335,"author":{"gitId":"ngnigel99"},"content":"calendar todo n/ CS2113T Assignment d/ 14-10-2021","lastModifiedDate":"2021-10-31"},{"lineNumber":336,"author":{"gitId":"ngnigel99"},"content":"calendar todo n/ CS1231 Assignment d/ 03-10-2021","lastModifiedDate":"2021-10-31"},{"lineNumber":337,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":338,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":339,"author":{"gitId":"swatimahadevan"},"content":"Expected outcome:","lastModifiedDate":"2021-10-21"},{"lineNumber":340,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":341,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":342,"author":{"gitId":"swatimahadevan"},"content":"        Task has been added successfully!","lastModifiedDate":"2021-10-21"},{"lineNumber":343,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":344,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":345,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":346,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":347,"author":{"gitId":"swatimahadevan"},"content":"#### 3.3.3 Listing tasks: `calendar list task`","lastModifiedDate":"2021-10-27"},{"lineNumber":348,"author":{"gitId":"swatimahadevan"},"content":"Lists all the current task items.","lastModifiedDate":"2021-10-21"},{"lineNumber":349,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":350,"author":{"gitId":"swatimahadevan"},"content":"Format: `calendar list task`","lastModifiedDate":"2021-10-27"},{"lineNumber":351,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":352,"author":{"gitId":"swatimahadevan"},"content":"Example:","lastModifiedDate":"2021-10-21"},{"lineNumber":353,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":354,"author":{"gitId":"swatimahadevan"},"content":"calendar list task ","lastModifiedDate":"2021-10-27"},{"lineNumber":355,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":356,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":357,"author":{"gitId":"swatimahadevan"},"content":"Expected outcome:","lastModifiedDate":"2021-10-21"},{"lineNumber":358,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":359,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":360,"author":{"gitId":"swatimahadevan"},"content":"        Here\u0027s your task list:","lastModifiedDate":"2021-10-21"},{"lineNumber":361,"author":{"gitId":"ngnigel99"},"content":"        1. CS2113T Assignment (on: 14-10-2021)","lastModifiedDate":"2021-10-31"},{"lineNumber":362,"author":{"gitId":"ngnigel99"},"content":"        2. CS1231 Assignment (on: 03-10-2021)","lastModifiedDate":"2021-10-31"},{"lineNumber":363,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":364,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":365,"author":{"gitId":"SvethaMahadevan"},"content":"#### 3.3.4 Deleting a task: `calendar delete task`","lastModifiedDate":"2021-10-27"},{"lineNumber":366,"author":{"gitId":"swatimahadevan"},"content":"Deletes a task item based on the index.","lastModifiedDate":"2021-10-21"},{"lineNumber":367,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":368,"author":{"gitId":"swatimahadevan"},"content":"Format: `calendar delete task TASK_INDEX`","lastModifiedDate":"2021-10-27"},{"lineNumber":369,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":370,"author":{"gitId":"swatimahadevan"},"content":"Example:","lastModifiedDate":"2021-10-21"},{"lineNumber":371,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":372,"author":{"gitId":"swatimahadevan"},"content":"calendar delete task 1","lastModifiedDate":"2021-10-27"},{"lineNumber":373,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":374,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":375,"author":{"gitId":"swatimahadevan"},"content":"Expected outcome:","lastModifiedDate":"2021-10-21"},{"lineNumber":376,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":377,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":378,"author":{"gitId":"swatimahadevan"},"content":"        Task has been deleted!","lastModifiedDate":"2021-10-21"},{"lineNumber":379,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":380,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":381,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":382,"author":{"gitId":"nvbinh15"},"content":"#### 3.3.5 Editing a task: `calendar edit`","lastModifiedDate":"2021-10-26"},{"lineNumber":383,"author":{"gitId":"swatimahadevan"},"content":"Edits a task item based on the index.","lastModifiedDate":"2021-10-21"},{"lineNumber":384,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":385,"author":{"gitId":"swatimahadevan"},"content":"Format: `calendar edit TASK_INDEX`","lastModifiedDate":"2021-10-21"},{"lineNumber":386,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":387,"author":{"gitId":"swatimahadevan"},"content":"Example:","lastModifiedDate":"2021-10-21"},{"lineNumber":388,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":389,"author":{"gitId":"swatimahadevan"},"content":"calendar edit 1","lastModifiedDate":"2021-10-21"},{"lineNumber":390,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":391,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":392,"author":{"gitId":"swatimahadevan"},"content":"Expected outcome:","lastModifiedDate":"2021-10-21"},{"lineNumber":393,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":394,"author":{"gitId":"ngnigel99"},"content":"calendar edit 1","lastModifiedDate":"2021-10-29"},{"lineNumber":395,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":396,"author":{"gitId":"swatimahadevan"},"content":"        Enter the entire todo command with the desired description and date that you want to replace in place of the current task at index 1","lastModifiedDate":"2021-10-21"},{"lineNumber":397,"author":{"gitId":"ngnigel99"},"content":"calendar todo n/ changed task name d/ 22-12-2021","lastModifiedDate":"2021-10-29"},{"lineNumber":398,"author":{"gitId":"swatimahadevan"},"content":"        Edited Task!","lastModifiedDate":"2021-10-21"},{"lineNumber":399,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":400,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":401,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":402,"author":{"gitId":"nvbinh15"},"content":"#### 3.3.6 Displaying calendar: `calendar display`","lastModifiedDate":"2021-10-26"},{"lineNumber":403,"author":{"gitId":"swatimahadevan"},"content":"Displays a calendar based on the month.","lastModifiedDate":"2021-10-27"},{"lineNumber":404,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":405,"author":{"gitId":"swatimahadevan"},"content":"Note: If the calendar layout appears skewed, maximise terminal to full screen or zoom out.","lastModifiedDate":"2021-10-28"},{"lineNumber":406,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":407,"author":{"gitId":"swatimahadevan"},"content":"Format: `calendar display MM-YYY`","lastModifiedDate":"2021-10-21"},{"lineNumber":408,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":409,"author":{"gitId":"swatimahadevan"},"content":"Example:","lastModifiedDate":"2021-10-21"},{"lineNumber":410,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":411,"author":{"gitId":"swatimahadevan"},"content":"calendar display 10-2021","lastModifiedDate":"2021-10-21"},{"lineNumber":412,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":413,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":414,"author":{"gitId":"swatimahadevan"},"content":"Expected outcome:","lastModifiedDate":"2021-10-21"},{"lineNumber":415,"author":{"gitId":"swatimahadevan"},"content":"![](./images/calendar/calendar_full.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":416,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":417,"author":{"gitId":"swatimahadevan"},"content":"#### 3.3.7 Deleting a lecture: `calendar delete lec`","lastModifiedDate":"2021-10-27"},{"lineNumber":418,"author":{"gitId":"swatimahadevan"},"content":"Deletes a lecture item based on the index.","lastModifiedDate":"2021-10-27"},{"lineNumber":419,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":420,"author":{"gitId":"swatimahadevan"},"content":"Format: `calendar delete lec LECTURE_INDEX`","lastModifiedDate":"2021-10-27"},{"lineNumber":421,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":422,"author":{"gitId":"swatimahadevan"},"content":"Example:","lastModifiedDate":"2021-10-27"},{"lineNumber":423,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":424,"author":{"gitId":"swatimahadevan"},"content":"calendar delete lec 1","lastModifiedDate":"2021-10-27"},{"lineNumber":425,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":426,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":427,"author":{"gitId":"swatimahadevan"},"content":"Expected outcome:","lastModifiedDate":"2021-10-27"},{"lineNumber":428,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":429,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":430,"author":{"gitId":"swatimahadevan"},"content":"        Lecture has been deleted!","lastModifiedDate":"2021-10-27"},{"lineNumber":431,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":432,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":433,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":434,"author":{"gitId":"swatimahadevan"},"content":"#### 3.3.3 Listing lectures: `calendar list lec`","lastModifiedDate":"2021-10-27"},{"lineNumber":435,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":436,"author":{"gitId":"swatimahadevan"},"content":"Lists all the current task items.","lastModifiedDate":"2021-10-27"},{"lineNumber":437,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":438,"author":{"gitId":"swatimahadevan"},"content":"Format: `calendar list lec`","lastModifiedDate":"2021-10-27"},{"lineNumber":439,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":440,"author":{"gitId":"swatimahadevan"},"content":"Example:","lastModifiedDate":"2021-10-27"},{"lineNumber":441,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":442,"author":{"gitId":"swatimahadevan"},"content":"calendar list lec ","lastModifiedDate":"2021-10-27"},{"lineNumber":443,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":444,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":445,"author":{"gitId":"swatimahadevan"},"content":"Expected outcome:","lastModifiedDate":"2021-10-27"},{"lineNumber":446,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":447,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":448,"author":{"gitId":"swatimahadevan"},"content":"        Here is your list of lectures:","lastModifiedDate":"2021-10-27"},{"lineNumber":449,"author":{"gitId":"ngnigel99"},"content":"        ","lastModifiedDate":"2021-10-31"},{"lineNumber":450,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":451,"author":{"gitId":"swatimahadevan"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":452,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":453,"author":{"gitId":"ngnigel99"},"content":"### 3.4 Managing your journal","lastModifiedDate":"2021-10-21"},{"lineNumber":454,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":455,"author":{"gitId":"nvbinh15"},"content":"#### 3.4.1 Adding a notebook: `journal notebook`","lastModifiedDate":"2021-10-26"},{"lineNumber":456,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":457,"author":{"gitId":"SvethaMahadevan"},"content":"Adds a notebook with the desired name.","lastModifiedDate":"2021-10-21"},{"lineNumber":458,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":459,"author":{"gitId":"SvethaMahadevan"},"content":"Format: `journal notebook n/ NOTEBOOK_NAME`","lastModifiedDate":"2021-10-21"},{"lineNumber":460,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":461,"author":{"gitId":"SvethaMahadevan"},"content":"Example: `journal notebook n/ Today`","lastModifiedDate":"2021-10-21"},{"lineNumber":462,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":463,"author":{"gitId":"SvethaMahadevan"},"content":"Expected outcome:","lastModifiedDate":"2021-10-21"},{"lineNumber":464,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":465,"author":{"gitId":"SvethaMahadevan"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":466,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":467,"author":{"gitId":"ngnigel99"},"content":"        Great you have added the note: Today","lastModifiedDate":"2021-10-29"},{"lineNumber":468,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":469,"author":{"gitId":"SvethaMahadevan"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":470,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":471,"author":{"gitId":"nvbinh15"},"content":"#### 3.4.2 Adding an entry: `journal entry`","lastModifiedDate":"2021-10-26"},{"lineNumber":472,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":473,"author":{"gitId":"SvethaMahadevan"},"content":"Adds an entry with the desired name to a specific notebook","lastModifiedDate":"2021-10-21"},{"lineNumber":474,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":475,"author":{"gitId":"SvethaMahadevan"},"content":"Format: `journal entry n/ NOTEBOOK_NAME e/ ENTRY_NAME`","lastModifiedDate":"2021-10-21"},{"lineNumber":476,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":477,"author":{"gitId":"SvethaMahadevan"},"content":"Example: `journal entry n/ Today e/ Random Observation`","lastModifiedDate":"2021-10-21"},{"lineNumber":478,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":479,"author":{"gitId":"SvethaMahadevan"},"content":"Expected outcome:","lastModifiedDate":"2021-10-21"},{"lineNumber":480,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":481,"author":{"gitId":"SvethaMahadevan"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":482,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":483,"author":{"gitId":"SvethaMahadevan"},"content":"        Great you have added the entry: Random Observation","lastModifiedDate":"2021-10-21"},{"lineNumber":484,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":485,"author":{"gitId":"SvethaMahadevan"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":486,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":487,"author":{"gitId":"nvbinh15"},"content":"#### 3.4.3 Listing notebooks with entries: `journal list`","lastModifiedDate":"2021-10-26"},{"lineNumber":488,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":489,"author":{"gitId":"SvethaMahadevan"},"content":"Lists all notebooks with their entries.","lastModifiedDate":"2021-10-21"},{"lineNumber":490,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":491,"author":{"gitId":"SvethaMahadevan"},"content":"Format: `journal list`","lastModifiedDate":"2021-10-21"},{"lineNumber":492,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":493,"author":{"gitId":"SvethaMahadevan"},"content":"Example: `journal list`","lastModifiedDate":"2021-10-21"},{"lineNumber":494,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":495,"author":{"gitId":"SvethaMahadevan"},"content":"Expected outcome:","lastModifiedDate":"2021-10-21"},{"lineNumber":496,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":497,"author":{"gitId":"SvethaMahadevan"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":498,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":499,"author":{"gitId":"ngnigel99"},"content":"        1. The notebook Today(tag: none) contains:","lastModifiedDate":"2021-10-29"},{"lineNumber":500,"author":{"gitId":"SvethaMahadevan"},"content":"                1. Random Observation","lastModifiedDate":"2021-10-27"},{"lineNumber":501,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":502,"author":{"gitId":"SvethaMahadevan"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":503,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":504,"author":{"gitId":"SvethaMahadevan"},"content":"#### 3.4.4 Tagging a notebook","lastModifiedDate":"2021-10-28"},{"lineNumber":505,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":506,"author":{"gitId":"SvethaMahadevan"},"content":"Allows you to tag a notebook.","lastModifiedDate":"2021-10-28"},{"lineNumber":507,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":508,"author":{"gitId":"SvethaMahadevan"},"content":"Format: `journal tag n/ NOTE_INDEX t/ TAG_NAME`","lastModifiedDate":"2021-10-28"},{"lineNumber":509,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":510,"author":{"gitId":"SvethaMahadevan"},"content":"Example: `journal tag n/ 1 t/ important`","lastModifiedDate":"2021-10-28"},{"lineNumber":511,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":512,"author":{"gitId":"SvethaMahadevan"},"content":"Expected outcome:","lastModifiedDate":"2021-10-27"},{"lineNumber":513,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":514,"author":{"gitId":"SvethaMahadevan"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":515,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":516,"author":{"gitId":"SvethaMahadevan"},"content":"        Great you have tagged the notebook","lastModifiedDate":"2021-10-28"},{"lineNumber":517,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":518,"author":{"gitId":"SvethaMahadevan"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":519,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":520,"author":{"gitId":"SvethaMahadevan"},"content":"#### 3.4.5 Find a notebook by tag","lastModifiedDate":"2021-10-28"},{"lineNumber":521,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":522,"author":{"gitId":"SvethaMahadevan"},"content":"Allows you to find a notebook which has the tag.","lastModifiedDate":"2021-10-28"},{"lineNumber":523,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":524,"author":{"gitId":"SvethaMahadevan"},"content":"Format: `journal find TAG_NAME`","lastModifiedDate":"2021-10-28"},{"lineNumber":525,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":526,"author":{"gitId":"SvethaMahadevan"},"content":"Example: `journal find important`","lastModifiedDate":"2021-10-28"},{"lineNumber":527,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":528,"author":{"gitId":"SvethaMahadevan"},"content":"Expected outcome:","lastModifiedDate":"2021-10-27"},{"lineNumber":529,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":530,"author":{"gitId":"SvethaMahadevan"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":531,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":532,"author":{"gitId":"SvethaMahadevan"},"content":"        Notebooks with the tag important are:","lastModifiedDate":"2021-10-28"},{"lineNumber":533,"author":{"gitId":"SvethaMahadevan"},"content":"        Today","lastModifiedDate":"2021-10-28"},{"lineNumber":534,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":535,"author":{"gitId":"SvethaMahadevan"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":536,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":537,"author":{"gitId":"SvethaMahadevan"},"content":"#### 3.4.6 Deleting entry `journal delete_entry`","lastModifiedDate":"2021-10-28"},{"lineNumber":538,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":539,"author":{"gitId":"SvethaMahadevan"},"content":"Deletes the entry.","lastModifiedDate":"2021-10-28"},{"lineNumber":540,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":541,"author":{"gitId":"SvethaMahadevan"},"content":"Format: `journal delete_entry n/ NOTE_NAME e/ ENTRY_NAME`","lastModifiedDate":"2021-10-28"},{"lineNumber":542,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":543,"author":{"gitId":"SvethaMahadevan"},"content":"Example: `journal delete_entry n/ Today e/ Random Observation`","lastModifiedDate":"2021-10-28"},{"lineNumber":544,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":545,"author":{"gitId":"SvethaMahadevan"},"content":"Expected outcome:","lastModifiedDate":"2021-10-27"},{"lineNumber":546,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":547,"author":{"gitId":"SvethaMahadevan"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":548,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":549,"author":{"gitId":"SvethaMahadevan"},"content":"        Great you have deleted the entry","lastModifiedDate":"2021-10-28"},{"lineNumber":550,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":551,"author":{"gitId":"SvethaMahadevan"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":552,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":553,"author":{"gitId":"SvethaMahadevan"},"content":"#### 3.4.7 Deleting notebooks `journal delete_notebook`","lastModifiedDate":"2021-10-28"},{"lineNumber":554,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":555,"author":{"gitId":"SvethaMahadevan"},"content":"Deletes specific notebook.","lastModifiedDate":"2021-10-28"},{"lineNumber":556,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":557,"author":{"gitId":"SvethaMahadevan"},"content":"Format: `journal delete_notebook NOTE_INDEX`","lastModifiedDate":"2021-10-28"},{"lineNumber":558,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":559,"author":{"gitId":"SvethaMahadevan"},"content":"Example: `journal delete_notebook 1`","lastModifiedDate":"2021-10-28"},{"lineNumber":560,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":561,"author":{"gitId":"SvethaMahadevan"},"content":"Expected outcome:","lastModifiedDate":"2021-10-27"},{"lineNumber":562,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":563,"author":{"gitId":"SvethaMahadevan"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":564,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":565,"author":{"gitId":"SvethaMahadevan"},"content":"        Great you have deleted the notebook at : 1","lastModifiedDate":"2021-10-28"},{"lineNumber":566,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":567,"author":{"gitId":"SvethaMahadevan"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":568,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":569,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":570,"author":{"gitId":"ngnigel99"},"content":"### 3.5 Managing your food consumption","lastModifiedDate":"2021-10-21"},{"lineNumber":571,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":572,"author":{"gitId":"ngnigel99"},"content":"Sometimes you snack, maybe go for supper breaks now and then.","lastModifiedDate":"2021-10-27"},{"lineNumber":573,"author":{"gitId":"ngnigel99"},"content":"After all, you need to power the processor we all have - our brain!","lastModifiedDate":"2021-10-27"},{"lineNumber":574,"author":{"gitId":"ngnigel99"},"content":"Click provides you with the ability to track your food consumption to","lastModifiedDate":"2021-10-27"},{"lineNumber":575,"author":{"gitId":"ngnigel99"},"content":"match your dieting needs to consume the recommended amount of calories ","lastModifiedDate":"2021-10-27"},{"lineNumber":576,"author":{"gitId":"ngnigel99"},"content":"you need every day!","lastModifiedDate":"2021-10-27"},{"lineNumber":577,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":578,"author":{"gitId":"nvbinh15"},"content":"#### 3.5.1 Adding a food item: `food add`","lastModifiedDate":"2021-10-26"},{"lineNumber":579,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":580,"author":{"gitId":"ngnigel99"},"content":"Allows you to add a food item and calorie count","lastModifiedDate":"2021-10-27"},{"lineNumber":581,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":582,"author":{"gitId":"ngnigel99"},"content":"Format: `food add n/FOOD_NAME d/KCALORIE {d/ DATE}`","lastModifiedDate":"2021-10-31"},{"lineNumber":583,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":584,"author":{"gitId":"ngnigel99"},"content":"For instance, imagine you\u0027ve just had a nice meal at McDonald\u0027s after","lastModifiedDate":"2021-10-27"},{"lineNumber":585,"author":{"gitId":"ngnigel99"},"content":"a three-hour-long lecture. You feel guilty about having so much fast food.","lastModifiedDate":"2021-10-27"},{"lineNumber":586,"author":{"gitId":"ngnigel99"},"content":"However, how do you quantify your guilty-ness? Simply tell Click what you\u0027ve","lastModifiedDate":"2021-10-27"},{"lineNumber":587,"author":{"gitId":"ngnigel99"},"content":"eaten and how many calories are included, so you can see how far you should run","lastModifiedDate":"2021-10-27"},{"lineNumber":588,"author":{"gitId":"ngnigel99"},"content":"to burn them away!","lastModifiedDate":"2021-10-27"},{"lineNumber":589,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":590,"author":{"gitId":"ngnigel99"},"content":"\u003e**NOTE** : ","lastModifiedDate":"2021-10-29"},{"lineNumber":591,"author":{"gitId":"ngnigel99"},"content":"\u003e If you leave the date parameter empty, Click would just add in today\u0027s date for you, no worries!","lastModifiedDate":"2021-10-29"},{"lineNumber":592,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":593,"author":{"gitId":"ngnigel99"},"content":"Example: ","lastModifiedDate":"2021-10-21"},{"lineNumber":594,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":595,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":596,"author":{"gitId":"ngnigel99"},"content":"food add n/ Samurai Burger c/ 433 ","lastModifiedDate":"2021-10-21"},{"lineNumber":597,"author":{"gitId":"ngnigel99"},"content":"food add n/ Seaweed Shaker Fries Seasoning c/ 15 ","lastModifiedDate":"2021-10-21"},{"lineNumber":598,"author":{"gitId":"ngnigel99"},"content":"food add n/ Large Fries c/  461 ","lastModifiedDate":"2021-10-21"},{"lineNumber":599,"author":{"gitId":"ngnigel99"},"content":"food add n/ Caramel Frappé - Medium c/ 624 ","lastModifiedDate":"2021-10-21"},{"lineNumber":600,"author":{"gitId":"ngnigel99"},"content":"food add n/ A Thousand Tide Pods c/ 92 ","lastModifiedDate":"2021-10-21"},{"lineNumber":601,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":602,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":603,"author":{"gitId":"ngnigel99"},"content":"Expected outcome:","lastModifiedDate":"2021-10-21"},{"lineNumber":604,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":605,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":606,"author":{"gitId":"ngnigel99"},"content":"    __________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":607,"author":{"gitId":"ngnigel99"},"content":"\tNice.  I\u0027ve added Samurai Burger to the list, with 433 calories!","lastModifiedDate":"2021-10-21"},{"lineNumber":608,"author":{"gitId":"ngnigel99"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":609,"author":{"gitId":"ngnigel99"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":610,"author":{"gitId":"ngnigel99"},"content":"\tNice.  I\u0027ve added Seaweed Shaker Fries Seasoning to the list, with 15 calories!","lastModifiedDate":"2021-10-21"},{"lineNumber":611,"author":{"gitId":"ngnigel99"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":612,"author":{"gitId":"ngnigel99"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":613,"author":{"gitId":"ngnigel99"},"content":"\tNice.  I\u0027ve added Large Fries to the list, with 461 calories!","lastModifiedDate":"2021-10-21"},{"lineNumber":614,"author":{"gitId":"ngnigel99"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":615,"author":{"gitId":"ngnigel99"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":616,"author":{"gitId":"ngnigel99"},"content":"\tNice.  I\u0027ve added Caramel Frappe - Medium to the list, with 624 calories!","lastModifiedDate":"2021-10-29"},{"lineNumber":617,"author":{"gitId":"ngnigel99"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":618,"author":{"gitId":"ngnigel99"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":619,"author":{"gitId":"ngnigel99"},"content":"\tNice.  I\u0027ve added A Thousand Tide Pods to the list, with 92 calories!","lastModifiedDate":"2021-10-21"},{"lineNumber":620,"author":{"gitId":"ngnigel99"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":621,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":622,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":623,"author":{"gitId":"ngnigel99"},"content":"Example of adding with a date","lastModifiedDate":"2021-10-27"},{"lineNumber":624,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":625,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":626,"author":{"gitId":"ngnigel99"},"content":"food add n/ something i ate 2 weeks ago but forgot to record c/ 300 d/ 13-10-2021","lastModifiedDate":"2021-10-29"},{"lineNumber":627,"author":{"gitId":"ngnigel99"},"content":"        Nice, I see you consumed something i ate 2 weeks ago but forgot to record on 2021-10-13, and have recorded","lastModifiedDate":"2021-10-27"},{"lineNumber":628,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":629,"author":{"gitId":"ngnigel99"},"content":"        Nice.  I\u0027ve added something i ate 2 weeks ago but forgot to record to the list, with 300 calories!","lastModifiedDate":"2021-10-27"},{"lineNumber":630,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":631,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":632,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":633,"author":{"gitId":"ngnigel99"},"content":"#### 3.5.2a Listing food records: `food list`","lastModifiedDate":"2021-10-27"},{"lineNumber":634,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":635,"author":{"gitId":"ngnigel99"},"content":"Format : `food list`","lastModifiedDate":"2021-10-21"},{"lineNumber":636,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":637,"author":{"gitId":"ngnigel99"},"content":"What did you have for lunch on the 27th of October - forgot already? ","lastModifiedDate":"2021-10-27"},{"lineNumber":638,"author":{"gitId":"ngnigel99"},"content":"Not to worry. Simply tell Click to list the food items you\u0027ve recorded.","lastModifiedDate":"2021-10-27"},{"lineNumber":639,"author":{"gitId":"ngnigel99"},"content":"Additionally, the calories consumed are nicely added up for you.","lastModifiedDate":"2021-10-27"},{"lineNumber":640,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":641,"author":{"gitId":"ngnigel99"},"content":"\u003e **NOTE** :","lastModifiedDate":"2021-10-29"},{"lineNumber":642,"author":{"gitId":"ngnigel99"},"content":"\u003e The date displayed may *not be the same as the expected outcome*. It\u0027ll show you today\u0027s date instead as you didn\u0027t add the `d/` parameter previously!","lastModifiedDate":"2021-10-29"},{"lineNumber":643,"author":{"gitId":"ngnigel99"},"content":"\u003e ","lastModifiedDate":"2021-10-29"},{"lineNumber":644,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":645,"author":{"gitId":"ngnigel99"},"content":"Expected outcome:","lastModifiedDate":"2021-10-21"},{"lineNumber":646,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":647,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":648,"author":{"gitId":"ngnigel99"},"content":"food list","lastModifiedDate":"2021-10-29"},{"lineNumber":649,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":650,"author":{"gitId":"ngnigel99"},"content":"        1st,You consumed  Samurai Burger , which has a calorie count of : 433 on 2021-10-29!","lastModifiedDate":"2021-10-29"},{"lineNumber":651,"author":{"gitId":"ngnigel99"},"content":"        2nd,You consumed  Seaweed Shaker Fries Seasoning , which has a calorie count of : 15 on 2021-10-29!","lastModifiedDate":"2021-10-29"},{"lineNumber":652,"author":{"gitId":"ngnigel99"},"content":"        3rd,You consumed  Large Fries , which has a calorie count of : 461 on 2021-10-29!","lastModifiedDate":"2021-10-29"},{"lineNumber":653,"author":{"gitId":"ngnigel99"},"content":"        4th,You consumed  Caramel Frappe - Medium , which has a calorie count of : 624 on 2021-10-29!","lastModifiedDate":"2021-10-29"},{"lineNumber":654,"author":{"gitId":"ngnigel99"},"content":"        5th,You consumed  A Thousand Tide Pods , which has a calorie count of : 92 on 2021-10-29!","lastModifiedDate":"2021-10-29"},{"lineNumber":655,"author":{"gitId":"ngnigel99"},"content":"        6th,You consumed  something i ate 2 weeks ago but forgot to record , which has a calorie count of : 300 on 2021-10-13!","lastModifiedDate":"2021-10-29"},{"lineNumber":656,"author":{"gitId":"ngnigel99"},"content":"        Wow, that\u0027s a lot of food! Finished reading the list","lastModifiedDate":"2021-10-27"},{"lineNumber":657,"author":{"gitId":"ngnigel99"},"content":"        You consumed 1925 calories in total!","lastModifiedDate":"2021-10-29"},{"lineNumber":658,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":659,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":660,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":661,"author":{"gitId":"ngnigel99"},"content":"#### 3.5.2b Finding food records with a date:  `food find`","lastModifiedDate":"2021-10-27"},{"lineNumber":662,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":663,"author":{"gitId":"ngnigel99"},"content":"Format  : `food  find DD-MM-YYYY`","lastModifiedDate":"2021-10-27"},{"lineNumber":664,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":665,"author":{"gitId":"ngnigel99"},"content":"Want to go even further and see what you ate on a specific date?","lastModifiedDate":"2021-10-27"},{"lineNumber":666,"author":{"gitId":"ngnigel99"},"content":"Simply give Click the date to search for, and the list of food items","lastModifiedDate":"2021-10-27"},{"lineNumber":667,"author":{"gitId":"ngnigel99"},"content":"you\u0027ve recorded would be shown to you!","lastModifiedDate":"2021-10-27"},{"lineNumber":668,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":669,"author":{"gitId":"ngnigel99"},"content":"Expected outcome : ","lastModifiedDate":"2021-10-27"},{"lineNumber":670,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":671,"author":{"gitId":"ngnigel99"},"content":"Shows you a list of items you\u0027ve consumed on that particular day.","lastModifiedDate":"2021-10-27"},{"lineNumber":672,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":673,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":674,"author":{"gitId":"ngnigel99"},"content":"food find 13-10-2021","lastModifiedDate":"2021-10-29"},{"lineNumber":675,"author":{"gitId":"ngnigel99"},"content":"        Nice, I found the items you ate on Wednesday, 13 October 2021","lastModifiedDate":"2021-10-29"},{"lineNumber":676,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":677,"author":{"gitId":"ngnigel99"},"content":"        1st,You consumed  something i ate 2 weeks ago but forgot to record , which has a calorie count of : 300 on 2021-10-13!","lastModifiedDate":"2021-10-29"},{"lineNumber":678,"author":{"gitId":"ngnigel99"},"content":"        Wow, that\u0027s a lot of food! Finished reading the list","lastModifiedDate":"2021-10-27"},{"lineNumber":679,"author":{"gitId":"ngnigel99"},"content":"        You consumed 300 calories in total!","lastModifiedDate":"2021-10-29"},{"lineNumber":680,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":681,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":682,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":683,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":684,"author":{"gitId":"nvbinh15"},"content":"#### 3.5.3 Deleting food records: `food delete`","lastModifiedDate":"2021-10-26"},{"lineNumber":685,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":686,"author":{"gitId":"ngnigel99"},"content":"Format: `food delete INDEX`","lastModifiedDate":"2021-10-21"},{"lineNumber":687,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":688,"author":{"gitId":"ngnigel99"},"content":"Oops, you accidentally entered a wrong food item as you confused your food list with","lastModifiedDate":"2021-10-27"},{"lineNumber":689,"author":{"gitId":"ngnigel99"},"content":"your shopping list. ","lastModifiedDate":"2021-10-27"},{"lineNumber":690,"author":{"gitId":"ngnigel99"},"content":"Not to worry, simply delete that item by giving Click the index","lastModifiedDate":"2021-10-27"},{"lineNumber":691,"author":{"gitId":"ngnigel99"},"content":"of the item to delete!","lastModifiedDate":"2021-10-27"},{"lineNumber":692,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":693,"author":{"gitId":"ngnigel99"},"content":"Example: `food delete 5`","lastModifiedDate":"2021-10-27"},{"lineNumber":694,"author":{"gitId":"ngnigel99"},"content":"Expected outcome:","lastModifiedDate":"2021-10-21"},{"lineNumber":695,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":696,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":697,"author":{"gitId":"ngnigel99"},"content":"food delete 5","lastModifiedDate":"2021-10-29"},{"lineNumber":698,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":699,"author":{"gitId":"ngnigel99"},"content":"        Deleted food record  A Thousand Tide Pods at index: 5","lastModifiedDate":"2021-10-21"},{"lineNumber":700,"author":{"gitId":"ngnigel99"},"content":"        __________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":701,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":702,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":703,"author":{"gitId":"nvbinh15"},"content":"#### 3.5.4 Clearing food list: `food clear`","lastModifiedDate":"2021-10-26"},{"lineNumber":704,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":705,"author":{"gitId":"ngnigel99"},"content":"Just finished an all-you-can-eat buffet and feel too guilty?","lastModifiedDate":"2021-10-27"},{"lineNumber":706,"author":{"gitId":"ngnigel99"},"content":"No worries - simply clear your food list to start anew!","lastModifiedDate":"2021-10-27"},{"lineNumber":707,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":708,"author":{"gitId":"ngnigel99"},"content":"Format : `food clear`","lastModifiedDate":"2021-10-27"},{"lineNumber":709,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":710,"author":{"gitId":"ngnigel99"},"content":"Expected outcome:","lastModifiedDate":"2021-10-21"},{"lineNumber":711,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":712,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":713,"author":{"gitId":"ngnigel99"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":714,"author":{"gitId":"ngnigel99"},"content":"\tCleared food record list for today!","lastModifiedDate":"2021-10-21"},{"lineNumber":715,"author":{"gitId":"ngnigel99"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":716,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":717,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":718,"author":{"gitId":"ngnigel99"},"content":"Congrats, you\u0027ve cleared your list.","lastModifiedDate":"2021-10-27"},{"lineNumber":719,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":720,"author":{"gitId":"ngnigel99"},"content":"#### 3.5.5 Viewing food stalls at Techno edge `food view`","lastModifiedDate":"2021-10-27"},{"lineNumber":721,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":722,"author":{"gitId":"ngnigel99"},"content":"Format : `food view`","lastModifiedDate":"2021-10-27"},{"lineNumber":723,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":724,"author":{"gitId":"ngnigel99"},"content":"Want to quickly browse what stalls exist at Techno edge before the queue starts?","lastModifiedDate":"2021-10-27"},{"lineNumber":725,"author":{"gitId":"ngnigel99"},"content":"Simply use this command to see the list and take note of the index of the stalls!","lastModifiedDate":"2021-10-27"},{"lineNumber":726,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":727,"author":{"gitId":"ngnigel99"},"content":"Expected outcome:","lastModifiedDate":"2021-10-27"},{"lineNumber":728,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":729,"author":{"gitId":"ngnigel99"},"content":"Shows you the index of every stall at techno edge, and the corresponding stall name","lastModifiedDate":"2021-10-27"},{"lineNumber":730,"author":{"gitId":"ngnigel99"},"content":"so that you can easily add your items later.","lastModifiedDate":"2021-10-27"},{"lineNumber":731,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":732,"author":{"gitId":"ngnigel99"},"content":"#### 3.5.6 Viewing items sold by a particular stall `food view [STALL_INDEX]`","lastModifiedDate":"2021-10-27"},{"lineNumber":733,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":734,"author":{"gitId":"ngnigel99"},"content":"Format : `food view [STALL_INDEX]`","lastModifiedDate":"2021-10-27"},{"lineNumber":735,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":736,"author":{"gitId":"ngnigel99"},"content":"Expected outcome:","lastModifiedDate":"2021-10-27"},{"lineNumber":737,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":738,"author":{"gitId":"ngnigel99"},"content":"Shows you the menu of a particular stall when you give Click the store index, ","lastModifiedDate":"2021-10-27"},{"lineNumber":739,"author":{"gitId":"ngnigel99"},"content":"find the stall index using `food view`, then view the menu of the stall with","lastModifiedDate":"2021-10-27"},{"lineNumber":740,"author":{"gitId":"ngnigel99"},"content":"`food view [STALL_INDEX`. Do take note of the index of the food item you want","lastModifiedDate":"2021-10-27"},{"lineNumber":741,"author":{"gitId":"ngnigel99"},"content":"to add to your list.","lastModifiedDate":"2021-10-27"},{"lineNumber":742,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":743,"author":{"gitId":"ngnigel99"},"content":"#### 3.5.7 Adding items from a particular stall to your list `food radd`","lastModifiedDate":"2021-11-03"},{"lineNumber":744,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":745,"author":{"gitId":"ngnigel99"},"content":"Format : `food radd s/ [STORE_INDEX] i/ [ITEM_INDEX]`","lastModifiedDate":"2021-10-27"},{"lineNumber":746,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":747,"author":{"gitId":"ngnigel99"},"content":"Expected outcome:","lastModifiedDate":"2021-10-27"},{"lineNumber":748,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":749,"author":{"gitId":"ngnigel99"},"content":"Allows you to add a food item you consumed from a particular stall without typing","lastModifiedDate":"2021-10-27"},{"lineNumber":750,"author":{"gitId":"ngnigel99"},"content":"in the name of the item and the calorie count.","lastModifiedDate":"2021-10-27"},{"lineNumber":751,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":752,"author":{"gitId":"ngnigel99"},"content":"For example, if you had just consumed a chicken burger set (Item index 5) sold by","lastModifiedDate":"2021-10-27"},{"lineNumber":753,"author":{"gitId":"ngnigel99"},"content":"Hungry Burger (Store index 5), you should see the following:","lastModifiedDate":"2021-10-27"},{"lineNumber":754,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":755,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":756,"author":{"gitId":"ngnigel99"},"content":"food radd s/ 5 i/ 5","lastModifiedDate":"2021-10-27"},{"lineNumber":757,"author":{"gitId":"ngnigel99"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":758,"author":{"gitId":"ngnigel99"},"content":"\tNice, adding the record - \tChicken Burger Set  : 607 KCal","lastModifiedDate":"2021-10-27"},{"lineNumber":759,"author":{"gitId":"ngnigel99"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":760,"author":{"gitId":"ngnigel99"},"content":"\tNice.  I\u0027ve added Chicken Burger Set  to the list, with 607 calories!","lastModifiedDate":"2021-10-27"},{"lineNumber":761,"author":{"gitId":"ngnigel99"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":762,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":763,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":764,"author":{"gitId":"ngnigel99"},"content":"#### 3.5.8 Finding items with a calorie count \u003c\u003d a given amount `food clt`","lastModifiedDate":"2021-11-03"},{"lineNumber":765,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":766,"author":{"gitId":"ngnigel99"},"content":"Format : `food clt [CALORIES_COUNT]`","lastModifiedDate":"2021-11-03"},{"lineNumber":767,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":768,"author":{"gitId":"ngnigel99"},"content":"Expected outcome:","lastModifiedDate":"2021-11-03"},{"lineNumber":769,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":770,"author":{"gitId":"ngnigel99"},"content":"Allows you to view the food items from the reference food court that has an similar to, or lower calorie","lastModifiedDate":"2021-11-03"},{"lineNumber":771,"author":{"gitId":"ngnigel99"},"content":" count than the amount you gave Click!","lastModifiedDate":"2021-11-03"},{"lineNumber":772,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":773,"author":{"gitId":"ngnigel99"},"content":"Example : ","lastModifiedDate":"2021-11-03"},{"lineNumber":774,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":775,"author":{"gitId":"ngnigel99"},"content":"food clt 0","lastModifiedDate":"2021-11-03"},{"lineNumber":776,"author":{"gitId":"ngnigel99"},"content":"\tI\u0027ve found the following items with 0 calories!","lastModifiedDate":"2021-11-03"},{"lineNumber":777,"author":{"gitId":"ngnigel99"},"content":"\t__________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":778,"author":{"gitId":"ngnigel99"},"content":"\t1st,Coke No Sugar  : 0Kcal","lastModifiedDate":"2021-11-03"},{"lineNumber":779,"author":{"gitId":"ngnigel99"},"content":"\t2nd,Mineral Water  : 0Kcal","lastModifiedDate":"2021-11-03"},{"lineNumber":780,"author":{"gitId":"ngnigel99"},"content":"\tWow, that\u0027s a lot of food! Finished reading the list","lastModifiedDate":"2021-11-03"},{"lineNumber":781,"author":{"gitId":"ngnigel99"},"content":"\t__________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":782,"author":{"gitId":"ngnigel99"},"content":"\tdone printing!","lastModifiedDate":"2021-11-03"},{"lineNumber":783,"author":{"gitId":"ngnigel99"},"content":"\t__________________________________________________","lastModifiedDate":"2021-11-03"},{"lineNumber":784,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":785,"author":{"gitId":"nvbinh15"},"content":"### 3.6 Exit","lastModifiedDate":"2021-10-29"},{"lineNumber":786,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":787,"author":{"gitId":"nvbinh15"},"content":"Exits the program.","lastModifiedDate":"2021-10-29"},{"lineNumber":788,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":789,"author":{"gitId":"nvbinh15"},"content":"Format: `exit`","lastModifiedDate":"2021-10-29"},{"lineNumber":790,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":791,"author":{"gitId":"nvbinh15"},"content":"Expected outcome:","lastModifiedDate":"2021-10-29"},{"lineNumber":792,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":793,"author":{"gitId":"nvbinh15"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":794,"author":{"gitId":"nvbinh15"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":795,"author":{"gitId":"nvbinh15"},"content":"\tBye. Hope to see you again soon!","lastModifiedDate":"2021-10-29"},{"lineNumber":796,"author":{"gitId":"nvbinh15"},"content":"\t__________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":797,"author":{"gitId":"nvbinh15"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":798,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":799,"author":{"gitId":"nvbinh15"},"content":"## 4. Command Summary","lastModifiedDate":"2021-10-11"},{"lineNumber":800,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":801,"author":{"gitId":"nvbinh15"},"content":"**Action** | **Format, Examples**","lastModifiedDate":"2021-10-21"},{"lineNumber":802,"author":{"gitId":"nvbinh15"},"content":"|----------|---------------------|","lastModifiedDate":"2021-10-21"},{"lineNumber":803,"author":{"gitId":"ngnigel99"},"content":"**Add Food**|`food add n/ [FOOD_NAME] c/ [CALORIE] d/ {[DD-MM-YYYY(DATE_RECORDED)]}`","lastModifiedDate":"2021-10-29"},{"lineNumber":804,"author":{"gitId":"ngnigel99"},"content":"**Add Food From Reference**|`food radd s/ [STORE_INDEX] i/ [ITEM_INDEX]`","lastModifiedDate":"2021-10-28"},{"lineNumber":805,"author":{"gitId":"ngnigel99"},"content":"**Add Lecture**|`calendar lecture m/ [MODULE_CODE] s/ [DD-MM-YYYY(START_DATE)] e/ [DD-MM-YYYY(END_DATE)]`","lastModifiedDate":"2021-10-29"},{"lineNumber":806,"author":{"gitId":"ngnigel99"},"content":"**Add Module**|- `module add c/[MODULE_CODE] n/[MODULE_NAME] mc/[MODULAR_CREDITS] e/EXPECTED_GRADE`\u003cbr\u003e\u003cbr\u003e Example: `module add c/CS2113T n/Software Engineering mc/4 e/A`\u003cbr\u003e\u003cbr\u003e- `module add c/MODULE_CODE n/MODULE_NAME mc/MODULAR_CREDITS`\u003cbr\u003e\u003cbr\u003e Example: `module add c/CS2113T n/Software Engineering mc/4`\u003cbr\u003e\u003cbr\u003e- `module add c/MODULE_CODE n/MODULE_NAME` \u003cbr\u003e\u003cbr\u003e Example: `module add c/CS2113T n/Software Engineering` \u003cbr\u003e\u003cbr\u003e- `module add c/MODULE_CODE`\u003cbr\u003e\u003cbr\u003e Example: `module add c/CS2113T`","lastModifiedDate":"2021-10-29"},{"lineNumber":807,"author":{"gitId":"ngnigel99"},"content":"**Add Note**|`journal notebook n/ [NOTEBOOK_NAME]`","lastModifiedDate":"2021-10-29"},{"lineNumber":808,"author":{"gitId":"ngnigel99"},"content":"**Add Entry**|`journal entry n/ [NOTEBOOK_NAME] e/ [ENTRY_NAME]`","lastModifiedDate":"2021-10-31"},{"lineNumber":809,"author":{"gitId":"ngnigel99"},"content":"**Add Todo**|`calendar todo n/ [TASK_NAME] d/ [DD-MM-YYYY]`","lastModifiedDate":"2021-10-29"},{"lineNumber":810,"author":{"gitId":"ngnigel99"},"content":"**Add Zoom**|`zoom add [MODULE_CODE] [ZOOM_LINK]`","lastModifiedDate":"2021-10-21"},{"lineNumber":811,"author":{"gitId":"ngnigel99"},"content":"**Cap Info**|`module info`","lastModifiedDate":"2021-10-27"},{"lineNumber":812,"author":{"gitId":"ngnigel99"},"content":"**Clear Food**|`food clear`","lastModifiedDate":"2021-10-21"},{"lineNumber":813,"author":{"gitId":"ngnigel99"},"content":"**Delete Entry**|`journal delete_entry n/ [NOTE_NAME] e/ [ENTRY_NAME]`","lastModifiedDate":"2021-10-29"},{"lineNumber":814,"author":{"gitId":"ngnigel99"},"content":"**Delete Food**|`food delete INDEX`","lastModifiedDate":"2021-10-21"},{"lineNumber":815,"author":{"gitId":"ngnigel99"},"content":"**Delete Lecture**|`calendar delete lec [LECTURE_INDEX]`","lastModifiedDate":"2021-10-29"},{"lineNumber":816,"author":{"gitId":"nvbinh15"},"content":"**Delete Module**|`module delete INDEX`\u003cbr\u003e\u003cbr\u003e Example: `module delete 2`","lastModifiedDate":"2021-10-21"},{"lineNumber":817,"author":{"gitId":"ngnigel99"},"content":"**Delete Note**|`journal delete_notebook [NOTE_INDEX]`","lastModifiedDate":"2021-10-29"},{"lineNumber":818,"author":{"gitId":"ngnigel99"},"content":"**Delete Task**|`calendar delete task [TASK_INDEX]`","lastModifiedDate":"2021-10-29"},{"lineNumber":819,"author":{"gitId":"ngnigel99"},"content":"**Display**|`calendar display [MM-YYYY]`","lastModifiedDate":"2021-10-29"},{"lineNumber":820,"author":{"gitId":"nvbinh15"},"content":"**Edit CAP Information**|`cap edit`","lastModifiedDate":"2021-10-26"},{"lineNumber":821,"author":{"gitId":"ngnigel99"},"content":"**Edit Tasks**|`calendar edit [TASK_INDEX]`","lastModifiedDate":"2021-10-29"},{"lineNumber":822,"author":{"gitId":"ngnigel99"},"content":"**Find Food By Calorie Count**|`food clt [CALORIE_COUNT]`","lastModifiedDate":"2021-11-03"},{"lineNumber":823,"author":{"gitId":"ngnigel99"},"content":"**Find Food With Date**|`food find [DD-MM-YYYY]`","lastModifiedDate":"2021-10-27"},{"lineNumber":824,"author":{"gitId":"ngnigel99"},"content":"**Find Notebook by tag**|`journal find [TAG_NAME]`","lastModifiedDate":"2021-10-29"},{"lineNumber":825,"author":{"gitId":"nvbinh15"},"content":"**Get Expected CAP**|`cap expected`","lastModifiedDate":"2021-10-26"},{"lineNumber":826,"author":{"gitId":"ngnigel99"},"content":"**Help**|`help`","lastModifiedDate":"2021-10-21"},{"lineNumber":827,"author":{"gitId":"ngnigel99"},"content":"**List  Food Items**|`food list`","lastModifiedDate":"2021-10-21"},{"lineNumber":828,"author":{"gitId":"ngnigel99"},"content":"**List  Journal**|`journal list`","lastModifiedDate":"2021-10-21"},{"lineNumber":829,"author":{"gitId":"ngnigel99"},"content":"**List  Modules**|`module list`","lastModifiedDate":"2021-10-21"},{"lineNumber":830,"author":{"gitId":"SvethaMahadevan"},"content":"**List Tasks**|`calendar list task`","lastModifiedDate":"2021-10-27"},{"lineNumber":831,"author":{"gitId":"SvethaMahadevan"},"content":"**List Lectures**|`calendar list lec`","lastModifiedDate":"2021-10-27"},{"lineNumber":832,"author":{"gitId":"ngnigel99"},"content":"**List Zoom Links**|`zoom list`","lastModifiedDate":"2021-10-21"},{"lineNumber":833,"author":{"gitId":"ngnigel99"},"content":"**Open Zoom Link**|`zoom open [MODULE_CODE]`","lastModifiedDate":"2021-10-27"},{"lineNumber":834,"author":{"gitId":"ngnigel99"},"content":"**Tag Journal**|`journal tag n/ [NOTE_INDEX] t/ [TAG_NAME]`","lastModifiedDate":"2021-10-29"},{"lineNumber":835,"author":{"gitId":"ngnigel99"},"content":"**View Reference Food**|`food view, food view [STORE_INDEX], food view all`","lastModifiedDate":"2021-10-27"},{"lineNumber":836,"author":{"gitId":"nvbinh15"},"content":"**Exit**|`exit`","lastModifiedDate":"2021-10-21"},{"lineNumber":837,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":838,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":839,"author":{"gitId":"nvbinh15"},"content":"## 5. Frequently Asked Questions","lastModifiedDate":"2021-10-11"},{"lineNumber":840,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":841,"author":{"gitId":"ngnigel99"},"content":"We know you are a curious individual, so here","lastModifiedDate":"2021-10-21"},{"lineNumber":842,"author":{"gitId":"ngnigel99"},"content":"are the answers to some frequently asked questions about Click.","lastModifiedDate":"2021-10-21"},{"lineNumber":843,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":844,"author":{"gitId":"ngnigel99"},"content":"Can I use Click on different operating systems such as Windows and macOS?","lastModifiedDate":"2021-10-21"},{"lineNumber":845,"author":{"gitId":"ngnigel99"},"content":"\u003eYes. Click is compatible with Windows, macOS, and Linux as long as you have Java 11 or above installed in your machine.","lastModifiedDate":"2021-10-21"},{"lineNumber":846,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":847,"author":{"gitId":"ngnigel99"},"content":"What will happen to my data if Click crashes when I\u0027m using my laptop? My battery life is pretty bad.","lastModifiedDate":"2021-10-21"},{"lineNumber":848,"author":{"gitId":"ngnigel99"},"content":"\u003eData is saved automatically to `STORAGEFILE` whenever you change your tasks. Therefore, your data will be safely saved even though Click is crashed.","lastModifiedDate":"2021-10-21"},{"lineNumber":849,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":850,"author":{"gitId":"ngnigel99"},"content":"Can I exit Click without using the bye command? I recently learnt shortcuts  such as \u003ckbd\u003eCtrl-C\u003c/kbd\u003e and \u003ckbd\u003eAlt-F4\u003c/kbd\u003e and would rather","lastModifiedDate":"2021-10-21"},{"lineNumber":851,"author":{"gitId":"ngnigel99"},"content":"forcefully exit the app.","lastModifiedDate":"2021-10-21"},{"lineNumber":852,"author":{"gitId":"ngnigel99"},"content":"\u003e Yes, you can. As mentioned above, your data will be saved automatically if a change of the tasks occurs, so you can exit Click worry-free.","lastModifiedDate":"2021-10-21"},{"lineNumber":853,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":854,"author":{"gitId":"ngnigel99"},"content":"This app seems to replicate what I\u0027m currently  doing on paper, such as writing my tasks on a physical calendar,","lastModifiedDate":"2021-10-21"},{"lineNumber":855,"author":{"gitId":"ngnigel99"},"content":"and recording my calorie count on a journal. I\u0027d like to  know some  benefits of  this over paper.","lastModifiedDate":"2021-10-21"},{"lineNumber":856,"author":{"gitId":"ngnigel99"},"content":"\u003e  Sure, while we acknowledge your  love of pen and paper we\u0027d like to remind you the scalability of digital apps,","lastModifiedDate":"2021-10-21"},{"lineNumber":857,"author":{"gitId":"ngnigel99"},"content":"\u003e  preservation of data as well as  the efficiency of the CLI in typing rather than writing. ","lastModifiedDate":"2021-10-21"},{"lineNumber":858,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":859,"author":{"gitId":"nvbinh15"},"content":"## 6. Bug Reports","lastModifiedDate":"2021-10-29"},{"lineNumber":860,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":861,"author":{"gitId":"ngnigel99"},"content":"Found  a ***content error*** or just something which doesn\u0027t look right?","lastModifiedDate":"2021-10-21"},{"lineNumber":862,"author":{"gitId":"ngnigel99"},"content":"[Get in touch with our team on GitHub](https://github.com/AY2122S1-CS2113T-T09-4/tp/blob/master/docs/AboutUs.md) and let us know.","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"SvethaMahadevan":92,"nvbinh15":216,"ngnigel99":353,"-":30,"shoibloya":59,"swatimahadevan":112}},{"path":"docs/images/ClickRun.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"hide footbox","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"Actor User","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"User -\u003e \":Click\" : run","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"activate \":Click\"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"User -\u003e \":Click\" : input","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"\":Click\" -\u003e \":Ui\" : printGreeting","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"activate \":Ui\"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"\":Ui\" -\u003e \":Ui\" : printMessage","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"activate \":Ui\"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"\":Ui\" --\u003e \":Ui\"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"deactivate \":Ui\"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"\":Ui\" --\u003e \":Click\"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"deactivate \":Ui\"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"\":Click\" -\u003e \":Parser\" : parse command","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"activate \":Parser\"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"\":Parser\" -\u003e \":Parser\" : splitCommandAndArgs","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"alt command is valid","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    create \":Command\"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    \":Click\" -\u003e \":Command\"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    activate \":Command\"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    \":Click\" -\u003e \":Command\" : execute","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    \":Command\" --\u003e \":Click\"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    deactivate \":Command\"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    destroy \":Command\"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"else command is invalid","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    alt Duke exception","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"        \":Click\" -\u003e \":ExceptionHandler\" : handleDukeExceptions","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"        activate \":ExceptionHandler\"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"        \":ExceptionHandler\" --\u003e \":Click\"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"        deactivate \":ExceptionHandler\"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"    else Not Duke exception:","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"        \":Click\" -\u003e \":ExceptionHandler\" : handleOtherExceptions","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"        activate \":ExceptionHandler\"","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"        \":ExceptionHandler\" --\u003e \":Click\"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"        deactivate \":ExceptionHandler\"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"    end","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"end","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"return","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"ngnigel99":43}},{"path":"docs/images/calendar/CalendarDisplaySequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"@startuml","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"Actor User","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"User -\u003e \":Click\" : \"calendar display 10-2021\"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"participant \":Click\"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"\":Click\" -\u003e \":Parser\" : parseCommand()","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"participant \":Parser\"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"activate \":Parser\"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"create \":DisplayCommand\"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"\":Parser\" -\u003e \":DisplayCommand\" : new DisplayCommand()","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"activate \":DisplayCommand\"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"\":DisplayCommand\" -\u003e \":Schedule\" : initializeCalendarDayTasksList()","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"activate \":Schedule\"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"return","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"\":DisplayCommand\" -\u003e \":Schedule\" : initializeCalendarDayLectureList()","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"activate \":Schedule\"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"return","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"\":DisplayCommand\" -\u003e \":ParserSchedule\" : parseCalendarCommand()","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"activate \":ParserSchedule\"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"return","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"\":DisplayCommand\" --\u003e \":Parser\"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"deactivate \":DisplayCommand\"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"\":Parser\" --\u003e \":Click\"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"deactivate \":Parser\"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"\":Click\" -\u003e \":DisplayCommand\" : execute()","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"activate \":DisplayCommand\"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"\":DisplayCommand\" -\u003e \":Schedule\" : arrangeTaskList()","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"activate \":Schedule\"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"return","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"\":DisplayCommand\" -\u003e \":Schedule\" : arrangeLectureList()","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"activate \":Schedule\"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"return","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"\":DisplayCommand\" -\u003e \":Schedule\" : displayCalendar()","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"activate \":Schedule\"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"\":Schedule\" -\u003e \":Schedule\" : printEntireCalendar()","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"activate \":Schedule\"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"\":Schedule\" -\u003e \":Schedule\" : printCalendarDates()","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"activate \":Schedule\"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"return","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"\":Schedule\" -\u003e \":Schedule\" : printTaskLectureForWeek()","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"activate \":Schedule\"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"return","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"return","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"\":Schedule\" --\u003e \":DisplayCommand\"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"deactivate \":Schedule\"","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"destroy \":Schedule\"","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"\":DisplayCommand\" --\u003e \":Click\"","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"deactivate \":DisplayCommand\"","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"destroy \":DisplayCommand\"","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"participant \":ParserSchedule\"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"@enduml","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"swatimahadevan":50}},{"path":"docs/images/food/FoodClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"!include Style.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"class FoodRecord {","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"    - name : String","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"    - calories : Int","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"class WhatIAteList {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"    #addToList(recordToAdd : FoodRecord, isSilent boolean) : void","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    #printIndexWithSuffix(index : int) : void","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"class \"{abstract}\\nListOfRecords\u003cT\u003e\" {","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"#list:ArrayList\u003cT\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"#getList() : ArrayList\u003cT\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"#addToList(recordToAdd : T) : void","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"#printList() : void","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"#clearList() : void","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"class StorageFood {","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"- folderName : String","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"- fileName : String","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"- filePath : String","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"{static} +saveList(whatIAteList WhatIAteList) : void","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"{static} +load() : WhatIAteList","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"WhatIAteList -u StorageFood : \u003c reads and writes","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"WhatIAteList --u|\u003e \"{abstract}\\nListOfRecords\u003cT\u003e\"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"note right of WhatIAteList: Overrides T with FoodRecord","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"WhatIAteList --\u003e \"*\" FoodRecord","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"ngnigel99":35}},{"path":"docs/images/food/Parser_getFoodCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"!include Style.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"Actor User","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"User -\u003e \":Parser\" : \"food [suffix] [arguments]\"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"activate \":Parser\"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"\":Parser\" -\u003e \":Parser\" : Get specific command","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"activate \":Parser\"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"\":Parser\" --\u003e \":Parser\" : Suffix after food","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"deactivate \":Parser\"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"alt suffix \u003d \"add\"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    create \":AddFoodCommand\"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    \":Parser\" -\u003e \":AddFoodCommand\" : AddFoodCommand()","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    activate \":AddFoodCommand\"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    \":AddFoodCommand\" --\u003e \":Parser\" : input","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    \":Parser\" -\u003e \":Parser\" : Parse input","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    activate \":Parser\"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    \":Parser\" --\u003e \":AddFoodCommand\" : Food Record","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    deactivate \":Parser\"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    \":AddFoodCommand\" -\u003e \":StorageFood\" : Add Food Record","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    \":AddFoodCommand\" --\u003e \":Parser\" : Finish command","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    deactivate \":AddFoodCommand\"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    destroy \":AddFoodCommand\"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"else suffix \u003d \"delete\"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    create \":DeleteFoodCommand\"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    \":Parser\" -\u003e \":DeleteFoodCommand\" : DeleteFoodCommand()","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"    activate \":DeleteFoodCommand\"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    \":DeleteFoodCommand\" -\u003e \":Parser\" : Get Index","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    \":Parser\" --\u003e \":DeleteFoodCommand\" : Index","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    \":DeleteFoodCommand\" -\u003e \":StorageFood\" : Delete Food","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"    \":DeleteFoodCommand\" --\u003e \":Parser\" : Finish command","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"    deactivate \":DeleteFoodCommand\"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"    destroy \":DeleteFoodCommand\"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"else suffix \u003d \"clear\"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"    create \":ClearFoodCommand\"","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"    \":Parser\" -\u003e \":ClearFoodCommand\" : ClearFoodCommand()","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"    activate \":ClearFoodCommand\"","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"    \":ClearFoodCommand\" -\u003e \":StorageFood\" : Clear list","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"    \":ClearFoodCommand\" --\u003e \":Parser\" : Finish command","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"    deactivate \":ClearFoodCommand\"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"    destroy \":ClearFoodCommand\"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"else suffix \u003d \"list\"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"    create \":ListFoodCommand\"","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"    \":Parser\" -\u003e \":ListFoodCommand\" : ListFoodCommand()","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"    activate \":ListFoodCommand\"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"    \":ListFoodCommand\" -\u003e \":StorageFood\" : List food records","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"    \":ListFoodCommand\" --\u003e \":Parser\" : Finish Command","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"    deactivate \":ListFoodCommand\"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"    destroy \":ListFoodCommand\"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"else incorrect syntax","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"    \":Parser\"--\u003eUser : Throw Exception","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"    destroy \":Parser\"","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"end","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"ngnigel99":58}},{"path":"docs/images/food/Style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"header Nigel\u0027s additions","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"title Food Commands","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"hide footbox","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"ngnigel99":5}},{"path":"docs/images/help/HelpCommand_execute.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"!include Style.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"Actor User","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"participant \":Parser\"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"User -\u003e \":Parser\" : \"help\"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"activate \":Parser\"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"create \":HelpCommand\"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"\":Parser\" -\u003e \":HelpCommand\" : HelpCommand()","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"activate \":HelpCommand\"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"\":Parser\" -\u003e \":HelpCommand\" : execute()","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"deactivate \":Parser\"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"\":HelpCommand\" -\u003e \"\u003c\u003cstatic\u003e\u003e\\n:ClassPackageReader\" : getCommandsAndPrintSyntax()","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"\"\u003c\u003cstatic\u003e\u003e\\n:ClassPackageReader\" -\u003e \":Command\" : getSyntax()","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"\":Command\" --\u003e \"\u003c\u003cstatic\u003e\u003e\\n:ClassPackageReader\" : syntax","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"\"\u003c\u003cstatic\u003e\u003e\\n:ClassPackageReader\" --\u003e User : Prints help messages","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"destroy \":HelpCommand\"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"ngnigel99":18}},{"path":"docs/images/help/Style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"header Nigel\u0027s additions","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"title Help Commands","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"hide footbox","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"ngnigel99":4}},{"path":"docs/images/help/helpCommandsClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"!include Style.puml","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"abstract class Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"    + helpMessage : String","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"    + syntax : String","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"    + {abstract}execute()  : void","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"    + printClassNameAndSyntax() : void","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"    +  compare(command1 Command, command2 Command) : int","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"note bottom of Command : compare method is used for sorting commands by  name","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"package someFeature  {","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"class  ClickCommand {","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    + syntax  : some syntax unique  to  command","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    +","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"note right of someFeature : this describes the package  we  keep all related  classes in.","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"ClickCommand -up|\u003e Command","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"class ClassPackageReader {","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"- {static} PACKAGE_NAME : String","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"- {static} METHOD_NAME : String","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"+ {static} getClasses(packageName String)  : Set\u003cClass\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"+ {static} mergeSet(... Set\u003cT\u003e) : \u003cT\u003e Set\u003cT\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"+ {static} getClass(className String, packageName  String) : Class","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"+ {static} getCommmandsAndPrintSyntax() : void","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"- {static}  runSyntaxCommands(filteredCommands List\u003cClass\u003e) : void","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"- {static} filterClassesByCommand(allClasses Set\u003cClass\u003e) : List\u003cClass\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"- {static} sortCommandByName(filteredCommands List\u003cClass\u003e) : void","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"ClassPackageReader \"1\" -up- \"*\" ClickCommand  : reads from \u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"\u0027WhatIAteList -u StorageFood : \u003c reads and writes","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"\u0027WhatIAteList --u|\u003e \"{abstract}\\nListOfRecords\u003cT\u003e\"","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"\u0027note right of WhatIAteList: Overrides T with FoodRecord","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"\u0027WhatIAteList --\u003e \"*\" FoodRecord","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"@enduml","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"class StorageFood {","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"- folderName : String","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"- fileName : String","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"- filePath : String","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"{static} +saveList(whatIAteList WhatIAteList) : void","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"{static} +load() : WhatIAteList","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"ngnigel99":49}},{"path":"docs/images/module/ListModule.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"Actor User","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"User -\u003e \":Click\" : \"module list\"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"participant \":Click\"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"\":Click\" -\u003e \":Parser\" : parseCommand()","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"participant \":Parser\"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"activate \":Parser\"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"create \":ListModuleCommand\"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"\":Parser\" -\u003e \":ListModuleCommand\" : new ListModuleCommand()","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"activate \":ListModuleCommand\"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"return","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"deactivate \":ListModuleCommand\"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"\":Parser\" -\u003e \":Click\" : ListModuleCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"deactivate \":Parser\"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"\":Click\" -\u003e \":ListModuleCommand\" : execute()","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"activate \":ListModuleCommand\"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"\":ListModuleCommand\" -\u003e \":Storage\" : storageModule.readDataFromFile()","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"activate \":Storage\"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"return \"moduleList\"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"alt moduleList is empty","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"    \":ListModuleCommand\" -\u003e \":ListModuleCommand\" : print(MESSAGE_NO_MODULE)","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"else","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"    \":ListModuleCommand\" -\u003e \":ListModuleCommand\" : print(MESSAGE_LISTING_MODULES)","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"    loop module in moduleList","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"        \":ListModuleCommand\" -\u003e \":ListModuleCommand\" : print(module)","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"    end","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"end","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"\":ListModuleCommand\" --\u003e \":Click\"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"deactivate \":ListModuleCommand\"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"nvbinh15":33}},{"path":"docs/images/module/Module.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"class Module {","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"    - code : String","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"    - name : String","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"class ModuleList {","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"    getNumberOfModules() : int","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"    getModuleByIndex(index : int) : Module","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"    addModule(module : Module) : void","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"    removeModuleByIndex(index : int) : void","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"ModuleList --\u003e \"*\" Module","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"Module --\u003e \"1\" Grade","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"enum Grade {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"A_PLUS, A, A_MINUS","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"B_PLUS, B, B_MINUS","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"C_PLUS, C, D_PLUS","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"D, F, CS, CU, NA","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"nvbinh15":26}},{"path":"docs/team/DG_binh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"# Module-related Features","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"## Adding a Module","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"This feature allows user to add a new Module. ","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"If the creation is successful, a confirmation message on the newly created Module will be displayed to the user.","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"**Implementation**","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"The command for listing all modules is implemented by the `AddModuleCommand` class that extends `Command`.","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"When the user types `module add c/CS2113T n/Software Engineering e/A`, the following sequence of steps will then occur:","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"1. User executes `module add c/CS2113T n/Software Engineering e/A`\\","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"i. `Click` receives user\u0027s input.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"ii. `Parser` calls `parser.parseCommand(userInput)` to parse user\u0027s input into a `Command`.","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"2. Creating `AddModuleCommand` object.","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"3. Executing command.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"i. `AddModuleCommand` find `indexOfCode`, `indexOfName`, and `indexOfExpectedGrade` in user\u0027s input.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"ii. `AddModuleCommand` calls `getModule()` to create a new `module` based on user\u0027s input.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"iii. `AddModuleCommand` calls `storage.StorageModule.readDataFromFile()` to read Module-related data `moduleList` from the storage file.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"iv. `AddModuleCommand` calls `moduleList.addModule(module)` to add a new `module` to the list.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"v. `AddModuleCommand` prompts the successful message to the user.","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"vi. `AddModuleCommand` calls `storage.storageModule.saveDataToFile(moduleList)` to save the new data to the storage file.","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"## Removing a Module","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"This feature allows user to remove a Module created in the past.","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"If the deletion is successful, a confirmation message on the Module deletion will be displayed to the user.","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"**Implementation**","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"The command for listing all modules is implemented by the `DeleteModuleCommand` class that extends `Command`.","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"When the user types `module delete 2`, the following sequence of steps will then occur:","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"1. User executes `module delete 2`\\","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"   i. `Click` receives user\u0027s input.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"   ii. `Parser` calls `parser.parseCommand(userInput)` to parse user\u0027s input into a `Command`.","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"2. Creating `DeleteModuleCommand` object.","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"3. Executing command.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"i. `DeleteModuleCommand` calls `storage.StorageModule.readDataFromFile()` to read Module-related data from the storage file.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"ii. `DeleteModuleCommand` finds the `moduleIndex` based on user\u0027s input.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"iii. `DeleteModuleCommand` checks if `moduleIndex` is valid or not. If not, throw an `IllegalModuleIndexException`.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"iv. `DeleteModuleCommand` calls `moduleList.addModule(module)` to add a new `module` to the list.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"v. `DeleteModuleCommand` prompts the successful message to the user.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"vi. `DeleteModuleCommand` calls `moduleList.removeModuleByIndex(moduleIndex)` to delete the specified module.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"vii. `DeleteModuleCommand` calls `storage.storageModule.saveDataToFile(moduleList)` to save the new data to the storage file.","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"## Listing All Modules","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"This feature allows user to view all Modules.","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"**Implementation**","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"The command for listing all modules is implemented by the `ListModuleCommand` class that extends `Command`.","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"When the user types `module list`, the following sequence of steps will then occur:","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"1. User executes `module list`\\","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"i. `Click` receives user\u0027s input.\\","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"ii. `Parser` calls `parser.parseCommand(userInput)` to parse user\u0027s input into a `Command`.","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"nvbinh15"},"content":"2. Creating `ListModuleCommand` object.","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"nvbinh15"},"content":"3. Executing command.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"nvbinh15"},"content":"i. `ListModuleCommand` calls `storage.StorageModule.readDataFromFile()` to read Module-related data from the storage file.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"nvbinh15"},"content":"ii. `ListModuleCommand` check if there is any Modules in the list. If not, prints the message of having no Modules then return.\\","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"nvbinh15"},"content":"iii. `ListModuleCommand` prompts the message to list the Modules to the user and prints out the Modules line by line.","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"nvbinh15"},"content":"The sequence diagram below summarizes how listing modules work:","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"nvbinh15"},"content":"![](../images/module/ListModule.png)","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"nvbinh15":73}},{"path":"docs/team/DG_nigel.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"# Food-related Features","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"## Architecture","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"Operates on a list of food records, and a food storage object.","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"Food storage object contains static methods to read and write data form said list.","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"## Adding Food Record","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"This feature allows user to add a new Food Record.","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"Tags `n/` `c/` stand for name and calorie count respectively.","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"### Why is there a need for calorie count?","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"Health tracking is important for students, especially during the pandemic","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"where we stress eat during online lessons.","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"Additionally, each food calorie count","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"would be summed up to show the user the total calories consumed per day.","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"**Code example**","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"`food add n/ Samurai Burger c/ 411`","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"## Removing Food Record","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"This feature allows user to remove a Food Record created in the past.","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"### Why is there a need to remove a record? We can\u0027t un-eat stuff","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"Yes, however due to the limitations of the CLI interface there may be wrongly spelled","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"entries that the user wouldn\u0027t want reflected in the list.","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"**Code example**","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"`food delete [INDEX]`","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"## Listing All Food Records","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"This feature allows user to view all Food Records.","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"This would be particularly useful for deleting items.","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"**Code example**","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"`food list`","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"## Clearing food list","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"This feature allows users to clear their Food List.","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"**Code example**","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"`food clear`","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"## Saving food list on successful command","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"The storage on hard-disk would be automatically ","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"updated on every successful command entered by the user.","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"The interworking of this is described in detail in architecture.","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"## Design considerations","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"The abstract class `ListOfRecords` may seem uneventful to you on the surface, however","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"much consideration was taken in account in the making. For instance, in our current iteration","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"we are introducing a way to integrate current food names and calorie count from existing","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"food courts - e.g. TechnoEdge. Another class could inherit from `ListOfRecords` in order to parse in","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"the correct data, hence the generic `T` type used in the list.","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"# Help feature","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"The valid commands and syntax of each command would be displayed at runtime ","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"to the user, sorted alphabetically for easier reference","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"## Architecture","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"ngnigel99"},"content":"We base the software on getting all `Command` classes on runtime. This ensures scalability of code with additional syntax","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"ngnigel99"},"content":"for each command, and improves testability by reducing the need to hard-code all syntax of commands.","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"ngnigel99"},"content":"## Design and Implementation","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"ngnigel99"},"content":"We included some nuance in the code to make the output readable and neater.","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"ngnigel99"},"content":"1. A comparator is implemented for the `Command` classes in order to sort them by name","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"ngnigel99"},"content":"1. Every `Command` class is parsed such that it reads better. ","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"ngnigel99"},"content":"For example, addFoodCommand --\u003e Add Food","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"ngnigel99"},"content":"   ","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"ngnigel99"},"content":"Notice the removal of Command as it is implied, and the separation and capitalization of characters.","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"ngnigel99"},"content":"## Alternatives considered","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"ngnigel99"},"content":"Previously, the help command was hard-coded line by line where developers had to","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"ngnigel99"},"content":"manually type in every command with its syntax. By implementing this architecture,","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"ngnigel99"},"content":"much time is saved as well as making the code a lot more readable.","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"ngnigel99"},"content":"**Code example**","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"ngnigel99"},"content":"`help`","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"ngnigel99":99}},{"path":"docs/team/DG_shoib.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shoibloya"},"content":"# Zoom link feature","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"shoibloya"},"content":"## Showing all available zoom links","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"shoibloya"},"content":"This command is implemented by the `ShowZoomLinks` class. The basic functionality of this command is to access the data stored on the local drive to display the relevant zoom links along with the module codes.","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"shoibloya"},"content":"The `ShowZoomLinks` class extends `Command`.","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"shoibloya"},"content":"Syntax: `zoom list`","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"shoibloya"},"content":"## Adding a new zoom link","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"shoibloya"},"content":"This command is implemented by the `AddZoomCommand` class. The basic functionality of this command is to write a new zoom link to a local storage file and associate it to the relevant module code. The `AddZoomCommand`","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"shoibloya"},"content":"class extends `Command`.","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"shoibloya"},"content":"Syntax: `zoom add LINK MODULE_CODE`","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"shoibloya"},"content":"Example: `zoom add nus.sg/testlink ABC101`","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"shoibloya":17}},{"path":"docs/team/DG_svetha.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"# Journaling Feature","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"## 1. Add notebook feature","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"The command for adding notebook is implemented by the `AddNoteCommand` class that extends `Command`.","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"On adding notebook successfully, the message \"Great you have added the note: NOTEBOOK_NAME\" will be displayed.","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"## 1. Add entry feature","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"The command for adding entry is implemented by the `AddEntryCommand` class that extends `Command`.","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"On adding entry successfully, the message \"Great you have added the entry: ENTRY_NAME\" will be displayed.","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"## 1. List notebooks and entries","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"The command for adding notebook is implemented by the `ListJournalCommand` class that extends `Command`.","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"A list of notebooks along with their entries will be displayed.","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"SvethaMahadevan"},"content":"## 2. Testing","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"SvethaMahadevan"},"content":"1. You can enter the command journal notebook n/ \u003cNOTEBOOK_NAME\u003e to add a notebook.","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"SvethaMahadevan"},"content":"You are free to enter a notebook name of your choice and observe the output of this command.","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"SvethaMahadevan"},"content":"    Test case: journal notebook n/ TRIAL","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"SvethaMahadevan"},"content":"    Expected: Great you have added the note: TRIAL","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"SvethaMahadevan"},"content":"2.You can enter the command journal entry n/ \u003cENTRY_NAME\u003e to add an entry to a specific notebook.","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"SvethaMahadevan"},"content":"You are free to enter an entry name of your choice and observe the output of this command.","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"SvethaMahadevan"},"content":"    Test case: journal entry n/ TRIAL e/ TEST","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"SvethaMahadevan"},"content":"    Expected: Great you have added the entry: TEST","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"SvethaMahadevan"},"content":"3.You can enter the command journal list to view list of notebooks and their entries","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"SvethaMahadevan"},"content":"    Test case: journal list","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"SvethaMahadevan"},"content":"    Expected: The notebook TRIAL contains:","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"SvethaMahadevan"},"content":"              TEST","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"SvethaMahadevan":38}},{"path":"docs/team/DG_swati.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"## Calendar display feature ","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"### Implementation","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"The command for displaying the calendar for a specific month is implemented by the `DisplayCommand` class that extends `Command`.","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"Given below is an example usage scenario and how the display calendar mechanism behaves at each step.","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"*Step 1:* The user enters the command `calendar 10-2021`. This command is then sent for parsing in the `Click` class to `parseCommand` method in the `Parser` class. The `parseCommand` method first splits the entire command into an array `todoArguments` containing `calendar` and `10-2021`.","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"*Step 2:* The string `calendar` from the first index of todoArguments is checked against switch cases and is found to match `COMMAND_CALENDAR` which is the constant string \"calendar\". Upon finding this match, the string from the second index `todoArguments`is further split based on the delimiter of a single white space. This is then checked against possible suffixes for `calendar` that indicate a particular command and the `Command` object `DisplayCommand` is returned to the `Click` class. ","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"*Step 3:* `Click` class then calls the method `execute` of `DisplayCommand` class. `DisplayCommand` extends `Command` class and has three steps in its `execute` method.","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"- The `parseCalendarCommand` is first called, and it returns the year and month values after splitting `10-2021` into `10` and `2021`. This is put together into an YearMonth object `inputYearMonth`.","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"  \u003e  **NOTE:** The input is validated first and if the input date given is invalid, i.e., the month not between 1-12, then the calendar for the current month is displayed.","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"- The `inputYearMonth` is passed into `Ui` class method `printCalenderTitle` and this prints out the title of that month with the month name and the year. In this example, it will display,","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"  ![](../images/calendar/calendar_header.png)","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"- Then, the method `arrangeTaskList` in `Schedule` class is called, and it takes in `storage.tasksList` (the TaskList object with all the currently stored tasks drawn from storage), `calendarTasks` (an ArrayList\u003cArrayList\u003cString\u003e\u003e object initialized with empty ArrayLists of type String), `month` (the month input by the user, which in this example is the integer `10`) and year `month` (the year input by the user, which in this example is the integer `2021`), and adds the tasks to the days in the empty String ArrayLists initialized before in `calendarTasks`. ","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"The method `arrangeLectureList` is also called and the process is same, except with `storage.lectureList` and `calendarLecture` replacing the first two input parameters of `arrangeTaskList`.","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"- Then, the method `displayCalendar` in `Schedule` class is called, and it takes in `inputYearMonth` (the YearMonth object created from the month and year parsed from the user input), and `calendarTasks` (that was filled with the tasks for each day in the previous step). The method `displayCalendar` performs the necessary logic to print out a calendar with tasks as below.","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"    \u003e  **NOTE:** Two tasks and two lectures are displayed for each day based on the order in which the user added them, and if there are more, they will show as and when the user deletes the tasks/lectures that are currently displayed.","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"The below sequence diagram shows the execution process of the calendar display feature.","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"![](../images/calendar/CalendarDisplaySequence.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"### Design Considerations","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"The following design considerations were kept in mind while implementing the calendar display feature,","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"- Aspect: Calendar visual display","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"   - Alternative 1: Display two tasks and two lectures at any time. ","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"     - Pros : The calendar displayed would appear even and solution is easier to implement.","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"     - Cons: All the tasks and lectures not displayed.","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"   - Alternative 2: Set the size of the calendar to accommodate the largest number of tasks and lectures for a particular day. For example, if a day has 8 tasks and lectures and that is the highest amongst all the days, then the calendar would change to show all 8 for this day and the remaining days would have filled display up till how many tasks and lectures they have and the remaining spots empty.","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"     - Pros : The calendar displayed would show all the tasks and lectures.","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"     - Cons: Difficult to implement.","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"### Add `todo` tasks feature [draft]","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"### Implementation","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"The command for adding a `todo` task to a specific day is implemented by the `AddTodoCommand` class that extends `Command`.","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"Given below is an example usage scenario and how the add todo task mechanism behaves at each step.","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"*Step 1:* take from user send to parser","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"*Step 2:* parser to command and execute command","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"*Step 3:* steps for command","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"Diagrams(3): Class, Sequence, Activity","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"Design Considerations","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"swatimahadevan"},"content":"---\u003e point + rationale + alternatives considered","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"swatimahadevan":53}},{"path":"docs/team/nvbinh15.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"# Nguyen Van Binh\u0027s Project Portfolio Page","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"# Project: Click","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"## Overview","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"Click is an all-in-one desktop app for managing modules, tracking your food consumption, time scheduling, journaling, and CAP planning!","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"We know that you are a Computing student here at NUS 👨‍🎓 and may prefer typing ⌨ to swiping (Hello Vim! 😉)","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":", so we think that our command line interface for cramming \u0026 knowledge (Click) is a great fit for you!","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"## Summary of Contributions","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"+ **Major Enhancement**: ","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"  + **Module-related operations**","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"      + Add Module","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"      + List Modules","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"      + Delete Module","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"      + Edit CAP Information","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"      + Get Expected CAP","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"  + **Exit Command** ","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"  + **Exception Handler**","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"  + **Module-related Storage**","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"+ **Minor Enhancement**:","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"+ **Code Contribution**: [Functional and Test code](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003dnvbinh15\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByAuthors\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"+ **Contribution to the User Guide**: ","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"+ **Contribution to the Developer Guide**:","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"+ **Community**:","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"  + Review Developer Guide from other teams in the tutorial (with non-trivial review comments). [#36](https://github.com/nus-cs2113-AY2122S1/tp/pull/36)","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"  + Reported bugs for the other team in the [PE Dry Run](https://github.com/nvbinh15/ped/issues).","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"  + Evaluated code, tested and provided feedback to teammates during online meetups and PR reviews. [#20](https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/20), [#32](https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/32), [#66](https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/66), [#136](https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/136), [#143](https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/143), [#144](https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/144)","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"nvbinh15":37}},{"path":"docs/team/svethamahadevan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"# Mahadevan Svetha\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"# Project: Click","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"## Overview","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"Click is an all-in-one desktop app for managing modules, tracking your food consumption, time scheduling, journaling, and CAP planning!","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"We know that you are a Computing student here at NUS 👨‍🎓 and may prefer typing ⌨ to swiping (Hello Vim! 😉)","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":", so we think that our command line interface for cramming \u0026 knowledge (Click) is a great fit for you!","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"## Summary of Contributions","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"+ **Major Enhancement**:","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"+ **Minor Enhancement**:","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"+ **Code Contribution**: [Functional and Test code](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003dsvetha\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-25\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dSvethaMahadevan\u0026tabRepo\u003dAY2122S1-CS2113T-T09-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026checkedFileTypes\u003dfunctional-code~test-code)","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"+ **Contribution to the User Guide**:","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"SvethaMahadevan"},"content":"+ **Contribution to the Developer Guide**:","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"SvethaMahadevan"},"content":"+ **Community**:","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"SvethaMahadevan":24}},{"path":"docs/team/swatimahadevan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"# Mahadevan Swati\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"# Project: Click","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"## Overview","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"Click is an all-in-one desktop app for managing modules, tracking your food consumption, time scheduling, journaling, and CAP planning!","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"We know that you are a Computing student here at NUS 👨‍🎓 and may prefer typing ⌨ to swiping (Hello Vim! 😉)","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":", so we think that our command line interface for cramming \u0026 knowledge (Click) is a great fit for you!","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"## Summary of Contributions","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"+ **Major Enhancement**:","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"+ **Minor Enhancement**:","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"+ **Code Contribution**: [Functional and Test code](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003dswati\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"+ **Contribution to the User Guide**:","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"+ **Contribution to the Developer Guide**:","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"+ **Community**:","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"swatimahadevan":24}},{"path":"src/main/java/seedu/duke/Click.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import java.io.File;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.commands.calendar.DeleteTaskCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.food.WhatIAteList;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.logger.ClickLogger;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.ExceptionHandler;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.storage.StorageFood;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"public class Click {","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"    public static final String RUNNING_CLICK_LOG_MESSAGE \u003d \"running click\";","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"    private static ExceptionHandler exceptionHandler \u003d new ExceptionHandler();","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"    private static Storage storage;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"    private static Logger logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"    private static Parser parser \u003d new Parser();","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"    static {","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"    //@@author nvbinh15","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"     * Reads and executes commands from user inputs.","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"    private static void run() {","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"        logger \u003d ClickLogger.getNewLogger();","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"        logger.info(RUNNING_CLICK_LOG_MESSAGE);","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"        ui.printGreeting();","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"        while (true) {","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"            String userInput \u003d in.hasNextLine() ? in.nextLine()  : null;","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"            try {","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"                Command c \u003d parser.parseCommand(userInput);","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"                c.execute(ui, storage);","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"            } catch (ClickException e) {","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"                exceptionHandler.handleDukeExceptions(e, userInput);","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"            } catch (Exception  e) {","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"                exceptionHandler.handleOtherExceptions(e);","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"            }","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"     * Main entry method to run Duke.","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"     * @param args Unused params.","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"nvbinh15"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"nvbinh15"},"content":"        new Click();","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"nvbinh15"},"content":"        Click.run();","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nvbinh15":48,"ngnigel99":7,"-":4,"swatimahadevan":11}},{"path":"src/main/java/seedu/duke/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":" * An abstract representation of Command.","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"public abstract class Command implements Comparator\u003cCommand\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"    public String helpMessage \u003d \"default help message\";","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    public String syntax \u003d \"default syntax message\";","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"     * Executes command.","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"     * @param ui      The component of Duke that deals with the interaction with the user.","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"     * @param storage The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"     * @throws ClickException If there is an exception of type ClickException occurs.","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"     * @throws Exception      If there is an exception of type other than DukeException occurs.","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"    public abstract void execute(Ui ui, Storage storage) throws ClickException, Exception;","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"     * Prints command name in a readable format for help.","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"    public void printClassNameAndSyntax() {","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"        Class currentClass \u003d getClass();","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"        String fullClassName \u003d currentClass.getSimpleName();","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"        String[] r \u003d fullClassName.split(\"(?\u003d\\\\p{Upper})\"); //format by camel case","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"        System.out.print(Messages.LINE_PREFIX);","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"        for (String s : r) {","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"            if (!s.equals(\"Command\")) {","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"                System.out.print(s + \" \");","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(\" : \" + syntax);","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"     * For comparing commands by name of the class file.","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"     * Note we sort lexicographically so A appears first etc.","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"     * @param command1 some command to compare.","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"     * @param command2 some command to compare.","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"     * @return index of whichever command has a lower ASCII value name.","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"    public int compare(Command command1, Command command2) {","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"        String className1 \u003d command1.getClass().getSimpleName();","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"        String className2 \u003d command2.getClass().getSimpleName();","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"        return className1.compareTo(className2);","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":62,"ngnigel99":3}},{"path":"src/main/java/seedu/duke/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":" * A representation of the command for exiting the program.","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"     * Executes the exit command.","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"     *  @param ui The component of Duke that deals with the interaction with the user.","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"     * @param storage The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    public void execute(Ui ui, Storage storage) {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"        ui.printGoodBye();","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"        System.exit(0);","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":23}},{"path":"src/main/java/seedu/duke/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shoibloya"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.CommandConstants;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.help.ClassPackageReader;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"//@@author ngnigel99","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    private static String runtimeKeyword \u003d \"rt\";","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    public static boolean runTime \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"        syntax \u003d \"help\";","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"     * Constructor if developer mode is enabled.","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"     * Syntax is \"help rt\", and should only be known","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"     *  by the developers.","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"     * @param keyword keyword to toggle runtime","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    public HelpCommand(String keyword)  {","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"        if (keyword.equals(runtimeKeyword)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"            runTime \u003d !runTime;","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"     * Finds all valid commands at runtime and prints syntax to user.","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"     * @param ui      The component of Duke that deals with the interaction with the user.","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"     * @param storage The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"     * @throws InvocationTargetException If printSyntax method fails to run.","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"     * @throws InstantiationException If printSyntax method fails to run.","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"     * @throws IllegalAccessException If printSyntax method fails to run.","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"    public void execute(Ui ui, Storage storage) throws InvocationTargetException,","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"            InstantiationException, IllegalAccessException {","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"        if (runTime) {","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"            Ui.printMessage(Messages.PRINT_RUNTIME_MODE);","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"            Ui.printLine();","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"            ClassPackageReader.getCommandsAndPrintSyntax(); //- to be done using source files (by developers)","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"            Ui.printMessage(Messages.PRINT_RUNTIME_MODE);","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"        } else {","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"            Ui.printLine();","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(CommandConstants.HELP_MESSAGES);","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"        Ui.printLine();","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"ngnigel99":53,"shoibloya":5}},{"path":"src/main/java/seedu/duke/commands/calendar/AddLectureCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.commands.calendar;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import java.text.DateFormat;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.calendar.DuplicateTaskException;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.calendar.InvalidDateException;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.calendar.ModuleNotFoundException;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.module.ModuleList;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.schedule.lecture.Lecture;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.storage.StorageLecture;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"//@@author swatimahadevan","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":" * Represents the class to execute adding of module lecture.","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"public class AddLectureCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"    public static final String MESSAGE_DUPLICATE_LECTURE \u003d \"A lecture for this module has already been added!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"    public static final String MESSAGE_ADD_LECTURE \u003d \"Added lecture!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"    public static final String MESSAGE_NOT_FOUND_MODULE \u003d \"Could not find module, \"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"            + \"add module first before adding lecture!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"    private ArrayList\u003cString\u003e argumentsLecture;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"     * Class constructor providing syntax for the HelpCommand.","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"    public AddLectureCommand() {","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"        syntax \u003d \"calendar lecture m/ [MODULE_CODE] s/ [DD-MM-YYYY(START_DATE)] e/ [DD-MM-YYYY(END_DATE)]\";","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"     * Checks if a lecture for the same module already exists.","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"     * @param lecture The Lecture object.","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"     * @throws DuplicateTaskException If user tries to add a duplicate task/lecture.","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"    public static void checkIfDuplicate(Lecture lecture) throws DuplicateTaskException {","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"        for (int i \u003d 0; i \u003c Storage.lectureList.getLectureList().size(); i++) {","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"            if (lecture.getModuleName().equals(Storage.lectureList.getLectureList().get(i).getModuleName())) {","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"                throw new DuplicateTaskException(MESSAGE_DUPLICATE_LECTURE);","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"swatimahadevan"},"content":"     * Class constructor.","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"swatimahadevan"},"content":"     * @param argumentsLecture The arguments for lecture command.","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"swatimahadevan"},"content":"    public AddLectureCommand(ArrayList\u003cString\u003e argumentsLecture) {","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"swatimahadevan"},"content":"        this.argumentsLecture \u003d argumentsLecture;","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"swatimahadevan"},"content":"     * Checks if the date provided by the user is valid.","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"swatimahadevan"},"content":"     * @param lectureDateStringFormat The date from user in string format.","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"swatimahadevan"},"content":"     * @return True if the date is valid else False.","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"swatimahadevan"},"content":"    public static boolean isValid(String lectureDateStringFormat) {","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"swatimahadevan"},"content":"        DateFormat dateFormat \u003d new SimpleDateFormat(\"dd-MM-yyyy\");","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"swatimahadevan"},"content":"        dateFormat.setLenient(false);","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"swatimahadevan"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"swatimahadevan"},"content":"            dateFormat.parse(lectureDateStringFormat);","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"swatimahadevan"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"swatimahadevan"},"content":"            return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"swatimahadevan"},"content":"        return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"swatimahadevan"},"content":"     * Throws exception if date not valid.","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"swatimahadevan"},"content":"     * @param lectureDateStringFormat The date from user in string format.","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"swatimahadevan"},"content":"     * @throws InvalidDateException If user provides invalid date.","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"swatimahadevan"},"content":"    public static void checkIfDateValid(String lectureDateStringFormat) throws InvalidDateException {","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"swatimahadevan"},"content":"        if (!isValid(lectureDateStringFormat)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"swatimahadevan"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"swatimahadevan"},"content":"     * To execute adding of lecture.","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"swatimahadevan"},"content":"     * @param ui      The component of CLICK that deals with the interaction with the user.","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"swatimahadevan"},"content":"     * @param storage The component of CLICK that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"swatimahadevan"},"content":"     * @throws IOException in case of writing to save file error.","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"swatimahadevan"},"content":"     * @throws InvalidDateException in case date is incorrect.","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"swatimahadevan"},"content":"     * @throws ModuleNotFoundException in case module has not been added before.","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"swatimahadevan"},"content":"     * @throws DuplicateTaskException in case user is trying to add duplicate task.","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"swatimahadevan"},"content":"    public void execute(Ui ui, Storage storage) throws IOException,","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"swatimahadevan"},"content":"            ModuleNotFoundException, InvalidDateException, DuplicateTaskException {","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"swatimahadevan"},"content":"        ModuleList moduleList \u003d storage.storageModule.readModulesFromFile();","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"swatimahadevan"},"content":"        String module \u003d argumentsLecture.get(0).trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"swatimahadevan"},"content":"        boolean isModuleInList \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"swatimahadevan"},"content":"        for (int i \u003d 0; i \u003c moduleList.getNumberOfModules(); i++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"swatimahadevan"},"content":"            if (module.equalsIgnoreCase(moduleList.getModuleByIndex(i).getCode().trim())) {","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"swatimahadevan"},"content":"                isModuleInList \u003d true;","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"swatimahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"swatimahadevan"},"content":"        if (isModuleInList) {","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"swatimahadevan"},"content":"            String dateStartStringFormat \u003d argumentsLecture.get(1).trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"swatimahadevan"},"content":"            String dateEndStringFormat \u003d argumentsLecture.get(2);","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"swatimahadevan"},"content":"            Lecture lecture \u003d new Lecture(argumentsLecture.get(0), dateStartStringFormat, dateEndStringFormat);","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"swatimahadevan"},"content":"            checkIfDateValid(dateStartStringFormat);","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"swatimahadevan"},"content":"            checkIfDateValid(dateEndStringFormat);","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"swatimahadevan"},"content":"            checkIfDuplicate(lecture);","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"swatimahadevan"},"content":"            storage.lectureList.addLecture(lecture);","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"swatimahadevan"},"content":"            ui.printMessage(MESSAGE_ADD_LECTURE);","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"swatimahadevan"},"content":"        } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"swatimahadevan"},"content":"            ui.printMessage(MESSAGE_NOT_FOUND_MODULE);","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"swatimahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"swatimahadevan"},"content":"        StorageLecture.writeLectureList(storage.lectureList);","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"swatimahadevan":129}},{"path":"src/main/java/seedu/duke/commands/calendar/AddTodoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.calendar;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import java.text.DateFormat;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.calendar.DuplicateTaskException;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.calendar.InvalidDateException;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.schedule.task.Task;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.schedule.task.Todo;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.StorageTasks;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.INDEX_TODO_DESCRIPTION;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.INDEX_TODO_DATE;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"//@@author swatimahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":" * Represents the class to execute adding of todo task.","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"A task by this name has already been added!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"    private ArrayList\u003cString\u003e arguments;","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"     * Class constructor providing syntax for the HelpCommand.","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"    public AddTodoCommand() {","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"        syntax \u003d \"calendar todo n/ [TASK_NAME] d/ [DD-MM-YYYY]\";","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"     * Constructor for AddTodoCommand.","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"     * @param arguments which has the todo task arguments.","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"    public AddTodoCommand(ArrayList\u003cString\u003e arguments) {","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"        super();","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"        this.helpMessage \u003d \"Add a todo task to calendar\";","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"     * Checks if the date provided by the user is valid.","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"     * @param todoDateStringFormat The date from user in string format.","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"     * @return True if the date is valid else False.","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"swatimahadevan"},"content":"    public static boolean isValid(String todoDateStringFormat) {","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"swatimahadevan"},"content":"        DateFormat dateFormat \u003d new SimpleDateFormat(\"dd-MM-yyyy\");","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"swatimahadevan"},"content":"        dateFormat.setLenient(false);","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"swatimahadevan"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"swatimahadevan"},"content":"            dateFormat.parse(todoDateStringFormat);","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"swatimahadevan"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"swatimahadevan"},"content":"            return false;","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"swatimahadevan"},"content":"        return true;","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"swatimahadevan"},"content":"     * Throws exception if date not valid.","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"swatimahadevan"},"content":"     * @param todoDateStringFormat The date from user in string format.","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"swatimahadevan"},"content":"     * @throws InvalidDateException If user provides invalid date.","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"swatimahadevan"},"content":"    public static void checkIfDateValid(String todoDateStringFormat) throws InvalidDateException {","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"swatimahadevan"},"content":"        if (!isValid(todoDateStringFormat)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"swatimahadevan"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"swatimahadevan"},"content":"     * Checks if a task of the same name already exists.","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"swatimahadevan"},"content":"     * @param task The Task object.","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"swatimahadevan"},"content":"     * @throws DuplicateTaskException If user tries to add a duplicate task/lecture.","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"swatimahadevan"},"content":"    public static void checkIfDuplicate(Task task) throws InvalidDateException, DuplicateTaskException {","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"swatimahadevan"},"content":"        for (int i \u003d 0; i \u003c Storage.tasksList.getTaskList().size(); i++) {","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"swatimahadevan"},"content":"            if (task.getDescription().equals(Storage.tasksList.getTaskList().get(i).getDescription())) {","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"swatimahadevan"},"content":"                throw new DuplicateTaskException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"swatimahadevan"},"content":"     * To execute adding of todo.","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"swatimahadevan"},"content":"     * @param ui      The component of CLICK that deals with the interaction with the user.","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"swatimahadevan"},"content":"     * @param storage The component of CLICK that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"swatimahadevan"},"content":"     * @throws IOException in case of writing to save file error.","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"swatimahadevan"},"content":"     * @throws ParseException in case of error while parsing.","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"swatimahadevan"},"content":"     * @throws InvalidDateException in case date is incorrect.","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"swatimahadevan"},"content":"     * @throws DuplicateTaskException in case task already exists.","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"swatimahadevan"},"content":"    public void execute(Ui ui, Storage storage) throws IOException,","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"swatimahadevan"},"content":"            ParseException, DuplicateTaskException, InvalidDateException {","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"swatimahadevan"},"content":"        String description \u003d arguments.get(INDEX_TODO_DESCRIPTION).trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"swatimahadevan"},"content":"        String todoDateStringFormat \u003d arguments.get(INDEX_TODO_DATE);","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"swatimahadevan"},"content":"        Task task \u003d new Todo(description, todoDateStringFormat);","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"swatimahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"swatimahadevan"},"content":"        checkIfDuplicate(task);","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"swatimahadevan"},"content":"        checkIfDateValid(todoDateStringFormat);","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"swatimahadevan"},"content":"        storage.tasksList.addTask(task);","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"swatimahadevan"},"content":"        ui.printTaskAddedMessage();","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"swatimahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"swatimahadevan"},"content":"        StorageTasks.writeTaskList(storage.tasksList);","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"SvethaMahadevan":1,"nvbinh15":2,"swatimahadevan":113}},{"path":"src/main/java/seedu/duke/commands/calendar/DeleteLectureCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.commands.calendar;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.calendar.CalendarIndexNotFoundException;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.calendar.IncorrectNumberOfArgumentsException;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.calendar.LectureIndexNotFoundException;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.storage.StorageLecture;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.storage.StorageTasks;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.DELETED_TASK;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"//@@author swatimahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":" * Represents the class to execute deletion of lecture.","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"public class DeleteLectureCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"    private int index;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"    public static final String MESSAGE_DELETE_LECTURE \u003d \"Lecture has been deleted!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"    private String userInput;","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"     * Class constructor providing syntax for the HelpCommand.","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"    public DeleteLectureCommand() {","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"        syntax \u003d \"calendar delete lec [LECTURE_INDEX]\";","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"     * Constructor for DeleteTaskCommand class.","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"     * @param index index of task to be deleted","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"     * @param userInput input from user","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"    public DeleteLectureCommand(int index, String userInput) {","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"     * Executed delete task command.","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"     * @param ui      The component of CLICK that deals with the interaction with the user.","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"     * @param storage The component of CLICK that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"     * @throws IOException in case of writing to save file error.","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"     * @throws CalendarIndexNotFoundException if index is not found.","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"     * @throws IncorrectNumberOfArgumentsException in case of wrong number of arguments.","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"swatimahadevan"},"content":"    public void execute(Ui ui, Storage storage)","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"swatimahadevan"},"content":"            throws IOException, IncorrectNumberOfArgumentsException, LectureIndexNotFoundException {","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"swatimahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"swatimahadevan"},"content":"        if (this.index \u003e storage.lectureList.getLectureList().size() || this.index \u003c\u003d 0) {","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"swatimahadevan"},"content":"            throw new LectureIndexNotFoundException();","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"swatimahadevan"},"content":"        Storage.lectureList.deleteLecture(this.index);","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"swatimahadevan"},"content":"        ui.printMessage(MESSAGE_DELETE_LECTURE);","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"swatimahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"swatimahadevan"},"content":"        StorageLecture.writeLectureList(Storage.lectureList);","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"swatimahadevan":66}},{"path":"src/main/java/seedu/duke/commands/calendar/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.calendar;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.calendar.IncorrectNumberOfArgumentsException;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.calendar.CalendarIndexNotFoundException;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.storage.StorageTasks;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.DELETED_TASK;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"//@@author swatimahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":" * Represents the class to execute deletion of todo task.","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"    private int index;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"    private String userInput;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"     * Class constructor providing syntax for the HelpCommand.","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"    public DeleteTaskCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"        syntax \u003d \"calendar delete task [TASK_INDEX]\";","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"     * Constructor for DeleteTaskCommand class.","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"     * @param index index of task to be deleted","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"     * @param userInput input from user","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"    public DeleteTaskCommand(int index, String userInput) {","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"        helpMessage \u003d \"Delete task from calendar\";","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"        syntax \u003d \"calendar delete TASK_INDEX\";","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"     * Executed delete task command.","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"     * @param ui      The component of CLICK that deals with the interaction with the user.","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"     * @param storage The component of CLICK that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"     * @throws IOException in case of writing to save file error.","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"     * @throws CalendarIndexNotFoundException if index is not found.","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"     * @throws IncorrectNumberOfArgumentsException in case of wrong number of arguments.","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"    public void execute(Ui ui, Storage storage) throws IOException,","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"swatimahadevan"},"content":"            CalendarIndexNotFoundException, IncorrectNumberOfArgumentsException {","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"swatimahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"swatimahadevan"},"content":"        if (this.index \u003e storage.tasksList.getTaskList().size() || this.index \u003c\u003d 0) {","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"swatimahadevan"},"content":"            throw new CalendarIndexNotFoundException();","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"swatimahadevan"},"content":"        Storage.tasksList.deleteTask(this.index);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"swatimahadevan"},"content":"        ui.printMessage(DELETED_TASK);","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"swatimahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"swatimahadevan"},"content":"        StorageTasks.writeTaskList(Storage.tasksList);","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"nvbinh15":3,"swatimahadevan":61}},{"path":"src/main/java/seedu/duke/commands/calendar/DisplayCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.calendar;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.calendar.CalendarIndexNotFoundException;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.calendar.IncorrectNumberOfArgumentsException;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.logger.ClickLogger;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.parser.schedule.ParserSchedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.schedule.Schedule;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.MONTH_LOWER_LIMIT;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.MONTH_UPPER_LIMIT;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.TOTAL_SIZE;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"//@@author swatimahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":" * Represents the class to display of calendar.","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"public class DisplayCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"    private int year;","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"    private int month;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"    private YearMonth inputYearMonth;","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"    private String[] yearMonthArguments;","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"    private ArrayList\u003cArrayList\u003cString\u003e\u003e calendarTasks \u003d new ArrayList\u003c\u003e(TOTAL_SIZE);","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"    private ArrayList\u003cArrayList\u003cString\u003e\u003e calendarLectures \u003d new ArrayList\u003c\u003e(TOTAL_SIZE);","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"     * Class constructor providing syntax for the HelpCommand.","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"    public DisplayCommand() {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"        syntax \u003d \"calendar display [MM-YYYY]\";","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"     * Constructor for DisplayCommand class.","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"     * @param input The input from the user in String format.","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"    public DisplayCommand(String input) {","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"        helpMessage \u003d \"Display Calendar\";","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"        syntax \u003d \"calendar display MM-YYYY\";","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"        Schedule.intializeCalendarDayTasksList(calendarTasks);","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"        Schedule.intializeCalendarDayLectureList(calendarLectures);","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"swatimahadevan"},"content":"            this.yearMonthArguments \u003d ParserSchedule.parseCalendarCommand(input);","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"swatimahadevan"},"content":"            this.year \u003d Integer.parseInt(yearMonthArguments[1]);","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"swatimahadevan"},"content":"            this.month \u003d Integer.parseInt(yearMonthArguments[0]);","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"swatimahadevan"},"content":"            if ((month \u003c MONTH_LOWER_LIMIT || month \u003e MONTH_UPPER_LIMIT)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"swatimahadevan"},"content":"                System.out.println(\"Month is invalid and \"","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"swatimahadevan"},"content":"                        + \"I will therefore display the calendar for the current month!\");","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"swatimahadevan"},"content":"                this.inputYearMonth \u003d YearMonth.now();","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"swatimahadevan"},"content":"            } else {","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"swatimahadevan"},"content":"                this.inputYearMonth \u003d YearMonth.of(year, month);","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"swatimahadevan"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException c) {","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"swatimahadevan"},"content":"            ClickLogger.getNewLogger().log(Level.WARNING, \"Calendar display failed...\");","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"swatimahadevan"},"content":"            Ui.printInvalidCalendarInput();","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"swatimahadevan"},"content":"     * Executes display of calendar command.","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"swatimahadevan"},"content":"     * @param ui      The component of CLICK that deals with the interaction with the user.","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"swatimahadevan"},"content":"     * @param storage The component of CLICK that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"swatimahadevan"},"content":"    public void execute(Ui ui, Storage storage) {","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"swatimahadevan"},"content":"        Ui.printCalenderTitle(inputYearMonth);","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"swatimahadevan"},"content":"        Schedule.arrangeTaskList(storage.tasksList, calendarTasks, this.month, this.year);","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"swatimahadevan"},"content":"        Schedule.arrangeLectureList(storage.lectureList, calendarLectures, this.month, this.year);","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"swatimahadevan"},"content":"        Schedule.displayCalendar(inputYearMonth, calendarTasks, calendarLectures);","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"nvbinh15":2,"swatimahadevan":81}},{"path":"src/main/java/seedu/duke/commands/calendar/EditTasksCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.commands.calendar;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.calendar.DuplicateTaskException;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.calendar.IncorrectNumberOfArgumentsException;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.calendar.InvalidDateException;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.calendar.CalendarIndexNotFoundException;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.parser.schedule.ParserSchedule;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.storage.StorageTasks;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.schedule.task.Task;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.schedule.task.Todo;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.INDEX_TODO_DESCRIPTION;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.INDEX_TODO_DATE;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"//@@author swatimahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":" * Class to execute editing of todo task.","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"public class EditTasksCommand extends Command {","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"    private int index;","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"    public static final String MESSAGE_EDITED_TASK \u003d \"Edited Task!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"    public static final String MESSAGE_ENTER_TASK_COMMAND \u003d \"Enter the entire todo command \"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"            + \"with the desired description and date that you \"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"            + \"want to replace in place of the current task at index \";","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"     * Class constructor providing syntax for the HelpCommand.","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"    public EditTasksCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"        syntax \u003d \"calendar edit [TASK_INDEX]\";","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"     * Constructor for EditTasksCommand class.","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"     * @param index index of task to be deleted","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"    public EditTasksCommand(int index) {","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"        helpMessage \u003d \"Delete task from calendar\";","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"        syntax \u003d \"calendar delete TASK_INDEX\";","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"swatimahadevan"},"content":"     * Executed edit task command.","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"swatimahadevan"},"content":"     * @param ui      The component of CLICK that deals with the interaction with the user.","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"swatimahadevan"},"content":"     * @param storage The component of CLICK that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"swatimahadevan"},"content":"     * @throws IOException in case of writing to save file error.","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"swatimahadevan"},"content":"     * @throws CalendarIndexNotFoundException if index is not found.","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"swatimahadevan"},"content":"     * @throws IncorrectNumberOfArgumentsException in case of wrong number of arguments.","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"swatimahadevan"},"content":"    public void execute(Ui ui, Storage storage) throws IOException, IncorrectNumberOfArgumentsException,","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"swatimahadevan"},"content":"            CalendarIndexNotFoundException, InvalidDateException, DuplicateTaskException {","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"swatimahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"swatimahadevan"},"content":"        if (this.index \u003e storage.tasksList.getTaskList().size()) {","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"swatimahadevan"},"content":"            throw new CalendarIndexNotFoundException();","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"swatimahadevan"},"content":"        ui.printMessage(MESSAGE_ENTER_TASK_COMMAND + this.index);","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"swatimahadevan"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"swatimahadevan"},"content":"        String followUpInput \u003d in.nextLine();","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cString\u003e arguments \u003d ParserSchedule.parseTodoCommand(followUpInput);","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"swatimahadevan"},"content":"        String description \u003d arguments.get(INDEX_TODO_DESCRIPTION).trim();","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"swatimahadevan"},"content":"        String date \u003d arguments.get(INDEX_TODO_DATE);","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"swatimahadevan"},"content":"        Task task \u003d new Todo(description, date);","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"swatimahadevan"},"content":"        AddTodoCommand.checkIfDuplicate(task);","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"swatimahadevan"},"content":"        AddTodoCommand.checkIfDateValid(date);","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"swatimahadevan"},"content":"        Storage.tasksList.editTask(this.index, description, date);","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"swatimahadevan"},"content":"        ui.printMessage(MESSAGE_EDITED_TASK);","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"swatimahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"swatimahadevan"},"content":"        StorageTasks.writeTaskList(Storage.tasksList);","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"swatimahadevan":84}},{"path":"src/main/java/seedu/duke/commands/calendar/ListLecturesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.commands.calendar;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.schedule.lecture.LectureList;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.schedule.task.TaskList;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.storage.StorageLecture;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.storage.StorageTasks;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"//@@author swatimahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":" * Represents the class to execute listing of lectures.","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"public class ListLecturesCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"     * Class constructor providing syntax for the HelpCommand.","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"    public ListLecturesCommand() {","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"        syntax \u003d \"calendar list lec\";","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"     * Executes listing of tasks.","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"     * @param ui The component of CLICK that deals with the interaction with the user.","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"     * @param storage The component of CLICK that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"     * @throws IOException If command entered is wrong.","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"    public void execute(Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"        LectureList lectures \u003d StorageLecture.readLectureList();","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"        Ui.printLectureList(lectures.getLectureList());","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"swatimahadevan":42}},{"path":"src/main/java/seedu/duke/commands/calendar/ListTasksCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.calendar;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.StorageTasks;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.schedule.task.TaskList;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"//@@author swatimahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":" * Represents the class to execute listing of tasks.","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"public class ListTasksCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"     * Class constructor providing syntax for the HelpCommand.","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"    public ListTasksCommand() {","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"        syntax \u003d \"calendar list task\";","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"     * Executes listing of tasks.","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"     * @param ui The component of CLICK that deals with the interaction with the user.","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"     * @param storage The component of CLICK that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"     * @throws IOException If command entered is wrong.","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"    public void execute(Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"        TaskList tasks \u003d StorageTasks.readTaskList();","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"        Ui.printTaskList(tasks.getTaskList());","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"SvethaMahadevan":1,"nvbinh15":2,"swatimahadevan":37}},{"path":"src/main/java/seedu/duke/commands/food/AddFoodCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.food;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.syntax.ArgumentsNotFoundException;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.syntax.MissingDividerException;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.syntax.WrongDividerOrderException;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.food.NegativeCaloriesException;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.food.FoodRecord;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.food.IllegalFoodParameterException;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.storage.StorageFood;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"//@@author ngnigel99","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":" * Command to add a food item to the existing  list.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":" *","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":" * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"public class AddFoodCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    private String inputString; //name + calorie","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    public AddFoodCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"        syntax \u003d \"food add n/ [FOOD_NAME] c/ [CALORIE] {d/ DD-MM-YYYY(DATE_RECORDED)}\";","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    public AddFoodCommand(String inputString) {","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"        super();","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"        this.inputString \u003d inputString;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"        this.helpMessage \u003d \"Adds a food item to a list\";","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"     * Executes add food command.","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"     * @param ui      The component of Duke that deals with the interaction with the user.","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"     * @param storage The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"     * @throws IllegalFoodParameterException If syntax is not followed.","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"     * @throws IOException If there is an error while reading/ saving data to file.","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"    public void execute(Ui ui, Storage storage) throws","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"            IllegalFoodParameterException,","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"            IOException,","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"            ArgumentsNotFoundException,","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"            WrongDividerOrderException,","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"            NegativeCaloriesException,","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"            MissingDividerException {","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"        FoodRecord foodRecord  \u003d null;","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"        checkDividersExistOrThrowException();","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"        foodRecord \u003d Parser.parseFoodRecord(inputString);","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"        storage.whatIAteTodayList.addToList(foodRecord, false);","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"        StorageFood.saveList(storage.whatIAteTodayList);","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"     * Checks for existence of dividers.","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"     * @throws MissingDividerException if dividers are missing.","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"    private void checkDividersExistOrThrowException() throws","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"            MissingDividerException {","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"        if (!inputString.contains(\"n/\")) {","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"            throw new MissingDividerException(\"n/\");","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"        if (!inputString.contains(\"c/\")) {","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"            throw new MissingDividerException(\"c/\");","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"nvbinh15":3,"ngnigel99":72}},{"path":"src/main/java/seedu/duke/commands/food/AddFoodFromReferenceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.commands.food;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.syntax.ArgumentsNotFoundException;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.food.InvalidStoreIndexException;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.syntax.WrongDividerOrderException;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.food.CannotFindFoodStoreException;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.food.FoodIndexNotFoundException;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.food.InvalidItemIndexException;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.food.NoItemDividerException;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.food.NoStoreDividerException;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.food.FoodRecord;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.storage.StorageFood;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":" * Allows the user to add a food from a reference list.","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":" * radd refers to \"reference add\".","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"public class AddFoodFromReferenceCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    private int storeIndex \u003d 1;","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    private int itemIndex \u003d 1;","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    private String storeDivider \u003d \"s/\";","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"    private String itemDivider \u003d \"i/\";","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    public AddFoodFromReferenceCommand() {","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"        this.syntax \u003d \"food radd s/ [STORE_INDEX] i/ [ITEM_INDEX]\";","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"    //assumes string given after food radd","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"    public AddFoodFromReferenceCommand(String userInput) throws","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"            WrongDividerOrderException,","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"            ArgumentsNotFoundException,","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"            NumberFormatException,","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"            InvalidStoreIndexException,","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"            InvalidItemIndexException,","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"            NoStoreDividerException,","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"            NoItemDividerException {","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"        parseDataAndThrowExceptionsIfFound(userInput);","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"     * Parses user input into store and item indexes.","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"     * @param userInput user input.","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"     * @throws InvalidStoreIndexException if store index is invalid.","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"     * @throws InvalidItemIndexException if item index is invalid.","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"     * @throws NoStoreDividerException if store divider is missing.","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"     * @throws NoItemDividerException if item divider is missing.","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"     * @throws WrongDividerOrderException if divider order is wrong.","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"     * @throws ArgumentsNotFoundException if arguments not found.","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"    private void parseDataAndThrowExceptionsIfFound(String userInput) throws","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"            InvalidStoreIndexException,","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"            InvalidItemIndexException,","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"            NoStoreDividerException,","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"            NoItemDividerException,","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"            WrongDividerOrderException,","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"            ArgumentsNotFoundException {","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"        throwExceptionsIfFound(userInput);","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"        String[] data \u003d Parser.getData(userInput, storeDivider, itemDivider);","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"        String storeIndexString \u003d data[0];","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"        String itemIndexString \u003d data[1];","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"        storeIndex \u003d Integer.parseInt(storeIndexString);","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"        itemIndex \u003d Integer.parseInt(itemIndexString) - 1;","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"     * Throws exceptions if found.","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"     * @param userInput user input.","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"     * @throws InvalidStoreIndexException if store index is invalid.","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"     * @throws InvalidItemIndexException if item index is invalid.","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"     * @throws NoStoreDividerException if no store divider is found.","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"ngnigel99"},"content":"     * @throws NoItemDividerException if no item divider is found.","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"ngnigel99"},"content":"    private void throwExceptionsIfFound(String userInput) throws","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"ngnigel99"},"content":"            InvalidStoreIndexException,","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"ngnigel99"},"content":"            InvalidItemIndexException,","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"ngnigel99"},"content":"            NoStoreDividerException,","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"ngnigel99"},"content":"            NoItemDividerException {","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"ngnigel99"},"content":"        if (storeIndex \u003c\u003d 0) {","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"ngnigel99"},"content":"            throw new InvalidStoreIndexException(storeIndex);","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"ngnigel99"},"content":"        if (itemIndex \u003c\u003d 0) {","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"ngnigel99"},"content":"            throw new InvalidItemIndexException(itemIndex);","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"ngnigel99"},"content":"        if (!userInput.contains(storeDivider)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"ngnigel99"},"content":"            throw new NoStoreDividerException();","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"ngnigel99"},"content":"        if (!userInput.contains(itemDivider)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"ngnigel99"},"content":"            throw new NoItemDividerException();","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"ngnigel99"},"content":"    public void execute(Ui ui, Storage storage) throws ClickException, Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"ngnigel99"},"content":"        FoodRecord toAdd \u003d getFoodRecordFromStall(storage);","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"ngnigel99"},"content":"        Ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"ngnigel99"},"content":"        Ui.printMessageSameLine(Messages.PRINT_ADDING_ITEM);","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"ngnigel99"},"content":"        Ui.printMessage(toAdd.toString());","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"ngnigel99"},"content":"        storage.whatIAteTodayList.addToList(toAdd, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"ngnigel99"},"content":"        StorageFood.saveList(storage.whatIAteTodayList);","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"ngnigel99"},"content":"     * Gets a food record from a stall.","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"ngnigel99"},"content":"     * @param storage main storage class that contains the reference list.","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"ngnigel99"},"content":"     * @return toAdd food record extracted from the stall in reference list.","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"ngnigel99"},"content":"     * @throws FoodIndexNotFoundException if food index is not found.","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"ngnigel99"},"content":"    private FoodRecord getFoodRecordFromStall(Storage storage) throws","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"ngnigel99"},"content":"            FoodIndexNotFoundException,","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"ngnigel99"},"content":"            CannotFindFoodStoreException {","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"ngnigel99"},"content":"        FoodRecord toAdd \u003d storage","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"ngnigel99"},"content":"            .reference","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"ngnigel99"},"content":"            .getTechnoEdge()","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"ngnigel99"},"content":"            .getFoodRecordFromStall(storeIndex, itemIndex);","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"ngnigel99"},"content":"        return toAdd;","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"ngnigel99":123}},{"path":"src/main/java/seedu/duke/commands/food/ClearFoodCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.food;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.storage.StorageFood;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"//@@author ngnigel99","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":" * Clears the current list  of food, and clear entries in storage.","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":" * @author  ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"public class ClearFoodCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    public ClearFoodCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"        helpMessage \u003d \"Clears the current list of food, and clear entries in storage\";","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"        syntax \u003d \"food clear\";","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"     * Executes clear food command.","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"     * @param ui      The component of Duke that deals with the interaction with the user.","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"     * @param storage The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"     * @throws IOException If there is an error reading/ writing to save file.","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    public void execute(Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"        storage.whatIAteTodayList.clearList();","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"        StorageFood.saveList(storage.whatIAteTodayList);","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"nvbinh15":2,"ngnigel99":32}},{"path":"src/main/java/seedu/duke/commands/food/DeleteFoodCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.food;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.food.FoodIndexNotFoundException;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.syntax.ArgumentsNotFoundException;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.food.FoodRecord;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.storage.StorageFood;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"//@@author ngnigel99","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":" * Deletes a food item from a list given  a  valid index.","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":" * @author ngnigel99","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"public class DeleteFoodCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    private final int indexNotFoundConstant \u003d  - 1;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    private String inputString; //represents index to delete","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    public DeleteFoodCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"        syntax \u003d \"food delete [INDEX]\";","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    public DeleteFoodCommand(String inputString) {","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"        super();","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"        this.inputString \u003d inputString.trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"        helpMessage \u003d \"Deletes a food item from a list given a valid index\";","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"     * Executes delete food command.","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"     * @param ui      The component of Duke that deals with the interaction with the user.","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"     * @param storage The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"     * @throws FoodIndexNotFoundException If index is not in list.","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"     * @throws IOException If there is an error saving updated list to save file.","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"    public void execute(Ui ui, Storage storage) throws","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"            FoodIndexNotFoundException,","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"            IOException,","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"            ArgumentsNotFoundException {","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"        int indexToDelete \u003d getIndexToDelete();","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"        checkIndexAndThrowException(storage, indexToDelete);","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"        FoodRecord toDelete \u003d storage.whatIAteTodayList.getList().get(indexToDelete - 1);","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"        deleteFoodRecordAndSave(storage, indexToDelete, toDelete);","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"     * Given an input string, parses it to an integer.","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"     * Note: capability to handle multiple strings,","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"     *       perhaps in later versions.","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"     * @return indexToDelete integer parsed.","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"    private int getIndexToDelete() throws","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"            NumberFormatException,","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"            ArgumentsNotFoundException {","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"        if (inputString.equals(\"\")) {","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"            throw new ArgumentsNotFoundException();","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"        ArrayList\u003cInteger\u003e indexesToDelete \u003d Parser.parseStringToIntegerList(inputString);","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"        int indexToDelete \u003d indexesToDelete.get(0);","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"        return indexToDelete;","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"     * Assumes index in list at this point, then delete item.","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"     * @param storage  The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"     * @param indexToDelete Index of food item to be deleted.","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"     * @param toDelete Food record to delete.","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"     * @throws IOException If there is an error saving updated list to save file.","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"ngnigel99"},"content":"    private void deleteFoodRecordAndSave(Storage storage, int indexToDelete, FoodRecord toDelete) throws IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"ngnigel99"},"content":"        storage.whatIAteTodayList.getList().remove(toDelete);","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"ngnigel99"},"content":"        Ui.printDoneDeleteFood(toDelete, indexToDelete);","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"ngnigel99"},"content":"        StorageFood.saveList(storage.whatIAteTodayList);","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"ngnigel99"},"content":"     * Verifies index used exists in given list.","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"ngnigel99"},"content":"     * In particular, for food items.","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"ngnigel99"},"content":"     * @param storage Storage object that contains list.","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"ngnigel99"},"content":"     * @param indexToDelete Index of food item in list to delete.","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"ngnigel99"},"content":"     * @throws FoodIndexNotFoundException If index is not in list range.","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"ngnigel99"},"content":"    private void checkIndexAndThrowException(Storage storage, int indexToDelete) throws FoodIndexNotFoundException {","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"ngnigel99"},"content":"        if (indexToDelete \u003c 0","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"ngnigel99"},"content":"                || indexToDelete \u003e storage.whatIAteTodayList.getList().size()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"ngnigel99"},"content":"            throw new FoodIndexNotFoundException();","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"nvbinh15":3,"ngnigel99":97}},{"path":"src/main/java/seedu/duke/commands/food/FindFoodByCalorieCount.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.commands.food;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.food.NegativeCaloriesException;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.food.NoCalorieCountKeywordException;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.food.NoCaloriesInputException;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"//@@author ngnigel99","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":" * Finds food items from reference list with target amount of calories.","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"public class FindFoodByCalorieCount extends Command {","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    public int calories \u003d 0;","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    public String keyword \u003d \"clt\";","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    public FindFoodByCalorieCount() {","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"        syntax \u003d \"food clt [Calories]\"; //calories lower than","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    public FindFoodByCalorieCount(String input) throws NoCalorieCountKeywordException,","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"            NumberFormatException, NoCaloriesInputException, NegativeCaloriesException {","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"        getCalories(input);","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"     * Extracts calories from a given string.","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"     * @param input full user input.","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"     * @throws NoCalorieCountKeywordException if keyword not found.","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"     * @throws NoCaloriesInputException if no calories are input.","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"     * @throws NegativeCaloriesException if calories are negative.","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"    private void getCalories(String input) throws","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"            NoCalorieCountKeywordException,","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"            NoCaloriesInputException,","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"            NegativeCaloriesException {","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"        if (!input.contains(keyword)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"            throw new NoCalorieCountKeywordException();","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"        if (input.equals(\"food \" + keyword)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"            throw new NoCaloriesInputException();","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"        int calorieIndex \u003d input.indexOf(keyword);","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"        input \u003d input.substring(calorieIndex + 4);","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"        calories \u003d Integer.parseInt(input);","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"        if (calories \u003c 0) {","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"            throw new NegativeCaloriesException();","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"    public void execute(Ui ui, Storage storage) throws ClickException, Exception {","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"        Storage.reference.getTechnoEdge().printFoodRecordsWithLowerCalories(calories);","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"ngnigel99":57}},{"path":"src/main/java/seedu/duke/commands/food/FindFoodWithDateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.commands.food;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.CommandConstants;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.food.NoFoodFoundOnDateException;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"//@@author ngnigel99","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"public class FindFoodWithDateCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    LocalDate dateInput;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    public FindFoodWithDateCommand() {","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"        this.syntax \u003d \"food find [DD-MM-YYYY]\";","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    public FindFoodWithDateCommand(String dateString) throws DateTimeParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"        DateTimeFormatter localDateFormatter \u003d getFormatter();","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"        this.dateInput \u003d LocalDate.parse(dateString, localDateFormatter);","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"     * Gets a formatter of the syntax dd-MM-yyyy.","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"     * @return localDateFormatter the formatter needed to parse dates.","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    private DateTimeFormatter getFormatter() {","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"        DateTimeFormatter localDateFormatter \u003d DateTimeFormatter.ofPattern(CommandConstants.DATE_CONSTANT);","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"        return localDateFormatter;","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"     * Finds food with a given date.","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"     * @param ui      The component of Duke that deals with the interaction with the user.","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"     * @param storage The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"     * @throws NoFoodFoundOnDateException if no food is found on that day.","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"    public void execute(Ui ui, Storage storage) throws","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"            NoFoodFoundOnDateException {","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"        storage.whatIAteTodayList.printFoodWithFoundDate(dateInput);","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"ngnigel99":47}},{"path":"src/main/java/seedu/duke/commands/food/ListFoodCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.food;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"//@@author ngnigel99","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" * List all current records (assumed today for simplicity).","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":" * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"public class ListFoodCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    public ListFoodCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"        helpMessage \u003d \"Lists all food items recorded\";","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"        syntax \u003d \"food list\";","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    public void execute(Ui ui, Storage storage) {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"        storage.whatIAteTodayList.printList(true);","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"nvbinh15":2,"ngnigel99":20}},{"path":"src/main/java/seedu/duke/commands/food/ViewReferenceFoodCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.commands.food;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"//@@author ngnigel99","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":" * Command to display a reference list to the user.","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":" * In particular, this would involve listing the stall names","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":" * as well as allowing the user to view the specific items","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":" * sold by a store.","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"public class ViewReferenceFoodCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    private String userInput;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    public ViewReferenceFoodCommand() {","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"        this.syntax \u003d \"food view, food view [STORE_INDEX], food view all \\n\";","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    public ViewReferenceFoodCommand(String userInput) {","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"        this.userInput \u003d  userInput;","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    public void execute(Ui ui, Storage storage) throws ClickException, NumberFormatException {","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"        selectExecutionPathAndRun();","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"     * Selects execution path of reference food commands.","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"     * This is needed due to the various options the user has.","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"     * For instance, food view lists all stalls.","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"     *               food view all lists all items.","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"     *               food view [STORE_NUMBER] lists all items sold by that store.","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"    private void selectExecutionPathAndRun() {","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"        switch (userInput.trim()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"        case \"food view\":","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"            Storage.reference.getTechnoEdge().printStalls();","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"            break;","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"        case \"food view all\":","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"            Storage.reference.getTechnoEdge().printAllItems();","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"            break;","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"        default:","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"            String[] userInputSplit \u003d userInput.split(\" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"            int index \u003d Integer.parseInt(userInputSplit[2]);","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"            Storage.reference.getTechnoEdge().printItems(index);","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"            break;","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"ngnigel99":53}},{"path":"src/main/java/seedu/duke/commands/journal/AddEntryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.journal;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"//@@author SvethaMahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.EmptyEntryArgumentsException;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.EmptyEntryNameException;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.EmptyNoteNameException;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.NotebookArgumentNotFoundException;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.NotebookNotFoundForEntry;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.journal.Note;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.parser.journal.ParserJournal;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.StorageEntries;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"SvethaMahadevan"},"content":"public class AddEntryCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"SvethaMahadevan"},"content":"    public String userInput;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"     * Class constructor providing syntax for the HelpCommand.","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"SvethaMahadevan"},"content":"    public AddEntryCommand() {","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"SvethaMahadevan"},"content":"        syntax \u003d \"journal entry n/ [NOTEBOOK_NAME] e/ [ENTRY_NAME]\";","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"SvethaMahadevan"},"content":"     * Constructor for the AddEntryCommand.","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param userInput input from the user","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"SvethaMahadevan"},"content":"    public AddEntryCommand(String userInput) {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"SvethaMahadevan"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"SvethaMahadevan"},"content":"        this.helpMessage \u003d \"Add an entry to the desired notebook\";","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"SvethaMahadevan"},"content":"        this.syntax \u003d \"journal entry n/ NOTEBOOK_NAME e/ ENTRY_NAME\";","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"SvethaMahadevan"},"content":"     * Allows for the adding of entry.","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param ui allows for printing of a message to indicate that the entry has been added","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param storage to allow for storing of entries","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws EmptyNoteNameException No note name entered after \u0027n/\u0027","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws EmptyEntryArgumentsException if no arguments found for the entry","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws NotebookArgumentNotFoundException if note argument is not found","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws EmptyEntryNameException if no entry name is provided","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws NotebookNotFoundForEntry if no note arguments found for the entry","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"SvethaMahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"SvethaMahadevan"},"content":"    public void execute(Ui ui, Storage storage) throws EmptyNoteNameException, EmptyEntryArgumentsException,","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"SvethaMahadevan"},"content":"            NotebookArgumentNotFoundException, EmptyEntryNameException, IOException,","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"SvethaMahadevan"},"content":"            NotebookNotFoundForEntry {","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"SvethaMahadevan"},"content":"        String[] argumentsNoteEntry \u003d ParserJournal.parseAddEntryCommand(userInput, storage);","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cNote\u003e notes \u003d storage.collectionOfNotes.getNotesArrayList();","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"SvethaMahadevan"},"content":"        for (Note note : notes) {","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"SvethaMahadevan"},"content":"            if (note.getNoteName().equals(argumentsNoteEntry[0])) {","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"SvethaMahadevan"},"content":"                storage.collectionOfEntries.addEntry(argumentsNoteEntry[0], argumentsNoteEntry[1]);","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"SvethaMahadevan"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"SvethaMahadevan"},"content":"        ui.printAddedEntryMessage(argumentsNoteEntry[1]);","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"SvethaMahadevan"},"content":"        StorageEntries.writeEntries(storage.collectionOfEntries, storage);","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"SvethaMahadevan":65,"nvbinh15":1}},{"path":"src/main/java/seedu/duke/commands/journal/AddNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.journal;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"//@@author SvethaMahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.DuplicateNoteException;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.EmptyNoteArgumentsException;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.EmptyNoteNameException;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.NotebookArgumentNotFoundException;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.parser.journal.ParserJournal;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.StorageNotes;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"public class AddNoteCommand extends Command {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"    public String userInput;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"SvethaMahadevan"},"content":"     * Class constructor providing syntax for the HelpCommand.","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"SvethaMahadevan"},"content":"    public AddNoteCommand() {","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"        syntax \u003d \"journal notebook n/ [NOTEBOOK_NAME]\";","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"SvethaMahadevan"},"content":"     * Constructor for the AddNoteCommand.","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param userInput input from the user.","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"SvethaMahadevan"},"content":"    public AddNoteCommand(String userInput) {","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"SvethaMahadevan"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"SvethaMahadevan"},"content":"        helpMessage \u003d \"Add a notebook to list\";","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"SvethaMahadevan"},"content":"        syntax \u003d \"journal notebook n/ NOTEBOOK_NAME\";","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"SvethaMahadevan"},"content":"     * Adds the notebooks to a collection of notebooks.","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param ui allows for printing that note is added","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param storage to allow for storage of notes","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws EmptyNoteNameException No note name entered after \u0027n/\u0027.","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws EmptyNoteArgumentsException if no arguments found for notebook.","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws DuplicateNoteException if a note with same name is in list","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws NotebookArgumentNotFoundException if no note arguments are provided","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"SvethaMahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"SvethaMahadevan"},"content":"    public void execute(Ui ui, Storage storage) throws EmptyNoteNameException, EmptyNoteArgumentsException, IOException,","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"SvethaMahadevan"},"content":"            DuplicateNoteException, NotebookArgumentNotFoundException {","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"SvethaMahadevan"},"content":"        String noteName \u003d ParserJournal.parseAddNoteCommand(userInput, storage);","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"SvethaMahadevan"},"content":"        if (noteName \u003d\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"SvethaMahadevan"},"content":"            throw new NotebookArgumentNotFoundException(\"Note argument not found!\");","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"SvethaMahadevan"},"content":"        assert (noteName !\u003d null);","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"SvethaMahadevan"},"content":"        ui.printAddedNoteMessage(noteName);","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"SvethaMahadevan"},"content":"        storage.collectionOfNotes.addNote(noteName, \"none\");","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"SvethaMahadevan"},"content":"        StorageNotes.writeCollectionOfNotes(storage.collectionOfNotes);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"SvethaMahadevan":60,"nvbinh15":1}},{"path":"src/main/java/seedu/duke/commands/journal/DeleteEntryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.commands.journal;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"//@@author SvethaMahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.EmptyEntryArgumentsException;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.EmptyEntryNameException;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.EmptyNoteNameException;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.EntryDoesNotExistException;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.InvalidEntryIndexException;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.InvalidNotebookIndexException;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.NotebookArgumentNotFoundException;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.NotebookNotFoundForEntry;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.journal.Entry;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.parser.journal.ParserJournal;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.StorageEntries;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"SvethaMahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"SvethaMahadevan"},"content":"public class DeleteEntryCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"    public String userInput;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"SvethaMahadevan"},"content":"     * Class constructor providing syntax for the HelpCommand.","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"SvethaMahadevan"},"content":"    public DeleteEntryCommand() {","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"SvethaMahadevan"},"content":"        syntax \u003d \"journal delete_entry n/ [NOTEBOOK_NAME] e/ [ENTRY_NAME]\";","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"SvethaMahadevan"},"content":"     * Constructor for the DeleteEntryCommand.","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param userInput input from the user","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"SvethaMahadevan"},"content":"    public DeleteEntryCommand(String userInput) {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"SvethaMahadevan"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"SvethaMahadevan"},"content":"        this.helpMessage \u003d \"Deletes entry from the notebook\";","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"SvethaMahadevan"},"content":"        this.syntax \u003d \"journal delete_entry n/ NOTEBOOK_NAME e/ ENTRY_NAME\";","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"SvethaMahadevan"},"content":"     * Allows for the deleting of entry.","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param ui allows for printing of a message to indicate that the entry has been added","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param storage to allow for storing of entries","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"SvethaMahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"SvethaMahadevan"},"content":"    public void execute(Ui ui, Storage storage) throws IOException, InvalidEntryIndexException,","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"SvethaMahadevan"},"content":"            InvalidNotebookIndexException, NotebookArgumentNotFoundException,","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"SvethaMahadevan"},"content":"            NotebookNotFoundForEntry, EmptyEntryNameException, EmptyNoteNameException,","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"SvethaMahadevan"},"content":"            EmptyEntryArgumentsException, EntryDoesNotExistException {","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"SvethaMahadevan"},"content":"        String[] notebookNameAndEntryName \u003d ParserJournal.parseDeleteEntryCommand(userInput, storage);","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cEntry\u003e entries \u003d storage.collectionOfEntries.getEntriesArrayList();","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"SvethaMahadevan"},"content":"        boolean isEntryPresent \u003d false;","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"SvethaMahadevan"},"content":"        int indexOfEntry \u003d 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"SvethaMahadevan"},"content":"        for (Entry entry: entries) {","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"SvethaMahadevan"},"content":"            assert notebookNameAndEntryName !\u003d null;","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"SvethaMahadevan"},"content":"            if (entry.getEntryNoteName().equals(notebookNameAndEntryName[0])","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"SvethaMahadevan"},"content":"                    \u0026\u0026 (entry.getNameOfJournalEntry().equals(notebookNameAndEntryName[1]))) {","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"SvethaMahadevan"},"content":"                isEntryPresent \u003d true;","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"SvethaMahadevan"},"content":"                indexOfEntry \u003d entries.indexOf(entry);","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"SvethaMahadevan"},"content":"                break;","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"SvethaMahadevan"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"SvethaMahadevan"},"content":"        if (isEntryPresent) {","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"SvethaMahadevan"},"content":"            entries.remove(indexOfEntry);","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"SvethaMahadevan"},"content":"            ui.printDeletedEntryMessage();","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"SvethaMahadevan"},"content":"            StorageEntries.writeEntries(storage.collectionOfEntries, storage);","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"SvethaMahadevan"},"content":"        } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"SvethaMahadevan"},"content":"            throw new EntryDoesNotExistException();","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"SvethaMahadevan":77}},{"path":"src/main/java/seedu/duke/commands/journal/DeleteNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.commands.journal;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"//@@author SvethaMahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.InvalidNotebookIndexException;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.journal.Note;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.parser.journal.ParserJournal;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.StorageNotes;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"public class DeleteNoteCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"    public String userInput;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"SvethaMahadevan"},"content":"     * Class constructor providing syntax for the HelpCommand.","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"SvethaMahadevan"},"content":"    public DeleteNoteCommand() {","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"        syntax \u003d \"journal delete_notebook [NOTE_INDEX]\";","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"SvethaMahadevan"},"content":"     * Constructor for the DeleteNoteCommand.","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param userInput input from the user.","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"SvethaMahadevan"},"content":"    public DeleteNoteCommand(String userInput) {","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"SvethaMahadevan"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"SvethaMahadevan"},"content":"        helpMessage \u003d \"Delete a notebook from list\";","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"SvethaMahadevan"},"content":"        syntax \u003d \"journal delete_notebook NOTEBOOK_INDEX\";","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"SvethaMahadevan"},"content":"     * Deletes the notebooks from a collection of notebooks.","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param ui allows for printing that note is added","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param storage to allow for storage of notes","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws InvalidNotebookIndexException if index of notebook is invalid","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"SvethaMahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"SvethaMahadevan"},"content":"    public void execute(Ui ui, Storage storage) throws IOException, InvalidNotebookIndexException {","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cNote\u003e notes \u003d storage.collectionOfNotes.getNotesArrayList();","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"SvethaMahadevan"},"content":"        int indexOfNotebookToDelete \u003d ParserJournal.parseDeleteNoteCommand(userInput);","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"SvethaMahadevan"},"content":"        if (indexOfNotebookToDelete \u003c 1 || indexOfNotebookToDelete \u003e notes.size()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"SvethaMahadevan"},"content":"            throw new InvalidNotebookIndexException();","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"SvethaMahadevan"},"content":"        ui.printDeletedNotebookMessage(indexOfNotebookToDelete);","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"SvethaMahadevan"},"content":"        storage.collectionOfNotes.deleteNote(indexOfNotebookToDelete, storage);","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"SvethaMahadevan"},"content":"        StorageNotes.writeCollectionOfNotes(storage.collectionOfNotes);","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"SvethaMahadevan":57}},{"path":"src/main/java/seedu/duke/commands/journal/FindNotebooksByTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.commands.journal;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"//@@author SvethaMahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.InvalidTagNameException;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.journal.Note;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.parser.journal.ParserJournal;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"public class FindNotebooksByTagCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"    public String userInput;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"SvethaMahadevan"},"content":"     * Class constructor providing syntax for the HelpCommand.","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"SvethaMahadevan"},"content":"    public FindNotebooksByTagCommand() {","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"SvethaMahadevan"},"content":"        syntax \u003d \"journal find [TAG_NAME]\";","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"SvethaMahadevan"},"content":"     * Constructor for the FindNotebookByTagCommand.","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param userInput input from the user.","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"SvethaMahadevan"},"content":"    public FindNotebooksByTagCommand(String userInput) {","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"SvethaMahadevan"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"SvethaMahadevan"},"content":"        helpMessage \u003d \"Find notebooks with the tag\";","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"SvethaMahadevan"},"content":"        syntax \u003d \"journal find TAG_NAME\";","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"SvethaMahadevan"},"content":"     * Finds notebooks based on tag.","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param ui allows for printing that note is added","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param storage to allow for storage of notes","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"SvethaMahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"SvethaMahadevan"},"content":"    public void execute(Ui ui, Storage storage) throws IOException, InvalidTagNameException {","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"SvethaMahadevan"},"content":"        String tagName \u003d ParserJournal.parseTagForFinding(userInput);","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cNote\u003e notes \u003d storage.collectionOfNotes.getNotesArrayList();","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"SvethaMahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"SvethaMahadevan"},"content":"        ui.printMessage(\"Notebooks with the tag \" + tagName.trim() + \" are: \");","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"SvethaMahadevan"},"content":"        for (Note note: notes) {","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"SvethaMahadevan"},"content":"            if (note.getTag().equals(tagName.trim())) {","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"SvethaMahadevan"},"content":"                ui.printMessage(note.getNoteName());","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"SvethaMahadevan"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"SvethaMahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"SvethaMahadevan":58}},{"path":"src/main/java/seedu/duke/commands/journal/ListJournalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.journal;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"//@@author SvethaMahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.journal.Entry;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.journal.Note;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"public class ListJournalCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"     * Class constructor providing syntax for the HelpCommand.","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"    public ListJournalCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"        helpMessage \u003d \"Listing notebooks with entries\";","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"SvethaMahadevan"},"content":"        syntax \u003d \"journal list\";","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"     * Allows for the listing of notebooks and entries.","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param ui allows for printing of a message to indicate that the note has been added","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param storage to print from storage","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"SvethaMahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"SvethaMahadevan"},"content":"    public void execute(Ui ui, Storage storage) {","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cNote\u003e notes \u003d storage.collectionOfNotes.getNotesArrayList();","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cEntry\u003e entries \u003d storage.collectionOfEntries.getEntriesArrayList();","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"SvethaMahadevan"},"content":"        int notebookIndex \u003d 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"SvethaMahadevan"},"content":"        int entryIndex \u003d 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"SvethaMahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"SvethaMahadevan"},"content":"        for (Note note : notes) {","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"SvethaMahadevan"},"content":"            ui.printMessage(notebookIndex + \". \" + \"The notebook \" + note.getNoteName()","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"SvethaMahadevan"},"content":"                   + \"(tag: \" + note.getTag().trim() + \")\" + \" contains:\");","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"SvethaMahadevan"},"content":"            notebookIndex +\u003d 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"SvethaMahadevan"},"content":"            for (Entry entry : entries) {","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"SvethaMahadevan"},"content":"                if (entry.getEntryNoteName().equals(note.getNoteName())) {","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"SvethaMahadevan"},"content":"                    ui.printMessage(\"\\t\" + entryIndex + \". \" + entry.getNameOfJournalEntry());","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"SvethaMahadevan"},"content":"                    entryIndex +\u003d 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"SvethaMahadevan"},"content":"                }","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"SvethaMahadevan"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"SvethaMahadevan"},"content":"            entryIndex \u003d 1;","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"SvethaMahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"SvethaMahadevan":49,"nvbinh15":1}},{"path":"src/main/java/seedu/duke/commands/journal/TagNotebookCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.commands.journal;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"//@@author SvethaMahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.EmptyNoteNameException;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.EmptyTagArgumentsException;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.EmptyTagNameException;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.InvalidTagNameException;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.NotebookArgumentNotFoundException;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.NotebookNotFoundForTagException;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.journal.Note;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.parser.journal.ParserJournal;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"SvethaMahadevan"},"content":"public class TagNotebookCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"SvethaMahadevan"},"content":"    public String userInput;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"SvethaMahadevan"},"content":"     * Class constructor providing syntax for the HelpCommand.","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"SvethaMahadevan"},"content":"    public TagNotebookCommand() {","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"SvethaMahadevan"},"content":"        syntax \u003d \"journal tag n/ [NOTE_INDEX] t/ [TAG_NAME]\";","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"SvethaMahadevan"},"content":"     * Constructor for the TagNotebookCommand.","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param userInput input from the user.","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"SvethaMahadevan"},"content":"    public TagNotebookCommand(String userInput) {","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"SvethaMahadevan"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"SvethaMahadevan"},"content":"        helpMessage \u003d \"Tag a notebook from list\";","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"SvethaMahadevan"},"content":"        syntax \u003d \"journal tag n/ NOTE_INDEX t/ TAG_NAME\";","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"SvethaMahadevan"},"content":"     * Tags the notebook.","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param ui allows for printing that note is added","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param storage to allow for storage of notes","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"SvethaMahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"SvethaMahadevan"},"content":"    public void execute(Ui ui, Storage storage) throws EmptyTagNameException, EmptyNoteNameException,","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"SvethaMahadevan"},"content":"            EmptyTagArgumentsException, NotebookArgumentNotFoundException,","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"SvethaMahadevan"},"content":"            InvalidTagNameException, IOException, NotebookNotFoundForTagException {","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"SvethaMahadevan"},"content":"        String[] tagNameAndNotebook \u003d ParserJournal.parseTagNotebookCommand(userInput, storage);","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cNote\u003e notes \u003d storage.collectionOfNotes.getNotesArrayList();","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"SvethaMahadevan"},"content":"        Note noteToBeTagged \u003d notes.get(Integer.parseInt(tagNameAndNotebook[0]) - 1);","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"SvethaMahadevan"},"content":"        noteToBeTagged.tag(tagNameAndNotebook[1], storage);","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"SvethaMahadevan"},"content":"        ui.printTaggedNotebookMessage();","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"SvethaMahadevan":59}},{"path":"src/main/java/seedu/duke/commands/module/AddModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.module;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.module.IllegalModularCreditException;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.module.IllegalModuleException;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.module.Module;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.module.ModuleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"import java.util.Locale;","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":" * A representation of the command for adding a Module.","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"public class AddModuleCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_ADD_MODULE \u003d \"I have added this module:\";","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"    ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"    String commandArgs;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor providing syntax for the HelpCommand.","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"    public AddModuleCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"        syntax \u003d \"module add c/ [MODULE_CODE] n/ [MODULE_NAME] mc/ [MODULAR_CREDITS] e/ [EXPECTED_GRADE]\";","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor.","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"     * @param commandArgs The command arguments.","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"    public AddModuleCommand(String commandArgs) {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"        this.commandArgs \u003d commandArgs;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"        this.helpMessage \u003d \"Add a module\";","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"        this.syntax \u003d \"module add c/ [MODULE_CODE] n/ [MODULE_NAME] e/ [EXPECTED_GRADE]\";","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"     * Execute the AddModuleCommand.","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"     * @param ui The component of Duke that deals with the interaction with the user.","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"     * @param storage The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"     * @throws ClickException If there is an exception of type ClickException occurs.","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"     * @throws IOException If there is an error while saving data to file.","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"    public void execute(Ui ui, Storage storage) throws ClickException, IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"        int indexOfCode \u003d commandArgs.indexOf(\"c/\");","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"        int indexOfName \u003d commandArgs.indexOf(\"n/\");","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"        int indexOfMc \u003d commandArgs.indexOf(\"mc/\");","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"        int indexOfExpectedGrade \u003d commandArgs.indexOf(\"e/\");","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"        Module module \u003d getModule(indexOfCode, indexOfName, indexOfMc, indexOfExpectedGrade);","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"        moduleManager.addNewModule(module);","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"        ui.printMessage(MESSAGE_ADD_MODULE);","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"        ui.printMessage(String.valueOf(module));","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"nvbinh15"},"content":"     * Returns a new Module based on user\u0027s input.","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"nvbinh15"},"content":"     * @param indexOfCode Index of Module code.","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"nvbinh15"},"content":"     * @param indexOfName Index of Module name.","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"nvbinh15"},"content":"     * @param indexOfMc Index of the modular credits.","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"nvbinh15"},"content":"     * @param indexOfExpectedGrade Index of Module expected grade.","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"nvbinh15"},"content":"     * @return A new Module based on user\u0027s input.","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"nvbinh15"},"content":"     * @throws IllegalModuleException If user\u0027s input is not in the correct format.","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"nvbinh15"},"content":"     * @throws IllegalModularCreditException If the modular credit is not an integer.","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"nvbinh15"},"content":"    private Module getModule(int indexOfCode, int indexOfName, int indexOfMc, int indexOfExpectedGrade)","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"nvbinh15"},"content":"            throws IllegalModuleException, IllegalModularCreditException {","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"nvbinh15"},"content":"        String code;","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"nvbinh15"},"content":"        String name;","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"nvbinh15"},"content":"        int modularCredits;","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"nvbinh15"},"content":"        String expectedGrade;","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"nvbinh15"},"content":"        Module module;","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"nvbinh15"},"content":"        boolean isValidIndexes \u003d isValidIndexes(indexOfCode, indexOfName, indexOfMc, indexOfExpectedGrade);","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"nvbinh15"},"content":"        if (!isValidIndexes) {","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"nvbinh15"},"content":"            throw new IllegalModuleException();","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"nvbinh15"},"content":"        if (indexOfName \u003d\u003d -1 \u0026\u0026 indexOfMc \u003d\u003d -1 \u0026\u0026 indexOfExpectedGrade \u003d\u003d -1) {","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"nvbinh15"},"content":"            code \u003d commandArgs.substring(indexOfCode + 2).strip().toUpperCase();","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"nvbinh15"},"content":"            module \u003d new Module(code);","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"nvbinh15"},"content":"        } else if (indexOfMc \u003d\u003d -1 \u0026\u0026 indexOfExpectedGrade \u003d\u003d -1) {","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"nvbinh15"},"content":"            code \u003d commandArgs.substring(indexOfCode + 2, indexOfName).strip().toUpperCase();","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"nvbinh15"},"content":"            name \u003d commandArgs.substring(indexOfName + 2).strip();","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"nvbinh15"},"content":"            module \u003d new Module(code, name);","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"nvbinh15"},"content":"        } else if (indexOfExpectedGrade \u003d\u003d -1) {","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"nvbinh15"},"content":"            code \u003d commandArgs.substring(indexOfCode + 2, indexOfName).strip().toUpperCase();","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"nvbinh15"},"content":"            name \u003d commandArgs.substring(indexOfName + 2, indexOfMc).strip();","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"nvbinh15"},"content":"            try {","lastModifiedDate":"2021-11-02"},{"lineNumber":101,"author":{"gitId":"nvbinh15"},"content":"                modularCredits \u003d Integer.parseInt(commandArgs.substring(indexOfMc + 3).strip());","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"nvbinh15"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":103,"author":{"gitId":"nvbinh15"},"content":"                throw new IllegalModularCreditException();","lastModifiedDate":"2021-11-02"},{"lineNumber":104,"author":{"gitId":"nvbinh15"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":105,"author":{"gitId":"nvbinh15"},"content":"            module \u003d new Module(code, name, modularCredits);","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"nvbinh15"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"nvbinh15"},"content":"            code \u003d commandArgs.substring(indexOfCode + 2, indexOfName).strip().toUpperCase();","lastModifiedDate":"2021-11-02"},{"lineNumber":108,"author":{"gitId":"nvbinh15"},"content":"            name \u003d commandArgs.substring(indexOfName + 2, indexOfMc).strip();","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"nvbinh15"},"content":"            try {","lastModifiedDate":"2021-11-02"},{"lineNumber":110,"author":{"gitId":"nvbinh15"},"content":"                modularCredits \u003d Integer.parseInt(commandArgs.substring(indexOfMc + 3, indexOfExpectedGrade).strip());","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"nvbinh15"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":112,"author":{"gitId":"nvbinh15"},"content":"                throw new IllegalModularCreditException();","lastModifiedDate":"2021-11-02"},{"lineNumber":113,"author":{"gitId":"nvbinh15"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":114,"author":{"gitId":"nvbinh15"},"content":"            expectedGrade \u003d commandArgs.substring(indexOfExpectedGrade + 2).strip().toUpperCase();","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"nvbinh15"},"content":"            module \u003d new Module(code, name, modularCredits, expectedGrade);","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"nvbinh15"},"content":"        return module;","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"nvbinh15"},"content":"     * Checks if the indexes of the parameters from user\u0027s input is correct or not.","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"nvbinh15"},"content":"     * @param indexOfCode Index of Module code.","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"nvbinh15"},"content":"     * @param indexOfName Index of Module name.","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"nvbinh15"},"content":"     * @param indexOfMc Index of the modular credits.","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"nvbinh15"},"content":"     * @param indexOfExpectedGrade Index of Module expected grade.","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"nvbinh15"},"content":"     * @return true if the indexes are valid, false otherwise.","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"nvbinh15"},"content":"    private boolean isValidIndexes(int indexOfCode, int indexOfName, int indexOfMc, int indexOfExpectedGrade) {","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"nvbinh15"},"content":"        boolean hasCode \u003d indexOfCode !\u003d -1;","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"nvbinh15"},"content":"        boolean isValidCodeOnly \u003d (indexOfName \u003d\u003d -1) \u0026\u0026 (indexOfMc \u003d\u003d -1) \u0026\u0026 (indexOfExpectedGrade \u003d\u003d -1);","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"nvbinh15"},"content":"        boolean isValidCodeAndName \u003d (indexOfName !\u003d -1) \u0026\u0026 (indexOfMc \u003d\u003d -1) \u0026\u0026 (indexOfExpectedGrade \u003d\u003d -1)","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"nvbinh15"},"content":"                \u0026\u0026 (indexOfName \u003e indexOfCode);","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"nvbinh15"},"content":"        boolean isValidCodeNameAndMc \u003d (indexOfName !\u003d -1) \u0026\u0026 (indexOfMc !\u003d -1) \u0026\u0026 (indexOfExpectedGrade \u003d\u003d -1)","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"nvbinh15"},"content":"                \u0026\u0026 (indexOfName \u003e indexOfCode) \u0026\u0026 (indexOfMc \u003e indexOfName);","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"nvbinh15"},"content":"        boolean isValidCodeNameMcAndGrade \u003d (indexOfName !\u003d -1) \u0026\u0026 (indexOfMc !\u003d -1) \u0026\u0026 (indexOfExpectedGrade !\u003d -1)","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"nvbinh15"},"content":"                \u0026\u0026 (indexOfName \u003e indexOfCode) \u0026\u0026 (indexOfMc \u003e indexOfName) \u0026\u0026 (indexOfExpectedGrade \u003e indexOfMc);","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"nvbinh15"},"content":"        boolean isValidIndexes \u003d hasCode \u0026\u0026 (isValidCodeOnly || isValidCodeAndName","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"nvbinh15"},"content":"                || isValidCodeNameAndMc || isValidCodeNameMcAndGrade);","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"nvbinh15"},"content":"        return isValidIndexes;","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"nvbinh15":143,"ngnigel99":1}},{"path":"src/main/java/seedu/duke/commands/module/CapEditInfoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.module;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.module.IllegalCurrentCapException;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.module.IllegalTotalMcTakenException;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.module.ModuleManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":" * A representation of the command for editing information related to CAP.","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"public class CapEditInfoCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    public static final String GET_CAP_QUESTION \u003d \"What is your current cumulative average point (CAP)?\";","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"    public static final String GET_MC_QUESTION \u003d \"How many modular credits contributing to CAP you have taken?\";","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"    public static final String CAP_EDIT_CONFIRM_MESSAGE \u003d \"Thank you for your information. \"","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"            + \"You can view your expected CAP by keying in cap expected\";","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"    ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor.","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"    public CapEditInfoCommand() {","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"        helpMessage \u003d \"Get user\u0027s information to calculate expected CAP\";","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"        syntax \u003d \"cap edit\";","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"     * Executes the CapEditInfoCommand.","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"     * @param ui      The component of Duke that deals with the interaction with the user.","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"     * @param storage The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"     * @throws ClickException If there is an exception of type ClickException occurs.","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"     * @throws IOException If there is an error while saving data to file.","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"    public void execute(Ui ui, Storage storage) throws ClickException, IOException {","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"        ui.printMessage(GET_CAP_QUESTION);","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"        double currentCap \u003d Double.parseDouble(ui.getUserInput(scanner));","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"        if (currentCap \u003c 0.0 || currentCap \u003e 5.0) {","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"            throw new IllegalCurrentCapException();","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"        ui.printMessage(GET_MC_QUESTION);","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"        int totalMcTaken \u003d Integer.parseInt(ui.getUserInput(scanner));","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"        if (totalMcTaken \u003c 0) {","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"            throw new IllegalTotalMcTakenException();","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"        ui.printMessage(CAP_EDIT_CONFIRM_MESSAGE);","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"        moduleManager.setCapInfo(currentCap, totalMcTaken);","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"nvbinh15":62}},{"path":"src/main/java/seedu/duke/commands/module/DeleteModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.module;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.module.IllegalModuleIndexException;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.module.ModuleList;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.module.ModuleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":" * A representation of the command for deleting a Module.","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"public class DeleteModuleCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_DELETE_MODULE \u003d \"I have deleted this module:\";","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"    String commandArgs;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"    private static ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor providing syntax for the HelpCommand.","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"    public DeleteModuleCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"        syntax \u003d \"module delete [INDEX]\";","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor.","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"     * @param commandArgs The command arguments.","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"    public DeleteModuleCommand(String commandArgs) {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"        this.commandArgs \u003d commandArgs;","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"        this.helpMessage \u003d \"Delete a listed module\";","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"        this.syntax \u003d \"module delete [MODULE_INDEX]\";","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"     * Executes the DeleteModuleCommand.","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"     * @param ui      The component of Duke that deals with the interaction with the user.","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"     * @param storage The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"     * @throws ClickException If there is an exception of type ClickException occurs.","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"     * @throws Exception If there is an exception of type other than ClickException occurs.","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"    public void execute(Ui ui, Storage storage) throws ClickException, Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"        int moduleIndex \u003d Integer.parseInt(commandArgs.strip()) - 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"        moduleManager.deleteModule(moduleIndex);","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"nvbinh15":53}},{"path":"src/main/java/seedu/duke/commands/module/GetExpectedCapCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.module;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.module.ModuleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":" * A representation of the command for getting expected CAP.","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"public class GetExpectedCapCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_EXPECTED_CAP \u003d \"Your expected CAP based on the modules you are taking is: \";","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    public static final String CAP_FORMAT \u003d \"%,.2f\";","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"    private static ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor.","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"    public GetExpectedCapCommand() {","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"        this.helpMessage \u003d \"Get the expected CAP\";","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"        this.syntax \u003d \"cap expected\";","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"     * Executes the GetCapCommand.","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"     * @param ui      The component of Duke that deals with the interaction with the user.","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"     * @param storage The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"     * @throws IOException If there is an exception while reading data from file.","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"    public void execute(Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"        double expectedCap \u003d moduleManager.getExpectedCap();","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"        ui.printMessage(\"Your current CAP is \" + moduleManager.getCurrentCap()","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"                + \", and the total of MCs contributing to your CAP is \" + moduleManager.getTotalMcTaken());","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"        ui.printMessage(MESSAGE_EXPECTED_CAP + String.format(CAP_FORMAT, expectedCap));","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"nvbinh15":44}},{"path":"src/main/java/seedu/duke/commands/module/ListModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.module;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.module.Module;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.module.ModuleList;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":" * A representation of the command for listing Modules.","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"public class ListModuleCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_NO_MODULE \u003d \"You don\u0027t have any modules\";","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_LISTING_MODULES \u003d \"Here are the modules in your list:\";","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor.","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"    public ListModuleCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"        helpMessage \u003d \"List all added modules\";","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"        syntax \u003d \"module list\";","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"     * Executes the ListModuleCommand.","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"     * @param ui      The component of Duke that deals with the interaction with the user.","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"     * @param storage The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"     * @throws ClickException If there is an exception of type ClickException occurs.","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"     * @throws Exception If there is an exception of type other than ClickException occurs.","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"    public void execute(Ui ui, Storage storage) throws ClickException, Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"        ModuleList moduleList \u003d storage.storageModule.readModulesFromFile();","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"        if (moduleList.getNumberOfModules() \u003c\u003d 0) {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"            ui.printMessage(MESSAGE_NO_MODULE);","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"            ui.printLine();","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"            return;","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"        ui.printMessage(MESSAGE_LISTING_MODULES);","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"        for (Module m : moduleList.getModules()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"            ui.printMessage(i + \". \" + m);","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"            i++;","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"nvbinh15":53}},{"path":"src/main/java/seedu/duke/commands/zoom/AddZoomCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.zoom;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.storage.StorageException;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.exceptions.module.IllegalModuleException;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.exceptions.zoom.InvalidZoomLinkException;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.storage.StorageZoom;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"shoibloya"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"shoibloya"},"content":"//@@author shoibloya","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"shoibloya"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"shoibloya"},"content":" * This is a representation of the AddZoomCommand command.","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"shoibloya"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"shoibloya"},"content":"public class AddZoomCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"shoibloya"},"content":"    private String moduleName;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"shoibloya"},"content":"    private String zoomLink;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"shoibloya"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"shoibloya"},"content":"     * Constructor for help function.","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"shoibloya"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"shoibloya"},"content":"    public AddZoomCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"shoibloya"},"content":"        syntax \u003d \"zoom add [MODULE_CODE] [ZOOM_LINK]\";","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"shoibloya"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"shoibloya"},"content":"     * Class constructor.","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"shoibloya"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"shoibloya"},"content":"     * @param moduleName Name of the module","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"shoibloya"},"content":"     * @param zoomLink Zoom link","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"shoibloya"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"shoibloya"},"content":"    public AddZoomCommand(String moduleName, String zoomLink) {","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"shoibloya"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"shoibloya"},"content":"        this.zoomLink \u003d zoomLink;","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"shoibloya"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"shoibloya"},"content":"     * Returns the zoom link.","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"shoibloya"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"shoibloya"},"content":"     * @return The zoom link.","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"shoibloya"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"shoibloya"},"content":"    public String getZoomLink() {","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"shoibloya"},"content":"        return zoomLink;","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"shoibloya"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"shoibloya"},"content":"     * Executes the AddZoomCommand function.","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"shoibloya"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"shoibloya"},"content":"     * @param ui The component of Duke that deals with the interaction with the user.","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"shoibloya"},"content":"     * @param storage The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"shoibloya"},"content":"     * @throws IOException throws the Input Output Exception","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"shoibloya"},"content":"     * @throws IllegalModuleException throws the Illegal Module Exception","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"shoibloya"},"content":"     * @throws StorageException throws the Storage Exception","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"shoibloya"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"shoibloya"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"shoibloya"},"content":"    public void execute(Ui ui, Storage storage) throws IOException, IllegalModuleException,","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"shoibloya"},"content":"            StorageException, InvalidZoomLinkException {","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"shoibloya"},"content":"        if (zoomLink.contains(\"https://\")) {","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"shoibloya"},"content":"            ui.printLine();","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"shoibloya"},"content":"            try {","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"shoibloya"},"content":"                StorageZoom.saveLink(moduleName, zoomLink);","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"shoibloya"},"content":"                ui.printLine();","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"shoibloya"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"shoibloya"},"content":"                ui.printMessage(\"Unsuccessful\");","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"shoibloya"},"content":"                ui.printLine();","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"shoibloya"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"shoibloya"},"content":"        } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"shoibloya"},"content":"            throw new InvalidZoomLinkException();","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"shoibloya"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"shoibloya"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"nvbinh15":2,"ngnigel99":1,"shoibloya":71}},{"path":"src/main/java/seedu/duke/commands/zoom/ListZoomLinksCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands.zoom;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.storage.StorageZoom;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"shoibloya"},"content":"//@@author shoibloya","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"shoibloya"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"shoibloya"},"content":" * A representation of the command to list all the zoom links.","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"shoibloya"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"shoibloya"},"content":"public class ListZoomLinksCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"shoibloya"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"shoibloya"},"content":"     * Constructor to display syntax via the help feature.","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"shoibloya"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"shoibloya"},"content":"    public ListZoomLinksCommand() {","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"shoibloya"},"content":"        syntax \u003d \"zoom list\";","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"shoibloya"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"shoibloya"},"content":"     * Function to execute the ListZoomLinks command.","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"shoibloya"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"shoibloya"},"content":"     * @param ui      The component of Duke that deals with the interaction with the user.","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"shoibloya"},"content":"     * @param storage The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"shoibloya"},"content":"     * @throws Exception throws the default exception.","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"shoibloya"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"shoibloya"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"shoibloya"},"content":"    public void execute(Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"shoibloya"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"shoibloya"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"shoibloya"},"content":"            StorageZoom.displayLinks();","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"shoibloya"},"content":"            ui.printLine();","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"shoibloya"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"shoibloya"},"content":"            ui.printLine();","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"shoibloya"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"shoibloya"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"nvbinh15":2,"shoibloya":37}},{"path":"src/main/java/seedu/duke/commands/zoom/OpenZoomLink.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shoibloya"},"content":"package seedu.duke.commands.zoom;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.storage.StorageZoom;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"shoibloya"},"content":"//@@author shoibloya","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"shoibloya"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"shoibloya"},"content":" * This class represents the zoom command to open a link.","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"shoibloya"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"shoibloya"},"content":"public class OpenZoomLink extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"shoibloya"},"content":"    private String module;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"shoibloya"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"shoibloya"},"content":"     * Constructor to print syntax via the help feature.","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"shoibloya"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"shoibloya"},"content":"    public OpenZoomLink() {","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"shoibloya"},"content":"        syntax \u003d \"zoom open [MODULE_CODE]\";","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"shoibloya"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"shoibloya"},"content":"     * Class constructor.","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"shoibloya"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"shoibloya"},"content":"     * @param module The module","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"shoibloya"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"shoibloya"},"content":"    public OpenZoomLink(String module) {","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"shoibloya"},"content":"        this.module \u003d module;","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"shoibloya"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"shoibloya"},"content":"     * Execute the OpenZoomLink command.","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"shoibloya"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"shoibloya"},"content":"     * @param ui      The component of Duke that deals with the interaction with the user.","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"shoibloya"},"content":"     * @param storage The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"shoibloya"},"content":"     * @throws Exception Throws the default exception","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"shoibloya"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"shoibloya"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"shoibloya"},"content":"    public void execute(Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"shoibloya"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"shoibloya"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"shoibloya"},"content":"            StorageZoom.openZoomLink(module);","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"shoibloya"},"content":"            ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"shoibloya"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"shoibloya"},"content":"            ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"shoibloya"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"shoibloya"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"shoibloya":49}},{"path":"src/main/java/seedu/duke/constants/CommandConstants.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.constants;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":" * A class that contains constants related to Commands.","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"public class CommandConstants {","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"    public static final String COMMAND_EXIT \u003d \"exit\";","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"    public static final String COMMAND_CALENDAR \u003d \"calendar\";","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"    public static final String COMMAND_FOOD     \u003d \"food\";","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    public static final String COMMAND_SUFFIX_ADD \u003d \"add\";","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"    public static final String COMMAND_SUFFIX_CLEAR \u003d \"clear\";","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    public static final String COMMAND_SUFFIX_LIST \u003d \"list\";","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"    public static final String COMMAND_ADD_NOTE \u003d \"notebook\";","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"    public static final String COMMAND_DELETE_NOTE \u003d \"delete_notebook\";","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"    public static final String COMMAND_DELETE_ENTRY \u003d \"delete_entry\";","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"    public static final String COMMAND_ADD_ENTRY \u003d \"entry\";","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"    public static final String COMMAND_JOURNAL_LIST \u003d \"list\";","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"    public static final String COMMAND_JOURNAL_TAG \u003d \"tag\";","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"    public static final String COMMAND_JOURNAL_FIND \u003d \"find\";","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"SvethaMahadevan"},"content":"    public static final String COMMAND_NOTE \u003d \"journal\";","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"    public static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"    public static final String COMMAND_DISPLAY \u003d \"display\";","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"    public static final String COMMAND_LECTURE \u003d \"lecture\";","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"    public static final String COMMAND_MODULE \u003d \"module\";","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"    public static final String COMMAND_SUFFIX_DELETE \u003d \"delete\";","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"    public static final String COMMAND_SUFFIX_EDIT \u003d \"edit\";","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"    public static final String COMMAND_CAP \u003d \"cap\";","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"    public static final String COMMAND_SUFFIX_EXPECTED \u003d \"expected\";","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"shoibloya"},"content":"    public static final String COMMAND_HElP \u003d \"help\";","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"shoibloya"},"content":"    public static final String COMMAND_ZOOM \u003d \"zoom\";","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"shoibloya"},"content":"    public static final String COMMAND_ZOOM_SUFFIX_ADD \u003d \"add\";","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"shoibloya"},"content":"    public static final String COMMAND_ZOOM_SUFFIX_OPEN \u003d \"open\";","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"    public static final String COMMAND_ZOOM_SUFFIX_LIST \u003d \"show\";","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"    public static final String COMMAND_SUFFIX_VIEW \u003d \"view\";","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"    public static final String COMMAND_SUFFIX_FIND \u003d \"find\";","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"    public static final String COMMAND_SUFFIX_RADD \u003d \"radd\";","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"    public static final String COMMAND_SUFFIX_CLT \u003d \"clt\";","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"    //date constants","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"    public static final String DATE_CONSTANT \u003d \"dd-MM-yyyy\";","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"    //note: this string is to be modified by uncommenting the potion in help_command by the dev team","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"    // so it\u0027s only partially \"hard-coded\"","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"    public static  String HELP_MESSAGES \u003d","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"            \"\\tAdd Entry  : journal entry n/ [NOTEBOOK_NAME] e/ [ENTRY_NAME]\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"                    + \"\\tAdd Food  : food add n/ [FOOD_NAME] c/ [CALORIE] {d/ DD-MM-YYYY(DATE_RECORDED)}\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"                    + \"\\tAdd Food From Reference  : food radd s/ [STORE_INDEX] i/ [ITEM_INDEX]\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"          + \"\\tAdd Lecture  : calendar lecture m/ [MODULE_CODE] s/ [DD-MM-YYYY(START_DATE)] e/ [DD-MM-YYYY(END_DATE)]\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"            + \"\\tAdd Module  : module add c/ [MODULE_CODE] n/ [MODULE_NAME] mc/ [MODULAR_CREDITS] e/ [EXPECTED_GRADE]\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"                    + \"\\tAdd Note  : journal notebook n/ [NOTEBOOK_NAME]\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"                    + \"\\tAdd Todo  : calendar todo n/ [TASK_NAME] d/ [DD-MM-YYYY]\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"                    + \"\\tAdd Zoom  : zoom add [MODULE_CODE] [ZOOM_LINK]\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"                    + \"\\tCap Edit Info  : cap edit\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"                    + \"\\tClear Food  : food clear\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"                    + \"\\tDelete Entry  : journal delete_entry n/ [NOTEBOOK_NAME] e/ [ENTRY_NAME]\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"                    + \"\\tDelete Food  : food delete [INDEX]\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"                    + \"\\tDelete Lecture  : calendar delete lec [LECTURE_INDEX]\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"                    + \"\\tDelete Module  : module delete [INDEX]\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"                    + \"\\tDelete Note  : journal delete_notebook [NOTE_INDEX]\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"                    + \"\\tDelete Task  : calendar delete task [TASK_INDEX]\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"                    + \"\\tDisplay  : calendar display [MM-YYYY]\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"                    + \"\\tEdit Tasks  : calendar edit [TASK_INDEX]\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"                    + \"\\tFind Food By Calorie Count  : food clt [Calories]\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"                    + \"\\tFind Food With Date  : food find [DD-MM-YYYY]\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"                    + \"\\tFind Notebooks By Tag  : journal find [TAG_NAME]\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"                    + \"\\tGet Expected Cap  : cap expected\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"                    + \"\\tList Food  : food list\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"                    + \"\\tList Journal  : journal list\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"                    + \"\\tList Lectures  : calendar list lec\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"                    + \"\\tList Module  : module list\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"                    + \"\\tList Tasks  : calendar list task\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"                    + \"\\tList Zoom Links  : zoom list\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"                    + \"\\tOpen Zoom Link  : zoom open [MODULE_CODE]\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"                    + \"\\tTag Notebook  : journal tag n/ [NOTE_INDEX] t/ [TAG_NAME]\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"ngnigel99"},"content":"                    + \"\\tView Reference Food  : food view, food view [STORE_INDEX], food view all \";","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"SvethaMahadevan":8,"nvbinh15":14,"ngnigel99":46,"swatimahadevan":5,"shoibloya":5}},{"path":"src/main/java/seedu/duke/constants/ExceptionMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.constants;","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.Messages.NEW_LINE;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"public class ExceptionMessages {","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_ILLEGAL_COMMAND \u003d \"Illegal command. Type help to get the supported commands.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_ILLEGAL_MODULE_INDEX \u003d \"Illegal module index.\"","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"            + \" Index must be an integer between 1 and the total of modules you have.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_ILLEGAL_TOTAL_MC_TAKEN \u003d \"Number of total MC taken must be a positive integer.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_ILLEGAL_CURRENT_CAP \u003d \"CAP must be a real number between 0.0 and 5.0\";","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_ILLEGAL_EXPECTED_GRADE \u003d \"Illegal expected grade.\"","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"            + \"The supported grades are A+, A, A-, B+, B, B-, C+, C, D+, D, F, CS, CU, and NA.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_ILLEGAL_MODULE \u003d \"Illegal module.\" + NEW_LINE","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"            + \"Please follow the syntax module add c/MODULE_CODE {n/MODULE_NAME mc/MODULAR CREDITS e/EXPECTED_GRADE}\";","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_ILLEGAL_MODULAR_CREDIT \u003d \"The modular credit must be a positive integer.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_DUPLICATE_MODULE \u003d \"The module already exists. \"","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"            + \"Type module list to see the list of module.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"nvbinh15":21}},{"path":"src/main/java/seedu/duke/constants/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.constants;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"public class Messages {","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"    public static final String LOGO \u003d \" _____ _  _     _\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"            + \"\\t\" + \"/  __ \\\\ |(_)   | |\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"            + \"\\t\" + \"| /  \\\\/ |_  ___| | __\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"            + \"\\t\" + \"| \\\\__/\\\\ | | (__|   \u003c\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"            + \"\\t\" + \"\\\\_____/_|_|\\\\___|_|\\\\_\\\\\\n\\n\";","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"    public static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"    public static final String LINE_PREFIX \u003d \"\\t\";","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"    public static final String LINE_SEPARATOR \u003d System.lineSeparator();","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    public static final String NEW_LINE \u003d LINE_SEPARATOR + LINE_PREFIX;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"    public static final String HORIZONTAL_LINE \u003d LINE_PREFIX + \"__________________________________________________\";","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    public static final String MESSAGE_GREETING \u003d LINE_PREFIX + \"Hello! I\u0027m Click\"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"            + NEW_LINE + \"What can I do for you?\";","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_GOODBYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    // Food partition","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_DONE_CLEAR_LIST \u003d \"Cleared food record list for today!\";","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_ADD_FOOD_SYNTAX \u003d \"Please enter the name of the food n/ [TEXT] \"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"                                                        + \"followed by the calorie count c/ [INT]\"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"                                                        + \"optional d/ {DD-MM-YYYY}\";","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    public static final String NON_NULL_INPUT \u003d \"Please do not leave fields empty!\";","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    public static final String RECORD_ATTRIBUTE_DIVIDER \u003d \" : \";","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"    public static final String LIST_PROPER_FEATURE  \u003d  \"Please list a proper feature tagged with \";","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_NOT_AN_INT \u003d \"Please only enter Integers\";","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_ERROR_MESSAGE_GENERAL \u003d \"Oops, error encountered.\";","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_DONE_DELETE_INDEX \u003d \"Deleted food record \";","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"    public static final String CALORIES_NOT_FOUND \u003d \"Please enter the calories divider c/\";","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_FOOD_INDEX_NOT_FOUND \u003d","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"            \"Cannot find index of food record to delete! Use \u0027food list\u0027 or \u0027food view\u0027 first\"","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"            + \" to find desired food record index\";","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_NAME_DIVIDER \u003d \"Please enter a name divider: n/\";","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_DATE_NOT_FOUND \u003d \"Date not found, try again.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_NO_CALORIE_COUNT \u003d \"clt keyword not found!\";","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_NO_INPUT_CALORIES \u003d \"no calories entered!\";","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_NON_NEGATIVE_CALORIES \u003d \"calorie count cannot be less than 0.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_DONE_PRINTING_LIST \u003d \"Wow, thats a lot of options! Finished printing\";","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"    //end of Food","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"    //help","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_ONLY_HELP \u003d \"Wrong command syntax for help, type help.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_RUNTIME_MODE \u003d \"***RUNTIME MODE ENABLED***\"","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"            + \"\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"            + \"\\t\"","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"            + \"Please revert mode with `help rt` if you\u0027re not a developer!\";","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_ADDING_ITEM \u003d \"Nice, adding the record - \";","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_NO_FOOD_FOUND \u003d \"No food found on that day!\";","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_CANNOT_FIND_STORE \u003d \"Can\u0027t find store \";","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_INVALID_ITEM \u003d \"Invalid item index: \";","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_INVALID_STORE \u003d \"Invalid store index: \";","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_NO_STORE_DIVIDER \u003d \"No store divider `s/` found!\";","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_NO_INDEX_DIVIDER \u003d \"No item divider `i/` found!\";","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_STORAGE_ERROR \u003d \"There is something wrong with the Storage file\";","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_MISSING_DIVIDER \u003d \"Missing divider: \";","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_MISSING_ARGUMENT \u003d \"Missing arguments!\";","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_MISSING_SPECIFIC_ARGUMENT \u003d \"Missing argument: \";","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"swatimahadevan"},"content":"    //@author swatim","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"swatimahadevan"},"content":"    //SCHEDULE BEGIN","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"swatimahadevan"},"content":"    public static String CALENDAR_HEADER_LINE \u003d \"________________________________________________________\";","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"swatimahadevan"},"content":"    public static final String INVALID_CALENDAR_INPUT \u003d \" Invalid Input for Calendar Command! \";","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"swatimahadevan"},"content":"    public static final int MONTH_UPPER_LIMIT \u003d 12;","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"swatimahadevan"},"content":"    public static final int MONTH_LOWER_LIMIT \u003d 1;","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"swatimahadevan"},"content":"    public static final String TASK_FORMATTER \u003d \"  |\";","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"swatimahadevan"},"content":"    public static final String CALENDER_DATE_FORMATTER \u003d \"               |\";","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"swatimahadevan"},"content":"    public static final String SEPARATOR_DISPLAY \u003d \"|\";","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"swatimahadevan"},"content":"    public static final String EMPTY_SPACE \u003d \"\";","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"swatimahadevan"},"content":"    public static final int NUMBER_OF_DAYS_IN_WEEK \u003d 7;","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"swatimahadevan"},"content":"    public static final String LEAVE_EMPTY_IN_DISPLAY \u003d \"  \";","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"swatimahadevan"},"content":"    public static final String[] DAYS_IN_MONTH \u003d {\"01\", \"02\", \"03\", \"04\", \"05\",","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"swatimahadevan"},"content":"        \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\", \"13\",","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"swatimahadevan"},"content":"        \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\",","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"swatimahadevan"},"content":"        \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\"};","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"swatimahadevan"},"content":"    public static final String TODO \u003d \"todo\";","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"swatimahadevan"},"content":"    public static final int INDEX_TODO_DESCRIPTION \u003d 1;","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"swatimahadevan"},"content":"    public static final int INDEX_TODO_DATE \u003d 2;","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"swatimahadevan"},"content":"    public static final int TOTAL_SIZE \u003d 32;","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"swatimahadevan"},"content":"    public static final String ADDED_TASK \u003d \"Task has been added successfully!\";","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"swatimahadevan"},"content":"    public static final String LIST_TASKS_HEADER \u003d \"Here\u0027s your task list:\";","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"swatimahadevan"},"content":"    public static final String DISPLAY_LINE \u003d \"-------------------------\"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"swatimahadevan"},"content":"            + \"----------------------------------------\"","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"swatimahadevan"},"content":"            + \"---------------------------------------\"","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"swatimahadevan"},"content":"            + \"-----------------------\";","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"swatimahadevan"},"content":"    public static final String DAY_DEMARCATION \u003d \"|\";","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"swatimahadevan"},"content":"    public static final String NO_TASK_IN_DAY \u003d \"                 |\";","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"swatimahadevan"},"content":"    public static final String DELETED_TASK \u003d \"Task has been deleted!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"swatimahadevan"},"content":"    public static final String CALENDAR_INVALID_ARGS \u003d \"\u0027calendar\u0027 should be followed by a suffixed command!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"swatimahadevan"},"content":"    public static final String CALENDAR_EDIT_DELETE_INVALID_ARGS \u003d \"Task index not entered...\";","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"swatimahadevan"},"content":"    public static final String NAME_ABSENT \u003d \" Task name not found after n/\";","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"swatimahadevan"},"content":"    public static final String DELIMITER_DATE \u003d \"-\";","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"swatimahadevan"},"content":"    public static final int CALENDAR_COMMAND_SPLIT \u003d 9;","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"swatimahadevan"},"content":"    public static final int INDEX_ZERO \u003d 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"swatimahadevan"},"content":"    public static final int INDEX_ONE \u003d 1;","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"swatimahadevan"},"content":"    public static final String LECTURE_TASK_SPLIT \u003d \" **------------**  **------------** \"","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"swatimahadevan"},"content":"                    + \" **------------**  **------------**  \"","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"swatimahadevan"},"content":"                    + \"**------------**  **------------**  **------------** \";","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"swatimahadevan"},"content":"    //SCHEDULE END","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"shoibloya"},"content":"    //HELP BEGIN","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"shoibloya"},"content":"    public static final String HELP_MESSAGE \u003d \"List of valid commands:\\n1. module\\n2. calendar\\n3. food\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"shoibloya"},"content":"            + \"4. exit\\nType help \u003cCOMMAND_NAME\u003e to get a detailed description\";","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"shoibloya"},"content":"    public static final String HELP_MESSAGE_MODULE \u003d \"\";","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"shoibloya"},"content":"    public static final String HELP_MESSAGE_CALENDAR \u003d \"\";","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"ngnigel99"},"content":"    public static final String HELP_MESSAGE_FOOD \u003d \"food add n/ [FOOD_NAME] c/ [CALORIE]\\nfood list\\nfood clear\";","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"shoibloya"},"content":"    public static final String HELP_MESSAGE_EXIT \u003d \"Saves your current progress and exits the application\";","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"shoibloya"},"content":"    //HELP END","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"ngnigel99"},"content":"    //misc error messages","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_FILE_NOT_FOUND \u003d \"File not found!\";","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_FULL_COMMAND_NOT_EXISTS \u003d \"Please enter the full command!\";","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":14,"ngnigel99":46,"swatimahadevan":46,"shoibloya":8}},{"path":"src/main/java/seedu/duke/constants/ModuleConstants.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.constants;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"public class ModuleConstants {","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"nvbinh15":4}},{"path":"src/main/java/seedu/duke/exceptions/ClickException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":" * A base class that represents checked specific exceptions thrown by Click.","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"public class ClickException extends Exception {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"     * Default constructor.","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"    public ClickException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"     * Constructor with a specified error message.","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"     * @param message The error message to be printed when exception thrown.","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"    public ClickException(String message) {","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"        super(message);","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":26}},{"path":"src/main/java/seedu/duke/exceptions/ExceptionHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.syntax.WrongDividerOrderException;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":" * A class that handles exceptions thrown by Duke.","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"public class ExceptionHandler {","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"     * Handles duke exceptions.","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"     * @param e Exception of type DukeException thrown by Duke.","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    public static void handleDukeExceptions(ClickException e, String userInput) {","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"        ui.printMessage(e.getMessage());","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"     * Handles other exceptions.","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"     * @param e Exception of types other than DukeException thrown by Duke.","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"    public static void handleOtherExceptions(Exception e) {","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"        if (e instanceof NumberFormatException) {","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"            Ui.printOnlyIntegers();","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"        } else if (e instanceof NullPointerException) {","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"        } else if (e instanceof DateTimeParseException) {","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"            ui.printLine();","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"            ui.printMessage(\"Please follow the format DD-MM-YYYY!\");","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"            ui.printLine();","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"        } else if (e instanceof WrongDividerOrderException) {","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"            ui.printLine();","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"            ui.printMessage(\"Wrong divider order!\");","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"            ui.printLine();","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"        } else {","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"            ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"            ui.printMessage(\"OOPs, invalid command, try help for more commands.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"            ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"nvbinh15":32,"ngnigel99":18}},{"path":"src/main/java/seedu/duke/exceptions/calendar/CalendarIndexNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions.calendar;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"public class CalendarIndexNotFoundException extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"    public CalendarIndexNotFoundException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"        Ui.printMessage(\"Cannot find index of task to delete! Use \u0027calendar list task\u0027 first\"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"                + \" to find desired task index\");","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"nvbinh15":1,"ngnigel99":2,"swatimahadevan":7}},{"path":"src/main/java/seedu/duke/exceptions/calendar/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.exceptions.calendar;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"public class DuplicateTaskException extends Exception {","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"    public DuplicateTaskException(String message) {","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"        Ui.printMessage(message);","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"swatimahadevan":9}},{"path":"src/main/java/seedu/duke/exceptions/calendar/IncorrectCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.exceptions.calendar;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"public class IncorrectCommandException extends Exception {","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"    public IncorrectCommandException(String message) {","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"        Ui.printMessage(message);","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"swatimahadevan":9}},{"path":"src/main/java/seedu/duke/exceptions/calendar/IncorrectNumberOfArgumentsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.exceptions.calendar;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"public class IncorrectNumberOfArgumentsException extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"    public IncorrectNumberOfArgumentsException(String message) {","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"        Ui.printMessage(message);","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"swatimahadevan":9}},{"path":"src/main/java/seedu/duke/exceptions/calendar/InvalidDateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.exceptions.calendar;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"public class InvalidDateException extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"    private static String message \u003d \"Invalid date given!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"    public InvalidDateException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"        Ui.printMessage(message);","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"        return message;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"swatimahadevan":16}},{"path":"src/main/java/seedu/duke/exceptions/calendar/InvalidMonthException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.exceptions.calendar;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"public class InvalidMonthException extends ClickException {","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"    private static String message \u003d \"The month has to be a value between 01-12!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"    public InvalidMonthException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"        return message;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"    public static void printMessage() {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"        Ui.printMessage(message);","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"swatimahadevan":20}},{"path":"src/main/java/seedu/duke/exceptions/calendar/LectureIndexNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.exceptions.calendar;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"public class LectureIndexNotFoundException extends Exception {","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"    public LectureIndexNotFoundException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"        Ui.printMessage(\"Cannot find index of lecture to delete! Use \u0027calendar list lec\u0027 first\"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"                + \" to find desired lecture index\");","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"swatimahadevan":10}},{"path":"src/main/java/seedu/duke/exceptions/calendar/ModuleNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.exceptions.calendar;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"public class ModuleNotFoundException extends Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"    public ModuleNotFoundException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"        Ui.printMessage(\"You have to add a module before you can add a lecture to it !\");","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"swatimahadevan":9}},{"path":"src/main/java/seedu/duke/exceptions/food/CannotFindFoodStoreException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.exceptions.food;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"public class CannotFindFoodStoreException extends ClickException {","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"    public CannotFindFoodStoreException(int storeIndex) {","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"        super(Messages.PRINT_CANNOT_FIND_STORE + storeIndex);","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"ngnigel99":10}},{"path":"src/main/java/seedu/duke/exceptions/food/FoodCaloriesNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.exceptions.food;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.Click;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"public class FoodCaloriesNotFoundException extends ClickException {","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"    public FoodCaloriesNotFoundException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"        super(Messages.CALORIES_NOT_FOUND);","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"ngnigel99":11}},{"path":"src/main/java/seedu/duke/exceptions/food/FoodIndexNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions.food;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"//@@author ngnigel99","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"public class FoodIndexNotFoundException extends ClickException {","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"    public FoodIndexNotFoundException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"        super(Messages.PRINT_FOOD_INDEX_NOT_FOUND);","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"nvbinh15":3,"ngnigel99":9}},{"path":"src/main/java/seedu/duke/exceptions/food/FoodNameNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.exceptions.food;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"public class FoodNameNotFoundException extends ClickException {","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"    public FoodNameNotFoundException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"        super(Messages.PRINT_NAME_DIVIDER);","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"ngnigel99":10}},{"path":"src/main/java/seedu/duke/exceptions/food/IllegalFoodParameterException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions.food;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"//@@author ngnigel99","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" * Exception thrown when parameters are left blank when adding a food item.","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" * More specifically, when user input is not 2 words consisting of name, calorie count.","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":" *","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":" * @author ngnigel99","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"public class IllegalFoodParameterException extends ClickException {","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    public IllegalFoodParameterException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"        super(Messages.PRINT_ADD_FOOD_SYNTAX);","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"nvbinh15":2,"ngnigel99":15}},{"path":"src/main/java/seedu/duke/exceptions/food/InvalidItemIndexException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.exceptions.food;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"public class InvalidItemIndexException extends ClickException {","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"    public InvalidItemIndexException(int itemIndex) {","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"        super(Messages.PRINT_INVALID_ITEM + itemIndex);","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"ngnigel99":10}},{"path":"src/main/java/seedu/duke/exceptions/food/InvalidStoreIndexException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.exceptions.food;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"public class InvalidStoreIndexException extends ClickException {","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"    public InvalidStoreIndexException(int storeIndex) {","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"        super(Messages.PRINT_INVALID_STORE + storeIndex);","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"ngnigel99":10}},{"path":"src/main/java/seedu/duke/exceptions/food/MissingDateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.exceptions.food;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" * Thrown when the user does not issue a date when","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" * finding a food record.","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"public class MissingDateException extends ClickException {","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"    public MissingDateException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"        super(Messages.PRINT_DATE_NOT_FOUND);","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"ngnigel99":14}},{"path":"src/main/java/seedu/duke/exceptions/food/NegativeCaloriesException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.exceptions.food;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"public class NegativeCaloriesException extends ClickException {","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"    public NegativeCaloriesException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"        super(Messages.PRINT_NON_NEGATIVE_CALORIES);","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"ngnigel99":10}},{"path":"src/main/java/seedu/duke/exceptions/food/NoCalorieCountKeywordException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.exceptions.food;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"public class NoCalorieCountKeywordException extends ClickException {","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"    public NoCalorieCountKeywordException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"        super(Messages.PRINT_NO_CALORIE_COUNT);","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"ngnigel99":10}},{"path":"src/main/java/seedu/duke/exceptions/food/NoCaloriesInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.exceptions.food;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"public class NoCaloriesInputException extends ClickException {","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"    public NoCaloriesInputException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"        super(Messages.PRINT_NO_INPUT_CALORIES);","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"ngnigel99":10}},{"path":"src/main/java/seedu/duke/exceptions/food/NoFoodFoundOnDateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.exceptions.food;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"public class NoFoodFoundOnDateException extends ClickException {","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"    public NoFoodFoundOnDateException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"        super(Messages.PRINT_NO_FOOD_FOUND);","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"ngnigel99":10}},{"path":"src/main/java/seedu/duke/exceptions/food/NoItemDividerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.exceptions.food;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"public class NoItemDividerException extends ClickException {","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"    public NoItemDividerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"        super(Messages.PRINT_NO_INDEX_DIVIDER);","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"ngnigel99":10}},{"path":"src/main/java/seedu/duke/exceptions/food/NoStoreDividerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.exceptions.food;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"public class NoStoreDividerException extends ClickException {","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"    public NoStoreDividerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"        super(Messages.PRINT_NO_STORE_DIVIDER);","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"ngnigel99":10}},{"path":"src/main/java/seedu/duke/exceptions/journal/DuplicateNoteException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions.journal;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"public class DuplicateNoteException extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"    public DuplicateNoteException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"Error ! The notebook already exists\");","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"SvethaMahadevan":6,"nvbinh15":1}},{"path":"src/main/java/seedu/duke/exceptions/journal/EmptyEntryArgumentsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.exceptions.journal;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"public class EmptyEntryArgumentsException extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"    public EmptyEntryArgumentsException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"No arguments found for entry.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"SvethaMahadevan":7}},{"path":"src/main/java/seedu/duke/exceptions/journal/EmptyEntryNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.exceptions.journal;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"public class EmptyEntryNameException extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"    public EmptyEntryNameException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"No entry name entered after \u0027e/\u0027 \");","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"SvethaMahadevan":7}},{"path":"src/main/java/seedu/duke/exceptions/journal/EmptyJournalArgumentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions.journal;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"public class EmptyJournalArgumentException extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"    public EmptyJournalArgumentException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"No arguments found for journal.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"SvethaMahadevan":6,"nvbinh15":1}},{"path":"src/main/java/seedu/duke/exceptions/journal/EmptyNoteArgumentsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions.journal;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"public class EmptyNoteArgumentsException extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"    public EmptyNoteArgumentsException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"No arguments found for notebook.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"SvethaMahadevan":6,"nvbinh15":1}},{"path":"src/main/java/seedu/duke/exceptions/journal/EmptyNoteNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions.journal;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"public class EmptyNoteNameException extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"    public EmptyNoteNameException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"No note name entered after \u0027n/\u0027 \");","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"SvethaMahadevan":6,"nvbinh15":1}},{"path":"src/main/java/seedu/duke/exceptions/journal/EmptyTagArgumentsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.exceptions.journal;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"public class EmptyTagArgumentsException extends Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"    public EmptyTagArgumentsException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"No arguments for tag\");","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"SvethaMahadevan":7}},{"path":"src/main/java/seedu/duke/exceptions/journal/EmptyTagNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.exceptions.journal;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"public class EmptyTagNameException extends Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"    public EmptyTagNameException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"No tag name entered after \u0027t/\u0027 \");","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"SvethaMahadevan":7}},{"path":"src/main/java/seedu/duke/exceptions/journal/EntryDoesNotExistException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.exceptions.journal;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"public class EntryDoesNotExistException extends Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"    public EntryDoesNotExistException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"Entry doesn\u0027t exist.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"SvethaMahadevan":7}},{"path":"src/main/java/seedu/duke/exceptions/journal/IncorrectJournalArgumentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions.journal;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"public class IncorrectJournalArgumentException extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"    public IncorrectJournalArgumentException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"Incorrect arguments found for journal.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"SvethaMahadevan":6,"nvbinh15":1}},{"path":"src/main/java/seedu/duke/exceptions/journal/InvalidEntryIndexException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.exceptions.journal;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"public class InvalidEntryIndexException extends Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"    public InvalidEntryIndexException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"Invalid entry index \");","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"SvethaMahadevan":7}},{"path":"src/main/java/seedu/duke/exceptions/journal/InvalidNotebookIndexException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.exceptions.journal;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"public class InvalidNotebookIndexException extends Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"    public InvalidNotebookIndexException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"Invalid notebook index \");","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"SvethaMahadevan":7}},{"path":"src/main/java/seedu/duke/exceptions/journal/InvalidTagNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.exceptions.journal;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"public class InvalidTagNameException extends Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"    public InvalidTagNameException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"Sorry!The tag argument is invalid!\");","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"SvethaMahadevan":7}},{"path":"src/main/java/seedu/duke/exceptions/journal/NotebookArgumentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions.journal;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"public class NotebookArgumentNotFoundException extends Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"    public NotebookArgumentNotFoundException(String message) {","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(message);","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"SvethaMahadevan":6,"nvbinh15":1}},{"path":"src/main/java/seedu/duke/exceptions/journal/NotebookNotFoundForEntry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.exceptions.journal;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"public class NotebookNotFoundForEntry extends Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"    public NotebookNotFoundForEntry() {","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"Notebook hasn\u0027t been created yet!\");","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"SvethaMahadevan":7}},{"path":"src/main/java/seedu/duke/exceptions/journal/NotebookNotFoundForTagException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.exceptions.journal;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"public class NotebookNotFoundForTagException extends Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"    public NotebookNotFoundForTagException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"Invalid notebook for tagging\");","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"SvethaMahadevan":7}},{"path":"src/main/java/seedu/duke/exceptions/module/DuplicateModuleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions.module;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.ExceptionMessages.MESSAGE_DUPLICATE_MODULE;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":" * A class that represents exceptions thrown when the module to be added already exists.","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"public class DuplicateModuleException extends ClickException {","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor inherited from ClickException.","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    public DuplicateModuleException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"        super(MESSAGE_DUPLICATE_MODULE);","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"nvbinh15":20}},{"path":"src/main/java/seedu/duke/exceptions/module/IllegalCurrentCapException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions.module;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.ExceptionMessages.MESSAGE_ILLEGAL_CURRENT_CAP;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":" * A class that represents exceptions thrown when the current CAP from the user is illegal.","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"public class IllegalCurrentCapException extends ClickException {","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor inherited from ClickException.","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    public IllegalCurrentCapException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"        super(MESSAGE_ILLEGAL_CURRENT_CAP);","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"nvbinh15":20}},{"path":"src/main/java/seedu/duke/exceptions/module/IllegalExpectedGradeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions.module;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.ExceptionMessages.MESSAGE_ILLEGAL_EXPECTED_GRADE;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":" * A class that represents exceptions thrown when the expected grade of a module is illegal.","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"public class IllegalExpectedGradeException extends ClickException {","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor inherited from ClickException.","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    public IllegalExpectedGradeException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"        super(MESSAGE_ILLEGAL_EXPECTED_GRADE);","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"nvbinh15":20}},{"path":"src/main/java/seedu/duke/exceptions/module/IllegalModularCreditException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions.module;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.ExceptionMessages.MESSAGE_ILLEGAL_MODULAR_CREDIT;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"public class IllegalModularCreditException extends ClickException {","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor inherited from ClickException.","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"    public IllegalModularCreditException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"        super(MESSAGE_ILLEGAL_MODULAR_CREDIT);","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"nvbinh15":15}},{"path":"src/main/java/seedu/duke/exceptions/module/IllegalModuleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions.module;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.ExceptionMessages.MESSAGE_ILLEGAL_MODULE;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":" * A class that represents exceptions thrown when a Module is illegal.","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"public class IllegalModuleException extends ClickException {","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor inherited from ClickException.","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    public IllegalModuleException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"        super(MESSAGE_ILLEGAL_MODULE);","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"nvbinh15":20}},{"path":"src/main/java/seedu/duke/exceptions/module/IllegalModuleIndexException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions.module;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.ExceptionMessages.MESSAGE_ILLEGAL_MODULE_INDEX;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":" * A class that represents exceptions thrown when the Module index is illegal.","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"public class IllegalModuleIndexException extends ClickException {","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor inherited from ClickException.","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    public IllegalModuleIndexException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"        super(MESSAGE_ILLEGAL_MODULE_INDEX);","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"nvbinh15":20}},{"path":"src/main/java/seedu/duke/exceptions/module/IllegalTotalMcTakenException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions.module;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.ExceptionMessages.MESSAGE_ILLEGAL_TOTAL_MC_TAKEN;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":" * A class that represents exceptions thrown when the total MC taken from the user is illegal.","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"public class IllegalTotalMcTakenException extends ClickException {","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor inherited from ClickException.","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    public IllegalTotalMcTakenException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"        super(MESSAGE_ILLEGAL_TOTAL_MC_TAKEN);","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"nvbinh15":20}},{"path":"src/main/java/seedu/duke/exceptions/storage/FileNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.exceptions.storage;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"public class FileNotFoundException extends ClickException {","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"    public FileNotFoundException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"        super(Messages.PRINT_FILE_NOT_FOUND);","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"ngnigel99":10}},{"path":"src/main/java/seedu/duke/exceptions/storage/StorageException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.exceptions.storage;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":" * A class that represents exception thrown when there is an error with the storage files.","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"public class StorageException extends ClickException {","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"    public StorageException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"        super(Messages.PRINT_STORAGE_ERROR);","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"nvbinh15":15,"ngnigel99":1}},{"path":"src/main/java/seedu/duke/exceptions/syntax/ArgumentsNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.exceptions.syntax;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"public class ArgumentsNotFoundException extends ClickException {","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"    public ArgumentsNotFoundException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"        super(Messages.PRINT_MISSING_ARGUMENT);","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"    public ArgumentsNotFoundException(String value) {","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"        super(Messages.PRINT_MISSING_SPECIFIC_ARGUMENT + value);","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"ngnigel99":14}},{"path":"src/main/java/seedu/duke/exceptions/syntax/HelpException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.exceptions.syntax;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.Click;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"public class HelpException extends ClickException {","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"    public HelpException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"        super(Messages.PRINT_ONLY_HELP);","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"ngnigel99":11}},{"path":"src/main/java/seedu/duke/exceptions/syntax/IllegalCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.exceptions.syntax;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.ExceptionMessages.MESSAGE_ILLEGAL_COMMAND;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"public class IllegalCommandException extends ClickException {","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"    public IllegalCommandException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"        super(MESSAGE_ILLEGAL_COMMAND);","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"nvbinh15":11,"ngnigel99":3}},{"path":"src/main/java/seedu/duke/exceptions/syntax/IllegalDateTimeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.exceptions.syntax;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":" * A class that represents exceptions thrown when a input date time is illegal.","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"public class IllegalDateTimeException extends Exception {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":8,"ngnigel99":1}},{"path":"src/main/java/seedu/duke/exceptions/syntax/InvalidArgumentsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.exceptions.syntax;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" * Thrown when command entered by user starts with a correct keyword,","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" * but full command does not exist.","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" *","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":" * @author ngnigel99","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"public class InvalidArgumentsException extends ClickException {","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    public InvalidArgumentsException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"        super(Messages.PRINT_FULL_COMMAND_NOT_EXISTS);","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"ngnigel99":16}},{"path":"src/main/java/seedu/duke/exceptions/syntax/MissingDividerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.exceptions.syntax;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"public class MissingDividerException extends ClickException {","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"    public MissingDividerException(String divider) {","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"        super(Messages.PRINT_MISSING_DIVIDER + divider);","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"ngnigel99":10}},{"path":"src/main/java/seedu/duke/exceptions/syntax/WrongDividerOrderException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.exceptions.syntax;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"public class WrongDividerOrderException extends ClickException {","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"    public WrongDividerOrderException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"        super(\"Wrong divider order!\");","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"ngnigel99":9}},{"path":"src/main/java/seedu/duke/exceptions/zoom/InvalidZoomDataPath.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shoibloya"},"content":"package seedu.duke.exceptions.zoom;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"shoibloya"},"content":"public class InvalidZoomDataPath extends Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"shoibloya"},"content":"    public InvalidZoomDataPath() {","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"shoibloya"},"content":"        Ui.printMessage(\"Cannot find the requested zoom data file\");","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"shoibloya"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"shoibloya":9}},{"path":"src/main/java/seedu/duke/exceptions/zoom/InvalidZoomLinkException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shoibloya"},"content":"package seedu.duke.exceptions.zoom;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"shoibloya"},"content":"public class InvalidZoomLinkException extends Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"shoibloya"},"content":"    public InvalidZoomLinkException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"shoibloya"},"content":"        Ui.printMessage(\"Invalid Zoom Link! (Format: https://google.com)\");","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"shoibloya"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"shoibloya":9}},{"path":"src/main/java/seedu/duke/food/FoodRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.food;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":" *  A food record simply records the name and calorie count of a food item.","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":" *  [FOOD_NAME] [CALORIES]","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":" *","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":" * @author  ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"public class FoodRecord {","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    private final LocalDate defaultDate \u003d LocalDate.now();","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    private String foodName;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    private Integer calorieCount;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    private LocalDate dateIAte \u003d defaultDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    public FoodRecord(String foodName, Integer calorieCount) {","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"        this.foodName \u003d foodName;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"        this.calorieCount \u003d calorieCount;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"    public void setDateIAte(LocalDate dateIAte) {","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"        this.dateIAte \u003d dateIAte;","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"    public LocalDate getDateIAte() {","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"        return dateIAte;","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"    public String getFoodName() {","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"        return foodName;","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"    public Integer getCalorieCount() {","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"        return calorieCount;","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"        return foodName","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"                + Messages.RECORD_ATTRIBUTE_DIVIDER","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"                + calorieCount","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"                + \" KCal\";","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"    public String toSaveListFormat() {","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"        return foodName + \"|\" + calorieCount + stringLocalDateIfExist() + \"\\n\";","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"    public String stringLocalDateIfExist() {","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"        if (this.dateIAte !\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"            String printDateWithFormat \u003d dateIAte.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"            return \"|\" + printDateWithFormat;","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"        return \"\";","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"    public String stringLocalDateIfExistsFull() {","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"        if (this.dateIAte !\u003d null) {","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"            String printDateWithFormat \u003d dateIAte.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL));","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"            return printDateWithFormat;","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"        return \"\";","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"ngnigel99":72}},{"path":"src/main/java/seedu/duke/food/ReferenceLists.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.food;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"//@@author ngnigel99","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.foodreferencelists.StallsManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" * A reference list containing items sold: name, calorie count","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" * to be easily referenced by the user in addition.","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":" * For Click in particular, we limit the scope for food courts","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":" * to technoEdge as a reference. The user can simply add in their","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":" * own food name and calories if needed without referring to this list.","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"public class ReferenceLists {","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    private static ReferenceLists lists \u003d null;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    private StallsManager technoEdge \u003d new StallsManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    //singleton design as only one food court is viewed","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    private ReferenceLists() {","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"        technoEdge \u003d new StallsManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    public static ReferenceLists getLists() {","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"        if (lists \u003d\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"            lists \u003d new ReferenceLists();","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"        return lists;","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    public StallsManager getTechnoEdge() {","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"        return technoEdge;","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"ngnigel99":34}},{"path":"src/main/java/seedu/duke/food/WhatIAteList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.food;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.food.NoFoodFoundOnDateException;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":" * Represents a list of what the user has eaten.","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":" *  This would include the date of the record and","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":" *      the food items consumed.","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":" *","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":" * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"public class WhatIAteList  {","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    private String stallName;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    private ArrayList\u003cFoodRecord\u003e whatIAteList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    public WhatIAteList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"    public ArrayList\u003cFoodRecord\u003e getList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"        return whatIAteList;","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"     * Adds a food Record to a list, then notifies the user of what  item","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"     *  they  have entered.","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"     * @author  ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"     * @param recordToAdd record to add to list","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"     * @param isSilent checks whether to print Ui message","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"    public void addToList(FoodRecord recordToAdd, boolean isSilent) {","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"        whatIAteList.add(recordToAdd);","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"        if (!isSilent) {","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"            Ui.printAddRecord(recordToAdd);","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"     * Prints  index with suffix for visuals.","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"     * @param index index of list","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"    public void printIndexWithSuffix(int index) {","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"        String[] suffixList \u003d {\"st\", \"nd\", \"rd\", \"th\"};","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"        String suffixToPrint;","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"        int lastDigit \u003d index % 10;","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"        int exceptionTeen \u003d index % 100; //11,12,13th","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"        if (lastDigit \u003d\u003d 1 \u0026\u0026 exceptionTeen !\u003d 11) {","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"            suffixToPrint \u003d suffixList[0];","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"        } else if (lastDigit \u003d\u003d 2 \u0026\u0026 exceptionTeen !\u003d 12) {","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"            suffixToPrint \u003d suffixList[1];","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"        } else if (lastDigit \u003d\u003d 3 \u0026\u0026 exceptionTeen !\u003d 13) {","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"            suffixToPrint \u003d suffixList[2];","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"        } else {","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"            suffixToPrint \u003d suffixList[3];","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"        Ui.printMessageSameLine(index + suffixToPrint  +  \",\");","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"     * Prints food records collated in list.","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"     * This list could belong either to the user or to a reference list.","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"     * For reference list, we do not need messages.","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"     * For the user, messages would be included.","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"     * @param withMessages if messages are to be included.","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"ngnigel99"},"content":"    public void printList(boolean withMessages) {","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"ngnigel99"},"content":"        int index \u003d 1;  //TODO integrate this with storage so it\u0027s not a magic number","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"ngnigel99"},"content":"        int calorieSum \u003d  0;","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"ngnigel99"},"content":"        Ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"ngnigel99"},"content":"        for (FoodRecord listRecord : whatIAteList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"ngnigel99"},"content":"            printIndexWithSuffix(index);","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"ngnigel99"},"content":"            printFoodNameAndCalories(withMessages, listRecord);","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"ngnigel99"},"content":"            index++;","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"ngnigel99"},"content":"            calorieSum +\u003d listRecord.getCalorieCount();","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"ngnigel99"},"content":"        printFinishReadingList(calorieSum);","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"ngnigel99"},"content":"        if (withMessages) {","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"ngnigel99"},"content":"            Ui.printMessage(\"You consumed \" + calorieSum + \" calories in total!\");","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"ngnigel99"},"content":"        Ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"ngnigel99"},"content":"    private void printFinishReadingList(int calorieSum) {","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"ngnigel99"},"content":"        if (calorieSum \u003d\u003d 0) {","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"ngnigel99"},"content":"            Ui.printMessage(\"Wow, 0 calories, please add something to the list!\");","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"ngnigel99"},"content":"        } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"ngnigel99"},"content":"            Ui.printMessage(\"Wow, that\u0027s a lot of food! Finished reading the list\");","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"ngnigel99"},"content":"    private void printFoodNameAndCalories(boolean withMessages, FoodRecord listRecord) {","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"ngnigel99"},"content":"        if (withMessages) {","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"You consumed  \" + listRecord.getFoodName()","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"ngnigel99"},"content":"                    + \" , which has a calorie count of : \"","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"ngnigel99"},"content":"                    + listRecord.getCalorieCount()","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"ngnigel99"},"content":"                    + ((listRecord.getDateIAte() !\u003d null)","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"ngnigel99"},"content":"                        ? \" on \" + listRecord.stringLocalDateIfExistsFull() + \"!\"","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"ngnigel99"},"content":"                        : \"!\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"ngnigel99"},"content":"        } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(listRecord.getFoodName() + \" : \" + listRecord.getCalorieCount() + \"Kcal\");","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"ngnigel99"},"content":"    public void clearList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"ngnigel99"},"content":"        whatIAteList.clear();","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"ngnigel99"},"content":"        Ui.printDoneClearList();","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"ngnigel99"},"content":"    public void printFoodWithFoundDate(LocalDate date) throws","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"ngnigel99"},"content":"            NoFoodFoundOnDateException {","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"ngnigel99"},"content":"        WhatIAteList whatIAteThatDay \u003d new WhatIAteList();","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"ngnigel99"},"content":"        String formattedDate \u003d date.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL));","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"ngnigel99"},"content":"        addRecordIfFound(date, whatIAteThatDay);","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"ngnigel99"},"content":"        if (whatIAteThatDay.getList().isEmpty()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"ngnigel99"},"content":"            throw new NoFoodFoundOnDateException();","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"ngnigel99"},"content":"        Ui.printMessage(\"Nice, I found the items you ate on \" + formattedDate);","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"ngnigel99"},"content":"        whatIAteThatDay.printList(true);","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"ngnigel99"},"content":"     * Adds a record to a list if the date recorded matches a given date.","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"ngnigel99"},"content":"     * @param date date checked.","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"ngnigel99"},"content":"     * @param whatIAteList list of what the user ate.","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"ngnigel99"},"content":"    private void addRecordIfFound(LocalDate date, WhatIAteList whatIAteList) {","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"ngnigel99"},"content":"        for (FoodRecord foodRecord : this.whatIAteList) {","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"ngnigel99"},"content":"            if (foodRecord.getDateIAte().equals(date)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"ngnigel99"},"content":"                whatIAteList.getList().add(foodRecord);","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"ngnigel99":144}},{"path":"src/main/java/seedu/duke/foodreferencelists/StallsManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.foodreferencelists;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.food.CannotFindFoodStoreException;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.food.FoodIndexNotFoundException;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.food.FoodRecord;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.food.WhatIAteList;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"import java.util.Collections;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"//@@author ngnigel99","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":" * This class represents the stores at a certain food court,","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":" * which includes the names as well as the food items sold.","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":" * Additionally, logic of searching for a certain food record","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":" * by index is implemented to support adding food by reference","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":" * functionality.","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"public class StallsManager {","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    public static String nameOfFoodCentre \u003d \"techno edge, NUS\";","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    public static HashMap\u003cInteger, String\u003e idName \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    public static HashMap\u003cInteger, String[]\u003e idData \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"    public static ArrayList\u003cString[]\u003e compoundedItemsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    public static int MAX_STORE_INDEX \u003d 11;","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"    //for easier indexing and searching","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"    public StallsManager() {","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"        initialiseNameIdMap();","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"        initialiseIdPointerMap();","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"        collateAllItems();","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"    private void initialiseNameIdMap() {","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"        idName.put(1, \"Asian Delights\");","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"        idName.put(2, \"Cai Fan\");","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"        idName.put(3, \"Chicken Rice\");","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"        idName.put(4, \"Hong Kong Cuisine\");","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"        idName.put(5, \"Hungry Burger\");","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"        idName.put(6, \"Indian Cooked Food\");","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"        idName.put(7, \"Nasi Padang\");","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"        idName.put(8, \"Ramen \u0026 Fish Soup\");","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"        idName.put(9, \"Taiwanese Cuisine\");","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"        idName.put(10, \"Vegetarian\");","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"        idName.put(11, \"Western Fare\");","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"    private void initialiseIdPointerMap() {","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"        idData.put(1, asianDelights);","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"        idData.put(2, caiFan);","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"        idData.put(3, chickenRice);","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"        idData.put(4, hongKongCuisine);","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"        idData.put(5, hungryBurger);","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"        idData.put(6, indian);","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"        idData.put(7, nasiPadang);","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"        idData.put(8,ramenFish);","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"        idData.put(9, taiwaneseCuisine);","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"        idData.put(10,vegetarian);","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"        idData.put(11, western);","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"     * Collates all items from all stores into array list.","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"    private void collateAllItems() {","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"        idData.forEach((key,value) -\u003e compoundedItemsList.add(value));","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"     * Helper function to list all current stores.","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"ngnigel99"},"content":"    public static void printStalls() {","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"ngnigel99"},"content":"        idName.forEach((key, value) -\u003e Ui.printMessage(key + \" | \" + value));","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"ngnigel99"},"content":"        Ui.printMessage(\"Wow, thats a lot of options! Finished printing\");","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"ngnigel99"},"content":"        Ui.printLine();","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"ngnigel99"},"content":"    public static FoodRecord getFoodRecordFromStall(int storeIndex, int foodIndex)","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"ngnigel99"},"content":"            throws","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"ngnigel99"},"content":"            FoodIndexNotFoundException,","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"ngnigel99"},"content":"            CannotFindFoodStoreException {","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"ngnigel99"},"content":"        if (storeIndex \u003c\u003d 0 || storeIndex \u003e MAX_STORE_INDEX) {","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"ngnigel99"},"content":"            throw new CannotFindFoodStoreException(storeIndex);","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"ngnigel99"},"content":"        int itemCount \u003d idData.get(storeIndex).length;","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"ngnigel99"},"content":"        if (foodIndex \u003e\u003d itemCount) {","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"ngnigel99"},"content":"            throw new FoodIndexNotFoundException();","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"ngnigel99"},"content":"        String foodData \u003d  idData.get(storeIndex)[foodIndex];","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"ngnigel99"},"content":"        FoodRecord toReturn \u003d Parser.parseFoodSavedListToRecord(foodData);","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"ngnigel99"},"content":"        return toReturn;","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"ngnigel99"},"content":"     * Prints items for a specific store with given index.","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"ngnigel99"},"content":"     * @param index index of the store","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"ngnigel99"},"content":"    public static void printItems(int index) {","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"ngnigel99"},"content":"        if (index \u003c\u003d 0 || index \u003e MAX_STORE_INDEX) {","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"ngnigel99"},"content":"            Ui.printMessage(\"Oops, can\u0027t find store \" + index);","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"ngnigel99"},"content":"            return;","lastModifiedDate":"2021-10-31"},{"lineNumber":108,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":109,"author":{"gitId":"ngnigel99"},"content":"        WhatIAteList tempFormattedList \u003d parseStringIntoFoodRecordList(index);","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"ngnigel99"},"content":"        tempFormattedList.printList(false);","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"ngnigel99"},"content":"     * Parses string in data dump to a food record list.","lastModifiedDate":"2021-11-03"},{"lineNumber":115,"author":{"gitId":"ngnigel99"},"content":"     * @param index index of store","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"ngnigel99"},"content":"     * @return tempFormattedList list of all items for a store","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":118,"author":{"gitId":"ngnigel99"},"content":"    private static WhatIAteList parseStringIntoFoodRecordList(int index) {","lastModifiedDate":"2021-11-03"},{"lineNumber":119,"author":{"gitId":"ngnigel99"},"content":"        WhatIAteList tempFormattedList \u003d new WhatIAteList();","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"ngnigel99"},"content":"        String[] itemsSold \u003d idData.get(index);","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"ngnigel99"},"content":"        for (String readLine : itemsSold) {","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"ngnigel99"},"content":"            FoodRecord toAdd \u003d Parser.parseFoodSavedListToRecord(readLine);","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"ngnigel99"},"content":"            tempFormattedList.addToList(toAdd, true);","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"ngnigel99"},"content":"        return tempFormattedList;","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"ngnigel99"},"content":"     * Trivial function to print every item.","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"ngnigel99"},"content":"    public static void printAllItems() {","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"ngnigel99"},"content":"        for (int storeIndex : idName.keySet()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"ngnigel99"},"content":"            String storeName \u003d idName.get(storeIndex);","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(storeName);","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"ngnigel99"},"content":"            printItems(storeIndex);","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"ngnigel99"},"content":"        Ui.printMessage(Messages.PRINT_DONE_PRINTING_LIST);","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"ngnigel99"},"content":"        Ui.printLine();","lastModifiedDate":"2021-11-03"},{"lineNumber":139,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"ngnigel99"},"content":"    public static void printFoodRecordsWithLowerCalories(int calories) {","lastModifiedDate":"2021-11-03"},{"lineNumber":142,"author":{"gitId":"ngnigel99"},"content":"        ArrayList\u003cWhatIAteList\u003e allLists \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":143,"author":{"gitId":"ngnigel99"},"content":"        assert MAX_STORE_INDEX \u003e 0; //checks that data dump is initialised","lastModifiedDate":"2021-11-03"},{"lineNumber":144,"author":{"gitId":"ngnigel99"},"content":"        for (int storeIndex : idName.keySet()) {","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"ngnigel99"},"content":"            WhatIAteList storeItems \u003d parseStringIntoFoodRecordList(storeIndex);","lastModifiedDate":"2021-11-03"},{"lineNumber":146,"author":{"gitId":"ngnigel99"},"content":"            allLists.add(storeItems);","lastModifiedDate":"2021-11-03"},{"lineNumber":147,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":148,"author":{"gitId":"ngnigel99"},"content":"        WhatIAteList filterLowerThanCalories \u003d new WhatIAteList();","lastModifiedDate":"2021-11-03"},{"lineNumber":149,"author":{"gitId":"ngnigel99"},"content":"        for (WhatIAteList storeItems : allLists) {","lastModifiedDate":"2021-11-03"},{"lineNumber":150,"author":{"gitId":"ngnigel99"},"content":"            for (FoodRecord foodItem : storeItems.getList()) {","lastModifiedDate":"2021-11-03"},{"lineNumber":151,"author":{"gitId":"ngnigel99"},"content":"                if (foodItem.getCalorieCount() \u003c\u003d calories) {","lastModifiedDate":"2021-11-03"},{"lineNumber":152,"author":{"gitId":"ngnigel99"},"content":"                    filterLowerThanCalories.addToList(foodItem, true);","lastModifiedDate":"2021-11-03"},{"lineNumber":153,"author":{"gitId":"ngnigel99"},"content":"                }","lastModifiedDate":"2021-11-03"},{"lineNumber":154,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":155,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":156,"author":{"gitId":"ngnigel99"},"content":"        sortListByCalorieCount(filterLowerThanCalories);","lastModifiedDate":"2021-11-04"},{"lineNumber":157,"author":{"gitId":"ngnigel99"},"content":"        sortListByName(filterLowerThanCalories);","lastModifiedDate":"2021-11-04"},{"lineNumber":158,"author":{"gitId":"ngnigel99"},"content":"        Ui.printMessage(\"I\u0027ve found the following items with \" + calories + \" calories!\");","lastModifiedDate":"2021-11-03"},{"lineNumber":159,"author":{"gitId":"ngnigel99"},"content":"        filterLowerThanCalories.printList(false);","lastModifiedDate":"2021-11-03"},{"lineNumber":160,"author":{"gitId":"ngnigel99"},"content":"        Ui.printMessage(\"done printing!\");","lastModifiedDate":"2021-11-03"},{"lineNumber":161,"author":{"gitId":"ngnigel99"},"content":"        Ui.printLine();","lastModifiedDate":"2021-11-03"},{"lineNumber":162,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":163,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":164,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":165,"author":{"gitId":"ngnigel99"},"content":"     * Sorts a food record list by name.","lastModifiedDate":"2021-11-04"},{"lineNumber":166,"author":{"gitId":"ngnigel99"},"content":"     * @param filterLowerThanCalories list of food records.","lastModifiedDate":"2021-11-04"},{"lineNumber":167,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":168,"author":{"gitId":"ngnigel99"},"content":"    private static void sortListByName(WhatIAteList filterLowerThanCalories) {","lastModifiedDate":"2021-11-04"},{"lineNumber":169,"author":{"gitId":"ngnigel99"},"content":"        filterLowerThanCalories.getList().sort(","lastModifiedDate":"2021-11-04"},{"lineNumber":170,"author":{"gitId":"ngnigel99"},"content":"            (FoodRecord f1, FoodRecord f2)","lastModifiedDate":"2021-11-04"},{"lineNumber":171,"author":{"gitId":"ngnigel99"},"content":"                -\u003e f1.getFoodName().compareTo(f2.getFoodName()));","lastModifiedDate":"2021-11-04"},{"lineNumber":172,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":173,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":174,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":175,"author":{"gitId":"ngnigel99"},"content":"     * Sorts a food record list by calories count.","lastModifiedDate":"2021-11-04"},{"lineNumber":176,"author":{"gitId":"ngnigel99"},"content":"     * @param filterLowerThanCalories list of food records.","lastModifiedDate":"2021-11-04"},{"lineNumber":177,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":178,"author":{"gitId":"ngnigel99"},"content":"    private static void sortListByCalorieCount(WhatIAteList filterLowerThanCalories) {","lastModifiedDate":"2021-11-04"},{"lineNumber":179,"author":{"gitId":"ngnigel99"},"content":"        filterLowerThanCalories.getList().sort(","lastModifiedDate":"2021-11-04"},{"lineNumber":180,"author":{"gitId":"ngnigel99"},"content":"            (FoodRecord f1, FoodRecord f2)","lastModifiedDate":"2021-11-04"},{"lineNumber":181,"author":{"gitId":"ngnigel99"},"content":"                -\u003e f1.getCalorieCount().compareTo(f2.getCalorieCount()));","lastModifiedDate":"2021-11-04"},{"lineNumber":182,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":183,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":184,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":185,"author":{"gitId":"ngnigel99"},"content":"     * Start of data dump, which includes items sold and calorie count.","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"ngnigel99"},"content":"    public static final String[] asianDelights \u003d {","lastModifiedDate":"2021-10-27"},{"lineNumber":188,"author":{"gitId":"ngnigel99"},"content":"        \"Set A - Butterfly Plea Flower Rice w Ayam Penyet (Regular) | 1151\",","lastModifiedDate":"2021-10-27"},{"lineNumber":189,"author":{"gitId":"ngnigel99"},"content":"        \"Set A - Butterfly Plea Flower Rice w Ayam Penyet (Reduced) | 1124\",","lastModifiedDate":"2021-10-27"},{"lineNumber":190,"author":{"gitId":"ngnigel99"},"content":"        \"Set B - Butterfly Plea Flower Rice w Ayam Merah (Regular) | 667\",","lastModifiedDate":"2021-10-27"},{"lineNumber":191,"author":{"gitId":"ngnigel99"},"content":"        \"Set B - Butterfly Plea Flower Rice w Ayam Merah (Reduced) | 401\",","lastModifiedDate":"2021-10-27"},{"lineNumber":192,"author":{"gitId":"ngnigel99"},"content":"        \"Set C - Butterfly Plea Flower Rice w Ayam Bakar Boneless (Regular) | 767\",","lastModifiedDate":"2021-10-27"},{"lineNumber":193,"author":{"gitId":"ngnigel99"},"content":"        \"Set C - Butterfly Plea Flower Rice w Ayam Bakar Boneless (Reduced) | 460\",","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"ngnigel99"},"content":"        \"Set D - Butterfly Plea Flower Rice w Ayam Hijau (Regular) | 856\",","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"ngnigel99"},"content":"        \"Set D - Butterfly Plea Flower Rice w Ayam Hijau (Reduced) | 514\",","lastModifiedDate":"2021-10-27"},{"lineNumber":196,"author":{"gitId":"ngnigel99"},"content":"        \"Set E - Butterfly Plea Flower Rice w Dory (Regular) | 863\",","lastModifiedDate":"2021-10-27"},{"lineNumber":197,"author":{"gitId":"ngnigel99"},"content":"        \"Set E - Butterfly Plea Flower Rice w Dory (Reduced) | 518\",","lastModifiedDate":"2021-10-27"},{"lineNumber":198,"author":{"gitId":"ngnigel99"},"content":"        \"Set F - Butterfly Plea Flower Rice w Beef Rendang | 718\",","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"ngnigel99"},"content":"        \"Set F - Butterfly Plea Flower Rice w Bebek Penyet | 1262\",","lastModifiedDate":"2021-10-27"},{"lineNumber":200,"author":{"gitId":"ngnigel99"},"content":"        \"Value Meal | 806\",","lastModifiedDate":"2021-10-27"},{"lineNumber":201,"author":{"gitId":"ngnigel99"},"content":"        \"Kampung Seafood Mee Goreng (Spicy) | 594\",","lastModifiedDate":"2021-10-27"},{"lineNumber":202,"author":{"gitId":"ngnigel99"},"content":"        \"Indonesian Fried Rice (Spicy) | 454\",","lastModifiedDate":"2021-10-27"},{"lineNumber":203,"author":{"gitId":"ngnigel99"},"content":"        \"Thai Creamy Tom Yum Mama Noodle (Spicy) | 345\",","lastModifiedDate":"2021-10-27"},{"lineNumber":204,"author":{"gitId":"ngnigel99"},"content":"        \"Soup Buntot | 462\",","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"ngnigel99"},"content":"        \"Soup Pindang (Fish) | 130\",","lastModifiedDate":"2021-10-27"},{"lineNumber":206,"author":{"gitId":"ngnigel99"},"content":"        \"Soup Pindang (Chicken) | 137\",","lastModifiedDate":"2021-10-27"},{"lineNumber":207,"author":{"gitId":"ngnigel99"},"content":"        \"Thai Tom Yam Goong | 205\",","lastModifiedDate":"2021-10-27"},{"lineNumber":208,"author":{"gitId":"ngnigel99"},"content":"        \"Egg Dah Dah | 86\",","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"ngnigel99"},"content":"        \"Sambal Egg | 105\",","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"ngnigel99"},"content":"        \"Sambal Goreng | 66\",","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"ngnigel99"},"content":"        \"Sayur Lodeh | 266\"","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"ngnigel99"},"content":"    };","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":214,"author":{"gitId":"ngnigel99"},"content":"    public static final String[] caiFan \u003d {","lastModifiedDate":"2021-10-27"},{"lineNumber":215,"author":{"gitId":"ngnigel99"},"content":"        \"Steamed Pork Rib | 201\",","lastModifiedDate":"2021-10-27"},{"lineNumber":216,"author":{"gitId":"ngnigel99"},"content":"        \"Chinese Leek with Tofu  | 109\",","lastModifiedDate":"2021-10-27"},{"lineNumber":217,"author":{"gitId":"ngnigel99"},"content":"        \"Kung Pao Chicken | 253\",","lastModifiedDate":"2021-10-27"},{"lineNumber":218,"author":{"gitId":"ngnigel99"},"content":"        \"Pig Liver with Spring Onion | 171\",","lastModifiedDate":"2021-10-27"},{"lineNumber":219,"author":{"gitId":"ngnigel99"},"content":"        \"Curry Chicken Drumstick | 130\",","lastModifiedDate":"2021-10-27"},{"lineNumber":220,"author":{"gitId":"ngnigel99"},"content":"        \"Stir Fried Pork Slices | 294\",","lastModifiedDate":"2021-10-27"},{"lineNumber":221,"author":{"gitId":"ngnigel99"},"content":"        \"Stir Fried Minced Pork | 181\",","lastModifiedDate":"2021-10-27"},{"lineNumber":222,"author":{"gitId":"ngnigel99"},"content":"        \"Bittergourd with Egg | 71\",","lastModifiedDate":"2021-10-27"},{"lineNumber":223,"author":{"gitId":"ngnigel99"},"content":"        \"Onion Egg | 141\",","lastModifiedDate":"2021-10-27"},{"lineNumber":224,"author":{"gitId":"ngnigel99"},"content":"        \"Stewed Potato | 143\",","lastModifiedDate":"2021-10-27"},{"lineNumber":225,"author":{"gitId":"ngnigel99"},"content":"        \"Stir Fried Nai Bai (Milk Cabbage) | 41\",","lastModifiedDate":"2021-10-27"},{"lineNumber":226,"author":{"gitId":"ngnigel99"},"content":"        \"Stir Fried Cabbage | 48\",","lastModifiedDate":"2021-10-27"},{"lineNumber":227,"author":{"gitId":"ngnigel99"},"content":"        \"Stir Fried Xiao Bai Cai | 48\",","lastModifiedDate":"2021-10-27"},{"lineNumber":228,"author":{"gitId":"ngnigel99"},"content":"        \"Stir Fried Broccoli | 51\",","lastModifiedDate":"2021-10-27"},{"lineNumber":229,"author":{"gitId":"ngnigel99"},"content":"        \"Stir Fried Long Beans | 48\",","lastModifiedDate":"2021-10-27"},{"lineNumber":230,"author":{"gitId":"ngnigel99"},"content":"        \"Stir Fried Brinjal | 63\",","lastModifiedDate":"2021-10-27"},{"lineNumber":231,"author":{"gitId":"ngnigel99"},"content":"        \"White Rice | 256\",","lastModifiedDate":"2021-10-27"},{"lineNumber":232,"author":{"gitId":"ngnigel99"},"content":"        \"Brown Rice | 233\"","lastModifiedDate":"2021-10-27"},{"lineNumber":233,"author":{"gitId":"ngnigel99"},"content":"    };","lastModifiedDate":"2021-10-27"},{"lineNumber":234,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":235,"author":{"gitId":"ngnigel99"},"content":"    public static final String[] chickenRice \u003d {","lastModifiedDate":"2021-10-27"},{"lineNumber":236,"author":{"gitId":"ngnigel99"},"content":"        \"Roasted Chicken Rice | 556\",","lastModifiedDate":"2021-10-27"},{"lineNumber":237,"author":{"gitId":"ngnigel99"},"content":"        \"White Chicken Rice | 533\",","lastModifiedDate":"2021-10-27"},{"lineNumber":238,"author":{"gitId":"ngnigel99"},"content":"        \"Char Siew Rice | 697\",","lastModifiedDate":"2021-10-27"},{"lineNumber":239,"author":{"gitId":"ngnigel99"},"content":"        \"Roasted Pork Rice | 680\",","lastModifiedDate":"2021-10-27"},{"lineNumber":240,"author":{"gitId":"ngnigel99"},"content":"        \"Roasted Chicken Noodles (Egg Noodles) - Regular | 320\",","lastModifiedDate":"2021-10-27"},{"lineNumber":241,"author":{"gitId":"ngnigel99"},"content":"        \"Roasted Chicken Noodles (Egg Noodles) - Large | 388\",","lastModifiedDate":"2021-10-27"},{"lineNumber":242,"author":{"gitId":"ngnigel99"},"content":"        \"Roasted Chicken Noodles (Hor Fun) - Regular | 341\",","lastModifiedDate":"2021-10-27"},{"lineNumber":243,"author":{"gitId":"ngnigel99"},"content":"        \"Roasted Chicken Noodles (Hor Fun) - Large | 409\",","lastModifiedDate":"2021-10-27"},{"lineNumber":244,"author":{"gitId":"ngnigel99"},"content":"        \"White Chicken Noodles (Egg Noodles) - Regular | 307\",","lastModifiedDate":"2021-10-27"},{"lineNumber":245,"author":{"gitId":"ngnigel99"},"content":"        \"White Chicken Noodles (Egg Noodles) - Large | 365\",","lastModifiedDate":"2021-10-27"},{"lineNumber":246,"author":{"gitId":"ngnigel99"},"content":"        \"White Chicken Noodles (Hor Fun) - Regular | 328\",","lastModifiedDate":"2021-10-27"},{"lineNumber":247,"author":{"gitId":"ngnigel99"},"content":"        \"White Chicken Noodles (Hor Fun) - Large | 386\",","lastModifiedDate":"2021-10-27"},{"lineNumber":248,"author":{"gitId":"ngnigel99"},"content":"        \"Char Siew Noodles (Egg Noodles) - Regular | 410\",","lastModifiedDate":"2021-10-27"},{"lineNumber":249,"author":{"gitId":"ngnigel99"},"content":"        \"Char Siew Noodles (Egg Noodles) - Large | 529\",","lastModifiedDate":"2021-10-27"},{"lineNumber":250,"author":{"gitId":"ngnigel99"},"content":"        \"Char Siew Noodles (Hor Fun) - Regular | 431\",","lastModifiedDate":"2021-10-27"},{"lineNumber":251,"author":{"gitId":"ngnigel99"},"content":"        \"Char Siew Noodles (Hor Fun) - Large | 550\",","lastModifiedDate":"2021-10-27"},{"lineNumber":252,"author":{"gitId":"ngnigel99"},"content":"        \"Roasted Pork Noodles (Egg Noodles) - Regular | 395\",","lastModifiedDate":"2021-10-27"},{"lineNumber":253,"author":{"gitId":"ngnigel99"},"content":"        \"Roasted Pork Noodles (Egg Noodles) - Large | 511\",","lastModifiedDate":"2021-10-27"},{"lineNumber":254,"author":{"gitId":"ngnigel99"},"content":"        \"Roasted Pork Noodles (Hor Fun) - Regular | 416\",","lastModifiedDate":"2021-10-27"},{"lineNumber":255,"author":{"gitId":"ngnigel99"},"content":"        \"Roasted Pork Noodles (Hor Fun) - Large  | 533\",","lastModifiedDate":"2021-10-27"},{"lineNumber":256,"author":{"gitId":"ngnigel99"},"content":"        \"Roasted Chicken Rice, Veg, Half Egg Set Meal | 604\",","lastModifiedDate":"2021-10-27"},{"lineNumber":257,"author":{"gitId":"ngnigel99"},"content":"        \"White Chicken Rice, Veg, Half Egg Set Meal | 582\",","lastModifiedDate":"2021-10-27"},{"lineNumber":258,"author":{"gitId":"ngnigel99"},"content":"        \"Char Siew Rice, Veg, Half Egg Set Meal | 746\",","lastModifiedDate":"2021-10-27"},{"lineNumber":259,"author":{"gitId":"ngnigel99"},"content":"        \"Roasted Pork Rice, Veg, Half Egg Set Meal | 728\",","lastModifiedDate":"2021-10-27"},{"lineNumber":260,"author":{"gitId":"ngnigel99"},"content":"        \"Curry Chicken Bee Hoon | 744\",","lastModifiedDate":"2021-10-27"},{"lineNumber":261,"author":{"gitId":"ngnigel99"},"content":"        \"Curry Chicken Noodles | 777\",","lastModifiedDate":"2021-10-27"},{"lineNumber":262,"author":{"gitId":"ngnigel99"},"content":"        \"Chicken Shredded Porridge | 150\",","lastModifiedDate":"2021-10-27"},{"lineNumber":263,"author":{"gitId":"ngnigel99"},"content":"        \"Roasted Pork Rice Soup | 238\"","lastModifiedDate":"2021-10-27"},{"lineNumber":264,"author":{"gitId":"ngnigel99"},"content":"    };","lastModifiedDate":"2021-10-27"},{"lineNumber":265,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":266,"author":{"gitId":"ngnigel99"},"content":"    public static final String[] hongKongCuisine \u003d {","lastModifiedDate":"2021-10-27"},{"lineNumber":267,"author":{"gitId":"ngnigel99"},"content":"        \"Set A - Kaya w Butter | 295\",","lastModifiedDate":"2021-10-27"},{"lineNumber":268,"author":{"gitId":"ngnigel99"},"content":"        \"Set B - Peanut w Butter | 271\",","lastModifiedDate":"2021-10-27"},{"lineNumber":269,"author":{"gitId":"ngnigel99"},"content":"        \"Set C - Kaya w Cheese  | 268\",","lastModifiedDate":"2021-10-27"},{"lineNumber":270,"author":{"gitId":"ngnigel99"},"content":"        \"Set D - Peanut Butter Thick Toast | 316\",","lastModifiedDate":"2021-10-27"},{"lineNumber":271,"author":{"gitId":"ngnigel99"},"content":"        \"French Toast w Golden Syrup  | 344\",","lastModifiedDate":"2021-10-27"},{"lineNumber":272,"author":{"gitId":"ngnigel99"},"content":"        \"Mega Breakfast  | 473\",","lastModifiedDate":"2021-10-27"},{"lineNumber":273,"author":{"gitId":"ngnigel99"},"content":"        \"Scrambled Egg w Luncheon Meat Toast  | 228\",","lastModifiedDate":"2021-10-27"},{"lineNumber":274,"author":{"gitId":"ngnigel99"},"content":"        \"HK Gong Zai Mian | 522\",","lastModifiedDate":"2021-10-27"},{"lineNumber":275,"author":{"gitId":"ngnigel99"},"content":"        \"Macaroni w Luncheon Meat Soup | 348\",","lastModifiedDate":"2021-10-27"},{"lineNumber":276,"author":{"gitId":"ngnigel99"},"content":"        \"Chicken Baked Rice | 353\",","lastModifiedDate":"2021-10-27"},{"lineNumber":277,"author":{"gitId":"ngnigel99"},"content":"        \"Mushroom Baked Rice | 172\",","lastModifiedDate":"2021-10-27"},{"lineNumber":278,"author":{"gitId":"ngnigel99"},"content":"        \"Curry Chicken Baked Rice | 358\",","lastModifiedDate":"2021-10-27"},{"lineNumber":279,"author":{"gitId":"ngnigel99"},"content":"        \"Seafood Tomato Baked Rice | 331\",","lastModifiedDate":"2021-10-27"},{"lineNumber":280,"author":{"gitId":"ngnigel99"},"content":"        \"Salmon Baked Rice | 466\",","lastModifiedDate":"2021-10-27"},{"lineNumber":281,"author":{"gitId":"ngnigel99"},"content":"        \"Scrambled Egg w Luncheon Meat Rice Bowl (Regular) | 331\",","lastModifiedDate":"2021-10-27"},{"lineNumber":282,"author":{"gitId":"ngnigel99"},"content":"        \"Scrambled Egg w Luncheon Meat Rice Bowl (Reduced) | 199\",","lastModifiedDate":"2021-10-27"},{"lineNumber":283,"author":{"gitId":"ngnigel99"},"content":"        \"Minced Chicken w Onsen Egg Rice Bowl (Regular) | 359\",","lastModifiedDate":"2021-10-27"},{"lineNumber":284,"author":{"gitId":"ngnigel99"},"content":"        \"Minced Chicken w Onsen Egg Rice Bowl (Reduced) | 176\",","lastModifiedDate":"2021-10-27"},{"lineNumber":285,"author":{"gitId":"ngnigel99"},"content":"        \"Teriyaki Chicken w Onsen Egg Rice Bowl (Regular) | 467\",","lastModifiedDate":"2021-10-27"},{"lineNumber":286,"author":{"gitId":"ngnigel99"},"content":"        \"Teriyaki Chicken w Onsen Egg Rice Bowl (Reduced) | 280\",","lastModifiedDate":"2021-10-27"},{"lineNumber":287,"author":{"gitId":"ngnigel99"},"content":"        \"Yakiniku Beef w Onsen Egg Rice Bowl (Regular) | 474\",","lastModifiedDate":"2021-10-27"},{"lineNumber":288,"author":{"gitId":"ngnigel99"},"content":"        \"Yakiniku Beef w Onsen Egg Rice Bowl (Reduced) | 284\",","lastModifiedDate":"2021-10-27"},{"lineNumber":289,"author":{"gitId":"ngnigel99"},"content":"        \"Vegetarian Fried Rice | 362\",","lastModifiedDate":"2021-10-27"},{"lineNumber":290,"author":{"gitId":"ngnigel99"},"content":"        \"Prawn Fried Rice | 466\",","lastModifiedDate":"2021-10-27"},{"lineNumber":291,"author":{"gitId":"ngnigel99"},"content":"        \"Smoked Duck \u0026 Sausages Fried Rice (Spicy) | 532\",","lastModifiedDate":"2021-10-27"},{"lineNumber":292,"author":{"gitId":"ngnigel99"},"content":"        \"Silverfish Fried Rice | 326\",","lastModifiedDate":"2021-10-27"},{"lineNumber":293,"author":{"gitId":"ngnigel99"},"content":"        \"Mala Beef Fried Rice | 505\",","lastModifiedDate":"2021-10-27"},{"lineNumber":294,"author":{"gitId":"ngnigel99"},"content":"        \"Sambal Petai w Prawns Fried Rice | 408\",","lastModifiedDate":"2021-10-27"},{"lineNumber":295,"author":{"gitId":"ngnigel99"},"content":"        \"Salmon Fried Rice | 437\",","lastModifiedDate":"2021-10-27"},{"lineNumber":296,"author":{"gitId":"ngnigel99"},"content":"        \"Steamed Milk Custard | 156\",","lastModifiedDate":"2021-10-27"},{"lineNumber":297,"author":{"gitId":"ngnigel99"},"content":"        \"Steamed Egg Custard | 197\",","lastModifiedDate":"2021-10-27"},{"lineNumber":298,"author":{"gitId":"ngnigel99"},"content":"        \"Mango Pomelo Sago | 178\",","lastModifiedDate":"2021-10-27"},{"lineNumber":299,"author":{"gitId":"ngnigel99"},"content":"        \"Mixed Fruits Pancake | 161\",","lastModifiedDate":"2021-10-27"},{"lineNumber":300,"author":{"gitId":"ngnigel99"},"content":"        \"Truffle Fries w Parmesan Cheese | 419\",","lastModifiedDate":"2021-10-27"},{"lineNumber":301,"author":{"gitId":"ngnigel99"},"content":"        \"Kopi O Kosong | 60\",","lastModifiedDate":"2021-10-27"},{"lineNumber":302,"author":{"gitId":"ngnigel99"},"content":"        \"Kopi O Siew Dai | 110\",","lastModifiedDate":"2021-10-27"},{"lineNumber":303,"author":{"gitId":"ngnigel99"},"content":"        \"Kopi O | 129\",","lastModifiedDate":"2021-10-27"},{"lineNumber":304,"author":{"gitId":"ngnigel99"},"content":"        \"Kopi | 170\",","lastModifiedDate":"2021-10-27"},{"lineNumber":305,"author":{"gitId":"ngnigel99"},"content":"        \"Kopi Siew Dai | 130\",","lastModifiedDate":"2021-10-27"},{"lineNumber":306,"author":{"gitId":"ngnigel99"},"content":"        \"Kopi C | 136\",","lastModifiedDate":"2021-10-27"},{"lineNumber":307,"author":{"gitId":"ngnigel99"},"content":"        \"Kopi C Siew Dai | 117\",","lastModifiedDate":"2021-10-27"},{"lineNumber":308,"author":{"gitId":"ngnigel99"},"content":"        \"Kopi C Kosong | 67\",","lastModifiedDate":"2021-10-27"},{"lineNumber":309,"author":{"gitId":"ngnigel99"},"content":"        \"Teh O Kosong | 6\",","lastModifiedDate":"2021-10-27"},{"lineNumber":310,"author":{"gitId":"ngnigel99"},"content":"        \"Teh O Siew Dai | 56\",","lastModifiedDate":"2021-10-27"},{"lineNumber":311,"author":{"gitId":"ngnigel99"},"content":"        \"Teh O | 76\",","lastModifiedDate":"2021-10-27"},{"lineNumber":312,"author":{"gitId":"ngnigel99"},"content":"        \"Teh | 116\",","lastModifiedDate":"2021-10-27"},{"lineNumber":313,"author":{"gitId":"ngnigel99"},"content":"        \"Teh Siew Dai | 77\",","lastModifiedDate":"2021-10-27"},{"lineNumber":314,"author":{"gitId":"ngnigel99"},"content":"        \"Teh C | 83\",","lastModifiedDate":"2021-10-27"},{"lineNumber":315,"author":{"gitId":"ngnigel99"},"content":"        \"Teh C Siew Dai | 63\",","lastModifiedDate":"2021-10-27"},{"lineNumber":316,"author":{"gitId":"ngnigel99"},"content":"        \"Teh C Kosong | 13\",","lastModifiedDate":"2021-10-27"},{"lineNumber":317,"author":{"gitId":"ngnigel99"},"content":"        \"Milo | 47\",","lastModifiedDate":"2021-10-27"},{"lineNumber":318,"author":{"gitId":"ngnigel99"},"content":"        \"Honey Lemon |  17\",","lastModifiedDate":"2021-10-27"},{"lineNumber":319,"author":{"gitId":"ngnigel99"},"content":"        \"Yuzu Tea | 7\",","lastModifiedDate":"2021-10-27"},{"lineNumber":320,"author":{"gitId":"ngnigel99"},"content":"        \"Ginger Lemon Cola  | 90\",","lastModifiedDate":"2021-10-27"},{"lineNumber":321,"author":{"gitId":"ngnigel99"},"content":"        \"Chinese Tea | 6\",","lastModifiedDate":"2021-10-27"},{"lineNumber":322,"author":{"gitId":"ngnigel99"},"content":"        \"Iced Signature HK Milk Tea | 116\",","lastModifiedDate":"2021-10-27"},{"lineNumber":323,"author":{"gitId":"ngnigel99"},"content":"        \"Iced Yuan Yang | 146\",","lastModifiedDate":"2021-10-27"},{"lineNumber":324,"author":{"gitId":"ngnigel99"},"content":"        \"Mineral Water | 0\",","lastModifiedDate":"2021-10-27"},{"lineNumber":325,"author":{"gitId":"ngnigel99"},"content":"        \"Coke | 134\",","lastModifiedDate":"2021-10-27"},{"lineNumber":326,"author":{"gitId":"ngnigel99"},"content":"        \"Coke No Sugar | 0\",","lastModifiedDate":"2021-10-27"},{"lineNumber":327,"author":{"gitId":"ngnigel99"},"content":"        \"100 Plus | 72\",","lastModifiedDate":"2021-10-27"},{"lineNumber":328,"author":{"gitId":"ngnigel99"},"content":"        \"Pokka Green Tea | 69\",","lastModifiedDate":"2021-10-27"},{"lineNumber":329,"author":{"gitId":"ngnigel99"},"content":"        \"Yeo\u0027s Soy Beann Drink | 170\",","lastModifiedDate":"2021-10-27"},{"lineNumber":330,"author":{"gitId":"ngnigel99"},"content":"        \"Hosen Orange Drink | 125\",","lastModifiedDate":"2021-10-27"},{"lineNumber":331,"author":{"gitId":"ngnigel99"},"content":"        \"Wang Lao Ji | 106\"","lastModifiedDate":"2021-10-27"},{"lineNumber":332,"author":{"gitId":"ngnigel99"},"content":"    };","lastModifiedDate":"2021-10-27"},{"lineNumber":333,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":334,"author":{"gitId":"ngnigel99"},"content":"    public static final String[] hungryBurger \u003d {","lastModifiedDate":"2021-10-27"},{"lineNumber":335,"author":{"gitId":"ngnigel99"},"content":"        \"Value Breakfast Set A(w/ Kopi O Kosong) | 580\",","lastModifiedDate":"2021-10-27"},{"lineNumber":336,"author":{"gitId":"ngnigel99"},"content":"        \"Value Breakfast Set A(w/ Teh O Kosong) | 580\",","lastModifiedDate":"2021-10-27"},{"lineNumber":337,"author":{"gitId":"ngnigel99"},"content":"        \"Value Breakfast Set B(w/ Kopi O Kosong) | 533\",","lastModifiedDate":"2021-10-27"},{"lineNumber":338,"author":{"gitId":"ngnigel99"},"content":"        \"Value Breakfast Set B(w/ Teh O Kosong) | 533\",","lastModifiedDate":"2021-10-27"},{"lineNumber":339,"author":{"gitId":"ngnigel99"},"content":"        \"Chicken Burger Set | 607\",","lastModifiedDate":"2021-10-27"},{"lineNumber":340,"author":{"gitId":"ngnigel99"},"content":"        \"Fish Burger Set | 601\",","lastModifiedDate":"2021-10-27"},{"lineNumber":341,"author":{"gitId":"ngnigel99"},"content":"        \"Signature Beef Burger Set | 627\",","lastModifiedDate":"2021-10-27"},{"lineNumber":342,"author":{"gitId":"ngnigel99"},"content":"        \"Portobello Mushroom Burger Set | 501\",","lastModifiedDate":"2021-10-27"},{"lineNumber":343,"author":{"gitId":"ngnigel99"},"content":"        \"Double Spicy Bird Burger Set (Spicy Chicken) | 1202\",","lastModifiedDate":"2021-10-27"},{"lineNumber":344,"author":{"gitId":"ngnigel99"},"content":"        \"Avocado Garden Salad (Regular) | 441\",","lastModifiedDate":"2021-10-27"},{"lineNumber":345,"author":{"gitId":"ngnigel99"},"content":"        \"Avocado Garden Salad (Petite) | 264\",","lastModifiedDate":"2021-10-27"},{"lineNumber":346,"author":{"gitId":"ngnigel99"},"content":"        \"Cheesy Pasta Salad (Regular) | 378\",","lastModifiedDate":"2021-10-27"},{"lineNumber":347,"author":{"gitId":"ngnigel99"},"content":"        \"Cheesy Pasta Salad (Petite) | 227\",","lastModifiedDate":"2021-10-27"},{"lineNumber":348,"author":{"gitId":"ngnigel99"},"content":"        \"Zesty Ocean Salad (Regular) | 527\",","lastModifiedDate":"2021-10-27"},{"lineNumber":349,"author":{"gitId":"ngnigel99"},"content":"        \"Abiqulu Smoked Chicken Salad (Regular) | 419\",","lastModifiedDate":"2021-10-27"},{"lineNumber":350,"author":{"gitId":"ngnigel99"},"content":"        \"Abiqulu Smoked Chicken Salad (Petite) | 257\",","lastModifiedDate":"2021-10-27"},{"lineNumber":351,"author":{"gitId":"ngnigel99"},"content":"        \"Cream of Mushroom Soup with Pastry Cap | 451\",","lastModifiedDate":"2021-10-27"},{"lineNumber":352,"author":{"gitId":"ngnigel99"},"content":"        \"Cream of Corn Soup with Pastry Cap | 459\",","lastModifiedDate":"2021-10-27"},{"lineNumber":353,"author":{"gitId":"ngnigel99"},"content":"        \"Cream of Chicken Soup with Pastry Cap | 582\",","lastModifiedDate":"2021-10-27"},{"lineNumber":354,"author":{"gitId":"ngnigel99"},"content":"        \"Massive Triple Trouble Cheeseburger w/ Fries | 1028\",","lastModifiedDate":"2021-10-27"},{"lineNumber":355,"author":{"gitId":"ngnigel99"},"content":"        \"Massive Triple Trouble Cheeseburger w/ Potato Wedges | 991\"","lastModifiedDate":"2021-10-27"},{"lineNumber":356,"author":{"gitId":"ngnigel99"},"content":"    };","lastModifiedDate":"2021-10-27"},{"lineNumber":357,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":358,"author":{"gitId":"ngnigel99"},"content":"    public static final String[] indian \u003d {","lastModifiedDate":"2021-10-27"},{"lineNumber":359,"author":{"gitId":"ngnigel99"},"content":"        \"Plain Prata | 182\",","lastModifiedDate":"2021-10-27"},{"lineNumber":360,"author":{"gitId":"ngnigel99"},"content":"        \"Egg Prata | 265\",","lastModifiedDate":"2021-10-27"},{"lineNumber":361,"author":{"gitId":"ngnigel99"},"content":"        \"Cheese Prata |233\",","lastModifiedDate":"2021-10-27"},{"lineNumber":362,"author":{"gitId":"ngnigel99"},"content":"        \"Egg \u0026 Onion Prata | 271\",","lastModifiedDate":"2021-10-27"},{"lineNumber":363,"author":{"gitId":"ngnigel99"},"content":"        \"Combo Prata | 322\",","lastModifiedDate":"2021-10-27"},{"lineNumber":364,"author":{"gitId":"ngnigel99"},"content":"        \"Plain Thosai | 136\",","lastModifiedDate":"2021-10-27"},{"lineNumber":365,"author":{"gitId":"ngnigel99"},"content":"        \"Egg Thosai | 219\",","lastModifiedDate":"2021-10-27"},{"lineNumber":366,"author":{"gitId":"ngnigel99"},"content":"        \"Cheese Thosai | 187\",","lastModifiedDate":"2021-10-27"},{"lineNumber":367,"author":{"gitId":"ngnigel99"},"content":"        \"Egg \u0026 Onion Thosai | 225\",","lastModifiedDate":"2021-10-27"},{"lineNumber":368,"author":{"gitId":"ngnigel99"},"content":"        \"Combo Thosai | 276\",","lastModifiedDate":"2021-10-27"},{"lineNumber":369,"author":{"gitId":"ngnigel99"},"content":"        \"Masala Thosai | 189\",","lastModifiedDate":"2021-10-27"},{"lineNumber":370,"author":{"gitId":"ngnigel99"},"content":"        \"Onion Vegetable Utappam | 347\",","lastModifiedDate":"2021-10-27"},{"lineNumber":371,"author":{"gitId":"ngnigel99"},"content":"        \"Briyani Rice | 268\",","lastModifiedDate":"2021-10-27"},{"lineNumber":372,"author":{"gitId":"ngnigel99"},"content":"        \"Tomato Rice | 262\",","lastModifiedDate":"2021-10-27"},{"lineNumber":373,"author":{"gitId":"ngnigel99"},"content":"        \"Nasi Goreng | 627\",","lastModifiedDate":"2021-10-27"},{"lineNumber":374,"author":{"gitId":"ngnigel99"},"content":"        \"Mee Goreng | 545\",","lastModifiedDate":"2021-10-27"},{"lineNumber":375,"author":{"gitId":"ngnigel99"},"content":"        \"Fried Chicken Drumstick | 397\",","lastModifiedDate":"2021-10-27"},{"lineNumber":376,"author":{"gitId":"ngnigel99"},"content":"        \"Curry Chicken Drumstick | 186\",","lastModifiedDate":"2021-10-27"},{"lineNumber":377,"author":{"gitId":"ngnigel99"},"content":"        \"Boneless Butter Chicken | 131\",","lastModifiedDate":"2021-10-27"},{"lineNumber":378,"author":{"gitId":"ngnigel99"},"content":"        \"Boneless Ginger Chicken | 131\",","lastModifiedDate":"2021-10-27"},{"lineNumber":379,"author":{"gitId":"ngnigel99"},"content":"        \"Black Pepper Chicken | 141\",","lastModifiedDate":"2021-10-27"},{"lineNumber":380,"author":{"gitId":"ngnigel99"},"content":"        \"Chilli Chicken | 324\",","lastModifiedDate":"2021-10-27"},{"lineNumber":381,"author":{"gitId":"ngnigel99"},"content":"        \"Mutton | 191\",","lastModifiedDate":"2021-10-27"},{"lineNumber":382,"author":{"gitId":"ngnigel99"},"content":"        \"Dory Fish | 105\",","lastModifiedDate":"2021-10-27"},{"lineNumber":383,"author":{"gitId":"ngnigel99"},"content":"        \"Fried Fish Pieces | 138\",","lastModifiedDate":"2021-10-27"},{"lineNumber":384,"author":{"gitId":"ngnigel99"},"content":"        \"Fried Dory Steak | 165\",","lastModifiedDate":"2021-10-27"},{"lineNumber":385,"author":{"gitId":"ngnigel99"},"content":"        \"Prawn | 110\",","lastModifiedDate":"2021-10-27"},{"lineNumber":386,"author":{"gitId":"ngnigel99"},"content":"        \"Sotong | 104\",","lastModifiedDate":"2021-10-27"},{"lineNumber":387,"author":{"gitId":"ngnigel99"},"content":"        \"Egg with Onion | 142\",","lastModifiedDate":"2021-10-27"},{"lineNumber":388,"author":{"gitId":"ngnigel99"},"content":"        \"Tofu | 83\",","lastModifiedDate":"2021-10-27"},{"lineNumber":389,"author":{"gitId":"ngnigel99"},"content":"        \"Chickpeas | 174\",","lastModifiedDate":"2021-10-27"},{"lineNumber":390,"author":{"gitId":"ngnigel99"},"content":"        \"Long Bean | 53\",","lastModifiedDate":"2021-10-27"},{"lineNumber":391,"author":{"gitId":"ngnigel99"},"content":"        \"Spinach | 125\",","lastModifiedDate":"2021-10-27"},{"lineNumber":392,"author":{"gitId":"ngnigel99"},"content":"        \"Broccoli \u0026 Cauliflower | 83\",","lastModifiedDate":"2021-10-27"},{"lineNumber":393,"author":{"gitId":"ngnigel99"},"content":"        \"Bittergourd | 72\"","lastModifiedDate":"2021-10-27"},{"lineNumber":394,"author":{"gitId":"ngnigel99"},"content":"    };","lastModifiedDate":"2021-10-27"},{"lineNumber":395,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":396,"author":{"gitId":"ngnigel99"},"content":"    public static final String[] nasiPadang \u003d {","lastModifiedDate":"2021-10-27"},{"lineNumber":397,"author":{"gitId":"ngnigel99"},"content":"        \"Mee Rebus | 372\",","lastModifiedDate":"2021-10-27"},{"lineNumber":398,"author":{"gitId":"ngnigel99"},"content":"        \"Mee Siam | 317\",","lastModifiedDate":"2021-10-27"},{"lineNumber":399,"author":{"gitId":"ngnigel99"},"content":"        \"Mee Soto | 557\",","lastModifiedDate":"2021-10-27"},{"lineNumber":400,"author":{"gitId":"ngnigel99"},"content":"        \"Mee Bandung | 407\",","lastModifiedDate":"2021-10-27"},{"lineNumber":401,"author":{"gitId":"ngnigel99"},"content":"        \"Lontong | 1187\",","lastModifiedDate":"2021-10-27"},{"lineNumber":402,"author":{"gitId":"ngnigel99"},"content":"        \"Mee Goreng | 324\",","lastModifiedDate":"2021-10-27"},{"lineNumber":403,"author":{"gitId":"ngnigel99"},"content":"        \"Fried Kway Teow | 414\",","lastModifiedDate":"2021-10-27"},{"lineNumber":404,"author":{"gitId":"ngnigel99"},"content":"        \"Fried Bee Hoon | 356\",","lastModifiedDate":"2021-10-27"},{"lineNumber":405,"author":{"gitId":"ngnigel99"},"content":"        \"Mee Hong Kong | 291\",","lastModifiedDate":"2021-10-27"},{"lineNumber":406,"author":{"gitId":"ngnigel99"},"content":"        \"Nasi Goreng Pattaya | 620\",","lastModifiedDate":"2021-10-27"},{"lineNumber":407,"author":{"gitId":"ngnigel99"},"content":"        \"Chicken Briyani | 866\",","lastModifiedDate":"2021-10-27"},{"lineNumber":408,"author":{"gitId":"ngnigel99"},"content":"        \"Nasi Lemak Set 1 (Chicken Wing, Egg) | 1204\",","lastModifiedDate":"2021-10-27"},{"lineNumber":409,"author":{"gitId":"ngnigel99"},"content":"        \"Nasi Lemak Set 2 (Fish Fillet, Hotdog, Ikan Bilis | 1211\",","lastModifiedDate":"2021-10-27"},{"lineNumber":410,"author":{"gitId":"ngnigel99"},"content":"        \"Curry Puff (Potato) | 425\",","lastModifiedDate":"2021-10-27"},{"lineNumber":411,"author":{"gitId":"ngnigel99"},"content":"        \"Curry Puff (Sardine) | 461\",","lastModifiedDate":"2021-10-27"},{"lineNumber":412,"author":{"gitId":"ngnigel99"},"content":"        \"Curry Puff (Chicken) | 409\",","lastModifiedDate":"2021-10-27"},{"lineNumber":413,"author":{"gitId":"ngnigel99"},"content":"        \"Spring Roll | 212\",","lastModifiedDate":"2021-10-27"},{"lineNumber":414,"author":{"gitId":"ngnigel99"},"content":"        \"Samosa | 156\",","lastModifiedDate":"2021-10-27"},{"lineNumber":415,"author":{"gitId":"ngnigel99"},"content":"        \"Tahu Goreng | 305\",","lastModifiedDate":"2021-10-27"},{"lineNumber":416,"author":{"gitId":"ngnigel99"},"content":"        \"Malay Cake (Ma Lai Go) | 214\",","lastModifiedDate":"2021-10-27"},{"lineNumber":417,"author":{"gitId":"ngnigel99"},"content":"        \"Kuih Lopes | 480\",","lastModifiedDate":"2021-10-27"},{"lineNumber":418,"author":{"gitId":"ngnigel99"},"content":"        \"Kuih Ongol Ubi (Ubi Kayu) | 279\",","lastModifiedDate":"2021-10-27"},{"lineNumber":419,"author":{"gitId":"ngnigel99"},"content":"        \"Fried Chicken Wing | 348\",","lastModifiedDate":"2021-10-27"},{"lineNumber":420,"author":{"gitId":"ngnigel99"},"content":"        \"Stir-Fried Beansprouts | 25\",","lastModifiedDate":"2021-10-27"},{"lineNumber":421,"author":{"gitId":"ngnigel99"},"content":"        \"Kangkung Belacan | 39\",","lastModifiedDate":"2021-10-27"},{"lineNumber":422,"author":{"gitId":"ngnigel99"},"content":"        \"Braised Egg and Chicken | 209\",","lastModifiedDate":"2021-10-27"},{"lineNumber":423,"author":{"gitId":"ngnigel99"},"content":"        \"Beef Rendang | 260\",","lastModifiedDate":"2021-10-27"},{"lineNumber":424,"author":{"gitId":"ngnigel99"},"content":"        \"Gulai Ayam (Chicken Curry) | 265\",","lastModifiedDate":"2021-10-27"},{"lineNumber":425,"author":{"gitId":"ngnigel99"},"content":"        \"Sayur Lodeh (Vegetable Curry) | 141\",","lastModifiedDate":"2021-10-27"},{"lineNumber":426,"author":{"gitId":"ngnigel99"},"content":"        \"Cuttlefish (Sambal Tumis Sotong) | 59\",","lastModifiedDate":"2021-10-27"},{"lineNumber":427,"author":{"gitId":"ngnigel99"},"content":"        \"Mutton Rendang | 268\",","lastModifiedDate":"2021-10-27"},{"lineNumber":428,"author":{"gitId":"ngnigel99"},"content":"        \"Kebaru Timun (Spicy Cucumber Salad) | 511\",","lastModifiedDate":"2021-10-27"},{"lineNumber":429,"author":{"gitId":"ngnigel99"},"content":"        \"Sambal Goreng Tempeh (Fried Spicy Tempeh) | 776\"","lastModifiedDate":"2021-10-27"},{"lineNumber":430,"author":{"gitId":"ngnigel99"},"content":"    };","lastModifiedDate":"2021-10-27"},{"lineNumber":431,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":432,"author":{"gitId":"ngnigel99"},"content":"    public static final String[] ramenFish \u003d {","lastModifiedDate":"2021-10-27"},{"lineNumber":433,"author":{"gitId":"ngnigel99"},"content":"        \"Signature Trio Eggs Spinach Soup (Regular) | 256\",","lastModifiedDate":"2021-10-27"},{"lineNumber":434,"author":{"gitId":"ngnigel99"},"content":"        \"Signature Trio Eggs Spinach Soup (Small Portion)  | 119\",","lastModifiedDate":"2021-10-27"},{"lineNumber":435,"author":{"gitId":"ngnigel99"},"content":"        \"Seafood Spinach Soup (Regular) | 188\",","lastModifiedDate":"2021-10-27"},{"lineNumber":436,"author":{"gitId":"ngnigel99"},"content":"        \"Sliced Fish Spinach Soup (Regular) |  224\",","lastModifiedDate":"2021-10-27"},{"lineNumber":437,"author":{"gitId":"ngnigel99"},"content":"        \"Sliced Fish Spinach Soup (Small Portion)| 134\",","lastModifiedDate":"2021-10-27"},{"lineNumber":438,"author":{"gitId":"ngnigel99"},"content":"        \"Fried Fish Spinach Soup (Regular) | 282\",","lastModifiedDate":"2021-10-27"},{"lineNumber":439,"author":{"gitId":"ngnigel99"},"content":"        \"Fried Fish Spinach Soup (Small Portion) | 169\",","lastModifiedDate":"2021-10-27"},{"lineNumber":440,"author":{"gitId":"ngnigel99"},"content":"        \"Double Mixed Fish Spinach Soup (Regular) | 257\",","lastModifiedDate":"2021-10-27"},{"lineNumber":441,"author":{"gitId":"ngnigel99"},"content":"        \"Double Mixed Fish Spinach Soup (Small Portion) | 191\",","lastModifiedDate":"2021-10-27"},{"lineNumber":442,"author":{"gitId":"ngnigel99"},"content":"        \"Fresh Mushrooms with Ramen (Regular) | 303\",","lastModifiedDate":"2021-10-27"},{"lineNumber":443,"author":{"gitId":"ngnigel99"},"content":"        \"Fresh Mushrooms with Ramen (Small Portion) | 182\",","lastModifiedDate":"2021-10-27"},{"lineNumber":444,"author":{"gitId":"ngnigel99"},"content":"        \"Mala Dry Ramen w Chicken Cheeseballs | 676\",","lastModifiedDate":"2021-10-27"},{"lineNumber":445,"author":{"gitId":"ngnigel99"},"content":"        \"Mala Dry Ramen w Fuzhou Fishballs | 713\",","lastModifiedDate":"2021-10-27"},{"lineNumber":446,"author":{"gitId":"ngnigel99"},"content":"        \"Mala Beef Ramen Soup | 644\"","lastModifiedDate":"2021-10-27"},{"lineNumber":447,"author":{"gitId":"ngnigel99"},"content":"    };","lastModifiedDate":"2021-10-27"},{"lineNumber":448,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":449,"author":{"gitId":"ngnigel99"},"content":"    public static final String[] taiwaneseCuisine \u003d {","lastModifiedDate":"2021-10-27"},{"lineNumber":450,"author":{"gitId":"ngnigel99"},"content":"        \"Sunrise Sandwich (Half) | 207\",","lastModifiedDate":"2021-10-27"},{"lineNumber":451,"author":{"gitId":"ngnigel99"},"content":"        \"Sunrise Sandwich (Full) | 414\",","lastModifiedDate":"2021-10-27"},{"lineNumber":452,"author":{"gitId":"ngnigel99"},"content":"        \"Tuna \u0026 Egg Sandwich (Half) | 178\",","lastModifiedDate":"2021-10-27"},{"lineNumber":453,"author":{"gitId":"ngnigel99"},"content":"        \"Tuna \u0026 Egg Sandwich (Full) | 355\",","lastModifiedDate":"2021-10-27"},{"lineNumber":454,"author":{"gitId":"ngnigel99"},"content":"        \"Ham \u0026 Egg Sandwich (Half) | 174\",","lastModifiedDate":"2021-10-27"},{"lineNumber":455,"author":{"gitId":"ngnigel99"},"content":"        \"Ham \u0026 Egg Sandwich (Full) | 349\",","lastModifiedDate":"2021-10-27"},{"lineNumber":456,"author":{"gitId":"ngnigel99"},"content":"        \"Pork Floss \u0026 Egg Sandwich (Half) | 184\",","lastModifiedDate":"2021-10-27"},{"lineNumber":457,"author":{"gitId":"ngnigel99"},"content":"        \"Pork Floss \u0026 Egg Sandwich (Full) | 349\",","lastModifiedDate":"2021-10-27"},{"lineNumber":458,"author":{"gitId":"ngnigel99"},"content":"        \"Honey Glazed Chicken Sandwich (Half) | 274\",","lastModifiedDate":"2021-10-27"},{"lineNumber":459,"author":{"gitId":"ngnigel99"},"content":"        \"Honey Glazed Chicken Sandwich (Full) | 548\",","lastModifiedDate":"2021-10-27"},{"lineNumber":460,"author":{"gitId":"ngnigel99"},"content":"        \"Plain Egg Crepe | 218\",","lastModifiedDate":"2021-10-27"},{"lineNumber":461,"author":{"gitId":"ngnigel99"},"content":"        \"Pork Floss Crepe | 169\",","lastModifiedDate":"2021-10-27"},{"lineNumber":462,"author":{"gitId":"ngnigel99"},"content":"        \"Hot Dog Crepe | 266\",","lastModifiedDate":"2021-10-27"},{"lineNumber":463,"author":{"gitId":"ngnigel99"},"content":"        \"Ham Crepe | 160\",","lastModifiedDate":"2021-10-27"},{"lineNumber":464,"author":{"gitId":"ngnigel99"},"content":"        \"Original Scallion Pancake | 324\",","lastModifiedDate":"2021-10-27"},{"lineNumber":465,"author":{"gitId":"ngnigel99"},"content":"        \"Egg \u0026 Scallion Pancake | 393\",","lastModifiedDate":"2021-10-27"},{"lineNumber":466,"author":{"gitId":"ngnigel99"},"content":"        \"Hot Dog \u0026 Scallion Pancake | 441\",","lastModifiedDate":"2021-10-27"},{"lineNumber":467,"author":{"gitId":"ngnigel99"},"content":"        \"Cheese \u0026 Scallion Pancake | 364\",","lastModifiedDate":"2021-10-27"},{"lineNumber":468,"author":{"gitId":"ngnigel99"},"content":"        \"Cheese \u0026 Hot Dog Scallion Pancake | 480\",","lastModifiedDate":"2021-10-27"},{"lineNumber":469,"author":{"gitId":"ngnigel99"},"content":"        \"Taiwanese Scallion Pancake | 403\",","lastModifiedDate":"2021-10-27"},{"lineNumber":470,"author":{"gitId":"ngnigel99"},"content":"        \"Honey Glazed Chicken Chop | 635\",","lastModifiedDate":"2021-10-27"},{"lineNumber":471,"author":{"gitId":"ngnigel99"},"content":"        \"X-Large Chicken Chop | 703\",","lastModifiedDate":"2021-10-27"},{"lineNumber":472,"author":{"gitId":"ngnigel99"},"content":"        \"Mala Chicken Chop | 636\",","lastModifiedDate":"2021-10-27"},{"lineNumber":473,"author":{"gitId":"ngnigel99"},"content":"        \"Salted Crispy Chicken (Small) | 472\",","lastModifiedDate":"2021-10-27"},{"lineNumber":474,"author":{"gitId":"ngnigel99"},"content":"        \"Salted Crispy Chicken Medium) | 569\",","lastModifiedDate":"2021-10-27"},{"lineNumber":475,"author":{"gitId":"ngnigel99"},"content":"        \"Salted Crispy Chicken (Large) | 711\",","lastModifiedDate":"2021-10-27"},{"lineNumber":476,"author":{"gitId":"ngnigel99"},"content":"        \"Sesame Seed Crispy Chicken (Small) | 377\",","lastModifiedDate":"2021-10-27"},{"lineNumber":477,"author":{"gitId":"ngnigel99"},"content":"        \"Sesame Seed Crispy Chicken (Medium) | 509\",","lastModifiedDate":"2021-10-27"},{"lineNumber":478,"author":{"gitId":"ngnigel99"},"content":"        \"Sesame Seed Crispy Chicken (Large) | 654\",","lastModifiedDate":"2021-10-27"},{"lineNumber":479,"author":{"gitId":"ngnigel99"},"content":"        \"Honey Glazed Chicken Chop Rice (Normal) | 669\",","lastModifiedDate":"2021-10-27"},{"lineNumber":480,"author":{"gitId":"ngnigel99"},"content":"        \"Honey Glazed Chicken Chop Rice (Large) | 893\",","lastModifiedDate":"2021-10-27"},{"lineNumber":481,"author":{"gitId":"ngnigel99"},"content":"        \"X-Large Chicken Chop Rice (Normal) | 672\",","lastModifiedDate":"2021-10-27"},{"lineNumber":482,"author":{"gitId":"ngnigel99"},"content":"        \"X-Large Chicken Chop Rice (Large) | 961\",","lastModifiedDate":"2021-10-27"},{"lineNumber":483,"author":{"gitId":"ngnigel99"},"content":"        \"Mala Chicken Chop Rice (Normal) | 669\",","lastModifiedDate":"2021-10-27"},{"lineNumber":484,"author":{"gitId":"ngnigel99"},"content":"        \"Mala Chicken Chop Rice (Large) | 894\",","lastModifiedDate":"2021-10-27"},{"lineNumber":485,"author":{"gitId":"ngnigel99"},"content":"        \"Salted Crispy Chicken Rice (Normal) | 634\",","lastModifiedDate":"2021-10-27"},{"lineNumber":486,"author":{"gitId":"ngnigel99"},"content":"        \"Salted Crispy Chicken Rice (Large) | 826\",","lastModifiedDate":"2021-10-27"},{"lineNumber":487,"author":{"gitId":"ngnigel99"},"content":"        \"Sesame Seed Crispy Chicken Rice (Normal) | 634\",","lastModifiedDate":"2021-10-27"},{"lineNumber":488,"author":{"gitId":"ngnigel99"},"content":"        \"Sesame Seed Crispy Chicken Rice (Large) | 839\",","lastModifiedDate":"2021-10-27"},{"lineNumber":489,"author":{"gitId":"ngnigel99"},"content":"        \"Taiwanese Pork Chop Rice (Normal) | 1022\",","lastModifiedDate":"2021-10-27"},{"lineNumber":490,"author":{"gitId":"ngnigel99"},"content":"        \"Taiwanese Pork Chop Rice (Large) | 1115\",","lastModifiedDate":"2021-10-27"},{"lineNumber":491,"author":{"gitId":"ngnigel99"},"content":"        \"Sweet \u0026 Sour Chicken Rice (Normal) | 697\",","lastModifiedDate":"2021-10-27"},{"lineNumber":492,"author":{"gitId":"ngnigel99"},"content":"        \"Sweet \u0026 Sour Chicken Rice (Large) | 937\",","lastModifiedDate":"2021-10-27"},{"lineNumber":493,"author":{"gitId":"ngnigel99"},"content":"        \"Teriyaki Chicken Rice (Normal) | 703\",","lastModifiedDate":"2021-10-27"},{"lineNumber":494,"author":{"gitId":"ngnigel99"},"content":"        \"Teriyaki Chicken Rice (Large) | 946\",","lastModifiedDate":"2021-10-27"},{"lineNumber":495,"author":{"gitId":"ngnigel99"},"content":"        \"Taiwanese Braised Pork Rice (Normal) | 654\",","lastModifiedDate":"2021-10-27"},{"lineNumber":496,"author":{"gitId":"ngnigel99"},"content":"        \"Taiwanese Braised Pork Rice (Large) | 741\"","lastModifiedDate":"2021-10-27"},{"lineNumber":497,"author":{"gitId":"ngnigel99"},"content":"    };","lastModifiedDate":"2021-10-27"},{"lineNumber":498,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":499,"author":{"gitId":"ngnigel99"},"content":"    public static final String[] vegetarian \u003d {","lastModifiedDate":"2021-10-27"},{"lineNumber":500,"author":{"gitId":"ngnigel99"},"content":"        \"Stir Fried Broccolli | 23\",","lastModifiedDate":"2021-10-27"},{"lineNumber":501,"author":{"gitId":"ngnigel99"},"content":"        \"Stir Fried Beansprouts | 20\",","lastModifiedDate":"2021-10-27"},{"lineNumber":502,"author":{"gitId":"ngnigel99"},"content":"        \"Stir Fried Bittergourd | 15\",","lastModifiedDate":"2021-10-27"},{"lineNumber":503,"author":{"gitId":"ngnigel99"},"content":"        \"Stir Fried Cabbage | 24\",","lastModifiedDate":"2021-10-27"},{"lineNumber":504,"author":{"gitId":"ngnigel99"},"content":"        \"Stir Fried Lotus Root | 37\",","lastModifiedDate":"2021-10-27"},{"lineNumber":505,"author":{"gitId":"ngnigel99"},"content":"        \"Stir Fried Seaweed | 45\",","lastModifiedDate":"2021-10-27"},{"lineNumber":506,"author":{"gitId":"ngnigel99"},"content":"        \"Stir Fried Tau Kwa | 71\",","lastModifiedDate":"2021-10-27"},{"lineNumber":507,"author":{"gitId":"ngnigel99"},"content":"        \"Stir Fried Golden Needle Vegetable | 42\",","lastModifiedDate":"2021-10-27"},{"lineNumber":508,"author":{"gitId":"ngnigel99"},"content":"        \"Stir Fried King Oyster Mushroom | 54\",","lastModifiedDate":"2021-10-27"},{"lineNumber":509,"author":{"gitId":"ngnigel99"},"content":"        \"Stir Fried Chinese Yam | 68\",","lastModifiedDate":"2021-10-27"},{"lineNumber":510,"author":{"gitId":"ngnigel99"},"content":"        \"Stir Fried Brinjal | 29\",","lastModifiedDate":"2021-10-27"},{"lineNumber":511,"author":{"gitId":"ngnigel99"},"content":"        \"Stir Fried Long Bean | 25\",","lastModifiedDate":"2021-10-27"},{"lineNumber":512,"author":{"gitId":"ngnigel99"},"content":"        \"Stir Fried Green Amaranth | 19\",","lastModifiedDate":"2021-10-27"},{"lineNumber":513,"author":{"gitId":"ngnigel99"},"content":"        \"Stir Fried Mushroom Mock Meat | 124\",","lastModifiedDate":"2021-10-27"},{"lineNumber":514,"author":{"gitId":"ngnigel99"},"content":"        \"Stir Fried Tau Gee Tang Hoon | 85\",","lastModifiedDate":"2021-10-27"},{"lineNumber":515,"author":{"gitId":"ngnigel99"},"content":"        \"Stir Fried Potato Fries | 110\",","lastModifiedDate":"2021-10-27"},{"lineNumber":516,"author":{"gitId":"ngnigel99"},"content":"        \"Chilli Mock Meat Bits | 96\",","lastModifiedDate":"2021-10-27"},{"lineNumber":517,"author":{"gitId":"ngnigel99"},"content":"        \"Sweet \u0026 Sour Mock Meat | 289\",","lastModifiedDate":"2021-10-27"},{"lineNumber":518,"author":{"gitId":"ngnigel99"},"content":"        \"Stewed Mock Fish Balls | 96\",","lastModifiedDate":"2021-10-27"},{"lineNumber":519,"author":{"gitId":"ngnigel99"},"content":"        \"Deep Fried Vegetable Fritter | 230\",","lastModifiedDate":"2021-10-27"},{"lineNumber":520,"author":{"gitId":"ngnigel99"},"content":"        \"Fried Noodle | 472\",","lastModifiedDate":"2021-10-27"},{"lineNumber":521,"author":{"gitId":"ngnigel99"},"content":"        \"Fried Kway Teow | 351\",","lastModifiedDate":"2021-10-27"},{"lineNumber":522,"author":{"gitId":"ngnigel99"},"content":"        \"Fried Rice | 258\"","lastModifiedDate":"2021-10-27"},{"lineNumber":523,"author":{"gitId":"ngnigel99"},"content":"    };","lastModifiedDate":"2021-10-27"},{"lineNumber":524,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":525,"author":{"gitId":"ngnigel99"},"content":"    public static final String[] western \u003d {","lastModifiedDate":"2021-10-27"},{"lineNumber":526,"author":{"gitId":"ngnigel99"},"content":"        \"Black Pepper Chicken Chop  | 775\",","lastModifiedDate":"2021-10-27"},{"lineNumber":527,"author":{"gitId":"ngnigel99"},"content":"        \"Chicken Cutlet |  966\",","lastModifiedDate":"2021-10-27"},{"lineNumber":528,"author":{"gitId":"ngnigel99"},"content":"        \"Grilled Dory Fish | 530\",","lastModifiedDate":"2021-10-27"},{"lineNumber":529,"author":{"gitId":"ngnigel99"},"content":"        \"Fish \u0026 Chip | 838\",","lastModifiedDate":"2021-10-27"},{"lineNumber":530,"author":{"gitId":"ngnigel99"},"content":"        \"Black Pepper Ribeye Steak | 807\",","lastModifiedDate":"2021-10-27"},{"lineNumber":531,"author":{"gitId":"ngnigel99"},"content":"        \"Combo Set 1: Ribeye Steak \u0026 Grilled Chicken | 831\",","lastModifiedDate":"2021-10-27"},{"lineNumber":532,"author":{"gitId":"ngnigel99"},"content":"        \"Combo Set 2: Ribeye Steak \u0026 Grilled Fish | 680\",","lastModifiedDate":"2021-10-27"},{"lineNumber":533,"author":{"gitId":"ngnigel99"},"content":"        \"Combo Set 3: Ribeye Steak \u0026 Grilled Salmon | 776\",","lastModifiedDate":"2021-10-27"},{"lineNumber":534,"author":{"gitId":"ngnigel99"},"content":"        \"Combo Set 4: Grilled Chicken Chop \u0026 Grilled Dory Fish | 750\",","lastModifiedDate":"2021-10-27"},{"lineNumber":535,"author":{"gitId":"ngnigel99"},"content":"        \"Arrabiata | 295\",","lastModifiedDate":"2021-10-27"},{"lineNumber":536,"author":{"gitId":"ngnigel99"},"content":"        \"Pomodoro | 341\",","lastModifiedDate":"2021-10-27"},{"lineNumber":537,"author":{"gitId":"ngnigel99"},"content":"        \"Creamy Chicken Spaghetti | 755\",","lastModifiedDate":"2021-10-27"},{"lineNumber":538,"author":{"gitId":"ngnigel99"},"content":"        \"Creamy Chicken Ham \u0026 Mushroom Spaghetti | 571\",","lastModifiedDate":"2021-10-27"},{"lineNumber":539,"author":{"gitId":"ngnigel99"},"content":"        \"Prawns \u0026 Mushroom Spaghetti | 557\",","lastModifiedDate":"2021-10-27"},{"lineNumber":540,"author":{"gitId":"ngnigel99"},"content":"        \"Hot Chicken Spaghetti | 365\",","lastModifiedDate":"2021-10-27"},{"lineNumber":541,"author":{"gitId":"ngnigel99"},"content":"        \"Creamy Sausage \u0026 Mushroom Spaghetti | 688\",","lastModifiedDate":"2021-10-27"},{"lineNumber":542,"author":{"gitId":"ngnigel99"},"content":"        \"Alfredo | 651\",","lastModifiedDate":"2021-10-27"},{"lineNumber":543,"author":{"gitId":"ngnigel99"},"content":"        \"Chicken Patty Spaghetti | 530\",","lastModifiedDate":"2021-10-27"},{"lineNumber":544,"author":{"gitId":"ngnigel99"},"content":"        \"Chicken Cheese Ball Spaghetti | 501\",","lastModifiedDate":"2021-10-27"},{"lineNumber":545,"author":{"gitId":"ngnigel99"},"content":"        \"Salmon e Funghi Spaghetti | 715\",","lastModifiedDate":"2021-10-27"},{"lineNumber":546,"author":{"gitId":"ngnigel99"},"content":"        \"Seafood Marinara | 440\",","lastModifiedDate":"2021-10-27"},{"lineNumber":547,"author":{"gitId":"ngnigel99"},"content":"        \"Creamy Fish Pasta | 616\",","lastModifiedDate":"2021-10-27"},{"lineNumber":548,"author":{"gitId":"ngnigel99"},"content":"        \"Baked Beans, Fries \u0026 Sausage | 359\",","lastModifiedDate":"2021-10-27"},{"lineNumber":549,"author":{"gitId":"ngnigel99"},"content":"        \"Baked Beans, Mashed Potato \u0026 Sausage | 447\"","lastModifiedDate":"2021-10-27"},{"lineNumber":550,"author":{"gitId":"ngnigel99"},"content":"    };","lastModifiedDate":"2021-10-27"},{"lineNumber":551,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"ngnigel99":551}},{"path":"src/main/java/seedu/duke/help/ClassPackageReader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.help;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"//@@author ngnigel99","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":" * Enables accessing classes on a realtime basis.","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":" * This is used in conjunction with help command,","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":" * to enable easy printing of syntax and command messages","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":" * without string overwrite on each update of command.","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":" * reference: https://www.baeldung.com/java-find-all-classes-in-package","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"public class ClassPackageReader {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    private static final String CALENDAR_PACKAGE \u003d \"seedu.duke.commands.calendar\";","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    private static final String FOOD_PACKAGE \u003d \"seedu.duke.commands.food\";","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    private static final String JOURNAL_PACKAGE \u003d \"seedu.duke.commands.journal\";","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"    private static final String MODULE_PACKAGE \u003d \"seedu.duke.commands.module\";","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"    private static final String ZOOM_PACKAGE \u003d \"seedu.duke.commands.zoom\";","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"    private static final String METHOD_NAME \u003d \"printClassNameAndSyntax\";    //in Command class","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"     * The system class loader loads all the classes found in the classpath.","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"     * @param packageName name of package to access","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"     * @return set of classes accessed","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"    public static Set\u003cClass\u003e getClasses(String packageName) {","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"        InputStream stream \u003d getPackageStream(packageName);","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"        BufferedReader reader \u003d new BufferedReader(new InputStreamReader(stream));","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"        return getClassesFromPackage(packageName, reader);","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"     * Streams a given package.","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"     * @param packageName package to be streamed.","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"     * @return stream package as stream.","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"    private static InputStream getPackageStream(String packageName) {","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"        InputStream stream \u003d ClassLoader.getSystemClassLoader()","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"                .getResourceAsStream(packageName.replaceAll(\"[.]\", \"/\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"        return stream;","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"     * Returns a set of classes extracting .class files from a package.","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"     * @param packageName name of the package to extract from.","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"     * @param reader buffered reader to read the files.","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"     * @return set of classes extracted.","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"    private static Set\u003cClass\u003e getClassesFromPackage(String packageName, BufferedReader reader) {","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"        return reader.lines()","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"                .filter(line -\u003e line.endsWith(\".class\"))","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"                .map(line -\u003e getClass(line, packageName))","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"     * Merges sets together.","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"     * @param a Set to be merged.","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"     * @param b Set(s) to be merged.","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"     * @param \u003cT\u003e Generic type of the final set.","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"ngnigel99"},"content":"     * @return Set some set with a, b, ... merged into.","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"ngnigel99"},"content":"    public static \u003cT\u003e Set\u003cT\u003e mergeSet(Set\u003cT\u003e a, Set\u003cT\u003e... b) {","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"ngnigel99"},"content":"        return new HashSet\u003cT\u003e() {","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"ngnigel99"},"content":"            {","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"ngnigel99"},"content":"                addAll(a);","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"ngnigel99"},"content":"                for (Set\u003cT\u003e c : b) {","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"ngnigel99"},"content":"                    addAll(c);","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"ngnigel99"},"content":"                }","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"ngnigel99"},"content":"        };","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"ngnigel99"},"content":"     * Loads a class given class name and package name.","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"ngnigel99"},"content":"     * @param className name of the class to be loaded.","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"ngnigel99"},"content":"     * @param packageName name of the package in which the class is found.","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"ngnigel99"},"content":"     * @return class some class to be loaded.","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"ngnigel99"},"content":"    public static Class getClass(String className, String packageName) {","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"ngnigel99"},"content":"            return Class.forName(packageName + \".\"","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"ngnigel99"},"content":"                    + className.substring(0, className.lastIndexOf(\u0027.\u0027)));","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"ngnigel99"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"ngnigel99"},"content":"            Ui.printMessage(\"Not found\");","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"ngnigel99"},"content":"        return null;","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"ngnigel99"},"content":"     * Reads all classes on runtime, filters out commands.","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"ngnigel99"},"content":"     * From filtered list, prints syntax variable tagged to command,","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"ngnigel99"},"content":"     * using the printSyntax method in Command class.","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"ngnigel99"},"content":"     * @throws InstantiationException if method fails to run.","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"ngnigel99"},"content":"     * @throws IllegalAccessException if method fails to run.","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"ngnigel99"},"content":"     * @throws InvocationTargetException if method fails to run.","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"ngnigel99"},"content":"    public static void getCommandsAndPrintSyntax() throws InstantiationException,","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"ngnigel99"},"content":"                                                            IllegalAccessException,","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"ngnigel99"},"content":"                                                            InvocationTargetException {","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"ngnigel99"},"content":"        Set\u003cClass\u003e calendarCommands \u003d getClasses(CALENDAR_PACKAGE);","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"ngnigel99"},"content":"        Set\u003cClass\u003e foodCommands \u003d getClasses(FOOD_PACKAGE);","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"ngnigel99"},"content":"        Set\u003cClass\u003e journalCommands \u003d getClasses(JOURNAL_PACKAGE);","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"ngnigel99"},"content":"        Set\u003cClass\u003e moduleCommands \u003d getClasses(MODULE_PACKAGE);","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"ngnigel99"},"content":"        Set\u003cClass\u003e zoomCommands \u003d getClasses(ZOOM_PACKAGE);","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"ngnigel99"},"content":"        Set\u003cClass\u003e allClasses \u003d mergeSet(calendarCommands,foodCommands,","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"ngnigel99"},"content":"                                        journalCommands, moduleCommands,","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"ngnigel99"},"content":"                                        zoomCommands);","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"ngnigel99"},"content":"        List\u003cClass\u003e filteredCommands \u003d filterClassesByCommand(allClasses);","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"ngnigel99"},"content":"        sortCommandByName(filteredCommands);    //sorts by naming convention","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"ngnigel99"},"content":"        runSyntaxCommands(filteredCommands);","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"ngnigel99"},"content":"     * Runs the overloaded \u003ccode\u003egetSyntax\u003c/code\u003e method in Commands.","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"ngnigel99"},"content":"     * Assumptions: List only includes classes that extend Command,","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"ngnigel99"},"content":"     *              and thus can invoke the getSyntax method,","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"ngnigel99"},"content":"     *              which prints the syntax of the command to the user.","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"ngnigel99"},"content":"     * @param filteredCommands list of classes that extend Command.","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"ngnigel99"},"content":"     * @throws InstantiationException If method fails to invoke.","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"ngnigel99"},"content":"     * @throws IllegalAccessException If method fails to invoke.","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"ngnigel99"},"content":"     * @throws InvocationTargetException If method fails to invoke.","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"ngnigel99"},"content":"    private static void runSyntaxCommands(List\u003cClass\u003e filteredCommands) throws InstantiationException,","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"ngnigel99"},"content":"                                                                                IllegalAccessException,","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"ngnigel99"},"content":"                                                                                InvocationTargetException {","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"ngnigel99"},"content":"        for (Class s : filteredCommands) {","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"ngnigel99"},"content":"            try {","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"ngnigel99"},"content":"                Method getSyntax \u003d s.getMethod(METHOD_NAME); //void method","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"ngnigel99"},"content":"                Object newInstance \u003d s.getDeclaredConstructor().newInstance();","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"ngnigel99"},"content":"                getSyntax.invoke(newInstance);    //run void method","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"ngnigel99"},"content":"            } catch (NoSuchMethodException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"ngnigel99"},"content":"                Ui.printMessage(s.getSimpleName() + \" class missing method, \");","lastModifiedDate":"2021-11-04"},{"lineNumber":154,"author":{"gitId":"ngnigel99"},"content":"                Ui.printMessage(\"check spelling\");","lastModifiedDate":"2021-11-04"},{"lineNumber":155,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"ngnigel99"},"content":"     * Differentiates command classes from others.","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"ngnigel99"},"content":"     * @param allClasses all classes read at runtime.","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"ngnigel99"},"content":"     * @return filteredCommands list of classes that extend Command.","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"ngnigel99"},"content":"    private static List\u003cClass\u003e filterClassesByCommand(Set\u003cClass\u003e allClasses) {","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"ngnigel99"},"content":"        List\u003cClass\u003e filteredCommands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"ngnigel99"},"content":"        for (Class s : allClasses) {","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"ngnigel99"},"content":"            if (Command.class.isAssignableFrom(s)) {    //filter commands","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"ngnigel99"},"content":"                filteredCommands.add(s);","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"ngnigel99"},"content":"            } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"ngnigel99"},"content":"                allClasses.remove(s);","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":172,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"ngnigel99"},"content":"        return filteredCommands;","lastModifiedDate":"2021-10-18"},{"lineNumber":174,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":176,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":177,"author":{"gitId":"ngnigel99"},"content":"     * Sorts command by name lexicographically.","lastModifiedDate":"2021-10-18"},{"lineNumber":178,"author":{"gitId":"ngnigel99"},"content":"     * @param filteredCommands list of commands.","lastModifiedDate":"2021-10-18"},{"lineNumber":179,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":180,"author":{"gitId":"ngnigel99"},"content":"    private static void sortCommandByName(List\u003cClass\u003e filteredCommands) {","lastModifiedDate":"2021-10-18"},{"lineNumber":181,"author":{"gitId":"ngnigel99"},"content":"        Collections.sort(filteredCommands, new Comparator\u003cClass\u003e() {","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"ngnigel99"},"content":"            @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":183,"author":{"gitId":"ngnigel99"},"content":"            public int compare(Class h1, Class h2) {","lastModifiedDate":"2021-10-18"},{"lineNumber":184,"author":{"gitId":"ngnigel99"},"content":"                return h1.getSimpleName().compareTo(h2.getSimpleName());","lastModifiedDate":"2021-10-18"},{"lineNumber":185,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":186,"author":{"gitId":"ngnigel99"},"content":"        });","lastModifiedDate":"2021-10-18"},{"lineNumber":187,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":188,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"ngnigel99":188}},{"path":"src/main/java/seedu/duke/journal/CollectionOfEntries.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.journal;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"//@@author SvethaMahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"public class CollectionOfEntries {","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"    private static ArrayList\u003cEntry\u003e entries \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"    public CollectionOfEntries() {","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"        this.entries \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"     * Returns list of entries.","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"     * @return list of entries","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"    public ArrayList\u003cEntry\u003e getEntriesArrayList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"SvethaMahadevan"},"content":"        return entries;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"     * Adds entry to collection of entries.","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param nameOfNote contains notebook name in which to add entry","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param nameOfEntry contains name of entry","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"SvethaMahadevan"},"content":"    public static void addEntry(String nameOfNote, String nameOfEntry) {","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"SvethaMahadevan"},"content":"        entries.add(new Entry(nameOfNote, nameOfEntry));","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"SvethaMahadevan":33}},{"path":"src/main/java/seedu/duke/journal/CollectionOfNotes.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.journal;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"//@@author SvethaMahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.StorageEntries;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"public class CollectionOfNotes {","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"    private static ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"    public CollectionOfNotes() {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"        this.notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"     * Returns list of notes.","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"SvethaMahadevan"},"content":"     * @return list of notes.","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"SvethaMahadevan"},"content":"    public ArrayList\u003cNote\u003e getNotesArrayList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"        return notes;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"SvethaMahadevan"},"content":"     * Adds notebooks to a collection of notebooks.","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param nameOfNote contains notebook name","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param tag contains tag name","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"SvethaMahadevan"},"content":"    public static void addNote(String nameOfNote, String tag) {","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"SvethaMahadevan"},"content":"        notes.add(new Note(nameOfNote, tag));","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"SvethaMahadevan"},"content":"     * Deletes notebooks from a collection of notebooks.","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param indexOfNote contains index of notebook to be deleted","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param storage Object of storage","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"SvethaMahadevan"},"content":"    public static void deleteNote(int indexOfNote, Storage storage) throws IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"SvethaMahadevan"},"content":"        notes.remove(indexOfNote - 1);","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"SvethaMahadevan"},"content":"        StorageEntries.writeEntries(storage.collectionOfEntries, storage);","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"SvethaMahadevan":47}},{"path":"src/main/java/seedu/duke/journal/Entry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.journal;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"//@@author SvethaMahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"public class Entry {","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"    private String entryName;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"    private String noteName;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"     * Constructor of Entry class.","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param noteName name of the notebook","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param titleOfJournalEntry title of the entry.","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"    public Entry(String noteName, String titleOfJournalEntry) {","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"        this.entryName \u003d titleOfJournalEntry;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"        this.noteName \u003d noteName;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"SvethaMahadevan"},"content":"     * Returns the name of the entry.","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"     * @return entryName which is a string variable which stores the name of entry","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"SvethaMahadevan"},"content":"    public String getNameOfJournalEntry() {","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"SvethaMahadevan"},"content":"        return entryName;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"SvethaMahadevan"},"content":"     * Returns the name of the notebook corresponding to the entry.","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"SvethaMahadevan"},"content":"     * @return noteName stores name of notebook corresponding to entry.","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"SvethaMahadevan"},"content":"    public String getEntryNoteName() {","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"SvethaMahadevan"},"content":"        return noteName;","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"SvethaMahadevan"},"content":"     * Returns names of entry and its corresponding notebook in format to save in data file.","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"SvethaMahadevan"},"content":"     * @return  formattedNameOfNoteAndEntry names of entry and its notebook in format","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"SvethaMahadevan"},"content":"    public String toSaveFileFormat() {","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"SvethaMahadevan"},"content":"        String formattedNameOfNoteAndEntry \u003d  noteName + \"|\" + entryName;","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"SvethaMahadevan"},"content":"        return formattedNameOfNoteAndEntry;","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"SvethaMahadevan":48}},{"path":"src/main/java/seedu/duke/journal/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.journal;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"//@@author SvethaMahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.InvalidTagNameException;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.StorageNotes;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"public class Note {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"    protected String noteName;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"    protected String tag;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"     * Constructor of Note class.","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param noteName name of the note","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param tag of the notebook","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"SvethaMahadevan"},"content":"    public Note(String noteName, String tag) {","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"SvethaMahadevan"},"content":"        this.noteName \u003d noteName;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"SvethaMahadevan"},"content":"     * Tags the notebook.","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param tag name of the tag for the notebook","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"SvethaMahadevan"},"content":"    public void tag(String tag, Storage storage) throws InvalidTagNameException, IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"SvethaMahadevan"},"content":"        if (!tag.equals(\"\")) {","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"SvethaMahadevan"},"content":"            this.tag \u003d tag;","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"SvethaMahadevan"},"content":"            StorageNotes.writeCollectionOfNotes(storage.collectionOfNotes);","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"SvethaMahadevan"},"content":"        } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"SvethaMahadevan"},"content":"            throw new InvalidTagNameException();","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"SvethaMahadevan"},"content":"     * Returns the tag.","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"SvethaMahadevan"},"content":"     * @return tag name of the notebook","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"SvethaMahadevan"},"content":"    public String getTag() {","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"SvethaMahadevan"},"content":"        return tag;","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"SvethaMahadevan"},"content":"     * Returns the name of the note.","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"SvethaMahadevan"},"content":"     * @return noteName which stores the name of the note.","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"SvethaMahadevan"},"content":"    public String getNoteName() {","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"SvethaMahadevan"},"content":"        return noteName;","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"SvethaMahadevan"},"content":"     * Returns name of notebook in format to save in data file.","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"SvethaMahadevan"},"content":"     * @return  stringForStorage name of notebook in format to save in data file.","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"SvethaMahadevan"},"content":"    public String toSaveFileFormat() {","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"SvethaMahadevan"},"content":"        String stringForStorage \u003d \"note\" + \"|\" + noteName + \"|\" + tag;","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"SvethaMahadevan"},"content":"        return stringForStorage;","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"SvethaMahadevan":71}},{"path":"src/main/java/seedu/duke/logger/ClickLogger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import java.io.File;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":" * A class to handle logging file.","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"public class ClickLogger {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"    private Logger logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"    private static ClickLogger loggerInstance \u003d null;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"    public static final String PROJECT_ROOT \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    public static final String PATH_TO_LOG_FILE \u003d Paths.get(PROJECT_ROOT, \"logs\", \"ClickLogs.log\").toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"     * Private constructor.","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"    private ClickLogger() {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"            File file \u003d new File(PATH_TO_LOG_FILE);","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"            file.createNewFile();","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"            SimpleFormatter formatter \u003d new SimpleFormatter();","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"            FileHandler fileHandler \u003d new FileHandler(PATH_TO_LOG_FILE);","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"            fileHandler.setFormatter(formatter);","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"            logger \u003d Logger.getLogger(\"ClickLogger\");","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"            logger.setUseParentHandlers(false);","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"     * Returns a new ClickLogger.","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"     * @return An instance of ClickLogger.","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"    public static Logger getNewLogger() {","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"        if (loggerInstance \u003d\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"            loggerInstance \u003d new ClickLogger();","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"        return loggerInstance.logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"nvbinh15":53}},{"path":"src/main/java/seedu/duke/module/GradePoints.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.module;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":" * A representation of the grades and their respective points.","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"public class GradePoints {","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"    static HashMap\u003cString, Double\u003e gradePoints \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor.","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"     * Defines the grades and their respective points.","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    public GradePoints() {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"        gradePoints.put(\"A+\", 5.0);","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"        gradePoints.put(\"A\", 5.0);","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"        gradePoints.put(\"A-\", 4.5);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"        gradePoints.put(\"B+\", 4.0);","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"        gradePoints.put(\"B\", 3.5);","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"        gradePoints.put(\"B-\", 3.0);","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"        gradePoints.put(\"C+\", 2.5);","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"        gradePoints.put(\"C\", 2.0);","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"        gradePoints.put(\"D+\", 1.5);","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"        gradePoints.put(\"D\", 1.0);","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"        gradePoints.put(\"F\", 0.0);","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"        gradePoints.put(\"CS\", -1.0);","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"        gradePoints.put(\"CU\", -1.0);","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"        gradePoints.put(\"NA\", -1.0);","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"     * Returns the point of a specific grade.","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"     * @param rawGrade The raw grade.","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"     * @return The respective point of the grade.","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"    public Double getPoint(String rawGrade) {","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"        return gradePoints.get(rawGrade);","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"     * Checks if a grade is valid or not.","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"     * @param rawGrade The raw grade.","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"     * @return true if the raw grade is a valid grade, false otherwise.","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"    public boolean isValidGrade(String rawGrade) {","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"        return gradePoints.containsKey(rawGrade.toUpperCase());","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"nvbinh15":53}},{"path":"src/main/java/seedu/duke/module/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.module;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":" * A representation of a Module.","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"public class Module {","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"    private String code;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"    private String name;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"    private int modularCredits;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"    private String expectedGrade;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    private static final String DEFAULT_MODULE_NAME \u003d \"None\";","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"    private static final int DEFAULT_MODULAR_CREDITS \u003d 4;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"    private static final String DEFAULT_EXPECTED_GRADE \u003d \"NA\";","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor specifying the module code.","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"     * @param code The module code.","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"    public Module(String code) {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"        this.code \u003d code;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"        this.name \u003d DEFAULT_MODULE_NAME;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"        this.modularCredits \u003d DEFAULT_MODULAR_CREDITS;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"        this.expectedGrade \u003d DEFAULT_EXPECTED_GRADE;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor specifying the module code and module name.","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"     * @param code The module code.","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"     * @param name The module name.","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"    public Module(String code, String name) {","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"        this.code \u003d code;","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"        this.modularCredits \u003d DEFAULT_MODULAR_CREDITS;","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"        this.expectedGrade \u003d DEFAULT_EXPECTED_GRADE;","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor specifying the module code, module name, and the expected grade.","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"     * @param code The module code.","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"     * @param name The module name.","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"     * @param modularCredits The modular credits of the module.","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"    public Module(String code, String name, int modularCredits) {","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"        this.code \u003d code;","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"        this.modularCredits \u003d modularCredits;","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"        this.expectedGrade \u003d DEFAULT_EXPECTED_GRADE;","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor specifying the module code, module name, the expected grade,","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"     *     and the modular credits.","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"     * @param code The module code.","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"     * @param name The module name.","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"     * @param expectedGrade The expected grade of the module.","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"     * @param modularCredits The modular credits of the module.","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"nvbinh15"},"content":"    public Module(String code, String name, int modularCredits, String expectedGrade) {","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"nvbinh15"},"content":"        this.code \u003d code;","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"nvbinh15"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"nvbinh15"},"content":"        this.expectedGrade \u003d expectedGrade;","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"nvbinh15"},"content":"        this.modularCredits \u003d modularCredits;","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"nvbinh15"},"content":"     * Returns the module code.","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"nvbinh15"},"content":"     * @return the module code.","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"nvbinh15"},"content":"    public String getCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"nvbinh15"},"content":"        return code;","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"nvbinh15"},"content":"     * Returns the module name.","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"nvbinh15"},"content":"     * @return the module name.","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"nvbinh15"},"content":"    public String getName() {","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"nvbinh15"},"content":"        return name;","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"nvbinh15"},"content":"     * Returns the module expected grade.","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"nvbinh15"},"content":"     * @return the module expected grade.","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"nvbinh15"},"content":"    public String getExpectedGrade() {","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"nvbinh15"},"content":"        return expectedGrade;","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"nvbinh15"},"content":"     * Returns the modular credits.","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"nvbinh15"},"content":"     * @return the modular credits.","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"nvbinh15"},"content":"    public int getModularCredits() {","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"nvbinh15"},"content":"        return modularCredits;","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"nvbinh15"},"content":"     * Sets the code of the module.","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"nvbinh15"},"content":"     * @param code The code to be set.","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"nvbinh15"},"content":"    public void setCode(String code) {","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"nvbinh15"},"content":"        this.code \u003d code;","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"nvbinh15"},"content":"     * Sets the name of the module.","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"nvbinh15"},"content":"     * @param name The name to be set.","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"nvbinh15"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"nvbinh15"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"nvbinh15"},"content":"     * Sets the expected grade of the module.","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"nvbinh15"},"content":"     * @param expectedGrade The grade to be set.","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"nvbinh15"},"content":"    public void setExpectedGrade(String expectedGrade) {","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"nvbinh15"},"content":"        this.expectedGrade \u003d expectedGrade;","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"nvbinh15"},"content":"     * Sets the modular credits.","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"nvbinh15"},"content":"     * @param modularCredits The modular credits to be set.","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"nvbinh15"},"content":"    public void setModularCredits(int modularCredits) {","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"nvbinh15"},"content":"        this.modularCredits \u003d modularCredits;","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"nvbinh15"},"content":"     * Overrides toString method of class Object to get the string representation of Module.","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"nvbinh15"},"content":"     * @return The string representation of the module.","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"nvbinh15"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"nvbinh15"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"nvbinh15"},"content":"        return this.code + \" | \" + this.name + \" | MC: \" + this.modularCredits","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"nvbinh15"},"content":"                + \" | Expected grade: \" + this.expectedGrade;","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":156,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"nvbinh15":156}},{"path":"src/main/java/seedu/duke/module/ModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.module;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":" * A class that represents the list of Modules.","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"public class ModuleList {","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"    private ArrayList\u003cModule\u003e modules;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor.","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"     * Creates an empty ArrayList of Module.","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    public ModuleList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"        this.modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    public ModuleList(ArrayList\u003cModule\u003e modules) {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"        this.modules \u003d modules;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"     * Gets the list of modules.","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"     * @return The list of modules.","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"    public ArrayList\u003cModule\u003e getModules() {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"        return modules;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"     * Sets the list of modules.","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"     * @param modules The list of modules to be set.","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"    public void setModules(ArrayList\u003cModule\u003e modules) {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"        this.modules \u003d modules;","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"     * Returns the total number of modules.","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"     * @return The total number of modules.","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"    public int getNumberOfModules() {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"        return modules.size();","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"     * Returns a module knowing its index in the ArrayList of modules (0-based).","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"     * @param index Index of the module to be returned (0-based).","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"     * @return The module having the given index","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"    public Module getModuleByIndex(int index) {","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"        return modules.get(index);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"     * Adds a new module to modules.","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"nvbinh15"},"content":"     * @param module The module to be added.","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"nvbinh15"},"content":"    public void addModule(Module module) {","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"nvbinh15"},"content":"        modules.add(module);","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"nvbinh15"},"content":"     * Removes a module from modules.","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"nvbinh15"},"content":"     * @param index Index of the module to be removed (0-based).","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"nvbinh15"},"content":"    public void removeModuleByIndex(int index) {","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"nvbinh15"},"content":"        modules.remove(index);","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"nvbinh15"},"content":"     * Checks whether the module already exists.","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"nvbinh15"},"content":"     * @param module The module to be checked.","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"nvbinh15"},"content":"     * @return true if there is a module with the same module code in modules, false otherwise.","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"nvbinh15"},"content":"    public boolean exist(Module module) {","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"nvbinh15"},"content":"        String newModuleCode \u003d module.getCode();","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"nvbinh15"},"content":"        for (Module m : modules) {","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"nvbinh15"},"content":"            if (m.getCode().equals(newModuleCode)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"nvbinh15"},"content":"                return true;","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"nvbinh15"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":93,"author":{"gitId":"nvbinh15"},"content":"        return false;","lastModifiedDate":"2021-11-02"},{"lineNumber":94,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"nvbinh15":95}},{"path":"src/main/java/seedu/duke/module/ModuleManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.module;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.module.DuplicateModuleException;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.module.IllegalExpectedGradeException;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.module.IllegalModularCreditException;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.module.IllegalModuleIndexException;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.parser.module.ParserModule;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.storage.StorageModule;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":" * A class that deals with the operations related to Modules.","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"public class ModuleManager {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_DELETE_MODULE \u003d \"I have deleted this module:\";","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"    private static GradePoints gradePoints \u003d new GradePoints();","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"    private static StorageModule storageModule \u003d new StorageModule();","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"    private static ParserModule parserModule \u003d new ParserModule();","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"    private static double currentCap \u003d 0.0;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"    private static int totalMcTaken \u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"     * Default constructor.","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"    public ModuleManager() {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"     * Adds a new module to the ModuleList.","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"     * @param module The Module to be added.","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"     * @throws IOException If there is an exceptions when reading or writing data to file.","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"     * @throws IllegalExpectedGradeException If the expected grade of the Module is illegal.","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"     * @throws IllegalModularCreditException If the modular credit of Module is illegal.","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"     * @throws DuplicateModuleException If the module is already in the module list.","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"    public void addNewModule(Module module) throws IOException, IllegalExpectedGradeException,","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"            IllegalModularCreditException, DuplicateModuleException {","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"        ModuleList moduleList \u003d storageModule.readModulesFromFile();","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"        String expectedGrade \u003d module.getExpectedGrade();","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"        if (!gradePoints.isValidGrade(expectedGrade)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"            throw new IllegalExpectedGradeException();","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"        int modularCredits \u003d module.getModularCredits();","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"        if (modularCredits \u003c 0) {","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"            throw new IllegalModularCreditException();","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"        if (moduleList.exist(module)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"            throw new DuplicateModuleException();","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"        moduleList.addModule(module);","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"        storageModule.saveModuleToFile(moduleList);","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"     * Deletes a module from the ModuleList.","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"nvbinh15"},"content":"     * @param moduleIndex Index of the Module to be deleted.","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"nvbinh15"},"content":"     * @throws IOException If there is an exceptions when reading or writing data to file.","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"nvbinh15"},"content":"     * @throws IllegalModuleIndexException If the index of the Module is illegal.","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"nvbinh15"},"content":"    public void deleteModule(int moduleIndex) throws IOException, IllegalModuleIndexException {","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"nvbinh15"},"content":"        ModuleList moduleList \u003d storageModule.readModulesFromFile();","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"nvbinh15"},"content":"        boolean isValidIndex \u003d (moduleIndex \u003e\u003d 0) \u0026\u0026 (moduleIndex \u003c moduleList.getNumberOfModules());","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"nvbinh15"},"content":"        if (!isValidIndex) {","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"nvbinh15"},"content":"            throw new IllegalModuleIndexException();","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"nvbinh15"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"nvbinh15"},"content":"        ui.printMessage(MESSAGE_DELETE_MODULE);","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"nvbinh15"},"content":"        ui.printMessage(String.valueOf(moduleList.getModuleByIndex(moduleIndex)));","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"nvbinh15"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"nvbinh15"},"content":"        moduleList.removeModuleByIndex(moduleIndex);","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"nvbinh15"},"content":"        storageModule.saveModuleToFile(moduleList);","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"nvbinh15"},"content":"    public static void setCapInfo(double cap, int mc) throws IOException {","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"nvbinh15"},"content":"        currentCap \u003d cap;","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"nvbinh15"},"content":"        totalMcTaken \u003d mc;","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"nvbinh15"},"content":"        storageModule.saveCapInfoToFile(cap, mc);","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"nvbinh15"},"content":"    public double getCurrentCap() {","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"nvbinh15"},"content":"        return currentCap;","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"nvbinh15"},"content":"    public int getTotalMcTaken() {","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"nvbinh15"},"content":"        return totalMcTaken;","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"nvbinh15"},"content":"     * Returns the expected Cumulative Average Point (CAP).","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"nvbinh15"},"content":"     * @return The expected CAP.","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"nvbinh15"},"content":"     * @throws IOException If there is an exceptions when reading data to file.","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"nvbinh15"},"content":"    public double getExpectedCap() throws IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"nvbinh15"},"content":"        ArrayList\u003cDouble\u003e capAndMc \u003d storageModule.readCapInfoFromFile();","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"nvbinh15"},"content":"        assert capAndMc.size() \u003d\u003d 2;","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"nvbinh15"},"content":"        currentCap \u003d capAndMc.get(0);","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"nvbinh15"},"content":"        totalMcTaken \u003d capAndMc.get(1).intValue();","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"nvbinh15"},"content":"        double totalPoints \u003d currentCap * totalMcTaken;","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"nvbinh15"},"content":"        int totalModularCredits \u003d totalMcTaken;","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"nvbinh15"},"content":"        ModuleList moduleList \u003d storageModule.readModulesFromFile();","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"nvbinh15"},"content":"        for (Module module : moduleList.getModules()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"nvbinh15"},"content":"            double point \u003d gradePoints.getPoint(module.getExpectedGrade());","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"nvbinh15"},"content":"            if (point !\u003d -1) {","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"nvbinh15"},"content":"                int credits \u003d module.getModularCredits();","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"nvbinh15"},"content":"                totalPoints +\u003d point * credits;","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"nvbinh15"},"content":"                totalModularCredits +\u003d credits;","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"nvbinh15"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"nvbinh15"},"content":"        return totalPoints / totalModularCredits;","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"nvbinh15":123}},{"path":"src/main/java/seedu/duke/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.commands.calendar.AddLectureCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.commands.calendar.AddTodoCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.commands.calendar.DeleteLectureCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.commands.calendar.EditTasksCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.commands.calendar.ListLecturesCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.commands.calendar.DisplayCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.commands.calendar.DeleteTaskCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.commands.calendar.ListTasksCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.food.AddFoodCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.commands.food.AddFoodFromReferenceCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.commands.food.ClearFoodCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.commands.food.DeleteFoodCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.commands.food.FindFoodByCalorieCount;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.commands.food.FindFoodWithDateCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.commands.food.ListFoodCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.commands.food.ViewReferenceFoodCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.journal.AddEntryCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.journal.AddNoteCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.commands.journal.DeleteEntryCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.commands.journal.DeleteNoteCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.commands.journal.FindNotebooksByTagCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.commands.journal.ListJournalCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.commands.journal.TagNotebookCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.module.AddModuleCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.commands.module.CapEditInfoCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.module.DeleteModuleCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.commands.module.GetExpectedCapCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.module.ListModuleCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.zoom.AddZoomCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.commands.ExitCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.commands.HelpCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.commands.zoom.ListZoomLinksCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.commands.zoom.OpenZoomLink;","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.calendar.IncorrectCommandException;","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.calendar.IncorrectNumberOfArgumentsException;","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.food.IllegalFoodParameterException;","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.food.InvalidItemIndexException;","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.food.InvalidStoreIndexException;","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.food.MissingDateException;","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.food.NegativeCaloriesException;","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.food.NoCalorieCountKeywordException;","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.food.NoCaloriesInputException;","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.food.NoItemDividerException;","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.food.NoStoreDividerException;","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.journal.EmptyJournalArgumentException;","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.journal.IncorrectJournalArgumentException;","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.syntax.ArgumentsNotFoundException;","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.syntax.IllegalCommandException;","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.syntax.IllegalDateTimeException;","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.syntax.WrongDividerOrderException;","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.food.FoodRecord;","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.parser.schedule.ParserSchedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_ADD_ENTRY;","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_ADD_NOTE;","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_CALENDAR;","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_CAP;","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_DELETE_ENTRY;","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_DELETE_NOTE;","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_DISPLAY;","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_EXIT;","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_FOOD;","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_HElP;","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"SvethaMahadevan"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_JOURNAL_FIND;","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_JOURNAL_LIST;","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"SvethaMahadevan"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_JOURNAL_TAG;","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_LECTURE;","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_MODULE;","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_NOTE;","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_SUFFIX_ADD;","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_SUFFIX_CLEAR;","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"ngnigel99"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_SUFFIX_CLT;","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_SUFFIX_DELETE;","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_SUFFIX_EDIT;","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_SUFFIX_EXPECTED;","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"ngnigel99"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_SUFFIX_FIND;","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_SUFFIX_LIST;","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"ngnigel99"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_SUFFIX_RADD;","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"ngnigel99"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_SUFFIX_VIEW;","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_TODO;","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_ZOOM;","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_ZOOM_SUFFIX_ADD;","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"shoibloya"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_ZOOM_SUFFIX_OPEN;","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"ngnigel99"},"content":"import static seedu.duke.constants.Messages.EMPTY_STRING;","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.PRINT_NOT_AN_INT;","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.CALENDAR_INVALID_ARGS;","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.CALENDAR_EDIT_DELETE_INVALID_ARGS;","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":100,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"nvbinh15"},"content":"public class Parser {","lastModifiedDate":"2021-10-04"},{"lineNumber":102,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":103,"author":{"gitId":"nvbinh15"},"content":"    static final String INPUT_DATE_TIME_FORMAT \u003d \"dd-MM-yyyy HHmm\";","lastModifiedDate":"2021-10-04"},{"lineNumber":104,"author":{"gitId":"nvbinh15"},"content":"    static final String OUTPUT_DATE_TIME_FORMAT \u003d \"MMM dd yyyy HH:mm\";","lastModifiedDate":"2021-10-04"},{"lineNumber":105,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":106,"author":{"gitId":"nvbinh15"},"content":"    static final int FOOD_MINIMUM_PARAMETER \u003d 2; //n/xx c/1","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"nvbinh15"},"content":"    static final String FOOD_NAME_DIVIDER \u003d \"n/\";","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"nvbinh15"},"content":"    static final String FOOD_CALORIE_DIVIDER \u003d \"c/\";","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"nvbinh15"},"content":"    static final String FOOD_DATE_DIVIDER \u003d \"d/\";","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":111,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":112,"author":{"gitId":"nvbinh15"},"content":"     * Converts date and time in string format to a LocalDateTime object.","lastModifiedDate":"2021-10-04"},{"lineNumber":113,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":114,"author":{"gitId":"nvbinh15"},"content":"     * @param string Date and time in string format.","lastModifiedDate":"2021-10-04"},{"lineNumber":115,"author":{"gitId":"nvbinh15"},"content":"     * @return A LocalDateTime object that represents the given date and time.","lastModifiedDate":"2021-10-04"},{"lineNumber":116,"author":{"gitId":"nvbinh15"},"content":"     * @throws IllegalDateTimeException If the input date time is invalid.","lastModifiedDate":"2021-10-04"},{"lineNumber":117,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":118,"author":{"gitId":"nvbinh15"},"content":"    public static LocalDateTime stringToDateTime(String string) throws IllegalDateTimeException {","lastModifiedDate":"2021-10-04"},{"lineNumber":119,"author":{"gitId":"nvbinh15"},"content":"        try {","lastModifiedDate":"2021-10-04"},{"lineNumber":120,"author":{"gitId":"nvbinh15"},"content":"            return LocalDateTime.parse(string, DateTimeFormatter.ofPattern(INPUT_DATE_TIME_FORMAT));","lastModifiedDate":"2021-10-04"},{"lineNumber":121,"author":{"gitId":"nvbinh15"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-04"},{"lineNumber":122,"author":{"gitId":"nvbinh15"},"content":"            throw new IllegalDateTimeException();","lastModifiedDate":"2021-10-04"},{"lineNumber":123,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":124,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":125,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":126,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":127,"author":{"gitId":"nvbinh15"},"content":"     * Converts date and time in LocalDateTime format to a string.","lastModifiedDate":"2021-10-04"},{"lineNumber":128,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":129,"author":{"gitId":"nvbinh15"},"content":"     * @param dateTime A LocalDateTime object that represents the given date and time.","lastModifiedDate":"2021-10-04"},{"lineNumber":130,"author":{"gitId":"nvbinh15"},"content":"     * @return The string representation of the given LocalDateTime object.","lastModifiedDate":"2021-10-04"},{"lineNumber":131,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":132,"author":{"gitId":"nvbinh15"},"content":"    public static String dateTimeToString(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-04"},{"lineNumber":133,"author":{"gitId":"nvbinh15"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(OUTPUT_DATE_TIME_FORMAT));","lastModifiedDate":"2021-10-04"},{"lineNumber":134,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":135,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":136,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":137,"author":{"gitId":"nvbinh15"},"content":"     * Formats the user\u0027s input date time.","lastModifiedDate":"2021-10-04"},{"lineNumber":138,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":139,"author":{"gitId":"nvbinh15"},"content":"     * @param rawDateTime The raw date time from user\u0027s input.","lastModifiedDate":"2021-10-04"},{"lineNumber":140,"author":{"gitId":"nvbinh15"},"content":"     * @return The string representation of other form of the given date time.","lastModifiedDate":"2021-10-04"},{"lineNumber":141,"author":{"gitId":"nvbinh15"},"content":"     * @throws IllegalDateTimeException If the input date time is invalid.","lastModifiedDate":"2021-10-04"},{"lineNumber":142,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":143,"author":{"gitId":"nvbinh15"},"content":"    public static String formatDateTime(String rawDateTime) throws IllegalDateTimeException {","lastModifiedDate":"2021-10-04"},{"lineNumber":144,"author":{"gitId":"nvbinh15"},"content":"        try {","lastModifiedDate":"2021-10-04"},{"lineNumber":145,"author":{"gitId":"nvbinh15"},"content":"            return dateTimeToString(stringToDateTime(rawDateTime));","lastModifiedDate":"2021-10-04"},{"lineNumber":146,"author":{"gitId":"nvbinh15"},"content":"        } catch (IllegalDateTimeException e) {","lastModifiedDate":"2021-10-04"},{"lineNumber":147,"author":{"gitId":"nvbinh15"},"content":"            throw new IllegalDateTimeException();","lastModifiedDate":"2021-10-04"},{"lineNumber":148,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":149,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":150,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":151,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":152,"author":{"gitId":"nvbinh15"},"content":"     * Splits raw user input into command word and command arguments.","lastModifiedDate":"2021-10-04"},{"lineNumber":153,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":154,"author":{"gitId":"nvbinh15"},"content":"     * @param userInput Raw input from user.","lastModifiedDate":"2021-10-04"},{"lineNumber":155,"author":{"gitId":"nvbinh15"},"content":"     * @return a String array of size 2 including the command type and the arguments.","lastModifiedDate":"2021-10-04"},{"lineNumber":156,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":157,"author":{"gitId":"nvbinh15"},"content":"    public static String[] splitCommandAndArgs(String userInput) {","lastModifiedDate":"2021-10-04"},{"lineNumber":158,"author":{"gitId":"nvbinh15"},"content":"        String[] tokens \u003d userInput.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2021-10-04"},{"lineNumber":159,"author":{"gitId":"nvbinh15"},"content":"        String command \u003d tokens[0];","lastModifiedDate":"2021-10-04"},{"lineNumber":160,"author":{"gitId":"nvbinh15"},"content":"        if (tokens.length \u003d\u003d 2) {","lastModifiedDate":"2021-10-04"},{"lineNumber":161,"author":{"gitId":"nvbinh15"},"content":"            return tokens;","lastModifiedDate":"2021-10-04"},{"lineNumber":162,"author":{"gitId":"nvbinh15"},"content":"        } else {","lastModifiedDate":"2021-10-04"},{"lineNumber":163,"author":{"gitId":"nvbinh15"},"content":"            return new String[] {command, EMPTY_STRING};","lastModifiedDate":"2021-10-04"},{"lineNumber":164,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":165,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":166,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":167,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":168,"author":{"gitId":"nvbinh15"},"content":"     * Parses a line of text to a food record.","lastModifiedDate":"2021-10-09"},{"lineNumber":169,"author":{"gitId":"nvbinh15"},"content":"     * Assumes that both name, calories field not null.","lastModifiedDate":"2021-10-09"},{"lineNumber":170,"author":{"gitId":"nvbinh15"},"content":"     * Note format: [NAME] | [CALORIES] | {DATE}","lastModifiedDate":"2021-10-23"},{"lineNumber":171,"author":{"gitId":"nvbinh15"},"content":"     * @param readLine line of text to read","lastModifiedDate":"2021-10-09"},{"lineNumber":172,"author":{"gitId":"nvbinh15"},"content":"     * @return FoodRecord food record object","lastModifiedDate":"2021-10-09"},{"lineNumber":173,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":174,"author":{"gitId":"nvbinh15"},"content":"    public static FoodRecord parseFoodSavedListToRecord(String readLine) {","lastModifiedDate":"2021-10-09"},{"lineNumber":175,"author":{"gitId":"nvbinh15"},"content":"        String[] nameCalories \u003d readLine.split(\"\\\\|\");","lastModifiedDate":"2021-10-09"},{"lineNumber":176,"author":{"gitId":"nvbinh15"},"content":"        if (nameCalories.length \u003d\u003d 2) {","lastModifiedDate":"2021-10-23"},{"lineNumber":177,"author":{"gitId":"nvbinh15"},"content":"            return new FoodRecord(nameCalories[0], Integer.parseInt(nameCalories[1].trim()));","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":179,"author":{"gitId":"nvbinh15"},"content":"        FoodRecord recordWithDate \u003d new FoodRecord(nameCalories[0], Integer.parseInt(nameCalories[1]));","lastModifiedDate":"2021-10-23"},{"lineNumber":180,"author":{"gitId":"nvbinh15"},"content":"        String dateToParse \u003d nameCalories[2];","lastModifiedDate":"2021-10-23"},{"lineNumber":181,"author":{"gitId":"nvbinh15"},"content":"        setDateOnFoodRecord(recordWithDate, dateToParse);","lastModifiedDate":"2021-10-23"},{"lineNumber":182,"author":{"gitId":"nvbinh15"},"content":"        return recordWithDate;","lastModifiedDate":"2021-10-23"},{"lineNumber":183,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":184,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":185,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":186,"author":{"gitId":"nvbinh15"},"content":"     * Returns a command to be executed based on the raw input from user.","lastModifiedDate":"2021-10-09"},{"lineNumber":187,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":188,"author":{"gitId":"nvbinh15"},"content":"     * @param userInput The raw input from user.","lastModifiedDate":"2021-10-04"},{"lineNumber":189,"author":{"gitId":"nvbinh15"},"content":"     * @return The command to be executed.","lastModifiedDate":"2021-10-04"},{"lineNumber":190,"author":{"gitId":"nvbinh15"},"content":"     * @throws ClickException If there is an exception to type DukeException occurs.","lastModifiedDate":"2021-10-09"},{"lineNumber":191,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":192,"author":{"gitId":"nvbinh15"},"content":"    public Command parseCommand(String userInput)","lastModifiedDate":"2021-10-13"},{"lineNumber":193,"author":{"gitId":"nvbinh15"},"content":"        throws ClickException, IncorrectNumberOfArgumentsException, IncorrectJournalArgumentException,","lastModifiedDate":"2021-10-13"},{"lineNumber":194,"author":{"gitId":"nvbinh15"},"content":"        EmptyJournalArgumentException, IncorrectCommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":195,"author":{"gitId":"nvbinh15"},"content":"        final String[] commandTypeAndParams \u003d splitCommandAndArgs(userInput);","lastModifiedDate":"2021-10-04"},{"lineNumber":196,"author":{"gitId":"nvbinh15"},"content":"        assert commandTypeAndParams.length \u003d\u003d 2;","lastModifiedDate":"2021-10-11"},{"lineNumber":197,"author":{"gitId":"nvbinh15"},"content":"        final String commandType \u003d commandTypeAndParams[0];","lastModifiedDate":"2021-10-04"},{"lineNumber":198,"author":{"gitId":"nvbinh15"},"content":"        final String commandArgs \u003d commandTypeAndParams[1];","lastModifiedDate":"2021-10-04"},{"lineNumber":199,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":200,"author":{"gitId":"nvbinh15"},"content":"        switch (commandType) {","lastModifiedDate":"2021-10-04"},{"lineNumber":201,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_EXIT:","lastModifiedDate":"2021-10-04"},{"lineNumber":202,"author":{"gitId":"nvbinh15"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-10-04"},{"lineNumber":203,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_CALENDAR:","lastModifiedDate":"2021-10-06"},{"lineNumber":204,"author":{"gitId":"nvbinh15"},"content":"            return getCalendarCommand(commandArgs, userInput);","lastModifiedDate":"2021-10-16"},{"lineNumber":205,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_FOOD:","lastModifiedDate":"2021-10-09"},{"lineNumber":206,"author":{"gitId":"nvbinh15"},"content":"            return getFoodCommand(userInput, commandArgs);","lastModifiedDate":"2021-10-13"},{"lineNumber":207,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_NOTE:","lastModifiedDate":"2021-10-11"},{"lineNumber":208,"author":{"gitId":"nvbinh15"},"content":"            String[] noteArguments \u003d commandArgs.split(\" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":209,"author":{"gitId":"nvbinh15"},"content":"            switch (noteArguments[0]) {","lastModifiedDate":"2021-10-11"},{"lineNumber":210,"author":{"gitId":"nvbinh15"},"content":"            case COMMAND_ADD_NOTE:","lastModifiedDate":"2021-10-09"},{"lineNumber":211,"author":{"gitId":"nvbinh15"},"content":"                return new AddNoteCommand(userInput);","lastModifiedDate":"2021-10-09"},{"lineNumber":212,"author":{"gitId":"nvbinh15"},"content":"            case COMMAND_ADD_ENTRY:","lastModifiedDate":"2021-10-11"},{"lineNumber":213,"author":{"gitId":"nvbinh15"},"content":"                return new AddEntryCommand(userInput);","lastModifiedDate":"2021-10-11"},{"lineNumber":214,"author":{"gitId":"nvbinh15"},"content":"            case COMMAND_JOURNAL_LIST:","lastModifiedDate":"2021-10-13"},{"lineNumber":215,"author":{"gitId":"nvbinh15"},"content":"                return new ListJournalCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":216,"author":{"gitId":"nvbinh15"},"content":"            case COMMAND_DELETE_NOTE:","lastModifiedDate":"2021-10-20"},{"lineNumber":217,"author":{"gitId":"nvbinh15"},"content":"                return new DeleteNoteCommand(userInput);","lastModifiedDate":"2021-10-20"},{"lineNumber":218,"author":{"gitId":"nvbinh15"},"content":"            case COMMAND_DELETE_ENTRY:","lastModifiedDate":"2021-10-24"},{"lineNumber":219,"author":{"gitId":"nvbinh15"},"content":"                return new DeleteEntryCommand(userInput);","lastModifiedDate":"2021-10-24"},{"lineNumber":220,"author":{"gitId":"nvbinh15"},"content":"            case COMMAND_JOURNAL_TAG:","lastModifiedDate":"2021-10-27"},{"lineNumber":221,"author":{"gitId":"nvbinh15"},"content":"                return new TagNotebookCommand(userInput);","lastModifiedDate":"2021-10-27"},{"lineNumber":222,"author":{"gitId":"nvbinh15"},"content":"            case COMMAND_JOURNAL_FIND:","lastModifiedDate":"2021-10-27"},{"lineNumber":223,"author":{"gitId":"nvbinh15"},"content":"                return new FindNotebooksByTagCommand(userInput);","lastModifiedDate":"2021-10-27"},{"lineNumber":224,"author":{"gitId":"nvbinh15"},"content":"            case \"\":","lastModifiedDate":"2021-10-13"},{"lineNumber":225,"author":{"gitId":"nvbinh15"},"content":"                throw new EmptyJournalArgumentException();","lastModifiedDate":"2021-10-13"},{"lineNumber":226,"author":{"gitId":"nvbinh15"},"content":"            default:","lastModifiedDate":"2021-10-11"},{"lineNumber":227,"author":{"gitId":"nvbinh15"},"content":"                throw new IncorrectJournalArgumentException();","lastModifiedDate":"2021-10-13"},{"lineNumber":228,"author":{"gitId":"nvbinh15"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":229,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_MODULE:","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"nvbinh15"},"content":"            return getModuleCommand(commandArgs);","lastModifiedDate":"2021-10-13"},{"lineNumber":231,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_CAP:","lastModifiedDate":"2021-10-25"},{"lineNumber":232,"author":{"gitId":"nvbinh15"},"content":"            switch (commandArgs) {","lastModifiedDate":"2021-10-25"},{"lineNumber":233,"author":{"gitId":"nvbinh15"},"content":"            case COMMAND_SUFFIX_EDIT:","lastModifiedDate":"2021-10-25"},{"lineNumber":234,"author":{"gitId":"nvbinh15"},"content":"                return new CapEditInfoCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":235,"author":{"gitId":"nvbinh15"},"content":"            case COMMAND_SUFFIX_EXPECTED:","lastModifiedDate":"2021-10-25"},{"lineNumber":236,"author":{"gitId":"nvbinh15"},"content":"                return new GetExpectedCapCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":237,"author":{"gitId":"nvbinh15"},"content":"            default:","lastModifiedDate":"2021-10-25"},{"lineNumber":238,"author":{"gitId":"nvbinh15"},"content":"                throw new ClickException();","lastModifiedDate":"2021-10-25"},{"lineNumber":239,"author":{"gitId":"nvbinh15"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":240,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_ZOOM:","lastModifiedDate":"2021-10-13"},{"lineNumber":241,"author":{"gitId":"nvbinh15"},"content":"            String[] zoomArgs \u003d commandArgs.split(\" \");","lastModifiedDate":"2021-10-13"},{"lineNumber":242,"author":{"gitId":"nvbinh15"},"content":"            switch (zoomArgs[0]) {","lastModifiedDate":"2021-10-13"},{"lineNumber":243,"author":{"gitId":"nvbinh15"},"content":"            case COMMAND_ZOOM_SUFFIX_ADD:","lastModifiedDate":"2021-10-13"},{"lineNumber":244,"author":{"gitId":"nvbinh15"},"content":"                return new AddZoomCommand(zoomArgs[1], zoomArgs[2]);","lastModifiedDate":"2021-10-13"},{"lineNumber":245,"author":{"gitId":"nvbinh15"},"content":"            case COMMAND_SUFFIX_LIST:","lastModifiedDate":"2021-10-18"},{"lineNumber":246,"author":{"gitId":"nvbinh15"},"content":"                return new ListZoomLinksCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":247,"author":{"gitId":"nvbinh15"},"content":"            case COMMAND_ZOOM_SUFFIX_OPEN:","lastModifiedDate":"2021-10-27"},{"lineNumber":248,"author":{"gitId":"nvbinh15"},"content":"                return new OpenZoomLink(zoomArgs[1]);","lastModifiedDate":"2021-10-27"},{"lineNumber":249,"author":{"gitId":"nvbinh15"},"content":"            default:","lastModifiedDate":"2021-10-13"},{"lineNumber":250,"author":{"gitId":"nvbinh15"},"content":"                throw new ArgumentsNotFoundException();","lastModifiedDate":"2021-10-17"},{"lineNumber":251,"author":{"gitId":"nvbinh15"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":252,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":253,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_HElP:","lastModifiedDate":"2021-10-13"},{"lineNumber":254,"author":{"gitId":"nvbinh15"},"content":"            String[] helpArgs \u003d commandArgs.split(\" \");","lastModifiedDate":"2021-10-13"},{"lineNumber":255,"author":{"gitId":"nvbinh15"},"content":"            if (helpArgs[0].equals(\"rt\")) {  //dev mode","lastModifiedDate":"2021-11-04"},{"lineNumber":256,"author":{"gitId":"nvbinh15"},"content":"                return new HelpCommand(\"rt\");","lastModifiedDate":"2021-11-04"},{"lineNumber":257,"author":{"gitId":"nvbinh15"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":258,"author":{"gitId":"nvbinh15"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":259,"author":{"gitId":"nvbinh15"},"content":"        default:","lastModifiedDate":"2021-10-18"},{"lineNumber":260,"author":{"gitId":"nvbinh15"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2021-11-01"},{"lineNumber":261,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":262,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":263,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":264,"author":{"gitId":"ngnigel99"},"content":"    //@@author ngnigel99","lastModifiedDate":"2021-10-22"},{"lineNumber":265,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":266,"author":{"gitId":"ngnigel99"},"content":"     * Returns appropriate command related to Food based  on user\u0027s input.","lastModifiedDate":"2021-10-13"},{"lineNumber":267,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":268,"author":{"gitId":"ngnigel99"},"content":"     * @param userInput Full string entered by user.","lastModifiedDate":"2021-10-13"},{"lineNumber":269,"author":{"gitId":"ngnigel99"},"content":"     * @param commandArgs second word onwards from userInput.","lastModifiedDate":"2021-10-13"},{"lineNumber":270,"author":{"gitId":"ngnigel99"},"content":"     * @return A command that\u0027s related to Food based on userInput.","lastModifiedDate":"2021-10-13"},{"lineNumber":271,"author":{"gitId":"ngnigel99"},"content":"     * @throws IllegalArgumentException if command entered does not exists, but starts with food.","lastModifiedDate":"2021-10-13"},{"lineNumber":272,"author":{"gitId":"ngnigel99"},"content":"     * @throws MissingDateException if date is missing from input.","lastModifiedDate":"2021-11-03"},{"lineNumber":273,"author":{"gitId":"ngnigel99"},"content":"     * @throws WrongDividerOrderException if divider order is wrong.","lastModifiedDate":"2021-11-03"},{"lineNumber":274,"author":{"gitId":"ngnigel99"},"content":"     * @throws ArgumentsNotFoundException if arguments not found.","lastModifiedDate":"2021-11-03"},{"lineNumber":275,"author":{"gitId":"ngnigel99"},"content":"     * @throws NoCalorieCountKeywordException if clt is not entered with command.","lastModifiedDate":"2021-11-03"},{"lineNumber":276,"author":{"gitId":"ngnigel99"},"content":"     * @throws NoCaloriesInputException if paramter is missing.","lastModifiedDate":"2021-11-03"},{"lineNumber":277,"author":{"gitId":"ngnigel99"},"content":"     * @throws NegativeCaloriesException if calorie count is negative.","lastModifiedDate":"2021-11-03"},{"lineNumber":278,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-13"},{"lineNumber":279,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":280,"author":{"gitId":"ngnigel99"},"content":"    private Command getFoodCommand(String userInput, String commandArgs) throws","lastModifiedDate":"2021-11-04"},{"lineNumber":281,"author":{"gitId":"ngnigel99"},"content":"            IllegalArgumentException,","lastModifiedDate":"2021-11-04"},{"lineNumber":282,"author":{"gitId":"ngnigel99"},"content":"            MissingDateException,","lastModifiedDate":"2021-11-04"},{"lineNumber":283,"author":{"gitId":"ngnigel99"},"content":"            WrongDividerOrderException,","lastModifiedDate":"2021-11-04"},{"lineNumber":284,"author":{"gitId":"ngnigel99"},"content":"            ArgumentsNotFoundException,","lastModifiedDate":"2021-11-04"},{"lineNumber":285,"author":{"gitId":"ngnigel99"},"content":"            NoCalorieCountKeywordException,","lastModifiedDate":"2021-11-04"},{"lineNumber":286,"author":{"gitId":"ngnigel99"},"content":"            NoCaloriesInputException,","lastModifiedDate":"2021-11-04"},{"lineNumber":287,"author":{"gitId":"ngnigel99"},"content":"            NegativeCaloriesException,","lastModifiedDate":"2021-11-04"},{"lineNumber":288,"author":{"gitId":"ngnigel99"},"content":"            InvalidItemIndexException,","lastModifiedDate":"2021-11-04"},{"lineNumber":289,"author":{"gitId":"ngnigel99"},"content":"            InvalidStoreIndexException,","lastModifiedDate":"2021-11-04"},{"lineNumber":290,"author":{"gitId":"ngnigel99"},"content":"            NoItemDividerException,","lastModifiedDate":"2021-11-04"},{"lineNumber":291,"author":{"gitId":"ngnigel99"},"content":"            NoStoreDividerException {","lastModifiedDate":"2021-11-04"},{"lineNumber":292,"author":{"gitId":"ngnigel99"},"content":"        String[] foodArgs \u003d commandArgs.split(\" \");","lastModifiedDate":"2021-10-13"},{"lineNumber":293,"author":{"gitId":"ngnigel99"},"content":"        switch (foodArgs[0]) {  //consider 2nd word","lastModifiedDate":"2021-10-13"},{"lineNumber":294,"author":{"gitId":"ngnigel99"},"content":"        case COMMAND_SUFFIX_ADD:","lastModifiedDate":"2021-10-13"},{"lineNumber":295,"author":{"gitId":"ngnigel99"},"content":"            if (userInput.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2021-11-04"},{"lineNumber":296,"author":{"gitId":"ngnigel99"},"content":"                throw new ArgumentsNotFoundException(\"n/ c/\");","lastModifiedDate":"2021-11-04"},{"lineNumber":297,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":298,"author":{"gitId":"ngnigel99"},"content":"            return new AddFoodCommand(","lastModifiedDate":"2021-10-13"},{"lineNumber":299,"author":{"gitId":"ngnigel99"},"content":"                    filterStringAfterCommand(userInput, COMMAND_FOOD + \" \" + COMMAND_SUFFIX_ADD)","lastModifiedDate":"2021-10-13"},{"lineNumber":300,"author":{"gitId":"ngnigel99"},"content":"            );","lastModifiedDate":"2021-10-13"},{"lineNumber":301,"author":{"gitId":"ngnigel99"},"content":"        case COMMAND_SUFFIX_DELETE:","lastModifiedDate":"2021-10-13"},{"lineNumber":302,"author":{"gitId":"ngnigel99"},"content":"            if (userInput.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2021-11-04"},{"lineNumber":303,"author":{"gitId":"ngnigel99"},"content":"                throw new ArgumentsNotFoundException(\"index of food to delete\");","lastModifiedDate":"2021-11-04"},{"lineNumber":304,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":305,"author":{"gitId":"ngnigel99"},"content":"            return new DeleteFoodCommand(","lastModifiedDate":"2021-10-13"},{"lineNumber":306,"author":{"gitId":"ngnigel99"},"content":"                    filterStringAfterCommand(userInput, COMMAND_FOOD + \" \" + COMMAND_SUFFIX_DELETE)","lastModifiedDate":"2021-10-13"},{"lineNumber":307,"author":{"gitId":"ngnigel99"},"content":"            );","lastModifiedDate":"2021-10-13"},{"lineNumber":308,"author":{"gitId":"ngnigel99"},"content":"        case COMMAND_SUFFIX_CLEAR:","lastModifiedDate":"2021-10-13"},{"lineNumber":309,"author":{"gitId":"ngnigel99"},"content":"            return new ClearFoodCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":310,"author":{"gitId":"ngnigel99"},"content":"        case COMMAND_SUFFIX_LIST:","lastModifiedDate":"2021-10-13"},{"lineNumber":311,"author":{"gitId":"ngnigel99"},"content":"            return new ListFoodCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":312,"author":{"gitId":"ngnigel99"},"content":"        case COMMAND_SUFFIX_VIEW:","lastModifiedDate":"2021-10-26"},{"lineNumber":313,"author":{"gitId":"ngnigel99"},"content":"            return new ViewReferenceFoodCommand(userInput);","lastModifiedDate":"2021-10-26"},{"lineNumber":314,"author":{"gitId":"ngnigel99"},"content":"        case COMMAND_SUFFIX_FIND:","lastModifiedDate":"2021-10-27"},{"lineNumber":315,"author":{"gitId":"ngnigel99"},"content":"            if (userInput.split(\" \").length \u003d\u003d 3) {","lastModifiedDate":"2021-10-27"},{"lineNumber":316,"author":{"gitId":"ngnigel99"},"content":"                return new FindFoodWithDateCommand(foodArgs[1]);","lastModifiedDate":"2021-10-27"},{"lineNumber":317,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":318,"author":{"gitId":"ngnigel99"},"content":"            throw new MissingDateException();","lastModifiedDate":"2021-11-04"},{"lineNumber":319,"author":{"gitId":"ngnigel99"},"content":"        case COMMAND_SUFFIX_RADD:","lastModifiedDate":"2021-10-27"},{"lineNumber":320,"author":{"gitId":"ngnigel99"},"content":"            if (userInput.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2021-11-04"},{"lineNumber":321,"author":{"gitId":"ngnigel99"},"content":"                throw new ArgumentsNotFoundException(\"s/ i/\");","lastModifiedDate":"2021-11-04"},{"lineNumber":322,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":323,"author":{"gitId":"ngnigel99"},"content":"            return new AddFoodFromReferenceCommand(","lastModifiedDate":"2021-10-27"},{"lineNumber":324,"author":{"gitId":"ngnigel99"},"content":"                    filterStringAfterCommand(userInput, COMMAND_FOOD","lastModifiedDate":"2021-10-27"},{"lineNumber":325,"author":{"gitId":"ngnigel99"},"content":"                            + \" \" + COMMAND_SUFFIX_RADD));","lastModifiedDate":"2021-10-27"},{"lineNumber":326,"author":{"gitId":"ngnigel99"},"content":"        case COMMAND_SUFFIX_CLT:","lastModifiedDate":"2021-11-03"},{"lineNumber":327,"author":{"gitId":"ngnigel99"},"content":"            if (userInput.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2021-11-04"},{"lineNumber":328,"author":{"gitId":"ngnigel99"},"content":"                throw new ArgumentsNotFoundException(\"calorie count\");","lastModifiedDate":"2021-11-04"},{"lineNumber":329,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":330,"author":{"gitId":"ngnigel99"},"content":"            return new FindFoodByCalorieCount(userInput);","lastModifiedDate":"2021-11-03"},{"lineNumber":331,"author":{"gitId":"ngnigel99"},"content":"        default:","lastModifiedDate":"2021-10-13"},{"lineNumber":332,"author":{"gitId":"ngnigel99"},"content":"            throw new IllegalArgumentException(Messages.LIST_PROPER_FEATURE +  COMMAND_FOOD);","lastModifiedDate":"2021-10-13"},{"lineNumber":333,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":334,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":335,"author":{"gitId":"ngnigel99"},"content":"    //@@author ngnigel99","lastModifiedDate":"2021-10-22"},{"lineNumber":336,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":337,"author":{"gitId":"nvbinh15"},"content":"    //@@author nvbinh15","lastModifiedDate":"2021-10-13"},{"lineNumber":338,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":339,"author":{"gitId":"nvbinh15"},"content":"     * Returns a command related to Module based on user\u0027s input.","lastModifiedDate":"2021-10-13"},{"lineNumber":340,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":341,"author":{"gitId":"nvbinh15"},"content":"     * @param commandArgs The command arguments.","lastModifiedDate":"2021-10-13"},{"lineNumber":342,"author":{"gitId":"nvbinh15"},"content":"     * @return A command that related to Module based on user\u0027s input.","lastModifiedDate":"2021-10-13"},{"lineNumber":343,"author":{"gitId":"nvbinh15"},"content":"     * @throws ClickException If there is an exception of type ClickException occurs.","lastModifiedDate":"2021-10-13"},{"lineNumber":344,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":345,"author":{"gitId":"nvbinh15"},"content":"    private Command getModuleCommand(String commandArgs) throws ClickException {","lastModifiedDate":"2021-10-13"},{"lineNumber":346,"author":{"gitId":"nvbinh15"},"content":"        String[] moduleCommandAndArgs \u003d splitCommandAndArgs(commandArgs);","lastModifiedDate":"2021-10-12"},{"lineNumber":347,"author":{"gitId":"nvbinh15"},"content":"        assert moduleCommandAndArgs.length \u003d\u003d 2;","lastModifiedDate":"2021-10-13"},{"lineNumber":348,"author":{"gitId":"nvbinh15"},"content":"        switch (moduleCommandAndArgs[0]) {","lastModifiedDate":"2021-10-12"},{"lineNumber":349,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_SUFFIX_ADD:","lastModifiedDate":"2021-10-12"},{"lineNumber":350,"author":{"gitId":"nvbinh15"},"content":"            return new AddModuleCommand(moduleCommandAndArgs[1]);","lastModifiedDate":"2021-10-12"},{"lineNumber":351,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_SUFFIX_LIST:","lastModifiedDate":"2021-10-12"},{"lineNumber":352,"author":{"gitId":"nvbinh15"},"content":"            return new ListModuleCommand();","lastModifiedDate":"2021-10-12"},{"lineNumber":353,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_SUFFIX_DELETE:","lastModifiedDate":"2021-10-12"},{"lineNumber":354,"author":{"gitId":"nvbinh15"},"content":"            return new DeleteModuleCommand(moduleCommandAndArgs[1]);","lastModifiedDate":"2021-10-12"},{"lineNumber":355,"author":{"gitId":"nvbinh15"},"content":"        default:","lastModifiedDate":"2021-10-12"},{"lineNumber":356,"author":{"gitId":"nvbinh15"},"content":"            throw new ClickException();","lastModifiedDate":"2021-10-12"},{"lineNumber":357,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":358,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":359,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":360,"author":{"gitId":"swatimahadevan"},"content":"    //@@author swatimahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":361,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":362,"author":{"gitId":"swatimahadevan"},"content":"     * Returns a Calendar command based on the user input.","lastModifiedDate":"2021-10-16"},{"lineNumber":363,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":364,"author":{"gitId":"swatimahadevan"},"content":"     * @param commandArgs The part of user given input from second word.","lastModifiedDate":"2021-10-16"},{"lineNumber":365,"author":{"gitId":"swatimahadevan"},"content":"     * @param userInput Input entered by user of type String.","lastModifiedDate":"2021-10-16"},{"lineNumber":366,"author":{"gitId":"swatimahadevan"},"content":"     * @return A calendar based command.","lastModifiedDate":"2021-10-16"},{"lineNumber":367,"author":{"gitId":"swatimahadevan"},"content":"     * @throws IncorrectNumberOfArgumentsException If command entered","lastModifiedDate":"2021-10-16"},{"lineNumber":368,"author":{"gitId":"swatimahadevan"},"content":"     *         by the user does not have the required number of arguments.","lastModifiedDate":"2021-10-16"},{"lineNumber":369,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":370,"author":{"gitId":"swatimahadevan"},"content":"    private Command getCalendarCommand(String commandArgs, String userInput)","lastModifiedDate":"2021-10-16"},{"lineNumber":371,"author":{"gitId":"swatimahadevan"},"content":"        throws IncorrectNumberOfArgumentsException, IncorrectCommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":372,"author":{"gitId":"swatimahadevan"},"content":"        String[] calendarArguments \u003d commandArgs.split(\" \");","lastModifiedDate":"2021-10-16"},{"lineNumber":373,"author":{"gitId":"swatimahadevan"},"content":"        switch (calendarArguments[0]) {","lastModifiedDate":"2021-10-16"},{"lineNumber":374,"author":{"gitId":"swatimahadevan"},"content":"        case COMMAND_SUFFIX_LIST:","lastModifiedDate":"2021-10-16"},{"lineNumber":375,"author":{"gitId":"swatimahadevan"},"content":"            if (calendarArguments.length \u003c 2) {","lastModifiedDate":"2021-10-27"},{"lineNumber":376,"author":{"gitId":"swatimahadevan"},"content":"                throw new IncorrectCommandException(\"Incorrect command for list!\");","lastModifiedDate":"2021-10-27"},{"lineNumber":377,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":378,"author":{"gitId":"swatimahadevan"},"content":"            Command list \u003d getCalendarListCommand(calendarArguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":379,"author":{"gitId":"swatimahadevan"},"content":"            return list;","lastModifiedDate":"2021-10-25"},{"lineNumber":380,"author":{"gitId":"swatimahadevan"},"content":"        case COMMAND_DISPLAY:","lastModifiedDate":"2021-10-25"},{"lineNumber":381,"author":{"gitId":"swatimahadevan"},"content":"            return new DisplayCommand(userInput);","lastModifiedDate":"2021-10-21"},{"lineNumber":382,"author":{"gitId":"swatimahadevan"},"content":"        case COMMAND_SUFFIX_EDIT:","lastModifiedDate":"2021-10-16"},{"lineNumber":383,"author":{"gitId":"swatimahadevan"},"content":"            return new EditTasksCommand(getTaskIndexForEdit(calendarArguments));","lastModifiedDate":"2021-10-29"},{"lineNumber":384,"author":{"gitId":"swatimahadevan"},"content":"        case COMMAND_TODO:","lastModifiedDate":"2021-10-16"},{"lineNumber":385,"author":{"gitId":"swatimahadevan"},"content":"            ArrayList\u003cString\u003e arguments \u003d ParserSchedule.parseTodoCommand(userInput);","lastModifiedDate":"2021-10-16"},{"lineNumber":386,"author":{"gitId":"swatimahadevan"},"content":"            return new AddTodoCommand(arguments);","lastModifiedDate":"2021-10-16"},{"lineNumber":387,"author":{"gitId":"swatimahadevan"},"content":"        case COMMAND_SUFFIX_DELETE:","lastModifiedDate":"2021-10-16"},{"lineNumber":388,"author":{"gitId":"swatimahadevan"},"content":"            if (calendarArguments.length \u003c 2) {","lastModifiedDate":"2021-10-27"},{"lineNumber":389,"author":{"gitId":"swatimahadevan"},"content":"                throw new IncorrectCommandException(\"Incorrect command for delete!\");","lastModifiedDate":"2021-10-27"},{"lineNumber":390,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":391,"author":{"gitId":"swatimahadevan"},"content":"            Command delete \u003d getCalendarDeleteCommand(calendarArguments, userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":392,"author":{"gitId":"swatimahadevan"},"content":"            return delete;","lastModifiedDate":"2021-10-25"},{"lineNumber":393,"author":{"gitId":"swatimahadevan"},"content":"        case COMMAND_LECTURE:","lastModifiedDate":"2021-10-25"},{"lineNumber":394,"author":{"gitId":"swatimahadevan"},"content":"            ArrayList\u003cString\u003e argumentsLecture \u003d ParserSchedule.parseLectureCommand(userInput);","lastModifiedDate":"2021-10-19"},{"lineNumber":395,"author":{"gitId":"swatimahadevan"},"content":"            return new AddLectureCommand(argumentsLecture);","lastModifiedDate":"2021-10-19"},{"lineNumber":396,"author":{"gitId":"swatimahadevan"},"content":"        default:","lastModifiedDate":"2021-10-16"},{"lineNumber":397,"author":{"gitId":"swatimahadevan"},"content":"            throw new IncorrectNumberOfArgumentsException(CALENDAR_INVALID_ARGS);","lastModifiedDate":"2021-10-21"},{"lineNumber":398,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":399,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":400,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":401,"author":{"gitId":"swatimahadevan"},"content":"    private Command getCalendarListCommand(String[] calendarArguments)","lastModifiedDate":"2021-10-25"},{"lineNumber":402,"author":{"gitId":"swatimahadevan"},"content":"        throws IncorrectCommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":403,"author":{"gitId":"swatimahadevan"},"content":"        if (calendarArguments[1].equals(\"task\")) {","lastModifiedDate":"2021-10-25"},{"lineNumber":404,"author":{"gitId":"swatimahadevan"},"content":"            return new ListTasksCommand();","lastModifiedDate":"2021-10-25"},{"lineNumber":405,"author":{"gitId":"swatimahadevan"},"content":"        } else if (calendarArguments[1].equals(\"lec\")) {","lastModifiedDate":"2021-10-25"},{"lineNumber":406,"author":{"gitId":"swatimahadevan"},"content":"            return new ListLecturesCommand();","lastModifiedDate":"2021-10-25"},{"lineNumber":407,"author":{"gitId":"swatimahadevan"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":408,"author":{"gitId":"swatimahadevan"},"content":"            throw new IncorrectCommandException(\"Incorrect command for list!\");","lastModifiedDate":"2021-10-25"},{"lineNumber":409,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":410,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":411,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":412,"author":{"gitId":"swatimahadevan"},"content":"    private Command getCalendarDeleteCommand(String[] calendarArguments, String userInput)","lastModifiedDate":"2021-10-25"},{"lineNumber":413,"author":{"gitId":"swatimahadevan"},"content":"        throws IncorrectCommandException, IncorrectNumberOfArgumentsException {","lastModifiedDate":"2021-10-25"},{"lineNumber":414,"author":{"gitId":"swatimahadevan"},"content":"        if (calendarArguments[1].equals(\"task\")) {","lastModifiedDate":"2021-10-25"},{"lineNumber":415,"author":{"gitId":"swatimahadevan"},"content":"            return new DeleteTaskCommand(getTaskIndex(calendarArguments), userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":416,"author":{"gitId":"swatimahadevan"},"content":"        } else if (calendarArguments[1].equals(\"lec\")) {","lastModifiedDate":"2021-10-25"},{"lineNumber":417,"author":{"gitId":"swatimahadevan"},"content":"            return new DeleteLectureCommand(getLectureIndex(calendarArguments), userInput);","lastModifiedDate":"2021-10-27"},{"lineNumber":418,"author":{"gitId":"swatimahadevan"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":419,"author":{"gitId":"swatimahadevan"},"content":"            throw new IncorrectCommandException(\"Incorrect command for delete!\");","lastModifiedDate":"2021-10-25"},{"lineNumber":420,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":421,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":422,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":423,"author":{"gitId":"swatimahadevan"},"content":"    private int getTaskIndex(String[] calendarArguments) throws IncorrectNumberOfArgumentsException {","lastModifiedDate":"2021-10-16"},{"lineNumber":424,"author":{"gitId":"swatimahadevan"},"content":"        if (calendarArguments.length !\u003d 3) {","lastModifiedDate":"2021-10-25"},{"lineNumber":425,"author":{"gitId":"swatimahadevan"},"content":"            throw new IncorrectNumberOfArgumentsException(CALENDAR_EDIT_DELETE_INVALID_ARGS);","lastModifiedDate":"2021-10-16"},{"lineNumber":426,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":427,"author":{"gitId":"swatimahadevan"},"content":"        int indexOfTaskToBeEdited \u003d 0;","lastModifiedDate":"2021-10-16"},{"lineNumber":428,"author":{"gitId":"swatimahadevan"},"content":"        try {","lastModifiedDate":"2021-10-16"},{"lineNumber":429,"author":{"gitId":"swatimahadevan"},"content":"            indexOfTaskToBeEdited \u003d Integer.parseInt(calendarArguments[2]);","lastModifiedDate":"2021-10-25"},{"lineNumber":430,"author":{"gitId":"swatimahadevan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-16"},{"lineNumber":431,"author":{"gitId":"swatimahadevan"},"content":"            System.out.println(PRINT_NOT_AN_INT);","lastModifiedDate":"2021-10-16"},{"lineNumber":432,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":433,"author":{"gitId":"swatimahadevan"},"content":"        return indexOfTaskToBeEdited;","lastModifiedDate":"2021-10-16"},{"lineNumber":434,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":435,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":436,"author":{"gitId":"swatimahadevan"},"content":"    private int getTaskIndexForEdit(String[] calendarArguments) throws IncorrectNumberOfArgumentsException {","lastModifiedDate":"2021-10-29"},{"lineNumber":437,"author":{"gitId":"swatimahadevan"},"content":"        if (calendarArguments.length !\u003d 2) {","lastModifiedDate":"2021-10-29"},{"lineNumber":438,"author":{"gitId":"swatimahadevan"},"content":"            throw new IncorrectNumberOfArgumentsException(\"Incorrect command for edit!\");","lastModifiedDate":"2021-10-29"},{"lineNumber":439,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":440,"author":{"gitId":"swatimahadevan"},"content":"        int indexOfTaskToBeEdited \u003d 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":441,"author":{"gitId":"swatimahadevan"},"content":"        try {","lastModifiedDate":"2021-10-29"},{"lineNumber":442,"author":{"gitId":"swatimahadevan"},"content":"            indexOfTaskToBeEdited \u003d Integer.parseInt(calendarArguments[1]);","lastModifiedDate":"2021-10-29"},{"lineNumber":443,"author":{"gitId":"swatimahadevan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-29"},{"lineNumber":444,"author":{"gitId":"swatimahadevan"},"content":"            System.out.println(PRINT_NOT_AN_INT);","lastModifiedDate":"2021-10-29"},{"lineNumber":445,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":446,"author":{"gitId":"swatimahadevan"},"content":"        return indexOfTaskToBeEdited;","lastModifiedDate":"2021-10-29"},{"lineNumber":447,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":448,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":449,"author":{"gitId":"swatimahadevan"},"content":"    private int getLectureIndex(String[] calendarArguments) throws IncorrectNumberOfArgumentsException {","lastModifiedDate":"2021-10-27"},{"lineNumber":450,"author":{"gitId":"swatimahadevan"},"content":"        if (calendarArguments.length !\u003d 3) {","lastModifiedDate":"2021-10-27"},{"lineNumber":451,"author":{"gitId":"swatimahadevan"},"content":"            throw new IncorrectNumberOfArgumentsException(\"Lecture index not entered...\");","lastModifiedDate":"2021-10-27"},{"lineNumber":452,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":453,"author":{"gitId":"swatimahadevan"},"content":"        int indexOfTaskToBeEdited \u003d 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":454,"author":{"gitId":"swatimahadevan"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":455,"author":{"gitId":"swatimahadevan"},"content":"            indexOfTaskToBeEdited \u003d Integer.parseInt(calendarArguments[2]);","lastModifiedDate":"2021-10-27"},{"lineNumber":456,"author":{"gitId":"swatimahadevan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":457,"author":{"gitId":"swatimahadevan"},"content":"            System.out.println(PRINT_NOT_AN_INT);","lastModifiedDate":"2021-10-27"},{"lineNumber":458,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":459,"author":{"gitId":"swatimahadevan"},"content":"        return indexOfTaskToBeEdited;","lastModifiedDate":"2021-10-27"},{"lineNumber":460,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":461,"author":{"gitId":"swatimahadevan"},"content":"    //@@author","lastModifiedDate":"2021-10-27"},{"lineNumber":462,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":463,"author":{"gitId":"ngnigel99"},"content":"    public static int getWordCount(String input) {","lastModifiedDate":"2021-10-11"},{"lineNumber":464,"author":{"gitId":"ngnigel99"},"content":"        return input.trim().split(\" \").length;","lastModifiedDate":"2021-10-11"},{"lineNumber":465,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":466,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":467,"author":{"gitId":"ngnigel99"},"content":"    //@@author ngnigel99","lastModifiedDate":"2021-10-22"},{"lineNumber":468,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":469,"author":{"gitId":"ngnigel99"},"content":"     * Returns a string representing a data block, separated by 2 dividers.","lastModifiedDate":"2021-10-11"},{"lineNumber":470,"author":{"gitId":"ngnigel99"},"content":"     * For example, n/ [DATA_1] c/ [DATA_2], if n/ is passed, DATA_1 would be returned.","lastModifiedDate":"2021-10-11"},{"lineNumber":471,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":472,"author":{"gitId":"ngnigel99"},"content":"     * @param input input that contains dividers and data","lastModifiedDate":"2021-10-11"},{"lineNumber":473,"author":{"gitId":"ngnigel99"},"content":"     * @param dividerBefore divider before the data","lastModifiedDate":"2021-10-11"},{"lineNumber":474,"author":{"gitId":"ngnigel99"},"content":"     * @param dividerAfter divider after the data","lastModifiedDate":"2021-10-11"},{"lineNumber":475,"author":{"gitId":"ngnigel99"},"content":"     * @return data Array List of data extracted, containing both DATA_1 and DATA_2","lastModifiedDate":"2021-10-11"},{"lineNumber":476,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":477,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-11"},{"lineNumber":478,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":479,"author":{"gitId":"ngnigel99"},"content":"    public static String[] getData(String input,","lastModifiedDate":"2021-10-11"},{"lineNumber":480,"author":{"gitId":"ngnigel99"},"content":"                                   String dividerBefore,","lastModifiedDate":"2021-10-11"},{"lineNumber":481,"author":{"gitId":"ngnigel99"},"content":"                                   String dividerAfter)","lastModifiedDate":"2021-10-11"},{"lineNumber":482,"author":{"gitId":"ngnigel99"},"content":"        throws WrongDividerOrderException, ArgumentsNotFoundException {","lastModifiedDate":"2021-10-11"},{"lineNumber":483,"author":{"gitId":"ngnigel99"},"content":"        if (!(input.contains(dividerBefore) || input.contains(dividerAfter))) {","lastModifiedDate":"2021-11-03"},{"lineNumber":484,"author":{"gitId":"ngnigel99"},"content":"            throw new ArgumentsNotFoundException();","lastModifiedDate":"2021-10-11"},{"lineNumber":485,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":486,"author":{"gitId":"ngnigel99"},"content":"        if (input.indexOf(dividerBefore) \u003e\u003d input.indexOf(dividerAfter)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":487,"author":{"gitId":"ngnigel99"},"content":"            throw new WrongDividerOrderException();","lastModifiedDate":"2021-10-11"},{"lineNumber":488,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":489,"author":{"gitId":"ngnigel99"},"content":"        assert !input.equals(\"\") : \"exception not accounted for empty string!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":490,"author":{"gitId":"ngnigel99"},"content":"        assert input.indexOf(dividerBefore) \u003c input.indexOf(dividerAfter) : \"divider order is wrong!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":491,"author":{"gitId":"ngnigel99"},"content":"        int indexOfAttribute1 \u003d input.indexOf(dividerBefore);","lastModifiedDate":"2021-11-03"},{"lineNumber":492,"author":{"gitId":"ngnigel99"},"content":"        int indexOfAttribute2 \u003d input.indexOf(dividerAfter);","lastModifiedDate":"2021-11-03"},{"lineNumber":493,"author":{"gitId":"ngnigel99"},"content":"        String dataFirst \u003d input.substring(indexOfAttribute1 + 2, indexOfAttribute2).strip();","lastModifiedDate":"2021-11-03"},{"lineNumber":494,"author":{"gitId":"ngnigel99"},"content":"        String dataSecond \u003d input.substring(indexOfAttribute2 + 2).strip();","lastModifiedDate":"2021-11-03"},{"lineNumber":495,"author":{"gitId":"ngnigel99"},"content":"        if (dataFirst.equals(\"\") || dataSecond.equals(\"\")) {","lastModifiedDate":"2021-11-04"},{"lineNumber":496,"author":{"gitId":"ngnigel99"},"content":"            throw new ArgumentsNotFoundException();","lastModifiedDate":"2021-11-04"},{"lineNumber":497,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":498,"author":{"gitId":"ngnigel99"},"content":"        return  new String[] {dataFirst, dataSecond};","lastModifiedDate":"2021-10-11"},{"lineNumber":499,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":500,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":501,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":502,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":503,"author":{"gitId":"ngnigel99"},"content":"     * Parses a string into a food item.","lastModifiedDate":"2021-10-06"},{"lineNumber":504,"author":{"gitId":"ngnigel99"},"content":"     * current implementation: {food add} n/ [NAME] c/ [CALORIES] d/ {date}.","lastModifiedDate":"2021-10-23"},{"lineNumber":505,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":506,"author":{"gitId":"ngnigel99"},"content":"     * @param input string consisting of food name and calories.","lastModifiedDate":"2021-10-13"},{"lineNumber":507,"author":{"gitId":"ngnigel99"},"content":"     * @return recordToAdd if valid syntax given.","lastModifiedDate":"2021-10-13"},{"lineNumber":508,"author":{"gitId":"ngnigel99"},"content":"     * @throws IllegalFoodParameterException Invalid types given.","lastModifiedDate":"2021-10-13"},{"lineNumber":509,"author":{"gitId":"ngnigel99"},"content":"     * @throws ArgumentsNotFoundException Invalid syntax given.","lastModifiedDate":"2021-10-13"},{"lineNumber":510,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":511,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-06"},{"lineNumber":512,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":513,"author":{"gitId":"ngnigel99"},"content":"    public static FoodRecord parseFoodRecord(String input) throws","lastModifiedDate":"2021-11-04"},{"lineNumber":514,"author":{"gitId":"ngnigel99"},"content":"            IllegalFoodParameterException,","lastModifiedDate":"2021-11-04"},{"lineNumber":515,"author":{"gitId":"ngnigel99"},"content":"            ArgumentsNotFoundException,","lastModifiedDate":"2021-11-04"},{"lineNumber":516,"author":{"gitId":"ngnigel99"},"content":"            WrongDividerOrderException,","lastModifiedDate":"2021-11-04"},{"lineNumber":517,"author":{"gitId":"ngnigel99"},"content":"            NegativeCaloriesException {","lastModifiedDate":"2021-11-04"},{"lineNumber":518,"author":{"gitId":"ngnigel99"},"content":"        if (getWordCount(input) \u003c FOOD_MINIMUM_PARAMETER) {","lastModifiedDate":"2021-10-11"},{"lineNumber":519,"author":{"gitId":"ngnigel99"},"content":"            throw new IllegalFoodParameterException();","lastModifiedDate":"2021-10-06"},{"lineNumber":520,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":521,"author":{"gitId":"ngnigel99"},"content":"        String[] foodData \u003d getData(input, FOOD_NAME_DIVIDER, FOOD_CALORIE_DIVIDER);","lastModifiedDate":"2021-11-04"},{"lineNumber":522,"author":{"gitId":"ngnigel99"},"content":"        String name \u003d foodData[0];","lastModifiedDate":"2021-11-04"},{"lineNumber":523,"author":{"gitId":"ngnigel99"},"content":"        if (input.contains(FOOD_DATE_DIVIDER)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":524,"author":{"gitId":"ngnigel99"},"content":"            return parseFoodRecordWithDate(input, name);","lastModifiedDate":"2021-11-04"},{"lineNumber":525,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":526,"author":{"gitId":"ngnigel99"},"content":"        int calories \u003d Integer.parseInt(foodData[1]);","lastModifiedDate":"2021-11-04"},{"lineNumber":527,"author":{"gitId":"ngnigel99"},"content":"        if (calories \u003c 0) {","lastModifiedDate":"2021-11-04"},{"lineNumber":528,"author":{"gitId":"ngnigel99"},"content":"            throw new NegativeCaloriesException();","lastModifiedDate":"2021-11-04"},{"lineNumber":529,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":530,"author":{"gitId":"ngnigel99"},"content":"        return new FoodRecord(name, calories);","lastModifiedDate":"2021-11-04"},{"lineNumber":531,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":532,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":533,"author":{"gitId":"ngnigel99"},"content":"    private static FoodRecord parseFoodRecordWithDate(String input, String name) throws","lastModifiedDate":"2021-11-04"},{"lineNumber":534,"author":{"gitId":"ngnigel99"},"content":"            WrongDividerOrderException,","lastModifiedDate":"2021-11-04"},{"lineNumber":535,"author":{"gitId":"ngnigel99"},"content":"            ArgumentsNotFoundException {","lastModifiedDate":"2021-11-04"},{"lineNumber":536,"author":{"gitId":"ngnigel99"},"content":"        FoodRecord recordToAdd;","lastModifiedDate":"2021-11-04"},{"lineNumber":537,"author":{"gitId":"ngnigel99"},"content":"        String[] foodCalorie \u003d getData(input, FOOD_CALORIE_DIVIDER, FOOD_DATE_DIVIDER);","lastModifiedDate":"2021-10-23"},{"lineNumber":538,"author":{"gitId":"ngnigel99"},"content":"        int calories \u003d Integer.parseInt(foodCalorie[0]);","lastModifiedDate":"2021-10-23"},{"lineNumber":539,"author":{"gitId":"ngnigel99"},"content":"        recordToAdd \u003d new FoodRecord(name, calories);","lastModifiedDate":"2021-10-23"},{"lineNumber":540,"author":{"gitId":"ngnigel99"},"content":"        int dateDividerIndex \u003d input.indexOf(FOOD_DATE_DIVIDER);","lastModifiedDate":"2021-10-23"},{"lineNumber":541,"author":{"gitId":"ngnigel99"},"content":"        String inputAfterDateDivider \u003d input.substring(dateDividerIndex + 2).trim();","lastModifiedDate":"2021-10-23"},{"lineNumber":542,"author":{"gitId":"ngnigel99"},"content":"        setDateOnFoodRecord(recordToAdd, inputAfterDateDivider);","lastModifiedDate":"2021-10-23"},{"lineNumber":543,"author":{"gitId":"ngnigel99"},"content":"        return recordToAdd;","lastModifiedDate":"2021-10-06"},{"lineNumber":544,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":545,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":546,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":547,"author":{"gitId":"ngnigel99"},"content":"     * Sets a date for a food Record.","lastModifiedDate":"2021-10-27"},{"lineNumber":548,"author":{"gitId":"ngnigel99"},"content":"     * @param recordToAdd food record to be added","lastModifiedDate":"2021-10-27"},{"lineNumber":549,"author":{"gitId":"ngnigel99"},"content":"     * @param inputAfterDateDivider date as input string","lastModifiedDate":"2021-10-27"},{"lineNumber":550,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":551,"author":{"gitId":"ngnigel99"},"content":"    private static void setDateOnFoodRecord(FoodRecord recordToAdd, String inputAfterDateDivider) {","lastModifiedDate":"2021-10-23"},{"lineNumber":552,"author":{"gitId":"ngnigel99"},"content":"        DateTimeFormatter localDateFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-10-23"},{"lineNumber":553,"author":{"gitId":"ngnigel99"},"content":"        LocalDate dateIAte \u003d LocalDate.parse(inputAfterDateDivider, localDateFormatter);","lastModifiedDate":"2021-10-23"},{"lineNumber":554,"author":{"gitId":"ngnigel99"},"content":"        recordToAdd.setDateIAte(dateIAte);","lastModifiedDate":"2021-10-23"},{"lineNumber":555,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":556,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":557,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":558,"author":{"gitId":"ngnigel99"},"content":"     * Parses a string list to an integer list.","lastModifiedDate":"2021-10-13"},{"lineNumber":559,"author":{"gitId":"ngnigel99"},"content":"     * Current implementation supports single integer, but","lastModifiedDate":"2021-10-13"},{"lineNumber":560,"author":{"gitId":"ngnigel99"},"content":"     * future implementations would involve reading a list.","lastModifiedDate":"2021-10-13"},{"lineNumber":561,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":562,"author":{"gitId":"ngnigel99"},"content":"     * @param strings any amount of string input to be converted","lastModifiedDate":"2021-10-13"},{"lineNumber":563,"author":{"gitId":"ngnigel99"},"content":"     * @return integerList integers that are successfully parsed","lastModifiedDate":"2021-10-13"},{"lineNumber":564,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":565,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-13"},{"lineNumber":566,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":567,"author":{"gitId":"ngnigel99"},"content":"    public static ArrayList\u003cInteger\u003e parseStringToIntegerList(String... strings)","lastModifiedDate":"2021-11-04"},{"lineNumber":568,"author":{"gitId":"ngnigel99"},"content":"            throws NumberFormatException {","lastModifiedDate":"2021-11-04"},{"lineNumber":569,"author":{"gitId":"ngnigel99"},"content":"        ArrayList\u003cInteger\u003e integerList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":570,"author":{"gitId":"ngnigel99"},"content":"        for (String string : strings) {","lastModifiedDate":"2021-10-13"},{"lineNumber":571,"author":{"gitId":"ngnigel99"},"content":"            integerList.add(Integer.parseInt(string));","lastModifiedDate":"2021-10-13"},{"lineNumber":572,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":573,"author":{"gitId":"ngnigel99"},"content":"        return integerList;","lastModifiedDate":"2021-10-13"},{"lineNumber":574,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":575,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":576,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":577,"author":{"gitId":"ngnigel99"},"content":"     * Returns string after \"food add\" for the purpose of","lastModifiedDate":"2021-10-13"},{"lineNumber":578,"author":{"gitId":"ngnigel99"},"content":"     * parsing those characters into integers.","lastModifiedDate":"2021-10-13"},{"lineNumber":579,"author":{"gitId":"ngnigel99"},"content":"     * @param userInput full line of user input","lastModifiedDate":"2021-10-13"},{"lineNumber":580,"author":{"gitId":"ngnigel99"},"content":"     * @param  command command syntax e.g. food delete","lastModifiedDate":"2021-10-13"},{"lineNumber":581,"author":{"gitId":"ngnigel99"},"content":"     * @return string after command from userInput","lastModifiedDate":"2021-10-13"},{"lineNumber":582,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":583,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-13"},{"lineNumber":584,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":585,"author":{"gitId":"ngnigel99"},"content":"    public static String filterStringAfterCommand(String userInput, String command) {","lastModifiedDate":"2021-10-13"},{"lineNumber":586,"author":{"gitId":"ngnigel99"},"content":"        assert userInput.contains(command) : \"Please check correct command syntax\";","lastModifiedDate":"2021-10-13"},{"lineNumber":587,"author":{"gitId":"ngnigel99"},"content":"        return userInput.split(command)[1].trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":588,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":589,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":590,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-04"},{"lineNumber":591,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"SvethaMahadevan":7,"nvbinh15":205,"ngnigel99":233,"swatimahadevan":117,"shoibloya":29}},{"path":"src/main/java/seedu/duke/parser/journal/ParserJournal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.parser.journal;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.journal.DuplicateNoteException;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.EmptyEntryArgumentsException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.EmptyEntryNameException;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.journal.EmptyNoteArgumentsException;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.journal.EmptyNoteNameException;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.EmptyTagArgumentsException;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.EmptyTagNameException;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.journal.NotebookArgumentNotFoundException;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.exceptions.journal.NotebookNotFoundForEntry;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.journal.Note;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"public class ParserJournal {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"SvethaMahadevan"},"content":"     * Returns the name of the notebook.","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param input contains notebook information","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"     * @return noteName a string which contains the name of the notebook","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws DuplicateNoteException if notebook with same name has been added before","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"SvethaMahadevan"},"content":"    public static String parseAddNoteCommand(String input, Storage storage) throws DuplicateNoteException,","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"SvethaMahadevan"},"content":"            EmptyNoteNameException, EmptyNoteArgumentsException {","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"SvethaMahadevan"},"content":"        if (isValidNotebookCommand(input)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"SvethaMahadevan"},"content":"            ArrayList\u003cNote\u003e notes \u003d storage.collectionOfNotes.getNotesArrayList();","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"SvethaMahadevan"},"content":"            String noteName \u003d checkDuplicateOrNot(input, notes);","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"SvethaMahadevan"},"content":"            return noteName;","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"SvethaMahadevan"},"content":"        return null;","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"SvethaMahadevan"},"content":"     * Checking if addition of the notebook will result in duplicates.","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param input getting userInput regarding notebook","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param notes list of notes","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"SvethaMahadevan"},"content":"     * @return notebook name if it is not duplicate","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws DuplicateNoteException checks for duplicate note","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"SvethaMahadevan"},"content":"    public static String checkDuplicateOrNot(String input, ArrayList\u003cNote\u003e notes) throws DuplicateNoteException {","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"SvethaMahadevan"},"content":"        String noteNameDetails \u003d input.trim().split(\"notebook\")[1];","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"SvethaMahadevan"},"content":"        String noteName \u003d noteNameDetails.split(\"n/\")[1].trim();","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"SvethaMahadevan"},"content":"        for (Note note : notes) {","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"SvethaMahadevan"},"content":"            if (note.getNoteName().equals(noteName)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"SvethaMahadevan"},"content":"                throw new DuplicateNoteException();","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"SvethaMahadevan"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"SvethaMahadevan"},"content":"        return noteName;","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"SvethaMahadevan"},"content":"     * To check if notebook command is valid, else false.","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param input user input","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"SvethaMahadevan"},"content":"     * @return true if notebook command is valid, else false","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws EmptyNoteArgumentsException checks if note arguments are empty","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws EmptyNoteNameException      checks if notebook name is not entered","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"SvethaMahadevan"},"content":"    public static boolean isValidNotebookCommand(String input) throws EmptyNoteArgumentsException,","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"SvethaMahadevan"},"content":"            EmptyNoteNameException {","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"SvethaMahadevan"},"content":"        final String[] commandTypeAndParams \u003d Parser.splitCommandAndArgs(input);","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"SvethaMahadevan"},"content":"        final String commandArgs \u003d commandTypeAndParams[1];","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"SvethaMahadevan"},"content":"        String[] noteArguments \u003d commandArgs.split(\" \");","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"SvethaMahadevan"},"content":"        if (noteArguments.length \u003d\u003d 1) {","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"SvethaMahadevan"},"content":"            throw new EmptyNoteArgumentsException();","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"SvethaMahadevan"},"content":"        if (noteArguments.length \u003d\u003d 2 \u0026\u0026 noteArguments[1].equals(\"n/\")) {","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"SvethaMahadevan"},"content":"            throw new EmptyNoteNameException();","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"SvethaMahadevan"},"content":"        return true;","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"SvethaMahadevan"},"content":"     * Returns the name of the notebook and entry to allow for adding of entry.","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param input contains information about entry and the desired notebook from user","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"SvethaMahadevan"},"content":"     * @return a String array which stores notebook name and entry name","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws EmptyEntryArgumentsException      if no arguments found after entry","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws EmptyNoteNameException            if no note name found after n/","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws EmptyEntryNameException           if no entry name found after e/","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws NotebookArgumentNotFoundException note or entry argument not found when adding entry.","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"SvethaMahadevan"},"content":"     * @throws NotebookNotFoundForEntry  if notebook to add entry doesn\u0027t exist","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"SvethaMahadevan"},"content":"    public static String[] parseAddEntryCommand(String input, Storage storage) throws EmptyEntryArgumentsException,","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"SvethaMahadevan"},"content":"            EmptyNoteNameException, EmptyEntryNameException, NotebookArgumentNotFoundException,","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"SvethaMahadevan"},"content":"            NotebookNotFoundForEntry {","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"SvethaMahadevan"},"content":"        final String[] commandTypeAndParams \u003d Parser.splitCommandAndArgs(input);","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"SvethaMahadevan"},"content":"        final String commandArgs \u003d commandTypeAndParams[1];","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cNote\u003e notes \u003d storage.collectionOfNotes.getNotesArrayList();","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"SvethaMahadevan"},"content":"        String[] noteArguments \u003d commandArgs.split(\" \");","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"SvethaMahadevan"},"content":"        if (noteArguments.length \u003d\u003d 1) {","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"SvethaMahadevan"},"content":"            throw new EmptyEntryArgumentsException();","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"SvethaMahadevan"},"content":"        if (noteArguments.length \u003d\u003d 2 \u0026\u0026 noteArguments[1].equals(\"n/\")) {","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"SvethaMahadevan"},"content":"            throw new EmptyNoteNameException();","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"SvethaMahadevan"},"content":"        if (noteArguments.length \u003d\u003d 4 \u0026\u0026 noteArguments[3].equals(\"e/\")) {","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"SvethaMahadevan"},"content":"            throw new EmptyEntryNameException();","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"SvethaMahadevan"},"content":"        boolean isNoteArgumentPresent \u003d false;","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"SvethaMahadevan"},"content":"        boolean isEntryArgumentPresent \u003d false;","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"SvethaMahadevan"},"content":"        for (String noteArgument : noteArguments) {","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"SvethaMahadevan"},"content":"            if (noteArgument.equals(\"n/\")) {","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"SvethaMahadevan"},"content":"                isNoteArgumentPresent \u003d true;","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"SvethaMahadevan"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"SvethaMahadevan"},"content":"            if (noteArgument.equals(\"e/\")) {","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"SvethaMahadevan"},"content":"                isEntryArgumentPresent \u003d true;","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"SvethaMahadevan"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"SvethaMahadevan"},"content":"        if (isEntryArgumentPresent \u0026\u0026 isNoteArgumentPresent) {","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"SvethaMahadevan"},"content":"            String[] noteEntryNames \u003d parseNoteEntryName(input);","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"SvethaMahadevan"},"content":"            int flagNotebook \u003d notes.stream().anyMatch(note -\u003e note.getNoteName().equals(noteEntryNames[0])) ? 1 : 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"SvethaMahadevan"},"content":"            if (flagNotebook \u003d\u003d 0) {","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"SvethaMahadevan"},"content":"                throw new NotebookNotFoundForEntry();","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"SvethaMahadevan"},"content":"            } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"SvethaMahadevan"},"content":"                return new String[]{noteEntryNames[0], noteEntryNames[1]};","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"SvethaMahadevan"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"SvethaMahadevan"},"content":"        } else if (isEntryArgumentPresent \u0026\u0026 !isNoteArgumentPresent) {","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"SvethaMahadevan"},"content":"            throw new NotebookArgumentNotFoundException(\"Note argument not found!\");","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"SvethaMahadevan"},"content":"        } else if (!isEntryArgumentPresent \u0026\u0026 isNoteArgumentPresent) {","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"SvethaMahadevan"},"content":"            throw new NotebookArgumentNotFoundException(\"Entry argument not found!\");","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"SvethaMahadevan"},"content":"        return null;","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"SvethaMahadevan"},"content":"    public static String[] parseTagNotebookCommand(String input, Storage storage) throws EmptyTagArgumentsException,","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"SvethaMahadevan"},"content":"            EmptyNoteNameException, EmptyTagNameException, NotebookArgumentNotFoundException {","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"SvethaMahadevan"},"content":"        final String[] commandTypeAndParams \u003d Parser.splitCommandAndArgs(input);","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"SvethaMahadevan"},"content":"        final String commandArgs \u003d commandTypeAndParams[1];","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cNote\u003e notes \u003d storage.collectionOfNotes.getNotesArrayList();","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"SvethaMahadevan"},"content":"        String[] noteArguments \u003d commandArgs.split(\" \");","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"SvethaMahadevan"},"content":"        if (noteArguments.length \u003d\u003d 1) {","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"SvethaMahadevan"},"content":"            throw new EmptyTagArgumentsException();","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"SvethaMahadevan"},"content":"        if (noteArguments.length \u003d\u003d 2 \u0026\u0026 noteArguments[1].equals(\"n/\")) {","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"SvethaMahadevan"},"content":"            throw new EmptyNoteNameException();","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"SvethaMahadevan"},"content":"        if (noteArguments.length \u003d\u003d 4 \u0026\u0026 noteArguments[3].equals(\"t/\")) {","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"SvethaMahadevan"},"content":"            throw new EmptyTagNameException();","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"SvethaMahadevan"},"content":"        boolean isNoteArgumentPresent \u003d false;","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"SvethaMahadevan"},"content":"        boolean isTagArgumentPresent \u003d false;","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"SvethaMahadevan"},"content":"        for (String noteArgument : noteArguments) {","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"SvethaMahadevan"},"content":"            if (noteArgument.equals(\"n/\")) {","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"SvethaMahadevan"},"content":"                isNoteArgumentPresent \u003d true;","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"SvethaMahadevan"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"SvethaMahadevan"},"content":"            if (noteArgument.equals(\"t/\")) {","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"SvethaMahadevan"},"content":"                isTagArgumentPresent \u003d true;","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"SvethaMahadevan"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":157,"author":{"gitId":"SvethaMahadevan"},"content":"        if (isTagArgumentPresent \u0026\u0026 isNoteArgumentPresent) {","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"SvethaMahadevan"},"content":"            String[] noteTagNames \u003d parseNotebookNameAndTag(input);","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"SvethaMahadevan"},"content":"            return new String[]{noteTagNames[0], noteTagNames[1]};","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"SvethaMahadevan"},"content":"        } else if (isTagArgumentPresent \u0026\u0026 !isNoteArgumentPresent) {","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"SvethaMahadevan"},"content":"            throw new NotebookArgumentNotFoundException(\"Note argument not found!\");","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"SvethaMahadevan"},"content":"        } else if (!isTagArgumentPresent \u0026\u0026 isNoteArgumentPresent) {","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"SvethaMahadevan"},"content":"            throw new NotebookArgumentNotFoundException(\"Tag argument not found!\");","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"SvethaMahadevan"},"content":"        return null;","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"SvethaMahadevan"},"content":"    public static String[] parseDeleteEntryCommand(String input, Storage storage) throws EmptyEntryArgumentsException,","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"SvethaMahadevan"},"content":"            EmptyNoteNameException, EmptyEntryNameException, NotebookArgumentNotFoundException,","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"SvethaMahadevan"},"content":"            NotebookNotFoundForEntry {","lastModifiedDate":"2021-10-27"},{"lineNumber":172,"author":{"gitId":"SvethaMahadevan"},"content":"        final String[] commandTypeAndParams \u003d Parser.splitCommandAndArgs(input);","lastModifiedDate":"2021-10-27"},{"lineNumber":173,"author":{"gitId":"SvethaMahadevan"},"content":"        final String commandArgs \u003d commandTypeAndParams[1];","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cNote\u003e notes \u003d storage.collectionOfNotes.getNotesArrayList();","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"SvethaMahadevan"},"content":"        String[] noteArguments \u003d commandArgs.split(\" \");","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"SvethaMahadevan"},"content":"        if (noteArguments.length \u003d\u003d 1) {","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"SvethaMahadevan"},"content":"            throw new EmptyEntryArgumentsException();","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"SvethaMahadevan"},"content":"        if (noteArguments.length \u003d\u003d 2 \u0026\u0026 noteArguments[1].equals(\"n/\")) {","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"SvethaMahadevan"},"content":"            throw new EmptyNoteNameException();","lastModifiedDate":"2021-10-27"},{"lineNumber":181,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"SvethaMahadevan"},"content":"        if (noteArguments.length \u003d\u003d 4 \u0026\u0026 noteArguments[3].equals(\"e/\")) {","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"SvethaMahadevan"},"content":"            throw new EmptyEntryNameException();","lastModifiedDate":"2021-10-27"},{"lineNumber":184,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":185,"author":{"gitId":"SvethaMahadevan"},"content":"        boolean isNoteArgumentPresent \u003d false;","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"SvethaMahadevan"},"content":"        boolean isEntryArgumentPresent \u003d false;","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"SvethaMahadevan"},"content":"        for (String noteArgument : noteArguments) {","lastModifiedDate":"2021-10-27"},{"lineNumber":188,"author":{"gitId":"SvethaMahadevan"},"content":"            if (noteArgument.equals(\"n/\")) {","lastModifiedDate":"2021-10-27"},{"lineNumber":189,"author":{"gitId":"SvethaMahadevan"},"content":"                isNoteArgumentPresent \u003d true;","lastModifiedDate":"2021-10-27"},{"lineNumber":190,"author":{"gitId":"SvethaMahadevan"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":191,"author":{"gitId":"SvethaMahadevan"},"content":"            if (noteArgument.equals(\"e/\")) {","lastModifiedDate":"2021-10-27"},{"lineNumber":192,"author":{"gitId":"SvethaMahadevan"},"content":"                isEntryArgumentPresent \u003d true;","lastModifiedDate":"2021-10-27"},{"lineNumber":193,"author":{"gitId":"SvethaMahadevan"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"SvethaMahadevan"},"content":"        if (isEntryArgumentPresent \u0026\u0026 isNoteArgumentPresent) {","lastModifiedDate":"2021-10-27"},{"lineNumber":196,"author":{"gitId":"SvethaMahadevan"},"content":"            String[] noteEntryNames \u003d parseArgumentsDeleteEntryCommand(input);","lastModifiedDate":"2021-10-27"},{"lineNumber":197,"author":{"gitId":"SvethaMahadevan"},"content":"            int flagNotebook \u003d notes.stream().anyMatch(note -\u003e note.getNoteName().equals(noteEntryNames[0])) ? 1 : 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":198,"author":{"gitId":"SvethaMahadevan"},"content":"            if (flagNotebook \u003d\u003d 0) {","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"SvethaMahadevan"},"content":"                throw new NotebookNotFoundForEntry();","lastModifiedDate":"2021-10-27"},{"lineNumber":200,"author":{"gitId":"SvethaMahadevan"},"content":"            } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":201,"author":{"gitId":"SvethaMahadevan"},"content":"                return new String[]{noteEntryNames[0], noteEntryNames[1]};","lastModifiedDate":"2021-10-13"},{"lineNumber":202,"author":{"gitId":"SvethaMahadevan"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":203,"author":{"gitId":"SvethaMahadevan"},"content":"        } else if (isEntryArgumentPresent \u0026\u0026 !isNoteArgumentPresent) {","lastModifiedDate":"2021-10-13"},{"lineNumber":204,"author":{"gitId":"SvethaMahadevan"},"content":"            throw new NotebookArgumentNotFoundException(\"Note argument not found!\");","lastModifiedDate":"2021-10-13"},{"lineNumber":205,"author":{"gitId":"SvethaMahadevan"},"content":"        } else if (!isEntryArgumentPresent \u0026\u0026 isNoteArgumentPresent) {","lastModifiedDate":"2021-10-13"},{"lineNumber":206,"author":{"gitId":"SvethaMahadevan"},"content":"            throw new NotebookArgumentNotFoundException(\"Entry argument not found!\");","lastModifiedDate":"2021-10-13"},{"lineNumber":207,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":208,"author":{"gitId":"SvethaMahadevan"},"content":"        return null;","lastModifiedDate":"2021-10-13"},{"lineNumber":209,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":210,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":211,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":212,"author":{"gitId":"SvethaMahadevan"},"content":"     * Parsing notebook and entry name.","lastModifiedDate":"2021-10-13"},{"lineNumber":213,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":214,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param input from user","lastModifiedDate":"2021-10-13"},{"lineNumber":215,"author":{"gitId":"SvethaMahadevan"},"content":"     * @return notebook name and entry name in form of string array","lastModifiedDate":"2021-10-13"},{"lineNumber":216,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":217,"author":{"gitId":"SvethaMahadevan"},"content":"    public static String[] parseNoteEntryName(String input) {","lastModifiedDate":"2021-10-13"},{"lineNumber":218,"author":{"gitId":"SvethaMahadevan"},"content":"        String noteNameDetails \u003d input.trim().split(\"entry\")[1];","lastModifiedDate":"2021-10-13"},{"lineNumber":219,"author":{"gitId":"SvethaMahadevan"},"content":"        String noteAndEntryName \u003d noteNameDetails.split(\"n/\")[1].trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":220,"author":{"gitId":"SvethaMahadevan"},"content":"        String entryName \u003d noteAndEntryName.split(\"e/\")[1].trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":221,"author":{"gitId":"SvethaMahadevan"},"content":"        String noteName \u003d noteAndEntryName.split(\"e/\")[0].trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":222,"author":{"gitId":"SvethaMahadevan"},"content":"        return new String[]{noteName, entryName};","lastModifiedDate":"2021-10-13"},{"lineNumber":223,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":224,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":225,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":226,"author":{"gitId":"SvethaMahadevan"},"content":"     * Parsing tag for the notebook.","lastModifiedDate":"2021-10-27"},{"lineNumber":227,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":228,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param input from user","lastModifiedDate":"2021-10-27"},{"lineNumber":229,"author":{"gitId":"SvethaMahadevan"},"content":"     * @return notebook name and tag name in form of String array.","lastModifiedDate":"2021-10-27"},{"lineNumber":230,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":231,"author":{"gitId":"SvethaMahadevan"},"content":"    public static String[] parseNotebookNameAndTag(String input) {","lastModifiedDate":"2021-10-27"},{"lineNumber":232,"author":{"gitId":"SvethaMahadevan"},"content":"        String noteAndTagDetails \u003d input.trim().split(\"tag\")[1];","lastModifiedDate":"2021-10-27"},{"lineNumber":233,"author":{"gitId":"SvethaMahadevan"},"content":"        String noteAndTagName \u003d noteAndTagDetails.split(\"n/\")[1].trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":234,"author":{"gitId":"SvethaMahadevan"},"content":"        String tagName \u003d noteAndTagName.split(\"t/\")[1].trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":235,"author":{"gitId":"SvethaMahadevan"},"content":"        String notebookIndex \u003d noteAndTagName.split(\"t/\")[0].trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":236,"author":{"gitId":"SvethaMahadevan"},"content":"        return new String[]{notebookIndex, tagName};","lastModifiedDate":"2021-10-27"},{"lineNumber":237,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":238,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":239,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":240,"author":{"gitId":"SvethaMahadevan"},"content":"     * Parsing index for notebook to be deleted.","lastModifiedDate":"2021-10-20"},{"lineNumber":241,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":242,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param input from user","lastModifiedDate":"2021-10-20"},{"lineNumber":243,"author":{"gitId":"SvethaMahadevan"},"content":"     * @return index for notebook to be deleted","lastModifiedDate":"2021-10-20"},{"lineNumber":244,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":245,"author":{"gitId":"SvethaMahadevan"},"content":"    public static int parseDeleteNoteCommand(String input) {","lastModifiedDate":"2021-10-20"},{"lineNumber":246,"author":{"gitId":"SvethaMahadevan"},"content":"        String indexOfDeletedNotebook \u003d input.trim().split(\"delete_notebook\")[1].trim();","lastModifiedDate":"2021-10-20"},{"lineNumber":247,"author":{"gitId":"SvethaMahadevan"},"content":"        return Integer.parseInt(indexOfDeletedNotebook);","lastModifiedDate":"2021-10-20"},{"lineNumber":248,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":249,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":250,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":251,"author":{"gitId":"SvethaMahadevan"},"content":"     * Parsing index of entry and notebook to delete entry.","lastModifiedDate":"2021-10-24"},{"lineNumber":252,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":253,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param input from user","lastModifiedDate":"2021-10-24"},{"lineNumber":254,"author":{"gitId":"SvethaMahadevan"},"content":"     * @return index for notebook to be deleted","lastModifiedDate":"2021-10-24"},{"lineNumber":255,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":256,"author":{"gitId":"SvethaMahadevan"},"content":"    public static String[] parseArgumentsDeleteEntryCommand(String input) {","lastModifiedDate":"2021-10-27"},{"lineNumber":257,"author":{"gitId":"SvethaMahadevan"},"content":"        String noteNameAndEntryNameDetails \u003d input.trim().split(\"delete_entry\")[1];","lastModifiedDate":"2021-10-27"},{"lineNumber":258,"author":{"gitId":"SvethaMahadevan"},"content":"        String noteNameAndEntryName \u003d noteNameAndEntryNameDetails.split(\"n/\")[1].trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":259,"author":{"gitId":"SvethaMahadevan"},"content":"        String entryName \u003d noteNameAndEntryName.split(\"e/\")[1].trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":260,"author":{"gitId":"SvethaMahadevan"},"content":"        String noteName \u003d noteNameAndEntryName.split(\"e/\")[0].trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":261,"author":{"gitId":"SvethaMahadevan"},"content":"        return new String[]{noteName, entryName};","lastModifiedDate":"2021-10-27"},{"lineNumber":262,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":263,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":264,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":265,"author":{"gitId":"SvethaMahadevan"},"content":"     * Parsing tag for finding notebooks by tag.","lastModifiedDate":"2021-10-27"},{"lineNumber":266,"author":{"gitId":"SvethaMahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":267,"author":{"gitId":"SvethaMahadevan"},"content":"     * @param input from user","lastModifiedDate":"2021-10-27"},{"lineNumber":268,"author":{"gitId":"SvethaMahadevan"},"content":"     * @return tagName","lastModifiedDate":"2021-10-27"},{"lineNumber":269,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":270,"author":{"gitId":"SvethaMahadevan"},"content":"    public static String parseTagForFinding(String input) {","lastModifiedDate":"2021-10-27"},{"lineNumber":271,"author":{"gitId":"SvethaMahadevan"},"content":"        String tagName \u003d input.trim().split(\"find\")[1];","lastModifiedDate":"2021-10-27"},{"lineNumber":272,"author":{"gitId":"SvethaMahadevan"},"content":"        return tagName;","lastModifiedDate":"2021-10-27"},{"lineNumber":273,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":274,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":275,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"SvethaMahadevan":271,"nvbinh15":4}},{"path":"src/main/java/seedu/duke/parser/module/ParserModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.parser.module;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.storage.StorageException;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.module.Module;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":" * A class that deals with parsing data related to Module.","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"public class ParserModule {","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"     * Formats Module to store to the storage file.","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"     * @param module The Module to be stored.","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"     * @return The formatted string representation of the Module.","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    public static String formatModuleToStore(Module module) {","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"        String code \u003d module.getCode();","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"        String name \u003d module.getName();","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"        String expectedGrade \u003d module.getExpectedGrade();","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"        int modularCredits \u003d module.getModularCredits();","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"        String data \u003d code + \"|\" + name + \"|\" + expectedGrade + \"|\" + modularCredits + \"\\n\";","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"        return data;","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"     * Retrieves a Module from the data in the storage file.","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"     * @param data The formatted string representation of the Module in the storage file.","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"     * @return The Module to be retrieved.","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"     * @throws StorageException If there is something wrong with the storage file.","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"    public static Module retrieveStoredModule(String data) throws StorageException {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"        String[] tokens \u003d data.split(\"\\\\|\");","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"        if (tokens.length !\u003d 4) {","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"            throw new StorageException();","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"        assert tokens.length \u003d\u003d 4;","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"        String code \u003d tokens[0];","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"        String name \u003d tokens[1];","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"        String expectedGrade \u003d tokens[2];","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"        int modularCredits \u003d Integer.parseInt(tokens[3]);","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"            return new Module(code, name, modularCredits, expectedGrade);","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"            throw new StorageException();","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"    public static String formatCapInfoToStore(double currentCap, int totalMcTaken) {","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"        String data \u003d currentCap + \"|\" + totalMcTaken + \u0027\\n\u0027;","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"        return data;","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"    public static ArrayList\u003cDouble\u003e retrieveStoredCapInfo(String data) throws StorageException {","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"        String[] tokens \u003d data.split(\"\\\\|\");","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"        if (tokens.length !\u003d 2) {","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"            throw new StorageException();","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"        assert tokens.length \u003d\u003d 2;","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"nvbinh15"},"content":"        ArrayList\u003cDouble\u003e capInfo \u003d new ArrayList();","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"nvbinh15"},"content":"        double cap \u003d Double.parseDouble(tokens[0]);","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"nvbinh15"},"content":"        double mc \u003d Double.parseDouble(tokens[1]);","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"nvbinh15"},"content":"        capInfo.add(cap);","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"nvbinh15"},"content":"        capInfo.add(mc);","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"nvbinh15"},"content":"        return capInfo;","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"nvbinh15":71,"ngnigel99":1}},{"path":"src/main/java/seedu/duke/parser/schedule/ParserSchedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.parser.schedule;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.calendar.IncorrectNumberOfArgumentsException;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.TODO;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.CALENDAR_COMMAND_SPLIT;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.DELIMITER_DATE;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.MONTH_UPPER_LIMIT;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.INDEX_ZERO;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.INDEX_ONE;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.NAME_ABSENT;","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"public class ParserSchedule {","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"     * Parsing of calendar command for JUnit.","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"     * @param input from user.","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"     * @return year and month.","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"    public static YearMonth parseCalendarCommandForJunit(String input) {","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"        // takes substring excluding \"calendar\" from command","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"        String extractMonthYear \u003d input.substring(17);","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"        var arguments \u003d extractMonthYear.split(DELIMITER_DATE);","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"        int month \u003d Integer.parseInt(arguments[INDEX_ZERO]);","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"        assert month \u003c\u003d MONTH_UPPER_LIMIT;","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"        int year \u003d Integer.parseInt(arguments[1]);","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"        YearMonth yearMonth \u003d YearMonth.of(year, month);","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"        return yearMonth;","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"     * Handles the input when todo date is not given by user.","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"     * @param input The input from the user.","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"     * @return The modified input that will hold the current date.","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"    public static String parseTodoWhenDateNotGiven(String input) {","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd-MM-yyyy\");","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"        String date \u003d sdf.format(new Date());","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"        input \u003d input + \" \" + date;","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"        return input;","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"swatimahadevan"},"content":"    private static String[] splitTodoCommand(String input) {","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"swatimahadevan"},"content":"        final String[] commandTypeAndParams \u003d Parser.splitCommandAndArgs(input);","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"swatimahadevan"},"content":"        assert commandTypeAndParams.length \u003d\u003d 2;","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"swatimahadevan"},"content":"        final String commandArgs \u003d commandTypeAndParams[1];","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"swatimahadevan"},"content":"        return commandArgs.split(\" \");","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"swatimahadevan"},"content":"    private static String[] splitLectureCommand(String input) {","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"swatimahadevan"},"content":"        final String[] commandTypeAndParams \u003d Parser.splitCommandAndArgs(input);","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"swatimahadevan"},"content":"        assert commandTypeAndParams.length \u003d\u003d 2;","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"swatimahadevan"},"content":"        final String commandArgs \u003d commandTypeAndParams[1];","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"swatimahadevan"},"content":"        return commandArgs.split(\" \");","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"swatimahadevan"},"content":"    private static void throwExceptionNoName(String[] todoArguments, int i) throws IncorrectNumberOfArgumentsException {","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"swatimahadevan"},"content":"        if (todoArguments.length \u003d\u003d i + 1 || todoArguments[i + 1].equals(\"d/\")) {","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"swatimahadevan"},"content":"            throw new IncorrectNumberOfArgumentsException(NAME_ABSENT);","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"swatimahadevan"},"content":"    private static void throwExceptionNoModuleName(String[] lectureArguments,","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"swatimahadevan"},"content":"        int i) throws IncorrectNumberOfArgumentsException {","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"swatimahadevan"},"content":"        if (lectureArguments.length \u003d\u003d i + 1 || lectureArguments[i + 1].equals(\"s/\")) {","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"swatimahadevan"},"content":"            throw new IncorrectNumberOfArgumentsException(\"Module name not found after m/...\");","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"swatimahadevan"},"content":"    private static void throwExceptionNoStartDate(String[] lectureArguments,","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"swatimahadevan"},"content":"        int i) throws IncorrectNumberOfArgumentsException {","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"swatimahadevan"},"content":"        if (lectureArguments.length \u003d\u003d i + 1 || lectureArguments[i + 1].equals(\"e/\")) {","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"swatimahadevan"},"content":"            throw new IncorrectNumberOfArgumentsException(\"Module start date not found after s/...\");","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"swatimahadevan"},"content":"    private static void throwExceptionNoEndDate(String[] lectureArguments,","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"swatimahadevan"},"content":"        int i) throws IncorrectNumberOfArgumentsException {","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"swatimahadevan"},"content":"        if (lectureArguments.length \u003d\u003d i + 1) {","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"swatimahadevan"},"content":"            throw new IncorrectNumberOfArgumentsException(\"Module end date not found after e/...\");","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"swatimahadevan"},"content":"    private static String handleNoDate(String[] todoArguments, int i, String input) {","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"swatimahadevan"},"content":"        if (todoArguments.length \u003d\u003d i + 1) {","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"swatimahadevan"},"content":"            System.out.println(\"You have not provided a date so \"","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"swatimahadevan"},"content":"                    + \"I will add the task to today\u0027s date...\"","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"swatimahadevan"},"content":"                    + \"please specify one in DD-MM-YYYY next time!\");","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"swatimahadevan"},"content":"            input \u003d parseTodoWhenDateNotGiven(input);","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"swatimahadevan"},"content":"        return input;","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"swatimahadevan"},"content":"    //modified from @author SvethaMahadevan","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"swatimahadevan"},"content":"     * Parsing of todo command.","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"swatimahadevan"},"content":"     * @param input from user.","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"swatimahadevan"},"content":"     * @return Checking for whether arguments are present.","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"swatimahadevan"},"content":"     * @throws IncorrectNumberOfArgumentsException to check if correct number of arguments.","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"swatimahadevan"},"content":"    public static ArrayList\u003cString\u003e parseTodoCommand(String input) throws IncorrectNumberOfArgumentsException {","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"swatimahadevan"},"content":"        String[] todoArguments \u003d splitTodoCommand(input);","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"swatimahadevan"},"content":"        boolean isNameArgumentPresent \u003d false;","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"swatimahadevan"},"content":"        boolean isDateArgumentPresent \u003d false;","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"swatimahadevan"},"content":"        for (int i \u003d 0; i \u003c todoArguments.length; i++) {","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"swatimahadevan"},"content":"            switch (todoArguments[i]) {","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"swatimahadevan"},"content":"            case \"n/\":","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"swatimahadevan"},"content":"                isNameArgumentPresent \u003d true;","lastModifiedDate":"2021-10-14"},{"lineNumber":120,"author":{"gitId":"swatimahadevan"},"content":"                throwExceptionNoName(todoArguments, i);","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"swatimahadevan"},"content":"                break;","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"swatimahadevan"},"content":"            case \"d/\":","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"swatimahadevan"},"content":"                isDateArgumentPresent \u003d true;","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"swatimahadevan"},"content":"                input \u003d handleNoDate(todoArguments, i, input);","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"swatimahadevan"},"content":"                break;","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"swatimahadevan"},"content":"            default:","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"swatimahadevan"},"content":"        if (isNameArgumentPresent \u0026\u0026 isDateArgumentPresent) {","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"swatimahadevan"},"content":"            return parseTodoArgumentsArray(input);","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":132,"author":{"gitId":"swatimahadevan"},"content":"        if (isNameArgumentPresent) {","lastModifiedDate":"2021-10-14"},{"lineNumber":133,"author":{"gitId":"swatimahadevan"},"content":"            throw new IncorrectNumberOfArgumentsException(\"Date argument \u0027d/\u0027 not found!\");","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":135,"author":{"gitId":"swatimahadevan"},"content":"        if (isDateArgumentPresent) {","lastModifiedDate":"2021-10-14"},{"lineNumber":136,"author":{"gitId":"swatimahadevan"},"content":"            throw new IncorrectNumberOfArgumentsException(\"Name argument \u0027n/\u0027not found!\");","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"swatimahadevan"},"content":"        } else {","lastModifiedDate":"2021-10-14"},{"lineNumber":138,"author":{"gitId":"swatimahadevan"},"content":"            throw new IncorrectNumberOfArgumentsException(\"Name and date arguments not found!\");","lastModifiedDate":"2021-10-14"},{"lineNumber":139,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":141,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"swatimahadevan"},"content":"     * Parsing of todo arguments.","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"swatimahadevan"},"content":"     * @param input from user.","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"swatimahadevan"},"content":"     * @return Returning arguments of todo command.","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"swatimahadevan"},"content":"     * @throws IncorrectNumberOfArgumentsException to check if correct number of arguments.","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"swatimahadevan"},"content":"    public static ArrayList\u003cString\u003e parseTodoArgumentsArray(String input) {","lastModifiedDate":"2021-10-14"},{"lineNumber":150,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cString\u003e argumentsTodoCommand \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":151,"author":{"gitId":"swatimahadevan"},"content":"        String todoDetails \u003d input.trim().substring(CALENDAR_COMMAND_SPLIT);","lastModifiedDate":"2021-10-14"},{"lineNumber":152,"author":{"gitId":"swatimahadevan"},"content":"        String descriptionAndDate \u003d todoDetails.split(\"n/\")[INDEX_ONE].trim();","lastModifiedDate":"2021-10-14"},{"lineNumber":153,"author":{"gitId":"swatimahadevan"},"content":"        String description \u003d descriptionAndDate.split(\"d/\")[INDEX_ZERO].trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":154,"author":{"gitId":"swatimahadevan"},"content":"        String date \u003d descriptionAndDate.split(\"d/\")[INDEX_ONE].trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":155,"author":{"gitId":"swatimahadevan"},"content":"        List\u003cString\u003e todoInformation \u003d Arrays.asList(TODO, description, date);","lastModifiedDate":"2021-10-13"},{"lineNumber":156,"author":{"gitId":"swatimahadevan"},"content":"        argumentsTodoCommand.addAll(todoInformation);","lastModifiedDate":"2021-10-13"},{"lineNumber":157,"author":{"gitId":"swatimahadevan"},"content":"        return argumentsTodoCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":158,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":159,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":160,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":161,"author":{"gitId":"swatimahadevan"},"content":"     * Parsing of calendar command.","lastModifiedDate":"2021-10-13"},{"lineNumber":162,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":163,"author":{"gitId":"swatimahadevan"},"content":"     * @param input from user.","lastModifiedDate":"2021-10-13"},{"lineNumber":164,"author":{"gitId":"swatimahadevan"},"content":"     * @return month and year arguments.","lastModifiedDate":"2021-10-13"},{"lineNumber":165,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":166,"author":{"gitId":"swatimahadevan"},"content":"    public static String[] parseCalendarCommand(String input) {","lastModifiedDate":"2021-10-13"},{"lineNumber":167,"author":{"gitId":"swatimahadevan"},"content":"        // takes substring excluding \"calendar\" from command","lastModifiedDate":"2021-10-13"},{"lineNumber":168,"author":{"gitId":"swatimahadevan"},"content":"        String extractMonthYear \u003d input.substring(17).trim();","lastModifiedDate":"2021-11-03"},{"lineNumber":169,"author":{"gitId":"swatimahadevan"},"content":"        String[] arguments \u003d extractMonthYear.split(DELIMITER_DATE);","lastModifiedDate":"2021-10-13"},{"lineNumber":170,"author":{"gitId":"swatimahadevan"},"content":"        return arguments;","lastModifiedDate":"2021-10-13"},{"lineNumber":171,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":172,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":173,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"swatimahadevan"},"content":"     * Parsing of lecture command.","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"swatimahadevan"},"content":"     * @param input The input from the user.","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"swatimahadevan"},"content":"     * @return the parsed lecture command arguments if the command is correct.","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"swatimahadevan"},"content":"     * @throws IncorrectNumberOfArgumentsException if the user command is incorrect.","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"swatimahadevan"},"content":"    public static ArrayList\u003cString\u003e parseLectureCommand(String input) throws IncorrectNumberOfArgumentsException {","lastModifiedDate":"2021-10-19"},{"lineNumber":181,"author":{"gitId":"swatimahadevan"},"content":"        String[] lectureArguments \u003d splitLectureCommand(input);","lastModifiedDate":"2021-10-19"},{"lineNumber":182,"author":{"gitId":"swatimahadevan"},"content":"        boolean isModulePresent \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":183,"author":{"gitId":"swatimahadevan"},"content":"        boolean isDateStartPresent \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":184,"author":{"gitId":"swatimahadevan"},"content":"        boolean isDateEndPresent \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"swatimahadevan"},"content":"        for (int i \u003d 0; i \u003c lectureArguments.length; i++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"swatimahadevan"},"content":"            switch (lectureArguments[i]) {","lastModifiedDate":"2021-10-19"},{"lineNumber":187,"author":{"gitId":"swatimahadevan"},"content":"            case \"m/\":","lastModifiedDate":"2021-10-19"},{"lineNumber":188,"author":{"gitId":"swatimahadevan"},"content":"                isModulePresent \u003d true;","lastModifiedDate":"2021-10-19"},{"lineNumber":189,"author":{"gitId":"swatimahadevan"},"content":"                throwExceptionNoModuleName(lectureArguments, i);","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"swatimahadevan"},"content":"                break;","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"swatimahadevan"},"content":"            case \"s/\":","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"swatimahadevan"},"content":"                isDateStartPresent \u003d true;","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"swatimahadevan"},"content":"                throwExceptionNoStartDate(lectureArguments, i);","lastModifiedDate":"2021-10-19"},{"lineNumber":194,"author":{"gitId":"swatimahadevan"},"content":"                break;","lastModifiedDate":"2021-10-19"},{"lineNumber":195,"author":{"gitId":"swatimahadevan"},"content":"            case \"e/\":","lastModifiedDate":"2021-10-25"},{"lineNumber":196,"author":{"gitId":"swatimahadevan"},"content":"                isDateEndPresent \u003d true;","lastModifiedDate":"2021-10-25"},{"lineNumber":197,"author":{"gitId":"swatimahadevan"},"content":"                throwExceptionNoEndDate(lectureArguments, i);","lastModifiedDate":"2021-10-19"},{"lineNumber":198,"author":{"gitId":"swatimahadevan"},"content":"                break;","lastModifiedDate":"2021-10-19"},{"lineNumber":199,"author":{"gitId":"swatimahadevan"},"content":"            default:","lastModifiedDate":"2021-10-19"},{"lineNumber":200,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":201,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":202,"author":{"gitId":"swatimahadevan"},"content":"        if (isModulePresent  \u0026\u0026 isDateEndPresent \u0026\u0026 isDateStartPresent) {","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"swatimahadevan"},"content":"            return parseLectureArgumentsArray(input);","lastModifiedDate":"2021-10-19"},{"lineNumber":204,"author":{"gitId":"swatimahadevan"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"swatimahadevan"},"content":"            throw new IncorrectNumberOfArgumentsException(\"Incorrect number of arguments!\");","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":209,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"swatimahadevan"},"content":"     * Parsing of lecture arguments.","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"swatimahadevan"},"content":"     * @param input Input from user.","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"swatimahadevan"},"content":"     * @return the name of lecture, start date and end date.","lastModifiedDate":"2021-10-27"},{"lineNumber":214,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":215,"author":{"gitId":"swatimahadevan"},"content":"    public static ArrayList\u003cString\u003e parseLectureArgumentsArray(String input) {","lastModifiedDate":"2021-10-19"},{"lineNumber":216,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cString\u003e argumentsLectureCommand \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":217,"author":{"gitId":"swatimahadevan"},"content":"        String lectureDetails \u003d input.trim().substring(17);","lastModifiedDate":"2021-10-19"},{"lineNumber":218,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":219,"author":{"gitId":"swatimahadevan"},"content":"        String nameAndDate \u003d lectureDetails.split(\"m/\")[INDEX_ONE].trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":220,"author":{"gitId":"swatimahadevan"},"content":"        String name \u003d nameAndDate.split(\"s/\")[INDEX_ZERO].trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":221,"author":{"gitId":"swatimahadevan"},"content":"        String dayAndLimits \u003d nameAndDate.split(\"s/\")[INDEX_ONE].trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":222,"author":{"gitId":"swatimahadevan"},"content":"        String fromDate \u003d dayAndLimits.split(\"e/\")[INDEX_ZERO].trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":223,"author":{"gitId":"swatimahadevan"},"content":"        String toDate \u003d dayAndLimits.split(\"e/\")[INDEX_ONE].trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":224,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":225,"author":{"gitId":"swatimahadevan"},"content":"        List\u003cString\u003e lectureInformation \u003d Arrays.asList(name, fromDate, toDate);","lastModifiedDate":"2021-10-19"},{"lineNumber":226,"author":{"gitId":"swatimahadevan"},"content":"        argumentsLectureCommand.addAll(lectureInformation);","lastModifiedDate":"2021-10-19"},{"lineNumber":227,"author":{"gitId":"swatimahadevan"},"content":"        return argumentsLectureCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":228,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":229,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":230,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"swatimahadevan":230}},{"path":"src/main/java/seedu/duke/schedule/Schedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.schedule;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import java.util.concurrent.atomic.AtomicInteger;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.schedule.lecture.Lecture;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.schedule.lecture.LectureList;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.schedule.task.Task;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.schedule.task.TaskList;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.DELIMITER_DATE;","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.TOTAL_SIZE;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.DAYS_IN_MONTH;","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.INDEX_ZERO;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.INDEX_ONE;","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.NUMBER_OF_DAYS_IN_WEEK;","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.LEAVE_EMPTY_IN_DISPLAY;","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.EMPTY_SPACE;","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.TASK_FORMATTER;","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.SEPARATOR_DISPLAY;","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.CALENDER_DATE_FORMATTER;","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.LECTURE_TASK_SPLIT;","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"//@@author swatimahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":" * Represents the logic and UI behind calendar with tasks display.","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"public class Schedule {","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"     * Arranges the tasks from storage and sends","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"     * each of them for adding to a particular calendar day.","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"     * @param taskList The list of tasks from storage.","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"     * @param calendarTasks The ArrayList of all calendar days and tasks.","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"     * @param month The month input by user.","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"     * @param year The year input by user.","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"    public static void arrangeTaskList(TaskList taskList,","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"                                     ArrayList\u003cArrayList\u003cString\u003e\u003e calendarTasks, int month, int year) {","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"        for (Task task : taskList.getTaskList()) {","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"            String description \u003d task.getDescription();","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"            String[] dateArguments \u003d task.getDate().split(DELIMITER_DATE);","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"            addTaskToCalendarDay(dateArguments, description, month, year, calendarTasks);","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"swatimahadevan"},"content":"     * Arranges the lectures from storage and sends","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"swatimahadevan"},"content":"     * each of them for adding to a particular calendar day.","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"swatimahadevan"},"content":"     * @param lectureList The list of lecture from storage.","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"swatimahadevan"},"content":"     * @param calendarLectures The ArrayList of all calendar days and lectures.","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"swatimahadevan"},"content":"     * @param month The month input by user.","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"swatimahadevan"},"content":"     * @param year The year input by user.","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"swatimahadevan"},"content":"    public static void arrangeLectureList(LectureList lectureList,","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"swatimahadevan"},"content":"                                        ArrayList\u003cArrayList\u003cString\u003e\u003e calendarLectures, int month, int year) {","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"swatimahadevan"},"content":"        for (Lecture lecture : lectureList.getLectureList()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"swatimahadevan"},"content":"            String moduleName \u003d lecture.getModuleName();","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"swatimahadevan"},"content":"            String[] dateFromArguments \u003d lecture.getDateFrom().split(DELIMITER_DATE);","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"swatimahadevan"},"content":"            String[] dateToArguments \u003d lecture.getDateTo().split(DELIMITER_DATE);","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"swatimahadevan"},"content":"            addLectureToCalendarDay(moduleName, dateFromArguments, dateToArguments, month, year, calendarLectures);","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"swatimahadevan"},"content":"     * Initializes all the days of the calendar with empty ArrayList","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"swatimahadevan"},"content":"     * to be filled with tasks (if present).","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"swatimahadevan"},"content":"     * @param calendarTasks The ArrayList of all calendar days and tasks.","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"swatimahadevan"},"content":"    public static void intializeCalendarDayTasksList(ArrayList\u003cArrayList\u003cString\u003e\u003e calendarTasks) {","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"swatimahadevan"},"content":"        while (calendarTasks.size() !\u003d TOTAL_SIZE) {","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"swatimahadevan"},"content":"            calendarTasks.add(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"swatimahadevan"},"content":"     * Initializes all the days of the calendar with empty ArrayList","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"swatimahadevan"},"content":"     * to be filled with lectures (if present).","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"swatimahadevan"},"content":"     * @param calendarLectures The ArrayList of all calendar days and lectures.","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"swatimahadevan"},"content":"    public static void intializeCalendarDayLectureList(ArrayList\u003cArrayList\u003cString\u003e\u003e calendarLectures) {","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"swatimahadevan"},"content":"        while (calendarLectures.size() !\u003d TOTAL_SIZE) {","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"swatimahadevan"},"content":"            calendarLectures.add(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"swatimahadevan"},"content":"    private static void addTaskToCalendarDay(String[] dateArguments,","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"swatimahadevan"},"content":"                                             String description, int month,","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"swatimahadevan"},"content":"                                             int year, ArrayList\u003cArrayList\u003cString\u003e\u003e calendarTasks) {","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"swatimahadevan"},"content":"        if (month \u003d\u003d Integer.parseInt(dateArguments[1])","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"swatimahadevan"},"content":"                \u0026\u0026 year \u003d\u003d Integer.parseInt(dateArguments[2])) {","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"swatimahadevan"},"content":"            int date \u003d Integer.parseInt(dateArguments[0]);","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"swatimahadevan"},"content":"            calendarTasks.get(date).add(description);","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"swatimahadevan"},"content":"    private static void addLectureToCalendarDay(String moduleName,","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"swatimahadevan"},"content":"        String[] dateFromArguments, String[] dateToArguments,","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"swatimahadevan"},"content":"        int month, int year, ArrayList\u003cArrayList\u003cString\u003e\u003e calendarLectures) {","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"swatimahadevan"},"content":"        int paramDate \u003d Integer.parseInt(dateFromArguments[0]);","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"swatimahadevan"},"content":"        int paramMonth \u003d Integer.parseInt(dateFromArguments[1]);","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"swatimahadevan"},"content":"        int paramYear \u003d Integer.parseInt(dateFromArguments[2]);","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"swatimahadevan"},"content":"        LocalDate localDate \u003d LocalDate.of(paramYear, paramMonth, paramDate);","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"swatimahadevan"},"content":"        java.time.DayOfWeek dayOfWeek \u003d localDate.getDayOfWeek();","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"swatimahadevan"},"content":"        if ((month \u003e\u003d Integer.parseInt(dateFromArguments[1])","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"swatimahadevan"},"content":"                \u0026\u0026 (month \u003c\u003d Integer.parseInt(dateToArguments[1])))","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"swatimahadevan"},"content":"                \u0026\u0026 (year \u003e\u003d Integer.parseInt(dateFromArguments[2]))","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"swatimahadevan"},"content":"                \u0026\u0026 (year \u003c\u003d Integer.parseInt(dateToArguments[2]))) {","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"swatimahadevan"},"content":"            YearMonth yearMonthObject \u003d YearMonth.of(year, month);","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"swatimahadevan"},"content":"            int daysInMonth \u003d yearMonthObject.lengthOfMonth();","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"swatimahadevan"},"content":"            for (int i \u003d 1; i \u003c\u003d daysInMonth; i++) {","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"swatimahadevan"},"content":"                if (LocalDate.of(year, month, i).getDayOfWeek() \u003d\u003d dayOfWeek) {","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"swatimahadevan"},"content":"                    calendarLectures.get(i).add(moduleName);","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"swatimahadevan"},"content":"                }","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"swatimahadevan"},"content":"     * Prints out the calendar after the calendar display command is used.","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"swatimahadevan"},"content":"     * @param inputYearMonth YearMonth object that is parsed from the year and month given by the user.","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"swatimahadevan"},"content":"     * @param calendarTasks  The calendar","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"swatimahadevan"},"content":"    public static void displayCalendar(YearMonth inputYearMonth,","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cArrayList\u003cString\u003e\u003e calendarTasks, ArrayList\u003cArrayList\u003cString\u003e\u003e calendarLectures) {","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cString\u003e calendar \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-04"},{"lineNumber":139,"author":{"gitId":"swatimahadevan"},"content":"        addDatesForDaysInMonth(inputYearMonth, calendar);","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"swatimahadevan"},"content":"        addNoDatesInBeginning(inputYearMonth, calendar);","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"swatimahadevan"},"content":"        addNoDatesInEnd(calendar);","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"swatimahadevan"},"content":"        // Print out the entire display in week rows","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"swatimahadevan"},"content":"        int totalWeeks \u003d (int) Math.ceil((double)calendar.size() / NUMBER_OF_DAYS_IN_WEEK);","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"swatimahadevan"},"content":"        int currentWeek \u003d 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"swatimahadevan"},"content":"        Ui.printCalendarLine();","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"swatimahadevan"},"content":"        printEntireCalendar(totalWeeks, currentWeek, calendar, calendarTasks, calendarLectures);","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":150,"author":{"gitId":"swatimahadevan"},"content":"    private static void printEntireCalendar(int totalWeeks, int currentWeek,","lastModifiedDate":"2021-10-13"},{"lineNumber":151,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cString\u003e calendar,","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cArrayList\u003cString\u003e\u003e calendarTasks, ArrayList\u003cArrayList\u003cString\u003e\u003e calendarLectures) {","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"swatimahadevan"},"content":"        AtomicInteger j \u003d new AtomicInteger();","lastModifiedDate":"2021-10-13"},{"lineNumber":154,"author":{"gitId":"swatimahadevan"},"content":"        while (currentWeek \u003c totalWeeks) {","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"swatimahadevan"},"content":"            int indexOfDay \u003d currentWeek * NUMBER_OF_DAYS_IN_WEEK;","lastModifiedDate":"2021-10-13"},{"lineNumber":156,"author":{"gitId":"swatimahadevan"},"content":"            Ui.printDayDemarcation();","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"swatimahadevan"},"content":"            printCalendarDates(calendar, indexOfDay);","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"swatimahadevan"},"content":"            System.out.println();","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"swatimahadevan"},"content":"            printTaskLectureForWeek(calendarTasks, calendarLectures, calendar, indexOfDay);","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"swatimahadevan"},"content":"            Ui.printCalendarLine();","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"swatimahadevan"},"content":"            currentWeek++;","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"swatimahadevan"},"content":"    //Add all dates that are available in the month from 01-value of last day of month","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"swatimahadevan"},"content":"    private static void addDatesForDaysInMonth(YearMonth inputYearMonth, ArrayList\u003cString\u003e calendar) {","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"swatimahadevan"},"content":"        String[] daysInMonth \u003d DAYS_IN_MONTH;","lastModifiedDate":"2021-10-06"},{"lineNumber":168,"author":{"gitId":"swatimahadevan"},"content":"        calendar.addAll(Arrays.asList(daysInMonth).subList(INDEX_ZERO, inputYearMonth.lengthOfMonth()));","lastModifiedDate":"2021-10-13"},{"lineNumber":169,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":171,"author":{"gitId":"swatimahadevan"},"content":"    // Add in spaces at the beginning for display upto day 1","lastModifiedDate":"2021-10-04"},{"lineNumber":172,"author":{"gitId":"swatimahadevan"},"content":"    private static void addNoDatesInBeginning(YearMonth inputYearMonth, ArrayList\u003cString\u003e calendar) {","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"swatimahadevan"},"content":"        DayOfWeek dayOneOfMonth \u003d inputYearMonth.atDay(INDEX_ONE).getDayOfWeek();","lastModifiedDate":"2021-10-13"},{"lineNumber":174,"author":{"gitId":"swatimahadevan"},"content":"        if (dayOneOfMonth !\u003d DayOfWeek.SUNDAY) {","lastModifiedDate":"2021-10-04"},{"lineNumber":175,"author":{"gitId":"swatimahadevan"},"content":"            IntStream.range(INDEX_ZERO, dayOneOfMonth.getValue()).forEachOrdered(i -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":176,"author":{"gitId":"swatimahadevan"},"content":"                    calendar.add(INDEX_ZERO, LEAVE_EMPTY_IN_DISPLAY));","lastModifiedDate":"2021-10-13"},{"lineNumber":177,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":178,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":179,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"swatimahadevan"},"content":"    //Add in spaces at the end after the last day to fill in the week","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"swatimahadevan"},"content":"    private static void addNoDatesInEnd(ArrayList\u003cString\u003e calendar) {","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"swatimahadevan"},"content":"        while (calendar.size() % NUMBER_OF_DAYS_IN_WEEK !\u003d INDEX_ZERO) {","lastModifiedDate":"2021-10-13"},{"lineNumber":183,"author":{"gitId":"swatimahadevan"},"content":"            calendar.add(LEAVE_EMPTY_IN_DISPLAY);","lastModifiedDate":"2021-10-06"},{"lineNumber":184,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":185,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":187,"author":{"gitId":"swatimahadevan"},"content":"    //Print out the top rows with dates from 01-value of last day of month","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"swatimahadevan"},"content":"    private static void printCalendarDates(ArrayList\u003cString\u003e calendar, int indexOfDay) {","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"swatimahadevan"},"content":"        for (int dayOfWeek \u003d INDEX_ZERO; dayOfWeek \u003c NUMBER_OF_DAYS_IN_WEEK; dayOfWeek++) {","lastModifiedDate":"2021-10-13"},{"lineNumber":190,"author":{"gitId":"swatimahadevan"},"content":"            String s \u003d EMPTY_SPACE + calendar.get(indexOfDay + dayOfWeek) + CALENDER_DATE_FORMATTER;","lastModifiedDate":"2021-10-13"},{"lineNumber":191,"author":{"gitId":"swatimahadevan"},"content":"            System.out.print(s);","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"swatimahadevan"},"content":"    private static void printTaskLectureForWeek(ArrayList\u003cArrayList\u003cString\u003e\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"swatimahadevan"},"content":"        calendarTasks, ArrayList\u003cArrayList\u003cString\u003e\u003e calendarLectures,","lastModifiedDate":"2021-10-19"},{"lineNumber":197,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cString\u003e calendar, int indexOfDay) {","lastModifiedDate":"2021-10-13"},{"lineNumber":198,"author":{"gitId":"swatimahadevan"},"content":"        int calendarRow \u003d 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":199,"author":{"gitId":"swatimahadevan"},"content":"        while (calendarRow \u003c 2) {","lastModifiedDate":"2021-10-19"},{"lineNumber":200,"author":{"gitId":"swatimahadevan"},"content":"            System.out.print(SEPARATOR_DISPLAY);","lastModifiedDate":"2021-10-13"},{"lineNumber":201,"author":{"gitId":"swatimahadevan"},"content":"            for (int day \u003d INDEX_ZERO; day \u003c NUMBER_OF_DAYS_IN_WEEK; day++) {","lastModifiedDate":"2021-10-13"},{"lineNumber":202,"author":{"gitId":"swatimahadevan"},"content":"                printLectureCalendar(calendarLectures, calendar, indexOfDay, calendarRow, day);","lastModifiedDate":"2021-10-19"},{"lineNumber":203,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"swatimahadevan"},"content":"            System.out.println();","lastModifiedDate":"2021-10-04"},{"lineNumber":205,"author":{"gitId":"swatimahadevan"},"content":"            calendarRow++;","lastModifiedDate":"2021-10-13"},{"lineNumber":206,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"swatimahadevan"},"content":"        int calendarRow2 \u003d 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":208,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(LECTURE_TASK_SPLIT);","lastModifiedDate":"2021-10-20"},{"lineNumber":209,"author":{"gitId":"swatimahadevan"},"content":"        while (calendarRow2 \u003c 2) {","lastModifiedDate":"2021-10-19"},{"lineNumber":210,"author":{"gitId":"swatimahadevan"},"content":"            System.out.print(SEPARATOR_DISPLAY);","lastModifiedDate":"2021-10-19"},{"lineNumber":211,"author":{"gitId":"swatimahadevan"},"content":"            for (int day \u003d INDEX_ZERO; day \u003c NUMBER_OF_DAYS_IN_WEEK; day++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":212,"author":{"gitId":"swatimahadevan"},"content":"                printTasksCalendar(calendarTasks, calendar, indexOfDay, calendarRow2, day);","lastModifiedDate":"2021-10-19"},{"lineNumber":213,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":214,"author":{"gitId":"swatimahadevan"},"content":"            System.out.println();","lastModifiedDate":"2021-10-19"},{"lineNumber":215,"author":{"gitId":"swatimahadevan"},"content":"            calendarRow2++;","lastModifiedDate":"2021-10-19"},{"lineNumber":216,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":217,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":220,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":221,"author":{"gitId":"swatimahadevan"},"content":"    private static void printTasksCalendar(ArrayList\u003cArrayList\u003cString\u003e\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":222,"author":{"gitId":"swatimahadevan"},"content":"        calendarTasks, ArrayList\u003cString\u003e calendarDates, int indexOfDay, int calendarRow, int day) {","lastModifiedDate":"2021-10-19"},{"lineNumber":223,"author":{"gitId":"swatimahadevan"},"content":"        String currentDayStringFormat \u003d calendarDates.get(indexOfDay + day).trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":224,"author":{"gitId":"swatimahadevan"},"content":"        if (!currentDayStringFormat.equals(EMPTY_SPACE)","lastModifiedDate":"2021-10-19"},{"lineNumber":225,"author":{"gitId":"swatimahadevan"},"content":"            \u0026\u0026 calendarTasks.get(Integer.parseInt(currentDayStringFormat)).size() \u003e calendarRow) {","lastModifiedDate":"2021-10-19"},{"lineNumber":226,"author":{"gitId":"swatimahadevan"},"content":"            int currentDay \u003d Integer.parseInt(currentDayStringFormat);","lastModifiedDate":"2021-10-19"},{"lineNumber":227,"author":{"gitId":"swatimahadevan"},"content":"            String taskName \u003d calendarTasks.get(currentDay).get(calendarRow);","lastModifiedDate":"2021-10-13"},{"lineNumber":228,"author":{"gitId":"swatimahadevan"},"content":"            if (taskName.length() \u003e 15) {","lastModifiedDate":"2021-10-19"},{"lineNumber":229,"author":{"gitId":"swatimahadevan"},"content":"                taskName \u003d taskName.substring(INDEX_ZERO, 15);","lastModifiedDate":"2021-10-19"},{"lineNumber":230,"author":{"gitId":"swatimahadevan"},"content":"            } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"swatimahadevan"},"content":"                taskName \u003d String.format(\"%-\" + 15 + \"s\", taskName);","lastModifiedDate":"2021-10-19"},{"lineNumber":232,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"swatimahadevan"},"content":"            System.out.print(EMPTY_SPACE + taskName + TASK_FORMATTER);","lastModifiedDate":"2021-10-13"},{"lineNumber":234,"author":{"gitId":"swatimahadevan"},"content":"        } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":235,"author":{"gitId":"swatimahadevan"},"content":"            Ui.printEmptyTaskSpot();","lastModifiedDate":"2021-10-13"},{"lineNumber":236,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":237,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":239,"author":{"gitId":"swatimahadevan"},"content":"    private static void printLectureCalendar(ArrayList\u003cArrayList\u003cString\u003e\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":240,"author":{"gitId":"swatimahadevan"},"content":"        calendarLectures, ArrayList\u003cString\u003e calendarDates,","lastModifiedDate":"2021-10-19"},{"lineNumber":241,"author":{"gitId":"swatimahadevan"},"content":"        int indexOfDay, int calendarRow, int day) {","lastModifiedDate":"2021-10-19"},{"lineNumber":242,"author":{"gitId":"swatimahadevan"},"content":"        String currentDayStringFormat \u003d calendarDates.get(indexOfDay + day).trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":243,"author":{"gitId":"swatimahadevan"},"content":"        if (!currentDayStringFormat.equals(EMPTY_SPACE)","lastModifiedDate":"2021-10-19"},{"lineNumber":244,"author":{"gitId":"swatimahadevan"},"content":"            \u0026\u0026 calendarLectures.get(Integer.parseInt(currentDayStringFormat)).size() \u003e calendarRow) {","lastModifiedDate":"2021-10-19"},{"lineNumber":245,"author":{"gitId":"swatimahadevan"},"content":"            int currentDay \u003d Integer.parseInt(currentDayStringFormat);","lastModifiedDate":"2021-10-19"},{"lineNumber":246,"author":{"gitId":"swatimahadevan"},"content":"            String moduleLecture \u003d calendarLectures.get(currentDay).get(calendarRow) + \" lecture\";","lastModifiedDate":"2021-10-19"},{"lineNumber":247,"author":{"gitId":"swatimahadevan"},"content":"            if (moduleLecture.length() \u003e 15) {","lastModifiedDate":"2021-10-19"},{"lineNumber":248,"author":{"gitId":"swatimahadevan"},"content":"                moduleLecture \u003d moduleLecture.substring(INDEX_ZERO, 15);","lastModifiedDate":"2021-10-19"},{"lineNumber":249,"author":{"gitId":"swatimahadevan"},"content":"            } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":250,"author":{"gitId":"swatimahadevan"},"content":"                moduleLecture \u003d String.format(\"%-\" + 15 + \"s\", moduleLecture);","lastModifiedDate":"2021-10-19"},{"lineNumber":251,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":252,"author":{"gitId":"swatimahadevan"},"content":"            System.out.print(EMPTY_SPACE + moduleLecture + TASK_FORMATTER);","lastModifiedDate":"2021-10-19"},{"lineNumber":253,"author":{"gitId":"swatimahadevan"},"content":"        } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":254,"author":{"gitId":"swatimahadevan"},"content":"            Ui.printEmptyTaskSpot();","lastModifiedDate":"2021-10-19"},{"lineNumber":255,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":256,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":257,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":258,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"swatimahadevan":258}},{"path":"src/main/java/seedu/duke/schedule/lecture/Lecture.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.schedule.lecture;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"//@@author swatimahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":" * Represents the Lecture.","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"public class Lecture {","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"    protected String moduleName;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"    protected String dateFrom;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"    protected String dateTo;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"     * Constructor of Lecture class.","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"     * @param moduleName the name of module for the lecture.","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"     * @param dateFrom the start date of the lecture.","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"     * @param dateTo the end date of the lecture.","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"    public Lecture(String moduleName, String dateFrom, String dateTo) {","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"        this.dateFrom \u003d dateFrom;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"        this.dateTo \u003d dateTo;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"     * Get module name.","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"     * @return module name.","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"    public String getModuleName() {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"        return moduleName;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"     * Get start date of lecture.","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"     * @return start date of lecture.","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"    public String getDateFrom() {","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"        return dateFrom;","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"     * Get end date of lecture.","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"     * @return end date of lecture.","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"    public String getDateTo() {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"        return dateTo;","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"swatimahadevan"},"content":"    public String toSaveFileFormat() {","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"swatimahadevan"},"content":"        return moduleName + \"|\" + dateFrom + \"|\" + dateTo;","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"swatimahadevan"},"content":"     * Returns lecture description.","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"swatimahadevan"},"content":"     * @return description of lecture.","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"swatimahadevan"},"content":"    public String toString() {","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"swatimahadevan"},"content":"        return moduleName + \" (from: \" + dateFrom + \") \" + \"(to: \" + dateTo + \") \";","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"swatimahadevan":65}},{"path":"src/main/java/seedu/duke/schedule/lecture/LectureList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.schedule.lecture;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"//@@author swatimahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":" * Represents the list of lectures.","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"public class LectureList {","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"    private ArrayList\u003cLecture\u003e lectures;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"     * Constructor of LectureList.","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"    public LectureList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"        this.lectures \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"     * Returns the list of lectures.","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"    public ArrayList\u003cLecture\u003e getLectureList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"        return lectures;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"     * Allows for adding of lecture to list of lectures.","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"     * @param lecture Lecture to be added.","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"    public void addLecture(Lecture lecture) {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"        lectures.add(lecture);","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"     * Allows for deleting of lecture from list of lectures.","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"     * @param index Index of lecture to be deleted.","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"    public void deleteLecture(int index) {","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"        lectures.remove(index - 1);","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"swatimahadevan":44}},{"path":"src/main/java/seedu/duke/schedule/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.schedule.task;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"//@@author swatimahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":" * Represents the Task object.","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"public abstract class Task {","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"    protected String description;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"    protected String date;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"     * Constructor of Task class.","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"     * @param description of task","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"     * @param date of task","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"    public Task(String description, String date) {","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"     * Get task description.","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"     * @return task description","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"        return description;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"     * Get date of task.","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"     * @return date","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"    public String getDate() {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"        return date;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"    public abstract String toSaveFileFormat();","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"     * Returns task description.","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"     * @return description of task","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"        return description;","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"swatimahadevan":52}},{"path":"src/main/java/seedu/duke/schedule/task/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.schedule.task;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"//@@author swatimahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":" * Represents the list of tasks.","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"public class TaskList {","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"     * Constructor of TaskList.","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"    public TaskList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"        return tasks;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"     * Allows for adding of task to list of tasks.","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"     * @param task Task to be added.","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"        tasks.add(task);","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"     * Allows for deleting of task from list of tasks.","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"     * @param index Index of task to be deleted.","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"     * Allows for editing of task from list of tasks.","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"     * @param index Index of task to be edited.","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"     * @param description Description/name of task to be edited.","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"     * @param date Date of task to be edited.","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"swatimahadevan"},"content":"    public void editTask(int index, String description, String date) {","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"swatimahadevan"},"content":"        Task task \u003d new Todo(description, date);","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"swatimahadevan"},"content":"        tasks.set(index - 1, task);","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"swatimahadevan":58}},{"path":"src/main/java/seedu/duke/schedule/task/Todo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.schedule.task;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"//@@author swatimahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":" * Represents the Todo object.","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"    public Todo(String description, String date) {","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"        super(description, date);","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"     * Returns in format for storage file.","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"     * @return storage file in string format.","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"    public String toSaveFileFormat() {","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"        return \"todo\" + \"|\" + description + \"|\" + date;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"     * Returns todo information in format for printing.","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"     * @return todo information in format for printing","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"        return super.toString() + \" (on: \" + date + \")\";","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"swatimahadevan":34}},{"path":"src/main/java/seedu/duke/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.food.ReferenceLists;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.food.WhatIAteList;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.journal.CollectionOfEntries;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.journal.CollectionOfNotes;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.logger.ClickLogger;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.schedule.lecture.LectureList;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.schedule.task.TaskList;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"import java.io.File;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":" * A class that deals with loading data from the file and saving data to the file.","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"public class Storage {","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"    private String tasksFilePath;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    public static ReferenceLists reference \u003d ReferenceLists.getLists();","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    public WhatIAteList whatIAteTodayList \u003d  StorageFood.load();","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"    public static TaskList tasksList;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"    static {","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"            tasksList \u003d StorageTasks.readTaskList();","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"SvethaMahadevan"},"content":"    public CollectionOfNotes collectionOfNotes \u003d StorageNotes.readCollectionOfNotes();","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"SvethaMahadevan"},"content":"    public CollectionOfEntries collectionOfEntries \u003d StorageEntries.readEntries();","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"    public StorageModule storageModule \u003d new StorageModule();","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"    public static LectureList lectureList;","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"    static {","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"            lectureList \u003d StorageLecture.readLectureList();","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"swatimahadevan"},"content":"    public Storage() throws IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"    //@@author ngnigel99","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"     * Creates directory if directory folderName is not found.","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"     * access modifier left empty for working in Storage.","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"     * @param folderName folder name to check","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"     * @throws IOException case where directory not found","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"    static void checkAndAddDirectory(String folderName) throws IOException {","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"        assert folderName.contains(\"/\") : \"Please follow format [DIR_NAME]/\";   //checks syntax of constant","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"        String home \u003d new File(\"\").getAbsolutePath() + \u0027/\u0027;","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"        File dirCheck \u003d new File(home + folderName);","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"        ClickLogger.getNewLogger().log(Level.INFO,  \"checking if directory exists!\");","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"        if (dirCheck.isDirectory()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"            ClickLogger.getNewLogger().log(Level.INFO, \"nice, directory found!\");","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"            return;","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"        ClickLogger.getNewLogger().log(Level.CONFIG, \"not nice, no directory found,\"","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"                +     \"creating  new directory\");","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"ngnigel99"},"content":"        Files.createDirectories(Paths.get(home + folderName));","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"ngnigel99"},"content":"    //@@author","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"swatimahadevan"},"content":"    //@author swatim","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"swatimahadevan"},"content":"    //Loads data in the form of ArrayList\u003cString\u003e data from the save file","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"ngnigel99"},"content":"    public static ArrayList\u003cString\u003e loadDataFromSaveFile(String filePath) throws IOException {","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"swatimahadevan"},"content":"        FileReader fileReader \u003d new FileReader(filePath);","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"swatimahadevan"},"content":"        BufferedReader bufferedReader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cString\u003e data;","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"swatimahadevan"},"content":"        data \u003d bufferedReader.lines().collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"swatimahadevan"},"content":"        return data;","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"swatimahadevan"},"content":"    //Write data from ArrayList\u003cString\u003e data onto save file","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"ngnigel99"},"content":"    public static void writeDataOntoSaveFile(String filePath, ArrayList\u003cString\u003e data) throws IOException {","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"swatimahadevan"},"content":"        BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"ngnigel99"},"content":"        for (String dataObject : data) {","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"swatimahadevan"},"content":"            bufferedWriter.write(dataObject + \u0027\\n\u0027);","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"swatimahadevan"},"content":"        bufferedWriter.close();","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"SvethaMahadevan":7,"nvbinh15":8,"ngnigel99":38,"swatimahadevan":46}},{"path":"src/main/java/seedu/duke/storage/StorageEntries.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"//@@author SvethaMahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.journal.CollectionOfEntries;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.journal.Entry;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.journal.Note;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.File;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"public class StorageEntries {","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"    public static final String folderName \u003d \"journalData/\";","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"    public static final String fileName   \u003d \"journalEntries.txt\";","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"    public static final String filePath \u003d folderName + fileName;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"SvethaMahadevan"},"content":"    static ArrayList\u003cEntry\u003e dataToEntries(ArrayList\u003cString\u003e data) {","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cEntry\u003e entries \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"SvethaMahadevan"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"SvethaMahadevan"},"content":"        int dataSize \u003d data.size();","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"        while (i \u003c dataSize) {","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"SvethaMahadevan"},"content":"            String dataLine \u003d data.get(i);","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"SvethaMahadevan"},"content":"            String[] entryArguments \u003d dataLine.split(\"\\\\|\");","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"SvethaMahadevan"},"content":"            entries.add(addEntry(entryArguments));","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"SvethaMahadevan"},"content":"            i++;","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"SvethaMahadevan"},"content":"        return entries;","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"SvethaMahadevan"},"content":"    private static Entry addEntry(String[] noteArguments) {","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"SvethaMahadevan"},"content":"        String noteName \u003d noteArguments[0].trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"SvethaMahadevan"},"content":"        String entryName \u003d noteArguments[1].trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"SvethaMahadevan"},"content":"        return new Entry(noteName, entryName);","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"SvethaMahadevan"},"content":"    public static ArrayList\u003cString\u003e entriesToData(ArrayList\u003cEntry\u003e entries, Storage storage) {","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cNote\u003e notes \u003d storage.collectionOfNotes.getNotesArrayList();","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"SvethaMahadevan"},"content":"        for (Entry entry : entries) {","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"SvethaMahadevan"},"content":"            for (Note note: notes) {","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"SvethaMahadevan"},"content":"                if (entry.getEntryNoteName().equals(note.getNoteName())) {","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"SvethaMahadevan"},"content":"                    data.add(entry.toSaveFileFormat());","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"SvethaMahadevan"},"content":"                }","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"SvethaMahadevan"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"SvethaMahadevan"},"content":"        return data;","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"SvethaMahadevan"},"content":"    public static void writeEntries(CollectionOfEntries collectionOfEntries, Storage storage) throws IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cEntry\u003e entries \u003d collectionOfEntries.getEntriesArrayList();","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cString\u003e data \u003d entriesToData(entries, storage);","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"SvethaMahadevan"},"content":"        Storage.writeDataOntoSaveFile(filePath, data);","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"SvethaMahadevan"},"content":"    public static CollectionOfEntries readEntries() throws NullPointerException, IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"SvethaMahadevan"},"content":"        CollectionOfEntries collectionOfEntries \u003d new CollectionOfEntries();","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cEntry\u003e entries;","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"SvethaMahadevan"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"SvethaMahadevan"},"content":"            Storage.checkAndAddDirectory(StorageEntries.folderName);","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"SvethaMahadevan"},"content":"            ArrayList\u003cString\u003e data \u003d Storage.loadDataFromSaveFile(StorageEntries.filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"SvethaMahadevan"},"content":"            entries \u003d StorageEntries.dataToEntries(data);","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"SvethaMahadevan"},"content":"            for (int i \u003d 0; i \u003c entries.size(); i++) {","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"SvethaMahadevan"},"content":"                collectionOfEntries.addEntry(entries.get(i).getEntryNoteName(), entries.get(i).getNameOfJournalEntry());","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"SvethaMahadevan"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"SvethaMahadevan"},"content":"            return collectionOfEntries;","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"SvethaMahadevan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"SvethaMahadevan"},"content":"            File f \u003d new File(StorageEntries.filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"SvethaMahadevan"},"content":"        return collectionOfEntries;","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"SvethaMahadevan":75}},{"path":"src/main/java/seedu/duke/storage/StorageFood.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.food.FoodRecord;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.food.WhatIAteList;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.logger.ClickLogger;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"import java.io.File;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"//@@author ngnigel99","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":" * This class deals with passing food records to and fro a save file.","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":" * @author ngnigel99","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"public class StorageFood {","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    private static String folderName \u003d \"fooddata/\";","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    private static String fileName \u003d \"food.txt\";","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    private static String filePath \u003d  folderName +  fileName;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    public StorageFood(String filePathToInput) {","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"        filePath \u003d filePathToInput;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"     * Saves list to save file.","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"     * @param whatIAteList food record list to save","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"     * @throws IOException if file/ directory not found","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"     *                     - handled by creating new directory/ file if necessary","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"    public static void saveList(WhatIAteList whatIAteList) throws IOException {","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"        assert !whatIAteList.equals(null) : \"Please instantiate the list object correctly\";","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"        Storage.checkAndAddDirectory(folderName);","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"        File newList \u003d new File(folderName + fileName);","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"        FileWriter fw \u003d new FileWriter(folderName + fileName);","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"        ClickLogger.getNewLogger().log(Level.INFO, \"Writing to \" + folderName + fileName);","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"        for (FoodRecord f : whatIAteList.getList()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"            fw.write(f.toSaveListFormat());","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"        ClickLogger.getNewLogger().log(Level.INFO, \"done writing to \" + folderName + fileName);","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"        fw.close();","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"     * Returns a food list.","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"     * format of task per line of save file:","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"     * [NAME] |  [CALORIES]","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"     * @return listToReturn food list generated from save file","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"     *          if save file not found, create new list and return","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"    public static WhatIAteList load() {","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"        WhatIAteList listToReturn \u003d new WhatIAteList();","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"            Storage.checkAndAddDirectory(folderName);","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"            Scanner scanList \u003d new Scanner(f);","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"            while (scanList.hasNext()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"                String readLine \u003d scanList.nextLine();","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"                if (readLine.equals(\"\")) {","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"                    break;","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"                }","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"                listToReturn.addToList(Parser.parseFoodSavedListToRecord(readLine), true);","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"            return listToReturn;","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"            ClickLogger.getNewLogger().log(Level.WARNING, \"file not found on load\");","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"            ClickLogger.getNewLogger().log(Level.CONFIG, \"create new text file\");","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"ngnigel99"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"Null Pointer Exception, try again!\");","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"ngnigel99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"Hey, Input/ Output exception, returning empty list...\");","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"ngnigel99"},"content":"        return listToReturn;","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"ngnigel99":84}},{"path":"src/main/java/seedu/duke/storage/StorageLecture.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.schedule.lecture.Lecture;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.schedule.lecture.LectureList;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.schedule.task.Task;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.schedule.task.TaskList;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import java.io.File;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"//@author swatim","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"public class StorageLecture {","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"    public static final String folderName \u003d \"tasksdata/\";","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"    public static final String fileName   \u003d \"scheduleLectures.txt\";","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"    public static final String filePath \u003d folderName + fileName;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"    public static ArrayList\u003cLecture\u003e dataToLecture(ArrayList\u003cString\u003e data) {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cLecture\u003e lectures \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"        int dataSize \u003d data.size();","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"        while (i \u003c dataSize) {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"            String dataLine \u003d data.get(i);","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"            String[] lectureArguments \u003d dataLine.split(\"\\\\|\");","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"            lectures.add(new Lecture(lectureArguments[0].trim(),","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"                    lectureArguments[1].trim(), lectureArguments[2].trim()));","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"            i++;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"        return lectures;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"    public static void writeLectureList(LectureList lectureList) throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cLecture\u003e lectures \u003d lectureList. getLectureList();","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"        for (Lecture lecture : lectures) {","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"            data.add(lecture.toSaveFileFormat());","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"        Storage.writeDataOntoSaveFile(StorageLecture.filePath, data);","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"    public static LectureList readLectureList() throws NullPointerException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"        LectureList lectureList \u003d new LectureList();","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cLecture\u003e lectures;","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"            Storage.checkAndAddDirectory(StorageLecture.folderName);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"            ArrayList\u003cString\u003e data \u003d Storage.loadDataFromSaveFile(StorageLecture.filePath);","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"            lectures \u003d StorageLecture.dataToLecture(data);","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"            for (int i \u003d 0; i \u003c lectures.size(); i++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"                lectureList.addLecture(lectures.get(i));","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"            return lectureList;","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"swatimahadevan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"swatimahadevan"},"content":"            File f \u003d new File(StorageLecture.filePath);","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"swatimahadevan"},"content":"        return lectureList;","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"swatimahadevan":58}},{"path":"src/main/java/seedu/duke/storage/StorageModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.storage.StorageException;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.module.Module;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.module.ModuleList;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.parser.module.ParserModule;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import java.io.File;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":" * A class that deals with loading and saving data related to Modules into the file.","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"public class StorageModule {","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"    private static ParserModule parserModule \u003d new ParserModule();","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"    public static final String PROJECT_ROOT \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"    public static final String STORAGE_FOLDER \u003d \"module\";","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"    public static final String MODULE_FILE_NAME \u003d \"module.txt\";","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"    public static final String CAP_FILE_NAME \u003d \"cap.txt\";","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"    public static final Path PATH_TO_MODULE_STORAGE_FILE \u003d Paths.get(PROJECT_ROOT, STORAGE_FOLDER, MODULE_FILE_NAME);","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"    public static final Path PATH_TO_CAP_STORAGE_FILE \u003d Paths.get(PROJECT_ROOT, STORAGE_FOLDER, CAP_FILE_NAME);","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"     * Creates a new file to store data related to Modules.","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"     * @throws IOException If there are failed or interrupted I/O operations.","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"    public static void createModuleStorageFile() throws IOException {","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"        File file \u003d new File(String.valueOf(PATH_TO_MODULE_STORAGE_FILE));","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"        if (file.exists()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"            file.delete();","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"        file.createNewFile();","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"     * Creates a new file to store data related to CAP.","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"     * @throws IOException If there are failed or interrupted I/O operations.","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"    public static void createCapStorageFile() throws IOException {","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"        File file \u003d new File(String.valueOf(PATH_TO_CAP_STORAGE_FILE));","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"        if (file.exists()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"            file.delete();","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"        file.createNewFile();","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"     * Reads data that stored in the Module storage file.","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"nvbinh15"},"content":"     * @return The data stored in the Module storage file or a new ModuleList if there is","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"nvbinh15"},"content":"     *      something wrong with the data file.","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"nvbinh15"},"content":"     * @throws IOException If there are failed or interrupted I/O operations.","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"nvbinh15"},"content":"    public static ModuleList readModulesFromFile() throws IOException {","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"nvbinh15"},"content":"        if (Files.notExists(PATH_TO_MODULE_STORAGE_FILE)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"nvbinh15"},"content":"            createModuleStorageFile();","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"nvbinh15"},"content":"        assert Files.exists(PATH_TO_MODULE_STORAGE_FILE);","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"nvbinh15"},"content":"        ArrayList\u003cModule\u003e storedModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"nvbinh15"},"content":"        File file \u003d new File(String.valueOf(PATH_TO_MODULE_STORAGE_FILE));","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"nvbinh15"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"nvbinh15"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"nvbinh15"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"nvbinh15"},"content":"                Module module;","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"nvbinh15"},"content":"                module \u003d parserModule.retrieveStoredModule(scanner.nextLine());","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"nvbinh15"},"content":"                storedModules.add(module);","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"nvbinh15"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"nvbinh15"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"nvbinh15"},"content":"            System.out.println(\"MESSAGE_FILE_NOT_FOUND\");","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"nvbinh15"},"content":"            return new ModuleList();","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"nvbinh15"},"content":"        } catch (StorageException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"nvbinh15"},"content":"            createModuleStorageFile();","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"nvbinh15"},"content":"            System.out.println(\"MESSAGE_STORAGE_EXCEPTION\");","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"nvbinh15"},"content":"            return new ModuleList();","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"nvbinh15"},"content":"        return new ModuleList(storedModules);","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"nvbinh15"},"content":"     * Saves data to the Module storage file.","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"nvbinh15"},"content":"     * @param moduleList The ModuleList to be stored.","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"nvbinh15"},"content":"     * @throws IOException If there are failed or interrupted I/O operations.","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"nvbinh15"},"content":"    public static void saveModuleToFile(ModuleList moduleList) throws IOException {","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"nvbinh15"},"content":"        FileWriter fileWriter \u003d new FileWriter(String.valueOf(PATH_TO_MODULE_STORAGE_FILE));","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"nvbinh15"},"content":"        for (Module m : moduleList.getModules()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"nvbinh15"},"content":"            fileWriter.write(parserModule.formatModuleToStore(m));","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"nvbinh15"},"content":"        fileWriter.close();","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"nvbinh15"},"content":"     * Reads data that stored in the CAP info storage file.","lastModifiedDate":"2021-10-29"},{"lineNumber":110,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":111,"author":{"gitId":"nvbinh15"},"content":"     * @return An ArrayList containing CAP and MC.","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"nvbinh15"},"content":"     * @throws IOException If there are failed or interrupted I/O operations.","lastModifiedDate":"2021-10-29"},{"lineNumber":113,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":114,"author":{"gitId":"nvbinh15"},"content":"    public static ArrayList\u003cDouble\u003e readCapInfoFromFile() throws IOException {","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"nvbinh15"},"content":"        if (Files.notExists(PATH_TO_CAP_STORAGE_FILE)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"nvbinh15"},"content":"            createCapStorageFile();","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"nvbinh15"},"content":"        assert Files.exists(PATH_TO_CAP_STORAGE_FILE);","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"nvbinh15"},"content":"        File file \u003d new File(String.valueOf(PATH_TO_CAP_STORAGE_FILE));","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"nvbinh15"},"content":"        ArrayList\u003cDouble\u003e capAndMc \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"nvbinh15"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"nvbinh15"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"nvbinh15"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"nvbinh15"},"content":"                capAndMc \u003d parserModule.retrieveStoredCapInfo(scanner.nextLine());","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"nvbinh15"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"nvbinh15"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"nvbinh15"},"content":"            System.out.println(\"MESSAGE_FILE_NOT_FOUND\");","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"nvbinh15"},"content":"            capAndMc.add(0.0);","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"nvbinh15"},"content":"            capAndMc.add(0.0);","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"nvbinh15"},"content":"            return capAndMc;","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"nvbinh15"},"content":"        } catch (StorageException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"nvbinh15"},"content":"            createCapStorageFile();","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"nvbinh15"},"content":"            System.out.println(\"MESSAGE_STORAGE_EXCEPTION\");","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"nvbinh15"},"content":"            capAndMc.add(0.0);","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"nvbinh15"},"content":"            capAndMc.add(0.0);","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"nvbinh15"},"content":"            return capAndMc;","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"nvbinh15"},"content":"        return capAndMc;","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":142,"author":{"gitId":"nvbinh15"},"content":"     * Saves data to the CAP storage file.","lastModifiedDate":"2021-10-29"},{"lineNumber":143,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":144,"author":{"gitId":"nvbinh15"},"content":"     * @param currentCap The current CAP of the user.","lastModifiedDate":"2021-10-29"},{"lineNumber":145,"author":{"gitId":"nvbinh15"},"content":"     * @param totalMcTaken The total of modular credits that contribute to the cap.","lastModifiedDate":"2021-10-29"},{"lineNumber":146,"author":{"gitId":"nvbinh15"},"content":"     * @throws IOException If there are failed or interrupted I/O operations.","lastModifiedDate":"2021-10-29"},{"lineNumber":147,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":148,"author":{"gitId":"nvbinh15"},"content":"    public static void saveCapInfoToFile(double currentCap, int totalMcTaken) throws IOException {","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"nvbinh15"},"content":"        if (Files.notExists(PATH_TO_CAP_STORAGE_FILE)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"nvbinh15"},"content":"            createCapStorageFile();","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"nvbinh15"},"content":"        FileWriter fileWriter \u003d new FileWriter(String.valueOf(PATH_TO_CAP_STORAGE_FILE));","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"nvbinh15"},"content":"        fileWriter.write(parserModule.formatCapInfoToStore(currentCap, totalMcTaken));","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"nvbinh15"},"content":"        fileWriter.close();","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"nvbinh15":155,"ngnigel99":1}},{"path":"src/main/java/seedu/duke/storage/StorageNotes.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"//@@author SvethaMahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.journal.CollectionOfNotes;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.journal.Note;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.logger.ClickLogger;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.File;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"public class StorageNotes {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"    public static final String folderName \u003d \"journalData/\";","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"    public static final String fileName   \u003d \"journalNotes.txt\";","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"    public static final String filePath \u003d folderName + fileName;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"SvethaMahadevan"},"content":"    static ArrayList\u003cNote\u003e dataToNotes(ArrayList\u003cString\u003e data) {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"SvethaMahadevan"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"SvethaMahadevan"},"content":"        int dataSize \u003d data.size();","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"        while (i \u003c dataSize) {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"SvethaMahadevan"},"content":"            String dataLine \u003d data.get(i);","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"SvethaMahadevan"},"content":"            String[] noteArguments \u003d dataLine.split(\"\\\\|\");","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"SvethaMahadevan"},"content":"            notes.add(addNote(noteArguments));","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"SvethaMahadevan"},"content":"            i++;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"SvethaMahadevan"},"content":"        return notes;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"SvethaMahadevan"},"content":"    private static Note addNote(String[] noteArguments) {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"SvethaMahadevan"},"content":"        String name \u003d noteArguments[1].trim();","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"SvethaMahadevan"},"content":"        String tag \u003d noteArguments[2].trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"SvethaMahadevan"},"content":"        return new Note(name, tag);","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"SvethaMahadevan"},"content":"    public static ArrayList\u003cString\u003e notesToData(ArrayList\u003cNote\u003e notes) {","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"SvethaMahadevan"},"content":"        for (Note note : notes) {","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"SvethaMahadevan"},"content":"            data.add(note.toSaveFileFormat());","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"SvethaMahadevan"},"content":"        return data;","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"SvethaMahadevan"},"content":"    public static void writeCollectionOfNotes(CollectionOfNotes collectionOfNotes) throws IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cNote\u003e notes \u003d collectionOfNotes.getNotesArrayList();","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cString\u003e data \u003d notesToData(notes);","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"SvethaMahadevan"},"content":"        Storage.writeDataOntoSaveFile(filePath, data);","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"SvethaMahadevan"},"content":"    public static CollectionOfNotes readCollectionOfNotes() throws NullPointerException, IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"SvethaMahadevan"},"content":"        CollectionOfNotes collectionOfNotes \u003d new CollectionOfNotes();","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cNote\u003e notes;","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"SvethaMahadevan"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"SvethaMahadevan"},"content":"            Storage.checkAndAddDirectory(StorageNotes.folderName);","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"SvethaMahadevan"},"content":"            ArrayList\u003cString\u003e data \u003d Storage.loadDataFromSaveFile(StorageNotes.filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"SvethaMahadevan"},"content":"            notes \u003d StorageNotes.dataToNotes(data);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"SvethaMahadevan"},"content":"            for (int i \u003d 0; i \u003c notes.size(); i++) {","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"SvethaMahadevan"},"content":"                collectionOfNotes.addNote(notes.get(i).getNoteName(), notes.get(i).getTag());","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"SvethaMahadevan"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"SvethaMahadevan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"SvethaMahadevan"},"content":"            ClickLogger.getNewLogger().log(Level.WARNING, \"file not found on load\");","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"SvethaMahadevan"},"content":"            File f \u003d new File(StorageNotes.filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"SvethaMahadevan"},"content":"        return collectionOfNotes;","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"SvethaMahadevan":69}},{"path":"src/main/java/seedu/duke/storage/StorageTasks.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.schedule.task.Task;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.schedule.task.TaskList;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.schedule.task.Todo;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.File;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.TODO;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.INDEX_TODO_DESCRIPTION;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.INDEX_TODO_DATE;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.INDEX_ZERO;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"//@author swatim","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"public class StorageTasks {","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    //author ngnigel99 - create in folder","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    public static final String folderName \u003d \"tasksdata/\";","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    public static final String fileName   \u003d \"scheduleTasks.txt\";","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    public static final String filePath \u003d folderName + fileName;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"     * Gets tasks from storage.","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"     * @param data data from file.","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"     * @return tasks","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"    public static ArrayList\u003cTask\u003e dataToTask(ArrayList\u003cString\u003e data) {","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"        int dataSize \u003d data.size();","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"        while (i \u003c dataSize) {","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"            String dataLine \u003d data.get(i);","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"            String[] todoArguments \u003d dataLine.split(\"\\\\|\");","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"            if (TODO.equals(todoArguments[INDEX_ZERO])) {","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"                String description \u003d todoArguments[INDEX_TODO_DESCRIPTION].trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"                String date \u003d todoArguments[INDEX_TODO_DATE].trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"                tasks.add(new Todo(description, date));","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"            i++;","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"        return tasks;","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"     * Writes task list to storage in string format.","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"     * @throws IOException if command entered is wrong.","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"SvethaMahadevan"},"content":"    public static void writeTaskList(TaskList taskList) throws IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTaskList();","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"swatimahadevan"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"swatimahadevan"},"content":"            data.add(task.toSaveFileFormat());","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"SvethaMahadevan"},"content":"        Storage.writeDataOntoSaveFile(StorageTasks.filePath, data);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"swatimahadevan"},"content":"     * Reads data in string format from storage and returns task list.","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"swatimahadevan"},"content":"     * @return task list","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"swatimahadevan"},"content":"     * @throws NullPointerException in case if empty.","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"swatimahadevan"},"content":"     * @throws IOException if command entered is wrong.","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"SvethaMahadevan"},"content":"    public static TaskList readTaskList() throws NullPointerException, IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"SvethaMahadevan"},"content":"        TaskList tasksList \u003d new TaskList();","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"SvethaMahadevan"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"SvethaMahadevan"},"content":"            Storage.checkAndAddDirectory(StorageTasks.folderName);","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"SvethaMahadevan"},"content":"            ArrayList\u003cString\u003e data \u003d Storage.loadDataFromSaveFile(StorageTasks.filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"SvethaMahadevan"},"content":"            tasks \u003d StorageTasks.dataToTask(data);","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"SvethaMahadevan"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"SvethaMahadevan"},"content":"                tasksList.addTask(tasks.get(i));","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"SvethaMahadevan"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"SvethaMahadevan"},"content":"            return tasksList;","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"SvethaMahadevan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"SvethaMahadevan"},"content":"            File f \u003d new File(StorageTasks.filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"SvethaMahadevan"},"content":"        return tasksList;","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"SvethaMahadevan":25,"ngnigel99":4,"swatimahadevan":56}},{"path":"src/main/java/seedu/duke/storage/StorageZoom.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shoibloya"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.exceptions.zoom.InvalidZoomDataPath;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.exceptions.zoom.InvalidZoomLinkException;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.parser.module.ParserModule;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"shoibloya"},"content":"import java.awt.Desktop;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"shoibloya"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"shoibloya"},"content":"import java.io.File;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"shoibloya"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"shoibloya"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"shoibloya"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"shoibloya"},"content":"import java.net.URL;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"shoibloya"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"shoibloya"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"shoibloya"},"content":"//@@author shoibloya","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"shoibloya"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"shoibloya"},"content":" * This class deals with writing and reading text files relevant to the zoom feature.","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"shoibloya"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"shoibloya"},"content":"public class StorageZoom {","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"shoibloya"},"content":"    private static final String folderName \u003d \"zoomdata/\";","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"shoibloya"},"content":"    private static final String fileName \u003d \"zoom.txt\";","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"shoibloya"},"content":"    private static String filePath \u003d  folderName +  fileName;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"shoibloya"},"content":"    private static ParserModule parserModule \u003d new ParserModule();","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"shoibloya"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"shoibloya"},"content":"     * This function writes/overwrites a zoom link for the given module.","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"shoibloya"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"shoibloya"},"content":"     * @param moduleName The module name","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"shoibloya"},"content":"     * @param zoomLink The zoom link","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"shoibloya"},"content":"     * @throws IOException Throws an Input Output Exception","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"shoibloya"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"shoibloya"},"content":"    public static void saveLink(String moduleName, String zoomLink) throws IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"shoibloya"},"content":"        Storage.checkAndAddDirectory(folderName);","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"shoibloya"},"content":"        File newList \u003d new File(folderName + fileName);","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"shoibloya"},"content":"        if (!newList.exists()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"shoibloya"},"content":"            newList.getParentFile().mkdirs();","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"shoibloya"},"content":"            newList.createNewFile();","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"shoibloya"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"shoibloya"},"content":"        if (isModuleIn(folderName + fileName, moduleName)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"shoibloya"},"content":"            String newData \u003d \"\";","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"shoibloya"},"content":"            Scanner scanner \u003d new Scanner(newList);","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"shoibloya"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"shoibloya"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"shoibloya"},"content":"                String module \u003d line.split(\"\\\\|\")[0];","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"shoibloya"},"content":"                if (module.equals(moduleName)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"shoibloya"},"content":"                    newData \u003d newData + moduleName + \"|\" + zoomLink + \"\\n\";","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"shoibloya"},"content":"                } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"shoibloya"},"content":"                    newData \u003d newData + line + \"\\n\";","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"shoibloya"},"content":"                }","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"shoibloya"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"shoibloya"},"content":"            FileWriter fw \u003d new FileWriter(folderName + fileName, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"shoibloya"},"content":"            fw.write(newData);","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"shoibloya"},"content":"            fw.close();","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"shoibloya"},"content":"            Ui.printMessage(\"Zoom link updated successfully!\");","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"shoibloya"},"content":"        } else if (isModuleIn(\"module/module.txt\", moduleName)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"shoibloya"},"content":"            FileWriter fw \u003d new FileWriter(folderName + fileName, true);","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"shoibloya"},"content":"            fw.write(moduleName + \"|\" + zoomLink + \"\\n\");","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"shoibloya"},"content":"            fw.close();","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"shoibloya"},"content":"            Ui.printMessage(\"Zoom link added successfully\");","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"shoibloya"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"shoibloya"},"content":"            Ui.printMessage(\"Module Not Found!\");","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"shoibloya"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"shoibloya"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"shoibloya"},"content":"     * This function reads data from zoom.txt prints it on screen.","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"shoibloya"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"shoibloya"},"content":"     * @throws InvalidZoomDataPath Throws the Invalid Zoom Data Path Exception","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"shoibloya"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"shoibloya"},"content":"    public static void displayLinks() throws InvalidZoomDataPath {","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"shoibloya"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"shoibloya"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(folderName + fileName));","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"shoibloya"},"content":"            String line;","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"shoibloya"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"shoibloya"},"content":"                String moduleName \u003d line.split(\"\\\\|\", 2)[0];","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"shoibloya"},"content":"                String zoomLink \u003d line.split(\"\\\\|\", 2)[1];","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"shoibloya"},"content":"                Ui.displayZoomLink(moduleName, zoomLink);","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"shoibloya"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"shoibloya"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"shoibloya"},"content":"            throw new InvalidZoomDataPath();","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"shoibloya"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"shoibloya"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"shoibloya"},"content":"     * This function checks if the given module is in the records.","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"shoibloya"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"shoibloya"},"content":"     * @param filePath The path of the data file","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"shoibloya"},"content":"     * @param moduleName The name of the module","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"shoibloya"},"content":"     * @return returns true if the module is in record, false otherwise.","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"shoibloya"},"content":"     * @throws IOException throws the Input Output Exception","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"shoibloya"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"shoibloya"},"content":"    public static boolean isModuleIn(String filePath, String moduleName) throws IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"shoibloya"},"content":"        File moduleList \u003d new File(filePath);","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"shoibloya"},"content":"        ArrayList\u003cString\u003e listOfModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"shoibloya"},"content":"        Scanner scanner \u003d new Scanner(moduleList);","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"shoibloya"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"shoibloya"},"content":"            String module;","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"shoibloya"},"content":"            module \u003d scanner.nextLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"shoibloya"},"content":"            listOfModules.add(module.split(\"\\\\|\")[0].trim());","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"shoibloya"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"shoibloya"},"content":"        return listOfModules.contains(moduleName);","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"shoibloya"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"shoibloya"},"content":"     * This function opens zoom link in browser.","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"shoibloya"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"shoibloya"},"content":"     * @param module Name of the module","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"shoibloya"},"content":"     * @throws IOException throws the Input Output Exception","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"shoibloya"},"content":"     * @throws InvalidZoomLinkException throws the Invalid Zoom Link Exception","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"shoibloya"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"shoibloya"},"content":"    public static void openZoomLink(String module) throws IOException, InvalidZoomLinkException {","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"shoibloya"},"content":"        String urlString \u003d getZoomLink(module);","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"shoibloya"},"content":"        System.out.println(urlString);","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"shoibloya"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"shoibloya"},"content":"            Desktop.getDesktop().browse(new URL(urlString).toURI());","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"shoibloya"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"shoibloya"},"content":"            throw new InvalidZoomLinkException();","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"shoibloya"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"shoibloya"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"shoibloya"},"content":"     * This function returns the zoom link associated to a module.","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"shoibloya"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"shoibloya"},"content":"     * @param module The name of the module","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"shoibloya"},"content":"     * @return returns the zoom link.","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"shoibloya"},"content":"     * @throws IOException throws the Input Output Exception","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"shoibloya"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"shoibloya"},"content":"    public static String getZoomLink(String module) throws IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"shoibloya"},"content":"        File data \u003d new File(\"zoomdata/zoom.txt\");","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"shoibloya"},"content":"        Scanner scanner \u003d new Scanner(data);","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"shoibloya"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"shoibloya"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"shoibloya"},"content":"            if (module.equals(line.split(\"\\\\|\")[0].trim())) {","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"shoibloya"},"content":"                return line.split(\"\\\\|\")[1].trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"shoibloya"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"shoibloya"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":150,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":151,"author":{"gitId":"shoibloya"},"content":"        return \"\";","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":154,"author":{"gitId":"shoibloya"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"shoibloya":154}},{"path":"src/main/java/seedu/duke/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.commands.calendar.DisplayCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.calendar.IncorrectNumberOfArgumentsException;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.food.FoodRecord;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.schedule.lecture.Lecture;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.schedule.task.Task;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.Messages.ADDED_TASK;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.Messages.DAY_DEMARCATION;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.Messages.DISPLAY_LINE;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.Messages.HORIZONTAL_LINE;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.Messages.INVALID_CALENDAR_INPUT;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.Messages.LINE_PREFIX;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.Messages.LIST_TASKS_HEADER;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.Messages.LOGO;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.Messages.MESSAGE_GOODBYE;","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.Messages.MESSAGE_GREETING;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.Messages.NO_TASK_IN_DAY;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":" * A class that deals with interactions with the user.","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"public class Ui {","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"    private static Storage storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"    static {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"    //@@author nvbinh15","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"     * Reads the text entered by the user.","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"     * @param in The Scanner to read user input.","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"     * @return line Full line entered by the user.","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"    public String getUserInput(Scanner in) {","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"        String line \u003d in.nextLine();","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"        return line;","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"     * Prints the divider HORIZONTAL_LINE.","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"    public static void printLine() {","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"nvbinh15"},"content":"     * Prints the greeting message to standard output.","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"nvbinh15"},"content":"    public static void printGreeting() {","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"nvbinh15"},"content":"        printLine();","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"nvbinh15"},"content":"        printMessage(LOGO + MESSAGE_GREETING);","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"nvbinh15"},"content":"        printLine();","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"nvbinh15"},"content":"     * Prints the goodbye message to standard output.","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"nvbinh15"},"content":"    public static void printGoodBye() {","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"nvbinh15"},"content":"        printLine();","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"nvbinh15"},"content":"        printMessage(MESSAGE_GOODBYE);","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"nvbinh15"},"content":"        printLine();","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":81,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":82,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":83,"author":{"gitId":"nvbinh15"},"content":"     * Prints message to the standard output.","lastModifiedDate":"2021-10-04"},{"lineNumber":84,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":85,"author":{"gitId":"nvbinh15"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2021-10-04"},{"lineNumber":86,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":87,"author":{"gitId":"nvbinh15"},"content":"    public static void printMessage(String message) {","lastModifiedDate":"2021-10-04"},{"lineNumber":88,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(LINE_PREFIX + message);","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":90,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"nvbinh15"},"content":"    public static void printMessageSameLine(String message) {","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"nvbinh15"},"content":"        System.out.print(LINE_PREFIX + message);","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"ngnigel99"},"content":"    //@@author ngnigel99","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"ngnigel99"},"content":"     * Prints the name of the record, as well as the calorie count.","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"ngnigel99"},"content":"     * @param record record to be added","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"ngnigel99"},"content":"    //TODO  remove messages, may be neater","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"ngnigel99"},"content":"    public static void printAddRecord(FoodRecord record)  {","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"ngnigel99"},"content":"        Ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"ngnigel99"},"content":"        Ui.printMessage(\"Nice.  I\u0027ve added \"","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"ngnigel99"},"content":"                + record.getFoodName()","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"ngnigel99"},"content":"                + \" to the list, with \"","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"ngnigel99"},"content":"                + record.getCalorieCount()","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"ngnigel99"},"content":"                + \" calories!\");","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"ngnigel99"},"content":"        Ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"ngnigel99"},"content":"     * Prints success on clear message to user.","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"ngnigel99"},"content":"    public static void printDoneClearList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"ngnigel99"},"content":"        Ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"ngnigel99"},"content":"        Ui.printMessage(Messages.PRINT_DONE_CLEAR_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"ngnigel99"},"content":"        Ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"ngnigel99"},"content":"    public static void printAddFoodSyntax() {","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"ngnigel99"},"content":"        Ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"ngnigel99"},"content":"        Ui.printMessage(Messages.PRINT_ADD_FOOD_SYNTAX);","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"ngnigel99"},"content":"        Ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"ngnigel99"},"content":"    public static void printNonNullInput() {","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"ngnigel99"},"content":"        Ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"ngnigel99"},"content":"        Ui.printMessage(Messages.NON_NULL_INPUT);","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"ngnigel99"},"content":"        Ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"ngnigel99"},"content":"    public static void printOnlyIntegers() {","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"ngnigel99"},"content":"        Ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"ngnigel99"},"content":"        Ui.printMessage(Messages.PRINT_NOT_AN_INT);","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"ngnigel99"},"content":"        Ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"ngnigel99"},"content":"     * Prints a general error message.","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"ngnigel99"},"content":"     * Ideally should be more specific, try not to use this","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"ngnigel99"},"content":"     * for exceptions - implement in further testing versions.","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"ngnigel99"},"content":"    public static void printErrorMessageGeneral() {","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"ngnigel99"},"content":"        Ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"ngnigel99"},"content":"        Ui.printMessage(Messages.PRINT_ERROR_MESSAGE_GENERAL);","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"ngnigel99"},"content":"        Ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":151,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":152,"author":{"gitId":"ngnigel99"},"content":"    public static void printDoneDeleteFood(FoodRecord foodRecord, int index) {","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"ngnigel99"},"content":"        Ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"ngnigel99"},"content":"        Ui.printMessage(Messages.PRINT_DONE_DELETE_INDEX + \" \"","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"ngnigel99"},"content":"                +  foodRecord.getFoodName()","lastModifiedDate":"2021-10-13"},{"lineNumber":156,"author":{"gitId":"ngnigel99"},"content":"                + \" at index: \" + index);","lastModifiedDate":"2021-10-13"},{"lineNumber":157,"author":{"gitId":"ngnigel99"},"content":"        Ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":159,"author":{"gitId":"ngnigel99"},"content":"    //@@author ngnigel99","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"SvethaMahadevan"},"content":"    //@@author SvethaMahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":163,"author":{"gitId":"SvethaMahadevan"},"content":"     * Prints message to indicate note has been added.","lastModifiedDate":"2021-10-13"},{"lineNumber":164,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":165,"author":{"gitId":"SvethaMahadevan"},"content":"    public static void printAddedNoteMessage(String noteName) {","lastModifiedDate":"2021-10-06"},{"lineNumber":166,"author":{"gitId":"SvethaMahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"SvethaMahadevan"},"content":"        printMessage(\"Great you have added the note: \" + noteName);","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"SvethaMahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":170,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":171,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":172,"author":{"gitId":"SvethaMahadevan"},"content":"     * Prints message to indicate entry has been added.","lastModifiedDate":"2021-10-13"},{"lineNumber":173,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":174,"author":{"gitId":"SvethaMahadevan"},"content":"    public static void printAddedEntryMessage(String entryName) {","lastModifiedDate":"2021-10-13"},{"lineNumber":175,"author":{"gitId":"SvethaMahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"SvethaMahadevan"},"content":"        printMessage(\"Great you have added the entry: \" + entryName);","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"SvethaMahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":179,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"SvethaMahadevan"},"content":"     * Prints message to indicate that the notebook has been deleted.","lastModifiedDate":"2021-10-20"},{"lineNumber":182,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":183,"author":{"gitId":"SvethaMahadevan"},"content":"    public static void printDeletedNotebookMessage(int indexOfDeletedNotebook) {","lastModifiedDate":"2021-10-20"},{"lineNumber":184,"author":{"gitId":"SvethaMahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":185,"author":{"gitId":"SvethaMahadevan"},"content":"        printMessage(\"Great you have deleted the notebook at : \" + indexOfDeletedNotebook);","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"SvethaMahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":188,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":189,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":190,"author":{"gitId":"SvethaMahadevan"},"content":"     * Prints message to indicate that the entry has been deleted.","lastModifiedDate":"2021-10-25"},{"lineNumber":191,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"SvethaMahadevan"},"content":"    public static void printDeletedEntryMessage() {","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"SvethaMahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"SvethaMahadevan"},"content":"        printMessage(\"Great you have deleted the entry\");","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"SvethaMahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":196,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":197,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":198,"author":{"gitId":"SvethaMahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"SvethaMahadevan"},"content":"     * Prints message to indicate that the notebook had been tagged.","lastModifiedDate":"2021-10-27"},{"lineNumber":200,"author":{"gitId":"SvethaMahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":201,"author":{"gitId":"SvethaMahadevan"},"content":"    public static void printTaggedNotebookMessage() {","lastModifiedDate":"2021-10-27"},{"lineNumber":202,"author":{"gitId":"SvethaMahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":203,"author":{"gitId":"SvethaMahadevan"},"content":"        printMessage(\"Great you have tagged the notebook\");","lastModifiedDate":"2021-10-27"},{"lineNumber":204,"author":{"gitId":"SvethaMahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":206,"author":{"gitId":"SvethaMahadevan"},"content":"    //@@author SvethaMahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":207,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":208,"author":{"gitId":"swatimahadevan"},"content":"    //@@author swatimahadevan","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":210,"author":{"gitId":"swatimahadevan"},"content":"     * Prints the header of the calendar with the month and year.","lastModifiedDate":"2021-10-06"},{"lineNumber":211,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":212,"author":{"gitId":"swatimahadevan"},"content":"     * @param inputYearMonth The YearMonth object parsed from user input string.","lastModifiedDate":"2021-10-06"},{"lineNumber":213,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":214,"author":{"gitId":"swatimahadevan"},"content":"    public static void printCalenderTitle(YearMonth inputYearMonth) {","lastModifiedDate":"2021-10-06"},{"lineNumber":215,"author":{"gitId":"swatimahadevan"},"content":"        ui.printMessage(\"                                       \" + inputYearMonth.getMonth() + \" \"","lastModifiedDate":"2021-10-27"},{"lineNumber":216,"author":{"gitId":"swatimahadevan"},"content":"                + inputYearMonth.getYear());","lastModifiedDate":"2021-10-06"},{"lineNumber":217,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":218,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":219,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":220,"author":{"gitId":"swatimahadevan"},"content":"     * Prints error message for all invalid calendar inputs","lastModifiedDate":"2021-10-13"},{"lineNumber":221,"author":{"gitId":"swatimahadevan"},"content":"     * telling user to use \u0027command help\u0027.","lastModifiedDate":"2021-10-13"},{"lineNumber":222,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":223,"author":{"gitId":"swatimahadevan"},"content":"    public static void printInvalidCalendarInput() {","lastModifiedDate":"2021-10-06"},{"lineNumber":224,"author":{"gitId":"swatimahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":225,"author":{"gitId":"swatimahadevan"},"content":"        ui.printMessage(INVALID_CALENDAR_INPUT);","lastModifiedDate":"2021-10-27"},{"lineNumber":226,"author":{"gitId":"swatimahadevan"},"content":"        ui.printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":227,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":228,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":229,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":230,"author":{"gitId":"swatimahadevan"},"content":"     * Prints calendar for current month (intro display).","lastModifiedDate":"2021-10-06"},{"lineNumber":231,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":232,"author":{"gitId":"swatimahadevan"},"content":"    public static void printCurrentMonthCalendar() throws","lastModifiedDate":"2021-10-13"},{"lineNumber":233,"author":{"gitId":"swatimahadevan"},"content":"            IncorrectNumberOfArgumentsException {","lastModifiedDate":"2021-10-13"},{"lineNumber":234,"author":{"gitId":"swatimahadevan"},"content":"        YearMonth currentYearMonth \u003d YearMonth.now();","lastModifiedDate":"2021-10-06"},{"lineNumber":235,"author":{"gitId":"swatimahadevan"},"content":"        String month \u003d String.valueOf(currentYearMonth.getMonthValue());","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"swatimahadevan"},"content":"        String year \u003d String.valueOf(currentYearMonth.getYear());","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"swatimahadevan"},"content":"        new DisplayCommand(\"calendar \" + month + \"-\" + year).execute(ui, storage);","lastModifiedDate":"2021-10-20"},{"lineNumber":238,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":239,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":240,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":241,"author":{"gitId":"swatimahadevan"},"content":"     * Prints out lecture list.","lastModifiedDate":"2021-10-27"},{"lineNumber":242,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":243,"author":{"gitId":"swatimahadevan"},"content":"     * @param lectures List of lectures to be displayed.","lastModifiedDate":"2021-10-27"},{"lineNumber":244,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":245,"author":{"gitId":"swatimahadevan"},"content":"    public static void printLectureList(ArrayList\u003cLecture\u003e lectures) {","lastModifiedDate":"2021-10-25"},{"lineNumber":246,"author":{"gitId":"swatimahadevan"},"content":"        ui.printMessage(\"Here is your list of lectures:\");","lastModifiedDate":"2021-10-27"},{"lineNumber":247,"author":{"gitId":"swatimahadevan"},"content":"        if (!lectures.isEmpty()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":248,"author":{"gitId":"swatimahadevan"},"content":"            int i \u003d 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":249,"author":{"gitId":"swatimahadevan"},"content":"            for (Lecture item : lectures) {","lastModifiedDate":"2021-10-25"},{"lineNumber":250,"author":{"gitId":"swatimahadevan"},"content":"                ui.printMessage((i++) + \". \" + item);","lastModifiedDate":"2021-10-27"},{"lineNumber":251,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":252,"author":{"gitId":"swatimahadevan"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":253,"author":{"gitId":"swatimahadevan"},"content":"            ui.printMessage(\"NO Lectures!\");","lastModifiedDate":"2021-10-27"},{"lineNumber":254,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":255,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":256,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":257,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":258,"author":{"gitId":"swatimahadevan"},"content":"     * Prints confirmatory message after task is added successfully.","lastModifiedDate":"2021-10-09"},{"lineNumber":259,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":260,"author":{"gitId":"swatimahadevan"},"content":"    public static void printTaskAddedMessage() {","lastModifiedDate":"2021-10-09"},{"lineNumber":261,"author":{"gitId":"swatimahadevan"},"content":"        ui.printMessage(ADDED_TASK);","lastModifiedDate":"2021-10-27"},{"lineNumber":262,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":263,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":264,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":265,"author":{"gitId":"swatimahadevan"},"content":"     * Prints out tasks list.","lastModifiedDate":"2021-10-09"},{"lineNumber":266,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":267,"author":{"gitId":"swatimahadevan"},"content":"     * @param tasks List of tasks to be displayed.","lastModifiedDate":"2021-10-09"},{"lineNumber":268,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":269,"author":{"gitId":"swatimahadevan"},"content":"    public static void printTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-10-09"},{"lineNumber":270,"author":{"gitId":"swatimahadevan"},"content":"        ui.printMessage(LIST_TASKS_HEADER);","lastModifiedDate":"2021-10-27"},{"lineNumber":271,"author":{"gitId":"swatimahadevan"},"content":"        if (!tasks.isEmpty()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":272,"author":{"gitId":"swatimahadevan"},"content":"            int i \u003d 1;","lastModifiedDate":"2021-10-09"},{"lineNumber":273,"author":{"gitId":"swatimahadevan"},"content":"            for (Task item : tasks) {","lastModifiedDate":"2021-10-09"},{"lineNumber":274,"author":{"gitId":"swatimahadevan"},"content":"                ui.printMessage((i++) + \". \" + item);","lastModifiedDate":"2021-10-27"},{"lineNumber":275,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":276,"author":{"gitId":"swatimahadevan"},"content":"        } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":277,"author":{"gitId":"swatimahadevan"},"content":"            ui.printMessage(\"NO TASKS!\");","lastModifiedDate":"2021-10-27"},{"lineNumber":278,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":279,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":280,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":281,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":282,"author":{"gitId":"swatimahadevan"},"content":"     * Prints calendar lines for display.","lastModifiedDate":"2021-10-13"},{"lineNumber":283,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":284,"author":{"gitId":"swatimahadevan"},"content":"    public static void printCalendarLine() {","lastModifiedDate":"2021-10-12"},{"lineNumber":285,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(DISPLAY_LINE);","lastModifiedDate":"2021-10-12"},{"lineNumber":286,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":287,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":288,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":289,"author":{"gitId":"swatimahadevan"},"content":"     * Prints out the vertical lines between days.","lastModifiedDate":"2021-10-13"},{"lineNumber":290,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":291,"author":{"gitId":"swatimahadevan"},"content":"    public static void printDayDemarcation() {","lastModifiedDate":"2021-10-12"},{"lineNumber":292,"author":{"gitId":"swatimahadevan"},"content":"        System.out.print(DAY_DEMARCATION);","lastModifiedDate":"2021-10-12"},{"lineNumber":293,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":294,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":295,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":296,"author":{"gitId":"swatimahadevan"},"content":"     * Prints out the task grid for empty task days.","lastModifiedDate":"2021-10-13"},{"lineNumber":297,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":298,"author":{"gitId":"swatimahadevan"},"content":"    public static void printEmptyTaskSpot() {","lastModifiedDate":"2021-10-12"},{"lineNumber":299,"author":{"gitId":"swatimahadevan"},"content":"        System.out.print(NO_TASK_IN_DAY);","lastModifiedDate":"2021-10-12"},{"lineNumber":300,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":301,"author":{"gitId":"swatimahadevan"},"content":"    //@@author","lastModifiedDate":"2021-10-27"},{"lineNumber":302,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":303,"author":{"gitId":"shoibloya"},"content":"    public static void displayZoomLink(String moduleName, String zoomLink) {","lastModifiedDate":"2021-10-13"},{"lineNumber":304,"author":{"gitId":"nvbinh15"},"content":"        printMessage(\"Module: \" + moduleName);","lastModifiedDate":"2021-10-27"},{"lineNumber":305,"author":{"gitId":"nvbinh15"},"content":"        printMessage(\"Zoom: \" + zoomLink);","lastModifiedDate":"2021-10-27"},{"lineNumber":306,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":307,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":308,"author":{"gitId":"swatimahadevan"},"content":"    public static void printHelpMessage(String helpMessage, String syntax) {","lastModifiedDate":"2021-10-27"},{"lineNumber":309,"author":{"gitId":"nvbinh15"},"content":"        printMessage(\"Description: \" + helpMessage);","lastModifiedDate":"2021-10-27"},{"lineNumber":310,"author":{"gitId":"nvbinh15"},"content":"        printMessage(\"Syntax: \" + syntax);","lastModifiedDate":"2021-10-27"},{"lineNumber":311,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":312,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":313,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"SvethaMahadevan":47,"nvbinh15":76,"ngnigel99":69,"swatimahadevan":118,"shoibloya":3}},{"path":"src/test/java/seedu/duke/ClickTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"class ClickTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"nvbinh15":1,"-":11}},{"path":"src/test/java/seedu/duke/commands/AddTodoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.calendar.AddTodoCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.calendar.InvalidDateException;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"class AddTodoCommandTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"    void addTodoCommand_checkDate_returnFalse() {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"        Boolean isValidDate \u003d AddTodoCommand.isValid(\"11-22-2021\");","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"        assertEquals(false, isValidDate);","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"    void addTodoCommand_checkDate_throwInvalidDateException() throws InvalidDateException {","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"        String todoDateStringFormat \u003d \"22-22-2021\";","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"            AddTodoCommand.checkIfDateValid(todoDateStringFormat);","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"            assertEquals(\"Invalid date given!\", e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"nvbinh15":1,"swatimahadevan":27}},{"path":"src/test/java/seedu/duke/commands/DisplayCalendarCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.commands.calendar.DisplayCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.calendar.InvalidMonthException;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"class DisplayCalendarCommandTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"    void displayCalendar_wrongMonthValue_throwException() throws InvalidMonthException {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"            Command command \u003d new DisplayCommand(\"calendar 22-2021\");","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"            assertEquals(\"The month has to be a value between 01-12!\", e.getMessage());","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"swatimahadevan":20}},{"path":"src/test/java/seedu/duke/food/FoodTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.food;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.food.NegativeCaloriesException;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.syntax.ArgumentsNotFoundException;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.syntax.WrongDividerOrderException;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.food.IllegalFoodParameterException;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"//@@author ngnigel99","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"public class FoodTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"     * Checks food toString correctly.","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    void testFoodToString() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"        assertEquals(\"Samurai Burger : 433 KCal\", new FoodRecord(\"Samurai Burger\", 433).toString());","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"     * Checks for NumberFormatException on adding a food item.","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"     * Checks correct food syntax parsed in correctly.","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"    void testAddFoodCommand() throws","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"            IllegalFoodParameterException,","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"            ArgumentsNotFoundException,","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"            WrongDividerOrderException,","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"            NegativeCaloriesException {","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"        String correctUserInput \u003d \"food add n/Samurai Burger c/433\";","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"        FoodRecord testFoodRecord \u003d  parser.parseFoodRecord(correctUserInput);","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"        FoodRecord actualFoodRecord \u003d new FoodRecord(\"Samurai Burger\", 433);","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"        //test fields are correctly constructed","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"        assertEquals(testFoodRecord.getFoodName(), actualFoodRecord.getFoodName());","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"        assertEquals(testFoodRecord.getCalorieCount(), actualFoodRecord.getCalorieCount());","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"    void testLoadFoodFromReferenceListLine() {","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"        String readLine \u003d \"Set A - Butterfly Plea Flower Rice w Ayam Penyet (Regular) | 1151\";","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"        FoodRecord testFoodRecord \u003d Parser.parseFoodSavedListToRecord(readLine);","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"        FoodRecord actualFoodRecord \u003d new FoodRecord(","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"            \"Set A - Butterfly Plea Flower Rice w Ayam Penyet (Regular)\", 1151","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"    void addFoodItem_stringNotInt_illegalFoodParameterThrown() throws IllegalFoodParameterException {","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"        boolean nfeThrown \u003d false;","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"            FoodRecord foodRecord \u003d parser.parseFoodRecord(\"name_test\" + \" \" + \"sample_string\");","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"            assertEquals(\"Missing arguments!\", e.getMessage());","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"     * Checks for IllegalFoodParameterException thrown when word count !\u003d 2.","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"    void addFoodItem_wrongSyntax_illegalFoodParameterExceptionThrown() throws IllegalFoodParameterException {","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"            FoodRecord foodRecord \u003d parser.parseFoodRecord(\"Cheezburger\");  //calorie count not included","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"ngnigel99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"ngnigel99"},"content":"            assertEquals(Messages.PRINT_ADD_FOOD_SYNTAX, e.getMessage());","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"ngnigel99"},"content":"     * Checks for illegal food parameter exception thrown on null input.","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"ngnigel99"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"ngnigel99"},"content":"    void addFoodItem_noInputGiven_illegalFoodParameterThrown() throws IllegalFoodParameterException {","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"ngnigel99"},"content":"            FoodRecord foodRecord \u003d parser.parseFoodRecord(\"\");","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"ngnigel99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"ngnigel99"},"content":"            assertEquals(Messages.PRINT_ADD_FOOD_SYNTAX, e.getMessage());","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"nvbinh15":1,"ngnigel99":94}},{"path":"src/test/java/seedu/duke/journal/NoteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.journal;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"class NoteTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"    static Note parser \u003d new Note(\"Trial\", \"none\");","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"    void getNoteNameTest() {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"        assertEquals(\"Trial\", parser.getNoteName());","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"SvethaMahadevan":14}},{"path":"src/test/java/seedu/duke/module/GradePointsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.module;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"class GradePointsTest {","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"    GradePoints gradePoints \u003d new GradePoints();","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    void getPoint_validRawGrade() {","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(gradePoints.getPoint(\"A+\"), 5.0);","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(gradePoints.getPoint(\"B\"), 3.5);","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(gradePoints.getPoint(\"F\"), 0.0);","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(gradePoints.getPoint(\"NA\"), -1.0);","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"    void isValidGrade_validRawGrade() {","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"        assertTrue(gradePoints.isValidGrade(\"A\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"        assertTrue(gradePoints.isValidGrade(\"a\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"        assertTrue(gradePoints.isValidGrade(\"b+\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"        assertTrue(gradePoints.isValidGrade(\"NA\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"    void isValidGrade_invalidRawGrade() {","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"        assertFalse(gradePoints.isValidGrade(\"A +\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"        assertFalse(gradePoints.isValidGrade(\"5.0\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"        assertFalse(gradePoints.isValidGrade(\"Not applicable\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"nvbinh15":35}},{"path":"src/test/java/seedu/duke/module/ModuleListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.module;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":" * A test class for ModuleList.","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"class ModuleListTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    ModuleList moduleList;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"    void setUpModuleListTest() {","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"        moduleList \u003d new ModuleList();","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"    void getNumberOfModules_newModuleList_zero() {","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(moduleList.getNumberOfModules(), 0);","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"    void addModule_addSampleModuleToModuleList_moduleListContainsSampleModule() {","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"        Module sampleModule \u003d new Module(\"CS2113T\", \"Software Engineering\", 4, \"A\");","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"        moduleList.addModule(sampleModule);","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"        assertTrue(moduleList.getModules().contains(sampleModule));","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"    void getModuleByIndex_addSampleModuleToModuleList_sampleModuleHasIndexZero() {","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"        Module sampleModule \u003d new Module(\"CS2113T\", \"Software Engineering\", 4, \"A\");","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"        moduleList.addModule(sampleModule);","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(moduleList.getModuleByIndex(0), sampleModule);","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"    void removeModuleByIndex_addAndRemoveSampleModule_ModuleListNotContainSampleModule() {","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"        Module sampleModule \u003d new Module(\"CS2113T\", \"Software Engineering\", 4, \"A\");","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"        moduleList.addModule(sampleModule);","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"        moduleList.removeModuleByIndex(0);","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"        assertFalse(moduleList.getModules().contains(sampleModule));","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"    void exist_duplicateModules() {","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"        Module sampleModule \u003d new Module(\"CS2113T\", \"Software Engineering\", 4, \"A\");","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"        Module moduleWithExistedCode \u003d new Module(\"CS2113T\");","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"        moduleList.addModule(sampleModule);","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"        assertTrue(moduleList.exist(moduleWithExistedCode));","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"nvbinh15":58}},{"path":"src/test/java/seedu/duke/module/ModuleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.module;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":" * A test class for Module.","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"class ModuleTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"    void getCode_newModuleSpecifyingCode_specifiedCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"        String moduleCode \u003d \"CS2113T\";","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"        Module module \u003d new Module(moduleCode);","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(moduleCode, module.getCode());","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"    void getName_newModuleSpecifyingCodeAndName_specifiedName() {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"        String moduleCode \u003d \"CS2113T\";","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"        String moduleName \u003d \"Software Engineering \u0026 Object-Oriented Programming\";","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"        Module module \u003d new Module(moduleCode, moduleName);","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(moduleName, module.getName());","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"    void getModularCredits_newModuleSpecifyingCodeNameAndMc_specifiedMc() {","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"        String moduleCode \u003d \"CS2113T\";","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"        String moduleName \u003d \"Software Engineering \u0026 Object-Oriented Programming\";","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"        int modularCredits \u003d 4;","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"        Module module \u003d new Module(moduleCode, moduleName, modularCredits);","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(modularCredits, module.getModularCredits());","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"    void getExpectedGrade_newModuleSpecifyingCodeNameMcAndGrade_specifiedGrade() {","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"        String moduleCode \u003d \"CS2113T\";","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"        String moduleName \u003d \"Software Engineering \u0026 Object-Oriented Programming\";","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"        int modularCredits \u003d 4;","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"        String expectedGrade \u003d \"A\";","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"        Module module \u003d new Module(moduleCode, moduleName, modularCredits, expectedGrade);","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(expectedGrade, module.getExpectedGrade());","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"    void setCode_newModuleChangeToNewCode_newCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"        String moduleCode \u003d \"CS2113T\";","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"        Module module \u003d new Module(moduleCode);","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"        String newModuleCode \u003d \"CS2113\";","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"        module.setCode(newModuleCode);","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(newModuleCode, module.getCode());","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"    void setName_newModuleChangeToNewName_newName() {","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"        String moduleCode \u003d \"CS2113T\";","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"        String moduleName \u003d \"Software Engineering \u0026 Object-Oriented Programming\";","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"        Module module \u003d new Module(moduleCode, moduleName);","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"        String newModuleName \u003d \"Software Engineering and Object-Oriented Programming\";","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"        module.setName(newModuleName);","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(newModuleName, module.getName());","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"nvbinh15"},"content":"    void setExpectedGrade_newModuleChangeToNewGrade_newGrade() {","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"nvbinh15"},"content":"        String moduleCode \u003d \"CS2113T\";","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"nvbinh15"},"content":"        String moduleName \u003d \"Software Engineering \u0026 Object-Oriented Programming\";","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"nvbinh15"},"content":"        int modularCredits \u003d 4;","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"nvbinh15"},"content":"        String expectedGrade \u003d \"A\";","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"nvbinh15"},"content":"        Module module \u003d new Module(moduleCode, moduleName, modularCredits, expectedGrade);","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"nvbinh15"},"content":"        String newExpectedGrade \u003d \"A-\";","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"nvbinh15"},"content":"        module.setExpectedGrade(newExpectedGrade);","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(newExpectedGrade, module.getExpectedGrade());","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"nvbinh15"},"content":"    void setModularCredits_newModuleChangeToNewMc_newMc() {","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"nvbinh15"},"content":"        String moduleCode \u003d \"CS2113T\";","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"nvbinh15"},"content":"        String moduleName \u003d \"Software Engineering \u0026 Object-Oriented Programming\";","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"nvbinh15"},"content":"        int modularCredits \u003d 3;","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"nvbinh15"},"content":"        Module module \u003d new Module(moduleCode, moduleName, modularCredits);","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"nvbinh15"},"content":"        int newModularCredits \u003d 4;","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"nvbinh15"},"content":"        module.setModularCredits(newModularCredits);","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(newModularCredits, module.getModularCredits());","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"nvbinh15"},"content":"    void testToString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"nvbinh15"},"content":"        String moduleCode \u003d \"CS2113T\";","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"nvbinh15"},"content":"        String moduleName \u003d \"Software Engineering \u0026 Object-Oriented Programming\";","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"nvbinh15"},"content":"        int modularCredits \u003d 4;","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"nvbinh15"},"content":"        String expectedGrade \u003d \"A\";","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"nvbinh15"},"content":"        Module module \u003d new Module(moduleCode, moduleName, modularCredits, expectedGrade);","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"nvbinh15"},"content":"        String expectedString \u003d \"CS2113T | Software Engineering \u0026 Object-Oriented Programming | MC: 4\"","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"nvbinh15"},"content":"                + \" | Expected grade: A\";","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(expectedString, module.toString());","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"nvbinh15":103}},{"path":"src/test/java/seedu/duke/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.syntax.IllegalDateTimeException;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":" * A test class for Parser.","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"class ParserTest {","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"    static Parser parser \u003d new Parser();","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"     * Checks format date time with valid input.","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"     * @throws IllegalDateTimeException If the input datetime is illegal.","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"    void formatDateTime_legalDateTime_dateTimeOfOtherFormat() throws IllegalDateTimeException {","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"        String inputDateTime \u003d \"01-10-2021 2359\";","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"        String expectedDateTime \u003d \"Oct 01 2021 23:59\";","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(expectedDateTime, parser.formatDateTime(inputDateTime));","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"     * Checks IllegalDateTimeException thrown when invalid input is passed into formatDatetime.","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"    void formatDateTime_illegalDateTime_illegalDateTimeException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"        String illegalDateTime \u003d \"01/01/2021 2359\";","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"        assertThrows(IllegalDateTimeException.class, () -\u003e parser.formatDateTime(illegalDateTime));","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":37,"ngnigel99":1,"swatimahadevan":1}},{"path":"src/test/java/seedu/duke/parser/journal/ParserJournalTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.parser.journal;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.journal.Note;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"class ParserJournalTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"    static ParserJournal parser \u003d new  ParserJournal();","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"    static Storage storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"    static {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"SvethaMahadevan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"SvethaMahadevan"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"SvethaMahadevan"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"SvethaMahadevan"},"content":"    void parserNotebookCommand_noNoteNameGiven() {","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"SvethaMahadevan"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"SvethaMahadevan"},"content":"            Boolean isValidNoteName \u003d ParserJournal.isValidNotebookCommand(\"journal notebook n/\");","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"SvethaMahadevan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"SvethaMahadevan"},"content":"            assertEquals(false, false);","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"SvethaMahadevan"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"SvethaMahadevan"},"content":"    void parserNotebookCommand_noNoteArgumentsFound() {","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"SvethaMahadevan"},"content":"        Boolean isValidNoteArguments \u003d false;","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"SvethaMahadevan"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"SvethaMahadevan"},"content":"            isValidNoteArguments \u003d ParserJournal.isValidNotebookCommand(\"journal notebook\");","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"SvethaMahadevan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"SvethaMahadevan"},"content":"            assertEquals(false, isValidNoteArguments);","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"SvethaMahadevan"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"SvethaMahadevan"},"content":"    void parserNotebookCommand_duplicateNotebookName_throwDuplicateNoteException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"SvethaMahadevan"},"content":"        ArrayList\u003cNote\u003e notes \u003d storage.collectionOfNotes.getNotesArrayList();","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"SvethaMahadevan"},"content":"        String noteName \u003d \" \";","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"SvethaMahadevan"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"SvethaMahadevan"},"content":"            noteName \u003d parser.checkDuplicateOrNot(\"journal notebook n/ notInStorageName \", notes);","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"SvethaMahadevan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"SvethaMahadevan"},"content":"            assertEquals(\"notInStorageName\", noteName);","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"SvethaMahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"SvethaMahadevan":54}},{"path":"src/test/java/seedu/duke/parser/module/ParserModuleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.parser.module;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.storage.StorageException;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.module.Module;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":" * A test class for ParserModule.","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"class ParserModuleTest {","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"     * Checks formatModuleToStore return the expected data with valid input Module.","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    void formatModuleToStore_sampleModule_respectiveStringRepOfSampleModule() {","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"        Module sampleModule \u003d new Module(\"CS2113T\", \"Software Engineering\", 4, \"A\");","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"        String data \u003d ParserModule.formatModuleToStore(sampleModule);","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"        String expectedData \u003d \"CS2113T|Software Engineering|A|4\\n\";","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(data, expectedData);","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"     * Checks retrieveStoredModule return the expected Module with valid data in the storage file.","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"     * @throws StorageException If there is something wrong with the storage file.","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"    void retrieveStoredModule_validData_expectedModule() throws StorageException {","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"        String data \u003d \"CS2113T|Software Engineering|A|4\";","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"        Module retrievedModule \u003d ParserModule.retrieveStoredModule(data);","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"        Module expectedModule \u003d new Module(\"CS2113T\", \"Software Engineering\", 4, \"A\");","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(retrievedModule.toString(), expectedModule.toString());","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"     * Checks StorageExceptionThrown when the data in the storage file passed into retrievedStoredModule is invalid.","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"    void retrieveStoredModule_invalidData_StorageExceptionThrown() {","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"        String invalidData \u003d \"CS2113T|Software Engineering|A\";","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"        assertThrows(StorageException.class, () -\u003e ParserModule.retrieveStoredModule(invalidData));","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"     * Checks formatCapInfoToStore return the expected data with valid input.","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"    void formatCapInfoToStore_sampleCapInfo_respectiveFormattedData() {","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"        double cap \u003d 4.5;","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"        int totalMc \u003d 50;","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"        String data \u003d ParserModule.formatCapInfoToStore(cap, totalMc);","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"        String expectedData \u003d \"4.5|50\\n\";","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(data, expectedData);","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"     * Checks StorageException thrown when data in the storage file passed into retrieveStoreData is invalid.","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"nvbinh15"},"content":"    void retrieveStoredCapInfo_invalidData_StorageExceptionThrown() {","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"nvbinh15"},"content":"        String invalidData \u003d \"4.5|\";","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"nvbinh15"},"content":"        assertThrows(StorageException.class, () -\u003e ParserModule.retrieveStoredCapInfo(invalidData));","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"nvbinh15":70,"ngnigel99":1}},{"path":"src/test/java/seedu/duke/parser/schedule/ParserScheduleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.parser.schedule;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.calendar.IncorrectNumberOfArgumentsException;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"//@author swatim","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"class ParserScheduleTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"    static ParserSchedule parser \u003d new ParserSchedule();","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"    void formatYearMonth() {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"        assertEquals(YearMonth.of(2021, 10), parser.parseCalendarCommandForJunit(\"calendar display 10-2021\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"    void parseTodoCommand_noTaskName_returnNullArguments() throws IncorrectNumberOfArgumentsException {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cString\u003e todoArguments \u003d null;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"            todoArguments \u003d parser.parseTodoArgumentsArray(\"calendar todo n/ \");","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"            assertEquals(null, todoArguments);","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"swatimahadevan":32}},{"path":"src/test/java/seedu/duke/zoom/LinkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shoibloya"},"content":"package seedu.duke.zoom;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"shoibloya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"shoibloya"},"content":"import seedu.duke.commands.zoom.AddZoomCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"shoibloya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"shoibloya"},"content":"public class LinkTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"shoibloya"},"content":"    static AddZoomCommand addition \u003d new AddZoomCommand(\"moduleName\", \"https://test.com\");","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"shoibloya"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"shoibloya"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"shoibloya"},"content":"    void checkZoomLink() {","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"shoibloya"},"content":"        assertEquals(addition.getZoomLink().split(\"//\")[0].trim(), \"https:\");","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"shoibloya"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"shoibloya"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"shoibloya":15}}]
