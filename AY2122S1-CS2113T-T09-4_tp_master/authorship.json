[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ngnigel99":1,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Svetha Mahadevan | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Nguyen Van Binh | [Github](https://github.com/nvbinh15) | [Portfolio](docs/team/nguyenvanbinh.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"shoibloya"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Shoib Loya | [Github](https://github.com/) | [Portfolio](docs/team/shoibloya.md)","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Nigel Ng | [Github](https://github.com/ngnigel99) | [Portfolio](docs/team/ngnigel99.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Mahadevan Swati | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"SvethaMahadevan":1,"nvbinh15":1,"ngnigel99":1,"-":4,"shoibloya":1,"swatimahadevan":1}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import java.nio.file.FileAlreadyExistsException;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.ExceptionHandler;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"    private static ExceptionHandler exceptionHandler \u003d new ExceptionHandler();","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"    private static Storage storage;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"    static {","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"    private static Parser parser \u003d new Parser();","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"    private static void run() {","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"        ui.printGreeting();","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"        while (true) {","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"            String userInput \u003d in.hasNextLine() ? in.nextLine()  : null;","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"            try {","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"                Command c \u003d parser.parseCommand(userInput);","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"                c.execute(ui, storage);","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"                ui.printLine();","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"            } catch (ClickException e) {","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"                exceptionHandler.handleDukeExceptions(e, userInput);","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"            } catch (Exception  e) {","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"                exceptionHandler.handleOtherExceptions(e);","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"            }","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"     * Main entry method to run Duke.","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"     * @param args Unused params.","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"        new Duke();","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"        Duke.run();","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nvbinh15":29,"ngnigel99":6,"-":11,"swatimahadevan":13}},{"path":"src/main/java/seedu/duke/commands/AddFoodCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.food.FoodRecord;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.IllegalFoodParameterException;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.storage.StorageFood;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":" * Command to add a food item to the existing  list.","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":" * prefix would be food add [FOOD_NAME] [CALORIE_COUNT(kcal)]","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":" *","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":" * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"public class AddFoodCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    private String inputString; //name + calorie","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    public AddFoodCommand(String inputString) {","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"        super();","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"        this.inputString \u003d inputString;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    public void execute(Ui ui, Storage storage) throws IllegalFoodParameterException, IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"        FoodRecord foodRecord  \u003d Parser.parseFoodRecord(inputString);","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"        storage.whatIAteTodayList.addToList(foodRecord);","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"        StorageFood.saveList(storage.whatIAteTodayList);","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"ngnigel99":32}},{"path":"src/main/java/seedu/duke/commands/AddModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"public class AddModuleCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"     * Adds a new module.","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"     *  @param ui The component of Duke that deals with the interaction with the user.","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"     * @param storage The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"    public void execute(Ui ui, Storage storage) {","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"nvbinh15":18,"ngnigel99":2,"swatimahadevan":1}},{"path":"src/main/java/seedu/duke/commands/AddNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"public class AddNoteCommand extends Command {","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"    private ArrayList\u003cString\u003e noteList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"    public String userInput;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"    public AddNoteCommand(String userInput) {","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"    ","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"    public void execute(Ui ui, Storage storage) {","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"SvethaMahadevan":20,"swatimahadevan":1}},{"path":"src/main/java/seedu/duke/commands/AddTodoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.Todo;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.INDEX_TODO_DESCRIPTION;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.INDEX_TODO_DATE;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"//@author swatim","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"    private ArrayList\u003cString\u003e arguments;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"    public String parseDate(String todoDate) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd-MM-yyyy\");","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"        Date parsed \u003d format.parse(todoDate);","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"        return format.format(parsed);","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"    public AddTodoCommand(ArrayList\u003cString\u003e arguments) {","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"        super();","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"    //Adds Task task into TaskList","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"    public void execute(Ui ui, Storage storage) throws IOException, ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"        String description \u003d arguments.get(INDEX_TODO_DESCRIPTION);","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"        String date \u003d parseDate(arguments.get(INDEX_TODO_DATE));","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"        Task task \u003d new Todo(description, date);","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"        storage.tasksList.addTask(task);","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"        Ui.printTaskAddedMessage();","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"        storage.writeTaskList(storage.tasksList);","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"ngnigel99":1,"swatimahadevan":44}},{"path":"src/main/java/seedu/duke/commands/ClearFoodCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.storage.StorageFood;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":" * Clears the current list  of food, and clear entries in storage.","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":" * @author  ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"public class ClearFoodCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    public void execute(Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"        storage.whatIAteTodayList.clearList();","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"        StorageFood.saveList(storage.whatIAteTodayList);","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"ngnigel99":20,"swatimahadevan":1}},{"path":"src/main/java/seedu/duke/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":" * An abstract representation of Command.","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"     * Executes command.","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"     * @param ui      The component of Duke that deals with the interaction with the user.","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"     * @param storage The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"     * @throws ClickException If there is an exception of type ClickException occurs.","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"     * @throws Exception      If there is an exception of type other than DukeException occurs.","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"    public abstract void execute(Ui ui, Storage storage) throws ClickException, Exception;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":22,"ngnigel99":2,"swatimahadevan":1}},{"path":"src/main/java/seedu/duke/commands/DisplayCalendarCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.InvalidArgumentsException;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.schedule.Schedule;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.YEAR_LOWER_LIMIT;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.YEAR_UPPER_LIMIT;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.MONTH_LOWER_LIMIT;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.MONTH_UPPER_LIMIT;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"public class DisplayCalendarCommand extends Command {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"    private int year;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"    private int month;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"    private YearMonth inputYearMonth;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"    private String[] yearMonthArguments;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"    public DisplayCalendarCommand(String input) {","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"            try {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"                this.yearMonthArguments \u003d Parser.parseCalendarCommand(input);","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"            } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"                Ui.printInvalidYearMonthMessage();","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"            this.year \u003d Integer.parseInt(yearMonthArguments[1]);","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"            this.month \u003d Integer.parseInt(yearMonthArguments[0]);","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"            if (year \u003c YEAR_LOWER_LIMIT || year \u003e YEAR_UPPER_LIMIT || month \u003c MONTH_LOWER_LIMIT","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"                || month \u003e MONTH_UPPER_LIMIT) {","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"                throw new InvalidArgumentsException();","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"            this.inputYearMonth \u003d YearMonth.of(year, month);","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException | InvalidArgumentsException c) {","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"            Ui.printInvalidCalendarInput();","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"    public void execute(Ui ui, Storage storage) {","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"        Ui.printCalenderTitle(inputYearMonth);","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"        Schedule.displayCalendar(inputYearMonth);","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"ngnigel99":1,"swatimahadevan":47}},{"path":"src/main/java/seedu/duke/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":" * A representation of the command for exiting the program.","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"     * Executes the exit command.","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"     *  @param ui The component of Duke that deals with the interaction with the user.","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"     * @param storage The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"    public void execute(Ui ui, Storage storage) {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"        ui.printGoodBye();","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"        System.exit(0);","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":23,"ngnigel99":2,"swatimahadevan":1}},{"path":"src/main/java/seedu/duke/commands/ListFoodCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":" * List all current records (assumed today for simplicity).","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":" * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"public class ListFoodCommand extends Command  {","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"    public void execute(Ui ui, Storage storage) {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"        storage.whatIAteTodayList.printList();","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"ngnigel99":16,"swatimahadevan":2}},{"path":"src/main/java/seedu/duke/commands/ListTasksCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.InvalidArgumentsException;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"public class ListTasksCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"    public ListTasksCommand() {","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"        super();","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"    public void execute(Ui ui, Storage storage) throws IOException, InvalidArgumentsException {","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"        TaskList tasks \u003d storage.readTaskList();","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"        Ui.printTaskList(tasks.getTaskList());","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"ngnigel99":3,"swatimahadevan":21}},{"path":"src/main/java/seedu/duke/constants/CommandConstants.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.constants;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":" * A class that contains constants related to Commands.","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"public class CommandConstants {","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"    public static final String COMMAND_EXIT \u003d \"exit\";","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"    public static final String COMMAND_CALENDAR \u003d \"calendar\";","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"    public static final String COMMAND_FOOD     \u003d \"food\";","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    public static final String COMMAND_SUFFIX_ADD \u003d \"add\";","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"    public static final String COMMAND_SUFFIX_CLEAR \u003d \"clear\";","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    public static final String COMMAND_SUFFIX_LIST \u003d \"list\";","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"    public static final String COMMAND_ADD_NOTE \u003d \"add\";","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    public static final String COMMAND_ADD_MODULE \u003d \"module add\";","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"    public static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"    public static final String COMMAND_LIST_TASKS \u003d \"list\";","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"SvethaMahadevan":1,"nvbinh15":9,"ngnigel99":4,"swatimahadevan":3}},{"path":"src/main/java/seedu/duke/constants/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.constants;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"public class Messages {","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"    public static final String LOGO \u003d \"\\t\" + \" ____        _\\n\"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"            + \"\\t\" + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"            + \"\\t\" + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"            + \"\\t\" + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"            + \"\\t\" + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\\n\";","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"    public static final String OPEN_SQUARE_BRACKET \u003d \"[\";","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"    public static final String CLOSE_SQUARE_BRACKET \u003d \"]\";","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"    public static final String VERTICAL_BAR \u003d \" | \";","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    public static final String VERTICAL_BAR_REGEX \u003d \" \\\\| \";","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"    public static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    public static final String LINE_PREFIX \u003d \"\\t\";","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"    public static final String LINE_SEPARATOR \u003d System.lineSeparator();","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    public static final String NEW_LINE \u003d LINE_SEPARATOR + LINE_PREFIX;","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"    public static final String HORIZONTAL_LINE \u003d LINE_PREFIX + \"__________________________________________________\";","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_GREETING \u003d LINE_PREFIX + \"Hello! I\u0027m Duke\" + NEW_LINE + \"What can I do for you?\";","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_GOODBYE \u003d LINE_PREFIX + \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    // Food partition","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_DONE_CLEAR_LIST \u003d \"Cleared food record list for today!\";","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_ADD_FOOD_SYNTAX \u003d \"Please enter the name of the food [TEXT] \"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"                                                        + \"followed by the calorie count [INT]\";","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    public static final String NON_NULL_INPUT \u003d \"Please do not leave fields empty!\";","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    public static final String RECORD_ATTRIBUTE_DIVIDER \u003d \" : \";","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    public static final String LIST_PROPER_FEATURE  \u003d  \"Please list a proper feature tagged with \";","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"    //end of Food","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"    //@author swatim","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"    //SCHEDULE BEGIN","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"    public static String CALENDAR_HEADER_LINE \u003d \"________________________________________________________\";","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"    public static final String INVALID_CALENDAR_INPUT \u003d \" Invalid Input! Please \"","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"            + \"type command in format:   | calendar MM-YYYY |\";","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"    public static final String INVALID_YEARMONTH \u003d \" Invalid Input! Please give \"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"            + \"a month between 1-12 and year between 2021-2025\";","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"    public static final int YEAR_UPPER_LIMIT \u003d 2025;","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"    public static final int YEAR_LOWER_LIMIT \u003d 2021;","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"    public static final int MONTH_UPPER_LIMIT \u003d 12;","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"    public static final int MONTH_LOWER_LIMIT \u003d 1;","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"    public static final int NUMBER_OF_DAYS_IN_WEEK \u003d 7;","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"    public static final String LEAVE_EMPTY_IN_DISPLAY \u003d \"  \";","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"    public static final String[] DAYS_IN_MONTH \u003d {\"01\", \"02\", \"03\", \"04\", \"05\",","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"        \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\", \"13\",","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"        \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\",","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"        \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\"};","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"    public static final String STORAGE_FILEPATH_SCHEDULE \u003d \"scheduleTasks.txt\";","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"    public static final String TODO \u003d \"todo\";","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"swatimahadevan"},"content":"    public static final int INDEX_TODO_DESCRIPTION \u003d 1;","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"swatimahadevan"},"content":"    public static final int INDEX_TODO_DATE \u003d 2;","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"swatimahadevan"},"content":"    public static final int FIRST_INDEX \u003d 0;","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"swatimahadevan"},"content":"    public static final String ADDED_TASK \u003d \"Task has been added successfully!\";","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"swatimahadevan"},"content":"    public static final String LIST_TASKS_HEADER \u003d \"Here\u0027s your task list: \";","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"swatimahadevan"},"content":"    public static final String DATE_FORMAT_TODO \u003d \"dd-MM-yyyy\";","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"swatimahadevan"},"content":"    public static final String DECOR_BEFORE \u003d \"|  \";","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"swatimahadevan"},"content":"    public static final String DECOR_AFTER \u003d \"  |\";","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"swatimahadevan"},"content":"    //SCHEDULE END","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":25,"ngnigel99":8,"swatimahadevan":29}},{"path":"src/main/java/seedu/duke/exceptions/ClickException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":" * A base class that represents checked specific exceptions thrown by Click.","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"public class ClickException extends Exception {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"    public String message;  //author ngnigel99","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":10}},{"path":"src/main/java/seedu/duke/exceptions/ExceptionHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":" * A class that handles exceptions thrown by Duke.","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"public class ExceptionHandler {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"     * Handles duke exceptions.","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"     * @param e Exception of type DukeException thrown by Duke.","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    public static void handleDukeExceptions(ClickException e, String userInput) {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"hey, I can\u0027t \" + userInput + \" yet, try help for more commands\");","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"     * Handles other exceptions.","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"     * @param e Exception of types other than DukeException thrown by Duke.","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"    public static void handleOtherExceptions(Exception e) {","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"OOPs, invalid command, try help for more commands.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":26,"ngnigel99":3}},{"path":"src/main/java/seedu/duke/exceptions/IllegalDateTimeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":" * A class that represents exceptions thrown when a input date time is illegal.","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"public class IllegalDateTimeException extends Exception {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":9}},{"path":"src/main/java/seedu/duke/exceptions/IllegalFoodParameterException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":" * Exception thrown when parameters are left blank when adding a food item.","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" * More specifically, when user input is not 2 words consisting of name, calorie count.","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" *","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" * @author ngnigel99","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"public class IllegalFoodParameterException extends ClickException {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    public IllegalFoodParameterException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"        this.message \u003d Messages.PRINT_ADD_FOOD_SYNTAX;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"        return message;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"ngnigel99":20}},{"path":"src/main/java/seedu/duke/exceptions/InvalidArgumentsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"public class InvalidArgumentsException extends Exception{","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"swatimahadevan":4}},{"path":"src/main/java/seedu/duke/food/FoodRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.food;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" *  A food record simply records the name and calorie count of a food item.","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" *  [FOOD_NAME] [CALORIES]","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" *","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":" * @author  ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"public class FoodRecord {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    private String foodName;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    private Integer calorieCount;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    public FoodRecord(String foodName, Integer calorieCount) {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"        this.foodName \u003d foodName;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"        this.calorieCount \u003d calorieCount;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    public String getFoodName() {","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"        return foodName;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    public Integer getCalorieCount() {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"        return calorieCount;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"        return foodName","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"                + Messages.RECORD_ATTRIBUTE_DIVIDER","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"                + calorieCount;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"    public String toSaveListFormat() {","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"        return foodName + \"|\" + calorieCount + \"\\n\";","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"    public void printRecordOnAdd()  {","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"        Ui.printAddRecord(this);","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"ngnigel99":43}},{"path":"src/main/java/seedu/duke/food/ListOfRecords.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.food;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":" * An abstract class for implementing food record  lists.","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"public abstract class ListOfRecords\u003cT\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    protected ArrayList\u003cT\u003e list \u003d  new  ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    protected ArrayList\u003cT\u003e getList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"        return list;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"     * Adds items to a list.","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"     * @param recordToAdd record to add into list","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    protected void addToList(T recordToAdd) {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"        list.add(recordToAdd);","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"     * Prints a list.","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    protected void printList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"        for (T listRecord : list) {","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(listRecord);","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"     * Clears a list,  and wipes  storage.","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"     * @author  ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"    protected void clearList()  {","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"        list.clear();","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"ngnigel99":45}},{"path":"src/main/java/seedu/duke/food/WhatIAteList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.food;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" * Represents a list of what the user has eaten.","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":" *  This would include the date of the record and","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":" *      the food items consumed.","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":" *","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":" * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"public class WhatIAteList extends ListOfRecords\u003cFoodRecord\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    private Date dayOfRecordList;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    public WhatIAteList(Date dayOfRecordList) {","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"        this.dayOfRecordList \u003d dayOfRecordList;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    //if date not given","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    public WhatIAteList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    public ArrayList\u003cFoodRecord\u003e getList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"        return list;","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"     * Adds a food Record to a list, then notifies the user of what  item","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"     *  they  have entered.","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"     * @author  ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"     * @param recordToAdd record to add to list","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"    public void addToList(FoodRecord recordToAdd) {","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"        super.addToList(recordToAdd);","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"        Ui.printAddRecord(recordToAdd);","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"     * Prints  index with suffix for visuals.","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"     * @param index index of list","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"    public void printIndexWithSuffix(int index) {","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"        String[] suffixList \u003d {\"st\", \"nd\", \"rd\", \"th\"};","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"        String suffixToPrint;","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"        if ((index - 1) %  10 \u003d\u003d 0) {","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"            suffixToPrint \u003d suffixList[0];","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"        } else if ((index - 2) % 10 \u003d\u003d 0) {","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"            suffixToPrint \u003d suffixList[1];","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"        } else if ((index - 3) % 10 \u003d\u003d 0) {","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"            suffixToPrint \u003d suffixList[2];","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"        } else {","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"            suffixToPrint \u003d suffixList[3];","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"        System.out.print(index + suffixToPrint  +  \",\");","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"     * Prints food records collated in list.","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"     * In context, for today.","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"    public void printList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"        int index \u003d 1;  //TODO integrate this with storage so it\u0027s not a magic number","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"        int calorieSum \u003d  0;","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"        for (FoodRecord listRecord : list) {","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"            printIndexWithSuffix(index);","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"You consumed  \" + listRecord.getFoodName()","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"ngnigel99"},"content":"                                + \" , which has a calorie count of : \"","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"ngnigel99"},"content":"                                + listRecord.getCalorieCount() + \"!\");","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"ngnigel99"},"content":"            index++;","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"ngnigel99"},"content":"            calorieSum +\u003d listRecord.getCalorieCount();","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"Wow, that\u0027s a lot of food! Finished reading today\u0027s list\");","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"You consumed \" + calorieSum +  \" calories in total today!\");","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"ngnigel99"},"content":"    public void clearList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"ngnigel99"},"content":"        super.clearList();","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"ngnigel99"},"content":"        Ui.printDoneClearList();","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"ngnigel99":92}},{"path":"src/main/java/seedu/duke/module/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.module;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"//@@ author nvbinh15","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":" * A representation of a Module.","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"public class Module {","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"    private String code;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"    private String name;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"    private String expectedGrade; // to be replaced with enumeration","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"    private static final String DEFAULT_MODULE_NAME \u003d \"NONE\";","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    private static final String DEFAULT_EXPECTED_GRADE \u003d \"N/A\";","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor specifying the module code.","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"     * @param code The module code.","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    public Module(String code) {","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"        this.code \u003d code;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"        this.name \u003d DEFAULT_MODULE_NAME;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"        this.expectedGrade \u003d DEFAULT_EXPECTED_GRADE;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor specifying the module code and module name.","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"     * @param code The module code.","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"     * @param name The module name.","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"    public Module(String code, String name) {","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"        this.code \u003d code;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"        this.expectedGrade \u003d DEFAULT_EXPECTED_GRADE;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor specifying the module code, module name, and the expected grade.","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"     * @param code The module code.","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"     * @param name The module name.","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"     * @param expectedGrade The expected grade of the module.","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"    public Module(String code, String name, String expectedGrade) {","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"        this.code \u003d code;","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"        this.expectedGrade \u003d expectedGrade;","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"     * Returns the module code.","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"     * @return the module code.","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"    public String getCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"        return code;","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"     * Returns the module name.","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"     * @return the module name.","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"nvbinh15"},"content":"    public String getName() {","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"nvbinh15"},"content":"        return name;","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"nvbinh15"},"content":"     * Returns the module expected grade.","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"nvbinh15"},"content":"     * @return the module expected grade.","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"nvbinh15"},"content":"    public String getExpectedGrade() {","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"nvbinh15"},"content":"        return expectedGrade;","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"nvbinh15"},"content":"     * Sets the code of the module.","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"nvbinh15"},"content":"     * @param code The code to be set.","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"nvbinh15"},"content":"    public void setCode(String code) {","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"nvbinh15"},"content":"        this.code \u003d code;","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"nvbinh15"},"content":"     * Sets the name of the module.","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"nvbinh15"},"content":"     * @param name The name to be set.","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"nvbinh15"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"nvbinh15"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"nvbinh15"},"content":"     * Sets the expected grade of the module.","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"nvbinh15"},"content":"     * @param expectedGrade The grade to be set.","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"nvbinh15"},"content":"    public void setExpectedGrade(String expectedGrade) {","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"nvbinh15"},"content":"        this.expectedGrade \u003d expectedGrade;","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"nvbinh15"},"content":"     * Overrides toString method of class Object to get the string representation of Module.","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"nvbinh15"},"content":"     * @return The string representation of the module.","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"nvbinh15"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"nvbinh15"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"nvbinh15"},"content":"        if (this.name.equals(DEFAULT_MODULE_NAME) \u0026 this.expectedGrade \u003d\u003d DEFAULT_EXPECTED_GRADE) {","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"nvbinh15"},"content":"            return this.code;","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"nvbinh15"},"content":"        } else if (this.expectedGrade \u003d\u003d DEFAULT_EXPECTED_GRADE) {","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"nvbinh15"},"content":"            return this.code + \" | \" + this.name;","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"nvbinh15"},"content":"        } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"nvbinh15"},"content":"            return this.code + \" | \" + this.name + \" | Expected grade: \" + this.expectedGrade;","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"nvbinh15":122}},{"path":"src/main/java/seedu/duke/module/ModuleManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.module;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"//@@ author nvbinh15","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"public class ModuleManager {","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"    private ArrayList\u003cModule\u003e modules;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor.","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"     * Creates an empty ArrayList of Module.","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    public ModuleManager() {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"        this.modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"     * Gets the list of modules.","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"     * @return The list of modules.","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"    public ArrayList\u003cModule\u003e getModules() {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"        return modules;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"     * Sets the list of modules.","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"     * @param modules The list of modules to be set.","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"    public void setModules(ArrayList\u003cModule\u003e modules) {","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"        this.modules \u003d modules;","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"nvbinh15":35}},{"path":"src/main/java/seedu/duke/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.food.FoodRecord;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.commands.AddFoodCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.commands.AddTodoCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.commands.AddNoteCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.commands.ListTasksCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.commands.ListFoodCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.commands.ExitCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.commands.ClearFoodCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.commands.DisplayCalendarCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.IllegalDateTimeException;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.IllegalFoodParameterException;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_ADD_NOTE;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_CALENDAR;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_EXIT;","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_FOOD;","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_LIST_TASKS;","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_SUFFIX_ADD;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_SUFFIX_CLEAR;","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_SUFFIX_LIST;","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_TODO;","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"import static seedu.duke.constants.Messages.EMPTY_STRING;","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.TODO;","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"public class Parser {","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"    static final String INPUT_DATE_TIME_FORMAT \u003d \"dd-MM-yyyy HHmm\";","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"    static final String OUTPUT_DATE_TIME_FORMAT \u003d \"MMM dd yyyy HH:mm\";","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"     * Converts date and time in string format to a LocalDateTime object.","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"     * @param string Date and time in string format.","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"     * @return A LocalDateTime object that represents the given date and time.","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"     * @throws IllegalDateTimeException If the input date time is invalid.","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"    public static LocalDateTime stringToDateTime(String string) throws IllegalDateTimeException {","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"        try {","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"            return LocalDateTime.parse(string, DateTimeFormatter.ofPattern(INPUT_DATE_TIME_FORMAT));","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"            throw new IllegalDateTimeException();","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"     * Converts date and time in LocalDateTime format to a string.","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"     * @param dateTime A LocalDateTime object that represents the given date and time.","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"     * @return The string representation of the given LocalDateTime object.","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"nvbinh15"},"content":"    public static String dateTimeToString(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"nvbinh15"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(OUTPUT_DATE_TIME_FORMAT));","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"nvbinh15"},"content":"     * Formats the user\u0027s input date time.","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"nvbinh15"},"content":"     * @param rawDateTime The raw date time from user\u0027s input.","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"nvbinh15"},"content":"     * @return The string representation of other form of the given date time.","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"nvbinh15"},"content":"     * @throws IllegalDateTimeException If the input date time is invalid.","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"nvbinh15"},"content":"    public static String formatDateTime(String rawDateTime) throws IllegalDateTimeException {","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"nvbinh15"},"content":"        try {","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"nvbinh15"},"content":"            return dateTimeToString(stringToDateTime(rawDateTime));","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"nvbinh15"},"content":"        } catch (IllegalDateTimeException e) {","lastModifiedDate":"2021-10-04"},{"lineNumber":80,"author":{"gitId":"nvbinh15"},"content":"            throw new IllegalDateTimeException();","lastModifiedDate":"2021-10-04"},{"lineNumber":81,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":82,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":83,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":84,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":85,"author":{"gitId":"nvbinh15"},"content":"     * Splits raw user input into command word and command arguments.","lastModifiedDate":"2021-10-04"},{"lineNumber":86,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":87,"author":{"gitId":"nvbinh15"},"content":"     * @param userInput Raw input from user.","lastModifiedDate":"2021-10-04"},{"lineNumber":88,"author":{"gitId":"nvbinh15"},"content":"     * @return a String array of size 2 including the command type and the arguments.","lastModifiedDate":"2021-10-04"},{"lineNumber":89,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":90,"author":{"gitId":"nvbinh15"},"content":"    public static String[] splitCommandAndArgs(String userInput) {","lastModifiedDate":"2021-10-04"},{"lineNumber":91,"author":{"gitId":"nvbinh15"},"content":"        String[] tokens \u003d userInput.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2021-10-04"},{"lineNumber":92,"author":{"gitId":"nvbinh15"},"content":"        String command \u003d tokens[0];","lastModifiedDate":"2021-10-04"},{"lineNumber":93,"author":{"gitId":"nvbinh15"},"content":"        if (tokens.length \u003d\u003d 2) {","lastModifiedDate":"2021-10-04"},{"lineNumber":94,"author":{"gitId":"nvbinh15"},"content":"            return tokens;","lastModifiedDate":"2021-10-04"},{"lineNumber":95,"author":{"gitId":"nvbinh15"},"content":"        } else {","lastModifiedDate":"2021-10-04"},{"lineNumber":96,"author":{"gitId":"nvbinh15"},"content":"            return new String[] {command, EMPTY_STRING};","lastModifiedDate":"2021-10-04"},{"lineNumber":97,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":98,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":99,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":100,"author":{"gitId":"nvbinh15"},"content":"    private static ArrayList\u003cString\u003e parseTodoCommand(String input) {","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"nvbinh15"},"content":"        ArrayList\u003cString\u003e argumentsTodoCommand \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"nvbinh15"},"content":"        //Split command name away from input string","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"nvbinh15"},"content":"        String todoDetails \u003d input.trim().split(\"todo\")[1];","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"nvbinh15"},"content":"        String descriptionAndDate \u003d todoDetails.split(\"n/\")[1].trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"nvbinh15"},"content":"        //Split description and date","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"nvbinh15"},"content":"        String description \u003d descriptionAndDate.split(\"d/\")[0].trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"nvbinh15"},"content":"        String date \u003d descriptionAndDate.split(\"d/\")[1].trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"nvbinh15"},"content":"        List\u003cString\u003e todoArguments \u003d Arrays.asList(TODO, description, date);","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"nvbinh15"},"content":"        argumentsTodoCommand.addAll(todoArguments);","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"nvbinh15"},"content":"        return argumentsTodoCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"nvbinh15"},"content":"     * Parses a line of text to a food record.","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"nvbinh15"},"content":"     * Assumes that both name, calories field not null.","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"nvbinh15"},"content":"     * Note format: [NAME] | [CALORIES]","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"nvbinh15"},"content":"     * @param readLine line of text to read","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"nvbinh15"},"content":"     * @return FoodRecord food record object","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"nvbinh15"},"content":"    public static FoodRecord parseFoodSavedListToRecord(String readLine) {","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"nvbinh15"},"content":"        String[] nameCalories \u003d readLine.split(\"\\\\|\");","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"nvbinh15"},"content":"        return new FoodRecord(nameCalories[0], Integer.parseInt(nameCalories[1]));","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":127,"author":{"gitId":"nvbinh15"},"content":"     * Returns a command to be executed based on the raw input from user.","lastModifiedDate":"2021-10-09"},{"lineNumber":128,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":129,"author":{"gitId":"nvbinh15"},"content":"     * @param userInput The raw input from user.","lastModifiedDate":"2021-10-04"},{"lineNumber":130,"author":{"gitId":"nvbinh15"},"content":"     * @return The command to be executed.","lastModifiedDate":"2021-10-04"},{"lineNumber":131,"author":{"gitId":"nvbinh15"},"content":"     * @throws ClickException If there is an exception to type DukeException occurs.","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":133,"author":{"gitId":"nvbinh15"},"content":"    public Command parseCommand(String userInput) throws ClickException {","lastModifiedDate":"2021-10-04"},{"lineNumber":134,"author":{"gitId":"nvbinh15"},"content":"        final String[] commandTypeAndParams \u003d splitCommandAndArgs(userInput);","lastModifiedDate":"2021-10-04"},{"lineNumber":135,"author":{"gitId":"nvbinh15"},"content":"        final String commandType \u003d commandTypeAndParams[0];","lastModifiedDate":"2021-10-04"},{"lineNumber":136,"author":{"gitId":"nvbinh15"},"content":"        final String commandArgs \u003d commandTypeAndParams[1];","lastModifiedDate":"2021-10-04"},{"lineNumber":137,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":138,"author":{"gitId":"nvbinh15"},"content":"        switch (commandType) {","lastModifiedDate":"2021-10-04"},{"lineNumber":139,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_EXIT:","lastModifiedDate":"2021-10-04"},{"lineNumber":140,"author":{"gitId":"nvbinh15"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-10-04"},{"lineNumber":141,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_CALENDAR:","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"nvbinh15"},"content":"            String[] todoArguments \u003d commandArgs.split(\" \");","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"nvbinh15"},"content":"            if (COMMAND_LIST_TASKS.equals(todoArguments[0])) {","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"nvbinh15"},"content":"                return new ListTasksCommand();","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"nvbinh15"},"content":"            } else if (COMMAND_TODO.equals(todoArguments[0])) {","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"nvbinh15"},"content":"                ArrayList\u003cString\u003e arguments \u003d parseTodoCommand(userInput);","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"nvbinh15"},"content":"                return new AddTodoCommand(arguments);","lastModifiedDate":"2021-10-09"},{"lineNumber":148,"author":{"gitId":"nvbinh15"},"content":"            } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":149,"author":{"gitId":"nvbinh15"},"content":"                return new DisplayCalendarCommand(userInput);","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"nvbinh15"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":151,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_FOOD:","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"nvbinh15"},"content":"            String[] foodArgs \u003d commandArgs.split(\" \");","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"nvbinh15"},"content":"            switch (foodArgs[0]) {","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"nvbinh15"},"content":"            case COMMAND_SUFFIX_ADD:","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"nvbinh15"},"content":"                String nameCalorieInput \u003d userInput.split(\"food add\")[1];","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"nvbinh15"},"content":"                return new AddFoodCommand(nameCalorieInput);","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"nvbinh15"},"content":"            case COMMAND_SUFFIX_CLEAR:","lastModifiedDate":"2021-10-09"},{"lineNumber":158,"author":{"gitId":"nvbinh15"},"content":"                return new ClearFoodCommand();","lastModifiedDate":"2021-10-06"},{"lineNumber":159,"author":{"gitId":"nvbinh15"},"content":"            case COMMAND_SUFFIX_LIST:","lastModifiedDate":"2021-10-09"},{"lineNumber":160,"author":{"gitId":"nvbinh15"},"content":"                return new ListFoodCommand();","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"nvbinh15"},"content":"            default:","lastModifiedDate":"2021-10-09"},{"lineNumber":162,"author":{"gitId":"nvbinh15"},"content":"                throw new IllegalArgumentException(Messages.LIST_PROPER_FEATURE +  COMMAND_FOOD);","lastModifiedDate":"2021-10-09"},{"lineNumber":163,"author":{"gitId":"nvbinh15"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":164,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_ADD_NOTE:","lastModifiedDate":"2021-10-09"},{"lineNumber":165,"author":{"gitId":"nvbinh15"},"content":"            return new AddNoteCommand(userInput);","lastModifiedDate":"2021-10-09"},{"lineNumber":166,"author":{"gitId":"nvbinh15"},"content":"        default:","lastModifiedDate":"2021-10-04"},{"lineNumber":167,"author":{"gitId":"nvbinh15"},"content":"            throw new ClickException();","lastModifiedDate":"2021-10-04"},{"lineNumber":168,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":169,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":170,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":171,"author":{"gitId":"nvbinh15"},"content":"    //@author swatim","lastModifiedDate":"2021-10-06"},{"lineNumber":172,"author":{"gitId":"nvbinh15"},"content":"    public static String[] parseCalendarCommand(String input) {","lastModifiedDate":"2021-10-06"},{"lineNumber":173,"author":{"gitId":"nvbinh15"},"content":"        // takes substring excluding \"calendar\" from command","lastModifiedDate":"2021-10-06"},{"lineNumber":174,"author":{"gitId":"nvbinh15"},"content":"        String extractMonthYear \u003d input.substring(9);","lastModifiedDate":"2021-10-06"},{"lineNumber":175,"author":{"gitId":"nvbinh15"},"content":"        String[] arguments \u003d extractMonthYear.split(\"-\");","lastModifiedDate":"2021-10-06"},{"lineNumber":176,"author":{"gitId":"nvbinh15"},"content":"        return arguments;","lastModifiedDate":"2021-10-06"},{"lineNumber":177,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":178,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":179,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":180,"author":{"gitId":"nvbinh15"},"content":"     * Parses a string into a food item.","lastModifiedDate":"2021-10-06"},{"lineNumber":181,"author":{"gitId":"nvbinh15"},"content":"     * current implementation: [NAME] [CALORIES].","lastModifiedDate":"2021-10-09"},{"lineNumber":182,"author":{"gitId":"nvbinh15"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-06"},{"lineNumber":183,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":184,"author":{"gitId":"nvbinh15"},"content":"    public static FoodRecord parseFoodRecord(String input) throws IllegalFoodParameterException {","lastModifiedDate":"2021-10-06"},{"lineNumber":185,"author":{"gitId":"nvbinh15"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":186,"author":{"gitId":"nvbinh15"},"content":"            String[] splitInput \u003d input.trim().split(\" \");","lastModifiedDate":"2021-10-06"},{"lineNumber":187,"author":{"gitId":"nvbinh15"},"content":"            if (splitInput.length !\u003d 2) {","lastModifiedDate":"2021-10-06"},{"lineNumber":188,"author":{"gitId":"nvbinh15"},"content":"                throw new IllegalFoodParameterException();","lastModifiedDate":"2021-10-06"},{"lineNumber":189,"author":{"gitId":"nvbinh15"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":190,"author":{"gitId":"nvbinh15"},"content":"            int calories \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2021-10-06"},{"lineNumber":191,"author":{"gitId":"nvbinh15"},"content":"            String name  \u003d splitInput[0];","lastModifiedDate":"2021-10-06"},{"lineNumber":192,"author":{"gitId":"nvbinh15"},"content":"            FoodRecord recordToAdd \u003d new FoodRecord(name, calories);","lastModifiedDate":"2021-10-06"},{"lineNumber":193,"author":{"gitId":"nvbinh15"},"content":"            return recordToAdd;","lastModifiedDate":"2021-10-06"},{"lineNumber":194,"author":{"gitId":"nvbinh15"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":195,"author":{"gitId":"nvbinh15"},"content":"            Ui.printAddFoodSyntax();","lastModifiedDate":"2021-10-06"},{"lineNumber":196,"author":{"gitId":"nvbinh15"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":197,"author":{"gitId":"nvbinh15"},"content":"            Ui.printNonNullInput();","lastModifiedDate":"2021-10-06"},{"lineNumber":198,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":199,"author":{"gitId":"nvbinh15"},"content":"        return null;","lastModifiedDate":"2021-10-06"},{"lineNumber":200,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":201,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"},{"lineNumber":202,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"SvethaMahadevan":1,"nvbinh15":176,"ngnigel99":13,"swatimahadevan":12}},{"path":"src/main/java/seedu/duke/parser/journal/ParserJournal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.parser.journal;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"public class ParserJournal {","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"    //@author SvethaMahadevan","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"    public static String parseAddNoteCommand(String input) {","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"        String noteNameDetails \u003d input.trim().split(\"add\")[1];","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"        String noteName \u003d noteNameDetails.split(\"n/\")[1].trim();","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"        return noteName;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"SvethaMahadevan":10}},{"path":"src/main/java/seedu/duke/parser/schedule/ParserSchedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.parser.schedule;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"public class ParserSchedule {","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"    public static YearMonth parseCalendarCommandForJunit(String input) {","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"        // takes substring excluding \"calendar\" from command","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"        String extractMonthYear \u003d input.substring(9);","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"        var arguments \u003d extractMonthYear.split(\"-\");","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"        int month \u003d Integer.parseInt(arguments[0]);","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"        int year \u003d Integer.parseInt(arguments[1]);","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"        YearMonth yearMonth \u003d YearMonth.of(year, month);","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"        return yearMonth;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"swatimahadevan":15}},{"path":"src/main/java/seedu/duke/schedule/Schedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.schedule;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import java.util.concurrent.atomic.AtomicInteger;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.NUMBER_OF_DAYS_IN_WEEK;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.LEAVE_EMPTY_IN_DISPLAY;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.DAYS_IN_MONTH;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.FIRST_INDEX;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.DECOR_BEFORE;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.DECOR_AFTER;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"//@author swatim","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"public class Schedule {","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"    public static void displayCalendar(YearMonth inputYearMonth) {","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cString\u003e calendar \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"        String[] daysInMonth \u003d DAYS_IN_MONTH;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"        // Add all days to calendar ArrayList first","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"        calendar.addAll(Arrays.asList(daysInMonth).subList(0, inputYearMonth.lengthOfMonth()));","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"        // Add in spaces at the beginning for display upto day 1","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"        DayOfWeek dayOneOfMonth \u003d inputYearMonth.atDay(1).getDayOfWeek();","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"        if (dayOneOfMonth !\u003d DayOfWeek.SUNDAY) {","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"            for (int i \u003d FIRST_INDEX; i \u003c dayOneOfMonth.getValue(); i++) {","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"                calendar.add(0, LEAVE_EMPTY_IN_DISPLAY);","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"        // Add spaces after for display after last day to end of week","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"        while (calendar.size() % NUMBER_OF_DAYS_IN_WEEK !\u003d 0) {","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"            calendar.add(LEAVE_EMPTY_IN_DISPLAY);","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"        // Print out the entire display in week rows","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"        int totalWeeks \u003d (int) Math.ceil((double)calendar.size() / NUMBER_OF_DAYS_IN_WEEK);","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"        int currentWeek \u003d 0;","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"        AtomicInteger j \u003d new AtomicInteger();","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"        while (currentWeek \u003c totalWeeks) {","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"            // Print day number from calendar (maybe a number string like \"01\" or \" \") and space","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"            IntStream.range(0, NUMBER_OF_DAYS_IN_WEEK).mapToObj(dayOfMonth -\u003e DECOR_BEFORE","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"                    + calendar.get(j.getAndIncrement()) + DECOR_AFTER).forEachOrdered(System.out::print);","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"            System.out.println();","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"            currentWeek++;","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"swatimahadevan":49}},{"path":"src/main/java/seedu/duke/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.food.WhatIAteList;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"import java.io.File;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.STORAGE_FILEPATH_SCHEDULE;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"public class Storage {","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"     * Synchronised date with food record  list.","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"     * */","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    private Date todaysDate;    //TODO sync date with file","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    private String tasksFilePath;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    public WhatIAteList whatIAteTodayList \u003d  StorageFood.load();","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"    public TaskList tasksList \u003d readTaskList();","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"    public Storage() throws IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"    //@author swatim","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"    //Loads data in the form of ArrayList\u003cString\u003e data from the save file","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"    public static ArrayList\u003cString\u003e loadDataFromSaveFile(String filePath) throws IOException {","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"        FileReader fileReader \u003d new FileReader(filePath);","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"        BufferedReader bufferedReader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"        String line;","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"        while ((line \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"            data.add(line);","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"        return data;","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"    //Write data from ArrayList\u003cString\u003e data onto save file","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"    public static void writeDataOntoSaveFile(String filePath, ArrayList\u003cString\u003e data) throws IOException {","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"        BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"        for (String dataObject : data) {","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"            String dataLine \u003d dataObject.toString();","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"swatimahadevan"},"content":"            bufferedWriter.write(dataLine + \u0027\\n\u0027);","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"swatimahadevan"},"content":"        bufferedWriter.close();","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"swatimahadevan"},"content":"    //SCHEDULE BEGIN","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"swatimahadevan"},"content":"    //Write tasks data onto save file using writeDataOntoSaveFile() method","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"swatimahadevan"},"content":"    //ArrayList\u003cTask\u003e tasks---\u003eArrayList\u003cString\u003e data---\u003esave file","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"swatimahadevan"},"content":"    //Can do the same for other save files by replacing the filepath constant","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"swatimahadevan"},"content":"    public void writeTaskList(TaskList taskList) throws IOException {","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTaskList();","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cString\u003e data \u003d StorageTasks.tasksToData(tasks);","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"        writeDataOntoSaveFile(StorageTasks.filePath, data); //author ngnigel99","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"swatimahadevan"},"content":"    //save file---\u003eArrayList\u003cString\u003e data---\u003eArrayList\u003cTask\u003e tasks","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"swatimahadevan"},"content":"    //Can do the same for other save files by replacing the filepath constant","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"swatimahadevan"},"content":"    public TaskList readTaskList() throws NullPointerException, IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"        ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"            StorageFood.checkAndAddDirectory(StorageTasks.folderName);  //author ngnigel99","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"            //ArrayList\u003cString\u003e data \u003d loadDataFromSaveFile(STORAGE_FILEPATH_SCHEDULE);","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"            ArrayList\u003cString\u003e data \u003d loadDataFromSaveFile(StorageTasks.filePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"            tasks \u003d StorageTasks.dataToTask(data);","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"swatimahadevan"},"content":"            TaskList tasksList \u003d new TaskList();","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"swatimahadevan"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"swatimahadevan"},"content":"                tasksList.addTask(tasks.get(i));","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"swatimahadevan"},"content":"            return tasksList;","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"ngnigel99"},"content":"        } catch (FileNotFoundException e) {     //author ngnigel99 - create new file","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"ngnigel99"},"content":"            File f \u003d new File(StorageTasks.filePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"Hey, I didn\u0027t find \" + StorageTasks.fileName + \" in \" + StorageTasks.folderName + \"!\");","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"creating new file...\");","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"ngnigel99"},"content":"        return tasksList;","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"swatimahadevan"},"content":"    //SCHEDULE END","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":4,"ngnigel99":34,"swatimahadevan":52}},{"path":"src/main/java/seedu/duke/storage/StorageFood.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.food.FoodRecord;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.food.WhatIAteList;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import java.io.File;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":" * This class deals with passing food records to and fro a save file.","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":" * Note: i used my IP implementation, TBD on final format.","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":" * @author ngnigel99","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"public class StorageFood {","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    private static final String folderName \u003d \"fooddata/\";","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    private static final String fileName \u003d \"food.txt\";","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    private static String filePath \u003d  folderName +  fileName;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    public StorageFood(String filePathToInput) {","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"        filePath \u003d filePathToInput;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"     * Creates directory if directory folderName is not found.","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"     * access modifier left empty for working in Storage.","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"     * @param folderName folder name to check","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"     * @throws IOException case where directory not found","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"    static void checkAndAddDirectory(String folderName) throws IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"        String home \u003d new File(\"\").getAbsolutePath() + \u0027/\u0027;","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"        File dirCheck \u003d new File(home + folderName);","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"        if (dirCheck.isDirectory()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"            return;","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"Hey, I didn\u0027t find directory \" + folderName);","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"adding \" + folderName + \" into repository...\");","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"        Files.createDirectories(Paths.get(home + folderName));","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"     * Saves list to save file.","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"     * @param whatIAteList food record list to save","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"     * @throws IOException if file/ directory not found","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"     *                     - handled by creating new directory/ file if necessary","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"    public static void saveList(WhatIAteList whatIAteList) throws IOException {","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"        checkAndAddDirectory(folderName);","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"        File newList \u003d new File(folderName + fileName);","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"        FileWriter fw \u003d new FileWriter(folderName + fileName);","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"        for (FoodRecord f : whatIAteList.getList()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"            fw.write(f.toSaveListFormat());","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"        fw.close();","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"     * Returns a food list.","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"     * format of task per line of save file:","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"     * [NAME] |  [CALORIES]","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"     * @return listToReturn food list generated from save file","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"     *          if save file not found, create new list and return","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"    public static WhatIAteList load() {","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"        WhatIAteList listToReturn \u003d new WhatIAteList();","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"            checkAndAddDirectory(folderName);","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"ngnigel99"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"ngnigel99"},"content":"            Scanner scanList \u003d new Scanner(f);","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"ngnigel99"},"content":"            while (scanList.hasNext()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"ngnigel99"},"content":"                String readLine \u003d scanList.nextLine();","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"ngnigel99"},"content":"                if (readLine.equals(\"\")) {","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"ngnigel99"},"content":"                    break;","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"ngnigel99"},"content":"                }","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"ngnigel99"},"content":"                listToReturn.addToList(Parser.parseFoodSavedListToRecord(readLine));","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"ngnigel99"},"content":"            return listToReturn;","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"ngnigel99"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"ngnigel99"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"Hey, I didn\u0027t find list.txt in \" + folderName + \"!\");","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"creating new file...\");","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"ngnigel99"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"Null Pointer Exception, try again!\");","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"ngnigel99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"Hey, Input/ Output exception, returning empty list...\");","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"ngnigel99"},"content":"        return listToReturn;","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"ngnigel99":98}},{"path":"src/main/java/seedu/duke/storage/StorageTasks.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.Todo;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.TODO;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.INDEX_TODO_DESCRIPTION;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.INDEX_TODO_DATE;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.FIRST_INDEX;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"//@author swatim","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"public class StorageTasks {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    //author ngnigel99 - create in folder","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    public static final String folderName \u003d \"tasksdata/\";","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    public static final String fileName   \u003d \"scheduleTasks.txt\";","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    public static final String filePath \u003d folderName + fileName;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"    static ArrayList\u003cTask\u003e dataToTask(ArrayList\u003cString\u003e data) {","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"        int dataSize \u003d data.size();","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"        while (i \u003c dataSize) {","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"            String dataLine \u003d data.get(i);","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"            String[] todoArguments \u003d dataLine.split(\"\\\\|\");","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"            if (TODO.equals(todoArguments[FIRST_INDEX])) {","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"                tasks.add(addToDo(todoArguments));","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"            i++;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"        return tasks;","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"    private static Todo addToDo(String[] todoArguments) {","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"        String description \u003d todoArguments[INDEX_TODO_DESCRIPTION].trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"        String date \u003d todoArguments[INDEX_TODO_DATE].trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"        return new Todo(description, date);","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"    static ArrayList\u003cString\u003e tasksToData(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"            data.add(task.toSaveFileFormat());","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"        return data;","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"ngnigel99":4,"swatimahadevan":44}},{"path":"src/main/java/seedu/duke/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.task;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"public abstract class Task {","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"    protected String description;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"    protected String date;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"    public Task(String description, String date) {","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"    public abstract String toSaveFileFormat();","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"        return description;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"swatimahadevan":19}},{"path":"src/main/java/seedu/duke/task/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.task;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"public class TaskList {","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"    public TaskList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"        return tasks;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"        tasks.add(task);","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"swatimahadevan":25}},{"path":"src/main/java/seedu/duke/task/Todo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.task;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"    public Todo(String description, String date) {","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"        super(description, date);","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"    public String toSaveFileFormat() {","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"        return \"todo\" + \"|\" + description + \"|\" + date;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"        return super.toString() + \" (on: \" + date + \")\";","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"swatimahadevan":19}},{"path":"src/main/java/seedu/duke/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.food.FoodRecord;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.schedule.Schedule;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.Messages.HORIZONTAL_LINE;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.Messages.LOGO;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.Messages.MESSAGE_GOODBYE;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.Messages.MESSAGE_GREETING;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.CALENDAR_HEADER_LINE;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.ADDED_TASK;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.LIST_TASKS_HEADER;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.INVALID_YEARMONTH;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"import static seedu.duke.constants.Messages.INVALID_CALENDAR_INPUT;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"public class Ui {","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"     * Reads the text entered by the user.","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"     * @param in The Scanner to read user input.","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"     * @return line Full line entered by the user.","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    public String getUserInput(Scanner in) {","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"        String line \u003d in.nextLine();","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"        return line;","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"     * Prints the divider HORIZONTAL_LINE.","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"    public static void printLine() {","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"     * Prints the greeting message to standard output.","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"    public static void printGreeting() {","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"        printMessage(LOGO + MESSAGE_GREETING);","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"        printCurrentMonthCalendar();","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"     * Prints the goodbye message to standard output.","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"    public static void printGoodBye() {","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"        printMessage(MESSAGE_GOODBYE);","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"     * Prints message to the standard output.","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"    public static void printMessage(String message) {","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(message);","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"    //start of FOOD","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"     * Prints the name of the record, as well as the calorie count.","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"swatimahadevan"},"content":"     * @param record record to be added","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"    //TODO  remove messages, may be neater","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"    public static void printAddRecord(FoodRecord record)  {","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"Nice.  I\u0027ve added \"","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"ngnigel99"},"content":"                + record.getFoodName()","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"ngnigel99"},"content":"                + \" to the list, with \"","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"ngnigel99"},"content":"                + record.getCalorieCount()","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"ngnigel99"},"content":"                + \" calories!\");","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"ngnigel99"},"content":"     * Prints success on clear message to user.","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"ngnigel99"},"content":"    public static void printDoneClearList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(Messages.PRINT_DONE_CLEAR_LIST);","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"ngnigel99"},"content":"    public static void printAddFoodSyntax() {","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(Messages.PRINT_ADD_FOOD_SYNTAX);","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"ngnigel99"},"content":"    public static void printNonNullInput() {","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(Messages.NON_NULL_INPUT);","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"ngnigel99"},"content":"    //end of FOOD","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"SvethaMahadevan"},"content":"    //UI for journal","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"swatimahadevan"},"content":"    public static void printIntroMessage() {","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"Hello, I am Journal Bud.\");","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"How may I help you?\");","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"swatimahadevan"},"content":"    public static void printAddedNoteMessage(String noteName) {","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"Great you have added the note: \" + noteName);","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"SvethaMahadevan"},"content":"    //end of UI for journal","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"swatimahadevan"},"content":"    //@author swatim","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"swatimahadevan"},"content":"    //Schedule","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"swatimahadevan"},"content":"     * Prints the header of the calendar with the month and year.","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"swatimahadevan"},"content":"     * @param inputYearMonth The YearMonth object parsed from user input string.","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"swatimahadevan"},"content":"    public static void printCalenderTitle(YearMonth inputYearMonth) {","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(\"                     \" + inputYearMonth.getMonth() + \" \"","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"swatimahadevan"},"content":"                + inputYearMonth.getYear());","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(CALENDAR_HEADER_LINE);","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"swatimahadevan"},"content":"     * Prints error message for invalid calendar display input.","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"swatimahadevan"},"content":"    public static void printInvalidYearMonthMessage() {","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(INVALID_CALENDAR_INPUT);","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"swatimahadevan"},"content":"     * Prints error message for invalid year (invalid if \u003e2025 or \u003c2021)","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"swatimahadevan"},"content":"     * or month (invalid if \u003e12 or \u003c1) values","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"swatimahadevan"},"content":"     * for calendar display command.","lastModifiedDate":"2021-10-06"},{"lineNumber":137,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"swatimahadevan"},"content":"    public static void printInvalidCalendarInput() {","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(INVALID_YEARMONTH);","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":141,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":143,"author":{"gitId":"swatimahadevan"},"content":"     * Prints calendar for current month (intro display).","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":145,"author":{"gitId":"swatimahadevan"},"content":"    public static void printCurrentMonthCalendar() {","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"swatimahadevan"},"content":"        YearMonth currentYearMonth \u003d YearMonth.now();","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"swatimahadevan"},"content":"        printCalenderTitle(currentYearMonth);","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"swatimahadevan"},"content":"        Schedule.displayCalendar(currentYearMonth);","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"swatimahadevan"},"content":"     * Prints confirmatory message after task is added successfully.","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"swatimahadevan"},"content":"    public static void printTaskAddedMessage() {","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(ADDED_TASK);","lastModifiedDate":"2021-10-09"},{"lineNumber":156,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":157,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":158,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":159,"author":{"gitId":"swatimahadevan"},"content":"     * Prints out tasks list.","lastModifiedDate":"2021-10-09"},{"lineNumber":160,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":161,"author":{"gitId":"swatimahadevan"},"content":"     * @param tasks List of tasks to be displayed.","lastModifiedDate":"2021-10-09"},{"lineNumber":162,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":163,"author":{"gitId":"swatimahadevan"},"content":"    public static void printTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-10-09"},{"lineNumber":164,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(LIST_TASKS_HEADER);","lastModifiedDate":"2021-10-09"},{"lineNumber":165,"author":{"gitId":"swatimahadevan"},"content":"        if (!tasks.isEmpty()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":166,"author":{"gitId":"swatimahadevan"},"content":"            int i \u003d 1;","lastModifiedDate":"2021-10-09"},{"lineNumber":167,"author":{"gitId":"swatimahadevan"},"content":"            for (Task item : tasks) {","lastModifiedDate":"2021-10-09"},{"lineNumber":168,"author":{"gitId":"swatimahadevan"},"content":"                System.out.println((i++) + \". \" + item);","lastModifiedDate":"2021-10-09"},{"lineNumber":169,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":170,"author":{"gitId":"swatimahadevan"},"content":"        } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":171,"author":{"gitId":"swatimahadevan"},"content":"            System.out.println(\"NO TASKS!\");","lastModifiedDate":"2021-10-09"},{"lineNumber":172,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":173,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":174,"author":{"gitId":"swatimahadevan"},"content":"    //End Schedule","lastModifiedDate":"2021-10-06"},{"lineNumber":175,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":176,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"SvethaMahadevan":8,"nvbinh15":53,"ngnigel99":38,"swatimahadevan":77}},{"path":"src/test/java/seedu/duke/food/FoodTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.food;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.exceptions.IllegalFoodParameterException;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"public class FoodTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"     * Checks food parsed correctly.","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    void testFoodAdd() {","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"        assertEquals(\"Samurai Burger : 433\", new FoodRecord(\"Samurai Burger\", 433).toString());","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"     * Checks for NumberFormatException on adding a food item.","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"    void addFoodItem_stringNotInt_illegalFoodParameterThrown() throws IllegalFoodParameterException {","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"        boolean nfeThrown \u003d false;","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"            FoodRecord foodRecord \u003d parser.parseFoodRecord(\"name_test\" + \" \" + \"sample_string\");","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"            assertEquals(Messages.PRINT_ADD_FOOD_SYNTAX, e.getMessage());","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"     * Checks for IllegalFoodParameterException thrown when word count !\u003d 2.","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"    void addFoodItem_wrongSyntax_illegalFoodParameterExceptionThrown() throws IllegalFoodParameterException {","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"            FoodRecord foodRecord \u003d parser.parseFoodRecord(\"Cheezburger\");  //calorie count not included","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"            assertEquals(Messages.PRINT_ADD_FOOD_SYNTAX, e.getMessage());","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"     * Checks for illegal food parameter exception thrown on null input.","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"    void addFoodItem_noInputGiven_illegalFoodParameterThrown() throws IllegalFoodParameterException {","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"            FoodRecord foodRecord \u003d parser.parseFoodRecord(\"\");","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"            assertEquals(Messages.PRINT_ADD_FOOD_SYNTAX, e.getMessage());","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"ngnigel99":63}},{"path":"src/test/java/seedu/duke/module/ModuleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.module;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"class ModuleTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"    void getCode_newModuleSpecifyingCode_specifiedCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"        String moduleCode \u003d \"CS2113T\";","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"        Module module \u003d new Module(moduleCode);","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(moduleCode, module.getCode());","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    void getName_newModuleSpecifyingCodeAndName_specifiedName() {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"        String moduleCode \u003d \"CS2113T\";","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"        String moduleName \u003d \"Software Engineering \u0026 Object-Oriented Programming\";","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"        Module module \u003d new Module(moduleCode, moduleName);","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(moduleName, module.getName());","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"    void getExpectedGrade_newModuleSpecifyingCodeNameAndGrade_specifiedGrade() {","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"        String moduleCode \u003d \"CS2113T\";","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"        String moduleName \u003d \"Software Engineering \u0026 Object-Oriented Programming\";","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"        String expectedGrade \u003d \"A-\";","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"        Module module \u003d new Module(moduleCode, moduleName, expectedGrade);","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(expectedGrade, module.getExpectedGrade());","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"    void setCode_newModuleChangeToNewCode_newCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"        String moduleCode \u003d \"CS2113T\";","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"        Module module \u003d new Module(moduleCode);","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"        String newModuleCode \u003d \"CS2113\";","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"        module.setCode(newModuleCode);","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(newModuleCode, module.getCode());","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"    void setName_newModuleChangeToNewName_newName() {","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"        String moduleCode \u003d \"CS2113T\";","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"        String moduleName \u003d \"Software Engineering \u0026 Object-Oriented Programming\";","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"        Module module \u003d new Module(moduleCode, moduleName);","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"        String newModuleName \u003d \"Software Engineering and Object-Oriented Programming\";","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"        module.setName(newModuleName);","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(newModuleName, module.getName());","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"    void setExpectedGrade_newModuleChangeToNewGrade_newGrade() {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"        String moduleCode \u003d \"CS2113T\";","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"        String moduleName \u003d \"Software Engineering \u0026 Object-Oriented Programming\";","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"        String expectedGrade \u003d \"A-\";","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"        Module module \u003d new Module(moduleCode, moduleName, expectedGrade);","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"        String newExpectedGrade \u003d \"A\";","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"        module.setExpectedGrade(newExpectedGrade);","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(newExpectedGrade, module.getExpectedGrade());","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"    void testToString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"nvbinh15"},"content":"        String moduleCode \u003d \"CS2113T\";","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"nvbinh15"},"content":"        String moduleName \u003d \"Software Engineering \u0026 Object-Oriented Programming\";","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"nvbinh15"},"content":"        String expectedGrade \u003d \"A\";","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"nvbinh15"},"content":"        String moduleStringRepresentation \u003d moduleCode + \" | \" + moduleName + \" | Expected grade: \" + expectedGrade;","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"nvbinh15"},"content":"        Module module \u003d new Module(moduleCode, moduleName, expectedGrade);","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(moduleStringRepresentation, module.toString());","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"nvbinh15":72}},{"path":"src/test/java/seedu/duke/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.IllegalDateTimeException;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"class ParserTest {","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"    static Parser parser \u003d new Parser();","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"    void formatDateTime_legalDateTime_dateTimeOfOtherFormat() throws IllegalDateTimeException {","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"        String inputDateTime \u003d \"01-10-2021 2359\";","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"        String expectedDateTime \u003d \"Oct 01 2021 23:59\";","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(expectedDateTime, parser.formatDateTime(inputDateTime));","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"    void formatDateTime_illegalDateTime_illegalDateTimeException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"        String illegalDateTime \u003d \"01/01/2021 2359\";","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"        assertThrows(IllegalDateTimeException.class, () -\u003e parser.formatDateTime(illegalDateTime));","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":28,"swatimahadevan":2}},{"path":"src/test/java/seedu/duke/parser/journal/ParserJournalTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.parser.journal;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"//@author SvethaMahadevan","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"class ParserJournalTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"    static ParserJournal parser \u003d new ParserJournal();","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"    //@author SvethaMahadevan","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"    void sampleTest() {","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"        assertEquals(\"testnotename\", parser.parseAddNoteCommand(\"add n/ testnotename\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"SvethaMahadevan":17}},{"path":"src/test/java/seedu/duke/parser/schedule/ParserScheduleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.parser.schedule;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"//@author swatim","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"class ParserScheduleTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"    static ParserSchedule parser \u003d new ParserSchedule();","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"    void formatYearMonth() {","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"        assertEquals(YearMonth.of(2021, 10), parser.parseCalendarCommandForJunit(\"calendar 10-2021\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"swatimahadevan":18}}]
