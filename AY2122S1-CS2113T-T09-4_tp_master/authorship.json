[{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Svetha Mahadevan | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Nguyen Van Binh | [Github](https://github.com/nvbinh15) | [Portfolio](docs/team/nguyenvanbinh.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"shoibloya"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Shoib Loya | [Github](https://github.com/) | [Portfolio](docs/team/shoibloya.md)","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Nigel Ng | [Github](https://github.com/ngnigel99) | [Portfolio](docs/team/ngnigel99.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Mahadevan Swati | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"SvethaMahadevan":1,"nvbinh15":1,"ngnigel99":1,"-":4,"shoibloya":1,"swatimahadevan":1}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.schedule.Schedule;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ExceptionHandler;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    private static ExceptionHandler exceptionHandler \u003d new ExceptionHandler();","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"    private static Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    private static Parser parser \u003d new Parser();","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"     * Reads and executes command from user inputs.","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"    private static void run() {","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"        ui.printGreeting();","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"        while (true) {","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"            String userInput \u003d ui.getUserInput(in);","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"            try {","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"                Command c \u003d parser.parseCommand(userInput);","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"                c.execute(ui, storage);","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"                ui.printLine();","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"            } catch (ClickException e) {","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"                exceptionHandler.handleDukeExceptions(e);","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"                exceptionHandler.handleOtherExceptions(e);","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"            }","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"     * Main entry method to run Duke.","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"     * @param args Unused params.","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"        new Duke();","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"        Duke.run();","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nvbinh15":37,"-":11,"swatimahadevan":2}},{"path":"src/main/java/seedu/duke/calories/FoodRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.calories;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" *  A food record simply records the name and calorie count of a food item.","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" *  [FOOD_NAME] [CALORIES]","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" *","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":" * @author  ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"public class FoodRecord {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    private String foodName;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    private Integer calorieCount;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    public FoodRecord(String foodName, Integer calorieCount) {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"        this.foodName \u003d foodName;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"        this.calorieCount \u003d calorieCount;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    public String getFoodName() {","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"        return foodName;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    public Integer getCalorieCount() {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"        return calorieCount;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"        return foodName + \" \"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"                + Messages.RECORD_ATTRIBUTE_DIVIDER  + \" \"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"                + calorieCount;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"    public void printRecordOnAdd()  {","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"        Ui.printAddRecord(this);","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"ngnigel99":39}},{"path":"src/main/java/seedu/duke/calories/ListOfRecords.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.calories;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":" * An abstract class for implementing food record  lists.","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"public abstract class ListOfRecords\u003cT\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    protected ArrayList\u003cT\u003e list \u003d  new  ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"     * Adds items to a list.","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"     * @param recordToAdd record to add into list","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    protected void addToList(T recordToAdd) {","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"        list.add(recordToAdd);","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"     * Prints a list.","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    protected void printList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"        for (T listRecord : list) {","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(listRecord);","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"     * Clears a list,  and wipes  storage.","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"     * @author  ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"    protected void clearList()  {","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"        list.clear();","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"ngnigel99":41}},{"path":"src/main/java/seedu/duke/calories/WhatIAteList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.calories;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" * Represents a list of what the user has eaten.","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" *  This would include the date of the record and","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":" *      the food items consumed.","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":" *","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":" * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"public class WhatIAteList extends ListOfRecords\u003cFoodRecord\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    private Date dayOfRecordList;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    public WhatIAteList(Date dayOfRecordList) {","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"        this.dayOfRecordList \u003d dayOfRecordList;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"     * Adds a food Record to a list, then notifies the user of what  item","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"     *  they  have entered.","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"     * @author  ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"     * @param recordToAdd record to add to list","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    public void addToList(FoodRecord recordToAdd) {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"        super.addToList(recordToAdd);","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"        Ui.printAddRecord(recordToAdd);","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"     * Prints  index with suffix for visuals.","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"     * @param index index of list","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"    public void printIndexWithSuffix(int index) {","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"        String[] suffixList \u003d {\"st\", \"nd\", \"rd\", \"th\"};","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"        String suffixToPrint;","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"        if ((index - 2) / 10 \u003d\u003d 0) {","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"            suffixToPrint \u003d  suffixList[1];","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"        } else if ((index - 3) / 10 \u003d\u003d 0) {","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"            suffixToPrint \u003d suffixList[2];","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"        } else if ((index - 4) /  10 \u003d\u003d 0) {","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"            suffixToPrint \u003d suffixList[3];","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"        } else {","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"            suffixToPrint \u003d suffixList[0];","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(index + suffixToPrint);","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"     * Prints food records collated in list.","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"     * In context, for today.","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"    public void printList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"        int index \u003d 1;  //TODO integrate this with storage so it\u0027s not a magic number","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"        for (FoodRecord listRecord : list) {","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"            printIndexWithSuffix(index);","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"You consumed  \" + listRecord.getFoodName()","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"                                + \" , which has a calorie count of : \"","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"                                + listRecord.getCalorieCount() + \"!\");","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"            index++;","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"Wow, that\u0027s a lot of food! Finished reading today\u0027s list\");","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"    public void clearList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"ngnigel99"},"content":"        super.clearList();","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"ngnigel99"},"content":"        Ui.printDoneClearList();","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"ngnigel99":80}},{"path":"src/main/java/seedu/duke/commands/AddFoodCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" * Command to add a food item to the existing  list.","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" * prefix would be food add [FOOD_NAME] [CALORIE_COUNT(kcal)]","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" *","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":" * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"public class AddFoodCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    public void execute(Ui ui, Storage storage) {","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"        //TODO read in user input, check correct data entry","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"        //TODO parse in foodRecord here","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"        // storage.whatIAteTodayList.add(someFoodRecord);","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"ngnigel99":21}},{"path":"src/main/java/seedu/duke/commands/AddNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SvethaMahadevan"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"SvethaMahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"SvethaMahadevan"},"content":"public class AddNoteCommand extends Command {","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"SvethaMahadevan"},"content":"    private ArrayList\u003cString\u003e noteList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"SvethaMahadevan"},"content":"    public String userInput;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"SvethaMahadevan"},"content":"    public AddNoteCommand(String userInput) {","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"SvethaMahadevan"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"SvethaMahadevan"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"SvethaMahadevan"},"content":"    public void execute(Ui ui, Storage storage) {","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"SvethaMahadevan"},"content":"        String noteName \u003d Parser.parseAddNoteCommand(userInput);","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"SvethaMahadevan"},"content":"        noteList.add(noteName);","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"SvethaMahadevan"},"content":"        ui.printAddedNoteMessage(noteName);","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"SvethaMahadevan"},"content":"}","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"SvethaMahadevan":25}},{"path":"src/main/java/seedu/duke/commands/ClearFoodCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" * Clears the current list  of food, and clear entries in storage.","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" * @author  ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"public class ClearFoodCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    public void execute(Ui ui, Storage storage) {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"        //TODO integrate into storage","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"        //storage.whatIAteTodayList.clearList();","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"ngnigel99":16}},{"path":"src/main/java/seedu/duke/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":" * An abstract representation of Command.","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"     * Executes command.","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"     * @param ui The component of Duke that deals with the interaction with the user.","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"     * @param storage The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"     * @throws ClickException If there is an exception of type ClickException occurs.","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"     * @throws Exception If there is an exception of type other than DukeException occurs.","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    public abstract void execute(Ui ui, Storage storage) throws ClickException, Exception;","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":22}},{"path":"src/main/java/seedu/duke/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":" * A representation of the command for exiting the program.","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"     * Executes the exit command.","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"     * @param ui The component of Duke that deals with the interaction with the user.","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"     * @param storage The component of Duke that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"    public void execute(Ui ui, Storage storage) {","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"        ui.printGoodBye();","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"        System.exit(0);","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":24}},{"path":"src/main/java/seedu/duke/commands/ListFoodCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" * List all current records (assumed today for simplicity).","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" *  //TODO integrate storage component into list","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"public class ListFoodCommand extends Command  {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    public void execute(Ui ui, Storage storage) {","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"        // storage.whatIAteTodayList.printList();","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"ngnigel99":17}},{"path":"src/main/java/seedu/duke/constants/CommandConstants.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.constants;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":" * A class that contains constants related to Commands.","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"public class CommandConstants {","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"    public static final String COMMAND_EXIT \u003d \"exit\";","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":8}},{"path":"src/main/java/seedu/duke/constants/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.constants;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"public class Messages {","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"    public static final String LOGO \u003d \"\\t\" + \" ____        _\\n\"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"            + \"\\t\" + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"            + \"\\t\" + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"            + \"\\t\" + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"            + \"\\t\" + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\\n\";","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"    public static final String OPEN_SQUARE_BRACKET \u003d \"[\";","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"    public static final String CLOSE_SQUARE_BRACKET \u003d \"]\";","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"    public static final String VERTICAL_BAR \u003d \" | \";","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    public static final String VERTICAL_BAR_REGEX \u003d \" \\\\| \";","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"    public static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    public static final String LINE_PREFIX \u003d \"\\t\";","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"    public static final String LINE_SEPARATOR \u003d System.lineSeparator();","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    public static final String NEW_LINE \u003d LINE_SEPARATOR + LINE_PREFIX;","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"    public static final String HORIZONTAL_LINE \u003d LINE_PREFIX + \"__________________________________________________\";","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_GREETING \u003d LINE_PREFIX + \"Hello! I\u0027m Duke\" + NEW_LINE + \"What can I do for you?\";","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_GOODBYE \u003d LINE_PREFIX + \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    // Food partition","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    public static final String ADD_RECORD_GREET \u003d \"Nice.  I\u0027ve added \";","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    public static final String ADD_RECORD_TTL \u003d \"to the list,\";","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"    public static final String RECORD_ATTRIBUTE_DIVIDER \u003d \"*\";","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    public static final String ADD_RECORD_CONNECTOR \u003d \" with \";","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    public static final String ADD_RECORD_FINAL \u003d \" calories!\";","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    public static final String PRINT_DONE_CLEAR_LIST \u003d \"Cleared food record list for today!\";","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"    //end of Food","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":25,"ngnigel99":8}},{"path":"src/main/java/seedu/duke/exceptions/ClickException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":" * A base class that represents checked specific exceptions thrown by Click.","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"public class ClickException extends Exception {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":9}},{"path":"src/main/java/seedu/duke/exceptions/ExceptionHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":" * A class that handles exceptions thrown by Duke.","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"public class ExceptionHandler {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"     * Handles duke exceptions.","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"     * @param e Exception of type DukeException thrown by Duke.","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    public static void handleDukeExceptions(ClickException e) {","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"     * Handles other exceptions.","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"     * @param e Exception of types other than DukeException thrown by Duke.","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"    public static void handleOtherExceptions(Exception e) {","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":29}},{"path":"src/main/java/seedu/duke/exceptions/IllegalDateTimeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":" * A class that represents exceptions thrown when a input date time is illegal.","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"public class IllegalDateTimeException extends Exception {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":9}},{"path":"src/main/java/seedu/duke/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"SvethaMahadevan"},"content":"import seedu.duke.commands.AddNoteCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.commands.ExitCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.ClickException;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.IllegalDateTimeException;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"SvethaMahadevan"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.Messages.EMPTY_STRING;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.CommandConstants.COMMAND_EXIT;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"public class Parser {","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"    static final String INPUT_DATE_TIME_FORMAT \u003d \"dd-MM-yyyy HHmm\";","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    static final String OUTPUT_DATE_TIME_FORMAT \u003d \"MMM dd yyyy HH:mm\";","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"     * Converts date and time in string format to a LocalDateTime object.","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"     * @param string Date and time in string format.","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"     * @return A LocalDateTime object that represents the given date and time.","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"     * @throws IllegalDateTimeException If the input date time is invalid.","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"    public static LocalDateTime stringToDateTime(String string) throws IllegalDateTimeException {","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"        try {","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"            return LocalDateTime.parse(string, DateTimeFormatter.ofPattern(INPUT_DATE_TIME_FORMAT));","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"            throw new IllegalDateTimeException();","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"     * Converts date and time in LocalDateTime format to a string.","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"     * @param dateTime A LocalDateTime object that represents the given date and time.","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"     * @return The string representation of the given LocalDateTime object.","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"    public static String dateTimeToString(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(OUTPUT_DATE_TIME_FORMAT));","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"     * Formats the user\u0027s input date time.","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"     * @param rawDateTime The raw date time from user\u0027s input.","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"     * @return The string representation of other form of the given date time.","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"     * @throws IllegalDateTimeException If the input date time is invalid.","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"    public static String formatDateTime(String rawDateTime) throws IllegalDateTimeException {","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"        try {","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"            return dateTimeToString(stringToDateTime(rawDateTime));","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"        } catch (IllegalDateTimeException e) {","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"            throw new IllegalDateTimeException();","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"nvbinh15"},"content":"     * Splits raw user input into command word and command arguments.","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"nvbinh15"},"content":"     * @param userInput Raw input from user.","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"nvbinh15"},"content":"     * @return a String array of size 2 including the command type and the arguments.","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"nvbinh15"},"content":"    public static String[] splitCommandAndArgs(String userInput) {","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"nvbinh15"},"content":"        String[] tokens \u003d userInput.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"nvbinh15"},"content":"        String command \u003d tokens[0];","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"nvbinh15"},"content":"        if (tokens.length \u003d\u003d 2) {","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"nvbinh15"},"content":"            return tokens;","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"nvbinh15"},"content":"        } else {","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"nvbinh15"},"content":"            return new String[] {command, EMPTY_STRING};","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":80,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":81,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":82,"author":{"gitId":"nvbinh15"},"content":"     * Returns a to be executed command based on the raw input from user.","lastModifiedDate":"2021-10-04"},{"lineNumber":83,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":84,"author":{"gitId":"nvbinh15"},"content":"     * @param userInput The raw input from user.","lastModifiedDate":"2021-10-04"},{"lineNumber":85,"author":{"gitId":"nvbinh15"},"content":"     * @return The command to be executed.","lastModifiedDate":"2021-10-04"},{"lineNumber":86,"author":{"gitId":"nvbinh15"},"content":"     * @throws ClickException If there is an exception of type DukeException occurs.","lastModifiedDate":"2021-10-04"},{"lineNumber":87,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":88,"author":{"gitId":"nvbinh15"},"content":"    public Command parseCommand(String userInput) throws ClickException {","lastModifiedDate":"2021-10-04"},{"lineNumber":89,"author":{"gitId":"nvbinh15"},"content":"        final String[] commandTypeAndParams \u003d splitCommandAndArgs(userInput);","lastModifiedDate":"2021-10-04"},{"lineNumber":90,"author":{"gitId":"nvbinh15"},"content":"        final String commandType \u003d commandTypeAndParams[0];","lastModifiedDate":"2021-10-04"},{"lineNumber":91,"author":{"gitId":"nvbinh15"},"content":"        final String commandArgs \u003d commandTypeAndParams[1];","lastModifiedDate":"2021-10-04"},{"lineNumber":92,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":93,"author":{"gitId":"nvbinh15"},"content":"        switch (commandType) {","lastModifiedDate":"2021-10-04"},{"lineNumber":94,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_EXIT:","lastModifiedDate":"2021-10-04"},{"lineNumber":95,"author":{"gitId":"nvbinh15"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-10-04"},{"lineNumber":96,"author":{"gitId":"nvbinh15"},"content":"        case \"add\":","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"nvbinh15"},"content":"            return new AddNoteCommand(userInput);","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"nvbinh15"},"content":"        default:","lastModifiedDate":"2021-10-04"},{"lineNumber":99,"author":{"gitId":"nvbinh15"},"content":"            throw new ClickException();","lastModifiedDate":"2021-10-04"},{"lineNumber":100,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":101,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":102,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"nvbinh15"},"content":"    //@author SvethaMahadevan","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"nvbinh15"},"content":"    public static String parseAddNoteCommand(String input) {","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"nvbinh15"},"content":"        String noteNameDetails \u003d input.trim().split(\"add\")[1];","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"nvbinh15"},"content":"        String noteName \u003d noteNameDetails.split(\"n/\")[1].trim();","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"nvbinh15"},"content":"        return noteName;","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"},{"lineNumber":110,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"SvethaMahadevan":2,"nvbinh15":108}},{"path":"src/main/java/seedu/duke/parser/schedule/ParserSchedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.parser.schedule;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"//@author swatim","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"public class ParserSchedule {","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"    public static YearMonth parseCalendarCommand(String input) {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"        // takes substring excluding \"calendar\" from command","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"        String extractMonthYear \u003d input.substring(9);","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"        var arguments \u003d extractMonthYear.split(\"-\");","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"        int month \u003d Integer.parseInt(arguments[0]);","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"        int year \u003d Integer.parseInt(arguments[1]);","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"        YearMonth yearMonth \u003d YearMonth.of(year, month);","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"        return yearMonth;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"swatimahadevan":19}},{"path":"src/main/java/seedu/duke/schedule/Schedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.schedule;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.ui.schedule.UiSchedule;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import java.util.concurrent.atomic.AtomicInteger;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"//@author swatim","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"public class Schedule {","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"    public static void displayCalendar(YearMonth inputYearMonth) {","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cString\u003e calendar \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"        String[] daysInMonth \u003d {\"01\", \"02\", \"03\", \"04\", \"05\",","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"            \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\", \"13\",","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"            \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\",","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"            \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\"};","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"        // Add all days to calendar ArrayList first","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"        calendar.addAll(Arrays.asList(daysInMonth).subList(0, inputYearMonth.lengthOfMonth()));","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"        // Add in spaces at the beginning for display upto day 1","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"        DayOfWeek dayOneOfMonth \u003d inputYearMonth.atDay(1).getDayOfWeek();","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"        if (dayOneOfMonth !\u003d DayOfWeek.SUNDAY) {","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"            for (int i \u003d 0; i \u003c dayOneOfMonth.getValue(); i++) {","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"                calendar.add(0, \"  \");","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"        // Add spaces after for display after last day to end of week","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"        while (calendar.size() % 7 !\u003d 0) {","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"            calendar.add(\"  \");","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"        // Print out the entire display in week rows","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"        int totalWeeks \u003d (int) Math.ceil(calendar.size() / 7);","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"        int currentWeek \u003d 0;","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"        UiSchedule.printCalenderTitle(inputYearMonth);","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"        AtomicInteger j \u003d new AtomicInteger();","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"        while (currentWeek \u003c totalWeeks) {","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"            // Print day number from calendar (maybe a number string like \"01\" or \" \") and space","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"            IntStream.range(0, 7).mapToObj(dayOfMonth -\u003e \"|  \"","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"                    + calendar.get(j.getAndIncrement()) + \"  |\").forEachOrdered(System.out::print);","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"            System.out.println();","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"            currentWeek++;","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"swatimahadevan":48}},{"path":"src/main/java/seedu/duke/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.calories.WhatIAteList;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"public class Storage {","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"     * Synchronised date with food record  list.","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"     * */","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    //TODO storage  file  implementation with hard-disk capability","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    //TODO sync todaysDate from  file as well","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    private Date todaysDate;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    public WhatIAteList whatIAteTodayList \u003d  new WhatIAteList(todaysDate);","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":4,"ngnigel99":14}},{"path":"src/main/java/seedu/duke/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.calories.FoodRecord;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import seedu.duke.constants.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.Messages.HORIZONTAL_LINE;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.Messages.LOGO;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.Messages.MESSAGE_GOODBYE;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"import static seedu.duke.constants.Messages.MESSAGE_GREETING;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"public class Ui {","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"     * Reads the text entered by the user.","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"     * @param in The Scanner to read user input.","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"     * @return line Full line entered by the user.","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    public static String getUserInput(Scanner in) {","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"        String line \u003d in.nextLine();","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"        return line;","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"     * Prints the divider HORIZONTAL_LINE.","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"    public static void printLine() {","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"     * Prints the greeting message to standard output.","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"    public static void printGreeting() {","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"        printMessage(LOGO + MESSAGE_GREETING);","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"     * Prints the goodbye message to standard output.","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"    public static void printGoodBye() {","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"        printMessage(MESSAGE_GOODBYE);","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"     * Prints message to the standard output.","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"    public static void printMessage(String message) {","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(message);","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"     * Prints the name of the record, as well as the calorie count.","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"swatimahadevan"},"content":"     * @param record record to be added","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"    //TODO  remove messages, may be neater","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"    public static void printAddRecord(FoodRecord record)  {","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(Messages.ADD_RECORD_GREET","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"                + record.getFoodName()","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"                + Messages.ADD_RECORD_TTL","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"                + Messages.ADD_RECORD_CONNECTOR","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"                + record.getCalorieCount()","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"                + Messages.ADD_RECORD_FINAL);","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"     * Prints success on clear message to user.","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"     * @author ngnigel99","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"ngnigel99"},"content":"    public static void printDoneClearList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(Messages.PRINT_DONE_CLEAR_LIST);","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"SvethaMahadevan"},"content":"    //UI for journal","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"swatimahadevan"},"content":"    public static void printIntroMessage() {","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"Hello, I am Journal Bud.\");","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"How may I help you?\");","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"SvethaMahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"swatimahadevan"},"content":"    public static void printAddedNoteMessage(String noteName) {","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"SvethaMahadevan"},"content":"        System.out.println(\"Great you have added the note: \" + noteName);","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"SvethaMahadevan"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"SvethaMahadevan"},"content":"    //end of UI for journal","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"SvethaMahadevan":8,"nvbinh15":54,"ngnigel99":26,"swatimahadevan":5}},{"path":"src/main/java/seedu/duke/ui/schedule/UiSchedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.ui.schedule;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"//@author swatim","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"public class UiSchedule {","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"    private static String HORIZONTAL_LINE \u003d \"________________________________________________________\";","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"    public static void printCalenderTitle(YearMonth inputYearMonth) {","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(\"                     \" + inputYearMonth.getMonth() + \" \"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"                + inputYearMonth.getYear());","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"swatimahadevan":16}},{"path":"src/test/java/seedu/duke/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import seedu.duke.exceptions.IllegalDateTimeException;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"//@@author nvbinh15","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"class ParserTest {","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"    static Parser parser \u003d new Parser();","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"    void formatDateTime_legalDateTime_dateTimeOfOtherFormat() throws IllegalDateTimeException {","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"        String inputDateTime \u003d \"01-10-2021 2359\";","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"        String expectedDateTime \u003d \"Oct 01 2021 23:59\";","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(expectedDateTime, parser.formatDateTime(inputDateTime));","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"    void formatDateTime_illegalDateTime_illegalDateTimeException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"        String illegalDateTime \u003d \"01/01/2021 2359\";","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"        assertThrows(IllegalDateTimeException.class, () -\u003e parser.formatDateTime(illegalDateTime));","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"    //@author SvethaMahadevan","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"    void sampleTest() {","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"        assertEquals(\"testnotename\", parser.parseAddNoteCommand(\"add n/ testnotename\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nvbinh15":34}},{"path":"src/test/java/seedu/duke/parser/schedule/ParserScheduleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package seedu.duke.parser.schedule;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import seedu.duke.exceptions.IllegalDateTimeException;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"//@author swatim","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"class ParserScheduleTest {","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"    static ParserSchedule parser \u003d new ParserSchedule();","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"    void sampleTest() {","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"        assertEquals(YearMonth.of(2021, 10), parser.parseCalendarCommand(\"calendar 10-2021\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"swatimahadevan":19}}]
