[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"    mainClassName \u003d \"decodex.Decodex\"","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"    archiveBaseName \u003d \"decodex\"","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rizemon":3,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"\u003cimg src\u003d\"https://avatars.githubusercontent.com/u/26685970?v\u003d4\" width\u003d\"100\"/\u003e | Tan Jia Le | [Github](https://github.com/rizemon) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"\u003cimg src\u003d\"https://avatars.githubusercontent.com/u/16810847?v\u003d4\" width\u003d\"100\"/\u003e | Aloysius Lee | [Github](https://github.com/arraysius) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"\u003cimg src\u003d\"https://media.discordapp.net/attachments/285692337357586432/892962858546114560/photo_2021-05-07_15-04-25.jpg?text\u003dBreadDog\" width\u003d\"100\"/\u003e | Sean Phang | [Github](https://github.com/SeenFang) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"\u003cimg src\u003d\"https://avatars.githubusercontent.com/u/50107219?v\u003d4\" width\u003d\"100\"/\u003e | Sim Tian Boon | [Github](https://github.com/Kair0s3) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"rizemon":4,"-":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kair0s3"},"content":"# Developer Guide \u003c!-- omit in toc --\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"## Introduction","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"Decodex is a **Command Line Interface (CLI) application for Capture-The-Flag (CTF) players to quickly transform data from one format to another with extreme ease**. The intuitive interaction can help speed up a player\u0027s performance during CTFs and save time without having to manually code the tedious data transformations.","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"### Purpose of This Guide","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":"The purpose of this guide is to provide more information on our application, Decodex, such as the overall architecture, implementation and design rationales to developers who wish to contribute and enhance Decodex to it\u0027s fullest potential. As of the release of this developer guide, it is written for Decodex V2.0.","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":"\u003e :information_source: This guide may also serve as a start for software testers to find bugs and possibly edge cases within our applications.","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Kair0s3"},"content":"### Developer Guide Usage","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Kair0s3"},"content":"This developer guide is made for developers who wish to further understand and/or develop **Decodex**.","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Kair0s3"},"content":"This guide includes the setup instructions, design, implementation, testing, product scope, and other sections to give developers a better understanding of the application.","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"arraysius"},"content":"## Table of Contents \u003c!-- omit in toc --\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"arraysius"},"content":"- [Introduction](#introduction)","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"arraysius"},"content":"  - [Purpose of This Guide](#purpose-of-this-guide)","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"arraysius"},"content":"  - [Developer Guide Usage](#developer-guide-usage)","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"arraysius"},"content":"- [Acknowledgements](#acknowledgements)","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"arraysius"},"content":"  - [Terminologies](#terminologies)","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"arraysius"},"content":"  - [Symbols](#symbols)","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"arraysius"},"content":"- [Getting Started](#getting-started)","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"arraysius"},"content":"  - [Setting Up the Project](#setting-up-the-project)","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"arraysius"},"content":"  - [Additional Considerations](#additional-considerations)","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"arraysius"},"content":"- [Design](#design)","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"arraysius"},"content":"  - [Architecture](#architecture)","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"arraysius"},"content":"  - [UI Component](#ui-component)","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"arraysius"},"content":"  - [Logic Component](#logic-component)","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"arraysius"},"content":"  - [Data Component](#data-component)","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"arraysius"},"content":"  - [Module Component](#module-component)","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"arraysius"},"content":"  - [Recipe Component](#recipe-component)","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"arraysius"},"content":"  - [Storage Component](#storage-component)","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"arraysius"},"content":"- [Implementation](#implementation)","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"arraysius"},"content":"  - [Decodex Initialisation](#decodex-initialisation)","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"arraysius"},"content":"  - [Decodex Main Logic](#decodex-main-logic)","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"arraysius"},"content":"  - [Parser - Basic Command Logic](#parser---basic-command-logic)","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"arraysius"},"content":"  - [Parser - Recipe Command Logic](#parser---recipe-command-logic)","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"arraysius"},"content":"  - [Modules](#modules)","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"arraysius"},"content":"    - [Implemented Modules:](#implemented-modules)","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"arraysius"},"content":"  - [List of Commands](#list-of-commands)","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"arraysius"},"content":"    - [InputCommand](#inputcommand)","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"arraysius"},"content":"    - [ExitCommand](#exitcommand)","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"arraysius"},"content":"    - [ResetCommand](#resetcommand)","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"arraysius"},"content":"    - [SelectCommand](#selectcommand)","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"arraysius"},"content":"      - [SelectCommand (Module)](#selectcommand-module)","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"arraysius"},"content":"      - [SelectCommand (Recipe)](#selectcommand-recipe)","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"arraysius"},"content":"    - [ListCommand](#listcommand)","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"arraysius"},"content":"  - [Recipe Commands](#recipe-commands)","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"arraysius"},"content":"    - [RecipeNewCommand](#recipenewcommand)","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"arraysius"},"content":"    - [RecipeSelectCommand](#recipeselectcommand)","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"arraysius"},"content":"    - [RecipeListCommand](#recipelistcommand)","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"arraysius"},"content":"    - [RecipePushCommand](#recipepushcommand)","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"arraysius"},"content":"    - [RecipePopCommand](#recipepopcommand)","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"arraysius"},"content":"    - [RecipeResetCommand](#reciperesetcommand)","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"arraysius"},"content":"    - [RecipeDeleteCommand](#recipedeletecommand)","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"arraysius"},"content":"- [Appendix A: Product Scope](#appendix-a-product-scope)","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"arraysius"},"content":"  - [Target User Profile](#target-user-profile)","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"arraysius"},"content":"  - [Value Proposition](#value-proposition)","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"arraysius"},"content":"- [Appendix B: User Stories](#appendix-b-user-stories)","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"arraysius"},"content":"- [Appendix C: Non-Functional Requirements](#appendix-c-non-functional-requirements)","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"arraysius"},"content":"- [Appendix D: Glossary](#appendix-d-glossary)","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"arraysius"},"content":"- [Appendix E: Instructions for Manual Testing](#appendix-e-instructions-for-manual-testing)","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"rizemon"},"content":"1. SE-EDU","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"rizemon"},"content":"    1. [AB3 Developer Guide Format](https://se-education.org/addressbook-level3/DeveloperGuide.html)","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"Kair0s3"},"content":"    2. [AB3 User Guide Format](https://se-education.org/addressbook-level3/UserGuide.html)","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"Kair0s3"},"content":"    3. [AB3 Setting up and getting started page and related links](https://se-education.org/addressbook-level3/SettingUp.html)","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"Kair0s3"},"content":"    4. [AB3 Appendix: Requirements](https://se-education.org/addressbook-level3/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"Kair0s3"},"content":"    5. [AB2 Code Structure](https://github.com/se-edu/addressbook-level2)","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"arraysius"},"content":"2. [AY2021S2-CS2113-T10-1\u0027s Developer Guide](https://ay2021s2-cs2113-t10-1.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"Kair0s3"},"content":"### Terminologies","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"Kair0s3"},"content":"| Terminology                 | Definition                                                                                                                                                    |","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"arraysius"},"content":"| --------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"Kair0s3"},"content":"| Data transformation         | The conversion of one data format to another.                                                                                                                 |","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"Kair0s3"},"content":"| Application, Program        | Refer to the `Decodex` program. This two terms are used interchangeably in this User Guide.                                                                   |","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"Kair0s3"},"content":"| Encoding                    | Convert a message into a coded form.                                                                                                                          |","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"Kair0s3"},"content":"| Decoding                    | Convert a coded message into an intelligible form                                                                                                             |","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"Kair0s3"},"content":"| Base64, Binary, Hexadecimal | Common types of data encoding standards.                                                                                                                      |","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"Kair0s3"},"content":"| Console                     | This refers to your command prompt window.                                                                                                                    |","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"Kair0s3"},"content":"| Argument                    | The additional information you provide to the program\u0027s command.                                                                                              |","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"Kair0s3"},"content":"| Module                      | A self-contained set of instructions to process your data into another form.                                                                                  |","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"Kair0s3"},"content":"| Recipe                      | Acts as a container for you to select your modules. When multiple modules are selected, this forms a \"module chain\". By default, you do not have any recipes. |","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"Kair0s3"},"content":"### Symbols","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"Kair0s3"},"content":"| Name                 | Definition                                                                                            |","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"arraysius"},"content":"| -------------------- | ----------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"Kair0s3"},"content":"| :bulb:               | Represents a good tip for you.                                                                        |","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"Kair0s3"},"content":"| :exclamation:        | Represents something important that you should take note of.                                          |","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"Kair0s3"},"content":"| :information_source: | Represents additional information regarding commands/features for you better understand how it works. |","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"Kair0s3"},"content":"| :pen:                | Represents our rationale behind the design/implementation.                                            |","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"Kair0s3"},"content":"## Getting Started","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"Kair0s3"},"content":"### Setting Up the Project","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"rizemon"},"content":"1. Forking and cloning","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"rizemon"},"content":"    1. **Fork** our repository.","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"rizemon"},"content":"    2. Then, **clone** the fork onto your computer.","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"Kair0s3"},"content":"    \u003e 💡 For convenience, our repository can be found [here](https://github.com/AY2122S1-CS2113T-T10-3/tp).","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"arraysius"},"content":"2. Editor","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"rizemon"},"content":"    1. We highly recommend using Intellij IDEA, which can be downloaded from [here](https://www.jetbrains.com/idea/).","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"rizemon"},"content":"    2. However, you may still use other editors that you prefer. Just take note that most of our set ups are centered around Intellij.","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"arraysius"},"content":"3. Configure JDK","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"Kair0s3"},"content":"    1. Follow the guide at *[[se-edu/guides] IDEA: Configuring the JDK](https://se-education.org/guides/tutorials/intellijJdk.html)* to ensure Intellij is configured to use **JDK 11**, since our application runs on `Java 11`.","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"arraysius"},"content":"4. Importing project","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"rizemon"},"content":"    1. Follow the guide at *[[se-edu/guides] IDEA: Importing a Gradle project](https://se-education.org/guides/tutorials/intellijImportGradleProject.html)* to import the forked project into Intellij.","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"Kair0s3"},"content":"    \u003e ❗Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"arraysius"},"content":"5. Verifying setup","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"rizemon"},"content":"    1. Run the `decodex.Decodex.java` and try a few commands.","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"rizemon"},"content":"    2. [Run the tests](https://se-education.org/addressbook-level3/Testing.html) to ensure they all pass.","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"Kair0s3"},"content":"### Additional Considerations","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"Kair0s3"},"content":"1. Configure the coding style","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"Kair0s3"},"content":"    1. If using IDEA, follow the guide [[se-edu/guides] IDEA: Configuring the code style](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA’s coding style to match ours.","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"Kair0s3"},"content":"   \u003e 💡 Tip: Optionally, you can follow the guide [[se-edu/guides] Using Checkstyle](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems as you write code.","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"arraysius"},"content":"2. Set up CI","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"Kair0s3"},"content":"    1. This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"arraysius"},"content":"3. About our code structure","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"Kair0s3"},"content":"    1. OOP standardized","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"Kair0s3"},"content":"    2. Modularized.","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"Kair0s3"},"content":"        1. Any changes/additions to the current commands would simply require the changes within `Parser.java`.","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"Kair0s3"},"content":"        2. For any changes/additions to the modules, would simply require changes within the `src/main/java/decodex/modules` folder.","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"Kair0s3"},"content":"    3. This structure makes it easier for us as well as developers like you to maintain and further extend the capabilities of our application.","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"arraysius"},"content":"## Design","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":141,"author":{"gitId":"SeenFang"},"content":"### Architecture","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"SeenFang"},"content":"The ***Architecture Diagram*** given below shows the high-level design of Decodex.","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"SeenFang"},"content":"![architecture.png](images/dg/architecture.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"SeenFang"},"content":"**Main Components of The Architecture**","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"SeenFang"},"content":"`Decodex` is responsible for initialising the components at launch.","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"arraysius"},"content":"The rest of the program consists of 6 other components:","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"arraysius"},"content":"- `UI`: Handles user input and message output to the console","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"arraysius"},"content":"- `Logic`: Parses user input and executes commands","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"SeenFang"},"content":"- `Recipe`: Manages a sequence of module to be executed","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"arraysius"},"content":"- `Module`: Manages a set of encoding and decoding processes","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"arraysius"},"content":"- `Data`: Holds the data that is to be encoded or decoded","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"arraysius"},"content":"- `Storage`: Manages the reading and writing of data to disk","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"arraysius"},"content":"### UI Component","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":162,"author":{"gitId":"SeenFang"},"content":"![UiClass.png](images/dg/UiClass.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"SeenFang"},"content":"The `Ui` component consists of:","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"SeenFang"},"content":"- `Ui`: Manages access to the `Scanner` object that reads user input and also contains all the methods for printing to the user.","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"arraysius"},"content":"### Logic Component","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":170,"author":{"gitId":"SeenFang"},"content":"Below is a partial class diagram that shows an overview of the `Logic` component.","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":172,"author":{"gitId":"SeenFang"},"content":"![LogicComponent(4).png](images/dg/LogicComponent.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":173,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"SeenFang"},"content":"The `Logic` component consists of:","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"SeenFang"},"content":"- `Parser`: Handles user input and decides the `Command` object to create.","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"SeenFang"},"content":"- `Command`: An abstract class that defines the blueprint for the derived `*Command` classes.","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"SeenFang"},"content":"    - `InputCommand`: Takes in a string from the user and sets it as the current `Data` object to perform operations on.","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"SeenFang"},"content":"    - `HelpCommand`: Displays all command syntaxes to the user.","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"SeenFang"},"content":"    - `ListCommand`: Displays all `Module` objects and loaded `Recipe` objects to the user.","lastModifiedDate":"2021-10-27"},{"lineNumber":181,"author":{"gitId":"SeenFang"},"content":"    - `SelectCommand`: Executes a supported `Module` object or a loaded `Recipe` object on the current `Data` object and replaces it with the resulting `Data` object from the execution.","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"SeenFang"},"content":"    - `ResetCommand`: Reverts the current `Data` object to a state before any modules/recipes were executed on it.","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"SeenFang"},"content":"    - `ExitCommand`: Exits the application.","lastModifiedDate":"2021-10-27"},{"lineNumber":184,"author":{"gitId":"SeenFang"},"content":"    - `RecipeNewCommand`: Creates a new `Recipe` object with name provided by the user and creates a save file for it on the file system.","lastModifiedDate":"2021-10-27"},{"lineNumber":185,"author":{"gitId":"SeenFang"},"content":"    - `RecipeSelectCommand`: Set a `Recipe` object as the recipe that is currently being edited.","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"SeenFang"},"content":"    - `RecipeListCommand`: Display all `Module` objects in a `Recipe` object.","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"SeenFang"},"content":"    - `RecipePushCommand`: Appends a `Module` object to the `Recipe` object that is currently being edited.","lastModifiedDate":"2021-10-27"},{"lineNumber":188,"author":{"gitId":"SeenFang"},"content":"    - `RecipePopCommand`: Removes the latest `Module` object from the `Recipe` object that is currently being edited.","lastModifiedDate":"2021-10-27"},{"lineNumber":189,"author":{"gitId":"SeenFang"},"content":"    - `RecipeResetCommand`: Removes all `Module` objects from the `Recipe` object that is currently being edited.","lastModifiedDate":"2021-10-27"},{"lineNumber":190,"author":{"gitId":"SeenFang"},"content":"    - `RecipeDeleteCommand`: Deletes a `Recipe` object from the application as well as its corresponding save file on the file system.","lastModifiedDate":"2021-10-27"},{"lineNumber":191,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":192,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":193,"author":{"gitId":"SeenFang"},"content":"Below is the class diagram showing the association between the `Decodex` class and the `Parser` class.","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"SeenFang"},"content":"![ParserClass.png](images/dg/ParserClass.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":196,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":197,"author":{"gitId":"SeenFang"},"content":"Below is the class diagram showing the association between the abstract `Command` class and its derived `*Command` classes.","lastModifiedDate":"2021-10-27"},{"lineNumber":198,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"SeenFang"},"content":"![CommandClass1.png](images/dg/CommandClass1.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":200,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":201,"author":{"gitId":"SeenFang"},"content":"![CommandClass2.png](images/dg/CommandClass2.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":202,"author":{"gitId":"arraysius"},"content":"### Data Component","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":204,"author":{"gitId":"SeenFang"},"content":"Below is a partial class diagram that shows an overview of the `Data` component.","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":206,"author":{"gitId":"SeenFang"},"content":"![DataComponent.png](images/dg/DataComponent.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":207,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":208,"author":{"gitId":"SeenFang"},"content":"The `Data` component consists of:","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"SeenFang"},"content":"1. `Data`: Used to hold the bytes which the data transformations will act on.","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"SeenFang"},"content":"2. `DataManager`: Holds a reference to the current `Data` object and updates it when a `Module` or `Recipe` is executed.","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"SeenFang"},"content":"Below is the class diagram showing the association between the `Decodex` class, the `DataManager` class and the `Data` class.","lastModifiedDate":"2021-10-27"},{"lineNumber":214,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":215,"author":{"gitId":"SeenFang"},"content":"![DataClass.png](images/dg/DataClass.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":216,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":217,"author":{"gitId":"arraysius"},"content":"### Module Component","lastModifiedDate":"2021-10-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":219,"author":{"gitId":"SeenFang"},"content":"Below is a partial class diagram that shows an overview of the `Module` component.","lastModifiedDate":"2021-10-27"},{"lineNumber":220,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":221,"author":{"gitId":"SeenFang"},"content":"![ModuleComponent.png](images/dg/ModuleComponent.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":222,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":223,"author":{"gitId":"SeenFang"},"content":"The `Module` component consists of:","lastModifiedDate":"2021-10-27"},{"lineNumber":224,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":225,"author":{"gitId":"SeenFang"},"content":"- `Module`: An abstract class that defines the blueprint for the derived `*Encoder` or `*Decoder` classes.","lastModifiedDate":"2021-10-27"},{"lineNumber":226,"author":{"gitId":"SeenFang"},"content":"    - `Base64Encoder`, `Base64Decoder`: Performs base64 encoding/decoding operations","lastModifiedDate":"2021-10-27"},{"lineNumber":227,"author":{"gitId":"SeenFang"},"content":"    - `HexEncoder`, `HexDecoder`: Performs hexadecimal encoding/decoding operations","lastModifiedDate":"2021-10-27"},{"lineNumber":228,"author":{"gitId":"SeenFang"},"content":"    - `BinaryEncoder`, `BinaryDecoder`: Performs binary encoding/decoding operations","lastModifiedDate":"2021-10-27"},{"lineNumber":229,"author":{"gitId":"SeenFang"},"content":"    - `RotEncoder`: Performs rotational cipher operation","lastModifiedDate":"2021-10-27"},{"lineNumber":230,"author":{"gitId":"SeenFang"},"content":"- `ModuleManager`: Decides and generates the necessary `Module` objects to be added to `Recipe` objects or to be executed on `Data` objects.","lastModifiedDate":"2021-10-27"},{"lineNumber":231,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":232,"author":{"gitId":"SeenFang"},"content":"Below is the class diagram showing the association between the `Decodex` class, the `ModuleManager` class.","lastModifiedDate":"2021-10-27"},{"lineNumber":233,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":234,"author":{"gitId":"SeenFang"},"content":"![ModuleManagerClass.png](images/dg/ModuleManagerClass.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":235,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":236,"author":{"gitId":"SeenFang"},"content":"Below is the class diagram showing the association between the abstract `Module` class and its derived `*Decoder` classes.","lastModifiedDate":"2021-10-27"},{"lineNumber":237,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":238,"author":{"gitId":"SeenFang"},"content":"![ModuleClass.png](images/dg/ModuleClass.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":239,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":240,"author":{"gitId":"arraysius"},"content":"### Recipe Component","lastModifiedDate":"2021-10-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":242,"author":{"gitId":"SeenFang"},"content":"Below is a partial class diagram that shows an overview of the `Recipe` component.","lastModifiedDate":"2021-10-27"},{"lineNumber":243,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":244,"author":{"gitId":"SeenFang"},"content":"![RecipeComponent.png](images/dg/RecipeComponent.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":245,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":246,"author":{"gitId":"SeenFang"},"content":"The `Recipe` component consists of:","lastModifiedDate":"2021-10-27"},{"lineNumber":247,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":248,"author":{"gitId":"SeenFang"},"content":"- `Recipe`: Holds a chain of `Module` objects that, when ran, will execute sequentially on a `Data` object.","lastModifiedDate":"2021-10-27"},{"lineNumber":249,"author":{"gitId":"SeenFang"},"content":"- `RecipeManager`: Manages all loaded `Recipe` objects and holds a reference to the `Recipe` object that is currently being edited.","lastModifiedDate":"2021-10-27"},{"lineNumber":250,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":251,"author":{"gitId":"SeenFang"},"content":"![RecipeClass.png](images/dg/RecipeClass.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":252,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":253,"author":{"gitId":"SeenFang"},"content":"\u003e :pen: The reason for having `Recipe` objects is to enable users to run multiple modules at one go sequentially.","lastModifiedDate":"2021-10-27"},{"lineNumber":254,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":255,"author":{"gitId":"arraysius"},"content":"### Storage Component","lastModifiedDate":"2021-10-21"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":257,"author":{"gitId":"SeenFang"},"content":"![StorageClass.png](images/dg/StorageClass.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":258,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":259,"author":{"gitId":"SeenFang"},"content":"The `Storage` component consists of:","lastModifiedDate":"2021-10-27"},{"lineNumber":260,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":261,"author":{"gitId":"SeenFang"},"content":"- `Storage` : Performs all file related operations such as reading/saving to files and deleting of files.","lastModifiedDate":"2021-10-27"},{"lineNumber":262,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":263,"author":{"gitId":"SeenFang"},"content":"To add on, the `Storage` component is designed to access only the following folders:","lastModifiedDate":"2021-10-27"},{"lineNumber":264,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":265,"author":{"gitId":"SeenFang"},"content":"1. `recipe/` : For recipe files.","lastModifiedDate":"2021-10-27"},{"lineNumber":266,"author":{"gitId":"SeenFang"},"content":"2. `output/` : For output data files.","lastModifiedDate":"2021-10-27"},{"lineNumber":267,"author":{"gitId":"SeenFang"},"content":"3. `input/` : For input data file.","lastModifiedDate":"2021-10-27"},{"lineNumber":268,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":269,"author":{"gitId":"SeenFang"},"content":"\u003e :pen: The rationale behind standardizing the specific folders to read/save to, is to ensure that all relevant files can be found in the same location, which makes it easier for users to find the files they are looking for.","lastModifiedDate":"2021-10-27"},{"lineNumber":270,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":271,"author":{"gitId":"SeenFang"},"content":"## Implementation","lastModifiedDate":"2021-10-27"},{"lineNumber":272,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":273,"author":{"gitId":"arraysius"},"content":"This section focuses on explaining the specific applications flows and the interactions between the classes and their methods.","lastModifiedDate":"2021-10-27"},{"lineNumber":274,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":275,"author":{"gitId":"arraysius"},"content":"💡 The lifeline of the objects should terminate at the destroy marker (`X`), however due to a limitation of the PlantUML software, the lifeline extends beyond the destroy marker.","lastModifiedDate":"2021-10-27"},{"lineNumber":276,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":277,"author":{"gitId":"arraysius"},"content":"### Decodex Initialisation","lastModifiedDate":"2021-10-27"},{"lineNumber":278,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":279,"author":{"gitId":"arraysius"},"content":"Below shows the sequence diagram of the initialisation of Decodex.","lastModifiedDate":"2021-10-27"},{"lineNumber":280,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":281,"author":{"gitId":"arraysius"},"content":"![Decodex Initialisation](images/dg/DecodexInitSeq.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":282,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":283,"author":{"gitId":"arraysius"},"content":"During the initialisation sequence of Decodex, all the dependencies (i.e `DataManager`, `ModuleManager` .etc) are instantiated, which will later on be passed to the relevant commands and methods for usage.","lastModifiedDate":"2021-10-27"},{"lineNumber":284,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":285,"author":{"gitId":"arraysius"},"content":"### Decodex Main Logic","lastModifiedDate":"2021-10-27"},{"lineNumber":286,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":287,"author":{"gitId":"arraysius"},"content":"Below is the sequence diagram showing the overall flow of Decodex.","lastModifiedDate":"2021-10-27"},{"lineNumber":288,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":289,"author":{"gitId":"arraysius"},"content":"![Decodex Main Logic](images/dg/DecodexMainSeq.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":290,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":291,"author":{"gitId":"arraysius"},"content":"This main logic occurs after the initialisation sequence in the previous figure. It comprises of the main loop that provides the interactivity to the user by reading input from them and attempting to execute it as a command. The loop terminates when the user enters the `exit` command.","lastModifiedDate":"2021-10-27"},{"lineNumber":292,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":293,"author":{"gitId":"arraysius"},"content":"### Parser - Basic Command Logic","lastModifiedDate":"2021-10-27"},{"lineNumber":294,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":295,"author":{"gitId":"arraysius"},"content":"Below is the sequence diagram that shows the overall flow of the `Parser` logic.","lastModifiedDate":"2021-10-27"},{"lineNumber":296,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":297,"author":{"gitId":"arraysius"},"content":"![Parser Basic Command Logic](images/dg/ParserBasicSeq.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":298,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":299,"author":{"gitId":"arraysius"},"content":"The flow of the `Parser` logic:","lastModifiedDate":"2021-10-27"},{"lineNumber":300,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":301,"author":{"gitId":"arraysius"},"content":"1. Receives the user input and parses it to get the command type.","lastModifiedDate":"2021-10-27"},{"lineNumber":302,"author":{"gitId":"arraysius"},"content":"2. Prepares the corresponding `XYZCommand`.","lastModifiedDate":"2021-10-27"},{"lineNumber":303,"author":{"gitId":"arraysius"},"content":"    1. However, if the command is a `Recipe*Command` , it will be passed to `RecipeCommandParser` for subcommand parsing.","lastModifiedDate":"2021-10-27"},{"lineNumber":304,"author":{"gitId":"arraysius"},"content":"3. Returns the command back to `Decodex`.","lastModifiedDate":"2021-10-27"},{"lineNumber":305,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":306,"author":{"gitId":"arraysius"},"content":"### Parser - Recipe Command Logic","lastModifiedDate":"2021-10-27"},{"lineNumber":307,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":308,"author":{"gitId":"arraysius"},"content":"Below is the sequence diagram that shows the overall flow of the `RecipeCommandParser` logic.","lastModifiedDate":"2021-10-27"},{"lineNumber":309,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":310,"author":{"gitId":"arraysius"},"content":"![Parser Recipe Command Logic](images/dg/ParserRecipeSeq.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":311,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":312,"author":{"gitId":"arraysius"},"content":"The general process of the `RecipeCommandParser` logic consists of:","lastModifiedDate":"2021-10-27"},{"lineNumber":313,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":314,"author":{"gitId":"arraysius"},"content":"1. Receives the user input from `Parser` then parses it to get the subcommand type.","lastModifiedDate":"2021-10-27"},{"lineNumber":315,"author":{"gitId":"arraysius"},"content":"2. Prepares the corresponding `RecipeXYZCommand`","lastModifiedDate":"2021-10-27"},{"lineNumber":316,"author":{"gitId":"arraysius"},"content":"3. Returns the command back to `Decodex`","lastModifiedDate":"2021-10-27"},{"lineNumber":317,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":318,"author":{"gitId":"arraysius"},"content":"### Modules","lastModifiedDate":"2021-10-27"},{"lineNumber":319,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":320,"author":{"gitId":"arraysius"},"content":"The abstract `Module` class serves as the base class for all modules to be inherited from. It contains essential information that must be present in every module developed for Decodex.","lastModifiedDate":"2021-10-27"},{"lineNumber":321,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":322,"author":{"gitId":"arraysius"},"content":"- `name`: The name of the module","lastModifiedDate":"2021-10-27"},{"lineNumber":323,"author":{"gitId":"arraysius"},"content":"- `description`: The description of the module","lastModifiedDate":"2021-10-27"},{"lineNumber":324,"author":{"gitId":"arraysius"},"content":"- `run(Data data)`: The abstract method to process the provided `Data`","lastModifiedDate":"2021-10-27"},{"lineNumber":325,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":326,"author":{"gitId":"arraysius"},"content":"The `name` and `description` variables must be set during the instantiation of the module, that is to say in the constructor.","lastModifiedDate":"2021-10-27"},{"lineNumber":327,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":328,"author":{"gitId":"arraysius"},"content":"The abstract `run(Data data)` method should be implemented to return a `Data` object as the purpose of this method is solely for data processing.","lastModifiedDate":"2021-10-27"},{"lineNumber":329,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":330,"author":{"gitId":"arraysius"},"content":"There are two groups of modules supported by Decodex:","lastModifiedDate":"2021-10-27"},{"lineNumber":331,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":332,"author":{"gitId":"arraysius"},"content":"- Modules that do not take in any parameters","lastModifiedDate":"2021-10-27"},{"lineNumber":333,"author":{"gitId":"arraysius"},"content":"- Modules that take in at least one parameter","lastModifiedDate":"2021-10-27"},{"lineNumber":334,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":335,"author":{"gitId":"arraysius"},"content":"Modules that do not take in any parameters","lastModifiedDate":"2021-10-27"},{"lineNumber":336,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":337,"author":{"gitId":"arraysius"},"content":"This group of modules do not require any additional parameters as their encoding and decoding processes are fixed. Hence, the constructors of these modules should not receive any parameters.","lastModifiedDate":"2021-10-27"},{"lineNumber":338,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":339,"author":{"gitId":"arraysius"},"content":"Modules that take in at least one parameter","lastModifiedDate":"2021-10-27"},{"lineNumber":340,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":341,"author":{"gitId":"arraysius"},"content":"This group of modules require at least one additional parameter as their encoding and decoding processes are dependent on the provided parameters. The constructors of these modules should receive parameters as required and stored in private variables. These variables will then be used in their respective `run(Data data)` method.","lastModifiedDate":"2021-10-27"},{"lineNumber":342,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":343,"author":{"gitId":"arraysius"},"content":"The current implementation of the abstract `Module` class provides a strong foundation to be inherited by much more complex modules, and developed into full-functioning modules for Decodex.","lastModifiedDate":"2021-10-27"},{"lineNumber":344,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":345,"author":{"gitId":"arraysius"},"content":"#### Implemented Modules:","lastModifiedDate":"2021-10-27"},{"lineNumber":346,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":347,"author":{"gitId":"arraysius"},"content":"| No Parameters                                                                                | At Least One Parameter |","lastModifiedDate":"2021-10-27"},{"lineNumber":348,"author":{"gitId":"arraysius"},"content":"| -------------------------------------------------------------------------------------------- | ---------------------- |","lastModifiedDate":"2021-10-27"},{"lineNumber":349,"author":{"gitId":"arraysius"},"content":"| Base64Encoder\u003cbr\u003eBase64Decoder\u003cbr\u003eHexEncoder\u003cbr\u003eHexDecoder\u003cbr\u003eBinaryEncoder\u003cbr\u003eBinaryDecoder | RotEncoder             |","lastModifiedDate":"2021-10-27"},{"lineNumber":350,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":351,"author":{"gitId":"arraysius"},"content":"### List of Commands","lastModifiedDate":"2021-10-27"},{"lineNumber":352,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":353,"author":{"gitId":"arraysius"},"content":"#### InputCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":354,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":355,"author":{"gitId":"arraysius"},"content":"![InputCommand](images/dg/InputCommand.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":356,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":357,"author":{"gitId":"arraysius"},"content":"When the `Parser` recognises the `input` keyword from the user input, an `InputCommand` is instantiated.","lastModifiedDate":"2021-10-27"},{"lineNumber":358,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":359,"author":{"gitId":"arraysius"},"content":"1. Create a `Data` object from the user input.","lastModifiedDate":"2021-10-27"},{"lineNumber":360,"author":{"gitId":"arraysius"},"content":"2. Set the created `Data` object as the `originalData` in the `DataManager` .","lastModifiedDate":"2021-10-27"},{"lineNumber":361,"author":{"gitId":"arraysius"},"content":"3. Prints `input` to the console.","lastModifiedDate":"2021-10-27"},{"lineNumber":362,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":363,"author":{"gitId":"arraysius"},"content":"#### ExitCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":364,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":365,"author":{"gitId":"arraysius"},"content":"![ExitCommand](images/dg/ExitCommand.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":366,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":367,"author":{"gitId":"arraysius"},"content":"When the `Parser` recognises the `exit` keyword from the user input, an `ExitCommand` is instantiated.","lastModifiedDate":"2021-10-27"},{"lineNumber":368,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":369,"author":{"gitId":"arraysius"},"content":"1. Prints the goodbye message to the console.","lastModifiedDate":"2021-10-27"},{"lineNumber":370,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":371,"author":{"gitId":"arraysius"},"content":"#### ResetCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":372,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":373,"author":{"gitId":"arraysius"},"content":"![ResetCommand](images/dg/ResetCommand.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":374,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":375,"author":{"gitId":"arraysius"},"content":"When the `Parser` recognises the `reset` keyword from the user input, a `ResetCommand` is instantiated.","lastModifiedDate":"2021-10-27"},{"lineNumber":376,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":377,"author":{"gitId":"arraysius"},"content":"1. Replace the contents of `currentData` in `DataManager` with that of `originalData`.","lastModifiedDate":"2021-10-27"},{"lineNumber":378,"author":{"gitId":"arraysius"},"content":"2. Prints a successful reset message to the console.","lastModifiedDate":"2021-10-27"},{"lineNumber":379,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":380,"author":{"gitId":"arraysius"},"content":"#### SelectCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":381,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":382,"author":{"gitId":"arraysius"},"content":"![SelectCommand](images/dg/SelectCommand.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":383,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":384,"author":{"gitId":"arraysius"},"content":"When the `Parser` recognises the `select` keyword from the user input, a `SelectCommand` is instantiated.","lastModifiedDate":"2021-10-27"},{"lineNumber":385,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":386,"author":{"gitId":"arraysius"},"content":"1. If `selectCategory` is","lastModifiedDate":"2021-10-27"},{"lineNumber":387,"author":{"gitId":"arraysius"},"content":"    1. `module`, The selected `Module` is retrieved and executed on the provided `Data`. See [SelectCommand (Module)](#selectcommand-module) for the full sequence diagram.","lastModifiedDate":"2021-10-27"},{"lineNumber":388,"author":{"gitId":"arraysius"},"content":"    2. `recipe`, The selected `Recipe` is retrieved and its `Module`objects are executed on the provided `Data`. See [SelectCommand (Recipe)](#selectcommand-recipe) for the full sequence diagram.","lastModifiedDate":"2021-10-27"},{"lineNumber":389,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":390,"author":{"gitId":"arraysius"},"content":"##### SelectCommand (Module)","lastModifiedDate":"2021-10-27"},{"lineNumber":391,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":392,"author":{"gitId":"arraysius"},"content":"![SelectCommand](images/dg/SelectCommandModule.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":393,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":394,"author":{"gitId":"arraysius"},"content":"1. Retrieves the corresponding `Module` with the provided `itemName` and `parameters` from `ModuleManager`.","lastModifiedDate":"2021-10-27"},{"lineNumber":395,"author":{"gitId":"arraysius"},"content":"2. Retrieves the current `Data` object from `DataManager`.","lastModifiedDate":"2021-10-27"},{"lineNumber":396,"author":{"gitId":"arraysius"},"content":"3. Executes the selected `Module` on the retrieved `Data` object and stores the processed content in a new `Data` object.","lastModifiedDate":"2021-10-27"},{"lineNumber":397,"author":{"gitId":"arraysius"},"content":"4. Sets the new `Data` object as the current data in `DataManager`.","lastModifiedDate":"2021-10-27"},{"lineNumber":398,"author":{"gitId":"arraysius"},"content":"5. Prints the contents of the new `Data` object to the console.","lastModifiedDate":"2021-10-27"},{"lineNumber":399,"author":{"gitId":"arraysius"},"content":"6. Retrieves the current `Data` object from `DataManager`.","lastModifiedDate":"2021-10-27"},{"lineNumber":400,"author":{"gitId":"arraysius"},"content":"7. Executes the selected `Module` on the retrieved `Data` object and creates a new `Data` object.","lastModifiedDate":"2021-10-27"},{"lineNumber":401,"author":{"gitId":"arraysius"},"content":"8. Sets the new `Data` object as the current data in `DataManager`.","lastModifiedDate":"2021-10-27"},{"lineNumber":402,"author":{"gitId":"arraysius"},"content":"9. Prints the content of the new `Data` object to the console.","lastModifiedDate":"2021-10-27"},{"lineNumber":403,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":404,"author":{"gitId":"arraysius"},"content":"##### SelectCommand (Recipe)","lastModifiedDate":"2021-10-27"},{"lineNumber":405,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":406,"author":{"gitId":"arraysius"},"content":"![SelectCommand (Recipe)](images/dg/SelectCommandRecipe.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":407,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":408,"author":{"gitId":"arraysius"},"content":"1. Retrieves the corresponding Recipe with the provided `itemName` from `RecipeManager`.","lastModifiedDate":"2021-10-27"},{"lineNumber":409,"author":{"gitId":"arraysius"},"content":"2. Retrieves the current `Data` object from `DataManager`.","lastModifiedDate":"2021-10-27"},{"lineNumber":410,"author":{"gitId":"arraysius"},"content":"3. Executes the selected `Recipe` on the retrieved `Data` object and stores the processed content in a new `Data` object.","lastModifiedDate":"2021-10-27"},{"lineNumber":411,"author":{"gitId":"arraysius"},"content":"4. Sets the new `Data` object as the current data in `DataManager`.","lastModifiedDate":"2021-10-27"},{"lineNumber":412,"author":{"gitId":"arraysius"},"content":"5. Prints the `Module`s in the `Recipe` to the console.","lastModifiedDate":"2021-10-27"},{"lineNumber":413,"author":{"gitId":"arraysius"},"content":"6. Prints the content of the new `Data` object to the console.","lastModifiedDate":"2021-10-27"},{"lineNumber":414,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":415,"author":{"gitId":"arraysius"},"content":"#### ListCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":416,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":417,"author":{"gitId":"arraysius"},"content":"![ListCommand](images/dg/ListCommand.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":418,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":419,"author":{"gitId":"arraysius"},"content":"When the `Parser` recognises the `list` keyword from the user input, a `ListCommand` is instantiated.","lastModifiedDate":"2021-10-27"},{"lineNumber":420,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":421,"author":{"gitId":"arraysius"},"content":"The `ListCommand` would then parse any optional arguments, setting the `isPrintModuleList` and `isPrintRecipeList` boolean variables appropriately.","lastModifiedDate":"2021-10-27"},{"lineNumber":422,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":423,"author":{"gitId":"arraysius"},"content":"1. If `isPrintModuleList` is true","lastModifiedDate":"2021-10-27"},{"lineNumber":424,"author":{"gitId":"arraysius"},"content":"    1. Retrieves a list of all `Module` objects from `ModuleManager`. ","lastModifiedDate":"2021-10-27"},{"lineNumber":425,"author":{"gitId":"arraysius"},"content":"    2. Prints the retrieved list of `Module` objects to the console.","lastModifiedDate":"2021-10-27"},{"lineNumber":426,"author":{"gitId":"arraysius"},"content":"2. If `isPrintRecipeList` is true","lastModifiedDate":"2021-10-27"},{"lineNumber":427,"author":{"gitId":"arraysius"},"content":"    1. Retrieves a list of all `Recipe` objects from `RecipeManager`.","lastModifiedDate":"2021-10-27"},{"lineNumber":428,"author":{"gitId":"arraysius"},"content":"    2. Prints the retrieved list of `Recipe` objects to the console.","lastModifiedDate":"2021-10-27"},{"lineNumber":429,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":430,"author":{"gitId":"Kair0s3"},"content":"### Recipe Commands","lastModifiedDate":"2021-10-27"},{"lineNumber":431,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":432,"author":{"gitId":"rizemon"},"content":"The following commands are specific to managing modules within recipes.","lastModifiedDate":"2021-10-27"},{"lineNumber":433,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":434,"author":{"gitId":"rizemon"},"content":"The command format begins with the command keyword `recipe`, followed by a subcommand keyword, and finally any arguments.","lastModifiedDate":"2021-10-27"},{"lineNumber":435,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":436,"author":{"gitId":"rizemon"},"content":"Format: `recipe \u003csubcommand\u003e {arguments}`","lastModifiedDate":"2021-10-27"},{"lineNumber":437,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":438,"author":{"gitId":"rizemon"},"content":"Example: `recipe new newRecipe`","lastModifiedDate":"2021-10-27"},{"lineNumber":439,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":440,"author":{"gitId":"Kair0s3"},"content":"#### RecipeNewCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":441,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":442,"author":{"gitId":"rizemon"},"content":"![RecipeNewCommand](images/dg/RecipeNewCommand.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":443,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":444,"author":{"gitId":"rizemon"},"content":"When the `RecipeCommandParser` recognises the `new` subcommand keyword from the user input, a `RecipeNewCommand` is instantiated.","lastModifiedDate":"2021-10-27"},{"lineNumber":445,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":446,"author":{"gitId":"rizemon"},"content":"1. Creates a new `Recipe` object with the provided `recipeName`.","lastModifiedDate":"2021-10-27"},{"lineNumber":447,"author":{"gitId":"rizemon"},"content":"2. Add the newly created `Recipe` into the `RecipeManager`.","lastModifiedDate":"2021-10-27"},{"lineNumber":448,"author":{"gitId":"rizemon"},"content":"3. Sets `recipeName` as the `editingRecipeName` in `RecipeManager`.","lastModifiedDate":"2021-10-27"},{"lineNumber":449,"author":{"gitId":"rizemon"},"content":"4. Prints a successful creation message to the console.","lastModifiedDate":"2021-10-27"},{"lineNumber":450,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":451,"author":{"gitId":"Kair0s3"},"content":"#### RecipeSelectCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":452,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":453,"author":{"gitId":"rizemon"},"content":"![RecipeSelectCommand](images/dg/RecipeSelectCommand.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":454,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":455,"author":{"gitId":"rizemon"},"content":"When the `RecipeCommandParser` recognises the `select` subcommand keyword from the user input, a `RecipeSelectCommand` is instantiated.","lastModifiedDate":"2021-10-27"},{"lineNumber":456,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":457,"author":{"gitId":"rizemon"},"content":"1. Retrieves the `Recipe` corresponding with the provided `recipeName` from `RecipeManager`.","lastModifiedDate":"2021-10-27"},{"lineNumber":458,"author":{"gitId":"rizemon"},"content":"2. Sets `recipeName` as the `editingRecipeName` in `RecipeManager`.","lastModifiedDate":"2021-10-27"},{"lineNumber":459,"author":{"gitId":"rizemon"},"content":"3. Prints a successful selection message containing the `recipeName` to the console.","lastModifiedDate":"2021-10-27"},{"lineNumber":460,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":461,"author":{"gitId":"Kair0s3"},"content":"#### RecipeListCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":462,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":463,"author":{"gitId":"rizemon"},"content":"![RecipeListCommand](images/dg/RecipeListCommand.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":464,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":465,"author":{"gitId":"rizemon"},"content":"When the `RecipeCommandParser` recognises the `list` subcommand keyword from the user input, a `RecipeListCommand` is instantiated.","lastModifiedDate":"2021-10-27"},{"lineNumber":466,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":467,"author":{"gitId":"rizemon"},"content":"1. If `recipeName` is","lastModifiedDate":"2021-10-27"},{"lineNumber":468,"author":{"gitId":"rizemon"},"content":"   1. blank, the `Recipe` with the current `editingRecipeName` is retrieved.","lastModifiedDate":"2021-10-27"},{"lineNumber":469,"author":{"gitId":"rizemon"},"content":"   2. not blank, the `Recipe` with `recipeName` is retrieved.","lastModifiedDate":"2021-10-27"},{"lineNumber":470,"author":{"gitId":"rizemon"},"content":"2. Retrieves the list of `Module` objects belonging to the `Recipe` with `recipeName`.","lastModifiedDate":"2021-10-27"},{"lineNumber":471,"author":{"gitId":"rizemon"},"content":"3. Prints the names and parameters of each `Module` object in the retrieved list.","lastModifiedDate":"2021-10-27"},{"lineNumber":472,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":473,"author":{"gitId":"Kair0s3"},"content":"#### RecipePushCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":474,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":475,"author":{"gitId":"rizemon"},"content":"![RecipePushCommand](images/dg/RecipePushCommand.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":476,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":477,"author":{"gitId":"rizemon"},"content":"When the `RecipeCommandParser` recognises the `push` subcommand keyword from the user input, a `RecipePushCommand` is instantiated.","lastModifiedDate":"2021-10-27"},{"lineNumber":478,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":479,"author":{"gitId":"rizemon"},"content":"1. Retrieves the corresponding `Module` with the provided `moduleName` and `parameters` from `ModuleManager`.","lastModifiedDate":"2021-10-27"},{"lineNumber":480,"author":{"gitId":"rizemon"},"content":"2. Retrieves the current editing `Recipe`.","lastModifiedDate":"2021-10-27"},{"lineNumber":481,"author":{"gitId":"rizemon"},"content":"3. Adds the retrieved `Module` into the current editing `Recipe`.","lastModifiedDate":"2021-10-27"},{"lineNumber":482,"author":{"gitId":"rizemon"},"content":"4. Prints the a message of the added `Module` to the console.","lastModifiedDate":"2021-10-27"},{"lineNumber":483,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":484,"author":{"gitId":"Kair0s3"},"content":"#### RecipePopCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":485,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":486,"author":{"gitId":"rizemon"},"content":"![RecipePopCommand](images/dg/RecipePopCommand.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":487,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":488,"author":{"gitId":"rizemon"},"content":"When the `RecipeCommandParser` recognises the `pop` subcommand keyword from the user input, a `RecipePopCommand` is instantiated.","lastModifiedDate":"2021-10-27"},{"lineNumber":489,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":490,"author":{"gitId":"rizemon"},"content":"1. Retrieves the latest `Module` added to the `Recipe`, and removes it from the `Recipe` after retrieval.","lastModifiedDate":"2021-10-27"},{"lineNumber":491,"author":{"gitId":"rizemon"},"content":"2. Retrieves the current editing `Recipe`.","lastModifiedDate":"2021-10-27"},{"lineNumber":492,"author":{"gitId":"rizemon"},"content":"3. Prints the a message of the removed `Module` to the console.","lastModifiedDate":"2021-10-27"},{"lineNumber":493,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":494,"author":{"gitId":"Kair0s3"},"content":"#### RecipeResetCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":495,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":496,"author":{"gitId":"rizemon"},"content":"![RecipeResetCommand](images/dg/RecipeResetCommand.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":497,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":498,"author":{"gitId":"rizemon"},"content":"When the `RecipeCommandParser` recognises the `Reset` subcommand keyword from the user input, a `RecipeResetCommand` is instantiated.","lastModifiedDate":"2021-10-27"},{"lineNumber":499,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":500,"author":{"gitId":"rizemon"},"content":"1. Retrieves the `Recipe` with the current `editingRecipeName` is retrieved.","lastModifiedDate":"2021-10-27"},{"lineNumber":501,"author":{"gitId":"rizemon"},"content":"2. Removes all modules contained in the `Recipe`","lastModifiedDate":"2021-10-27"},{"lineNumber":502,"author":{"gitId":"rizemon"},"content":"3. Prints a successful reset message containing the `recipeName` to the console.","lastModifiedDate":"2021-10-27"},{"lineNumber":503,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":504,"author":{"gitId":"Kair0s3"},"content":"#### RecipeDeleteCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":505,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":506,"author":{"gitId":"rizemon"},"content":"![RecipeDeleteCommand](images/dg/RecipeDeleteCommand.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":508,"author":{"gitId":"rizemon"},"content":"When the `RecipeCommandParser` recognises the `delete` subcommand keyword from the user input, a `RecipeDeleteCommand` is instantiated.","lastModifiedDate":"2021-10-27"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":510,"author":{"gitId":"rizemon"},"content":"1. Removes the `Recipe` with the `recipeName` from `RecipeManager`.","lastModifiedDate":"2021-10-27"},{"lineNumber":511,"author":{"gitId":"rizemon"},"content":"2. Prints `recipeName` as the deleted `Recipe` to the console.","lastModifiedDate":"2021-10-27"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":513,"author":{"gitId":"arraysius"},"content":"## Appendix A: Product Scope","lastModifiedDate":"2021-10-21"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":515,"author":{"gitId":"Kair0s3"},"content":"### Target User Profile","lastModifiedDate":"2021-10-27"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":517,"author":{"gitId":"Kair0s3"},"content":"1. Prefer using CLI over other types","lastModifiedDate":"2021-10-27"},{"lineNumber":518,"author":{"gitId":"Kair0s3"},"content":"2. Can type fast","lastModifiedDate":"2021-10-27"},{"lineNumber":519,"author":{"gitId":"Kair0s3"},"content":"3. Does Capture-the-flag (CTF) competitions","lastModifiedDate":"2021-10-27"},{"lineNumber":520,"author":{"gitId":"Kair0s3"},"content":"4. Requires to use multiple data manipulation techniques at once","lastModifiedDate":"2021-10-27"},{"lineNumber":521,"author":{"gitId":"Kair0s3"},"content":"5. Is comfortable with CLI","lastModifiedDate":"2021-10-27"},{"lineNumber":522,"author":{"gitId":"Kair0s3"},"content":"6. May be for both normal and expert users (in terms of technical capabilities)","lastModifiedDate":"2021-10-27"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":524,"author":{"gitId":"Kair0s3"},"content":"### Value Proposition","lastModifiedDate":"2021-10-27"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":526,"author":{"gitId":"Kair0s3"},"content":"This application helps users (mainly CTF players) to quickly transform data from one format to another (e.g., from plain text to base64-encoded text). It includes features such as the ability to perform basic data transformations with a few simple commands. Furthermore, it also includes the use of recipes to allow for multiple modules to be executed in sequence, which would be useful when multiple consecutive data transformations are needed.","lastModifiedDate":"2021-10-27"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":528,"author":{"gitId":"Kair0s3"},"content":"To sum it up, this application helps users to reduce the time needed to transform data from one form to another, especially when consecutive data transformations are required.","lastModifiedDate":"2021-10-27"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":530,"author":{"gitId":"arraysius"},"content":"## Appendix B: User Stories","lastModifiedDate":"2021-10-21"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":532,"author":{"gitId":"Kair0s3"},"content":"| version | priority | as a ...        | I want to...                                 | so that i can ...                                        |","lastModifiedDate":"2021-10-27"},{"lineNumber":533,"author":{"gitId":"arraysius"},"content":"| ------- | -------- | --------------- | -------------------------------------------- | -------------------------------------------------------- |","lastModifiedDate":"2021-10-27"},{"lineNumber":534,"author":{"gitId":"Kair0s3"},"content":"| V1.0    | ***      | user            | input data                                   | perform data manipulation on it                          |","lastModifiedDate":"2021-10-27"},{"lineNumber":535,"author":{"gitId":"Kair0s3"},"content":"| V1.0    | ***      | user            | see the output of my processed data          | see the effects of the change                            |","lastModifiedDate":"2021-10-27"},{"lineNumber":536,"author":{"gitId":"Kair0s3"},"content":"| V1.0    | ***      | user            | view a list of modules                       | see what modules I can use on my data                    |","lastModifiedDate":"2021-10-27"},{"lineNumber":537,"author":{"gitId":"Kair0s3"},"content":"| V1.0    | ***      | user            | add a module                                 | decided to process data with the selected module         |","lastModifiedDate":"2021-10-27"},{"lineNumber":538,"author":{"gitId":"Kair0s3"},"content":"| V1.0    | ***      | user            | run a module                                 | process data with the selected module                    |","lastModifiedDate":"2021-10-27"},{"lineNumber":539,"author":{"gitId":"Kair0s3"},"content":"| V2.0    | ***      | user            | create a new recipe                          | create different combinations of module chains           |","lastModifiedDate":"2021-10-27"},{"lineNumber":540,"author":{"gitId":"Kair0s3"},"content":"| V2.0    | ***      | user            | view a list of modules while creating recipe | decide what modules to be added to the recipe            |","lastModifiedDate":"2021-10-27"},{"lineNumber":541,"author":{"gitId":"Kair0s3"},"content":"| V2.0    | ***      | user            | add a module to the recipe                   | use it process my data                                   |","lastModifiedDate":"2021-10-27"},{"lineNumber":542,"author":{"gitId":"Kair0s3"},"content":"| V1.0    | **       | user            | remove all modules in the recipe             | see my original input data                               |","lastModifiedDate":"2021-10-27"},{"lineNumber":543,"author":{"gitId":"Kair0s3"},"content":"| V2.0    | **       | expert user     | read input data from a file                  | process data that are not printable or terminal-friendly |","lastModifiedDate":"2021-10-27"},{"lineNumber":544,"author":{"gitId":"Kair0s3"},"content":"| V2.0    | **       | expert user     | edit the exported recipes                    | inspect and modify it in an editor                       |","lastModifiedDate":"2021-10-27"},{"lineNumber":545,"author":{"gitId":"Kair0s3"},"content":"| V2.0    | **       | user            | see the list of the commands                 | know what commands I can use                             |","lastModifiedDate":"2021-10-27"},{"lineNumber":546,"author":{"gitId":"Kair0s3"},"content":"| V2.0    | **       | user            | see the syntax of the commands               | know how to use the commands                             |","lastModifiedDate":"2021-10-27"},{"lineNumber":547,"author":{"gitId":"Kair0s3"},"content":"| V2.0    | **       | CTF Participant | save my decoded output                       | reuse the output later                                   |","lastModifiedDate":"2021-10-27"},{"lineNumber":548,"author":{"gitId":"Kair0s3"},"content":"| V2.0    | **       | user            | import recipes from a file                   | I do not have to create the recipe from scratch/manually |","lastModifiedDate":"2021-10-27"},{"lineNumber":549,"author":{"gitId":"Kair0s3"},"content":"| V2.0    | **       | user            | save my recipes to a file                    | I can reuse the recipe on a different computer           |","lastModifiedDate":"2021-10-27"},{"lineNumber":550,"author":{"gitId":"Kair0s3"},"content":"| V2.0    | **       | user            | list the recipes I have                      | use them again                                           |","lastModifiedDate":"2021-10-27"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":552,"author":{"gitId":"Kair0s3"},"content":"## Appendix C: Non-Functional Requirements","lastModifiedDate":"2021-10-27"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":554,"author":{"gitId":"Kair0s3"},"content":"1. Should work on any *mainstream OS* as long as it has Java `11` or above installed.","lastModifiedDate":"2021-10-27"},{"lineNumber":555,"author":{"gitId":"Kair0s3"},"content":"2. Should be able to have up to 20 recipes without any impact on the performance.","lastModifiedDate":"2021-10-27"},{"lineNumber":556,"author":{"gitId":"Kair0s3"},"content":"3. A CTF participant should be able to work more efficiently on their CTF challenges compared to manual scripting in terms of time.","lastModifiedDate":"2021-10-27"},{"lineNumber":557,"author":{"gitId":"Kair0s3"},"content":"4. A user should be able to comfortably use and understand the application if they are within the IT field.","lastModifiedDate":"2021-10-27"},{"lineNumber":558,"author":{"gitId":"Kair0s3"},"content":"5. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-10-27"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":560,"author":{"gitId":"arraysius"},"content":"## Appendix D: Glossary","lastModifiedDate":"2021-10-21"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":562,"author":{"gitId":"Kair0s3"},"content":"- **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2021-10-27"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":564,"author":{"gitId":"arraysius"},"content":"## Appendix E: Instructions for Manual Testing","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"rizemon":84,"arraysius":243,"Kair0s3":102,"SeenFang":109,"-":26}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"# Decodex","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"Decodex is a **Command Line Interface (CLI) application for Capture-The-Flag (CTF) players to quickly transform data from one format to another with extreme ease**. The intuitive interaction can help speed up a player\u0027s performance during CTFs and save time without having to manually code the tedious data transformations.","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"arraysius":2,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"# Decodex User Guide \u003c!-- omit in toc --\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"Decodex is a **Command Line Interface (CLI) application for Capture-The-Flag (CTF) players to quickly process data from one encoding format to another with extreme ease**. It also allows you to build recipes, sequences of data processing instructions, to speed up repetitive tasks. The intuitive interaction can help speed up a player\u0027s performance during CTFs and save time without having to manually code the tedious data transformations.","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":"This guide serves to help you understand the usage of the program to encode and decode data, as well as create recipes to automate multiple encoding or decoding processes in sequence.","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"\u003e :information_source: This user guide is tailored for CTF players who have basic understanding of information security concepts.","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"Kair0s3"},"content":"![carbon(6).png](images/carbon(6).png)","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"## Table of Contents \u003c!-- omit in toc --\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"arraysius"},"content":"- [Introduction](#introduction)","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"arraysius"},"content":"- [Terminologies](#terminologies)","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"arraysius"},"content":"- [Symbols](#symbols)","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"arraysius"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"- [List of Available Modules](#list-of-available-modules)","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"arraysius"},"content":"- [Features](#features)","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"arraysius"},"content":"  - [Understanding the Application\u0027s Prompt](#understanding-the-applications-prompt)","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"Kair0s3"},"content":"  - [Basic Commands](#basic-commands)","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"arraysius"},"content":"    - [Input of Data: `input`](#input-of-data-input)","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"arraysius"},"content":"    - [List Available Modules or Recipes: `list`](#list-available-modules-or-recipes-list)","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"arraysius"},"content":"    - [Selecting a Module or Recipe: `select`](#selecting-a-module-or-recipe-select)","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"arraysius"},"content":"    - [Resetting Data: `reset`](#resetting-data-reset)","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"arraysius"},"content":"    - [Exiting the Program: `exit`](#exiting-the-program-exit)","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"arraysius"},"content":"  - [Recipe Commands: `recipe`](#recipe-commands-recipe)","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"arraysius"},"content":"    - [Create a New Recipe: `recipe new`](#create-a-new-recipe-recipe-new)","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"arraysius"},"content":"    - [Select a Recipe for Editing: `recipe select`](#select-a-recipe-for-editing-recipe-select)","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"arraysius"},"content":"    - [List Modules in a Recipe: `recipe list`](#list-modules-in-a-recipe-recipe-list)","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"arraysius"},"content":"    - [Add a Module to a Recipe: `recipe push`](#add-a-module-to-a-recipe-recipe-push)","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"arraysius"},"content":"    - [Remove a Module from a Recipe: `recipe pop`](#remove-a-module-from-a-recipe-recipe-pop)","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"arraysius"},"content":"    - [Clear All Modules in a Recipe: `recipe reset`](#clear-all-modules-in-a-recipe-recipe-reset)","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"arraysius"},"content":"    - [Delete a Recipe: `recipe delete`](#delete-a-recipe-recipe-delete)","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"arraysius"},"content":"  - [Saving Recipe to File](#saving-recipe-to-file)","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"arraysius"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"arraysius"},"content":"- [FAQ](#faq)","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"## Terminologies","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"arraysius"},"content":"This section serves to help you better understand the terminologies used in this user guide.","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"arraysius"},"content":"| Data transformation         | The conversion of one data format to another.                                                                                                                 |","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"arraysius"},"content":"| --------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"| Application, Program        | Refers to the Decodex program. This two terms are used interchangeably in this User Guide.                                                                    |","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"arraysius"},"content":"| Encoding                    | Convert a message into a coded form.                                                                                                                          |","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"arraysius"},"content":"| Decoding                    | Convert a coded message into an intelligible form.                                                                                                            |","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"| Base64, Binary, Hexadecimal | Common types of data encoding standards.                                                                                                                      |","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"| Console                     | This refers to your command prompt window.                                                                                                                    |","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"| Argument                    | The additional information you provide to the program\u0027s command.                                                                                              |","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"| Module                      | A self-contained set of instructions to process your data into another form.                                                                                  |","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"| Recipe                      | Acts as a container for you to select your modules. When multiple modules are selected, this forms a \"module chain\". By default, you do not have any recipes. |","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"arraysius"},"content":"## Symbols","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"arraysius"},"content":"| Symbol               | Definition                                                                                                |","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"arraysius"},"content":"| -------------------- | --------------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"arraysius"},"content":"| :bulb:               | Represents a good tip for you.                                                                            |","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"arraysius"},"content":"| :exclamation:        | Represents something important that you should take note of.                                              |","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"arraysius"},"content":"| :information_source: | Represents additional information regarding commands/features for you to better understand how to use it. |","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"arraysius"},"content":"| :video_game:         | Represents something optional that you can try out, mostly for exploring or fun.                          |","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"arraysius"},"content":"1. Ensure you have Java version `11` or above installed on your computer.","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"arraysius"},"content":"   1. If you haven\u0027t, you may download it [here](https://www.oracle.com/java/technologies/downloads/#java11-linux).","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"Kair0s3"},"content":"    \u003e :exclamation: You should download the installation relative to your Operating System.","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"arraysius"},"content":"2. Next, download the latest `decodex.jar` [here](https://github.com/AY2122S1-CS2113T-T10-3/tp/releases).","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"rizemon"},"content":"   1. Simply click on the `decodex.jar` under \"Assets\" and the download should start.","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"rizemon"},"content":"3. After downloading, you can open up `command prompt`.","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"Kair0s3"},"content":"    \u003e :bulb: To open command prompt, press `win + r` at the same time, then type and enter `cmd`.","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"arraysius"},"content":"4. Afterwards, you can run `decodex.jar` by typing in `java -jar decodex.jar` and Decodex\u0027s prompt should appear. Please also ensure that you are in the same directory as where you have downloaded `decodex.jar`.","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"arraysius"},"content":"   1. In the screenshot below, `decodex.jar` is located in the `Downloads` folder.","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"rizemon"},"content":"   ![carbon(23).png](images/carbon(23).png)","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"arraysius"},"content":"5. You can try out some of the basic commands below:","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"arraysius"},"content":"   1. `input I am groot`:  Inputs the text data `I am groot` into the program.","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"rizemon"},"content":"   2. `list`: Lists all available modules and recipes that you can use.","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"rizemon"},"content":"   3. `select module base64encode`: Selects and runs the base64-encoding module on the data.","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"rizemon"},"content":"   4. `reset`: Resets the changes made to data - resetting to its original data.","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"rizemon"},"content":"   5. `exit`: Exits the application.","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"Kair0s3"},"content":"   \u003e :video_game: Side-Quest! You may try to find out what `NTEgMzEgNTIgNDcgNjUgMzAgNGUgNTQgNGQgNmEgNDUgNzggNGQgMzEgNTIgMzk\u003d`","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"Kair0s3"},"content":"   \u003e using our application! If you are new here, you can continue reading this guide to understand how to unravel this mysterious text!","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"rizemon"},"content":"6. For more information on Decodex\u0027s features, please refer to the Features Section.","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"rizemon"},"content":"## List of Available Modules","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"rizemon"},"content":"1. Base64","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"rizemon"},"content":"   1. `base64encode` - Encodes the data using base64 format","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"rizemon"},"content":"   2. `base64decode` - Decodes the data using base64 format","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"rizemon"},"content":"2. Hexadecimal","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"rizemon"},"content":"   1. `hexencode` - Converts the input string to hexadecimal bytes","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"rizemon"},"content":"   2. `hexdecode` - Converts a hexadecimal string back into its raw value","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"rizemon"},"content":"3. Binary","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"rizemon"},"content":"   1. `binencode` - Encodes the data using binary format","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"rizemon"},"content":"   2. `bindecode` - Decodes the data using binary format","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"rizemon"},"content":"4. Rotational Cipher","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"rizemon"},"content":"   1. `rotencode` - Rotates alphabetical characters by a specified integer offset","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"rizemon"},"content":"\u003e :information_source: These are some of the more common encoding/decoding/cipher methods that can be found in CTF competitions.","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"rizemon"},"content":"## Features","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":104,"author":{"gitId":"rizemon"},"content":"\u003e :information_source: Arguments enclosed in `\u003c\u003e` are **mandatory** arguments while arguments enclosed in `{}` are **optional** arguments. For example, `select \u003cmoduleName\u003e {moduleArgument}` would mean that `moduleName` is mandatory while `moduleArgument` is optional.","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"rizemon"},"content":"\u003e :information_source: Arguments must be entered in the **exact order and position** as specified in the commands\u0027 respective formats.","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"rizemon"},"content":"\u003e :information_source: All commands and arguments are **case-sensitive**.","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"rizemon"},"content":"### Understanding the Application\u0027s Prompt","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"rizemon"},"content":"![carbon(17).png](images/carbon(17).png)","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"rizemon"},"content":"After running the program, it would display a prompt showing the name of the program `Decodex` , followed by the name of the recipe that is \"currently being edited\" (if any) in `[]`. This currently edited recipe will be the target for some `recipe` commands such as `recipe push`, `recipe pop` and `recipe reset`.","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"rizemon"},"content":"### Basic Commands","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"arraysius"},"content":"#### Input of Data: `input`","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"rizemon"},"content":"Stores the data to be processed by modules.","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"rizemon"},"content":"Format: `input \u003cdata\u003e`","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"rizemon"},"content":"\u003e :information_source: `data` will be treated as text.","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"rizemon"},"content":"Examples:","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"Kair0s3"},"content":"- `input HelloWorld!` Enters plain text as data.","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"Kair0s3"},"content":"- `input SGVsbG9Xb3JsZA\u003d\u003d` Enters base64-encoded data.","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"Kair0s3"},"content":"![carbon(1).png](images/ug/inputCommandExample.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"rizemon"},"content":"\u003e :exclamation: Note that the program will consider all characters as data following the first space character in the input command. You may observe the leading and trailing whitespaces in the output.","lastModifiedDate":"2021-10-29"},{"lineNumber":134,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":135,"author":{"gitId":"rizemon"},"content":"\u003e :exclamation: Non-printable characters (e.g. null characters) may not be correctly displayed and could potentially scramble the user interface.","lastModifiedDate":"2021-10-29"},{"lineNumber":136,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":137,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":138,"author":{"gitId":"Kair0s3"},"content":"#### List available modules or recipes: `list`","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"Kair0s3"},"content":"Shows a list of all available modules or recipes.","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"Kair0s3"},"content":"Format: `list {category}`","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"Kair0s3"},"content":"\u003e :information_source: The acceptable values of `category` are `modules` and `recipes` .","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"Kair0s3"},"content":"\u003e :information_source: When `category` is not specified, both lists of modules and recipes are printed.","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"Kair0s3"},"content":"Examples:","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":150,"author":{"gitId":"Kair0s3"},"content":"- `list` Lists modules and recipes.","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"Kair0s3"},"content":"- `list modules` Lists available modules.","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"Kair0s3"},"content":"- `list recipes` Lists available recipes.","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"Kair0s3"},"content":"![carbon(8).png](images/ug/ListCommandExample.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"arraysius"},"content":"#### Selecting a Module or Recipe: `select`","lastModifiedDate":"2021-10-27"},{"lineNumber":157,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"Kair0s3"},"content":"Selects a module or recipe and processes the data accordingly. Subsequent selection of modules or recipes will process the transformed data output from the previous module or recipe.","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"Kair0s3"},"content":"Format: `select module \u003cmoduleName\u003e {moduleArgument}`, `select recipe \u003crecipeName\u003e`","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"Kair0s3"},"content":"\u003e :information_source: `moduleName` is the name of an available module supported by Decodex. `moduleArgument` is an argument that certain modules accept as input.","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"Kair0s3"},"content":"\u003e :information_source: `recipeName` is the name of an available recipe that is loaded by the program.","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":166,"author":{"gitId":"arraysius"},"content":"Examples:","lastModifiedDate":"2021-10-11"},{"lineNumber":167,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"Kair0s3"},"content":"- `select module base64decode` Runs the `base64decode` module on the current data.","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"Kair0s3"},"content":"- `select module rotencode 13` Runs the `rotencode` module with argument `13` on the current data.","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"Kair0s3"},"content":"- `select recipe testRecipe1` Runs the `testRecipe1` recipe on the current data.","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":172,"author":{"gitId":"Kair0s3"},"content":"![carbon(9).png](images/ug/SelectCommandExample.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":173,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":174,"author":{"gitId":"arraysius"},"content":"#### Resetting Data: `reset`","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"rizemon"},"content":"Resets the transformed data back to the original input.","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"rizemon"},"content":"Format: `reset`","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"arraysius"},"content":"#### Exiting the Program: `exit`","lastModifiedDate":"2021-10-27"},{"lineNumber":181,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"SeenFang"},"content":"Exit the program.","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"SeenFang"},"content":"Format: `exit`","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"Kair0s3"},"content":"\u003e :video_game: If you are trying out the side-quest from earlier and can\u0027t seem to find the solution to it, you may refer to the solution in the picture at the start of the user guide!","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":188,"author":{"gitId":"rizemon"},"content":"### Recipe Commands: `recipe`","lastModifiedDate":"2021-10-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":190,"author":{"gitId":"rizemon"},"content":"#### Create a New Recipe: `recipe new`","lastModifiedDate":"2021-10-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":192,"author":{"gitId":"SeenFang"},"content":"Creates a new recipe and sets it as currently being edited.","lastModifiedDate":"2021-10-27"},{"lineNumber":193,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"SeenFang"},"content":"Format: `recipe new \u003crecipeName\u003e`","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":196,"author":{"gitId":"SeenFang"},"content":"Example:","lastModifiedDate":"2021-10-27"},{"lineNumber":197,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":198,"author":{"gitId":"SeenFang"},"content":"- `recipe new testRecipe` Creates a new recipe with the name `testRecipe`.","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":200,"author":{"gitId":"SeenFang"},"content":"![recipeNew.png](images/recipeNew.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":201,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":202,"author":{"gitId":"rizemon"},"content":"#### Select a Recipe for Editing: `recipe select`","lastModifiedDate":"2021-10-29"},{"lineNumber":203,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":204,"author":{"gitId":"SeenFang"},"content":"Sets a recipe as currently being edited.","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":206,"author":{"gitId":"SeenFang"},"content":"Format: `recipe select \u003crecipeName\u003e`","lastModifiedDate":"2021-10-27"},{"lineNumber":207,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":208,"author":{"gitId":"SeenFang"},"content":"Example:","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"SeenFang"},"content":"- `recipe select testRecipe` Selects `testRecipe` as the recipe to be edited.","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"SeenFang"},"content":"![recipeSelect.png](images/recipeSelect.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":214,"author":{"gitId":"rizemon"},"content":"#### List Modules in a Recipe: `recipe list`","lastModifiedDate":"2021-10-29"},{"lineNumber":215,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":216,"author":{"gitId":"SeenFang"},"content":"Show all the modules in a recipe, in the order they were added.","lastModifiedDate":"2021-10-27"},{"lineNumber":217,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":218,"author":{"gitId":"SeenFang"},"content":"Format: `recipe list \u003crecipeName\u003e`","lastModifiedDate":"2021-10-27"},{"lineNumber":219,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":220,"author":{"gitId":"SeenFang"},"content":"Example:","lastModifiedDate":"2021-10-27"},{"lineNumber":221,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":222,"author":{"gitId":"SeenFang"},"content":"- `recipe list testRecipe` Lists the modules in the recipe named `testRecipe`.","lastModifiedDate":"2021-10-27"},{"lineNumber":223,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":224,"author":{"gitId":"SeenFang"},"content":"![recipeList.png](images/recipeList.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":225,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":226,"author":{"gitId":"rizemon"},"content":"#### Add a Module into a Recipe: `recipe push`","lastModifiedDate":"2021-10-29"},{"lineNumber":227,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":228,"author":{"gitId":"SeenFang"},"content":"Adds a module into the recipe that is currently being edited.","lastModifiedDate":"2021-10-27"},{"lineNumber":229,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":230,"author":{"gitId":"SeenFang"},"content":"Format: `recipe push \u003cmoduleName\u003e {moduleArgument}`","lastModifiedDate":"2021-10-27"},{"lineNumber":231,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":232,"author":{"gitId":"SeenFang"},"content":"Example:","lastModifiedDate":"2021-10-27"},{"lineNumber":233,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":234,"author":{"gitId":"SeenFang"},"content":"- `recipe push base64encode` Adds the `base64encode` module into the current editing recipe.","lastModifiedDate":"2021-10-27"},{"lineNumber":235,"author":{"gitId":"SeenFang"},"content":"- `recipe push rotencode 13` Adds the `rotencode` module with a single argument `13` into the current editing recipe.","lastModifiedDate":"2021-10-27"},{"lineNumber":236,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":237,"author":{"gitId":"SeenFang"},"content":"![recipePush.png](images/recipePush.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":238,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":239,"author":{"gitId":"rizemon"},"content":"#### Remove a Module from a Recipe: `recipe pop`","lastModifiedDate":"2021-10-29"},{"lineNumber":240,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":241,"author":{"gitId":"SeenFang"},"content":"Removes the most recently added module from the recipe that is currently being edited.","lastModifiedDate":"2021-10-27"},{"lineNumber":242,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":243,"author":{"gitId":"SeenFang"},"content":"Format: `recipe pop`","lastModifiedDate":"2021-10-27"},{"lineNumber":244,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":245,"author":{"gitId":"SeenFang"},"content":"![recipePop.png](images/recipePop.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":246,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":247,"author":{"gitId":"rizemon"},"content":"#### Clear All Modules in a Recipe: `recipe reset`","lastModifiedDate":"2021-10-29"},{"lineNumber":248,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":249,"author":{"gitId":"SeenFang"},"content":"Removes all modules from the recipe that is currently being edited.","lastModifiedDate":"2021-10-27"},{"lineNumber":250,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":251,"author":{"gitId":"SeenFang"},"content":"Format: `recipe reset`","lastModifiedDate":"2021-10-27"},{"lineNumber":252,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":253,"author":{"gitId":"SeenFang"},"content":"![recipeReset.png](images/recipeReset.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":254,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":255,"author":{"gitId":"rizemon"},"content":"#### Delete a Recipe: `recipe delete`","lastModifiedDate":"2021-10-29"},{"lineNumber":256,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":257,"author":{"gitId":"SeenFang"},"content":"Deletes a recipe from the program.","lastModifiedDate":"2021-10-27"},{"lineNumber":258,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":259,"author":{"gitId":"SeenFang"},"content":"Format: `recipe delete \u003crecipeName\u003e`","lastModifiedDate":"2021-10-27"},{"lineNumber":260,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":261,"author":{"gitId":"SeenFang"},"content":"Example:","lastModifiedDate":"2021-10-27"},{"lineNumber":262,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":263,"author":{"gitId":"SeenFang"},"content":"- `recipe delete testRecipe` Deletes the recipe with the name `testRecipe`.","lastModifiedDate":"2021-10-27"},{"lineNumber":264,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":265,"author":{"gitId":"SeenFang"},"content":"![recipeDelete.png](images/recipeDelete.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":266,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":267,"author":{"gitId":"SeenFang"},"content":"## Saving Recipe to File","lastModifiedDate":"2021-10-27"},{"lineNumber":268,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":269,"author":{"gitId":"SeenFang"},"content":"Saves the recipe into a file. However, this is done automatically for you, so that it is less punishing for you (especially if you often forget to save your documents before exiting).","lastModifiedDate":"2021-10-27"},{"lineNumber":270,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":271,"author":{"gitId":"SeenFang"},"content":"How it works:","lastModifiedDate":"2021-10-27"},{"lineNumber":272,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":273,"author":{"gitId":"SeenFang"},"content":"Every time you add a recipe into Decodex, it will save this new recipe into a text file, with the recipe name as the file name, in the `recipe/` folder. Furthermore, any adding or removing of modules from this recipe would also update the corresponding recipe save file.","lastModifiedDate":"2021-10-27"},{"lineNumber":274,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":275,"author":{"gitId":"SeenFang"},"content":"Example:","lastModifiedDate":"2021-10-27"},{"lineNumber":276,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":277,"author":{"gitId":"SeenFang"},"content":"If you create a new recipe called \"onlyForMe\" in Decodex, this will create \"onlyForMe.txt\" which you can find in the `recipe/` folder. And whenever you run the `recipe push` or `recipe pop` command, it will update \"onlyForMe.txt\" accordingly.","lastModifiedDate":"2021-10-27"},{"lineNumber":278,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":279,"author":{"gitId":"SeenFang"},"content":"## Reading/writing data from/to file `[coming soon in the future]`","lastModifiedDate":"2021-10-27"},{"lineNumber":280,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":281,"author":{"gitId":"SeenFang"},"content":"Coming soon to a cinema near you in the future*…*","lastModifiedDate":"2021-10-27"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":283,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2021-10-21"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":285,"author":{"gitId":"Kair0s3"},"content":"| Action                          | Command Format                                               | Example Usage                                                                         |","lastModifiedDate":"2021-10-11"},{"lineNumber":286,"author":{"gitId":"Kair0s3"},"content":"|---------------------------------|--------------------------------------------------------------|---------------------------------------------------------------------------------------|","lastModifiedDate":"2021-10-27"},{"lineNumber":287,"author":{"gitId":"Kair0s3"},"content":"| Enter input data                | `input \u003cdata\u003e`                                               | `input HelloWorld!`                                                                   |","lastModifiedDate":"2021-10-27"},{"lineNumber":288,"author":{"gitId":"Kair0s3"},"content":"| List available modules/recipe   | `list {category}`                                            | `list` `list module` \u003cbr\u003e`list recipe`                                                    |","lastModifiedDate":"2021-10-29"},{"lineNumber":289,"author":{"gitId":"Kair0s3"},"content":"| Select processing module/recipe | `select module \u003cmoduleName\u003e` \u003cbr\u003e\u0026ensp;OR\u003cbr\u003e `select recipe \u003crecipeName\u003e` | `select module base64decode`\u003cbr\u003e `select module rotencode 13` `select recipe testRecipe1` |","lastModifiedDate":"2021-10-29"},{"lineNumber":290,"author":{"gitId":"SeenFang"},"content":"| Reset to original data          | `reset`                                                      | `reset`                                                                               |","lastModifiedDate":"2021-10-12"},{"lineNumber":291,"author":{"gitId":"Kair0s3"},"content":"| Create new recipe               | `recipe new \u003crecipeName\u003e`                                    | `recipe new testRecipe`                                                               |","lastModifiedDate":"2021-10-27"},{"lineNumber":292,"author":{"gitId":"Kair0s3"},"content":"| Select recipe for editing       | `recipe select \u003crecipeName\u003e`                                 | `recipe select testRecipe`                                                            |","lastModifiedDate":"2021-10-27"},{"lineNumber":293,"author":{"gitId":"Kair0s3"},"content":"| List modules in recipe          | `recipe list \u003crecipeName\u003e`                                   | `recipe list testRecipe`                                                              |","lastModifiedDate":"2021-10-27"},{"lineNumber":294,"author":{"gitId":"Kair0s3"},"content":"| Add module to recipe            | `recipe push \u003cmoduleName\u003e {moduleArgument}`                  | `recipe push base64encode`\u003cbr\u003e `recipe push rotencode 13`                                 |","lastModifiedDate":"2021-10-29"},{"lineNumber":295,"author":{"gitId":"Kair0s3"},"content":"| Remove module from recipe       | `recipe pop`                                                 | `recipe pop`                                                                          |","lastModifiedDate":"2021-10-27"},{"lineNumber":296,"author":{"gitId":"Kair0s3"},"content":"| Clear all modules in recipe     | `recipe reset`                                               | `recipe reset`                                                                        |","lastModifiedDate":"2021-10-27"},{"lineNumber":297,"author":{"gitId":"Kair0s3"},"content":"| Delete recipe                   | `recipe delete \u003crecipeName\u003e`                                 | `recipe delete testRecipe`                                                            |","lastModifiedDate":"2021-10-27"},{"lineNumber":298,"author":{"gitId":"SeenFang"},"content":"| Exit program                    | `exit`                                                       | `exit`                                                                                |","lastModifiedDate":"2021-10-12"},{"lineNumber":299,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":300,"author":{"gitId":"Kair0s3"},"content":"## FAQ","lastModifiedDate":"2021-10-27"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":302,"author":{"gitId":"arraysius"},"content":"**Q:** How do I transfer my recipes to another computer?  ","lastModifiedDate":"2021-10-27"},{"lineNumber":303,"author":{"gitId":"arraysius"},"content":"**A:** Install the app in the other computer and copy the recipe files into the recipe folder.","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"rizemon":73,"arraysius":65,"Kair0s3":45,"SeenFang":85,"-":35}},{"path":"src/main/java/decodex/Decodex.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import decodex.commands.Command;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"import decodex.commands.ExitCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.DataManagerException;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.ModuleManagerException;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.ParserException;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.RecipeException;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.RecipeManagerException;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Kair0s3"},"content":"import decodex.parser.Parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"import decodex.recipes.RecipeManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"Kair0s3"},"content":"import decodex.storage.Storage;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Kair0s3"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Kair0s3"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"public class Decodex {","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"Kair0s3"},"content":"    public static Logger logger \u003d Logger.getLogger(Decodex.class.getName());","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"Kair0s3"},"content":"     * Necessary objects to be initialized for Decodex to work properly.","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"Kair0s3"},"content":"    private static DataManager dataManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Kair0s3"},"content":"    private static ModuleManager moduleManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"    private static RecipeManager recipeManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"Kair0s3"},"content":"    private static Parser parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"Kair0s3"},"content":"    private static Ui ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"Kair0s3"},"content":"    private static Storage storage;","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Kair0s3"},"content":"    public Decodex() {","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"Kair0s3"},"content":"        initDecodex();","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"Kair0s3"},"content":"     * Initializes the necessary Objects for Decodex.","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"Kair0s3"},"content":"    private void initDecodex() {","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"Kair0s3"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"Kair0s3"},"content":"        dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Kair0s3"},"content":"        moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"Kair0s3"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"Kair0s3"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Kair0s3"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"rizemon"},"content":"        recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"Kair0s3"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"Kair0s3"},"content":"            loadSavedRecipes();","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"Kair0s3"},"content":"        } catch (IOException err) {","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"Kair0s3"},"content":"            ui.printError(err);","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"rizemon"},"content":"     * Decodex entry-point for the java.decodex.Decodex application.","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"rizemon"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"Kair0s3"},"content":"        new Decodex().run();","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"Kair0s3"},"content":"    public void run() {","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"arraysius"},"content":"        ui.printGreeting();","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"SeenFang"},"content":"        Command command \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"SeenFang"},"content":"        do {","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"arraysius"},"content":"            String editingRecipeName;","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"arraysius"},"content":"            try {","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"arraysius"},"content":"                editingRecipeName \u003d recipeManager.getEditingRecipe().getName();","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"arraysius"},"content":"            } catch (RecipeManagerException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"arraysius"},"content":"                editingRecipeName \u003d null;","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"arraysius"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"arraysius"},"content":"            ui.printPromptHeader(editingRecipeName);","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"arraysius"},"content":"            String userInput \u003d ui.readInput();","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"rizemon"},"content":"            logger.fine(\"User input: \" + userInput);","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"Kair0s3"},"content":"            try {","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"rizemon"},"content":"                command \u003d parser.parseCommand(userInput);","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"SeenFang"},"content":"                assert command !\u003d null : \"Command should not be null\";","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"rizemon"},"content":"                command.run(dataManager, moduleManager, ui, recipeManager, storage);","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"SeenFang"},"content":"            } catch (ParserException | CommandException | ModuleManagerException | DataManagerException","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"SeenFang"},"content":"                    | ModuleException | RecipeException | RecipeManagerException | IOException err) {","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"arraysius"},"content":"                ui.printError(err);","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"Kair0s3"},"content":"                logger.fine(err.getMessage());","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"Kair0s3"},"content":"            }","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"SeenFang"},"content":"        } while (!(command instanceof ExitCommand));","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":93,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"Kair0s3"},"content":"    private void loadSavedRecipes() throws IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"Kair0s3"},"content":"        storage.loadRecipesFromDirectory(moduleManager, recipeManager, ui);","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"rizemon":13,"arraysius":13,"SeenFang":13,"Kair0s3":54,"-":4}},{"path":"src/main/java/decodex/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.DataManagerException;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.RecipeException;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.RecipeManagerException;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.ModuleManagerException;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"import decodex.recipes.RecipeManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"import decodex.storage.Storage;","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":" * Command serves as a foundation for other commands to be built upon.","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"    public Command() {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"    public abstract void run(DataManager dataManager, ModuleManager moduleManager, Ui ui, RecipeManager recipeManager,","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"            Storage storage)","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"arraysius"},"content":"            throws CommandException, ModuleManagerException, DataManagerException, ModuleException, RecipeException,","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"SeenFang"},"content":"            RecipeManagerException, IOException;","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"rizemon":11,"arraysius":3,"SeenFang":13,"Kair0s3":1}},{"path":"src/main/java/decodex/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"import decodex.recipes.RecipeManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"import decodex.storage.Storage;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"    public static final String COMMAND_HELP_MESSAGE \u003d \"Exit the program\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"            + \"Syntax: exit\";","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"        super();","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"    public void run(DataManager dataManager, ModuleManager moduleManager, Ui ui, RecipeManager recipeManager,","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"            Storage storage) {","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"arraysius"},"content":"        ui.printGoodbye();","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"rizemon":8,"arraysius":1,"SeenFang":15}},{"path":"src/main/java/decodex/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import decodex.commands.recipe.RecipeDeleteCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import decodex.commands.recipe.RecipeListCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"import decodex.commands.recipe.RecipeNewCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"import decodex.commands.recipe.RecipePopCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"import decodex.commands.recipe.RecipePushCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"import decodex.commands.recipe.RecipeResetCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"import decodex.commands.recipe.RecipeSelectCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"import decodex.recipes.RecipeManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"import decodex.storage.Storage;","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"// @@author rizemon","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"    public static final String COMMAND_HELP_MESSAGE \u003d \"Shows list of available commands\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"            + \"Syntax: help\";","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"    private static final String[] BASIC_COMMAND_HELP_MESSAGES \u003d {","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"        HelpCommand.COMMAND_HELP_MESSAGE,","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"        ExitCommand.COMMAND_HELP_MESSAGE,","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"        InputCommand.COMMAND_HELP_MESSAGE,","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"        ListCommand.COMMAND_HELP_MESSAGE,","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"        SelectCommand.COMMAND_HELP_MESSAGE","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"    };","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"    private static final String[] RECIPE_COMMAND_HELP_MESSAGES \u003d {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"        RecipeNewCommand.COMMAND_HELP_MESSAGE,","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"        RecipeListCommand.COMMAND_HELP_MESSAGE,","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"        RecipeSelectCommand.COMMAND_HELP_MESSAGE,","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"        RecipePushCommand.COMMAND_HELP_MESSAGE,","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"        RecipePopCommand.COMMAND_HELP_MESSAGE,","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"        RecipeResetCommand.COMMAND_HELP_MESSAGE,","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"        RecipeDeleteCommand.COMMAND_HELP_MESSAGE,","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"    };","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"        super();","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"    public void run(DataManager dataManager, ModuleManager moduleManager, Ui ui, RecipeManager recipeManager,","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"            Storage storage) {","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"        ui.printCommandHelp(BASIC_COMMAND_HELP_MESSAGES, RECIPE_COMMAND_HELP_MESSAGES);","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"rizemon":50}},{"path":"src/main/java/decodex/commands/InputCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"import decodex.recipes.RecipeManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"import decodex.storage.Storage;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"arraysius"},"content":"import decodex.ui.messages.ErrorMessages;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"// @@author rizemon","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"public class InputCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"    public static final String COMMAND_WORD \u003d \"input\";","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"    public static final String COMMAND_HELP_MESSAGE \u003d \"Input of data\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"            + \"Syntax: input \u003cdata\u003e\";","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"    private final String dataString;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"    public InputCommand(String dataString) {","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"        super();","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"        this.dataString \u003d dataString;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"    public void run(DataManager dataManager, ModuleManager moduleManager, Ui ui, RecipeManager recipeManager,","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"            Storage storage)","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"            throws CommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"        if (dataString.isEmpty()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"            throw new CommandException(ErrorMessages.MISSING_ARGUMENT);","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"        Data userData \u003d new Data(dataString);","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"        dataManager.setOriginalData(userData);","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"        ui.printInput(dataString);","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"rizemon":38,"arraysius":1}},{"path":"src/main/java/decodex/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.CommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"import decodex.recipes.RecipeManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"import decodex.storage.Storage;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"arraysius"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"import decodex.ui.messages.ErrorMessages;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"arraysius"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"    public static final String COMMAND_HELP_MESSAGE \u003d \"List available modules and recipes\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"            + \"Syntax: list {category}\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"            + \"Acceptable values of category: modules, recipes\";","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"arraysius"},"content":"    public static final String LIST_CATEGORY_MODULES \u003d \"modules\";","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"arraysius"},"content":"    public static final String LIST_CATEGORY_RECIPE \u003d \"recipes\";","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"arraysius"},"content":"    private static final int MODULE_NAME_INDEX \u003d 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"arraysius"},"content":"    private static final int MODULE_DESCRIPTION_INDEX \u003d 1;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"arraysius"},"content":"    private final String listCategory;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"arraysius"},"content":"    public ListCommand(String listCategory) {","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"arraysius"},"content":"        super();","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"arraysius"},"content":"        this.listCategory \u003d listCategory;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"arraysius"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"    public void run(DataManager dataManager, ModuleManager moduleManager, Ui ui, RecipeManager recipeManager,","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"            Storage storage)","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"arraysius"},"content":"            throws CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"arraysius"},"content":"        boolean isPrintModuleList \u003d listCategory \u003d\u003d null || listCategory.equals(LIST_CATEGORY_MODULES);","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"arraysius"},"content":"        boolean isPrintRecipeList \u003d listCategory \u003d\u003d null || listCategory.equals(LIST_CATEGORY_RECIPE);","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"arraysius"},"content":"        if (isPrintModuleList) {","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"arraysius"},"content":"            ui.printModuleList(getModuleList(moduleManager));","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"arraysius"},"content":"        if (isPrintRecipeList) {","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"arraysius"},"content":"            ui.printRecipeList(getRecipeList(recipeManager));","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"arraysius"},"content":"        if (!isPrintModuleList \u0026\u0026 !isPrintRecipeList) {","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"arraysius"},"content":"            throw new CommandException(ErrorMessages.INVALID_LIST_CATEGORY);","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"arraysius"},"content":"     * Prepares the list of supported modules.","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"arraysius"},"content":"     * @param moduleManager The ModuleManager to retrieve supported modules.","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"arraysius"},"content":"     * @return A formatted String of modules.","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"arraysius"},"content":"    private String getModuleList(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"arraysius"},"content":"        String[][] modules \u003d moduleManager.getModules();","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"arraysius"},"content":"        assert modules.length \u003e 0 : \"Number of modules should be greater than 0\";","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"arraysius"},"content":"        StringBuilder moduleListString \u003d new StringBuilder();","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"arraysius"},"content":"        int maxNameWidth \u003d 0;","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"arraysius"},"content":"        // Find number of characters of the longest module name","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"arraysius"},"content":"        for (String[] module : modules) {","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"arraysius"},"content":"            String moduleName \u003d module[MODULE_NAME_INDEX];","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"arraysius"},"content":"            if (moduleName.length() \u003e maxNameWidth) {","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"arraysius"},"content":"                maxNameWidth \u003d moduleName.length();","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"arraysius"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"arraysius"},"content":"        // Prepare and format list of modules","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"arraysius"},"content":"        for (String[] module : modules) {","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"arraysius"},"content":"            String moduleName \u003d module[MODULE_NAME_INDEX];","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"arraysius"},"content":"            String moduleDescription \u003d module[MODULE_DESCRIPTION_INDEX];","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"arraysius"},"content":"            moduleListString.append(String.format(\"  %-\" + maxNameWidth + \"s - %s\\n\", moduleName, moduleDescription));","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"arraysius"},"content":"        return moduleListString.toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"SeenFang"},"content":"     * Prepares the list of available recipes.","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"arraysius"},"content":"     * @param recipeManager The RecipeManager to retrieve available recipes.","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"arraysius"},"content":"     * @return A formatted String of recipes.","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"arraysius"},"content":"    private String getRecipeList(RecipeManager recipeManager) {","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"arraysius"},"content":"        String[] recipeNames \u003d recipeManager.getRecipeNames();","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"arraysius"},"content":"        StringBuilder recipeListString \u003d new StringBuilder();","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"arraysius"},"content":"        // Prepare and format list of recipes","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"arraysius"},"content":"        for (String recipeName : recipeNames) {","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"arraysius"},"content":"            recipeListString.append(String.format(\"  %s\\n\", recipeName));","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"arraysius"},"content":"        return recipeListString.toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"arraysius"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"rizemon":8,"arraysius":88,"SeenFang":1}},{"path":"src/main/java/decodex/commands/ResetCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"import decodex.recipes.RecipeManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"import decodex.storage.Storage;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"arraysius"},"content":"import decodex.ui.messages.RegularMessages;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"// @@author rizemon","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"public class ResetCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"    public static final String COMMAND_WORD \u003d \"reset\";","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"    public static final String COMMAND_HELP_MESSAGE \u003d \"Resets the data\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"            + \"Syntax: reset\\n\";","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"    public ResetCommand() {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"        super();","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"    public void run(DataManager dataManager, ModuleManager moduleManager, Ui ui, RecipeManager recipeManager,","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"            Storage storage) {","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"        dataManager.resetToOriginalData();","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"        ui.printSuccess(RegularMessages.REVERTED_ALL_CHANGES);","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"rizemon":26,"arraysius":1}},{"path":"src/main/java/decodex/commands/SelectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.CommandException;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.DataManagerException;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.ModuleManagerException;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.RecipeException;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.RecipeManagerException;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":"import decodex.modules.Module;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"arraysius"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"arraysius"},"content":"import decodex.recipes.Recipe;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"import decodex.recipes.RecipeManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"import decodex.storage.Storage;","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"arraysius"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"arraysius"},"content":"import decodex.ui.messages.ErrorMessages;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"arraysius"},"content":"public class SelectCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"arraysius"},"content":"    public static final String COMMAND_WORD \u003d \"select\";","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"    public static final String COMMAND_HELP_MESSAGE \u003d \"Selects a module or recipe to run\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"            + \"Syntax: select module \u003cmoduleName\u003e {moduleArgument}, select recipe \u003crecipeName\u003e\";","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"arraysius"},"content":"    private static final String SELECT_CATEGORY_MODULE \u003d \"module\";","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"arraysius"},"content":"    private static final String SELECT_CATEGORY_RECIPE \u003d \"recipe\";","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"arraysius"},"content":"    private final String selectCategory;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"arraysius"},"content":"    private final String itemName;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"arraysius"},"content":"    private final String[] parameters;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"arraysius"},"content":"    public SelectCommand(String selectCategory, String itemName, String[] parameters) {","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"arraysius"},"content":"        super();","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"arraysius"},"content":"        this.selectCategory \u003d selectCategory;","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"arraysius"},"content":"        this.itemName \u003d itemName;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"arraysius"},"content":"        this.parameters \u003d parameters;","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"arraysius"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"    public void run(DataManager dataManager, ModuleManager moduleManager, Ui ui, RecipeManager recipeManager,","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"            Storage storage)","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"arraysius"},"content":"            throws ModuleManagerException, CommandException, DataManagerException, ModuleException, RecipeException,","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"            RecipeManagerException {","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"arraysius"},"content":"        assert selectCategory !\u003d null : \"selectCategory should not be null\";","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"arraysius"},"content":"        assert itemName !\u003d null : \"itemName should not be null\";","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"arraysius"},"content":"        assert parameters !\u003d null : \"parameters should not be null\";","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"arraysius"},"content":"        switch (selectCategory) {","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"arraysius"},"content":"        case SELECT_CATEGORY_MODULE:","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"arraysius"},"content":"            runModule(dataManager, moduleManager, ui);","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"arraysius"},"content":"            break;","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"arraysius"},"content":"        case SELECT_CATEGORY_RECIPE:","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"arraysius"},"content":"            runRecipe(dataManager, recipeManager, ui);","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"arraysius"},"content":"            break;","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"arraysius"},"content":"        default:","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"arraysius"},"content":"            throw new CommandException(ErrorMessages.UNKNOWN_SELECTION_CATEGORY);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"arraysius"},"content":"     * Selects and runs a module.","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"arraysius"},"content":"     * @param dataManager   The provided DataManager.","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"arraysius"},"content":"     * @param moduleManager The provided ModuleManager.","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"arraysius"},"content":"     * @param ui            The provided Ui.","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"arraysius"},"content":"     * @throws CommandException       If the command parameters are invalid.","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"arraysius"},"content":"     * @throws ModuleManagerException If the selected module is invalid.","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"arraysius"},"content":"     * @throws ModuleException        If the module execution has failed.","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"arraysius"},"content":"     * @throws DataManagerException   If the data is invalid.","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"arraysius"},"content":"    private void runModule(DataManager dataManager, ModuleManager moduleManager, Ui ui)","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"arraysius"},"content":"            throws CommandException, ModuleManagerException, ModuleException, DataManagerException {","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"arraysius"},"content":"        if (itemName.isBlank()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"arraysius"},"content":"            throw new CommandException(ErrorMessages.MISSING_MODULE_NAME);","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"arraysius"},"content":"        Module module \u003d moduleManager.selectModule(itemName, parameters);","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"arraysius"},"content":"        Data newData \u003d module.run(dataManager.getCurrentData());","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"arraysius"},"content":"        dataManager.setCurrentData(newData);","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"arraysius"},"content":"        ui.printOutput(newData.toString());","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"arraysius"},"content":"     * Selects and runs a module.","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"arraysius"},"content":"     * @param dataManager   The provided DataManager.","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"arraysius"},"content":"     * @param recipeManager The provided RecipeManager.","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"arraysius"},"content":"     * @param ui            The provided Ui.","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"arraysius"},"content":"     * @throws CommandException       If the command parameters are invalid.","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"arraysius"},"content":"     * @throws RecipeManagerException If the recipe is invalid.","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"arraysius"},"content":"     * @throws ModuleException        If the module execution has failed.","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"arraysius"},"content":"     * @throws DataManagerException   If the data is invalid.","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"arraysius"},"content":"    private void runRecipe(DataManager dataManager, RecipeManager recipeManager, Ui ui)","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"arraysius"},"content":"            throws CommandException, RecipeManagerException, ModuleException, DataManagerException {","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"arraysius"},"content":"        if (itemName.isBlank()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"arraysius"},"content":"            throw new CommandException(ErrorMessages.MISSING_RECIPE_NAME);","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"arraysius"},"content":"        Recipe recipe \u003d recipeManager.getRecipe(itemName);","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"arraysius"},"content":"        Data newData \u003d recipe.run(dataManager.getCurrentData());","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"arraysius"},"content":"        dataManager.setCurrentData(newData);","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"arraysius"},"content":"        ui.printRecipeModules(recipe);","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"arraysius"},"content":"        ui.printOutput(newData.toString());","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"arraysius"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"rizemon":9,"arraysius":98,"Kair0s3":1}},{"path":"src/main/java/decodex/commands/recipe/RecipeDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.commands.recipe;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import decodex.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.CommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.RecipeManagerException;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"import decodex.recipes.RecipeManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"import decodex.storage.Storage;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"import decodex.ui.messages.ErrorMessages;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"public class RecipeDeleteCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"    public static final String COMMAND_HELP_MESSAGE \u003d \"Delete recipe\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"            + \"Syntax: recipe delete \u003crecipeName\u003e\";","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"SeenFang"},"content":"    private final String recipeName;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"SeenFang"},"content":"    public RecipeDeleteCommand(String recipeName) {","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"SeenFang"},"content":"        super();","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"SeenFang"},"content":"        this.recipeName \u003d recipeName;","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"SeenFang"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"    public void run(DataManager dataManager, ModuleManager moduleManager, Ui ui, RecipeManager recipeManager,","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"            Storage storage)","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"SeenFang"},"content":"            throws CommandException, ModuleException, RecipeManagerException, IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"SeenFang"},"content":"        if (recipeName.isBlank()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"SeenFang"},"content":"            throw new CommandException(ErrorMessages.MISSING_RECIPE_NAME);","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"SeenFang"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"SeenFang"},"content":"        recipeManager.removeRecipe(recipeName);","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"        try {","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"            storage.deleteRecipeFile(recipeName);","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"        } catch (IOException err) {","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"            ui.printError(err);","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"SeenFang"},"content":"        ui.printRecipeDeleted(recipeName);","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"rizemon":10,"arraysius":2,"SeenFang":32}},{"path":"src/main/java/decodex/commands/recipe/RecipeListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.commands.recipe;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import decodex.commands.Command;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.CommandException;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.RecipeManagerException;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.Module;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"import decodex.recipes.Recipe;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"import decodex.recipes.RecipeManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"import decodex.storage.Storage;","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"import decodex.ui.messages.RegularMessages;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"public class RecipeListCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"    public static final String COMMAND_HELP_MESSAGE \u003d \"List modules in recipe\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"            + \"Syntax: recipe list {recipeName}\";","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"SeenFang"},"content":"    private static final int ARRAY_INDEX_OFFSET \u003d -1;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"SeenFang"},"content":"    private final String recipeName;","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"SeenFang"},"content":"    public RecipeListCommand(String recipeName) {","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"SeenFang"},"content":"        super();","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"SeenFang"},"content":"        this.recipeName \u003d recipeName;","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"SeenFang"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"    public void run(DataManager dataManager, ModuleManager moduleManager, Ui ui, RecipeManager recipeManager,","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"            Storage storage)","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"SeenFang"},"content":"            throws CommandException, ModuleException, RecipeManagerException {","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"SeenFang"},"content":"        Recipe recipe;","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"SeenFang"},"content":"        if (recipeName.isBlank()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"SeenFang"},"content":"            recipe \u003d recipeManager.getEditingRecipe();","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"SeenFang"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"SeenFang"},"content":"            recipe \u003d recipeManager.getRecipe(recipeName);","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"SeenFang"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"SeenFang"},"content":"        ui.printRecipeModulesList(getModuleList(recipe), recipe.getName());","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"SeenFang"},"content":"     * Gets and prepares an indexed list of the modules in the given recipe.","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"SeenFang"},"content":"     * @param recipe The recipe to list.","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"SeenFang"},"content":"     * @return A formatted, indexed list of modules in the recipe.","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"SeenFang"},"content":"    private String getModuleList(Recipe recipe) {","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"SeenFang"},"content":"        ArrayList\u003cModule\u003e recipeModuleList \u003d recipe.getModuleList();","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"SeenFang"},"content":"        if (recipeModuleList.isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"rizemon"},"content":"            return RegularMessages.RECIPE_EMPTY;","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"SeenFang"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"arraysius"},"content":"        String[] recipeModuleNames \u003d recipeModuleList.stream()","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"arraysius"},"content":"                .map(Module::toString)","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"arraysius"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"SeenFang"},"content":"        StringBuilder recipeListString \u003d new StringBuilder();","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"SeenFang"},"content":"        for (int index \u003d 1; index \u003c\u003d recipeModuleNames.length; index++) {","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"SeenFang"},"content":"            recipeListString.append(String.format(\"  %d. %s\\n\", index, recipeModuleNames[index + ARRAY_INDEX_OFFSET]));","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"SeenFang"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"SeenFang"},"content":"        return recipeListString.toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"rizemon":8,"arraysius":3,"SeenFang":60}},{"path":"src/main/java/decodex/commands/recipe/RecipeNewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.commands.recipe;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import decodex.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.CommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.RecipeException;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.RecipeManagerException;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"import decodex.recipes.Recipe;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"import decodex.recipes.RecipeManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"import decodex.storage.Storage;","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"import decodex.ui.messages.ErrorMessages;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"public class RecipeNewCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"    public static final String COMMAND_WORD \u003d \"new\";","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"    public static final String COMMAND_HELP_MESSAGE \u003d \"Create new recipe\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"            + \"Syntax: recipe new \u003crecipeName\u003e\";","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"SeenFang"},"content":"    private final String recipeName;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"SeenFang"},"content":"    public RecipeNewCommand(String recipeName) {","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"SeenFang"},"content":"        super();","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"SeenFang"},"content":"        this.recipeName \u003d recipeName;","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"SeenFang"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"    public void run(DataManager dataManager, ModuleManager moduleManager, Ui ui, RecipeManager recipeManager,","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"            Storage storage)","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"            throws CommandException, ModuleException, RecipeException, RecipeManagerException {","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"SeenFang"},"content":"        if (recipeName.isBlank()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"SeenFang"},"content":"            throw new CommandException(ErrorMessages.MISSING_RECIPE_NAME);","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"SeenFang"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"SeenFang"},"content":"        Recipe recipe \u003d new Recipe(recipeName);","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"SeenFang"},"content":"        recipeManager.addRecipe(recipe);","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"        try {","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"            storage.saveRecipeToFile(recipe);","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"        } catch (IOException err) {","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"            ui.printError(err);","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"SeenFang"},"content":"        recipeManager.selectRecipeForEditing(recipeName);","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"SeenFang"},"content":"        ui.printNewRecipeCreated(recipe.getName());","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"rizemon":12,"arraysius":2,"SeenFang":36}},{"path":"src/main/java/decodex/commands/recipe/RecipePopCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.commands.recipe;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import decodex.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.RecipeException;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.RecipeManagerException;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"import decodex.modules.Module;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"import decodex.recipes.Recipe;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"import decodex.recipes.RecipeManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"import decodex.storage.Storage;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"// @@author rizemon","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"public class RecipePopCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"    public static final String COMMAND_WORD \u003d \"pop\";","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"    public static final String COMMAND_HELP_MESSAGE \u003d \"Remove module from recipe\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"            + \"Syntax: recipe pop\";","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"    public RecipePopCommand() {","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"        super();","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"    public void run(DataManager dataManager, ModuleManager moduleManager, Ui ui, RecipeManager recipeManager,","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"            Storage storage)","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"            throws RecipeException, RecipeManagerException, IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"        Module module \u003d recipeManager.popModuleFromEditedRecipe();","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"        Recipe editingRecipe \u003d recipeManager.getEditingRecipe();","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"        try {","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"            storage.saveRecipeToFile(editingRecipe);","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"        } catch (IOException err) {","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"            ui.printError(err);","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"        ui.printModuleRemovedFromRecipe(module.getName(), editingRecipe.getName());","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"rizemon":36,"arraysius":2,"SeenFang":1}},{"path":"src/main/java/decodex/commands/recipe/RecipePushCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.commands.recipe;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import decodex.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.CommandException;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.RecipeManagerException;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.ModuleManagerException;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"import decodex.modules.Module;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"import decodex.recipes.Recipe;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"import decodex.recipes.RecipeManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"import decodex.storage.Storage;","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"import decodex.ui.messages.ErrorMessages;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"// @@author rizemon","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"public class RecipePushCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"    public static final String COMMAND_WORD \u003d \"push\";","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"    public static final String COMMAND_HELP_MESSAGE \u003d \"Add module to recipe\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"            + \"Syntax: recipe push \u003cmoduleName\u003e {moduleArgument}\";","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"    private final String moduleName;","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"    private final String[] parameters;","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"    public RecipePushCommand(String moduleName, String[] parameters) {","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"        super();","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"        this.parameters \u003d parameters;","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"    public void run(DataManager dataManager, ModuleManager moduleManager, Ui ui, RecipeManager recipeManager,","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"            Storage storage)","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"            throws CommandException, ModuleManagerException, ModuleException, RecipeManagerException, IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"        if (moduleName.isBlank()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"            throw new CommandException(ErrorMessages.MISSING_MODULE_NAME);","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"        Module module \u003d moduleManager.selectModule(moduleName, parameters);","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"        Recipe editingRecipe \u003d  recipeManager.getEditingRecipe();","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"        recipeManager.pushModuleIntoEditedRecipe(module);","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"        try {","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"            storage.saveRecipeToFile(editingRecipe);","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"        } catch (IOException err) {","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"            ui.printError(err);","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"rizemon"},"content":"        ui.printModuleAddedToRecipe(module.getName(),  editingRecipe.getName());","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"rizemon":49,"arraysius":2,"SeenFang":1}},{"path":"src/main/java/decodex/commands/recipe/RecipeResetCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.commands.recipe;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import decodex.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.RecipeManagerException;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"import decodex.recipes.Recipe;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"import decodex.recipes.RecipeManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"import decodex.storage.Storage;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"// @@author rizemon","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"public class RecipeResetCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"    public static final String COMMAND_WORD \u003d \"reset\";","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"    public static final String COMMAND_HELP_MESSAGE \u003d \"Clear all modules from recipe\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"            + \"Syntax: recipe reset\";","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"    public RecipeResetCommand() {","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"        super();","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"    public void run(DataManager dataManager, ModuleManager moduleManager, Ui ui, RecipeManager recipeManager,","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"            Storage storage)","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"            throws RecipeManagerException, IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"        Recipe editingRecipe \u003d recipeManager.getEditingRecipe();","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"        recipeManager.resetEditedRecipe();","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"        try {","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"            storage.saveRecipeToFile(editingRecipe);","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"        } catch (IOException err) {","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"            ui.printError(err);","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"        ui.printRecipeReset(editingRecipe.getName());","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"rizemon":34,"arraysius":2,"SeenFang":1}},{"path":"src/main/java/decodex/commands/recipe/RecipeSelectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.commands.recipe;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import decodex.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.CommandException;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.RecipeManagerException;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"import decodex.recipes.RecipeManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"import decodex.storage.Storage;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"import decodex.ui.messages.ErrorMessages;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"// @@author rizemon","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"public class RecipeSelectCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"    public static final String COMMAND_WORD \u003d \"select\";","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"    public static final String COMMAND_HELP_MESSAGE \u003d \"Select recipe for editing\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"            + \"Syntax: recipe select \u003crecipeName\u003e\";","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"    private final String recipeName;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"    public RecipeSelectCommand(String recipeName) {","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"        super();","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"        this.recipeName \u003d recipeName;","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"    public void run(DataManager dataManager, ModuleManager moduleManager, Ui ui, RecipeManager recipeManager,","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"            Storage storage)","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"            throws CommandException, RecipeManagerException {","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"        if (recipeName.isBlank()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"            throw new CommandException(ErrorMessages.MISSING_RECIPE_NAME);","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"        recipeManager.selectRecipeForEditing(recipeName);","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"        ui.printRecipeSelected(recipeName);","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"rizemon":36,"arraysius":2}},{"path":"src/main/java/decodex/data/Data.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.data;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":" * The Data class manages the data that is to be encoded or decoded.","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"public class Data {","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"    private byte[] rawBytes;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"    public Data(byte[] rawBytes) {","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"        this.rawBytes \u003d rawBytes;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"    public Data(String data) {","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"arraysius"},"content":"        assert data !\u003d null : \"Data string should not be null\";","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"        rawBytes \u003d data.getBytes();","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"    public byte[] getRawBytes() {","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"        return rawBytes;","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"    public String toString() {","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"        return new String(rawBytes);","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"rizemon":26,"arraysius":1}},{"path":"src/main/java/decodex/data/DataManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.data;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.DataManagerException;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":"import decodex.ui.messages.ErrorMessages;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":" * The DataManager class handles the management of the current state of the data.","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"public class DataManager {","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"    /* Data provided by the user */","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"    private Data originalData;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"    /* Data to perform the encoding/decoding operations on */","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"    private Data currentData;","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Kair0s3"},"content":"     * Instantiates a new DataManager.","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"    public DataManager() {","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"        originalData \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"        currentData \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Kair0s3"},"content":"     * Returns the original Data object.","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"Kair0s3"},"content":"     * @return The original Data object.","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"Kair0s3"},"content":"     * @throws DataManagerException If the original Data object does not exist.","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"    public Data getOriginalData() throws DataManagerException {","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"        if (originalData \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"arraysius"},"content":"            throw new DataManagerException(ErrorMessages.NO_DATA_FOUND);","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"        return originalData;","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"Kair0s3"},"content":"     * Returns the current Data object.","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"Kair0s3"},"content":"     * @return The current Data object.","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"Kair0s3"},"content":"     * @throws DataManagerException If the current Data object does not exist.","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"    public Data getCurrentData() throws DataManagerException {","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"        if (currentData \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"arraysius"},"content":"            throw new DataManagerException(ErrorMessages.NO_DATA_FOUND);","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"rizemon"},"content":"        return currentData;","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"Kair0s3"},"content":"     * Sets the original Data.","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"Kair0s3"},"content":"     * @param originalData The original Data object.","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"rizemon"},"content":"    public void setOriginalData(Data originalData) {","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"rizemon"},"content":"        this.originalData \u003d originalData;","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"rizemon"},"content":"        resetToOriginalData();","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"Kair0s3"},"content":"     * Sets the current Data.","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"Kair0s3"},"content":"     * @param currentData The new current Data Object.","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"Kair0s3"},"content":"     * @throws DataManagerException If the original Data object does not exist.","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"rizemon"},"content":"    public void setCurrentData(Data currentData) throws DataManagerException {","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"rizemon"},"content":"        if (originalData \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"arraysius"},"content":"            throw new DataManagerException(ErrorMessages.NO_DATA_FOUND);","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"rizemon"},"content":"        this.currentData \u003d currentData;","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"Kair0s3"},"content":"     * Reverts the current data to its original data.","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"rizemon"},"content":"    public void resetToOriginalData() {","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"rizemon"},"content":"        currentData \u003d originalData;","lastModifiedDate":"2021-10-04"},{"lineNumber":80,"author":{"gitId":"rizemon"},"content":"        assert Arrays.equals(currentData.getRawBytes(), originalData.getRawBytes()) : \"Current data is same as \"","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"rizemon"},"content":"                + \"original data\";","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":83,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"rizemon":50,"arraysius":5,"Kair0s3":28}},{"path":"src/main/java/decodex/data/exception/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.data.exception;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":" * This exception is raised when an error during command execution occurs.","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"    public CommandException(String message) {","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"        super(message);","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"rizemon":11}},{"path":"src/main/java/decodex/data/exception/DataManagerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.data.exception;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":" * This exception is raised when an error during access to the DataManager occurs.","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"public class DataManagerException extends Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"    public DataManagerException(String message) {","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"        super(message);","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"rizemon":11}},{"path":"src/main/java/decodex/data/exception/ModuleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.data.exception;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":" * This exception is raised when an error during module execution occurs.","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"public class ModuleException extends Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"    public ModuleException(String message) {","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"        super(message);","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"rizemon":11}},{"path":"src/main/java/decodex/data/exception/ModuleManagerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.data.exception;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"public class ModuleManagerException extends Exception {","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"    public ModuleManagerException(String message) {","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"        super(message);","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"arraysius"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"arraysius":8}},{"path":"src/main/java/decodex/data/exception/ParserException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kair0s3"},"content":"package decodex.data.exception;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"public class ParserException extends Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"    public ParserException(String message) {","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"        super(message);","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Kair0s3":8}},{"path":"src/main/java/decodex/data/exception/RecipeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package decodex.data.exception;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":" * This exception is raised when an error during recipe execution occurs.","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"public class RecipeException extends Exception {","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"    public RecipeException(String message) {","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"        super(message);","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"SeenFang":11}},{"path":"src/main/java/decodex/data/exception/RecipeManagerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package decodex.data.exception;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":" * This exception is raised when an error during recipe manager execution occurs.","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"public class RecipeManagerException extends Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"    public RecipeManagerException(String message) {","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"        super(message);","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"SeenFang":11}},{"path":"src/main/java/decodex/modules/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.modules;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":" * Module serves as a foundation for other modules to be built upon.","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"arraysius"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"public abstract class Module {","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":"    protected String name;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"arraysius"},"content":"    protected String description;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"arraysius"},"content":"    public Module(String name, String description) {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"arraysius"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"arraysius"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"arraysius"},"content":"    public String getName() {","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"arraysius"},"content":"        return name;","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"arraysius"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"arraysius"},"content":"        return description;","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Kair0s3"},"content":"     * Returns a String formatted Module.","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Kair0s3"},"content":"     * @return The string formatted Module.","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"Kair0s3"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"Kair0s3"},"content":"    public String toString() {","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"Kair0s3"},"content":"        return name;","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"arraysius"},"content":"     * Performs data processing on the provided Data object. Abstract method to be implemented by other modules.","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"arraysius"},"content":"     * @return Data object containing new processed data.","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"Kair0s3"},"content":"    public abstract Data run(Data data) throws ModuleException;","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"rizemon":4,"arraysius":27,"Kair0s3":12}},{"path":"src/main/java/decodex/modules/ModuleManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.modules;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"import decodex.Decodex;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.ModuleManagerException;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"arraysius"},"content":"import decodex.modules.base64.Base64Decoder;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"import decodex.modules.base64.Base64Encoder;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"arraysius"},"content":"import decodex.modules.binary.BinaryDecoder;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":"import decodex.modules.binary.BinaryEncoder;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"arraysius"},"content":"import decodex.modules.hex.HexDecoder;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"arraysius"},"content":"import decodex.modules.hex.HexEncoder;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"arraysius"},"content":"import decodex.modules.rot.RotEncoder;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"arraysius"},"content":"import decodex.ui.messages.ErrorMessages;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"arraysius"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"arraysius"},"content":" * ModuleManager maintains the list of available modules and returns selected modules.","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"arraysius"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"arraysius"},"content":"public class ModuleManager {","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"arraysius"},"content":"    private final Logger logger \u003d Decodex.logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"arraysius"},"content":"    private static final int MODULE_NAME_INDEX \u003d 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"arraysius"},"content":"    private static final int MODULE_PARAMETER_INDEX \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"arraysius"},"content":"     * List of available modules.","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"arraysius"},"content":"    private static final String[][] MODULE_LIST \u003d {","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"arraysius"},"content":"            {Base64Encoder.MODULE_NAME, Base64Encoder.MODULE_DESCRIPTION},","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"arraysius"},"content":"            {Base64Decoder.MODULE_NAME, Base64Decoder.MODULE_DESCRIPTION},","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"arraysius"},"content":"            {HexEncoder.MODULE_NAME, HexEncoder.MODULE_DESCRIPTION},","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"arraysius"},"content":"            {HexDecoder.MODULE_NAME, HexDecoder.MODULE_DESCRIPTION},","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"arraysius"},"content":"            {BinaryEncoder.MODULE_NAME, BinaryEncoder.MODULE_DESCRIPTION},","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"arraysius"},"content":"            {BinaryDecoder.MODULE_NAME, BinaryDecoder.MODULE_DESCRIPTION},","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"arraysius"},"content":"            {RotEncoder.MODULE_NAME, RotEncoder.MODULE_DESCRIPTION}","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"arraysius"},"content":"    };","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"arraysius"},"content":"    public ModuleManager() {","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"arraysius"},"content":"        // Log available modules","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"arraysius"},"content":"        for (String[] module : MODULE_LIST) {","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"arraysius"},"content":"            logger.fine(String.format(\"Loaded %s\", module[MODULE_NAME_INDEX]));","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"arraysius"},"content":"    public String[][] getModules() {","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"arraysius"},"content":"        return MODULE_LIST;","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"arraysius"},"content":"     * Selects module from a provided module name.","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"arraysius"},"content":"     * @param moduleName Name of selected module.","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"arraysius"},"content":"     * @param parameters Parameters for specific commands.","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"arraysius"},"content":"     * @return Selected module.","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"arraysius"},"content":"     * @throws ModuleManagerException If provided module name is not an available module.","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"arraysius"},"content":"     * @throws ModuleException        If module parameters are invalid.","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"arraysius"},"content":"    public Module selectModule(String moduleName, String[] parameters) throws ModuleManagerException, ModuleException {","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"arraysius"},"content":"        assert parameters !\u003d null : \"parameters should not be null\";","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"arraysius"},"content":"        Module module;","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"arraysius"},"content":"        switch (moduleName) {","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"arraysius"},"content":"        case Base64Encoder.MODULE_NAME:","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"arraysius"},"content":"            module \u003d prepareBase64Encoder(parameters);","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"arraysius"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"arraysius"},"content":"        case Base64Decoder.MODULE_NAME:","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"arraysius"},"content":"            module \u003d prepareBase64Decoder(parameters);","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"arraysius"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"arraysius"},"content":"        case HexEncoder.MODULE_NAME:","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"arraysius"},"content":"            module \u003d prepareHexEncoder(parameters);","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"arraysius"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"arraysius"},"content":"        case HexDecoder.MODULE_NAME:","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"arraysius"},"content":"            module \u003d prepareHexDecoder(parameters);","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"arraysius"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"arraysius"},"content":"        case BinaryEncoder.MODULE_NAME:","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"arraysius"},"content":"            module \u003d prepareBinaryEncoder(parameters);","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"arraysius"},"content":"            break;","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"arraysius"},"content":"        case BinaryDecoder.MODULE_NAME:","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"arraysius"},"content":"            module \u003d prepareBinaryDecoder(parameters);","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"arraysius"},"content":"            break;","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"arraysius"},"content":"        case RotEncoder.MODULE_NAME:","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"arraysius"},"content":"            module \u003d prepareRotEncoder(parameters);","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"arraysius"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"arraysius"},"content":"        default:","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"arraysius"},"content":"            throw new ModuleManagerException(ErrorMessages.UNKNOWN_MODULE_NAME);","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"SeenFang"},"content":"        logger.fine(String.format(\"Selected %s\", module.getName()));","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"arraysius"},"content":"        return module;","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"arraysius"},"content":"     * Throws ModuleException if the module parameters are empty.","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"arraysius"},"content":"     * @param parameters Parameters for specific commands.","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"arraysius"},"content":"     * @throws ModuleException If the String array of module parameters is not empty.","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"arraysius"},"content":"    private void ensureNoParameters(String[] parameters) throws ModuleException {","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"arraysius"},"content":"        if (parameters.length \u003e 0) {","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"arraysius"},"content":"            throw new ModuleException(ErrorMessages.TOO_MANY_MODULE_PARAMETERS);","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"arraysius"},"content":"     * Prepares and returns the Base64Encoder.","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"arraysius"},"content":"     * @return The Base64Encoder object.","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"arraysius"},"content":"     * @throws ModuleException If module parameters are provided.","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"arraysius"},"content":"    private Module prepareBase64Encoder(String[] parameters) throws ModuleException {","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"arraysius"},"content":"        ensureNoParameters(parameters);","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"arraysius"},"content":"        return new Base64Encoder();","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"arraysius"},"content":"     * Prepares and returns the Base64Decoder.","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"arraysius"},"content":"     * @return The Base64Decoder object.","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"arraysius"},"content":"     * @throws ModuleException If module parameters are provided.","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"arraysius"},"content":"    private Module prepareBase64Decoder(String[] parameters) throws ModuleException {","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"arraysius"},"content":"        ensureNoParameters(parameters);","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"arraysius"},"content":"        return new Base64Decoder();","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"arraysius"},"content":"     * Prepares and returns the HexEncoder.","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"arraysius"},"content":"     * @return The HexEncoder object.","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"arraysius"},"content":"     * @throws ModuleException If module parameters are provided.","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"arraysius"},"content":"    private Module prepareHexEncoder(String[] parameters) throws ModuleException {","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"arraysius"},"content":"        ensureNoParameters(parameters);","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"arraysius"},"content":"        return new HexEncoder();","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"arraysius"},"content":"     * Prepares and returns the HexDecoder.","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"arraysius"},"content":"     * @return The HexDecoder object.","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"arraysius"},"content":"     * @throws ModuleException If module parameters are provided.","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"arraysius"},"content":"    private Module prepareHexDecoder(String[] parameters) throws ModuleException {","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"arraysius"},"content":"        ensureNoParameters(parameters);","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"arraysius"},"content":"        return new HexDecoder();","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"arraysius"},"content":"     * Prepares and returns the BinaryEncoder.","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"arraysius"},"content":"     * @return The BinaryEncoder object.","lastModifiedDate":"2021-10-20"},{"lineNumber":155,"author":{"gitId":"arraysius"},"content":"     * @throws ModuleException If module parameters are provided.","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"arraysius"},"content":"    private Module prepareBinaryEncoder(String[] parameters) throws ModuleException {","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"arraysius"},"content":"        ensureNoParameters(parameters);","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"arraysius"},"content":"        return new BinaryEncoder();","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":162,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":163,"author":{"gitId":"arraysius"},"content":"     * Prepares and returns the BinaryDecoder.","lastModifiedDate":"2021-10-20"},{"lineNumber":164,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":165,"author":{"gitId":"arraysius"},"content":"     * @return The BinaryDecoder object.","lastModifiedDate":"2021-10-20"},{"lineNumber":166,"author":{"gitId":"arraysius"},"content":"     * @throws ModuleException If module parameters are provided.","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"arraysius"},"content":"    private Module prepareBinaryDecoder(String[] parameters) throws ModuleException {","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"arraysius"},"content":"        ensureNoParameters(parameters);","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"arraysius"},"content":"        return new BinaryDecoder();","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"arraysius"},"content":"     * Prepares and returns the RotEncoder with specified rotation.","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"arraysius"},"content":"     * @param parameters String array of module parameters.","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"arraysius"},"content":"     * @return The RotEncoder object.","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"arraysius"},"content":"     * @throws ModuleException If the number of parameters are incorrect or invalid.","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"arraysius"},"content":"    private Module prepareRotEncoder(String[] parameters) throws ModuleException {","lastModifiedDate":"2021-10-19"},{"lineNumber":181,"author":{"gitId":"arraysius"},"content":"        if (parameters.length \u003d\u003d 0) {","lastModifiedDate":"2021-10-20"},{"lineNumber":182,"author":{"gitId":"arraysius"},"content":"            throw new ModuleException(ErrorMessages.MISSING_MODULE_PARAMETERS);","lastModifiedDate":"2021-10-19"},{"lineNumber":183,"author":{"gitId":"arraysius"},"content":"        } else if (parameters.length \u003e 1) {","lastModifiedDate":"2021-10-20"},{"lineNumber":184,"author":{"gitId":"arraysius"},"content":"            throw new ModuleException(ErrorMessages.TOO_MANY_MODULE_PARAMETERS);","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":187,"author":{"gitId":"arraysius"},"content":"        // First parameter is the rotation offset","lastModifiedDate":"2021-10-19"},{"lineNumber":188,"author":{"gitId":"arraysius"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":189,"author":{"gitId":"arraysius"},"content":"            int rotOffset \u003d Integer.parseInt(parameters[MODULE_PARAMETER_INDEX]);","lastModifiedDate":"2021-10-27"},{"lineNumber":190,"author":{"gitId":"arraysius"},"content":"            return new RotEncoder(rotOffset);","lastModifiedDate":"2021-10-27"},{"lineNumber":191,"author":{"gitId":"arraysius"},"content":"        } catch (NumberFormatException err) {","lastModifiedDate":"2021-10-20"},{"lineNumber":192,"author":{"gitId":"arraysius"},"content":"            throw new ModuleException(ErrorMessages.INVALID_MODULE_PARAMETERS);","lastModifiedDate":"2021-10-19"},{"lineNumber":193,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":194,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":195,"author":{"gitId":"arraysius"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"arraysius":193,"SeenFang":2}},{"path":"src/main/java/decodex/modules/base64/Base64Decoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.modules.base64;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"import decodex.modules.Module;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"import decodex.ui.messages.ErrorMessages;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"import java.util.Base64;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":" * Base64Encoder serves to carry out the Base64 decoding operations.","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Kair0s3"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"arraysius"},"content":"public class Base64Decoder extends Module {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Kair0s3"},"content":"    private final Base64.Decoder base64Decoder;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Kair0s3"},"content":"    public static final String MODULE_NAME \u003d \"base64decode\";","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Kair0s3"},"content":"    public static final String MODULE_DESCRIPTION \u003d \"Decodes the data using Base64 format.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Kair0s3"},"content":"    public Base64Decoder() {","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Kair0s3"},"content":"        super(MODULE_NAME, MODULE_DESCRIPTION);","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Kair0s3"},"content":"        base64Decoder \u003d Base64.getDecoder();","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Kair0s3"},"content":"     * Performs Base64 Decoding on the provided Data object.","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Kair0s3"},"content":"     * @param data The Data object of the encoded data.","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Kair0s3"},"content":"     * @return The Data object of the Base64-decoded data.","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"arraysius"},"content":"     * @throws ModuleException If the Data is not in base64 format.","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"Kair0s3"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Kair0s3"},"content":"    public Data run(Data data) throws ModuleException {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"Kair0s3"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Kair0s3"},"content":"            Data decodedData;","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Kair0s3"},"content":"            byte[] originalBytes \u003d data.getRawBytes();","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Kair0s3"},"content":"            byte[] base64DecodedBytes \u003d base64Decoder.decode(originalBytes);","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"Kair0s3"},"content":"            decodedData \u003d new Data(base64DecodedBytes);","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"Kair0s3"},"content":"            return decodedData;","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Kair0s3"},"content":"        } catch (IllegalArgumentException err) {","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"arraysius"},"content":"            throw new ModuleException(ErrorMessages.BASE64_DECODING_FAILED_MESSAGE);","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"Kair0s3"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"rizemon":1,"arraysius":5,"Kair0s3":37}},{"path":"src/main/java/decodex/modules/base64/Base64Encoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.modules.base64;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":"import decodex.modules.Module;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"import java.util.Base64;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":" * Base64Encoder serves to carry out the Base64 encoding operations.","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":"public class Base64Encoder extends Module {","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Kair0s3"},"content":"    private final Base64.Encoder base64Encoder;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Kair0s3"},"content":"    public static final String MODULE_NAME \u003d \"base64encode\";","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Kair0s3"},"content":"    public static final String MODULE_DESCRIPTION \u003d \"Encodes the data using Base64 format.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"    public Base64Encoder() {","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Kair0s3"},"content":"        super(MODULE_NAME, MODULE_DESCRIPTION);","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Kair0s3"},"content":"        base64Encoder \u003d Base64.getEncoder();","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Kair0s3"},"content":"     * Performs Base64 Encoding on the provided Data object.","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Kair0s3"},"content":"     * @param data The Data object of the original/previous data.","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Kair0s3"},"content":"     * @return The Data object of the Base64-encoded data.","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Kair0s3"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Kair0s3"},"content":"    public Data run(Data data) {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"Kair0s3"},"content":"        Data encodedData;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Kair0s3"},"content":"        byte[] originalBytes \u003d data.getRawBytes();","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Kair0s3"},"content":"        byte[] base64EncodedBytes \u003d base64Encoder.encode(originalBytes);","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Kair0s3"},"content":"        encodedData \u003d new Data(base64EncodedBytes);","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Kair0s3"},"content":"        return encodedData;","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"Kair0s3"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"rizemon":1,"arraysius":2,"Kair0s3":34}},{"path":"src/main/java/decodex/modules/binary/BinaryDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.modules.binary;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import decodex.modules.Module;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"arraysius"},"content":"import decodex.ui.messages.ErrorMessages;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"arraysius"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":" * The BinaryDecoder class handles the binary decoding operations.","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"arraysius"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"arraysius"},"content":"public class BinaryDecoder extends Module {","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"arraysius"},"content":"    public static final String MODULE_NAME \u003d \"bindecode\";","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"arraysius"},"content":"    public static final String MODULE_DESCRIPTION \u003d \"Decodes the data from binary.\";","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"arraysius"},"content":"    private static final int BINARY_RADIX \u003d 2;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"arraysius"},"content":"    private static final String VALID_BINARY_REGEX \u003d \"^([01]{8})*$\";","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"arraysius"},"content":"    private static final int BYTE_LENGTH \u003d 8;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"arraysius"},"content":"    public BinaryDecoder() {","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"arraysius"},"content":"        super(MODULE_NAME, MODULE_DESCRIPTION);","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"arraysius"},"content":"     * Performs binary decoding on the provided Data object.","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"arraysius"},"content":"     * @param data The Data to be decoded.","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"arraysius"},"content":"     * @return A Data object containing the binary decoded data.","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"arraysius"},"content":"     * @throws ModuleException If the Data is not in binary format.","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"arraysius"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"arraysius"},"content":"    public Data run(Data data) throws ModuleException {","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"arraysius"},"content":"        String binString \u003d data.toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"arraysius"},"content":"        if (!isValidBinary(binString)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"arraysius"},"content":"            throw new ModuleException(ErrorMessages.BINARY_DECODING_FAILED_MESSAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"arraysius"},"content":"        String[] binaryTokens \u003d splitBinaryString(binString);","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"arraysius"},"content":"        byte[] newBytes \u003d new byte[binaryTokens.length];","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"arraysius"},"content":"        for (int i \u003d 0; i \u003c binaryTokens.length; i++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"arraysius"},"content":"            newBytes[i] \u003d Byte.parseByte(binaryTokens[i], BINARY_RADIX);","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"arraysius"},"content":"        return new Data(newBytes);","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"arraysius"},"content":"     * Checks if the provided binary string is in valid format.","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"arraysius"},"content":"     * @param binString Binary string to check if it is valid.","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"arraysius"},"content":"     * @return True if provided binary string is valid.","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"arraysius"},"content":"    private boolean isValidBinary(String binString) {","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"arraysius"},"content":"        Pattern validBinaryPattern \u003d Pattern.compile(VALID_BINARY_REGEX);","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"arraysius"},"content":"        Matcher validBinaryMatcher \u003d validBinaryPattern.matcher(binString);","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"arraysius"},"content":"        return validBinaryMatcher.find();","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"arraysius"},"content":"     * Splits the binary string into a String array of 8 characters each.","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"arraysius"},"content":"     * @param binString Binary string to be split.","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"arraysius"},"content":"     * @return A String array of 8 character binary strings.","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"arraysius"},"content":"    private String[] splitBinaryString(String binString) {","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"arraysius"},"content":"        assert binString.length() % BYTE_LENGTH \u003d\u003d 0 : \"Binary string should be valid\";","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"arraysius"},"content":"        String[] binaryTokens \u003d new String[binString.length() / BYTE_LENGTH];","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"arraysius"},"content":"        for (int i \u003d 0; i \u003c binString.length(); i +\u003d BYTE_LENGTH) {","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"arraysius"},"content":"            binaryTokens[i / BYTE_LENGTH] \u003d binString.substring(i, i + BYTE_LENGTH);","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"arraysius"},"content":"        return binaryTokens;","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"arraysius"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"arraysius":80}},{"path":"src/main/java/decodex/modules/binary/BinaryEncoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.modules.binary;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":"import decodex.modules.Module;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":" * The BinaryEncoder class handles the binary encoding operations.","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"arraysius"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"public class BinaryEncoder extends Module {","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":"    public static final String MODULE_NAME \u003d \"binencode\";","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"arraysius"},"content":"    public static final String MODULE_DESCRIPTION \u003d \"Encodes the data into binary.\";","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"arraysius"},"content":"    private static final int BYTE_LENGTH \u003d 8;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"arraysius"},"content":"    private static final String BINARY_ZERO_PREFIX \u003d \"0\";","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"arraysius"},"content":"    public BinaryEncoder() {","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"arraysius"},"content":"        super(MODULE_NAME, MODULE_DESCRIPTION);","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"arraysius"},"content":"     * Performs binary encoding on the provided Data object.","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"arraysius"},"content":"     * @param data The Data to be encoded.","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"arraysius"},"content":"     * @return A Data object containing the binary encoded data.","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"arraysius"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"arraysius"},"content":"    public Data run(Data data) {","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"arraysius"},"content":"        StringBuilder encodedStringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"arraysius"},"content":"        for (byte b : data.getRawBytes()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"arraysius"},"content":"            String binString \u003d leftPad(Integer.toBinaryString(b));","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"arraysius"},"content":"            encodedStringBuilder.append(binString);","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"arraysius"},"content":"        String encodedString \u003d encodedStringBuilder.toString().trim();","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"arraysius"},"content":"        return new Data(encodedString);","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"arraysius"},"content":"     * Pads leading \"0\"s until the binary string is 8 characters long.","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"arraysius"},"content":"     * @param binString Binary string to be padded.","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"arraysius"},"content":"     * @return A padded binary string.","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"arraysius"},"content":"    private String leftPad(String binString) {","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"arraysius"},"content":"        if (binString.length() \u003c BYTE_LENGTH) {","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"arraysius"},"content":"            return BINARY_ZERO_PREFIX.repeat(BYTE_LENGTH - binString.length()) + binString;","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"arraysius"},"content":"        return binString;","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"arraysius"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"arraysius":53}},{"path":"src/main/java/decodex/modules/hex/HexDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package decodex.modules.hex;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"import decodex.modules.Module;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"import decodex.ui.messages.ErrorMessages;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":" * The HexDecoder class converts a hexadecimal string back into its raw value.","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"arraysius"},"content":"public class HexDecoder extends Module {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"    public static final String MODULE_NAME \u003d \"hexdecode\";","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"    public static final String MODULE_DESCRIPTION \u003d \"Converts a hexadecimal string back into its raw value\";","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"    public static final int HEXADECIMAL_RADIX \u003d 16;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"    public static final String REGEX_SPLIT_EVERY_2_CHARS \u003d \"(?\u003c\u003d\\\\G..)\";","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"SeenFang"},"content":"    public HexDecoder() {","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"SeenFang"},"content":"        super(MODULE_NAME, MODULE_DESCRIPTION);","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"SeenFang"},"content":"     * Decodes the given hexadecimal string back into its raw value.","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"SeenFang"},"content":"     * @param data Data object to be decoded.","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"SeenFang"},"content":"     * @return new Data object representing the decoded input.","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"arraysius"},"content":"     * @throws ModuleException If the Data is not in hexadecimal format.","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"SeenFang"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"SeenFang"},"content":"    public Data run(Data data) throws ModuleException {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"SeenFang"},"content":"        String inputString \u003d data.toString().toLowerCase();","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"SeenFang"},"content":"        if (!isValidHex(inputString)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"arraysius"},"content":"            throw new ModuleException(ErrorMessages.HEX_DECODING_FAILED_MESSAGE);","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"SeenFang"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"SeenFang"},"content":"        String decodedString \u003d Arrays","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"SeenFang"},"content":"                .stream(inputString.split(REGEX_SPLIT_EVERY_2_CHARS))","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"SeenFang"},"content":"                .map(s -\u003e Character.toString((char) Integer.parseInt(s, HEXADECIMAL_RADIX)))","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"SeenFang"},"content":"                .collect(Collectors.joining());","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"SeenFang"},"content":"        return new Data(decodedString);","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"SeenFang"},"content":"     * Checks if the provided hexadecimal string is valid.","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"SeenFang"},"content":"     * @param hexString Hexadecimal string to be checked.","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"SeenFang"},"content":"     * @return Boolean if hexadecimal string is valid.","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"SeenFang"},"content":"    private boolean isValidHex(String hexString) {","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"SeenFang"},"content":"        boolean isEven \u003d hexString.length() % 2 \u003d\u003d 0;","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"SeenFang"},"content":"        boolean isHexCharacters \u003d isHexCharacters(hexString);","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"SeenFang"},"content":"        return isEven \u0026\u0026 isHexCharacters;","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"SeenFang"},"content":"     * Checks if the provided hexadecimal string is of valid hexadecimal characters.","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"SeenFang"},"content":"     * @param hexString Hexadecimal string to be checked.","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"SeenFang"},"content":"     * @return Boolean is hexadecimal string consists of valid characters.","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"SeenFang"},"content":"    private boolean isHexCharacters(String hexString) {","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"SeenFang"},"content":"        // Check if String is valid hexadecimal String.","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"SeenFang"},"content":"        for (int i \u003d 1; i \u003c hexString.length(); i++) {","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"SeenFang"},"content":"            if (Character.digit(hexString.charAt(i), 16) \u003d\u003d -1) {","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"SeenFang"},"content":"                return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"SeenFang"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"SeenFang"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"SeenFang"},"content":"        return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"arraysius":5,"SeenFang":72}},{"path":"src/main/java/decodex/modules/hex/HexEncoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package decodex.modules.hex;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":"import decodex.modules.Module;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":" * The HexEncoder class converts the input string to hexadecimal bytes.","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"public class HexEncoder extends Module {","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"    public static final String MODULE_NAME \u003d \"hexencode\";","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"    public static final String MODULE_DESCRIPTION \u003d \"Converts the input string to hexadecimal bytes\";","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"    public HexEncoder() {","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"        super(MODULE_NAME, MODULE_DESCRIPTION);","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"     * Encodes the given Data object to Hexadecimal.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"SeenFang"},"content":"     * @param data Data object to be encoded.","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"SeenFang"},"content":"     * @return new Data object representing the encoded input.","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"SeenFang"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"SeenFang"},"content":"    public Data run(Data data) {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"SeenFang"},"content":"        StringBuilder encodedStringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"SeenFang"},"content":"        for (byte b : data.getRawBytes()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"SeenFang"},"content":"            encodedStringBuilder.append(String.format(\"%02x\", b));","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"SeenFang"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"SeenFang"},"content":"        String encodedString \u003d encodedStringBuilder.toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"SeenFang"},"content":"        return new Data(encodedString);","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"arraysius":2,"SeenFang":34}},{"path":"src/main/java/decodex/modules/rot/RotEncoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.modules.rot;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import decodex.modules.Module;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":" * The RotEncoder class handles the rotation of the alphabets in the input string.","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"public class RotEncoder extends Module {","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"    public static final String MODULE_NAME \u003d \"rotencode\";","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"    public static final String MODULE_DESCRIPTION \u003d \"Rotates the alphabets in the input string by a specified amount\";","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"    private static final char LOWERCASE_A \u003d \u0027a\u0027;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"    private static final char UPPERCASE_A \u003d \u0027A\u0027;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"    private static final int ALPHABETS_COUNT \u003d 26;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"    private final int rotateOffset;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"    public RotEncoder(int rotateOffset) {","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"        super(MODULE_NAME, MODULE_DESCRIPTION);","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"        this.rotateOffset \u003d rotateOffset;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"     * Applies the rotation to the given Data object.","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"     * @param data The given Data object.","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"     * @return A Data object with its alphabetical characters rotated.","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"    public Data run(Data data) {","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"        StringBuilder encodedStringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"        for (byte b : data.getRawBytes()) {","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"            char updatedChar \u003d (char) b;","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"            if (Character.isLowerCase((char) b)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"                updatedChar \u003d rotateLowercaseAlphabet((char) b, rotateOffset);","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"            } else if (Character.isUpperCase((char) b)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"                updatedChar \u003d rotateUppercaseAlphabet((char) b, rotateOffset);","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"            }","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"            encodedStringBuilder.append(updatedChar);","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"        String encodedString \u003d encodedStringBuilder.toString();","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"        return new Data(encodedString);","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"rizemon"},"content":"     * Rotates the given lowercase alphabet.","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"rizemon"},"content":"     * @param c            The given lowercase alphabet.","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"rizemon"},"content":"     * @param rotateOffset Number of positions to rotate the alphabet by.","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"rizemon"},"content":"     * @return The updated alphabet.","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"rizemon"},"content":"    private char rotateLowercaseAlphabet(char c, int rotateOffset) {","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"rizemon"},"content":"        int originalAlphabetIndex \u003d c - LOWERCASE_A;","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"rizemon"},"content":"        int updatedAlphabetIndex \u003d Math.floorMod(originalAlphabetIndex + rotateOffset, ALPHABETS_COUNT);","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"rizemon"},"content":"        return (char) (LOWERCASE_A + updatedAlphabetIndex);","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"rizemon"},"content":"     * Rotates the given uppercase alphabet.","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"rizemon"},"content":"     * @param c            The given uppercase alphabet.","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"rizemon"},"content":"     * @param rotateOffset Number of positions to rotate the alphabet by.","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"rizemon"},"content":"     * @return The updated alphabet.","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"rizemon"},"content":"    private char rotateUppercaseAlphabet(char c, int rotateOffset) {","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"rizemon"},"content":"        int originalAlphabetIndex \u003d c - UPPERCASE_A;","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"rizemon"},"content":"        int updatedAlphabetIndex \u003d Math.floorMod(originalAlphabetIndex + rotateOffset, ALPHABETS_COUNT);","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"rizemon"},"content":"        return (char) (UPPERCASE_A + updatedAlphabetIndex);","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"Kair0s3"},"content":"     * Returns a String formatted RotEncoder.","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"Kair0s3"},"content":"     * @return The string formatted RotEncoder.","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"Kair0s3"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"Kair0s3"},"content":"    public String toString() {","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"Kair0s3"},"content":"        return super.toString() + \" \" + rotateOffset;","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"rizemon":74,"Kair0s3":10}},{"path":"src/main/java/decodex/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.parser;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"import decodex.commands.Command;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"import decodex.commands.ExitCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":"import decodex.commands.InputCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"import decodex.commands.ListCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":"import decodex.commands.ResetCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":"import decodex.commands.SelectCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"import decodex.commands.HelpCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.CommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.exception.ParserException;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"arraysius"},"content":"import decodex.ui.messages.ErrorMessages;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Kair0s3"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"Kair0s3"},"content":" * The Parser class handles the parsing and validation of the user input.","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"public class Parser {","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Kair0s3"},"content":"     * Specifies the index of the tokens where specific parameters can be found.","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Kair0s3"},"content":"    private static final int COMMAND_INDEX \u003d 0;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Kair0s3"},"content":"     * Specifies the starting index where the arguments can be found.","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"arraysius"},"content":"    protected static final int STARTING_ARGUMENTS_INDEX \u003d 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"arraysius"},"content":"     * Specifies the token used to split the user input by.","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"arraysius"},"content":"    private static final String SPLIT_REGEX \u003d \"\\\\s+\";","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Kair0s3"},"content":"     * Specifies the valid length of the tokens and used to check validity of tokens.","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"Kair0s3"},"content":"    private static final int VALID_TOKENS_LENGTH_FOR_COMMAND \u003d 1;","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"arraysius"},"content":"     * Specifies the number of tokens for list command with no category and with a category.","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"arraysius"},"content":"    private static final int LIST_COMMAND_LENGTH_NO_CATEGORY \u003d 1;","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"arraysius"},"content":"    private static final int LIST_COMMAND_LENGTH_HAS_CATEGORY \u003d 2;","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"arraysius"},"content":"    private static final int LIST_COMMAND_CATEGORY_STARTING_INDEX \u003d 1;","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"arraysius"},"content":"     * Specifies the valid number of tokens and indexes for category and parameters for select command.","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"arraysius"},"content":"    private static final int VALID_TOKENS_LENGTH_FOR_SELECT_COMMAND \u003d 3;","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"arraysius"},"content":"    private static final int SELECT_CATEGORY_INDEX \u003d 1;","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"arraysius"},"content":"    private static final int SELECT_ITEM_NAME_INDEX \u003d 2;","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"arraysius"},"content":"    private static final int SELECT_PARAMETERS_START_INDEX \u003d 3;","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"arraysius"},"content":"    private static final String RECIPE_COMMAND_WORD \u003d \"recipe\";","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"arraysius"},"content":"    private static final RecipeCommandParser recipeCommandParser \u003d new RecipeCommandParser();","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"Kair0s3"},"content":"     * Returns the type of command that the user has specified.","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"Kair0s3"},"content":"     * @param userInput The input specified by the user.","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"Kair0s3"},"content":"     * @return The type of the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"Kair0s3"},"content":"     * @throws ParserException If the user input is empty or missing the command type.","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"Kair0s3"},"content":"    public String getCommandType(String userInput) throws ParserException {","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"Kair0s3"},"content":"        String strippedUserInput \u003d userInput.stripLeading();","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"Kair0s3"},"content":"        if (strippedUserInput.isEmpty()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"arraysius"},"content":"            throw new ParserException(ErrorMessages.MISSING_COMMAND_TYPE);","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"Kair0s3"},"content":"        String[] tokens \u003d strippedUserInput.split(\" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"Kair0s3"},"content":"        boolean isInvalidTokensLength \u003d tokens.length \u003c VALID_TOKENS_LENGTH_FOR_COMMAND;","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"Kair0s3"},"content":"        if (isInvalidTokensLength) {","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"arraysius"},"content":"            throw new ParserException(ErrorMessages.MISSING_COMMAND_TYPE);","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"Kair0s3"},"content":"        String commandType \u003d tokens[COMMAND_INDEX];","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"Kair0s3"},"content":"        assert !commandType.isEmpty() : \"Command Type should not be empty\";","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"Kair0s3"},"content":"        return commandType;","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"Kair0s3"},"content":"     * Returns the InputCommand\u0027s argument string that the user has specified.","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Kair0s3"},"content":"     * @param userInput The input specified by the user.","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Kair0s3"},"content":"     * @return The argument string.","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"Kair0s3"},"content":"     * @throws ParserException If the argument string is empty.","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Kair0s3"},"content":"    public String getInputString(String userInput) throws ParserException {","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Kair0s3"},"content":"        String strippedUserInput \u003d userInput.stripLeading();","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"Kair0s3"},"content":"        String[] tokens \u003d strippedUserInput.split(\" \", -1);","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"Kair0s3"},"content":"        String argumentString \u003d String.join(\" \",","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"Kair0s3"},"content":"                Arrays.copyOfRange(tokens, STARTING_ARGUMENTS_INDEX, tokens.length));","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"Kair0s3"},"content":"        if (argumentString.isEmpty()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"arraysius"},"content":"            throw new ParserException(ErrorMessages.INPUT_EMPTY);","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"Kair0s3"},"content":"        return argumentString;","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"Kair0s3"},"content":"     * Parses the user input specified by the user and returns its corresponding Command.","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"Kair0s3"},"content":"     * @param userInput The user input specified by the user.","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"Kair0s3"},"content":"     * @return The corresponding Command object.","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"Kair0s3"},"content":"     * @throws ParserException  If the command type is unknown or invalid.","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"arraysius"},"content":"     * @throws CommandException If the command has invalid number of arguments.","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"arraysius"},"content":"    public Command parseCommand(String userInput) throws ParserException, CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"Kair0s3"},"content":"        Command command;","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"Kair0s3"},"content":"        String commandType \u003d getCommandType(userInput);","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"Kair0s3"},"content":"        switch (commandType) {","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"Kair0s3"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"Kair0s3"},"content":"            command \u003d prepareExitCommand();","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"Kair0s3"},"content":"            break;","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"rizemon"},"content":"        case InputCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"Kair0s3"},"content":"            command \u003d prepareInputCommand(userInput);","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"Kair0s3"},"content":"            break;","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"Kair0s3"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"Kair0s3"},"content":"            command \u003d prepareListCommand(userInput);","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"Kair0s3"},"content":"            break;","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"Kair0s3"},"content":"        case ResetCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"Kair0s3"},"content":"            command \u003d prepareResetCommand();","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"Kair0s3"},"content":"            break;","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"Kair0s3"},"content":"        case SelectCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"Kair0s3"},"content":"            command \u003d prepareSelectCommand(userInput);","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"Kair0s3"},"content":"            break;","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"rizemon"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"rizemon"},"content":"            command \u003d prepareHelpCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"rizemon"},"content":"            break;","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"arraysius"},"content":"        case RECIPE_COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"arraysius"},"content":"            command \u003d prepareRecipeSubcommands(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"arraysius"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"Kair0s3"},"content":"        default:","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"arraysius"},"content":"            throw new ParserException(ErrorMessages.UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-17"},{"lineNumber":140,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"Kair0s3"},"content":"        return command;","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"arraysius"},"content":"     * Splits the user input by an arbitrary number of spaces into a list of tokens.","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"arraysius"},"content":"     * @param userInput The user input specified by the user.","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"arraysius"},"content":"     * @return A list of tokens.","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"arraysius"},"content":"    protected String[] getTokens(String userInput) {","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"arraysius"},"content":"        String strippedUserInput \u003d userInput.stripLeading();","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"arraysius"},"content":"        return strippedUserInput.split(SPLIT_REGEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"Kair0s3"},"content":"     * Prepares and returns the ExitCommand.","lastModifiedDate":"2021-10-16"},{"lineNumber":157,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"Kair0s3"},"content":"     * @return The ExitCommand object.","lastModifiedDate":"2021-10-16"},{"lineNumber":159,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"Kair0s3"},"content":"    private ExitCommand prepareExitCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"Kair0s3"},"content":"        return new ExitCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"Kair0s3"},"content":"     * Prepares and returns the InputCommand using the specified user input.","lastModifiedDate":"2021-10-16"},{"lineNumber":166,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"Kair0s3"},"content":"     * @param userInput The user input specified by the user.","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"Kair0s3"},"content":"     * @return The InputCommand object.","lastModifiedDate":"2021-10-16"},{"lineNumber":169,"author":{"gitId":"Kair0s3"},"content":"     * @throws ParserException If the argument string is empty.","lastModifiedDate":"2021-10-17"},{"lineNumber":170,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"Kair0s3"},"content":"    private InputCommand prepareInputCommand(String userInput) throws ParserException {","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"Kair0s3"},"content":"        String inputData \u003d getInputString(userInput);","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"Kair0s3"},"content":"        return new InputCommand(inputData);","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"arraysius"},"content":"     * Returns the list category for the list command.","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"arraysius"},"content":"     * @param userInput The user input specified by the user.","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"arraysius"},"content":"     * @return The list category String.","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"arraysius"},"content":"     * @throws CommandException If the command has more than 1 argument.","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"arraysius"},"content":"    private String getListCategory(String userInput) throws CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"arraysius"},"content":"        String[] tokens \u003d getTokens(userInput);","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":186,"author":{"gitId":"arraysius"},"content":"        if (tokens.length \u003d\u003d LIST_COMMAND_LENGTH_NO_CATEGORY) {","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"arraysius"},"content":"            return null;","lastModifiedDate":"2021-10-21"},{"lineNumber":188,"author":{"gitId":"arraysius"},"content":"        } else if (tokens.length \u003d\u003d LIST_COMMAND_LENGTH_HAS_CATEGORY) {","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"arraysius"},"content":"            return tokens[LIST_COMMAND_CATEGORY_STARTING_INDEX];","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"arraysius"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":191,"author":{"gitId":"arraysius"},"content":"            throw new CommandException(ErrorMessages.TOO_MANY_COMMAND_ARGUMENTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":192,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":193,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":194,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":196,"author":{"gitId":"Kair0s3"},"content":"     * Prepares and returns the ListCommand.","lastModifiedDate":"2021-10-16"},{"lineNumber":197,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":198,"author":{"gitId":"Kair0s3"},"content":"     * @return The ListCommand object.","lastModifiedDate":"2021-10-16"},{"lineNumber":199,"author":{"gitId":"arraysius"},"content":"     * @throws CommandException If the number of command argument is invalid.","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":201,"author":{"gitId":"Kair0s3"},"content":"    private ListCommand prepareListCommand(String userInput) throws CommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":202,"author":{"gitId":"arraysius"},"content":"        String listCategory \u003d getListCategory(userInput);","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"arraysius"},"content":"        if (listCategory !\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":204,"author":{"gitId":"arraysius"},"content":"            listCategory \u003d listCategory.strip();","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"arraysius"},"content":"        return new ListCommand(listCategory);","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":208,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":209,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":210,"author":{"gitId":"Kair0s3"},"content":"     * Prepares and returns the ResetCommand.","lastModifiedDate":"2021-10-16"},{"lineNumber":211,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":212,"author":{"gitId":"Kair0s3"},"content":"     * @return The ResetCommand object.","lastModifiedDate":"2021-10-16"},{"lineNumber":213,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":214,"author":{"gitId":"Kair0s3"},"content":"    private ResetCommand prepareResetCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":215,"author":{"gitId":"Kair0s3"},"content":"        return new ResetCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":216,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":217,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":218,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":219,"author":{"gitId":"Kair0s3"},"content":"     * Prepares and returns the SelectCommand using the specified user input.","lastModifiedDate":"2021-10-16"},{"lineNumber":220,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":221,"author":{"gitId":"Kair0s3"},"content":"     * @param userInput The user input specified by the user.","lastModifiedDate":"2021-10-10"},{"lineNumber":222,"author":{"gitId":"Kair0s3"},"content":"     * @return The SelectCommand object.","lastModifiedDate":"2021-10-16"},{"lineNumber":223,"author":{"gitId":"arraysius"},"content":"     * @throws CommandException If the number of command arguments is invalid.","lastModifiedDate":"2021-10-24"},{"lineNumber":224,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":225,"author":{"gitId":"arraysius"},"content":"    private SelectCommand prepareSelectCommand(String userInput) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":226,"author":{"gitId":"arraysius"},"content":"        String[] tokens \u003d getTokens(userInput);","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"arraysius"},"content":"        if (tokens.length \u003c VALID_TOKENS_LENGTH_FOR_SELECT_COMMAND) {","lastModifiedDate":"2021-10-24"},{"lineNumber":228,"author":{"gitId":"arraysius"},"content":"            throw new CommandException(ErrorMessages.MISSING_ARGUMENT);","lastModifiedDate":"2021-10-24"},{"lineNumber":229,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":230,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":231,"author":{"gitId":"arraysius"},"content":"        String selectCategory \u003d tokens[SELECT_CATEGORY_INDEX];","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"arraysius"},"content":"        String itemName \u003d tokens[SELECT_ITEM_NAME_INDEX];","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"arraysius"},"content":"        String[] parameters \u003d Arrays.copyOfRange(tokens, SELECT_PARAMETERS_START_INDEX, tokens.length);","lastModifiedDate":"2021-10-24"},{"lineNumber":234,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"arraysius"},"content":"        return new SelectCommand(selectCategory, itemName, parameters);","lastModifiedDate":"2021-10-24"},{"lineNumber":236,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":238,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":239,"author":{"gitId":"arraysius"},"content":"     * Prepares and returns recipe subcommands using the specified user input.","lastModifiedDate":"2021-10-25"},{"lineNumber":240,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":241,"author":{"gitId":"arraysius"},"content":"     * @param userInput The user input specified by the user.","lastModifiedDate":"2021-10-25"},{"lineNumber":242,"author":{"gitId":"arraysius"},"content":"     * @return The respective recipe command.","lastModifiedDate":"2021-10-25"},{"lineNumber":243,"author":{"gitId":"arraysius"},"content":"     * @throws CommandException If the recipe command is invalid.","lastModifiedDate":"2021-10-25"},{"lineNumber":244,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":245,"author":{"gitId":"arraysius"},"content":"    private Command prepareRecipeSubcommands(String userInput) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":246,"author":{"gitId":"arraysius"},"content":"        return recipeCommandParser.parseCommand(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":247,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":248,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":249,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":250,"author":{"gitId":"rizemon"},"content":"     * Prepares and returns the HelpCommand.","lastModifiedDate":"2021-10-26"},{"lineNumber":251,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":252,"author":{"gitId":"rizemon"},"content":"     * @return The HelpCommand object.","lastModifiedDate":"2021-10-26"},{"lineNumber":253,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":254,"author":{"gitId":"rizemon"},"content":"    private HelpCommand prepareHelpCommand() {","lastModifiedDate":"2021-10-26"},{"lineNumber":255,"author":{"gitId":"rizemon"},"content":"        return new HelpCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":256,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":257,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"rizemon":19,"arraysius":96,"Kair0s3":142}},{"path":"src/main/java/decodex/parser/RecipeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"import decodex.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"import decodex.commands.recipe.RecipeDeleteCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":"import decodex.commands.recipe.RecipeNewCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"arraysius"},"content":"import decodex.commands.recipe.RecipePopCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"import decodex.commands.recipe.RecipePushCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"arraysius"},"content":"import decodex.commands.recipe.RecipeResetCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":"import decodex.commands.recipe.RecipeSelectCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"import decodex.commands.recipe.RecipeListCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"arraysius"},"content":"import decodex.ui.messages.ErrorMessages;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"arraysius"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"arraysius"},"content":" * The RecipeCommandParser class handles the parsing and validation of recipe commands.","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"arraysius"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"arraysius"},"content":"public class RecipeCommandParser extends Parser {","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"arraysius"},"content":"    private static final int SUBCOMMAND_WORD_INDEX \u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"arraysius"},"content":"    private static final int SUBARGUMENT_STARTING_INDEX \u003d 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"arraysius"},"content":"    private static final int MODULE_PARAMETERS_STARTING_INDEX \u003d 2;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"arraysius"},"content":"    private static final int SUBCOMMAND_NO_ARGUMENT_LENGTH \u003d 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"arraysius"},"content":"    private static final int SUBCOMMAND_WITH_ARGUMENT_LENGTH \u003d 2;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"arraysius"},"content":"    public RecipeCommandParser() {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"arraysius"},"content":"     * Parses the subcommand tokens and returns its corresponding recipe command.","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"arraysius"},"content":"     * @param userInput The user input specified by the user.","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"arraysius"},"content":"     * @return The respective recipe command.","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"arraysius"},"content":"     * @throws CommandException If the number of arguments is invalid.","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"arraysius"},"content":"    public Command parseCommand(String userInput) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"arraysius"},"content":"        assert userInput !\u003d null : \"userInput should not be null\";","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"arraysius"},"content":"        String[] tokens \u003d getTokens(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"arraysius"},"content":"        String[] subCommandTokens \u003d Arrays.copyOfRange(tokens, STARTING_ARGUMENTS_INDEX, tokens.length);","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"arraysius"},"content":"        // Check minimum subcommand length","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"arraysius"},"content":"        if (subCommandTokens.length \u003c SUBCOMMAND_NO_ARGUMENT_LENGTH) {","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"arraysius"},"content":"            throw new CommandException(ErrorMessages.MISSING_ARGUMENT);","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"arraysius"},"content":"        Command recipeCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"arraysius"},"content":"        String subCommand \u003d subCommandTokens[SUBCOMMAND_WORD_INDEX];","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"arraysius"},"content":"        switch (subCommand) {","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"arraysius"},"content":"        case RecipeNewCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"arraysius"},"content":"            recipeCommand \u003d prepareRecipeNewCommand(subCommandTokens);","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"arraysius"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"arraysius"},"content":"        case RecipeSelectCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"arraysius"},"content":"            recipeCommand \u003d prepareRecipeSelectCommand(subCommandTokens);","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"arraysius"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"arraysius"},"content":"        case RecipePushCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"arraysius"},"content":"            recipeCommand \u003d prepareRecipePushCommand(subCommandTokens);","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"arraysius"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"arraysius"},"content":"        case RecipePopCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"arraysius"},"content":"            recipeCommand \u003d prepareRecipePopCommand(subCommandTokens);","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"arraysius"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"arraysius"},"content":"        case RecipeResetCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"arraysius"},"content":"            recipeCommand \u003d prepareRecipeResetCommand(subCommandTokens);","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"arraysius"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"rizemon"},"content":"        case RecipeListCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"rizemon"},"content":"            recipeCommand \u003d prepareRecipeListCommand(subCommandTokens);","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"rizemon"},"content":"            break;","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"arraysius"},"content":"        case RecipeDeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"arraysius"},"content":"            recipeCommand \u003d prepareRecipeDeleteCommand(subCommandTokens);","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"arraysius"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"arraysius"},"content":"        default:","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"arraysius"},"content":"            throw new CommandException(ErrorMessages.INVALID_RECIPE_COMMAND);","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"arraysius"},"content":"        return recipeCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"arraysius"},"content":"     * Checks the number of arguments is valid.","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"arraysius"},"content":"     * @param subCommandTokens The list of recipe subcommand tokens.","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"arraysius"},"content":"     * @param numberOfArguments      The valid number of arguments.","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"arraysius"},"content":"     * @throws CommandException If the number of arguments is invalid.","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"arraysius"},"content":"    private void checkValidNumberOfArguments(String[] subCommandTokens, int numberOfArguments)","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"arraysius"},"content":"            throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"arraysius"},"content":"        if (subCommandTokens.length !\u003d numberOfArguments) {","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"arraysius"},"content":"            throw new CommandException(ErrorMessages.TOO_MANY_COMMAND_ARGUMENTS);","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"arraysius"},"content":"     * Prepares and returns the RecipeNewCommand.","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"arraysius"},"content":"     * @param subCommandTokens The list of recipe subcommand tokens.","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"arraysius"},"content":"     * @return The RecipeNewCommand object.","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"arraysius"},"content":"     * @throws CommandException If the number of arguments is invalid.","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"arraysius"},"content":"    private RecipeNewCommand prepareRecipeNewCommand(String[] subCommandTokens) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"arraysius"},"content":"        checkValidNumberOfArguments(subCommandTokens, SUBCOMMAND_WITH_ARGUMENT_LENGTH);","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"arraysius"},"content":"        String recipeName \u003d subCommandTokens[SUBARGUMENT_STARTING_INDEX];","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"arraysius"},"content":"        return new RecipeNewCommand(recipeName);","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"arraysius"},"content":"     * Prepares and returns the RecipeSelectCommand.","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"arraysius"},"content":"     * @param subCommandTokens The list of recipe subcommand tokens.","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"arraysius"},"content":"     * @return The RecipeSelectCommand object.","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"arraysius"},"content":"     * @throws CommandException If the number of arguments is invalid.","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"arraysius"},"content":"    private RecipeSelectCommand prepareRecipeSelectCommand(String[] subCommandTokens) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"arraysius"},"content":"        checkValidNumberOfArguments(subCommandTokens, SUBCOMMAND_WITH_ARGUMENT_LENGTH);","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"arraysius"},"content":"        String recipeName \u003d subCommandTokens[SUBARGUMENT_STARTING_INDEX];","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"arraysius"},"content":"        return new RecipeSelectCommand(recipeName);","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"arraysius"},"content":"     * Prepares and returns the RecipePushCommand.","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"arraysius"},"content":"     * @param subCommandTokens The list of recipe subcommand tokens.","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"arraysius"},"content":"     * @return The RecipePushCommand object.","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"arraysius"},"content":"     * @throws CommandException If the number of arguments is invalid.","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"arraysius"},"content":"    private RecipePushCommand prepareRecipePushCommand(String[] subCommandTokens) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"arraysius"},"content":"        if (subCommandTokens.length \u003c SUBCOMMAND_WITH_ARGUMENT_LENGTH) {","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"arraysius"},"content":"            throw new CommandException(ErrorMessages.MISSING_ARGUMENT);","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"arraysius"},"content":"        String moduleName \u003d subCommandTokens[SUBARGUMENT_STARTING_INDEX];","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"arraysius"},"content":"        String[] parameters \u003d Arrays.copyOfRange(subCommandTokens, MODULE_PARAMETERS_STARTING_INDEX,","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"arraysius"},"content":"                subCommandTokens.length);","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"arraysius"},"content":"        return new RecipePushCommand(moduleName, parameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"arraysius"},"content":"     * Prepares and returns the RecipePopCommand.","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"arraysius"},"content":"     * @param subCommandTokens The list of recipe subcommand tokens.","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"arraysius"},"content":"     * @return The RecipePopCommand object.","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"arraysius"},"content":"     * @throws CommandException If the number of arguments is invalid.","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"arraysius"},"content":"    private RecipePopCommand prepareRecipePopCommand(String[] subCommandTokens) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"arraysius"},"content":"        checkValidNumberOfArguments(subCommandTokens, SUBCOMMAND_NO_ARGUMENT_LENGTH);","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"arraysius"},"content":"        return new RecipePopCommand();","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"arraysius"},"content":"     * Prepares and returns the RecipeResetCommand.","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"arraysius"},"content":"     * @param subCommandTokens The list of recipe subcommand tokens.","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"arraysius"},"content":"     * @return The RecipeResetCommand object.","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"arraysius"},"content":"     * @throws CommandException If the number of arguments is invalid.","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"arraysius"},"content":"    private RecipeResetCommand prepareRecipeResetCommand(String[] subCommandTokens) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"arraysius"},"content":"        checkValidNumberOfArguments(subCommandTokens, SUBCOMMAND_NO_ARGUMENT_LENGTH);","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"arraysius"},"content":"        return new RecipeResetCommand();","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"arraysius"},"content":"     * Prepares and returns the RecipeDeleteCommand.","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"arraysius"},"content":"     * @param subCommandTokens The list of recipe subcommand tokens.","lastModifiedDate":"2021-10-25"},{"lineNumber":166,"author":{"gitId":"arraysius"},"content":"     * @return The RecipeDeleteCommand object.","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"arraysius"},"content":"     * @throws CommandException If the number of arguments is invalid.","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"arraysius"},"content":"    private RecipeDeleteCommand prepareRecipeDeleteCommand(String[] subCommandTokens) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"arraysius"},"content":"        checkValidNumberOfArguments(subCommandTokens, SUBCOMMAND_WITH_ARGUMENT_LENGTH);","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"arraysius"},"content":"        String recipeName \u003d subCommandTokens[SUBARGUMENT_STARTING_INDEX];","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"arraysius"},"content":"        return new RecipeDeleteCommand(recipeName);","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"rizemon"},"content":"     * Prepares and returns the RecipeListCommand.","lastModifiedDate":"2021-10-26"},{"lineNumber":177,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"rizemon"},"content":"     * @param subCommandTokens The list of recipe subcommand tokens.","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"rizemon"},"content":"     * @return The RecipeListCommand object.","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"rizemon"},"content":"     * @throws CommandException If the number of arguments is invalid.","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"rizemon"},"content":"    private RecipeListCommand prepareRecipeListCommand(String[] subCommandTokens) throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"rizemon"},"content":"        if (subCommandTokens.length \u003d\u003d SUBCOMMAND_NO_ARGUMENT_LENGTH) {","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"rizemon"},"content":"            return new RecipeListCommand(\"\");","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"rizemon"},"content":"        if (subCommandTokens.length \u003d\u003d SUBCOMMAND_WITH_ARGUMENT_LENGTH) {","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"rizemon"},"content":"            String recipeName \u003d subCommandTokens[SUBARGUMENT_STARTING_INDEX];","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"rizemon"},"content":"            return new RecipeListCommand(recipeName);","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"rizemon"},"content":"        throw new CommandException(ErrorMessages.TOO_MANY_COMMAND_ARGUMENTS);","lastModifiedDate":"2021-10-26"},{"lineNumber":191,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":192,"author":{"gitId":"arraysius"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"rizemon":22,"arraysius":170}},{"path":"src/main/java/decodex/recipes/Recipe.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package decodex.recipes;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"import decodex.Decodex;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.RecipeException;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.Module;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"import decodex.ui.messages.ErrorMessages;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":" * The Recipe class manages a list of Modules to be run sequentially.","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"public class Recipe {","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"    private static final String VALID_NAME_REGEX \u003d \"^[a-zA-Z0-9_]+$\";","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"SeenFang"},"content":"    private Logger logger \u003d Decodex.logger;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"SeenFang"},"content":"    private String name;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"SeenFang"},"content":"    private ArrayList\u003cModule\u003e moduleList;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"SeenFang"},"content":"     * Instantiates a new recipe of modules.","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"SeenFang"},"content":"     * @param name The name of the recipe object to be created.","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"    public Recipe(String name) throws RecipeException {","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"SeenFang"},"content":"        moduleList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"        setName(name);","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"SeenFang"},"content":"    public String getName() {","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"SeenFang"},"content":"        return name;","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"    public void setName(String name) throws RecipeException {","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"SeenFang"},"content":"        assert name !\u003d null : \"Recipe name should not be null\";","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"        boolean isValidRecipeName \u003d Pattern.matches(VALID_NAME_REGEX, name);","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"        if (!isValidRecipeName) {","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"            throw new RecipeException(ErrorMessages.INVALID_RECIPE_NAME);","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"SeenFang"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"SeenFang"},"content":"    public ArrayList\u003cModule\u003e getModuleList() {","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"SeenFang"},"content":"        return moduleList;","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"SeenFang"},"content":"     * Appends a new module to the end of the module list.","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"SeenFang"},"content":"     * @param module The module to be added to the recipe.","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"SeenFang"},"content":"    public void push(Module module) {","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"SeenFang"},"content":"        moduleList.add(module);","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"SeenFang"},"content":"        logger.fine(String.format(\"[Recipe %s] Added module %s\", name, module.getName()));","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"SeenFang"},"content":"     * Removes the latest module that was added to the list.","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"SeenFang"},"content":"     * @return The module that was popped from the list.","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"SeenFang"},"content":"     * @throws RecipeException If there are no modules in the recipe.","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"SeenFang"},"content":"    public Module pop() throws RecipeException {","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"SeenFang"},"content":"        if (moduleList.isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"rizemon"},"content":"            throw new RecipeException(ErrorMessages.EMPTY_RECIPE_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"SeenFang"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"SeenFang"},"content":"        Module removedModule \u003d moduleList.remove(moduleList.size() - 1);","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"SeenFang"},"content":"        logger.fine(String.format(\"[Recipe %s] Removed module %s\", name, removedModule.getName()));","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"SeenFang"},"content":"        return removedModule;","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"SeenFang"},"content":"     * Runs the current recipe.","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"SeenFang"},"content":"     * @param data The data to run through the recipe.","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"SeenFang"},"content":"     * @return A new data object that has gone through all the recipe modules.","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"SeenFang"},"content":"     * @throws ModuleException If the selected module cannot be found or fails.","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"SeenFang"},"content":"    public Data run(Data data) throws ModuleException {","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"SeenFang"},"content":"        Data bakedData \u003d data;","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"SeenFang"},"content":"        for (Module module : moduleList) {","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"SeenFang"},"content":"            bakedData \u003d module.run(bakedData);","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"SeenFang"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"SeenFang"},"content":"        return bakedData;","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"SeenFang"},"content":"     * Completely removes all the modules from the recipe.","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"SeenFang"},"content":"    public void reset() {","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"SeenFang"},"content":"        moduleList.clear();","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"SeenFang"},"content":"        logger.fine(String.format(\"[Recipe %s] Cleared\", name));","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"rizemon":13,"arraysius":2,"SeenFang":86}},{"path":"src/main/java/decodex/recipes/RecipeManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package decodex.recipes;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"import decodex.Decodex;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.RecipeException;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.RecipeManagerException;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"import decodex.modules.Module;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"import decodex.ui.messages.ErrorMessages;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":" * RecipeManager manages a list of all recipes that were created/loaded.","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"public class RecipeManager {","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"SeenFang"},"content":"    private Logger logger \u003d Decodex.logger;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"arraysius"},"content":"    private static int RECIPE_NAME_STRING_INDEX \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"     * Stores mapping between recipe name and recipe.","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"    private HashMap\u003cString, Recipe\u003e recipeList;","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"     * Name of the recipe that is selected for editing/modification.","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"    private String editingRecipeName;","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"SeenFang"},"content":"     * Creates a new RecipeManager with no recipes.","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"    public RecipeManager() {","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"SeenFang"},"content":"        recipeList \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"        editingRecipeName \u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"arraysius"},"content":"     * Returns a sorted list of recipe names.","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"arraysius"},"content":"     * @return A sorted String array of recipe names.","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"arraysius"},"content":"    public String[] getRecipeNames() {","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"arraysius"},"content":"        Set\u003cString\u003e recipeNameSet \u003d recipeList.keySet();","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"arraysius"},"content":"        String[] recipeNameArray \u003d recipeNameSet.toArray(new String[RECIPE_NAME_STRING_INDEX]);","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"arraysius"},"content":"        Arrays.sort(recipeNameArray);","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"arraysius"},"content":"        return recipeNameArray;","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"SeenFang"},"content":"     * Adds a recipe to recipe manager to be managed.","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"SeenFang"},"content":"     * @param recipe The recipe to be added to the recipe manager.","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"SeenFang"},"content":"     * @throws RecipeManagerException If the given recipe name already exists in recipe manager.","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"rizemon"},"content":"    public void addRecipe(Recipe recipe) throws RecipeManagerException {","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"SeenFang"},"content":"        if (recipeList.containsKey(recipe.getName())) {","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"rizemon"},"content":"            throw new RecipeManagerException(ErrorMessages.DUPLICATE_RECIPE_NAME_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"SeenFang"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"SeenFang"},"content":"        recipeList.put(recipe.getName(), recipe);","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"SeenFang"},"content":"        logger.fine(String.format(\"[RecipeManager] Added recipe %s\", recipe.getName()));","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"SeenFang"},"content":"     * Removes a recipe from the recipe manager.","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"SeenFang"},"content":"     * @param name The name of the recipe to be removed.","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"SeenFang"},"content":"     * @return The recipe that was removed.","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"SeenFang"},"content":"     * @throws RecipeManagerException If the recipe could not be found in the recipe manager.","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"rizemon"},"content":"    public Recipe removeRecipe(String name) throws RecipeManagerException {","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"SeenFang"},"content":"        Recipe recipeToRemove \u003d getRecipe(name);","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"rizemon"},"content":"        recipeList.remove(name);","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"rizemon"},"content":"        if (editingRecipeName !\u003d null \u0026\u0026 editingRecipeName.equals(name)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"rizemon"},"content":"            editingRecipeName \u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"SeenFang"},"content":"        logger.fine(String.format(\"[RecipeManager] Removed recipe %s\", recipeToRemove.getName()));","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"SeenFang"},"content":"        return recipeToRemove;","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"rizemon"},"content":"     * Gets a Recipe object from the recipe manager by name.","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"SeenFang"},"content":"     * @param name The name of the recipe to get.","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"SeenFang"},"content":"     * @return The recipe that was found.","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"SeenFang"},"content":"     * @throws RecipeManagerException If the recipe could not be found in the recipe manager.","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"SeenFang"},"content":"    public Recipe getRecipe(String name) throws RecipeManagerException {","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"SeenFang"},"content":"        if (!recipeList.containsKey(name)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"rizemon"},"content":"            throw new RecipeManagerException(ErrorMessages.RECIPE_NOT_FOUND_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"SeenFang"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"SeenFang"},"content":"        return recipeList.get(name);","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"rizemon"},"content":"    // @@author rizemon","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"rizemon"},"content":"     * Gets the Recipe object that is currently being edited.","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"rizemon"},"content":"     * @return The current recipe being edited.","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"rizemon"},"content":"     * @throws RecipeManagerException If no recipe is selected as currently being edited.","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"rizemon"},"content":"    public Recipe getEditingRecipe() throws RecipeManagerException {","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"rizemon"},"content":"        if (editingRecipeName \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"rizemon"},"content":"            throw new RecipeManagerException(ErrorMessages.EDITING_RECIPE_NOT_FOUND_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"rizemon"},"content":"        return getRecipe(editingRecipeName);","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"rizemon"},"content":"     * Sets the recipe of the given name to be the recipe currently being edited.","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"rizemon"},"content":"     * @param name The name of the recipe to select.","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"rizemon"},"content":"     * @throws RecipeManagerException If the recipe could not be found in the recipe manager.","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"rizemon"},"content":"    public void selectRecipeForEditing(String name) throws RecipeManagerException {","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"rizemon"},"content":"        if (!recipeList.containsKey(name)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"rizemon"},"content":"            throw new RecipeManagerException(ErrorMessages.RECIPE_NOT_FOUND_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"rizemon"},"content":"        editingRecipeName \u003d name;","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"rizemon"},"content":"        logger.fine(String.format(\"[RecipeManager] Selected recipe %s\", name));","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"rizemon"},"content":"     * Appends a new module to the end of the recipe currently being edited.","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"rizemon"},"content":"     * @param module The module to be added to the recipe.","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"rizemon"},"content":"     * @throws RecipeManagerException If no recipe is selected as currently being edited.","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"rizemon"},"content":"    public void pushModuleIntoEditedRecipe(Module module) throws RecipeManagerException {","lastModifiedDate":"2021-10-30"},{"lineNumber":134,"author":{"gitId":"rizemon"},"content":"        Recipe editingRecipe \u003d getEditingRecipe();","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"rizemon"},"content":"        editingRecipe.push(module);","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"rizemon"},"content":"     * Removes the latest module from the recipe currently being edited.","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"rizemon"},"content":"     * @return The module that was popped from the recipe.","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"rizemon"},"content":"     * @throws RecipeManagerException If no recipe is selected as currently being edited.","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"rizemon"},"content":"    public Module popModuleFromEditedRecipe() throws RecipeManagerException, RecipeException {","lastModifiedDate":"2021-10-30"},{"lineNumber":145,"author":{"gitId":"rizemon"},"content":"        Recipe editingRecipe \u003d getEditingRecipe();","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"rizemon"},"content":"        Module module \u003d editingRecipe.pop();","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"rizemon"},"content":"        return module;","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"rizemon"},"content":"     * Completely removes all the modules from the recipe currently being edited.","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"rizemon"},"content":"     * @throws RecipeManagerException If no recipe is selected as currently being edited.","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":155,"author":{"gitId":"rizemon"},"content":"    public void resetEditedRecipe() throws RecipeManagerException {","lastModifiedDate":"2021-10-30"},{"lineNumber":156,"author":{"gitId":"rizemon"},"content":"        Recipe editingRecipe \u003d getEditingRecipe();","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"rizemon"},"content":"        editingRecipe.reset();","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"rizemon"},"content":"    // @@author","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"rizemon":84,"arraysius":19,"SeenFang":57}},{"path":"src/main/java/decodex/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.storage;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.exception.ModuleManagerException;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.exception.RecipeException;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.exception.RecipeManagerException;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"import decodex.modules.Module;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":"import decodex.recipes.Recipe;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":"import decodex.recipes.RecipeManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"Kair0s3"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"Kair0s3"},"content":"import decodex.ui.messages.ErrorMessages;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"Kair0s3"},"content":"import java.io.File;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"Kair0s3"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"Kair0s3"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Kair0s3"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"Kair0s3"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Kair0s3"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"Kair0s3"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"Kair0s3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Kair0s3"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"Kair0s3"},"content":"// @@author Kair0s3","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"Kair0s3"},"content":"public class Storage {","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"Kair0s3"},"content":"     * Specifies the default directories for input, output and recipes respectively.","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"Kair0s3"},"content":"    private static final String DEFAULT_INPUT_DIRECTORY \u003d \"input\";","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"Kair0s3"},"content":"    private static final String DEFAULT_OUTPUT_DIRECTORY \u003d \"output\";","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"Kair0s3"},"content":"    private static final String DEFAULT_RECIPE_DIRECTORY \u003d \"recipe\";","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"Kair0s3"},"content":"     * Specifies the corresponding file prefixes.","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"Kair0s3"},"content":"    private static final String DATA_FILE_PREFIX \u003d \".data\";","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"Kair0s3"},"content":"    private static final String RECIPE_FILE_PREFIX \u003d \".txt\";","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"Kair0s3"},"content":"    private static final String OUTPUT_FILENAME_FORMAT \u003d \"yyyy-dd-MM__HH.mm.ss\";","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"Kair0s3"},"content":"    private static final String LINE_BREAK_REGEX \u003d \"\\\\r?\\\\n\";","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"Kair0s3"},"content":"    private static final String FILENAME_EXTENSION_SPLIT_REGEX \u003d \"[.]\";","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"Kair0s3"},"content":"     * Specifies the index for the corresponding fields.","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"Kair0s3"},"content":"    private static final int RECIPE_NAME_INDEX \u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"Kair0s3"},"content":"    private static final int MODULE_NAME_INDEX \u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"Kair0s3"},"content":"    private static final int STARTING_PARAMETER_INDEX \u003d 1;","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"Kair0s3"},"content":"     * Other miscellaneous constants for condition checking.","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"Kair0s3"},"content":"    private static final int EMPTY_LENGTH \u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"Kair0s3"},"content":"     * Initializes a new Storage.","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"Kair0s3"},"content":"    public Storage() {","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"Kair0s3"},"content":"     * Loads all the recipes previously saved in the recipe directory.","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"Kair0s3"},"content":"     * @param moduleManager The ModuleManager object.","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"Kair0s3"},"content":"     * @param recipeManager The RecipeManager object.","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"Kair0s3"},"content":"     * @param ui            The Ui object.","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"Kair0s3"},"content":"     * @throws IOException            If an error occurred when reading the file.","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"Kair0s3"},"content":"     * @throws ModuleException        If module parameters are invalid.","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"Kair0s3"},"content":"     * @throws ModuleManagerException If provided module name is not an available module.","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"Kair0s3"},"content":"    public void loadRecipesFromDirectory(ModuleManager moduleManager, RecipeManager recipeManager, Ui ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"Kair0s3"},"content":"            throws IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"Kair0s3"},"content":"        instantiateDirectoryIfNotExist(DEFAULT_RECIPE_DIRECTORY);","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"Kair0s3"},"content":"        File[] recipeFiles \u003d getAllRecipeFiles();","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"Kair0s3"},"content":"        if (recipeFiles.length \u003d\u003d EMPTY_LENGTH) {","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"Kair0s3"},"content":"            return;","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"Kair0s3"},"content":"        ArrayList\u003cString\u003e errorsOfFailedRecipeLoads \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"Kair0s3"},"content":"        for (File recipeFile : recipeFiles) {","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"Kair0s3"},"content":"            String recipeFilename \u003d recipeFile.getName();","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"Kair0s3"},"content":"            String recipeName \u003d recipeFilename.split(FILENAME_EXTENSION_SPLIT_REGEX)[RECIPE_NAME_INDEX];","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"Kair0s3"},"content":"            try {","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"Kair0s3"},"content":"                Recipe recipe \u003d readRecipeFromFile(recipeName, recipeFile, moduleManager);","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"Kair0s3"},"content":"                recipeManager.addRecipe(recipe);","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"Kair0s3"},"content":"            } catch (IOException | ModuleException | ModuleManagerException","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"Kair0s3"},"content":"                    | RecipeManagerException | RecipeException err) {","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"Kair0s3"},"content":"                String failedToLoadMessage \u003d recipeName + ErrorMessages.FAILED_TO_LOAD_RECIPE_FILE_MESSAGE;","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"Kair0s3"},"content":"                errorsOfFailedRecipeLoads.add(failedToLoadMessage);","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"Kair0s3"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"Kair0s3"},"content":"        if (errorsOfFailedRecipeLoads.isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"Kair0s3"},"content":"            return;","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"Kair0s3"},"content":"        ui.printFailedToLoadFromStorageMessage(errorsOfFailedRecipeLoads);","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"Kair0s3"},"content":"     * Gets all the recipe files in the recipe directory.","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"Kair0s3"},"content":"     * @return The list of recipe File objects.","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"Kair0s3"},"content":"    private File[] getAllRecipeFiles() {","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"Kair0s3"},"content":"        File recipeDirectory \u003d new File(DEFAULT_RECIPE_DIRECTORY);","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"Kair0s3"},"content":"        File[] files \u003d recipeDirectory.listFiles();","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"Kair0s3"},"content":"        File[] recipeFiles \u003d Arrays.stream(files)","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"Kair0s3"},"content":"                .filter(file -\u003e file.isFile())","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"Kair0s3"},"content":"                .toArray(size -\u003e new File[size]);","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"Kair0s3"},"content":"        return recipeFiles;","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"Kair0s3"},"content":"     * Parses the saved recipe content and returns the Recipe.","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"Kair0s3"},"content":"     * @param recipeFileName The name of the recipe file.","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"Kair0s3"},"content":"     * @param recipeContent  The contents of the recipe file.","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"Kair0s3"},"content":"     * @param moduleManager  The ModuleManger object.","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"Kair0s3"},"content":"     * @return The Recipe object.","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"Kair0s3"},"content":"     * @throws ModuleException        If module parameters are invalid.","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"Kair0s3"},"content":"     * @throws ModuleManagerException If provided module name is not an available module.","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"Kair0s3"},"content":"    private Recipe parseContentToRecipe(String recipeFileName, String recipeContent, ModuleManager moduleManager)","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"Kair0s3"},"content":"            throws ModuleException, ModuleManagerException, RecipeException {","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"Kair0s3"},"content":"        Recipe recipe \u003d new Recipe(recipeFileName);","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"Kair0s3"},"content":"        String[] recipeLines \u003d recipeContent.split(LINE_BREAK_REGEX);","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"Kair0s3"},"content":"        for (String recipeLine : recipeLines) {","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"Kair0s3"},"content":"            String trimmedRecipeLine \u003d recipeLine.trim();","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"Kair0s3"},"content":"            if (trimmedRecipeLine.isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"Kair0s3"},"content":"                continue;","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"Kair0s3"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"Kair0s3"},"content":"            String[] tokens \u003d trimmedRecipeLine.split(\" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"Kair0s3"},"content":"            String moduleName \u003d tokens[MODULE_NAME_INDEX];","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"Kair0s3"},"content":"            String[] moduleParameters \u003d Arrays.copyOfRange(tokens, STARTING_PARAMETER_INDEX, tokens.length);","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"Kair0s3"},"content":"            Module module \u003d moduleManager.selectModule(moduleName, moduleParameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"Kair0s3"},"content":"            recipe.push(module);","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"Kair0s3"},"content":"        return recipe;","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"Kair0s3"},"content":"     * Reads the recipe file contents and returns the Recipe.","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"Kair0s3"},"content":"     * @param recipeFilename The name of the recipe.","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"Kair0s3"},"content":"     * @param recipeFile     The recipe File object.","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"Kair0s3"},"content":"     * @param moduleManager  The ModuleManager object.","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"Kair0s3"},"content":"     * @return The Recipe object.","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"Kair0s3"},"content":"     * @throws IOException            If an error occurred when reading the file.","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"Kair0s3"},"content":"     * @throws ModuleException        If module parameters are invalid.","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"Kair0s3"},"content":"     * @throws ModuleManagerException If provided module name is not an available module.","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"Kair0s3"},"content":"    public Recipe readRecipeFromFile(String recipeFilename, File recipeFile, ModuleManager moduleManager)","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"Kair0s3"},"content":"            throws IOException, ModuleException, ModuleManagerException, RecipeException {","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"Kair0s3"},"content":"        Path recipeFilePath \u003d recipeFile.toPath();","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"Kair0s3"},"content":"        byte[] recipeContentBytes \u003d readContentFromFile(recipeFilePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"Kair0s3"},"content":"        String recipeContent \u003d convertByteArrayToString(recipeContentBytes);","lastModifiedDate":"2021-10-25"},{"lineNumber":166,"author":{"gitId":"Kair0s3"},"content":"        Recipe loadedRecipe \u003d parseContentToRecipe(recipeFilename, recipeContent, moduleManager);","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"Kair0s3"},"content":"        return loadedRecipe;","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"Kair0s3"},"content":"     * Reads and returns the input from the provided file.","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"Kair0s3"},"content":"     * @param fileName The name of the input file specified by the user.","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"Kair0s3"},"content":"     * @return The byte contents from the input file.","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"Kair0s3"},"content":"     * @throws IOException If an error occurred when reading the file or","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"Kair0s3"},"content":"     *                     the input file does not exist.","lastModifiedDate":"2021-10-25"},{"lineNumber":177,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":178,"author":{"gitId":"Kair0s3"},"content":"    public byte[] readInputFromFile(String fileName) throws IOException {","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"Kair0s3"},"content":"        instantiateDirectoryIfNotExist(DEFAULT_INPUT_DIRECTORY);","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"Kair0s3"},"content":"        File inputDirectory \u003d new File(DEFAULT_INPUT_DIRECTORY);","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"Kair0s3"},"content":"        File inputFile \u003d new File(inputDirectory, fileName);","lastModifiedDate":"2021-10-25"},{"lineNumber":183,"author":{"gitId":"Kair0s3"},"content":"        Path inputFilePath \u003d inputFile.toPath();","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"Kair0s3"},"content":"        byte[] inputContent \u003d readContentFromFile(inputFilePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"Kair0s3"},"content":"        return inputContent;","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":190,"author":{"gitId":"Kair0s3"},"content":"     * Reads and returns the contents from the file.","lastModifiedDate":"2021-10-24"},{"lineNumber":191,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":192,"author":{"gitId":"Kair0s3"},"content":"     * @param readFilePath The Path object of the file to be read.","lastModifiedDate":"2021-10-23"},{"lineNumber":193,"author":{"gitId":"Kair0s3"},"content":"     * @return The bytes of the read content.","lastModifiedDate":"2021-10-23"},{"lineNumber":194,"author":{"gitId":"Kair0s3"},"content":"     * @throws IOException           If an error occurred when reading the file.","lastModifiedDate":"2021-10-26"},{"lineNumber":195,"author":{"gitId":"Kair0s3"},"content":"     * @throws FileNotFoundException If the input file does not exist.","lastModifiedDate":"2021-10-23"},{"lineNumber":196,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":197,"author":{"gitId":"Kair0s3"},"content":"    private byte[] readContentFromFile(Path readFilePath) throws IOException, FileNotFoundException {","lastModifiedDate":"2021-10-25"},{"lineNumber":198,"author":{"gitId":"Kair0s3"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":199,"author":{"gitId":"Kair0s3"},"content":"            return Files.readAllBytes(readFilePath);","lastModifiedDate":"2021-10-24"},{"lineNumber":200,"author":{"gitId":"Kair0s3"},"content":"        } catch (FileNotFoundException err) {","lastModifiedDate":"2021-10-24"},{"lineNumber":201,"author":{"gitId":"Kair0s3"},"content":"            throw new FileNotFoundException(ErrorMessages.INPUT_FILE_DOES_NOT_EXIST_MESSAGE);","lastModifiedDate":"2021-10-23"},{"lineNumber":202,"author":{"gitId":"Kair0s3"},"content":"        } catch (IOException err) {","lastModifiedDate":"2021-10-24"},{"lineNumber":203,"author":{"gitId":"Kair0s3"},"content":"            throw new IOException(ErrorMessages.FILE_READ_ERROR_MESSAGE);","lastModifiedDate":"2021-10-24"},{"lineNumber":204,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":205,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":206,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":207,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":208,"author":{"gitId":"Kair0s3"},"content":"     * Saves the provided output into a file.","lastModifiedDate":"2021-10-25"},{"lineNumber":209,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":210,"author":{"gitId":"Kair0s3"},"content":"     * @param outputBytes The encoded or decoded output.","lastModifiedDate":"2021-10-24"},{"lineNumber":211,"author":{"gitId":"Kair0s3"},"content":"     * @throws IOException If an error occurred when creating the file","lastModifiedDate":"2021-10-26"},{"lineNumber":212,"author":{"gitId":"Kair0s3"},"content":"     *                     or when writing to the file.","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":214,"author":{"gitId":"Kair0s3"},"content":"    public void saveOutputToFile(byte[] outputBytes) throws IOException {","lastModifiedDate":"2021-10-25"},{"lineNumber":215,"author":{"gitId":"Kair0s3"},"content":"        instantiateDirectoryIfNotExist(DEFAULT_OUTPUT_DIRECTORY);","lastModifiedDate":"2021-10-24"},{"lineNumber":216,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":217,"author":{"gitId":"Kair0s3"},"content":"        LocalDateTime currentDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2021-10-18"},{"lineNumber":218,"author":{"gitId":"Kair0s3"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(OUTPUT_FILENAME_FORMAT);","lastModifiedDate":"2021-10-24"},{"lineNumber":219,"author":{"gitId":"Kair0s3"},"content":"        String formattedDateTime \u003d currentDateTime.format(dateTimeFormatter);","lastModifiedDate":"2021-10-18"},{"lineNumber":220,"author":{"gitId":"Kair0s3"},"content":"        String newOutputFileName \u003d formattedDateTime + DATA_FILE_PREFIX;","lastModifiedDate":"2021-10-24"},{"lineNumber":221,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":222,"author":{"gitId":"Kair0s3"},"content":"        File outputDirectory \u003d new File(DEFAULT_OUTPUT_DIRECTORY);","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"Kair0s3"},"content":"        File outputFile \u003d new File(outputDirectory, newOutputFileName);","lastModifiedDate":"2021-10-18"},{"lineNumber":224,"author":{"gitId":"Kair0s3"},"content":"        saveBytesToFile(outputFile, outputBytes);","lastModifiedDate":"2021-10-25"},{"lineNumber":225,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":226,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":228,"author":{"gitId":"Kair0s3"},"content":"     * Saves the content bytes into the provided file.","lastModifiedDate":"2021-10-25"},{"lineNumber":229,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":230,"author":{"gitId":"Kair0s3"},"content":"     * @param writeFile    The file to be saved to.","lastModifiedDate":"2021-10-25"},{"lineNumber":231,"author":{"gitId":"Kair0s3"},"content":"     * @param contentBytes The bytes of the content to be saved.","lastModifiedDate":"2021-10-25"},{"lineNumber":232,"author":{"gitId":"Kair0s3"},"content":"     * @throws IOException If an error occurred when creating the file","lastModifiedDate":"2021-10-26"},{"lineNumber":233,"author":{"gitId":"Kair0s3"},"content":"     *                     or when writing to the file.","lastModifiedDate":"2021-10-24"},{"lineNumber":234,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"Kair0s3"},"content":"    private void saveBytesToFile(File writeFile, byte[] contentBytes) throws IOException {","lastModifiedDate":"2021-10-25"},{"lineNumber":236,"author":{"gitId":"Kair0s3"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":237,"author":{"gitId":"Kair0s3"},"content":"            Path writeFilePath \u003d writeFile.toPath();","lastModifiedDate":"2021-10-25"},{"lineNumber":238,"author":{"gitId":"Kair0s3"},"content":"            Files.write(writeFilePath, contentBytes);","lastModifiedDate":"2021-10-25"},{"lineNumber":239,"author":{"gitId":"Kair0s3"},"content":"        } catch (IOException err) {","lastModifiedDate":"2021-10-25"},{"lineNumber":240,"author":{"gitId":"Kair0s3"},"content":"            throw new IOException(ErrorMessages.FILE_WRITE_ERROR_MESSAGE);","lastModifiedDate":"2021-10-25"},{"lineNumber":241,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":242,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":243,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":244,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":245,"author":{"gitId":"Kair0s3"},"content":"     * Saves the provided recipe into a file.","lastModifiedDate":"2021-10-25"},{"lineNumber":246,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":247,"author":{"gitId":"Kair0s3"},"content":"     * @param recipe The recipe to be saved.","lastModifiedDate":"2021-10-25"},{"lineNumber":248,"author":{"gitId":"Kair0s3"},"content":"     * @throws IOException If an error occurred when creating the file","lastModifiedDate":"2021-10-26"},{"lineNumber":249,"author":{"gitId":"Kair0s3"},"content":"     *                     or when writing to the file.","lastModifiedDate":"2021-10-25"},{"lineNumber":250,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":251,"author":{"gitId":"Kair0s3"},"content":"    public void saveRecipeToFile(Recipe recipe) throws IOException {","lastModifiedDate":"2021-10-25"},{"lineNumber":252,"author":{"gitId":"Kair0s3"},"content":"        instantiateDirectoryIfNotExist(DEFAULT_RECIPE_DIRECTORY);","lastModifiedDate":"2021-10-24"},{"lineNumber":253,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":254,"author":{"gitId":"Kair0s3"},"content":"        String newRecipeFileName \u003d recipe.getName() + RECIPE_FILE_PREFIX;","lastModifiedDate":"2021-10-25"},{"lineNumber":255,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":256,"author":{"gitId":"Kair0s3"},"content":"        File recipeDirectory \u003d new File(DEFAULT_RECIPE_DIRECTORY);","lastModifiedDate":"2021-10-24"},{"lineNumber":257,"author":{"gitId":"Kair0s3"},"content":"        File outputRecipeFile \u003d new File(recipeDirectory, newRecipeFileName);","lastModifiedDate":"2021-10-24"},{"lineNumber":258,"author":{"gitId":"Kair0s3"},"content":"        saveRecipeModulesToFile(outputRecipeFile, recipe);","lastModifiedDate":"2021-10-25"},{"lineNumber":259,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":260,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":261,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":262,"author":{"gitId":"Kair0s3"},"content":"     * Saves the list of recipe\u0027s modules into the file.","lastModifiedDate":"2021-10-25"},{"lineNumber":263,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":264,"author":{"gitId":"Kair0s3"},"content":"     * @param writeFile       The file to be saved to.","lastModifiedDate":"2021-10-25"},{"lineNumber":265,"author":{"gitId":"Kair0s3"},"content":"     * @param recipeToBeSaved The recipe to be saved.","lastModifiedDate":"2021-10-25"},{"lineNumber":266,"author":{"gitId":"Kair0s3"},"content":"     * @throws IOException If an error occurred when creating the file","lastModifiedDate":"2021-10-26"},{"lineNumber":267,"author":{"gitId":"Kair0s3"},"content":"     *                     or when writing to the file.","lastModifiedDate":"2021-10-24"},{"lineNumber":268,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":269,"author":{"gitId":"Kair0s3"},"content":"    private void saveRecipeModulesToFile(File writeFile, Recipe recipeToBeSaved) throws IOException {","lastModifiedDate":"2021-10-25"},{"lineNumber":270,"author":{"gitId":"Kair0s3"},"content":"        ArrayList\u003cModule\u003e modules \u003d recipeToBeSaved.getModuleList();","lastModifiedDate":"2021-10-25"},{"lineNumber":271,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":272,"author":{"gitId":"Kair0s3"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":273,"author":{"gitId":"Kair0s3"},"content":"            FileWriter writer \u003d new FileWriter(writeFile);","lastModifiedDate":"2021-10-25"},{"lineNumber":274,"author":{"gitId":"Kair0s3"},"content":"            String formattedModuleList \u003d formatModuleListForSaving(modules);","lastModifiedDate":"2021-10-25"},{"lineNumber":275,"author":{"gitId":"Kair0s3"},"content":"            writer.write(formattedModuleList);","lastModifiedDate":"2021-10-25"},{"lineNumber":276,"author":{"gitId":"Kair0s3"},"content":"            writer.close();","lastModifiedDate":"2021-10-25"},{"lineNumber":277,"author":{"gitId":"Kair0s3"},"content":"        } catch (IOException err) {","lastModifiedDate":"2021-10-24"},{"lineNumber":278,"author":{"gitId":"Kair0s3"},"content":"            throw new IOException(ErrorMessages.FILE_WRITE_ERROR_MESSAGE);","lastModifiedDate":"2021-10-19"},{"lineNumber":279,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":280,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":281,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":282,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":283,"author":{"gitId":"Kair0s3"},"content":"     * Formats the list of modules for saving to file.","lastModifiedDate":"2021-10-25"},{"lineNumber":284,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":285,"author":{"gitId":"Kair0s3"},"content":"     * @param modules The list of modules to be saved.","lastModifiedDate":"2021-10-25"},{"lineNumber":286,"author":{"gitId":"Kair0s3"},"content":"     * @return The formatted list of modules.","lastModifiedDate":"2021-10-25"},{"lineNumber":287,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":288,"author":{"gitId":"Kair0s3"},"content":"    private String formatModuleListForSaving(ArrayList\u003cModule\u003e modules) {","lastModifiedDate":"2021-10-25"},{"lineNumber":289,"author":{"gitId":"Kair0s3"},"content":"        if (modules.isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":290,"author":{"gitId":"Kair0s3"},"content":"            return \"\";","lastModifiedDate":"2021-10-25"},{"lineNumber":291,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":292,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":293,"author":{"gitId":"Kair0s3"},"content":"        String formattedModuleList \u003d \"\";","lastModifiedDate":"2021-10-25"},{"lineNumber":294,"author":{"gitId":"Kair0s3"},"content":"        for (Module module : modules) {","lastModifiedDate":"2021-10-25"},{"lineNumber":295,"author":{"gitId":"Kair0s3"},"content":"            formattedModuleList \u003d formattedModuleList.concat(module.toString() + \"\\n\");","lastModifiedDate":"2021-10-26"},{"lineNumber":296,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":297,"author":{"gitId":"Kair0s3"},"content":"        return formattedModuleList;","lastModifiedDate":"2021-10-25"},{"lineNumber":298,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":299,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":300,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":301,"author":{"gitId":"Kair0s3"},"content":"     * Deletes the saved recipe file.","lastModifiedDate":"2021-10-25"},{"lineNumber":302,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":303,"author":{"gitId":"Kair0s3"},"content":"     * @param recipeName The name of the deleted recipe.","lastModifiedDate":"2021-10-25"},{"lineNumber":304,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":305,"author":{"gitId":"Kair0s3"},"content":"    public void deleteRecipeFile(String recipeName) throws IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":306,"author":{"gitId":"Kair0s3"},"content":"        String newRecipeFileName \u003d recipeName + RECIPE_FILE_PREFIX;","lastModifiedDate":"2021-10-25"},{"lineNumber":307,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":308,"author":{"gitId":"Kair0s3"},"content":"        File recipeDirectory \u003d new File(DEFAULT_RECIPE_DIRECTORY);","lastModifiedDate":"2021-10-25"},{"lineNumber":309,"author":{"gitId":"Kair0s3"},"content":"        File outputRecipeFile \u003d new File(recipeDirectory, newRecipeFileName);","lastModifiedDate":"2021-10-25"},{"lineNumber":310,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":311,"author":{"gitId":"Kair0s3"},"content":"        if (!outputRecipeFile.exists()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":312,"author":{"gitId":"Kair0s3"},"content":"            return;","lastModifiedDate":"2021-10-25"},{"lineNumber":313,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":314,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":315,"author":{"gitId":"Kair0s3"},"content":"        if (!outputRecipeFile.delete()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":316,"author":{"gitId":"Kair0s3"},"content":"            throw new IOException(ErrorMessages.RECIPE_FILE_DELETE_FAILED_MESSAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":317,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":318,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":319,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":320,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":321,"author":{"gitId":"Kair0s3"},"content":"     * Instantiates the given directory if it does not exist yet.","lastModifiedDate":"2021-10-23"},{"lineNumber":322,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":323,"author":{"gitId":"Kair0s3"},"content":"    private void instantiateDirectoryIfNotExist(String directoryName) throws IOException {","lastModifiedDate":"2021-10-25"},{"lineNumber":324,"author":{"gitId":"Kair0s3"},"content":"        File outputDirectory \u003d new File(directoryName);","lastModifiedDate":"2021-10-23"},{"lineNumber":325,"author":{"gitId":"Kair0s3"},"content":"        if (outputDirectory.exists()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":326,"author":{"gitId":"Kair0s3"},"content":"            return;","lastModifiedDate":"2021-10-23"},{"lineNumber":327,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":328,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":329,"author":{"gitId":"Kair0s3"},"content":"        boolean isSuccessful;","lastModifiedDate":"2021-10-24"},{"lineNumber":330,"author":{"gitId":"Kair0s3"},"content":"        isSuccessful \u003d outputDirectory.mkdir();","lastModifiedDate":"2021-10-23"},{"lineNumber":331,"author":{"gitId":"Kair0s3"},"content":"        if (!isSuccessful) {","lastModifiedDate":"2021-10-23"},{"lineNumber":332,"author":{"gitId":"Kair0s3"},"content":"            throw new IOException(ErrorMessages.DIRECTORY_INSTANTIATION_FAILED_MESSAGE + directoryName);","lastModifiedDate":"2021-10-23"},{"lineNumber":333,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":334,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":335,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":336,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":337,"author":{"gitId":"Kair0s3"},"content":"     * Converts a byte array to string value.","lastModifiedDate":"2021-10-25"},{"lineNumber":338,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":339,"author":{"gitId":"Kair0s3"},"content":"     * @param contentBytes The bytes of the content.","lastModifiedDate":"2021-10-25"},{"lineNumber":340,"author":{"gitId":"Kair0s3"},"content":"     * @return The string value of the content.","lastModifiedDate":"2021-10-25"},{"lineNumber":341,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":342,"author":{"gitId":"Kair0s3"},"content":"    private String convertByteArrayToString(byte[] contentBytes) {","lastModifiedDate":"2021-10-25"},{"lineNumber":343,"author":{"gitId":"Kair0s3"},"content":"        return new String(contentBytes);","lastModifiedDate":"2021-10-25"},{"lineNumber":344,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":345,"author":{"gitId":"Kair0s3"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"rizemon":2,"Kair0s3":343}},{"path":"src/main/java/decodex/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"import decodex.modules.Module;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":"import decodex.recipes.Recipe;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"arraysius"},"content":"import decodex.ui.messages.RegularMessages;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"arraysius"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":" * The Ui class handles all user input and message output ot the console.","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"arraysius"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"public class Ui {","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"arraysius"},"content":"    private static final String PROMPT_HEADER \u003d \"Decodex [%s] \u003e \";","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"arraysius"},"content":"    private static final String PROMPT_EDITING \u003d \"Editing: \";","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"arraysius"},"content":"    private static final String BLANK_STRING \u003d \"\";","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"arraysius"},"content":"    private static final String SUCCESS_ICON \u003d \"[+]\";","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"arraysius"},"content":"    private static final String ERROR_ICON \u003d \"[x]\";","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"arraysius"},"content":"    private static final String INPUT_PREFIX \u003d \"Input:\";","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"arraysius"},"content":"    private static final String OUTPUT_PREFIX \u003d \"Output:\";","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"arraysius"},"content":"    private final Scanner in;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"arraysius"},"content":"    public Ui() {","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"arraysius"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"arraysius"},"content":"     * Prints the greeting message.","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"arraysius"},"content":"    public void printGreeting() {","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"arraysius"},"content":"        System.out.println(RegularMessages.GREETING);","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"arraysius"},"content":"     * Prints the goodbye message.","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"arraysius"},"content":"    public void printGoodbye() {","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"arraysius"},"content":"        System.out.println(RegularMessages.GOODBYE);","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"arraysius"},"content":"     * Reads user input from console.","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"arraysius"},"content":"     * @return String of the user input.","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"arraysius"},"content":"    public String readInput() {","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"arraysius"},"content":"        return in.nextLine();","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"arraysius"},"content":"     * Prints the read user input.","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"arraysius"},"content":"     * @param input The user input read.","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"arraysius"},"content":"    public void printInput(String input) {","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"arraysius"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"arraysius"},"content":"        assert !input.isBlank() : \"Input should not be empty\";","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"arraysius"},"content":"        printSuccess(String.format(\"%s \\\"%s\\\"\", INPUT_PREFIX, input));","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"arraysius"},"content":"     * Prints the output after data manipulation.","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"arraysius"},"content":"     * @param output String output of the data.","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"arraysius"},"content":"    public void printOutput(String output) {","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"arraysius"},"content":"        assert output !\u003d null : \"Output should not be null\";","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"arraysius"},"content":"        printSuccess(String.format(\"%s \\\"%s\\\"\", OUTPUT_PREFIX, output));","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"arraysius"},"content":"     * Prints the list of supported modules.","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"arraysius"},"content":"     * @param moduleList The list of supported modules.","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"arraysius"},"content":"    public void printModuleList(String moduleList) {","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"arraysius"},"content":"        assert moduleList !\u003d null : \"Module list should not be null\";","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"arraysius"},"content":"        assert !moduleList.isBlank() : \"Module list should not be empty\";","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"arraysius"},"content":"        System.out.println(RegularMessages.LIST_MODULES + \"\\n\" + moduleList);","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"arraysius"},"content":"     * Prints the list of available recipes.","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"arraysius"},"content":"     * @param recipeList The list of available recipes.","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"arraysius"},"content":"    public void printRecipeList(String recipeList) {","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"arraysius"},"content":"        assert recipeList !\u003d null : \"Recipe list should not be null\";","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"arraysius"},"content":"        if (!recipeList.isBlank()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"arraysius"},"content":"            System.out.println(RegularMessages.LIST_RECIPES + \"\\n\" + recipeList);","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"arraysius"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"arraysius"},"content":"            System.out.println(RegularMessages.NO_RECIPES + \"\\n\");","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"arraysius"},"content":"     * Prints the modules in a recipe.","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"arraysius"},"content":"     * @param recipe The provided recipe.","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"arraysius"},"content":"    public void printRecipeModules(Recipe recipe) {","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"arraysius"},"content":"        if (recipe.getModuleList().size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"arraysius"},"content":"            printSuccess(RegularMessages.RECIPE_EMPTY);","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"arraysius"},"content":"            return;","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"arraysius"},"content":"        ArrayList\u003cModule\u003e recipeModuleList \u003d recipe.getModuleList();","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"arraysius"},"content":"        String[] recipeModuleNames \u003d recipeModuleList.stream()","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"arraysius"},"content":"                .map(Module::toString)","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"arraysius"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"arraysius"},"content":"        String message \u003d RegularMessages.RECIPE_MODULES_EXECUTED + \" \" + String.join(\", \", recipeModuleNames);","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"arraysius"},"content":"        printSuccess(message);","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"SeenFang"},"content":"     * Prints the list of modules in a recipe.","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"SeenFang"},"content":"     * @param moduleList The list of modules in the recipe.","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"SeenFang"},"content":"     * @param recipeName The name of the recipe.","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"SeenFang"},"content":"    public void printRecipeModulesList(String moduleList, String recipeName) {","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"SeenFang"},"content":"        assert moduleList !\u003d null : \"Module list should not be null\";","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"SeenFang"},"content":"        assert !moduleList.isBlank() : \"Module list should not be empty\";","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"SeenFang"},"content":"        assert recipeName !\u003d null : \"Recipe name should not be null\";","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"SeenFang"},"content":"        assert !recipeName.isBlank() : \"Recipe name should not be empty\";","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"SeenFang"},"content":"        System.out.println(String.format(RegularMessages.LIST_RECIPE_MODULES + \"\\n%s\", recipeName, moduleList));","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"rizemon"},"content":"     * Prints the message when a recipe is reset.","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"rizemon"},"content":"     * @param recipeName The name of the recipe that was reset.","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"rizemon"},"content":"    public void printRecipeReset(String recipeName) {","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"rizemon"},"content":"        assert recipeName !\u003d null : \"Recipe name should not be null\";","lastModifiedDate":"2021-10-22"},{"lineNumber":139,"author":{"gitId":"rizemon"},"content":"        assert !recipeName.isBlank() : \"Recipe name should not be empty\";","lastModifiedDate":"2021-10-22"},{"lineNumber":140,"author":{"gitId":"rizemon"},"content":"        printSuccess(String.format(RegularMessages.RESETTED_EDITING_RECIPE, recipeName));","lastModifiedDate":"2021-10-22"},{"lineNumber":141,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":142,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":144,"author":{"gitId":"rizemon"},"content":"     * Prints a message showing that a given module was removed from a given recipe.","lastModifiedDate":"2021-10-22"},{"lineNumber":145,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":146,"author":{"gitId":"rizemon"},"content":"     * @param moduleName The name of the module removed.","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"rizemon"},"content":"     * @param recipeName The name of the recipe which the module was removed from.","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":149,"author":{"gitId":"rizemon"},"content":"    public void printModuleRemovedFromRecipe(String moduleName, String recipeName) {","lastModifiedDate":"2021-10-22"},{"lineNumber":150,"author":{"gitId":"rizemon"},"content":"        assert moduleName !\u003d null : \"Module name should not be null\";","lastModifiedDate":"2021-10-22"},{"lineNumber":151,"author":{"gitId":"rizemon"},"content":"        assert !moduleName.isBlank() : \"Module name should not be empty\";","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"rizemon"},"content":"        assert recipeName !\u003d null : \"Recipe name should not be null\";","lastModifiedDate":"2021-10-22"},{"lineNumber":153,"author":{"gitId":"rizemon"},"content":"        assert !recipeName.isBlank() : \"Recipe name should not be empty\";","lastModifiedDate":"2021-10-22"},{"lineNumber":154,"author":{"gitId":"rizemon"},"content":"        printSuccess(String.format(RegularMessages.REMOVED_RECIPE_FROM_RECIPE, moduleName, recipeName));","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":156,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":157,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":158,"author":{"gitId":"rizemon"},"content":"     * Prints a message showing that a given module was added to a given recipe.","lastModifiedDate":"2021-10-22"},{"lineNumber":159,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":160,"author":{"gitId":"rizemon"},"content":"     * @param moduleName The name of the module added.","lastModifiedDate":"2021-10-23"},{"lineNumber":161,"author":{"gitId":"rizemon"},"content":"     * @param recipeName The name of the recipe which the module was added to.","lastModifiedDate":"2021-10-23"},{"lineNumber":162,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"rizemon"},"content":"    public void printModuleAddedToRecipe(String moduleName, String recipeName) {","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"rizemon"},"content":"        assert moduleName !\u003d null : \"Module name should not be null\";","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"rizemon"},"content":"        assert !moduleName.isBlank() : \"Module name should not be empty\";","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"rizemon"},"content":"        assert recipeName !\u003d null : \"Recipe name should not be null\";","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"rizemon"},"content":"        assert !recipeName.isBlank() : \"Recipe name should not be empty\";","lastModifiedDate":"2021-10-22"},{"lineNumber":168,"author":{"gitId":"rizemon"},"content":"        printSuccess(String.format(RegularMessages.ADDED_MODULE_TO_RECIPE, moduleName, recipeName));","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":171,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"rizemon"},"content":"     * Prints a message showing that a recipe was selected.","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"rizemon"},"content":"     * @param recipeName The name of the selected recipe.","lastModifiedDate":"2021-10-23"},{"lineNumber":175,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"rizemon"},"content":"    public void printRecipeSelected(String recipeName) {","lastModifiedDate":"2021-10-22"},{"lineNumber":177,"author":{"gitId":"rizemon"},"content":"        assert recipeName !\u003d null : \"Recipe name should not be null\";","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"rizemon"},"content":"        assert !recipeName.isBlank() : \"Recipe name should not be empty\";","lastModifiedDate":"2021-10-22"},{"lineNumber":179,"author":{"gitId":"rizemon"},"content":"        printSuccess(String.format(RegularMessages.RECIPE_SELECT, recipeName));","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":181,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":182,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":183,"author":{"gitId":"arraysius"},"content":"     * Prints a message with a success status icon.","lastModifiedDate":"2021-10-17"},{"lineNumber":184,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":185,"author":{"gitId":"arraysius"},"content":"     * @param message Success message","lastModifiedDate":"2021-10-17"},{"lineNumber":186,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":187,"author":{"gitId":"arraysius"},"content":"    public void printSuccess(String message) {","lastModifiedDate":"2021-10-17"},{"lineNumber":188,"author":{"gitId":"arraysius"},"content":"        assert message !\u003d null : \"Message should not be null\";","lastModifiedDate":"2021-10-17"},{"lineNumber":189,"author":{"gitId":"arraysius"},"content":"        assert !message.isBlank() : \"Message should not be empty\";","lastModifiedDate":"2021-10-17"},{"lineNumber":190,"author":{"gitId":"arraysius"},"content":"        System.out.println(SUCCESS_ICON + \" \" + message);","lastModifiedDate":"2021-10-17"},{"lineNumber":191,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":192,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":193,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":194,"author":{"gitId":"arraysius"},"content":"     * Prints the error message from the thrown exception with an error icon.","lastModifiedDate":"2021-10-17"},{"lineNumber":195,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":196,"author":{"gitId":"arraysius"},"content":"     * @param exception The thrown exception.","lastModifiedDate":"2021-10-17"},{"lineNumber":197,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":198,"author":{"gitId":"arraysius"},"content":"    public void printError(Exception exception) {","lastModifiedDate":"2021-10-17"},{"lineNumber":199,"author":{"gitId":"arraysius"},"content":"        assert exception.getMessage() !\u003d null : \"Exception message should not be null\";","lastModifiedDate":"2021-10-17"},{"lineNumber":200,"author":{"gitId":"arraysius"},"content":"        assert !exception.getMessage().isBlank() : \"Exception message should not be empty\";","lastModifiedDate":"2021-10-17"},{"lineNumber":201,"author":{"gitId":"arraysius"},"content":"        System.out.println(ERROR_ICON + \" \" + exception.getMessage());","lastModifiedDate":"2021-10-17"},{"lineNumber":202,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":203,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":204,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":205,"author":{"gitId":"SeenFang"},"content":"     * Prints a message indicating successful deletion of a recipe.","lastModifiedDate":"2021-10-23"},{"lineNumber":206,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":207,"author":{"gitId":"SeenFang"},"content":"     * @param recipeName The name of the recipe that was deleted.","lastModifiedDate":"2021-10-23"},{"lineNumber":208,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":209,"author":{"gitId":"SeenFang"},"content":"    public void printRecipeDeleted(String recipeName) {","lastModifiedDate":"2021-10-23"},{"lineNumber":210,"author":{"gitId":"SeenFang"},"content":"        assert recipeName !\u003d null : \"Recipe name should not be null\";","lastModifiedDate":"2021-10-23"},{"lineNumber":211,"author":{"gitId":"SeenFang"},"content":"        assert !recipeName.isBlank() : \"Recipe name should not be empty\";","lastModifiedDate":"2021-10-23"},{"lineNumber":212,"author":{"gitId":"rizemon"},"content":"        printSuccess(String.format(RegularMessages.RECIPE_DELETED, recipeName));","lastModifiedDate":"2021-10-26"},{"lineNumber":213,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":214,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":215,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":216,"author":{"gitId":"SeenFang"},"content":"     * Prints a message indicating the creation of a new recipe of given name.","lastModifiedDate":"2021-10-23"},{"lineNumber":217,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":218,"author":{"gitId":"SeenFang"},"content":"     * @param recipeName The name of the recipe created.","lastModifiedDate":"2021-10-23"},{"lineNumber":219,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":220,"author":{"gitId":"SeenFang"},"content":"    public void printNewRecipeCreated(String recipeName) {","lastModifiedDate":"2021-10-23"},{"lineNumber":221,"author":{"gitId":"SeenFang"},"content":"        assert recipeName !\u003d null : \"Recipe name should not be null\";","lastModifiedDate":"2021-10-23"},{"lineNumber":222,"author":{"gitId":"SeenFang"},"content":"        assert !recipeName.isBlank() : \"Recipe name should not be empty\";","lastModifiedDate":"2021-10-23"},{"lineNumber":223,"author":{"gitId":"rizemon"},"content":"        printSuccess(String.format(RegularMessages.NEW_RECIPE_CREATED, recipeName));","lastModifiedDate":"2021-10-26"},{"lineNumber":224,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":225,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":226,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":227,"author":{"gitId":"arraysius"},"content":"     * Prints the list of message for the recipe files that failed to load.","lastModifiedDate":"2021-10-27"},{"lineNumber":228,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":229,"author":{"gitId":"arraysius"},"content":"     * @param failedFilesMessageList The list of messages for the failed recipe files.","lastModifiedDate":"2021-10-27"},{"lineNumber":230,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":231,"author":{"gitId":"Kair0s3"},"content":"    public void printFailedToLoadFromStorageMessage(ArrayList\u003cString\u003e failedFilesMessageList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":232,"author":{"gitId":"Kair0s3"},"content":"        for (String failedFileMessage : failedFilesMessageList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":233,"author":{"gitId":"Kair0s3"},"content":"            System.out.println(failedFileMessage);","lastModifiedDate":"2021-10-26"},{"lineNumber":234,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":235,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":236,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":237,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":238,"author":{"gitId":"arraysius"},"content":"     * Prints the prompt header.","lastModifiedDate":"2021-10-17"},{"lineNumber":239,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":240,"author":{"gitId":"arraysius"},"content":"     * @param editingRecipeName Name of the recipe in editing.","lastModifiedDate":"2021-10-27"},{"lineNumber":241,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":242,"author":{"gitId":"arraysius"},"content":"    public void printPromptHeader(String editingRecipeName) {","lastModifiedDate":"2021-10-27"},{"lineNumber":243,"author":{"gitId":"arraysius"},"content":"        if (editingRecipeName \u003d\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":244,"author":{"gitId":"arraysius"},"content":"            System.out.printf(PROMPT_HEADER, BLANK_STRING);","lastModifiedDate":"2021-10-27"},{"lineNumber":245,"author":{"gitId":"arraysius"},"content":"        } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":246,"author":{"gitId":"arraysius"},"content":"            System.out.printf(PROMPT_HEADER, PROMPT_EDITING + editingRecipeName);","lastModifiedDate":"2021-10-27"},{"lineNumber":247,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":248,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":249,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":250,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":251,"author":{"gitId":"rizemon"},"content":"     * Prints all supported commands and their respective help message.","lastModifiedDate":"2021-10-26"},{"lineNumber":252,"author":{"gitId":"rizemon"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":253,"author":{"gitId":"rizemon"},"content":"     * @param basicCommandHelpList List of basic command help messages.","lastModifiedDate":"2021-10-26"},{"lineNumber":254,"author":{"gitId":"rizemon"},"content":"     * @param recipeCommandHelpList List of recipe command help messages.","lastModifiedDate":"2021-10-26"},{"lineNumber":255,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":256,"author":{"gitId":"rizemon"},"content":"    public void printCommandHelp(String[] basicCommandHelpList, String[] recipeCommandHelpList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":257,"author":{"gitId":"rizemon"},"content":"        System.out.println(RegularMessages.SYNTAX_MANDATORY_OPTIONAL + \"\\n\");","lastModifiedDate":"2021-10-26"},{"lineNumber":258,"author":{"gitId":"rizemon"},"content":"        System.out.println(RegularMessages.BASIC_COMMANDS);","lastModifiedDate":"2021-10-26"},{"lineNumber":259,"author":{"gitId":"rizemon"},"content":"        for (String commandFormat: basicCommandHelpList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":260,"author":{"gitId":"rizemon"},"content":"            System.out.printf(\"-\u003e %s\\n\\n\", commandFormat.replace(\"\\n\", \"\\n   \"));","lastModifiedDate":"2021-10-26"},{"lineNumber":261,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":262,"author":{"gitId":"rizemon"},"content":"        System.out.println(RegularMessages.RECIPE_COMMANDS);","lastModifiedDate":"2021-10-26"},{"lineNumber":263,"author":{"gitId":"rizemon"},"content":"        for (String commandFormat: recipeCommandHelpList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":264,"author":{"gitId":"rizemon"},"content":"            System.out.printf(\"-\u003e %s\\n\\n\", commandFormat.replace(\"\\n\", \"\\n   \"));","lastModifiedDate":"2021-10-26"},{"lineNumber":265,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":266,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":267,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"rizemon":75,"arraysius":152,"SeenFang":34,"Kair0s3":6}},{"path":"src/main/java/decodex/ui/messages/ErrorMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.ui.messages;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"public class ErrorMessages {","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"    public static final String MISSING_ARGUMENT \u003d \"Missing argument\";","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"    public static final String MISSING_COMMAND_TYPE \u003d \"Your command cannot be blank\";","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":"    public static final String MISSING_MODULE_NAME \u003d \"Missing module name\";","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"    public static final String MISSING_RECIPE_NAME \u003d \"Missing recipe name\";","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"    public static final String INPUT_EMPTY \u003d \"Your input is empty\";","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"arraysius"},"content":"    public static final String UNKNOWN_COMMAND \u003d \"Unknown command, please enter a valid command\";","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":"    public static final String NO_DATA_FOUND \u003d \"No data found\";","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"arraysius"},"content":"    public static final String BASE64_DECODING_FAILED_MESSAGE \u003d \"Your data does not seem to be in Base64 format\";","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"arraysius"},"content":"    public static final String HEX_DECODING_FAILED_MESSAGE \u003d \"Invalid hexadecimal string\";","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"arraysius"},"content":"    public static final String BINARY_DECODING_FAILED_MESSAGE \u003d \"Invalid binary string\";","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"    public static final String EMPTY_RECIPE_MESSAGE \u003d \"The recipe is currently empty. There is no module to be \"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"            + \"removed.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"    public static final String INVALID_RECIPE_NAME \u003d \"Recipe names can contain only alphabets, numbers and \"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"            + \"underscores and must be non-empty.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"    public static final String DUPLICATE_RECIPE_NAME_MESSAGE \u003d \"A recipe with the given name already exists.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"    public static final String RECIPE_NOT_FOUND_MESSAGE \u003d \"The given recipe could not be found.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"    public static final String EDITING_RECIPE_NOT_FOUND_MESSAGE \u003d \"No recipe selected for editing.\";","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"arraysius"},"content":"    public static final String TOO_MANY_COMMAND_ARGUMENTS \u003d \"Too many command arguments\";","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"arraysius"},"content":"    public static final String INVALID_LIST_CATEGORY \u003d \"Invalid list category\";","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"arraysius"},"content":"    public static final String UNKNOWN_MODULE_NAME \u003d \"Unknown module name\";","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"arraysius"},"content":"    public static final String INVALID_MODULE_PARAMETERS \u003d \"Invalid module parameters\";","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"arraysius"},"content":"    public static final String MISSING_MODULE_PARAMETERS \u003d \"Missing module parameters\";","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"arraysius"},"content":"    public static final String TOO_MANY_MODULE_PARAMETERS \u003d \"Too many module parameters\";","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"arraysius"},"content":"    public static final String UNKNOWN_SELECTION_CATEGORY \u003d \"Unknown selection category\";","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"Kair0s3"},"content":"    public static final String INPUT_FILE_DOES_NOT_EXIST_MESSAGE \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"Kair0s3"},"content":"            \"The default input file does not exists\";","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"Kair0s3"},"content":"    public static final String FILE_WRITE_ERROR_MESSAGE \u003d \"Something went wrong while writing result to output file\";","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"Kair0s3"},"content":"    public static final String FILE_READ_ERROR_MESSAGE \u003d \"Something went wrong when reading from the file\";","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"Kair0s3"},"content":"    public static final String DIRECTORY_INSTANTIATION_FAILED_MESSAGE \u003d \"Failed to create the directory for \";","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"Kair0s3"},"content":"    public static final String RECIPE_FILE_DELETE_FAILED_MESSAGE \u003d \"Failed to delete the corresponding recipe file\";","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"Kair0s3"},"content":"    public static final String FAILED_TO_LOAD_RECIPE_FILE_MESSAGE \u003d \" failed to be loaded into Decodex\";","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"arraysius"},"content":"    public static final String INVALID_RECIPE_COMMAND \u003d \"Invalid recipe command\";","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"arraysius"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"rizemon":8,"arraysius":22,"Kair0s3":7}},{"path":"src/main/java/decodex/ui/messages/RegularMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.ui.messages;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"public class RegularMessages {","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"    public static final String GREETING \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Decodex \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"            + \"Welcome to Decodex, transforming data with ease\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":"            + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"arraysius"},"content":"    public static final String GOODBYE \u003d \"Goodbye!\";","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"    public static final String LIST_MODULES \u003d \"Here is the list of supported modules:\";","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"    public static final String LIST_RECIPES \u003d \"Here is the list of available recipes:\";","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"    public static final String LIST_RECIPE_MODULES \u003d \"Here is the list of modules in recipe %s:\";","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"arraysius"},"content":"    public static final String NO_RECIPES \u003d \"You do not have any recipes\";","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"arraysius"},"content":"    public static final String REVERTED_ALL_CHANGES \u003d \"Reverted all changes\";","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"    public static final String RECIPE_DELETED \u003d \"Recipe %s has been deleted\";","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"    public static final String NEW_RECIPE_CREATED \u003d \"Recipe %s created successfully\";","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"    public static final String RESETTED_EDITING_RECIPE \u003d \"Removed all modules from recipe %s\";","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"    public static final String REMOVED_RECIPE_FROM_RECIPE \u003d \"Removed %s module from recipe %s\";","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"    public static final String ADDED_MODULE_TO_RECIPE \u003d \"Added %s module to recipe %s\";","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"arraysius"},"content":"    public static final String RECIPE_SELECT \u003d \"Recipe %s selected for editing\";","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"arraysius"},"content":"    public static final String RECIPE_EMPTY \u003d \"There are no modules in the recipe\";","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"arraysius"},"content":"    public static final String RECIPE_MODULES_EXECUTED \u003d \"Modules executed:\";","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"    public static final String BASIC_COMMANDS \u003d \"Here are the basic commands:\";","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"    public static final String RECIPE_COMMANDS \u003d \"Here are the recipe commands:\";","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"    public static final String SYNTAX_MANDATORY_OPTIONAL \u003d \"Syntax: \u003c \u003e - mandatory, { } - optional\";","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"arraysius"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"rizemon":6,"arraysius":14,"SeenFang":5}},{"path":"src/test/java/decodex/DecodexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"class DecodexTest {","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"rizemon":3,"-":10}},{"path":"src/test/java/decodex/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"import decodex.storage.Storage;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"import decodex.recipes.RecipeManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"// @@author rizemon","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"class HelpCommandTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"    private ByteArrayOutputStream outputStream;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"    private final PrintStream originalOutputStream \u003d System.out;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"    private final DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"    private final ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"    private final Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"    private final RecipeManager recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"    public void setOutputStream() {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"        outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"    @AfterEach","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"    public void restoreOutputStream() {","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"        System.setOut(originalOutputStream);","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"    public void run_allCommands_success() {","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"        HelpCommand command \u003d new HelpCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"        command.run(dataManager, moduleManager, ui, recipeManager, storage);","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"        assertFalse(outputStream.toString().isBlank());","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"rizemon":46,"SeenFang":1}},{"path":"src/test/java/decodex/commands/InputCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"import decodex.storage.Storage;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.DataManagerException;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"import decodex.recipes.RecipeManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"// @@author rizemon","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"public class InputCommandTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"    public void run_missingArguments_expectException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"        RecipeManager recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"        String dataString \u003d \"\";","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"        InputCommand testCommand \u003d new InputCommand(dataString);","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"        assertThrows(CommandException.class, () -\u003e testCommand.run(dataManager, moduleManager, ui, recipeManager,","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"                storage));","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"    public void run_insertData_insertedData()","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"            throws CommandException, DataManagerException {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"        RecipeManager recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"        String dataString \u003d \"something\";","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"        InputCommand testCommand \u003d new InputCommand(dataString);","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"        testCommand.run(dataManager, moduleManager, ui, recipeManager, storage);","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"        Data testData \u003d new Data(dataString);","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"        assertTrue(Arrays.equals(dataManager.getOriginalData().getRawBytes(), testData.getRawBytes()));","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"rizemon":48,"SeenFang":1}},{"path":"src/test/java/decodex/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"import decodex.storage.Storage;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"arraysius"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"arraysius"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.CommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"arraysius"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"arraysius"},"content":"import decodex.recipes.RecipeManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"arraysius"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"arraysius"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"arraysius"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"arraysius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"arraysius"},"content":"public class ListCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"arraysius"},"content":"    private ByteArrayOutputStream outputStream;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"arraysius"},"content":"    private final PrintStream originalOutputStream \u003d System.out;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"arraysius"},"content":"    private final DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"arraysius"},"content":"    private final ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"SeenFang"},"content":"    private final Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"    private final RecipeManager recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"arraysius"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"arraysius"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"arraysius"},"content":"    public void setOutputStream() {","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"arraysius"},"content":"        outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"arraysius"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"arraysius"},"content":"    @AfterEach","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"arraysius"},"content":"    public void restoreOutputStream() {","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"arraysius"},"content":"        System.setOut(originalOutputStream);","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"arraysius"},"content":"    public void run_listNull_success() throws CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"arraysius"},"content":"        String listCategory \u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"arraysius"},"content":"        ListCommand listCommand \u003d new ListCommand(listCategory);","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"        listCommand.run(dataManager, moduleManager, ui, recipeManager, storage);","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"arraysius"},"content":"        assertFalse(outputStream.toString().isBlank());","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"arraysius"},"content":"    public void run_listModules_success() throws CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"arraysius"},"content":"        String listCategory \u003d \"modules\";","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"arraysius"},"content":"        ListCommand listCommand \u003d new ListCommand(listCategory);","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"rizemon"},"content":"        listCommand.run(dataManager, moduleManager, ui, recipeManager, storage);","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"arraysius"},"content":"        assertFalse(outputStream.toString().isBlank());","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"arraysius"},"content":"    public void run_listRecipes_success() throws CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"arraysius"},"content":"        String listCategory \u003d \"recipes\";","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"arraysius"},"content":"        ListCommand listCommand \u003d new ListCommand(listCategory);","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"rizemon"},"content":"        listCommand.run(dataManager, moduleManager, ui, recipeManager, storage);","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"arraysius"},"content":"        assertFalse(outputStream.toString().isBlank());","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"arraysius"},"content":"    public void run_listUnknown_throwsCommandException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"arraysius"},"content":"        String listCategory \u003d \"unknown\";","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"arraysius"},"content":"        ListCommand listCommand \u003d new ListCommand(listCategory);","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"rizemon"},"content":"        assertThrows(CommandException.class, () -\u003e listCommand.run(dataManager, moduleManager, ui, recipeManager,","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"rizemon"},"content":"                storage));","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"arraysius"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"rizemon":6,"arraysius":65,"SeenFang":2}},{"path":"src/test/java/decodex/commands/RecipeDeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"import decodex.commands.recipe.RecipeDeleteCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.CommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.DataManagerException;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.ModuleManagerException;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.RecipeException;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.RecipeManagerException;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"import decodex.recipes.Recipe;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"import decodex.recipes.RecipeManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"import decodex.storage.Storage;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"SeenFang"},"content":"class RecipeDeleteCommandTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"SeenFang"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"SeenFang"},"content":"    void run_deleteValidRecipe_recipeDeleted() throws CommandException, RecipeException, ModuleException,","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"SeenFang"},"content":"            RecipeManagerException, DataManagerException, ModuleManagerException, IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"SeenFang"},"content":"        String testRecipeName \u003d \"BaconPancakes\";","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"SeenFang"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"SeenFang"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"SeenFang"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"SeenFang"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"        RecipeManager recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"SeenFang"},"content":"        recipeManager.addRecipe(new Recipe(testRecipeName));","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"SeenFang"},"content":"        Command recipeDeleteCommand \u003d new RecipeDeleteCommand(testRecipeName);","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"        recipeDeleteCommand.run(dataManager, moduleManager, ui, recipeManager, storage);","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"SeenFang"},"content":"        assertThrows(RecipeManagerException.class, () -\u003e recipeManager.getRecipe(testRecipeName));","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"SeenFang"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"SeenFang"},"content":"    void run_deleteInvalidRecipe_expectException() throws RecipeException, RecipeManagerException, IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"SeenFang"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"SeenFang"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"SeenFang"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"SeenFang"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"        RecipeManager recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"SeenFang"},"content":"        recipeManager.addRecipe(new Recipe(\"BaconPancakes\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"SeenFang"},"content":"        String testRecipeName \u003d \"IDoNotExist\";","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"SeenFang"},"content":"        Command recipeDeleteCommand \u003d new RecipeDeleteCommand(testRecipeName);","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"SeenFang"},"content":"        assertThrows(RecipeManagerException.class,","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"rizemon"},"content":"            () -\u003e recipeDeleteCommand.run(dataManager, moduleManager, ui, recipeManager, storage));","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"rizemon":4,"arraysius":1,"SeenFang":53}},{"path":"src/test/java/decodex/commands/RecipeListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"import decodex.commands.recipe.RecipeListCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.CommandException;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import decodex.data.exception.RecipeException;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.RecipeManagerException;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.base64.Base64Encoder;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.binary.BinaryEncoder;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.hex.HexEncoder;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.rot.RotEncoder;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"import decodex.recipes.Recipe;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"import decodex.recipes.RecipeManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"import decodex.storage.Storage;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"SeenFang"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"SeenFang"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"SeenFang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"SeenFang"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"SeenFang"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"SeenFang"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"SeenFang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"SeenFang"},"content":"class RecipeListCommandTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"SeenFang"},"content":"    private static final String TEST_RECIPE_NAME \u003d \"testRecipe\";","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"SeenFang"},"content":"    private ByteArrayOutputStream outputStream;","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"SeenFang"},"content":"    private final PrintStream originalOutputStream \u003d System.out;","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"SeenFang"},"content":"    private final DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"SeenFang"},"content":"    private final ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"SeenFang"},"content":"    private final Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"    private final RecipeManager recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"SeenFang"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"SeenFang"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"SeenFang"},"content":"    public void createTestRecipe() throws RecipeManagerException, RecipeException, IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"SeenFang"},"content":"        Recipe recipe \u003d new Recipe(TEST_RECIPE_NAME);","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"SeenFang"},"content":"        recipe.push(new HexEncoder());","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"SeenFang"},"content":"        recipe.push(new Base64Encoder());","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"SeenFang"},"content":"        recipe.push(new RotEncoder(5));","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"SeenFang"},"content":"        recipe.push(new BinaryEncoder());","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"SeenFang"},"content":"        recipeManager.addRecipe(recipe);","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"SeenFang"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"SeenFang"},"content":"    public void setOutputStream() {","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"SeenFang"},"content":"        outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"SeenFang"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"SeenFang"},"content":"    @AfterEach","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"SeenFang"},"content":"    public void restoreOutputStream() {","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"SeenFang"},"content":"        System.setOut(originalOutputStream);","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"SeenFang"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"SeenFang"},"content":"    void run_listRecipeName_success() throws RecipeManagerException, CommandException, ModuleException {","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"SeenFang"},"content":"        RecipeListCommand testCommand \u003d new RecipeListCommand(TEST_RECIPE_NAME);","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"rizemon"},"content":"        testCommand.run(dataManager, moduleManager, ui, recipeManager, storage);","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"SeenFang"},"content":"        assertFalse(outputStream.toString().isBlank());","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"SeenFang"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"SeenFang"},"content":"    void run_listBlankNoEditingRecipe_expectException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"SeenFang"},"content":"        RecipeListCommand testCommand \u003d new RecipeListCommand(\"\");","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"SeenFang"},"content":"        assertThrows(RecipeManagerException.class,","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"rizemon"},"content":"            () -\u003e testCommand.run(dataManager, moduleManager, ui, recipeManager, storage));","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"SeenFang"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"SeenFang"},"content":"    void run_listBlankHasEditingRecipe_success() throws RecipeManagerException, CommandException, ModuleException {","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"SeenFang"},"content":"        recipeManager.selectRecipeForEditing(TEST_RECIPE_NAME);","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"SeenFang"},"content":"        RecipeListCommand testCommand \u003d new RecipeListCommand(\"\");","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"rizemon"},"content":"        testCommand.run(dataManager, moduleManager, ui, recipeManager, storage);","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"SeenFang"},"content":"        assertFalse(outputStream.toString().isBlank());","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"SeenFang"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"SeenFang"},"content":"    void run_listUnknownRecipe_expectException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"SeenFang"},"content":"        RecipeListCommand testCommand \u003d new RecipeListCommand(\"unknownRecipe\");","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"SeenFang"},"content":"        assertThrows(RecipeManagerException.class,","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"rizemon"},"content":"            () -\u003e testCommand.run(dataManager, moduleManager, ui, recipeManager, storage));","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"SeenFang"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"SeenFang"},"content":"    void run_listEmptyRecipe_expectException() throws RecipeManagerException, CommandException, ModuleException {","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"SeenFang"},"content":"        recipeManager.getRecipe(TEST_RECIPE_NAME).reset();","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"SeenFang"},"content":"        RecipeListCommand testCommand \u003d new RecipeListCommand(TEST_RECIPE_NAME);","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"rizemon"},"content":"        testCommand.run(dataManager, moduleManager, ui, recipeManager, storage);","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"SeenFang"},"content":"        assertFalse(outputStream.toString().isBlank());","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"rizemon":7,"SeenFang":92,"-":1}},{"path":"src/test/java/decodex/commands/RecipeNewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"import decodex.commands.recipe.RecipeNewCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.CommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.DataManagerException;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.ModuleManagerException;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.RecipeException;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.RecipeManagerException;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"import decodex.recipes.RecipeManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"import decodex.storage.Storage;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"SeenFang"},"content":"class RecipeNewCommandTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"SeenFang"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"SeenFang"},"content":"    void run_createNewRecipe_newRecipeCreated() throws CommandException, RecipeException, ModuleException,","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"SeenFang"},"content":"            RecipeManagerException, DataManagerException, ModuleManagerException, IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"SeenFang"},"content":"        String testRecipeName \u003d \"BaconPancakes\";","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"SeenFang"},"content":"        Command newRecipeCommand \u003d new RecipeNewCommand(testRecipeName);","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"SeenFang"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"SeenFang"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"SeenFang"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"SeenFang"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"        RecipeManager recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"        newRecipeCommand.run(dataManager, moduleManager, ui, recipeManager, storage);","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"SeenFang"},"content":"        assertNotNull(recipeManager.getRecipe(\"BaconPancakes\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"SeenFang"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"SeenFang"},"content":"    void run_createNewRecipeWithNoName_expectException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"SeenFang"},"content":"        String testRecipeName \u003d \"\";","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"SeenFang"},"content":"        Command newRecipeCommand \u003d new RecipeNewCommand(testRecipeName);","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"SeenFang"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"SeenFang"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"SeenFang"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"SeenFang"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"rizemon"},"content":"        RecipeManager recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"SeenFang"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"rizemon"},"content":"            () -\u003e newRecipeCommand.run(dataManager, moduleManager, ui, recipeManager, storage));","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"rizemon":4,"arraysius":1,"SeenFang":49}},{"path":"src/test/java/decodex/commands/RecipePopCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"import decodex.commands.recipe.RecipePopCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.ModuleManagerException;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.RecipeException;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.RecipeManagerException;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"import decodex.modules.Module;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"import decodex.recipes.Recipe;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"import decodex.recipes.RecipeManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"import decodex.storage.Storage;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"// @@author rizemon","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"class RecipePopCommandTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"    public void run_oneModuleToEditingRecipe_recipeSizeIsZero()","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"            throws RecipeManagerException, ModuleManagerException, ModuleException, RecipeException, IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"        RecipeManager recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"        String testRecipeName \u003d \"test\";","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"        Recipe testRecipe \u003d new Recipe(testRecipeName);","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"        recipeManager.addRecipe(testRecipe);","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"        recipeManager.selectRecipeForEditing(testRecipeName);","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"        String moduleName \u003d \"base64encode\";","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"        String[] parameters \u003d {};","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"        Module module \u003d moduleManager.selectModule(moduleName, parameters);","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"        testRecipe.push(module);","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"        RecipePopCommand testCommand \u003d new RecipePopCommand();","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"        testCommand.run(dataManager, moduleManager, ui, recipeManager, storage);","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"        assertEquals(recipeManager.getEditingRecipe().getModuleList().size(), 0);","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"rizemon"},"content":"    public void run_emptyEditingRecipe_expectException() throws RecipeException, RecipeManagerException, IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"rizemon"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"rizemon"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"rizemon"},"content":"        RecipeManager recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"rizemon"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"rizemon"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"rizemon"},"content":"        String testRecipeName \u003d \"test\";","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"rizemon"},"content":"        Recipe testRecipe \u003d new Recipe(testRecipeName);","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"rizemon"},"content":"        recipeManager.addRecipe(testRecipe);","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"rizemon"},"content":"        recipeManager.selectRecipeForEditing(testRecipeName);","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"rizemon"},"content":"        RecipePopCommand testCommand \u003d new RecipePopCommand();","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"rizemon"},"content":"        assertThrows(RecipeException.class, () -\u003e testCommand.run(dataManager, moduleManager, ui, recipeManager,","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"rizemon"},"content":"                storage));","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"rizemon":56,"arraysius":1,"SeenFang":6}},{"path":"src/test/java/decodex/commands/RecipePushCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"import decodex.commands.recipe.RecipePushCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.CommandException;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.ModuleManagerException;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.RecipeException;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.RecipeManagerException;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"import decodex.recipes.Recipe;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"import decodex.recipes.RecipeManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"import decodex.storage.Storage;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"// @@author rizemon","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"class RecipePushCommandTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"    public void run_oneModuleToEditingRecipe_recipeSizeIsOne()","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"            throws RecipeException, RecipeManagerException, CommandException,","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"            ModuleException, ModuleManagerException, IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"        RecipeManager recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"        String testRecipeName \u003d \"test\";","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"        Recipe testRecipe \u003d new Recipe(testRecipeName);","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"        recipeManager.addRecipe(testRecipe);","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"        recipeManager.selectRecipeForEditing(testRecipeName);","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"        String moduleName \u003d \"base64encode\";","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"        String[] parameters \u003d {};","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"        RecipePushCommand testCommand \u003d new RecipePushCommand(moduleName, parameters);","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"        testCommand.run(dataManager, moduleManager, ui, recipeManager, storage);","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"        assertEquals(recipeManager.getEditingRecipe().getModuleList().size(), 1);","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"rizemon"},"content":"    public void run_emptyModuleName_expectException() throws RecipeException, RecipeManagerException, IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"rizemon"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"rizemon"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"rizemon"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"rizemon"},"content":"        RecipeManager recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"rizemon"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"rizemon"},"content":"        String testRecipeName \u003d \"test\";","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"rizemon"},"content":"        Recipe testRecipe \u003d new Recipe(testRecipeName);","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"rizemon"},"content":"        recipeManager.addRecipe(testRecipe);","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"rizemon"},"content":"        recipeManager.selectRecipeForEditing(testRecipeName);","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"rizemon"},"content":"        String moduleName \u003d \"\";","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"rizemon"},"content":"        String[] parameters \u003d {};","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"rizemon"},"content":"        RecipePushCommand testCommand \u003d new RecipePushCommand(moduleName, parameters);","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"rizemon"},"content":"        assertThrows(CommandException.class, () -\u003e testCommand.run(dataManager, moduleManager, ui, recipeManager,","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"rizemon"},"content":"                storage));","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"rizemon":63,"arraysius":1,"SeenFang":5}},{"path":"src/test/java/decodex/commands/RecipeResetCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.RecipeException;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"import decodex.storage.Storage;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"arraysius"},"content":"import decodex.commands.recipe.RecipeResetCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.RecipeManagerException;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.ModuleManagerException;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"import decodex.modules.Module;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"import decodex.recipes.Recipe;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"import decodex.recipes.RecipeManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"// @@author rizemon","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"class RecipeResetCommandTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"    public void run_oneModuleInEditingRecipe_recipeSizeIsZero() throws RecipeException, RecipeManagerException,","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"            ModuleManagerException, ModuleException, IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"        RecipeManager recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"        String testRecipeName \u003d \"test\";","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"        Recipe testRecipe \u003d new Recipe(testRecipeName);","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"        recipeManager.addRecipe(testRecipe);","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"        recipeManager.selectRecipeForEditing(testRecipeName);","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"        String moduleName \u003d \"base64encode\";","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"        String[] parameters \u003d {};","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"        Module module \u003d moduleManager.selectModule(moduleName, parameters);","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"        testRecipe.push(module);","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"        RecipeResetCommand testCommand \u003d new RecipeResetCommand();","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"        testCommand.run(dataManager, moduleManager, ui, recipeManager, storage);","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"        assertEquals(recipeManager.getEditingRecipe().getModuleList().size(), 0);","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"rizemon":44,"arraysius":1,"SeenFang":2}},{"path":"src/test/java/decodex/commands/RecipeSelectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.RecipeException;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"import decodex.storage.Storage;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":"import decodex.commands.recipe.RecipeSelectCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.CommandException;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.RecipeManagerException;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"import decodex.recipes.Recipe;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"import decodex.recipes.RecipeManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"// @@author rizemon","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"class RecipeSelectCommandTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"    public void run_selectExistingRecipe_existingRecipe() throws RecipeException, RecipeManagerException,","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"            CommandException, IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"        RecipeManager recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"        String testRecipeName \u003d \"test\";","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"        Recipe testRecipe \u003d new Recipe(testRecipeName);","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"        recipeManager.addRecipe(testRecipe);","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"        RecipeSelectCommand testCommand \u003d new RecipeSelectCommand(testRecipeName);","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"        testCommand.run(dataManager, moduleManager, ui, recipeManager, storage);","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"        assertEquals(recipeManager.getEditingRecipe().getName(), testRecipeName);","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"    public void run_selectNonExistentRecipe_expectException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"        RecipeManager recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"rizemon"},"content":"        String testRecipeName \u003d \"test\";","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"rizemon"},"content":"        RecipeSelectCommand testCommand \u003d new RecipeSelectCommand(testRecipeName);","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"rizemon"},"content":"        assertThrows(RecipeManagerException.class,","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"rizemon"},"content":"            () -\u003e testCommand.run(dataManager, moduleManager, ui, recipeManager, storage));","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"rizemon"},"content":"    public void run_nullRecipe_expectException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"rizemon"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"rizemon"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"rizemon"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"rizemon"},"content":"        RecipeManager recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"rizemon"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"rizemon"},"content":"        String testRecipeName \u003d \"\";","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"rizemon"},"content":"        RecipeSelectCommand testCommand \u003d new RecipeSelectCommand(testRecipeName);","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"rizemon"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"rizemon"},"content":"            () -\u003e testCommand.run(dataManager, moduleManager, ui, recipeManager, storage));","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"rizemon":67,"arraysius":1,"SeenFang":2}},{"path":"src/test/java/decodex/commands/ResetCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"import decodex.storage.Storage;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.DataManagerException;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"import decodex.recipes.RecipeManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"// @@author rizemon","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"class ResetCommandTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"    public void run_noChanges_sameOriginalData() throws DataManagerException {","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"        RecipeManager recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"        Data originalData \u003d new Data(\"hi\");","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"        dataManager.setOriginalData(originalData);","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"        ResetCommand testCommand \u003d new ResetCommand();","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"        testCommand.run(dataManager, moduleManager, ui, recipeManager, storage);","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"        assertTrue(Arrays.equals(dataManager.getCurrentData().getRawBytes(), originalData.getRawBytes()));","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"    public void run_newData_sameOriginalData() throws DataManagerException {","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"        RecipeManager recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"        Data originalData \u003d new Data(\"hi\");","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"        dataManager.setOriginalData(originalData);","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"        Data newData \u003d new Data(\"bye\");","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"        dataManager.setCurrentData(newData);","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"rizemon"},"content":"        ResetCommand testCommand \u003d new ResetCommand();","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"rizemon"},"content":"        testCommand.run(dataManager, moduleManager, ui, recipeManager, storage);","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"rizemon"},"content":"        assertTrue(Arrays.equals(dataManager.getCurrentData().getRawBytes(), originalData.getRawBytes()));","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"rizemon":53,"SeenFang":1}},{"path":"src/test/java/decodex/commands/SelectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.CommandException;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.DataManagerException;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.ModuleManagerException;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.RecipeException;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.RecipeManagerException;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"arraysius"},"content":"import decodex.modules.base64.Base64Encoder;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"arraysius"},"content":"import decodex.modules.hex.HexEncoder;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"arraysius"},"content":"import decodex.recipes.Recipe;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"import decodex.recipes.RecipeManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"import decodex.storage.Storage;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"arraysius"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"arraysius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"arraysius"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"arraysius"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"arraysius"},"content":"public class SelectCommandTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"arraysius"},"content":"    public void run_validModuleName_success() throws ModuleManagerException, CommandException, DataManagerException,","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"arraysius"},"content":"            ModuleException, RecipeException, RecipeManagerException {","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"arraysius"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"arraysius"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"SeenFang"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"        RecipeManager recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"arraysius"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"arraysius"},"content":"        Data data \u003d new Data(\"hello world\");","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"arraysius"},"content":"        dataManager.setOriginalData(data);","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"arraysius"},"content":"        String selectCategory \u003d \"module\";","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"arraysius"},"content":"        String moduleName \u003d \"base64encode\";","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"arraysius"},"content":"        String[] parameters \u003d {};","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"arraysius"},"content":"        SelectCommand selectCommand \u003d new SelectCommand(selectCategory, moduleName, parameters);","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"        selectCommand.run(dataManager, moduleManager, ui, recipeManager, storage);","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"arraysius"},"content":"        assertEquals(\"aGVsbG8gd29ybGQ\u003d\", dataManager.getCurrentData().toString());","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"arraysius"},"content":"    public void run_moduleWithParameters_success() throws ModuleManagerException, CommandException, ModuleException,","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"arraysius"},"content":"            DataManagerException, RecipeException, RecipeManagerException {","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"arraysius"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"arraysius"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"arraysius"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"SeenFang"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"rizemon"},"content":"        RecipeManager recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"arraysius"},"content":"        Data data \u003d new Data(\"hello world\");","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"arraysius"},"content":"        dataManager.setOriginalData(data);","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"arraysius"},"content":"        String selectCategory \u003d \"module\";","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"arraysius"},"content":"        String moduleName \u003d \"rotencode\";","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"arraysius"},"content":"        String[] parameters \u003d {\"13\"};","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"arraysius"},"content":"        SelectCommand selectCommand \u003d new SelectCommand(selectCategory, moduleName, parameters);","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"rizemon"},"content":"        selectCommand.run(dataManager, moduleManager, ui, recipeManager, storage);","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"arraysius"},"content":"        assertEquals(\"uryyb jbeyq\", dataManager.getCurrentData().toString());","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"arraysius"},"content":"    public void run_blankModuleName_expectException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"arraysius"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"arraysius"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"SeenFang"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"rizemon"},"content":"        RecipeManager recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"arraysius"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"arraysius"},"content":"        Data data \u003d new Data(\"hello world\");","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"arraysius"},"content":"        dataManager.setOriginalData(data);","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"arraysius"},"content":"        String selectCategory \u003d \"module\";","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"arraysius"},"content":"        String moduleName \u003d \"\";","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"arraysius"},"content":"        String[] parameters \u003d {};","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"arraysius"},"content":"        SelectCommand selectCommand \u003d new SelectCommand(selectCategory, moduleName, parameters);","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"rizemon"},"content":"        assertThrows(CommandException.class, () -\u003e selectCommand.run(dataManager, moduleManager, ui, recipeManager,","lastModifiedDate":"2021-10-30"},{"lineNumber":85,"author":{"gitId":"rizemon"},"content":"                storage));","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"rizemon"},"content":"    public void run_unknownModuleName_expectException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"arraysius"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"arraysius"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"SeenFang"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"rizemon"},"content":"        RecipeManager recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"arraysius"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"arraysius"},"content":"        Data data \u003d new Data(\"hello world\");","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"arraysius"},"content":"        dataManager.setOriginalData(data);","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"arraysius"},"content":"        String selectCategory \u003d \"module\";","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"arraysius"},"content":"        String moduleName \u003d \"unknownModule\";","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"arraysius"},"content":"        String[] parameters \u003d {};","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"arraysius"},"content":"        SelectCommand selectCommand \u003d new SelectCommand(selectCategory, moduleName, parameters);","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"arraysius"},"content":"        assertThrows(ModuleManagerException.class, () -\u003e selectCommand.run(dataManager, moduleManager, ui,","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"rizemon"},"content":"                recipeManager, storage));","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"arraysius"},"content":"    public void run_validRecipeName_success() throws ModuleManagerException, CommandException, DataManagerException,","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"SeenFang"},"content":"            ModuleException, RecipeException, RecipeManagerException, IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"arraysius"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"arraysius"},"content":"        Data data \u003d new Data(\"hello world\");","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"arraysius"},"content":"        dataManager.setOriginalData(data);","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"rizemon"},"content":"        RecipeManager recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":116,"author":{"gitId":"arraysius"},"content":"        String recipeName \u003d \"testRecipe\";","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"arraysius"},"content":"        Recipe recipe \u003d new Recipe(recipeName);","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"arraysius"},"content":"        recipe.push(new HexEncoder());","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"arraysius"},"content":"        recipe.push(new Base64Encoder());","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"arraysius"},"content":"        recipeManager.addRecipe(recipe);","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"arraysius"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"arraysius"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"rizemon"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-30"},{"lineNumber":125,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"arraysius"},"content":"        String selectCategory \u003d \"recipe\";","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"arraysius"},"content":"        String[] parameters \u003d {};","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"arraysius"},"content":"        SelectCommand selectCommand \u003d new SelectCommand(selectCategory, recipeName, parameters);","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"rizemon"},"content":"        selectCommand.run(dataManager, moduleManager, ui, recipeManager, storage);","lastModifiedDate":"2021-10-30"},{"lineNumber":130,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"arraysius"},"content":"        assertEquals(\"Njg2NTZjNmM2ZjIwNzc2ZjcyNmM2NA\u003d\u003d\", dataManager.getCurrentData().toString());","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"arraysius"},"content":"    public void run_emptyRecipe_success() throws ModuleManagerException, CommandException, DataManagerException,","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"SeenFang"},"content":"            ModuleException, RecipeException, RecipeManagerException, IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"arraysius"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"arraysius"},"content":"        String dataString \u003d \"hello world\";","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"arraysius"},"content":"        Data data \u003d new Data(dataString);","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"arraysius"},"content":"        dataManager.setOriginalData(data);","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"SeenFang"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"rizemon"},"content":"        RecipeManager recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":144,"author":{"gitId":"arraysius"},"content":"        String recipeName \u003d \"testRecipe\";","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"arraysius"},"content":"        Recipe recipe \u003d new Recipe(recipeName);","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"arraysius"},"content":"        recipeManager.addRecipe(recipe);","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"arraysius"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"arraysius"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"arraysius"},"content":"        String selectCategory \u003d \"recipe\";","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"arraysius"},"content":"        String[] parameters \u003d {};","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"arraysius"},"content":"        SelectCommand selectCommand \u003d new SelectCommand(selectCategory, recipeName, parameters);","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"rizemon"},"content":"        selectCommand.run(dataManager, moduleManager, ui, recipeManager, storage);","lastModifiedDate":"2021-10-30"},{"lineNumber":155,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"arraysius"},"content":"        assertEquals(dataString, dataManager.getCurrentData().toString());","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"arraysius"},"content":"    public void run_blankRecipeName_expectRecipeManagerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"arraysius"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"arraysius"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"SeenFang"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"rizemon"},"content":"        RecipeManager recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":165,"author":{"gitId":"arraysius"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"arraysius"},"content":"        String selectCategory \u003d \"recipe\";","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"arraysius"},"content":"        String recipeName \u003d \"testRecipe\";","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"arraysius"},"content":"        String[] parameters \u003d {};","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"arraysius"},"content":"        SelectCommand selectCommand \u003d new SelectCommand(selectCategory, recipeName, parameters);","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"arraysius"},"content":"        assertThrows(RecipeManagerException.class, () -\u003e selectCommand.run(dataManager, moduleManager, ui,","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"rizemon"},"content":"                recipeManager, storage));","lastModifiedDate":"2021-10-30"},{"lineNumber":174,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"arraysius"},"content":"    public void run_unknownRecipe_expectRecipeManagerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"arraysius"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"arraysius"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"SeenFang"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-27"},{"lineNumber":181,"author":{"gitId":"rizemon"},"content":"        RecipeManager recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":182,"author":{"gitId":"arraysius"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"arraysius"},"content":"        String selectCategory \u003d \"recipe\";","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"arraysius"},"content":"        String recipeName \u003d \"unknownRecipe\";","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"arraysius"},"content":"        String[] parameters \u003d {};","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"arraysius"},"content":"        SelectCommand selectCommand \u003d new SelectCommand(selectCategory, recipeName, parameters);","lastModifiedDate":"2021-10-24"},{"lineNumber":188,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"arraysius"},"content":"        assertThrows(RecipeManagerException.class, () -\u003e selectCommand.run(dataManager, moduleManager, ui,","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"rizemon"},"content":"                recipeManager, storage));","lastModifiedDate":"2021-10-30"},{"lineNumber":191,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":192,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"arraysius"},"content":"    public void run_invalidSelectCategory_expectCommandException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":195,"author":{"gitId":"arraysius"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"arraysius"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-24"},{"lineNumber":197,"author":{"gitId":"SeenFang"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-10-27"},{"lineNumber":198,"author":{"gitId":"rizemon"},"content":"        RecipeManager recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":199,"author":{"gitId":"arraysius"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-24"},{"lineNumber":200,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":201,"author":{"gitId":"arraysius"},"content":"        String selectCategory \u003d \"unknownCategory\";","lastModifiedDate":"2021-10-24"},{"lineNumber":202,"author":{"gitId":"arraysius"},"content":"        String recipeName \u003d \"unknownItem\";","lastModifiedDate":"2021-10-24"},{"lineNumber":203,"author":{"gitId":"arraysius"},"content":"        String[] parameters \u003d {};","lastModifiedDate":"2021-10-24"},{"lineNumber":204,"author":{"gitId":"arraysius"},"content":"        SelectCommand selectCommand \u003d new SelectCommand(selectCategory, recipeName, parameters);","lastModifiedDate":"2021-10-24"},{"lineNumber":205,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":206,"author":{"gitId":"rizemon"},"content":"        assertThrows(CommandException.class, () -\u003e selectCommand.run(dataManager, moduleManager, ui, recipeManager,","lastModifiedDate":"2021-10-30"},{"lineNumber":207,"author":{"gitId":"rizemon"},"content":"                storage));","lastModifiedDate":"2021-10-30"},{"lineNumber":208,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"arraysius"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"rizemon":25,"arraysius":170,"Kair0s3":1,"SeenFang":13}},{"path":"src/test/java/decodex/data/DataManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.data;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.DataManagerException;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"class DataManagerTest {","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"    public void getOriginalData_noData_expectException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"        DataManager testManager \u003d new DataManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"        assertThrows(DataManagerException.class, () -\u003e testManager.getOriginalData());","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"    public void getCurrentData_noData_expectException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"        DataManager testManager \u003d new DataManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"        assertThrows(DataManagerException.class, () -\u003e testManager.getCurrentData());","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"    public void getCurrentData_withOriginalData_originalData() throws DataManagerException {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"        DataManager testManager \u003d new DataManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"        Data originalData \u003d new Data(\"hi\");","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"        testManager.setOriginalData(originalData);","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"        assertTrue(Arrays.equals(testManager.getCurrentData().getRawBytes(), originalData.getRawBytes()));","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"    public void setOriginalData_withOriginalData_originalData() throws DataManagerException {","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"        DataManager testManager \u003d new DataManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"        Data originalData \u003d new Data(\"hi\");","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"        testManager.setOriginalData(originalData);","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"        assertTrue(Arrays.equals(testManager.getOriginalData().getRawBytes(), originalData.getRawBytes()));","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"    public void setCurrentData_noData_expectException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"        DataManager testManager \u003d new DataManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"        Data newData \u003d new Data(\"bye\");","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"        assertThrows(DataManagerException.class, () -\u003e testManager.setCurrentData(newData));","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"rizemon"},"content":"    public void setCurrentData_newData_newData() throws DataManagerException {","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"rizemon"},"content":"        DataManager testManager \u003d new DataManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"rizemon"},"content":"        Data originalData \u003d new Data(\"hi\");","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"rizemon"},"content":"        testManager.setOriginalData(originalData);","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"rizemon"},"content":"        Data newData \u003d new Data(\"bye\");","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"rizemon"},"content":"        testManager.setCurrentData(newData);","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"rizemon"},"content":"        assertTrue(Arrays.equals(testManager.getCurrentData().getRawBytes(), newData.getRawBytes()));","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"rizemon"},"content":"    public void resetToOriginalData_noUpdates_originalData() throws DataManagerException {","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"rizemon"},"content":"        DataManager testManager \u003d new DataManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"rizemon"},"content":"        Data originalData \u003d new Data(\"hi\");","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"rizemon"},"content":"        testManager.setOriginalData(originalData);","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"rizemon"},"content":"        testManager.resetToOriginalData();","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"rizemon"},"content":"        assertTrue(Arrays.equals(testManager.getCurrentData().getRawBytes(), originalData.getRawBytes()));","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"rizemon"},"content":"    public void resetToOriginalData_newData_originalData() throws DataManagerException {","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"rizemon"},"content":"        DataManager testManager \u003d new DataManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"rizemon"},"content":"        Data originalData \u003d new Data(\"hi\");","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"rizemon"},"content":"        testManager.setOriginalData(originalData);","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"rizemon"},"content":"        Data newData \u003d new Data(\"bye\");","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"rizemon"},"content":"        testManager.setCurrentData(newData);","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"rizemon"},"content":"        testManager.resetToOriginalData();","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"rizemon"},"content":"        assertTrue(Arrays.equals(testManager.getCurrentData().getRawBytes(), originalData.getRawBytes()));","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"rizemon":77}},{"path":"src/test/java/decodex/data/DataTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.data;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"class DataTest {","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"    public void getRawBytes_stringConstructor_actualBytesOfString() {","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"        Data testData \u003d new Data(\"hi\");","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"        byte[] expectedBytes \u003d new byte[]{104, 105}; // ASCII values of \"hi\"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"        assertTrue(Arrays.equals(testData.getRawBytes(), expectedBytes));","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"    public void getRawBytes_bytesConstructor_actualBytesOfString() {","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"        byte[] expectedBytes \u003d new byte[]{104, 105}; // ASCII values of \"hi\"","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"        Data testData \u003d new Data(expectedBytes);","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"        assertTrue(Arrays.equals(testData.getRawBytes(), expectedBytes));","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"    public void toString_correctStringRepresentation() {","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"        String testString \u003d \"hi\";","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"        Data testData \u003d new Data(testString);","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"        assertTrue(testString.equals(testData.toString()));","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"rizemon":31}},{"path":"src/test/java/decodex/modules/ModuleManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.modules;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.ModuleManagerException;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"arraysius"},"content":"import decodex.modules.base64.Base64Encoder;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"import decodex.modules.rot.RotEncoder;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"arraysius"},"content":"public class ModuleManagerTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"arraysius"},"content":"    public void selectModule_base64encode_success() throws ModuleManagerException, ModuleException {","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"arraysius"},"content":"        String moduleName \u003d \"base64encode\";","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"arraysius"},"content":"        String[] parameters \u003d {};","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"arraysius"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"arraysius"},"content":"        Module module \u003d moduleManager.selectModule(moduleName, parameters);","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"arraysius"},"content":"        assertTrue(module instanceof Base64Encoder);","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"arraysius"},"content":"    public void selectModule_rotEncodeWithValidParameter_success() throws ModuleManagerException, ModuleException {","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"arraysius"},"content":"        String moduleName \u003d \"rotencode\";","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"arraysius"},"content":"        String[] parameters \u003d {\"13\"};","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"arraysius"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"arraysius"},"content":"        Module module \u003d moduleManager.selectModule(moduleName, parameters);","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"arraysius"},"content":"        assertTrue(module instanceof RotEncoder);","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"arraysius"},"content":"    public void selectModule_unknownModuleName_unknownModuleExceptionThrown() {","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"arraysius"},"content":"        String moduleName \u003d \"unknownModule\";","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"arraysius"},"content":"        String[] parameters \u003d {};","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"arraysius"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"arraysius"},"content":"        assertThrows(ModuleManagerException.class, () -\u003e moduleManager.selectModule(moduleName, parameters));","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"arraysius"},"content":"    public void selectModule_blankModuleName_unknownModuleExceptionThrown() {","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"arraysius"},"content":"        String moduleName \u003d \"\";","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"arraysius"},"content":"        String[] parameters \u003d {};","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"arraysius"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"arraysius"},"content":"        assertThrows(ModuleManagerException.class, () -\u003e moduleManager.selectModule(moduleName, parameters));","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"arraysius"},"content":"    public void selectModule_zeroParameterModuleWithParameters_moduleExceptionThrown() {","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"arraysius"},"content":"        String moduleName \u003d \"base64encode\";","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"arraysius"},"content":"        String[] parameters \u003d {\"1\"};","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"arraysius"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"arraysius"},"content":"        assertThrows(ModuleException.class, () -\u003e moduleManager.selectModule(moduleName, parameters));","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"arraysius"},"content":"    public void selectModule_rotEncodeWithoutParameters_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"arraysius"},"content":"        String moduleName \u003d \"rotencode\";","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"arraysius"},"content":"        String[] parameters \u003d {};","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"arraysius"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"arraysius"},"content":"        assertThrows(ModuleException.class, () -\u003e moduleManager.selectModule(moduleName, parameters));","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"arraysius"},"content":"    public void selectModule_rotEncodeAdditionalParameters_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"arraysius"},"content":"        String moduleName \u003d \"rotencode\";","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"arraysius"},"content":"        String[] parameters \u003d {\"13\", \"a\"};","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"arraysius"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"arraysius"},"content":"        assertThrows(ModuleException.class, () -\u003e moduleManager.selectModule(moduleName, parameters));","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"arraysius"},"content":"    public void selectModule_rotEncodeInvalidParameters_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"arraysius"},"content":"        String moduleName \u003d \"rotencode\";","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"arraysius"},"content":"        String[] parameters \u003d {\"a\"};","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"arraysius"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"arraysius"},"content":"        assertThrows(ModuleException.class, () -\u003e moduleManager.selectModule(moduleName, parameters));","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"arraysius"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"arraysius":86}},{"path":"src/test/java/decodex/modules/base64/Base64DecoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.modules.base64;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":"class Base64DecoderTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Kair0s3"},"content":"    void run_encodedString_base64DecodedData() throws ModuleException {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Kair0s3"},"content":"        Base64Decoder base64Decoder \u003d new Base64Decoder();","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Kair0s3"},"content":"        String encodedString \u003d \"dGVzdA\u003d\u003d\";","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Kair0s3"},"content":"        String expectedString \u003d \"test\";","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"        Data encodedData \u003d new Data(encodedString);","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Kair0s3"},"content":"        Data decodedData \u003d base64Decoder.run(encodedData);","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Kair0s3"},"content":"        assertEquals(expectedString, decodedData.toString());","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Kair0s3"},"content":"    void run_emptyString_emptyDecodedData() throws ModuleException {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Kair0s3"},"content":"        Base64Decoder base64Decoder \u003d new Base64Decoder();","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Kair0s3"},"content":"        String encodedString \u003d \"\";","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Kair0s3"},"content":"        String expectedString \u003d \"\";","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Kair0s3"},"content":"        Data encodedData \u003d new Data(encodedString);","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Kair0s3"},"content":"        Data decodedData \u003d base64Decoder.run(encodedData);","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Kair0s3"},"content":"        assertEquals(expectedString, decodedData.toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"Kair0s3"},"content":"    void run_nullByteBase64EncodedInput_expectNullByte() throws ModuleException {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"Kair0s3"},"content":"        Base64Decoder base64Decoder \u003d new Base64Decoder();","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Kair0s3"},"content":"        String encodedString \u003d \"AA\u003d\u003d\";","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Kair0s3"},"content":"        String expectedString \u003d \"\\00\";","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Kair0s3"},"content":"        Data encodedData \u003d new Data(encodedString);","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Kair0s3"},"content":"        Data decodedData \u003d base64Decoder.run(encodedData);","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Kair0s3"},"content":"        assertEquals(expectedString, decodedData.toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"Kair0s3"},"content":"    void run_stringWithOneSpace_throwsModuleException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"Kair0s3"},"content":"        Base64Decoder base64Decoder \u003d new Base64Decoder();","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Kair0s3"},"content":"        String encodedString \u003d \" \";","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Kair0s3"},"content":"        Data encodedData \u003d new Data(encodedString);","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Kair0s3"},"content":"        assertThrows(ModuleException.class, () -\u003e base64Decoder.run(encodedData));","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"Kair0s3"},"content":"    void run_nullByteString_throwsModuleException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"Kair0s3"},"content":"        Base64Decoder base64Decoder \u003d new Base64Decoder();","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"Kair0s3"},"content":"        String encodedString \u003d \"\\00\";","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"Kair0s3"},"content":"        Data encodedData \u003d new Data(encodedString);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"Kair0s3"},"content":"        assertThrows(ModuleException.class, () -\u003e base64Decoder.run(encodedData));","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"Kair0s3"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"rizemon":1,"Kair0s3":61}},{"path":"src/test/java/decodex/modules/base64/Base64EncoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.modules.base64;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"class Base64EncoderTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Kair0s3"},"content":"    void run_originalString_base64EncodedData() {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Kair0s3"},"content":"        Base64Encoder base64Encoder \u003d new Base64Encoder();","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Kair0s3"},"content":"        String testString \u003d \"test\";","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Kair0s3"},"content":"        String expectedString \u003d \"dGVzdA\u003d\u003d\";","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Kair0s3"},"content":"        Data originalData \u003d new Data(testString);","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Kair0s3"},"content":"        Data encodedData \u003d base64Encoder.run(originalData);","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"        assertEquals(expectedString, encodedData.toString());","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Kair0s3"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"rizemon":1,"Kair0s3":19}},{"path":"src/test/java/decodex/modules/binary/BinaryDecoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.modules.binary;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"arraysius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"arraysius"},"content":"public class BinaryDecoderTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"arraysius"},"content":"    BinaryDecoder binaryDecoder \u003d new BinaryDecoder();","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"arraysius"},"content":"    public void run_validBinaryString_asciiString() throws ModuleException {","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"arraysius"},"content":"        Data data \u003d new Data(\"01110100011001010111001101110100\");","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"arraysius"},"content":"        Data newData \u003d binaryDecoder.run(data);","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"arraysius"},"content":"        assertEquals(newData.toString(), \"test\");","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"arraysius"},"content":"    public void run_blankString_blankBinaryString() throws ModuleException {","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"arraysius"},"content":"        Data data \u003d new Data(\"\");","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"arraysius"},"content":"        Data newData \u003d binaryDecoder.run(data);","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"arraysius"},"content":"        assertEquals(newData.toString(), \"\");","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"arraysius"},"content":"    public void run_nullByteBinaryString_success() throws ModuleException {","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"arraysius"},"content":"        Data data \u003d new Data(\"00000000\");","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"arraysius"},"content":"        Data newData \u003d binaryDecoder.run(data);","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"arraysius"},"content":"        assertEquals(newData.toString(), \"\\00\");","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"arraysius"},"content":"    public void run_binaryStringWithSpaces_moduleExceptionThrown() {","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"arraysius"},"content":"        Data data \u003d new Data(\"01110100 01100101 01110011 01110100\");","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"arraysius"},"content":"        assertThrows(ModuleException.class, () -\u003e binaryDecoder.run(data));","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"arraysius"},"content":"    public void run_invalidBinaryString_moduleExceptionThrown() {","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"arraysius"},"content":"        Data data \u003d new Data(\"1110100\");","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"arraysius"},"content":"        assertThrows(ModuleException.class, () -\u003e binaryDecoder.run(data));","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"arraysius"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"arraysius":46}},{"path":"src/test/java/decodex/modules/binary/BinaryEncoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.modules.binary;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"arraysius"},"content":"public class BinaryEncoderTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"arraysius"},"content":"    BinaryEncoder binaryEncoder \u003d new BinaryEncoder();","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"arraysius"},"content":"    public void run_asciiString_binaryString() {","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"arraysius"},"content":"        Data data \u003d new Data(\"test\");","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"arraysius"},"content":"        Data newData \u003d binaryEncoder.run(data);","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"arraysius"},"content":"        assertEquals(newData.toString(), \"01110100011001010111001101110100\");","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"arraysius"},"content":"    public void run_blankString_blankBinaryString() {","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"arraysius"},"content":"        Data data \u003d new Data(\"\");","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"arraysius"},"content":"        Data newData \u003d binaryEncoder.run(data);","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"arraysius"},"content":"        assertEquals(newData.toString(), \"\");","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"arraysius"},"content":"    public void run_nullByteString_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"arraysius"},"content":"        Data data \u003d new Data(\"\\00\");","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"arraysius"},"content":"        Data newData \u003d binaryEncoder.run(data);","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"arraysius"},"content":"        assertEquals(newData.toString(), \"00000000\");","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"arraysius"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"arraysius":32}},{"path":"src/test/java/decodex/modules/hex/HexDecoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package decodex.modules.hex;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"class HexDecoderTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"    void run_validHex_expectAllAscii() throws ModuleException {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"        String inputString \u003d \"202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f40\"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"                + \"4142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768\"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"                + \"696a6b6c6d6e6f707172737475767778797a7b7c7d7e\";","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"        HexDecoder hexDecoder \u003d new HexDecoder();","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"        Data inputData \u003d new Data(inputString);","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"SeenFang"},"content":"        Data result \u003d hexDecoder.run(inputData);","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"SeenFang"},"content":"        String expectedString \u003d \" !\\\"#$%\u0026\u0027()*+,-./0123456789:;\"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"SeenFang"},"content":"                + \"\u003c\u003d\u003e?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\";","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"SeenFang"},"content":"        assertEquals(expectedString, result.toString());","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"SeenFang"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"SeenFang"},"content":"    void run_invalidHexChar_expectException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"SeenFang"},"content":"        String inputString \u003d \"AZ\";","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"SeenFang"},"content":"        HexDecoder hexDecoder \u003d new HexDecoder();","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"SeenFang"},"content":"        Data inputData \u003d new Data(inputString);","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"SeenFang"},"content":"        assertThrows(ModuleException.class, () -\u003e hexDecoder.run(inputData));","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"SeenFang"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"SeenFang"},"content":"    void run_invalidHexLength_expectException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"SeenFang"},"content":"        String inputString \u003d \"ZZZ\";","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"SeenFang"},"content":"        HexDecoder hexDecoder \u003d new HexDecoder();","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"SeenFang"},"content":"        Data inputData \u003d new Data(inputString);","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"SeenFang"},"content":"        assertThrows(ModuleException.class, () -\u003e hexDecoder.run(inputData));","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"SeenFang"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"SeenFang"},"content":"    void run_emptyHexInput_expectException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"SeenFang"},"content":"        String inputString \u003d \" \";","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"SeenFang"},"content":"        HexDecoder hexDecoder \u003d new HexDecoder();","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"SeenFang"},"content":"        Data inputData \u003d new Data(inputString);","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"SeenFang"},"content":"        assertThrows(ModuleException.class, () -\u003e hexDecoder.run(inputData));","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"SeenFang"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"SeenFang"},"content":"    void run_nullHexInput_expectException() throws ModuleException {","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"SeenFang"},"content":"        String inputString \u003d \"00\";","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"SeenFang"},"content":"        HexDecoder hexDecoder \u003d new HexDecoder();","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"SeenFang"},"content":"        Data inputData \u003d new Data(inputString);","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"SeenFang"},"content":"        Data result \u003d hexDecoder.run(inputData);","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"SeenFang"},"content":"        String expectedString \u003d \"\\00\";","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"SeenFang"},"content":"        assertEquals(expectedString, result.toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"SeenFang":66}},{"path":"src/test/java/decodex/modules/hex/HexEncoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package decodex.modules.hex;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"class HexEncoderTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"    void run_allAsciiChars_expectHexEncoding() {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"        String inputString \u003d \" !\\\"#$%\u0026\u0027()*+,-./0123456789:;\"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"                + \"\u003c\u003d\u003e?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\";","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"        HexEncoder hexEncoder \u003d new HexEncoder();","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"        Data inputData \u003d new Data(inputString);","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"        Data result \u003d hexEncoder.run(inputData);","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"        String expectedString \u003d \"202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f40\"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"                + \"4142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768\"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"SeenFang"},"content":"                + \"696a6b6c6d6e6f707172737475767778797a7b7c7d7e\";","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"SeenFang"},"content":"        assertEquals(expectedString, result.toString());","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"SeenFang":25}},{"path":"src/test/java/decodex/modules/rot/RotEncoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.modules.rot;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"class RotEncoderTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"    void run_smallPositiveOffset_rotatedData() {","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"        Data testData \u003d new Data(\"abc\");","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"        Data expectedData \u003d new Data(\"bcd\");","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"        RotEncoder rotEncoder \u003d new RotEncoder(1);","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"        Data resultData \u003d rotEncoder.run(testData);","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"        assertEquals(resultData.toString(), expectedData.toString());","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"    void run_bigPositiveOffset_rotatedAlphabets() {","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"        Data testData \u003d new Data(\"xyz\");","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"        Data expectedData \u003d new Data(\"qrs\");","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"        RotEncoder rotEncoder \u003d new RotEncoder(45);","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"        Data resultData \u003d rotEncoder.run(testData);","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"        assertEquals(resultData.toString(), expectedData.toString());","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"    void run_smallNegativeOffset_rotatedAlphabets() {","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"        Data testData \u003d new Data(\"abc\");","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"        Data expectedData \u003d new Data(\"zab\");","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"        RotEncoder rotEncoder \u003d new RotEncoder(-1);","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"        Data resultData \u003d rotEncoder.run(testData);","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"        assertEquals(resultData.toString(), expectedData.toString());","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"    void run_bigNegativeOffset_rotatedAlphabets() {","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"        Data testData \u003d new Data(\"xyz\");","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"        Data expectedData \u003d new Data(\"efg\");","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"        RotEncoder rotEncoder \u003d new RotEncoder(-45);","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"rizemon"},"content":"        Data resultData \u003d rotEncoder.run(testData);","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"rizemon"},"content":"        assertEquals(resultData.toString(), expectedData.toString());","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"rizemon"},"content":"    void run_onlyNonAlphabets_noChange() {","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"rizemon"},"content":"        Data testData \u003d new Data(\"123\u003d\u003d\");","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"rizemon"},"content":"        Data expectedData \u003d new Data(\"123\u003d\u003d\");","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"rizemon"},"content":"        RotEncoder rotEncoder \u003d new RotEncoder(1);","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"rizemon"},"content":"        Data resultData \u003d rotEncoder.run(testData);","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"rizemon"},"content":"        assertEquals(resultData.toString(), expectedData.toString());","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"rizemon"},"content":"    void run_emptyData_noChange() {","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"rizemon"},"content":"        Data testData \u003d new Data(\"\");","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"rizemon"},"content":"        Data expectedData \u003d new Data(\"\");","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"rizemon"},"content":"        RotEncoder rotEncoder \u003d new RotEncoder(1);","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"rizemon"},"content":"        Data resultData \u003d rotEncoder.run(testData);","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"rizemon"},"content":"        assertEquals(resultData.toString(), expectedData.toString());","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"rizemon"},"content":"    void run_nullBytes_noChange() {","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"rizemon"},"content":"        Data testData \u003d new Data(\"\\00\");","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"rizemon"},"content":"        Data expectedData \u003d new Data(\"\\00\");","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"rizemon"},"content":"        RotEncoder rotEncoder \u003d new RotEncoder(1);","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"rizemon"},"content":"        Data resultData \u003d rotEncoder.run(testData);","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"rizemon"},"content":"        assertEquals(resultData.toString(), expectedData.toString());","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"rizemon":86}},{"path":"src/test/java/decodex/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kair0s3"},"content":"package decodex.parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"import decodex.commands.Command;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"import decodex.commands.ExitCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"import decodex.commands.InputCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"import decodex.commands.ListCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"import decodex.commands.ResetCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"import decodex.commands.SelectCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.CommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.exception.ParserException;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"Kair0s3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"Kair0s3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"arraysius"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Kair0s3"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"Kair0s3"},"content":"class ParserTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"Kair0s3"},"content":"    Parser parser \u003d new Parser();","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"arraysius"},"content":"    public void getCommandType_stringWithNoSeparator_expectCommandTypeString() throws ParserException {","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Kair0s3"},"content":"        String testInput \u003d \"test\";","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"Kair0s3"},"content":"        String expectedOutput \u003d \"test\";","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"Kair0s3"},"content":"        String commandType \u003d parser.getCommandType(testInput);","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"Kair0s3"},"content":"        assertEquals(expectedOutput, commandType);","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"arraysius"},"content":"    public void getCommandType_stringWithOneSpaceSeparator_expectCommandTypeString() throws ParserException {","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Kair0s3"},"content":"        String testInput \u003d \"test data\";","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"Kair0s3"},"content":"        String expectedOutput \u003d \"test\";","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"Kair0s3"},"content":"        String commandType \u003d parser.getCommandType(testInput);","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"Kair0s3"},"content":"        assertEquals(expectedOutput, commandType);","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"arraysius"},"content":"    public void getUserArguments_userInputWithOneSpaceSeparator_expectOneArgumentString() throws ParserException {","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Kair0s3"},"content":"        String testInput \u003d \"test data\";","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Kair0s3"},"content":"        String expectedOutput \u003d \"data\";","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Kair0s3"},"content":"        String arguments \u003d parser.getInputString(testInput);","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Kair0s3"},"content":"        assertEquals(expectedOutput, arguments);","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"Kair0s3"},"content":"    /* The JUnit test methods below are for testing \"normal\" usage flows for the respective commands.*/","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"arraysius"},"content":"    public void parseCommand_userInputSpecifyingValidData_expectInputCommand() throws ParserException,","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"arraysius"},"content":"            CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"rizemon"},"content":"        String userInput \u003d \"input dummyData\";","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Kair0s3"},"content":"        Command command \u003d parser.parseCommand(userInput);","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"rizemon"},"content":"        assertTrue(command instanceof InputCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"arraysius"},"content":"    public void parseCommand_userInputSpecifyingExit_expectExitCommand() throws ParserException, CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"Kair0s3"},"content":"        String userInput \u003d \"exit\";","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"rizemon"},"content":"        Command command \u003d parser.parseCommand(userInput);","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"Kair0s3"},"content":"        assertTrue(command instanceof ExitCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"arraysius"},"content":"    public void parseCommand_userInputSpecifyingValidListBlank_expectListCommand() throws ParserException,","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"arraysius"},"content":"            CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"Kair0s3"},"content":"        String userInput \u003d \"list\";","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"Kair0s3"},"content":"        Command command \u003d parser.parseCommand(userInput);","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"Kair0s3"},"content":"        assertTrue(command instanceof ListCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"arraysius"},"content":"    public void parseCommand_userInputSpecifyingValidListModules_expectListCommand() throws ParserException,","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"arraysius"},"content":"            CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"arraysius"},"content":"        String userInput \u003d \"list modules\";","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"arraysius"},"content":"        Command command \u003d parser.parseCommand(userInput);","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"arraysius"},"content":"        assertTrue(command instanceof ListCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"arraysius"},"content":"    public void parseCommand_userInputSpecifyingValidListRecipes_expectListCommand() throws ParserException,","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"arraysius"},"content":"            CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"arraysius"},"content":"        String userInput \u003d \"list recipes\";","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"arraysius"},"content":"        Command command \u003d parser.parseCommand(userInput);","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"arraysius"},"content":"        assertTrue(command instanceof ListCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"arraysius"},"content":"    public void parseCommand_userInputSpecifyingValidListSpaces_expectListCommand() throws ParserException,","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"arraysius"},"content":"            CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"arraysius"},"content":"        String userInput \u003d \"list      modules     \";","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"arraysius"},"content":"        Command command \u003d parser.parseCommand(userInput);","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"arraysius"},"content":"        assertTrue(command instanceof ListCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"arraysius"},"content":"    public void parseCommand_userInputSpecifyingValidListAdditionalArguments_expectListCommand() {","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"arraysius"},"content":"        String userInput \u003d \"list modules a\";","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"arraysius"},"content":"        assertThrows(CommandException.class, () -\u003e parser.parseCommand(userInput));","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"arraysius"},"content":"    public void parseCommand_userInputSpecifyingReset_expectResetCommand() throws ParserException, CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"Kair0s3"},"content":"        String userInput \u003d \"reset\";","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"Kair0s3"},"content":"        Command command \u003d parser.parseCommand(userInput);","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"Kair0s3"},"content":"        assertTrue(command instanceof ResetCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"arraysius"},"content":"    public void parseCommand_userInputSpecifyingValidSelectModule_expectSelectCommand() throws ParserException,","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"arraysius"},"content":"            CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"arraysius"},"content":"        String userInput \u003d \"select module base64encode\";","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"Kair0s3"},"content":"        Command command \u003d parser.parseCommand(userInput);","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"Kair0s3"},"content":"        assertTrue(command instanceof SelectCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"Kair0s3"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"rizemon":3,"arraysius":45,"Kair0s3":67}},{"path":"src/test/java/decodex/parser/RecipeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import decodex.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":"import decodex.commands.recipe.RecipeDeleteCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"import decodex.commands.recipe.RecipeNewCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"import decodex.commands.recipe.RecipePopCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":"import decodex.commands.recipe.RecipePushCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"arraysius"},"content":"import decodex.commands.recipe.RecipeResetCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"import decodex.commands.recipe.RecipeSelectCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"arraysius"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"arraysius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"arraysius"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"arraysius"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"arraysius"},"content":"public class RecipeCommandParserTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"arraysius"},"content":"    RecipeCommandParser recipeCommandParser;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"arraysius"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"arraysius"},"content":"    public void setupRecipeCommandParser() {","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"arraysius"},"content":"        recipeCommandParser \u003d new RecipeCommandParser();","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"arraysius"},"content":"    public void parseCommand_validRecipeNew_expectRecipeNewCommand() throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"arraysius"},"content":"        String userInput \u003d \"recipe new testRecipe\";","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"arraysius"},"content":"        Command recipeCommand \u003d recipeCommandParser.parseCommand(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"arraysius"},"content":"        assertTrue(recipeCommand instanceof RecipeNewCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"arraysius"},"content":"    public void parseCommand_recipeNewWithoutRecipeName_expectCommandExceptionThrown() {","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"arraysius"},"content":"        String userInput \u003d \"recipe new\";","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"arraysius"},"content":"        assertThrows(CommandException.class, () -\u003e recipeCommandParser.parseCommand(userInput));","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"arraysius"},"content":"    public void parseCommand_recipeNewAdditionalArguments_expectCommandExceptionThrown() {","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"arraysius"},"content":"        String userInput \u003d \"recipe new testRecipe 1\";","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"arraysius"},"content":"        assertThrows(CommandException.class, () -\u003e recipeCommandParser.parseCommand(userInput));","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"arraysius"},"content":"    public void parseCommand_validRecipeSelect_expectRecipeSelectCommand() throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"arraysius"},"content":"        String userInput \u003d \"recipe select testRecipe\";","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"arraysius"},"content":"        Command recipeCommand \u003d recipeCommandParser.parseCommand(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"arraysius"},"content":"        assertTrue(recipeCommand instanceof RecipeSelectCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"arraysius"},"content":"    public void parseCommand_recipeSelectWithoutRecipeName_expectCommandExceptionThrown() {","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"arraysius"},"content":"        String userInput \u003d \"recipe select\";","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"arraysius"},"content":"        assertThrows(CommandException.class, () -\u003e recipeCommandParser.parseCommand(userInput));","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"arraysius"},"content":"    public void parseCommand_recipeSelectAdditionalArguments_expectCommandExceptionThrown() {","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"arraysius"},"content":"        String userInput \u003d \"recipe select testRecipe 1\";","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"arraysius"},"content":"        assertThrows(CommandException.class, () -\u003e recipeCommandParser.parseCommand(userInput));","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"arraysius"},"content":"    public void parseCommand_validRecipePush_expectRecipePushCommand() throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"arraysius"},"content":"        String userInput \u003d \"recipe push base64encode\";","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"arraysius"},"content":"        Command recipeCommand \u003d recipeCommandParser.parseCommand(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"arraysius"},"content":"        assertTrue(recipeCommand instanceof RecipePushCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"arraysius"},"content":"    public void parseCommand_validRecipePushWithParameters_expectRecipePushCommand() throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"arraysius"},"content":"        String userInput \u003d \"recipe push rotencode 13\";","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"arraysius"},"content":"        Command recipeCommand \u003d recipeCommandParser.parseCommand(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"arraysius"},"content":"        assertTrue(recipeCommand instanceof RecipePushCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"arraysius"},"content":"    public void parseCommand_recipePushWithoutModuleName_expectCommandExceptionThrown() {","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"arraysius"},"content":"        String userInput \u003d \"recipe push\";","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"arraysius"},"content":"        assertThrows(CommandException.class, () -\u003e recipeCommandParser.parseCommand(userInput));","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"arraysius"},"content":"    public void parseCommand_validRecipePop_expectRecipePopCommand() throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"arraysius"},"content":"        String userInput \u003d \"recipe pop\";","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"arraysius"},"content":"        Command recipeCommand \u003d recipeCommandParser.parseCommand(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"arraysius"},"content":"        assertTrue(recipeCommand instanceof RecipePopCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"arraysius"},"content":"    public void parseCommand_recipePopAdditionalArguments_expectCommandExceptionThrown() {","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"arraysius"},"content":"        String userInput \u003d \"recipe pop 1\";","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"arraysius"},"content":"        assertThrows(CommandException.class, () -\u003e recipeCommandParser.parseCommand(userInput));","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"arraysius"},"content":"    public void parseCommand_validRecipeReset_expectRecipeResetCommand() throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"arraysius"},"content":"        String userInput \u003d \"recipe reset\";","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"arraysius"},"content":"        Command recipeCommand \u003d recipeCommandParser.parseCommand(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"arraysius"},"content":"        assertTrue(recipeCommand instanceof RecipeResetCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"arraysius"},"content":"    public void parseCommand_recipeResetAdditionalArguments_expectCommandExceptionThrown() {","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"arraysius"},"content":"        String userInput \u003d \"recipe reset 1\";","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"arraysius"},"content":"        assertThrows(CommandException.class, () -\u003e recipeCommandParser.parseCommand(userInput));","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"arraysius"},"content":"    public void parseCommand_validRecipeDelete_expectRecipeDeleteCommand() throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"arraysius"},"content":"        String userInput \u003d \"recipe delete testRecipe\";","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"arraysius"},"content":"        Command recipeCommand \u003d recipeCommandParser.parseCommand(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"arraysius"},"content":"        assertTrue(recipeCommand instanceof RecipeDeleteCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"arraysius"},"content":"    public void parseCommand_recipeDeleteNoRecipeName_expectCommandExceptionThrown() {","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"arraysius"},"content":"        String userInput \u003d \"recipe delete\";","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"arraysius"},"content":"        assertThrows(CommandException.class, () -\u003e recipeCommandParser.parseCommand(userInput));","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"arraysius"},"content":"    public void parseCommand_recipeDeleteAdditionalArguments_expectCommandExceptionThrown() {","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"arraysius"},"content":"        String userInput \u003d \"recipe delete testRecipe 1\";","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"arraysius"},"content":"        assertThrows(CommandException.class, () -\u003e recipeCommandParser.parseCommand(userInput));","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"arraysius"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"arraysius":130}},{"path":"src/test/java/decodex/recipes/RecipeManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.recipes;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.RecipeException;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.RecipeManagerException;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"import decodex.modules.Module;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.hex.HexEncoder;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"import decodex.storage.Storage;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"// @@author rizemon","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"class RecipeManagerTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"    private RecipeManager recipeManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"    public void createNewRecipeManager() {","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"        recipeManager \u003d new RecipeManager();","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"    void addRecipe_repeatedRecipeName_expectException() throws RecipeException, RecipeManagerException, IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"        Recipe newRecipe \u003d new Recipe(\"sameRecipeName\");","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"        recipeManager.addRecipe(newRecipe);","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"        Recipe repeatedRecipe \u003d new Recipe(\"sameRecipeName\");","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"        assertThrows(RecipeManagerException.class, () -\u003e recipeManager.addRecipe(repeatedRecipe));","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"    void removeRecipe_oneRecipe_removedRecipeIsTheOneRecipe()","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"            throws RecipeException, RecipeManagerException, IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"        String testRecipeName \u003d \"testRecipeName\";","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"        Recipe testRecipe \u003d new Recipe(testRecipeName);","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"        recipeManager.addRecipe(testRecipe);","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"        Recipe removedRecipe \u003d recipeManager.removeRecipe(testRecipeName);","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"        assertEquals(removedRecipe.getName(), testRecipeName);","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"    void removeRecipe_noRecipe_expectException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"        String testRecipeName \u003d \"testRecipeName\";","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"        assertThrows(RecipeManagerException.class, () -\u003e recipeManager.removeRecipe(testRecipeName));","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"rizemon"},"content":"    void removeRecipe_recipeIsEditedRecipe_expectException()","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"rizemon"},"content":"            throws RecipeException, RecipeManagerException, IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"rizemon"},"content":"        String testRecipeName \u003d \"testRecipeName\";","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"rizemon"},"content":"        Recipe testRecipe \u003d new Recipe(testRecipeName);","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"rizemon"},"content":"        recipeManager.addRecipe(testRecipe);","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"rizemon"},"content":"        recipeManager.selectRecipeForEditing(testRecipeName);","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"rizemon"},"content":"        recipeManager.removeRecipe(testRecipeName);","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"rizemon"},"content":"        assertThrows(RecipeManagerException.class, () -\u003e recipeManager.getEditingRecipe());","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"rizemon"},"content":"    void getRecipe_oneRecipe_managerContainOneRecipe() throws RecipeException, RecipeManagerException, IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"rizemon"},"content":"        String testRecipeName \u003d \"testRecipeName\";","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"rizemon"},"content":"        Recipe testRecipe \u003d new Recipe(testRecipeName);","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"rizemon"},"content":"        recipeManager.addRecipe(testRecipe);","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"rizemon"},"content":"        Recipe retrievedRecipe \u003d recipeManager.getRecipe(testRecipeName);","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"rizemon"},"content":"        assertEquals(testRecipe.getName(), retrievedRecipe.getName());","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"rizemon"},"content":"    void getRecipe_noRecipe_expectException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"rizemon"},"content":"        String testRecipeName \u003d \"testRecipeName\";","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"rizemon"},"content":"        assertThrows(RecipeManagerException.class, () -\u003e recipeManager.getRecipe(testRecipeName));","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"rizemon"},"content":"    void getEditedRecipe_oneEditedRecipe_editedRecipe() throws RecipeException, RecipeManagerException, IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"rizemon"},"content":"        String testRecipeName \u003d \"testRecipeName\";","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"rizemon"},"content":"        Recipe testRecipe \u003d new Recipe(testRecipeName);","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"rizemon"},"content":"        recipeManager.addRecipe(testRecipe);","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"rizemon"},"content":"        recipeManager.selectRecipeForEditing(testRecipeName);","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"rizemon"},"content":"        assertEquals(recipeManager.getEditingRecipe().getName(), testRecipeName);","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"rizemon"},"content":"    void getEditedRecipe_noEditedRecipe_expectException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"rizemon"},"content":"        String testRecipeName \u003d \"testRecipeName\";","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"rizemon"},"content":"        assertThrows(RecipeManagerException.class, () -\u003e recipeManager.selectRecipeForEditing(testRecipeName));","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"rizemon"},"content":"    void selectRecipe_oneEditedRecipe_editedRecipe() throws RecipeException, RecipeManagerException, IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"rizemon"},"content":"        String testRecipeName \u003d \"testRecipeName\";","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"rizemon"},"content":"        Recipe testRecipe \u003d new Recipe(testRecipeName);","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"rizemon"},"content":"        recipeManager.addRecipe(testRecipe);","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"rizemon"},"content":"        recipeManager.selectRecipeForEditing(testRecipeName);","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"rizemon"},"content":"        assertEquals(recipeManager.getEditingRecipe().getName(), testRecipeName);","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"rizemon"},"content":"    void selectRecipe_nonExistentRecipeName_expectException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"rizemon"},"content":"        String testRecipeName \u003d \"testRecipeName\";","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"rizemon"},"content":"        assertThrows(RecipeManagerException.class, () -\u003e recipeManager.selectRecipeForEditing(testRecipeName));","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"rizemon"},"content":"    void pushModuleIntoEditedRecipe_oneEditedRecipe_oneModuele()","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"rizemon"},"content":"            throws RecipeException, RecipeManagerException, IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"rizemon"},"content":"        String testRecipeName \u003d \"testRecipeName\";","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"rizemon"},"content":"        Recipe testRecipe \u003d new Recipe(testRecipeName);","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"rizemon"},"content":"        recipeManager.addRecipe(testRecipe);","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"rizemon"},"content":"        recipeManager.selectRecipeForEditing(testRecipeName);","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"rizemon"},"content":"        HexEncoder insertedModule \u003d new HexEncoder();","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"rizemon"},"content":"        recipeManager.pushModuleIntoEditedRecipe(insertedModule);","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"rizemon"},"content":"        assertEquals(recipeManager.getEditingRecipe().getModuleList().size(), 1);","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"rizemon"},"content":"    void pushModuleIntoEditedRecipe_noEditedRecipe_expectException()","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"rizemon"},"content":"            throws RecipeException, RecipeManagerException, IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"rizemon"},"content":"        String testRecipeName \u003d \"testRecipeName\";","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"rizemon"},"content":"        Recipe testRecipe \u003d new Recipe(testRecipeName);","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"rizemon"},"content":"        recipeManager.addRecipe(testRecipe);","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"rizemon"},"content":"        Module insertedModule \u003d new HexEncoder();","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"rizemon"},"content":"        assertThrows(RecipeManagerException.class, () -\u003e recipeManager.pushModuleIntoEditedRecipe(insertedModule));","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"rizemon"},"content":"    void popModuleFromEditedRecipe_oneEditedRecipe_poppedModule()","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"rizemon"},"content":"            throws RecipeException, RecipeManagerException, IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"rizemon"},"content":"        String testRecipeName \u003d \"testRecipeName\";","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"rizemon"},"content":"        Recipe testRecipe \u003d new Recipe(testRecipeName);","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"rizemon"},"content":"        Module insertedModule \u003d new HexEncoder();","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"rizemon"},"content":"        testRecipe.push(insertedModule);","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"rizemon"},"content":"        recipeManager.addRecipe(testRecipe);","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"rizemon"},"content":"        recipeManager.selectRecipeForEditing(testRecipeName);","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"rizemon"},"content":"        Module poppedModule \u003d recipeManager.popModuleFromEditedRecipe();","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"rizemon"},"content":"        assertEquals(insertedModule.getName(), poppedModule.getName());","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"rizemon"},"content":"    void popModuleFromEditedRecipe_noEditedRecipe_expectException()","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"rizemon"},"content":"            throws RecipeException, RecipeManagerException, IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"rizemon"},"content":"        String testRecipeName \u003d \"testRecipeName\";","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"rizemon"},"content":"        Recipe testRecipe \u003d new Recipe(testRecipeName);","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"rizemon"},"content":"        Module insertedModule \u003d new HexEncoder();","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"rizemon"},"content":"        testRecipe.push(insertedModule);","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"rizemon"},"content":"        recipeManager.addRecipe(testRecipe);","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":162,"author":{"gitId":"rizemon"},"content":"        assertThrows(RecipeManagerException.class, () -\u003e recipeManager.popModuleFromEditedRecipe());","lastModifiedDate":"2021-10-20"},{"lineNumber":163,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":164,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":165,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":166,"author":{"gitId":"rizemon"},"content":"    void resetEditedRecipe_oneEditedRecipe_noError() throws RecipeException, RecipeManagerException, IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"rizemon"},"content":"        String testRecipeName \u003d \"testRecipeName\";","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"rizemon"},"content":"        Recipe testRecipe \u003d new Recipe(testRecipeName);","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"rizemon"},"content":"        recipeManager.addRecipe(testRecipe);","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"rizemon"},"content":"        recipeManager.selectRecipeForEditing(testRecipeName);","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"rizemon"},"content":"        recipeManager.resetEditedRecipe();","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"rizemon"},"content":"        assertEquals(recipeManager.getEditingRecipe().getModuleList().size(), 0);","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"rizemon"},"content":"    void resetEditedRecipe_noEditedRecipe_expectException()","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"rizemon"},"content":"            throws RecipeException, RecipeManagerException, IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"rizemon"},"content":"        String testRecipeName \u003d \"testRecipeName\";","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"rizemon"},"content":"        Recipe testRecipe \u003d new Recipe(testRecipeName);","lastModifiedDate":"2021-10-20"},{"lineNumber":182,"author":{"gitId":"rizemon"},"content":"        recipeManager.addRecipe(testRecipe);","lastModifiedDate":"2021-10-20"},{"lineNumber":183,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":184,"author":{"gitId":"rizemon"},"content":"        assertThrows(RecipeManagerException.class, () -\u003e recipeManager.resetEditedRecipe());","lastModifiedDate":"2021-10-20"},{"lineNumber":185,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":186,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"rizemon":180,"SeenFang":6}},{"path":"src/test/java/decodex/recipes/RecipeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package decodex.recipes;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.RecipeException;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.base64.Base64Decoder;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.base64.Base64Encoder;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.binary.BinaryEncoder;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.hex.HexDecoder;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.hex.HexEncoder;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.Module;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.rot.RotEncoder;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"SeenFang"},"content":"class RecipeTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"SeenFang"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"    void recipe_allowedCharactersInName_recipeCreated() throws RecipeException {","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"        String validRecipeName \u003d \"test_Recipe\";","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"        Recipe testRecipe \u003d new Recipe(validRecipeName);","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"        assertNotNull(testRecipe);","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"    void recipe_emptyRecipeName_recipeCreated() {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"        String emptyRecipeName \u003d \"\";","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"        assertThrows(RecipeException.class, () -\u003e new Recipe(emptyRecipeName));","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"    void recipe_illegalCharactersInName_recipeCreated() {","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"        String invalidRecipeName \u003d \"**bad-name?!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"        assertThrows(RecipeException.class, () -\u003e new Recipe(invalidRecipeName));","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"    void push_singleModule_recipeContainsOneModule() throws RecipeException {","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"SeenFang"},"content":"        Recipe recipe \u003d new Recipe(\"testRecipe\");","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"SeenFang"},"content":"        Module module \u003d new HexEncoder();","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"SeenFang"},"content":"        recipe.push(module);","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"SeenFang"},"content":"        assertEquals(recipe.getModuleList().size(), 1);","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"SeenFang"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"SeenFang"},"content":"    void pop_singleModule_latestModule() throws RecipeException {","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"SeenFang"},"content":"        Recipe recipe \u003d new Recipe(\"testRecipe\");","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"SeenFang"},"content":"        Module module \u003d new HexDecoder();","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"SeenFang"},"content":"        recipe.push(module);","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"SeenFang"},"content":"        Module poppedModule \u003d recipe.pop();","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"SeenFang"},"content":"        assertEquals(module, poppedModule);","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"SeenFang"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"rizemon"},"content":"    void pop_emptyRecipe_expectException() throws RecipeException {","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"SeenFang"},"content":"        Recipe recipe \u003d new Recipe(\"testRecipe\");","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"SeenFang"},"content":"        assertThrows(RecipeException.class, () -\u003e recipe.pop());","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"SeenFang"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"rizemon"},"content":"    void reset_emptyModuleList() throws RecipeException {","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"SeenFang"},"content":"        Recipe recipe \u003d new Recipe(\"testRecipe\");","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"SeenFang"},"content":"        recipe.push(new HexEncoder());","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"SeenFang"},"content":"        recipe.push(new HexDecoder());","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"SeenFang"},"content":"        recipe.push(new Base64Encoder());","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"SeenFang"},"content":"        recipe.push(new Base64Decoder());","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"SeenFang"},"content":"        recipe.reset();","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"SeenFang"},"content":"        assertTrue(recipe.getModuleList().isEmpty());","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"SeenFang"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"rizemon"},"content":"    void run_chainOfModules_encodedOutput() throws RecipeException, ModuleException {","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"SeenFang"},"content":"        Recipe recipe \u003d new Recipe(\"rainbowTest\");","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"SeenFang"},"content":"        recipe.push(new HexEncoder());","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"SeenFang"},"content":"        recipe.push(new Base64Encoder());","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"SeenFang"},"content":"        recipe.push(new RotEncoder(5));","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"SeenFang"},"content":"        recipe.push(new BinaryEncoder());","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"SeenFang"},"content":"        Data inputData \u003d new Data(\"egg\");","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"SeenFang"},"content":"        Data bakedData \u003d recipe.run(inputData);","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"SeenFang"},"content":"        String result \u003d bakedData.toString();","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"SeenFang"},"content":"        String expectedOutput \u003d \"0101001101101111010110100011001001010011011001010100010000110011\";","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"SeenFang"},"content":"        assertEquals(result, expectedOutput);","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"SeenFang"},"content":"    @Test()","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"rizemon"},"content":"    void run_chainOfModulesFailHalfway_expectException() throws RecipeException {","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"SeenFang"},"content":"        Recipe recipe \u003d new Recipe(\"rainbowTest\");","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"SeenFang"},"content":"        recipe.push(new HexEncoder());","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"SeenFang"},"content":"        recipe.push(new Base64Encoder());","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"SeenFang"},"content":"        recipe.push(new RotEncoder(5));","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"SeenFang"},"content":"        recipe.push(new HexDecoder());","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"SeenFang"},"content":"        recipe.push(new BinaryEncoder());","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"SeenFang"},"content":"        Data inputData \u003d new Data(\"egg\");","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"SeenFang"},"content":"        assertThrows(ModuleException.class, () -\u003e recipe.run(inputData));","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"rizemon":26,"SeenFang":88}}]
