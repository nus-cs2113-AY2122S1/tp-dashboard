[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"    mainClassName \u003d \"decodex.Decodex\"","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"    archiveBaseName \u003d \"decodex\"","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rizemon":2,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"![](https://avatars.githubusercontent.com/u/26685970?v\u003d4) | Tan Jia Le | [Github](https://github.com/rizemon) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"![](https://avatars.githubusercontent.com/u/16810847?v\u003d4) | Aloysius Lee | [Github](https://github.com/arraysius/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"![](https://media.discordapp.net/attachments/285692337357586432/892962858546114560/photo_2021-05-07_15-04-25.jpg?text\u003dBreadDog) | Sean Phang | [Github](https://github.com/SeenFang) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Sim Tian Boon | [Github](https://github.com/Kair0s3/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"rizemon":2,"SeenFang":1,"Kair0s3":1,"-":4}},{"path":"src/main/java/decodex/Decodex.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import decodex.commands.Command;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"import decodex.commands.ExitCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"import decodex.parser.Parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.exception.ParserException;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"public class Decodex {","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"Kair0s3"},"content":"     * Necessary objects to be initialized for Decodex to work properly.","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"    private static DataManager dataManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Kair0s3"},"content":"    private static ModuleManager moduleManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Kair0s3"},"content":"    private static Parser parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"Kair0s3"},"content":"    private static Scanner in;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Kair0s3"},"content":"    private static Ui ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"Kair0s3"},"content":"     * Logo to be changed - possibly to a welcome message instead for Decodex.","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"Kair0s3"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"Kair0s3"},"content":"     * Initializes the necessary Objects for Decodex.","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"Kair0s3"},"content":"    public static void initDecodex() {","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"Kair0s3"},"content":"        dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"Kair0s3"},"content":"        moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"Kair0s3"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"Kair0s3"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Kair0s3"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"     * Decodex entry-point for the java.decodex.Decodex application.","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"Kair0s3"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"Kair0s3"},"content":"        printGreeting();","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Kair0s3"},"content":"        initDecodex();","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"SeenFang"},"content":"        Command command \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"SeenFang"},"content":"        do {","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"Kair0s3"},"content":"            printPromptHeader();","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"Kair0s3"},"content":"            String userInput \u003d in.nextLine();","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"Kair0s3"},"content":"            try {","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"Kair0s3"},"content":"                command \u003d parser.parseCommand(userInput, dataManager, moduleManager, ui);","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"Kair0s3"},"content":"            } catch (ParserException err) {","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"Kair0s3"},"content":"                printErrorMessage(err.getMessage());","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"SeenFang"},"content":"                continue;","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"Kair0s3"},"content":"            }","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"SeenFang"},"content":"            command.run();","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"SeenFang"},"content":"        } while (!(command instanceof ExitCommand));","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"SeenFang"},"content":"        System.exit(0);","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"Kair0s3"},"content":"     * Prints the greeting message.","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"Kair0s3"},"content":"    public static void printGreeting() {","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"Kair0s3"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"Kair0s3"},"content":"     * Prints the prompt header.","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"Kair0s3"},"content":"    public static void printPromptHeader() {","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"Kair0s3"},"content":"        System.out.print(\"Decodex \u003e \");","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"Kair0s3"},"content":"     * Prints the handled error messages.","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"Kair0s3"},"content":"     * @param errorMessage The respective error message.","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"Kair0s3"},"content":"    public static void printErrorMessage(String errorMessage) {","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"Kair0s3"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"rizemon":3,"SeenFang":13,"Kair0s3":64,"-":12}},{"path":"src/main/java/decodex/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":" * Command serves as a foundation for other commands to be built upon.","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"    protected DataManager dataManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"    protected ModuleManager moduleManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"    protected Ui ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"    public Command(DataManager dataManager, ModuleManager moduleManager, Ui ui) {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"        this.dataManager \u003d dataManager;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"        this.moduleManager \u003d moduleManager;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"SeenFang"},"content":"    public abstract void run();","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"rizemon":3,"SeenFang":21}},{"path":"src/main/java/decodex/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"    public ExitCommand(DataManager dataManager, ModuleManager moduleManager, Ui ui) {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"        super(dataManager, moduleManager, ui);","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"    public void run() {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"        System.out.print(\"Goodbye!\");","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"SeenFang":19}},{"path":"src/main/java/decodex/data/Data.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.data;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":" * The Data class manages the data that is to be encoded or decoded.","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"public class Data {","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"    private byte[] rawBytes;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"    public Data(byte[] rawBytes) {","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"        this.rawBytes \u003d rawBytes;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"    public Data(String data) {","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"        rawBytes \u003d data.getBytes();","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"    public byte[] getRawBytes() {","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"        return rawBytes;","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"    public String toString() {","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"        return new String(rawBytes);","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"rizemon":26}},{"path":"src/main/java/decodex/data/DataManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.data;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.DataManagerException;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":" * The DataManager class manages the current state of the data.","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"public class DataManager {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"    /* Data provided by the user */","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"    private Data originalData;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"    /* Data to perform the encoding/decoding operations on */","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"    private Data currentData;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"    public DataManager() {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"        originalData \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"        currentData \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"    public Data getOriginalData() throws DataManagerException {","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"        if (originalData \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"            throw new DataManagerException(\"No data found\");","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"        return originalData;","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"    public Data getCurrentData() throws DataManagerException {","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"        if (currentData \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"            throw new DataManagerException(\"No data found\");","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"        return currentData;","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"    public void setOriginalData(Data originalData) {","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"        this.originalData \u003d originalData;","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"        resetToOriginalData();","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"    public void setCurrentData(Data currentData) throws DataManagerException {","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"        if (originalData \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"            throw new DataManagerException(\"No data found\");","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"        this.currentData \u003d currentData;","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"     * Undo all modifications done to the data.","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"rizemon"},"content":"    public void resetToOriginalData() {","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"rizemon"},"content":"        currentData \u003d originalData;","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"rizemon":53}},{"path":"src/main/java/decodex/data/exception/DataManagerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.data.exception;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":" * This exception is raised when an error during access to the DataManager occurs.","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"public class DataManagerException extends Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"    public DataManagerException(String message) {","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"        super(message);","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"rizemon":11}},{"path":"src/main/java/decodex/data/exception/ParserException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kair0s3"},"content":"package decodex.data.exception;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"public class ParserException extends Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"    public static final String MISSING_COMMAND_ARGS_MESSAGE \u003d \"Your command arguments is empty.\"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"            + \" Please try again after tone...BEEP\";","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"    public static final String MISSING_COMMAND_TYPE_MESSAGE \u003d \"Command cannot be empty!!\";","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":"     * This error message is dedicated to users intending to find bugs in our program.","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"Kair0s3"},"content":"    public static final String WEIRD_COMMAND_TYPE_MESSAGE \u003d \"In what universe did you think that would break us.\"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Kair0s3"},"content":"            + \" Please try again and use the valid commands, thanks.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Kair0s3"},"content":"    public ParserException(String message) {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Kair0s3"},"content":"        super(message);","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Kair0s3":18}},{"path":"src/main/java/decodex/data/exception/UnknownModuleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.data.exception;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":" * UnknownModuleException is thrown when an unknown module name is provided.","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"public class UnknownModuleException extends Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"arraysius"},"content":"    public static final String EXCEPTION_MESSAGE \u003d \"Unknown module name\";","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"    private final String unknownModuleName;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":"    public UnknownModuleException(String unknownModuleName) {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"arraysius"},"content":"        super(EXCEPTION_MESSAGE);","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"arraysius"},"content":"        this.unknownModuleName \u003d unknownModuleName;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"arraysius"},"content":"    public String getUnknownModuleName() {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"arraysius"},"content":"        return unknownModuleName;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"arraysius"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"arraysius":19}},{"path":"src/main/java/decodex/modules/BaseModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.modules;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":" * BaseModule serves as a foundation for other modules to be built upon.","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"arraysius"},"content":"public abstract class BaseModule {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"arraysius"},"content":"    protected String name;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":"    protected String description;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"arraysius"},"content":"    public BaseModule(String name, String description) {","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"arraysius"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"arraysius"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"arraysius"},"content":"    public String getName() {","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"arraysius"},"content":"        return name;","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"arraysius"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"arraysius"},"content":"        return description;","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"arraysius"},"content":"     * Performs data processing on the provided Data object. Abstract method to be implemented by other modules.","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"arraysius"},"content":"     * @return Data object containing new processed data.","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"arraysius"},"content":"    public abstract Data run(Data data);","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"rizemon":4,"arraysius":28}},{"path":"src/main/java/decodex/modules/ModuleManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.modules;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.UnknownModuleException;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":"import decodex.modules.base64.Base64Decoder;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"import decodex.modules.base64.Base64Encoder;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"import decodex.modules.hex.HexDecoder;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":"import decodex.modules.hex.HexEncoder;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"arraysius"},"content":" * ModuleManager maintains the list of available modules and returns selected modules.","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"arraysius"},"content":"public class ModuleManager {","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"arraysius"},"content":"     * Array of available modules.","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"arraysius"},"content":"    private final BaseModule[] modules \u003d {new Base64Encoder(), new Base64Decoder(), new HexEncoder(), new HexDecoder()};","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"arraysius"},"content":"    public ModuleManager() {","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"arraysius"},"content":"    public BaseModule[] getModules() {","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"arraysius"},"content":"        return modules;","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"arraysius"},"content":"     * Select module from a provided module name.","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"arraysius"},"content":"     * @param moduleName Name of selected module.","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"arraysius"},"content":"     * @return Selected module.","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"arraysius"},"content":"     * @throws UnknownModuleException Not a module name of an available module.","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"arraysius"},"content":"    public BaseModule selectModule(String moduleName) throws UnknownModuleException {","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"arraysius"},"content":"        for (BaseModule module : modules) {","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"arraysius"},"content":"            if (module.getName().equals(moduleName)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"arraysius"},"content":"                return module;","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"arraysius"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"arraysius"},"content":"        throw new UnknownModuleException(moduleName);","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"arraysius"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"arraysius":42}},{"path":"src/main/java/decodex/modules/base64/Base64Decoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.modules.base64;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import decodex.modules.BaseModule;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"import java.util.Base64;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":" * Base64Encoder serves to carry out the Base64 decoding operations.","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Kair0s3"},"content":"public class Base64Decoder extends BaseModule {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Kair0s3"},"content":"    private final Base64.Decoder base64Decoder;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Kair0s3"},"content":"    public static final String MODULE_NAME \u003d \"base64decode\";","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Kair0s3"},"content":"    public static final String MODULE_DESCRIPTION \u003d \"Decodes the data using Base64 format.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"    public Base64Decoder() {","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Kair0s3"},"content":"        super(MODULE_NAME, MODULE_DESCRIPTION);","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Kair0s3"},"content":"        base64Decoder \u003d Base64.getDecoder();","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Kair0s3"},"content":"     * Performs Base64 Decoding on the provided Data object.","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Kair0s3"},"content":"     * @param data The Data object of the encoded data.","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Kair0s3"},"content":"     * @return The Data object of the Base64-decoded data.","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Kair0s3"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Kair0s3"},"content":"    public Data run(Data data) {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"Kair0s3"},"content":"        Data decodedData;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Kair0s3"},"content":"        byte[] originalBytes \u003d data.getRawBytes();","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Kair0s3"},"content":"        byte[] base64DecodedBytes \u003d base64Decoder.decode(originalBytes);","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Kair0s3"},"content":"        decodedData \u003d new Data(base64DecodedBytes);","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Kair0s3"},"content":"        return decodedData;","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"Kair0s3"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"rizemon":2,"Kair0s3":35}},{"path":"src/main/java/decodex/modules/base64/Base64Encoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.modules.base64;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import decodex.modules.BaseModule;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"import java.util.Base64;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":" * Base64Encoder serves to carry out the Base64 encoding operations.","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Kair0s3"},"content":"public class Base64Encoder extends BaseModule {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Kair0s3"},"content":"    private final Base64.Encoder base64Encoder;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Kair0s3"},"content":"    public static final String MODULE_NAME \u003d \"base64encode\";","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Kair0s3"},"content":"    public static final String MODULE_DESCRIPTION \u003d \"Base64-encodes the data\";","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"    public Base64Encoder() {","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Kair0s3"},"content":"        super(MODULE_NAME, MODULE_DESCRIPTION);","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Kair0s3"},"content":"        base64Encoder \u003d Base64.getEncoder();","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Kair0s3"},"content":"     * Performs Base64 Encoding on the provided Data object.","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Kair0s3"},"content":"     * @param data The Data object of the original/previous data.","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Kair0s3"},"content":"     * @return The Data object of the Base64-encoded data.","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Kair0s3"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Kair0s3"},"content":"    public Data run(Data data) {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"Kair0s3"},"content":"        Data encodedData;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Kair0s3"},"content":"        byte[] originalBytes \u003d data.getRawBytes();","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Kair0s3"},"content":"        byte[] base64EncodedBytes \u003d base64Encoder.encode(originalBytes);","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Kair0s3"},"content":"        encodedData \u003d new Data(base64EncodedBytes);","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Kair0s3"},"content":"        return encodedData;","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"Kair0s3"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"rizemon":2,"Kair0s3":35}},{"path":"src/main/java/decodex/modules/hex/HexDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package decodex.modules.hex;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.BaseModule;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":" * The HexDecoder class converts a hexadecimal string back into its raw value.","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"public class HexDecoder extends BaseModule {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"    public static final String MODULE_NAME \u003d \"hexdecode\";","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"    public static final String MODULE_DESCRIPTION \u003d \"Converts a hexadecimal string back into its raw value\";","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"    public static final int HEXADECIMAL_RADIX \u003d 16;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"    public static final String REGEX_SPLIT_EVERY_2_CHARS \u003d \"(?\u003c\u003d\\\\G..)\";","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"    public HexDecoder() {","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"SeenFang"},"content":"        super(MODULE_NAME, MODULE_DESCRIPTION);","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"SeenFang"},"content":"     * Decodes the given hexadecimal string back into its raw value.","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"SeenFang"},"content":"     * @param data Data object to be decoded.","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"SeenFang"},"content":"     * @return new Data object representing the decoded input.","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"SeenFang"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"SeenFang"},"content":"    public Data run(Data data) {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"SeenFang"},"content":"        String inputString \u003d data.toString().replace(\" \", \"\");","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"SeenFang"},"content":"        String decodedString \u003d Arrays","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"SeenFang"},"content":"                .stream(inputString.split(REGEX_SPLIT_EVERY_2_CHARS))","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"SeenFang"},"content":"                .map(s -\u003e Character.toString((char) Integer.parseInt(s, HEXADECIMAL_RADIX)))","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"SeenFang"},"content":"                .collect(Collectors.joining());","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"SeenFang"},"content":"        return new Data(decodedString);","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"SeenFang":40}},{"path":"src/main/java/decodex/modules/hex/HexEncoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package decodex.modules.hex;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.BaseModule;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":" * The HexEncoder class converts the input string to hexadecimal bytes.","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"public class HexEncoder extends BaseModule {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"    public static final String MODULE_NAME \u003d \"hexencode\";","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"    public static final String MODULE_DESCRIPTION \u003d \"Converts the input string to hexadecimal bytes\";","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"    public HexEncoder() {","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"        super(MODULE_NAME, MODULE_DESCRIPTION);","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"SeenFang"},"content":"     * Encodes the given Data object to Hexadecimal.","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"SeenFang"},"content":"     * @param data Data object to be encoded.","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"SeenFang"},"content":"     * @return new Data object representing the encoded input.","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"SeenFang"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"SeenFang"},"content":"    public Data run(Data data) {","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"SeenFang"},"content":"        StringBuilder encodedStringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"SeenFang"},"content":"        for (byte b : data.getRawBytes()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"SeenFang"},"content":"            encodedStringBuilder.append(String.format(\"%02x\", b));","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"SeenFang"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"SeenFang"},"content":"        String encodedString \u003d encodedStringBuilder.toString().trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"SeenFang"},"content":"        return new Data(encodedString);","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"SeenFang":36}},{"path":"src/main/java/decodex/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.parser;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"import decodex.commands.Command;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"import decodex.commands.ExitCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.exception.ParserException;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"Kair0s3"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"Kair0s3"},"content":" * Parses and validates the user input.","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"Kair0s3"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"public class Parser {","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"     * Specifies the index of the tokens where command can be found.","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Kair0s3"},"content":"    private static final int COMMAND_INDEX \u003d 0;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Kair0s3"},"content":"     * Specifies the starting index where the arguments can be found.","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Kair0s3"},"content":"    private static final int STARTING_ARGUMENTS_INDEX \u003d 1;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Kair0s3"},"content":"     * Specifies the valid length of the tokens and used to check validity of tokens.","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Kair0s3"},"content":"    private static final int VALID_TOKENS_LENGTH_FOR_COMMAND \u003d 1;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"Kair0s3"},"content":"    private static final int VALID_TOKENS_LENGTH_FOR_ARGUMENTS \u003d 2;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"Kair0s3"},"content":"     * Returns the type of command that user has entered.","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"Kair0s3"},"content":"     * @param userInput The input specified by the user.","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"Kair0s3"},"content":"     * @return The type of command.","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"Kair0s3"},"content":"    public String getCommandType(String userInput) throws ParserException {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"Kair0s3"},"content":"        userInput \u003d userInput.strip();","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"Kair0s3"},"content":"        if (userInput.isEmpty()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Kair0s3"},"content":"            throw new ParserException(ParserException.MISSING_COMMAND_TYPE_MESSAGE);","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"Kair0s3"},"content":"        String[] tokens \u003d userInput.split(\" \");","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Kair0s3"},"content":"        boolean isInvalidTokensLength \u003d tokens.length \u003c VALID_TOKENS_LENGTH_FOR_COMMAND;","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"Kair0s3"},"content":"        if (isInvalidTokensLength) {","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Kair0s3"},"content":"            throw new ParserException(ParserException.WEIRD_COMMAND_TYPE_MESSAGE);","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Kair0s3"},"content":"        return tokens[COMMAND_INDEX];","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"Kair0s3"},"content":"     * Returns the Argument portion of the user input.","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"Kair0s3"},"content":"     * @param userInput The input specified by the user.","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"Kair0s3"},"content":"     * @return The argument portion of the user input.","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"Kair0s3"},"content":"    public String[] getUserArguments(String userInput) throws ParserException {","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"Kair0s3"},"content":"        String[] tokens \u003d userInput.split(\" \");","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"Kair0s3"},"content":"        if (tokens.length \u003c VALID_TOKENS_LENGTH_FOR_ARGUMENTS) {","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"Kair0s3"},"content":"            throw new ParserException(ParserException.MISSING_COMMAND_ARGS_MESSAGE);","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"Kair0s3"},"content":"        return Arrays.copyOfRange(tokens, STARTING_ARGUMENTS_INDEX, tokens.length);","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"Kair0s3"},"content":"     * Parses the user input provided by user and returns its respective command.","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"Kair0s3"},"content":"     * Returns a null object if the command is invalid.","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"Kair0s3"},"content":"     * @param userInput     The user input specified by the user.","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"Kair0s3"},"content":"     * @param dataManager   The DataManager object","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"Kair0s3"},"content":"     * @param moduleManager The ModuleManager object","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"Kair0s3"},"content":"     * @param ui            The Ui object","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"Kair0s3"},"content":"     * @return The respective Command object.","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"Kair0s3"},"content":"    public Command parseCommand(String userInput, DataManager dataManager, ModuleManager moduleManager, Ui ui)","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"Kair0s3"},"content":"            throws ParserException {","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"Kair0s3"},"content":"        Command command;","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"Kair0s3"},"content":"        String commandType \u003d getCommandType(userInput);","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"Kair0s3"},"content":"        switch (commandType) {","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"Kair0s3"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"Kair0s3"},"content":"            command \u003d new ExitCommand(dataManager, moduleManager, ui);","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"Kair0s3"},"content":"            break;","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"Kair0s3"},"content":"        default:","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"Kair0s3"},"content":"            throw new ParserException(userInput + \" !To be replaced with invalid command message!\");","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"Kair0s3"},"content":"        return command;","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"rizemon":5,"Kair0s3":90}},{"path":"src/main/java/decodex/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.storage;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"public class Storage {","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"rizemon":5}},{"path":"src/main/java/decodex/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"public class Ui {","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"rizemon":5}},{"path":"src/test/java/decodex/DecodexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"class DecodexTest {","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"rizemon":3,"-":10}},{"path":"src/test/java/decodex/data/DataManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.data;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.DataManagerException;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"class DataManagerTest {","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"    public void getOriginalData_noData_expectException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"        DataManager testManager \u003d new DataManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"        assertThrows(DataManagerException.class, () -\u003e testManager.getOriginalData());","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"    public void getCurrentData_noData_expectException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"        DataManager testManager \u003d new DataManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"        assertThrows(DataManagerException.class, () -\u003e testManager.getCurrentData());","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"    public void getCurrentData_withOriginalData_originalData() throws DataManagerException {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"        DataManager testManager \u003d new DataManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"        Data originalData \u003d new Data(\"hi\");","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"        testManager.setOriginalData(originalData);","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"        assertTrue(Arrays.equals(testManager.getCurrentData().getRawBytes(), originalData.getRawBytes()));","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"    public void setOriginalData_withOriginalData_originalData() throws DataManagerException {","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"        DataManager testManager \u003d new DataManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"        Data originalData \u003d new Data(\"hi\");","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"        testManager.setOriginalData(originalData);","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"        assertTrue(Arrays.equals(testManager.getOriginalData().getRawBytes(), originalData.getRawBytes()));","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"    public void setCurrentData_noData_expectException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"        DataManager testManager \u003d new DataManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"        Data newData \u003d new Data(\"bye\");","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"        assertThrows(DataManagerException.class, () -\u003e testManager.setCurrentData(newData));","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"rizemon"},"content":"    public void setCurrentData_newData_newData() throws DataManagerException {","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"rizemon"},"content":"        DataManager testManager \u003d new DataManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"rizemon"},"content":"        Data originalData \u003d new Data(\"hi\");","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"rizemon"},"content":"        testManager.setOriginalData(originalData);","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"rizemon"},"content":"        Data newData \u003d new Data(\"bye\");","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"rizemon"},"content":"        testManager.setCurrentData(newData);","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"rizemon"},"content":"        assertTrue(Arrays.equals(testManager.getCurrentData().getRawBytes(), newData.getRawBytes()));","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"rizemon"},"content":"    public void resetToOriginalData_noUpdates_originalData() throws DataManagerException {","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"rizemon"},"content":"        DataManager testManager \u003d new DataManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"rizemon"},"content":"        Data originalData \u003d new Data(\"hi\");","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"rizemon"},"content":"        testManager.setOriginalData(originalData);","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"rizemon"},"content":"        testManager.resetToOriginalData();","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"rizemon"},"content":"        assertTrue(Arrays.equals(testManager.getCurrentData().getRawBytes(), originalData.getRawBytes()));","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"rizemon"},"content":"    public void resetToOriginalData_newData_originalData() throws DataManagerException {","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"rizemon"},"content":"        DataManager testManager \u003d new DataManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"rizemon"},"content":"        Data originalData \u003d new Data(\"hi\");","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"rizemon"},"content":"        testManager.setOriginalData(originalData);","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"rizemon"},"content":"        Data newData \u003d new Data(\"bye\");","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"rizemon"},"content":"        testManager.setCurrentData(newData);","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"rizemon"},"content":"        testManager.resetToOriginalData();","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"rizemon"},"content":"        assertTrue(Arrays.equals(testManager.getCurrentData().getRawBytes(), originalData.getRawBytes()));","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"rizemon":77}},{"path":"src/test/java/decodex/data/DataTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.data;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"class DataTest {","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"    public void getRawBytes_stringConstructor_actualBytesOfString() {","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"        Data testData \u003d new Data(\"hi\");","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"        byte[] expectedBytes \u003d new byte[]{104, 105}; // ASCII values of \"hi\"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"        assertTrue(Arrays.equals(testData.getRawBytes(), expectedBytes));","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"    public void getRawBytes_bytesConstructor_actualBytesOfString() {","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"        byte[] expectedBytes \u003d new byte[]{104, 105}; // ASCII values of \"hi\"","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"        Data testData \u003d new Data(expectedBytes);","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"        assertTrue(Arrays.equals(testData.getRawBytes(), expectedBytes));","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"    public void toString_correctStringRepresentation() {","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"        String testString \u003d \"hi\";","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"        Data testData \u003d new Data(testString);","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"        assertTrue(testString.equals(testData.toString()));","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"rizemon":31}},{"path":"src/test/java/decodex/modules/ModuleManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.modules;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.UnknownModuleException;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":"import decodex.modules.base64.Base64Decoder;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"import decodex.modules.base64.Base64Encoder;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"import decodex.modules.hex.HexDecoder;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":"import decodex.modules.hex.HexEncoder;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"arraysius"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"arraysius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"arraysius"},"content":"public class ModuleManagerTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"arraysius"},"content":"    public void selectModule_availableModuleName_success() {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"arraysius"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"arraysius"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"arraysius"},"content":"            assertTrue(moduleManager.selectModule(\"base64encode\") instanceof Base64Encoder);","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"arraysius"},"content":"            assertTrue(moduleManager.selectModule(\"base64decode\") instanceof Base64Decoder);","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"arraysius"},"content":"            assertTrue(moduleManager.selectModule(\"hexencode\") instanceof HexEncoder);","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"arraysius"},"content":"            assertTrue(moduleManager.selectModule(\"hexdecode\") instanceof HexDecoder);","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"arraysius"},"content":"        } catch (UnknownModuleException e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"arraysius"},"content":"            fail();","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"arraysius"},"content":"    public void selectModule_unknownModuleName_unknownModuleExceptionThrown() {","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"arraysius"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"arraysius"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"arraysius"},"content":"            moduleManager.selectModule(\"unknownModule\");","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"arraysius"},"content":"            fail();","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"arraysius"},"content":"        } catch (UnknownModuleException e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"arraysius"},"content":"            assertEquals(UnknownModuleException.EXCEPTION_MESSAGE, e.getMessage());","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"arraysius"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"arraysius":39}},{"path":"src/test/java/decodex/modules/base64/Base64DecoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.modules.base64;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"class Base64DecoderTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Kair0s3"},"content":"    void run_encodedString_base64DecodedData() {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Kair0s3"},"content":"        Base64Decoder base64Decoder \u003d new Base64Decoder();","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Kair0s3"},"content":"        String encodedString \u003d \"dGVzdA\u003d\u003d\";","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Kair0s3"},"content":"        String expectedString \u003d \"test\";","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Kair0s3"},"content":"        Data encodedData \u003d new Data(encodedString);","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Kair0s3"},"content":"        Data decodedData \u003d base64Decoder.run(encodedData);","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"        assertEquals(expectedString, decodedData.toString());","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Kair0s3"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"rizemon":1,"Kair0s3":19}},{"path":"src/test/java/decodex/modules/base64/Base64EncoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.modules.base64;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"class Base64EncoderTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Kair0s3"},"content":"    void run_originalString_base64EncodedData() {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Kair0s3"},"content":"        Base64Encoder base64Encoder \u003d new Base64Encoder();","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Kair0s3"},"content":"        String testString \u003d \"test\";","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Kair0s3"},"content":"        String expectedString \u003d \"dGVzdA\u003d\u003d\";","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Kair0s3"},"content":"        Data originalData \u003d new Data(testString);","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Kair0s3"},"content":"        Data encodedData \u003d base64Encoder.run(originalData);","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"        assertEquals(expectedString, encodedData.toString());","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Kair0s3"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"rizemon":1,"Kair0s3":19}},{"path":"src/test/java/decodex/modules/hex/HexDecoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package decodex.modules.hex;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"class HexDecoderTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"    void run_HexEncoding_expectAllAscii() {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"        String inputString \u003d \"202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f40\"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"                + \"4142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768\"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"                + \"696a6b6c6d6e6f707172737475767778797a7b7c7d7e\";","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"        HexDecoder hexDecoder \u003d new HexDecoder();","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"        Data inputData \u003d new Data(inputString);","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"        Data result \u003d hexDecoder.run(inputData);","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"        String expectedString \u003d \" !\\\"#$%\u0026\u0027()*+,-./0123456789:;\"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"SeenFang"},"content":"                + \"\u003c\u003d\u003e?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\";","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"SeenFang"},"content":"        assertEquals(expectedString, result.toString());","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"SeenFang":24}},{"path":"src/test/java/decodex/modules/hex/HexEncoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package decodex.modules.hex;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"class HexEncoderTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"    void run_allAsciiChars_expectHexEncoding() {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"        String inputString \u003d \" !\\\"#$%\u0026\u0027()*+,-./0123456789:;\"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"                + \"\u003c\u003d\u003e?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\";","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"        HexEncoder hexEncoder \u003d new HexEncoder();","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"        Data inputData \u003d new Data(inputString);","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"        Data result \u003d hexEncoder.run(inputData);","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"        String expectedString \u003d \"202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f40\"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"                + \"4142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768\"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"SeenFang"},"content":"                + \"696a6b6c6d6e6f707172737475767778797a7b7c7d7e\";","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"SeenFang"},"content":"        assertEquals(expectedString, result.toString());","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"SeenFang":25}},{"path":"src/test/java/decodex/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kair0s3"},"content":"package decodex.parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"import decodex.commands.Command;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"import decodex.commands.ExitCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.exception.ParserException;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Kair0s3"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Kair0s3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"Kair0s3"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"Kair0s3"},"content":"class ParserTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"    DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Kair0s3"},"content":"    ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Kair0s3"},"content":"    Parser parser \u003d new Parser();","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Kair0s3"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"Kair0s3"},"content":"    void getCommandType_stringWithNoSeparator_expectCommandTypeString() throws ParserException {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Kair0s3"},"content":"        String testInput \u003d \"test\";","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"Kair0s3"},"content":"        String expectedOutput \u003d \"test\";","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"Kair0s3"},"content":"        String commandType \u003d parser.getCommandType(testInput);","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Kair0s3"},"content":"        assertEquals(expectedOutput, commandType);","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"Kair0s3"},"content":"    void getCommandType_stringWithOneSpaceSeparator_expectCommandTypeString() throws ParserException {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"Kair0s3"},"content":"        String testInput \u003d \"test data\";","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"Kair0s3"},"content":"        String expectedOutput \u003d \"test\";","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"Kair0s3"},"content":"        String commandType \u003d parser.getCommandType(testInput);","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"Kair0s3"},"content":"        assertEquals(expectedOutput, commandType);","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"Kair0s3"},"content":"    void getUserArguments_userInputWithOneSpaceSeparator_expectArrayOfOneArgument() throws ParserException {","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"Kair0s3"},"content":"        String testInput \u003d \"test data\";","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"Kair0s3"},"content":"        String[] expectedOutput \u003d new String[]{\"data\"};","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"Kair0s3"},"content":"        String[] arguments \u003d parser.getUserArguments(testInput);","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Kair0s3"},"content":"        assertArrayEquals(expectedOutput, arguments);","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"Kair0s3"},"content":"    void parseCommand_userInputSpecifyingExit_expectExitCommand() throws ParserException {","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"Kair0s3"},"content":"        String userInput \u003d \"exit\";","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"Kair0s3"},"content":"        Command command \u003d parser.parseCommand(userInput, dataManager, moduleManager, ui);","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"Kair0s3"},"content":"        assertTrue(command instanceof ExitCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"Kair0s3"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Kair0s3":61}}]
