[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"    mainClassName \u003d \"decodex.Decodex\"","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"    archiveBaseName \u003d \"decodex\"","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rizemon":3,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"![](https://avatars.githubusercontent.com/u/26685970?v\u003d4) | Tan Jia Le | [Github](https://github.com/rizemon) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"![](https://avatars.githubusercontent.com/u/16810847?v\u003d4) | Aloysius Lee | [Github](https://github.com/arraysius/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"![](https://media.discordapp.net/attachments/285692337357586432/892962858546114560/photo_2021-05-07_15-04-25.jpg?text\u003dBreadDog) | Sean Phang | [Github](https://github.com/SeenFang) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Sim Tian Boon | [Github](https://github.com/Kair0s3/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"rizemon":2,"SeenFang":1,"Kair0s3":1,"-":4}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kair0s3"},"content":"# Decodex User Guide","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"# Introduction","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"Decodex is a **Command Line Interface (CLI) application for Capture-The-Flag (CTF) players to quickly transform data from one format to another with extreme ease**. The intuitive interaction can help speed up a player\u0027s performance during CTFs and save time without having to manually code the tedious data transformations.","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"This user guide is tailored for CTF players who have basic understanding of information security concepts.","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":"\u003e ‚ùó This user guide is tailored for CTF players who have basic understanding of information security concepts.","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"Kair0s3"},"content":"![carbon(6).png](images/carbon(6).png)","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"Kair0s3"},"content":"# Table of Contents","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Kair0s3"},"content":"1. Introduction","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Kair0s3"},"content":"2. Table of Contents","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Kair0s3"},"content":"3. Terminologies","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Kair0s3"},"content":"4. Features","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"5. Command Summary","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Kair0s3"},"content":"---","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"Kair0s3"},"content":"# Terminologies","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"Kair0s3"},"content":"This section serves to help the user better understand the terminologies used in this user guide.","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"Kair0s3"},"content":"| Terminology | Definition |","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Kair0s3"},"content":"|-------------|------------|","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Kair0s3"},"content":"|             |            |","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Kair0s3"},"content":"|             |            | ","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"Kair0s3"},"content":"# Features","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Kair0s3"},"content":"\u003cHi, I am a placeholder!, Please replace me\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"Kair0s3"},"content":"# Command Summary","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"Kair0s3"},"content":"| Action | Command Format | Example Usage |","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Kair0s3"},"content":"|--------|----------------|---------------|","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Kair0s3"},"content":"|        |                |               |","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Kair0s3"},"content":"|        |                |               |","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Kair0s3"},"content":"|        |                |               |","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Kair0s3":27,"-":14}},{"path":"src/main/java/decodex/Decodex.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import decodex.commands.Command;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"import decodex.commands.ExitCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.DataManagerException;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.UnknownModuleException;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Kair0s3"},"content":"import decodex.parser.Parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.exception.ParserException;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"Kair0s3"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Kair0s3"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"public class Decodex {","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"Kair0s3"},"content":"    public static Logger logger \u003d Logger.getLogger(Decodex.class.getName());","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"Kair0s3"},"content":"     * Necessary objects to be initialized for Decodex to work properly.","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"Kair0s3"},"content":"    private static DataManager dataManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Kair0s3"},"content":"    private static ModuleManager moduleManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Kair0s3"},"content":"    private static Parser parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"Kair0s3"},"content":"    private static Scanner in;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Kair0s3"},"content":"    private static Ui ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Kair0s3"},"content":"    public Decodex() {","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"Kair0s3"},"content":"        printGreeting();","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"Kair0s3"},"content":"        initDecodex();","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"Kair0s3"},"content":"     * Initializes the necessary Objects for Decodex.","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"Kair0s3"},"content":"    public static void initDecodex() {","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"Kair0s3"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Kair0s3"},"content":"        dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"Kair0s3"},"content":"        moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"Kair0s3"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"Kair0s3"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Kair0s3"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"rizemon"},"content":"     * Decodex entry-point for the java.decodex.Decodex application.","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"rizemon"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"Kair0s3"},"content":"        new Decodex().run();","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"Kair0s3"},"content":"    public void run() {","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"SeenFang"},"content":"        Command command \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"SeenFang"},"content":"        do {","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"Kair0s3"},"content":"            printPromptHeader();","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"Kair0s3"},"content":"            String userInput \u003d in.nextLine();","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"rizemon"},"content":"            logger.fine(\"User input: \" + userInput);","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"Kair0s3"},"content":"            try {","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"rizemon"},"content":"                command \u003d parser.parseCommand(userInput);","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"SeenFang"},"content":"                assert command !\u003d null : \"Command should not be null\";","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"rizemon"},"content":"                command.run(dataManager, moduleManager, ui);","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"Kair0s3"},"content":"            } catch (ParserException | CommandException | UnknownModuleException","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"Kair0s3"},"content":"                    | DataManagerException | ModuleException err) {","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"Kair0s3"},"content":"                printErrorMessage(err.getMessage());","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"Kair0s3"},"content":"                logger.fine(err.getMessage());","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"Kair0s3"},"content":"            }","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"SeenFang"},"content":"        } while (!(command instanceof ExitCommand));","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"Kair0s3"},"content":"     * Prints the greeting message.","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"Kair0s3"},"content":"    public static void printGreeting() {","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"Kair0s3"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Decodex \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"Kair0s3"},"content":"                + \"Welcome to Decodex, transforming data with ease\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"Kair0s3"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"Kair0s3"},"content":"     * Prints the prompt header.","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"Kair0s3"},"content":"    public static void printPromptHeader() {","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"Kair0s3"},"content":"        System.out.print(\"Decodex \u003e \");","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"Kair0s3"},"content":"     * Prints the handled error messages.","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"Kair0s3"},"content":"     * @param errorMessage The respective error message.","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"Kair0s3"},"content":"    public static void printErrorMessage(String errorMessage) {","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"Kair0s3"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"rizemon":8,"arraysius":2,"SeenFang":10,"Kair0s3":75,"-":5}},{"path":"src/main/java/decodex/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.DataManagerException;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.UnknownModuleException;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":" * Command serves as a foundation for other commands to be built upon.","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"    public Command() {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"arraysius"},"content":"    public abstract void run(DataManager dataManager, ModuleManager moduleManager, Ui ui)","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Kair0s3"},"content":"            throws CommandException, UnknownModuleException, DataManagerException, ModuleException;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"rizemon":5,"arraysius":3,"SeenFang":11,"Kair0s3":2}},{"path":"src/main/java/decodex/commands/DataCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"public class DataCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"    public static final String COMMAND_WORD \u003d \"data\";","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"    private final String dataString;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"    public DataCommand(String dataString) {","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"        super();","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"        this.dataString \u003d dataString;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"    public void run(DataManager dataManager, ModuleManager moduleManager, Ui ui) throws CommandException {","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"        if (dataString.isEmpty()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"            throw new CommandException(\"[-] Missing argument\");","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"        Data userData \u003d new Data(dataString);","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"        dataManager.setOriginalData(userData);","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"        System.out.printf(\"[+] Input: %s\\n\", dataString);","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"rizemon":29}},{"path":"src/main/java/decodex/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"        super();","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"    public void run(DataManager dataManager, ModuleManager moduleManager, Ui ui) {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"        System.out.print(\"Goodbye!\");","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"rizemon":3,"SeenFang":16}},{"path":"src/main/java/decodex/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":"import decodex.modules.BaseModule;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"arraysius"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"arraysius"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"arraysius"},"content":"    public ListCommand() {","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"arraysius"},"content":"        super();","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"arraysius"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"arraysius"},"content":"    public void run(DataManager dataManager, ModuleManager moduleManager, Ui ui) {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"arraysius"},"content":"        BaseModule[] modules \u003d moduleManager.getModules();","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"        assert modules.length \u003e 0 : \"Number of modules should be greater than 0\";","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"arraysius"},"content":"        StringBuilder moduleListString \u003d new StringBuilder();","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"arraysius"},"content":"        int maxNameWidth \u003d 0;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"arraysius"},"content":"        // Find number of characters of the longest module name","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"arraysius"},"content":"        for (BaseModule module : modules) {","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"arraysius"},"content":"            String moduleName \u003d module.getName();","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"arraysius"},"content":"            if (moduleName.length() \u003e maxNameWidth) {","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"arraysius"},"content":"                maxNameWidth \u003d moduleName.length();","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"arraysius"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"arraysius"},"content":"        // Prepare and format list of modules","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"arraysius"},"content":"        for (BaseModule module : modules) {","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"arraysius"},"content":"            String moduleName \u003d module.getName();","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"arraysius"},"content":"            String moduleDescription \u003d module.getDescription();","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"arraysius"},"content":"            moduleListString.append(String.format(\"  %-\" + maxNameWidth + \"s - %s\\n\", moduleName, moduleDescription));","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"arraysius"},"content":"        System.out.println(\"Here are the list of supported modules:\");","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"arraysius"},"content":"        System.out.println(moduleListString);","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"arraysius"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"arraysius":41,"SeenFang":1}},{"path":"src/main/java/decodex/commands/ResetCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"public class ResetCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"    public static final String COMMAND_WORD \u003d \"reset\";","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"    public ResetCommand() {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"        super();","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"    public void run(DataManager dataManager, ModuleManager moduleManager, Ui ui) {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"        dataManager.resetToOriginalData();","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"        System.out.println(\"[+] Reverted all changes\");","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"rizemon":20}},{"path":"src/main/java/decodex/commands/SelectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.CommandException;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.DataManagerException;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.UnknownModuleException;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"import decodex.modules.BaseModule;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"arraysius"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"arraysius"},"content":"public class SelectCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"arraysius"},"content":"    public static final String COMMAND_WORD \u003d \"select\";","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"arraysius"},"content":"    private final String moduleName;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"arraysius"},"content":"    public SelectCommand(String moduleName) {","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"arraysius"},"content":"        super();","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"arraysius"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"arraysius"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"arraysius"},"content":"    public void run(DataManager dataManager, ModuleManager moduleManager, Ui ui)","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Kair0s3"},"content":"            throws UnknownModuleException, CommandException, DataManagerException, ModuleException {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"arraysius"},"content":"        if (moduleName.isBlank()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"arraysius"},"content":"            throw new CommandException(\"[-] Missing module name\");","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"arraysius"},"content":"        BaseModule module \u003d moduleManager.selectModule(moduleName);","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"arraysius"},"content":"        Data newData \u003d module.run(dataManager.getCurrentData());","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"arraysius"},"content":"        dataManager.setCurrentData(newData);","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"arraysius"},"content":"        System.out.printf(\"[+] Output: %s\\n\", newData.toString());","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"arraysius"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"arraysius":35,"Kair0s3":2}},{"path":"src/main/java/decodex/data/Data.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.data;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":" * The Data class manages the data that is to be encoded or decoded.","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"public class Data {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"    private byte[] rawBytes;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"    public Data(byte[] rawBytes) {","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"        this.rawBytes \u003d rawBytes;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"    public Data(String data) {","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"        rawBytes \u003d data.getBytes();","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"    public byte[] getRawBytes() {","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"        return rawBytes;","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"    public String toString() {","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"        return new String(rawBytes);","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"rizemon":28}},{"path":"src/main/java/decodex/data/DataManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.data;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.DataManagerException;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":" * The DataManager class manages the current state of the data.","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"public class DataManager {","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"    /* Data provided by the user */","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"    private Data originalData;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"    /* Data to perform the encoding/decoding operations on */","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"    private Data currentData;","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"    public DataManager() {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"        originalData \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"        currentData \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"    public Data getOriginalData() throws DataManagerException {","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"        if (originalData \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"            throw new DataManagerException(\"No data found\");","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"        return originalData;","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"    public Data getCurrentData() throws DataManagerException {","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"        if (currentData \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"            throw new DataManagerException(\"No data found\");","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"        return currentData;","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"    public void setOriginalData(Data originalData) {","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"        this.originalData \u003d originalData;","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"        resetToOriginalData();","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"    public void setCurrentData(Data currentData) throws DataManagerException {","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"        if (originalData \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"            throw new DataManagerException(\"No data found\");","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"        this.currentData \u003d currentData;","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"rizemon"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"rizemon"},"content":"     * Undo all modifications done to the data.","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"rizemon"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"rizemon"},"content":"    public void resetToOriginalData() {","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"rizemon"},"content":"        currentData \u003d originalData;","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"rizemon"},"content":"        assert Arrays.equals(currentData.getRawBytes(), originalData.getRawBytes()) : \"Current data is same as \"","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"rizemon"},"content":"                + \"original data\";","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"rizemon":57}},{"path":"src/main/java/decodex/data/exception/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.data.exception;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":" * This exception is raised when an error during command execution occurs.","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"    public CommandException(String message) {","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"        super(message);","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"rizemon":11}},{"path":"src/main/java/decodex/data/exception/DataManagerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.data.exception;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":" * This exception is raised when an error during access to the DataManager occurs.","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"public class DataManagerException extends Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"    public DataManagerException(String message) {","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"        super(message);","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"rizemon":11}},{"path":"src/main/java/decodex/data/exception/ModuleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.data.exception;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":" * This exception is raised when an error during module execution occurs.","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"public class ModuleException extends Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"    public static final String BASE64_DECODING_FAILED_MESSAGE \u003d \"[x] \"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":"            + \"This data does not seem to be in Base64 format\";","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"    public ModuleException(String message) {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"        super(message);","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"rizemon":11,"Kair0s3":3}},{"path":"src/main/java/decodex/data/exception/ParserException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kair0s3"},"content":"package decodex.data.exception;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"public class ParserException extends Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"    public static final String MISSING_COMMAND_ARGS_MESSAGE \u003d \"[-] Your command arguments is empty\";","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"    public static final String MISSING_COMMAND_TYPE_MESSAGE \u003d \"[-] Your command cannot be blank\";","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"    public ParserException(String message) {","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":"        super(message);","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Kair0s3"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Kair0s3":11}},{"path":"src/main/java/decodex/data/exception/UnknownModuleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.data.exception;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":" * UnknownModuleException is thrown when an unknown module name is provided.","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"public class UnknownModuleException extends Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"arraysius"},"content":"    public static final String EXCEPTION_MESSAGE \u003d \"Unknown module name\";","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"    private final String unknownModuleName;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":"    public UnknownModuleException(String unknownModuleName) {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"arraysius"},"content":"        super(EXCEPTION_MESSAGE);","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"arraysius"},"content":"        this.unknownModuleName \u003d unknownModuleName;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"arraysius"},"content":"    public String getUnknownModuleName() {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"arraysius"},"content":"        return unknownModuleName;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"arraysius"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"arraysius":19}},{"path":"src/main/java/decodex/modules/BaseModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.modules;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":" * BaseModule serves as a foundation for other modules to be built upon.","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"arraysius"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"public abstract class BaseModule {","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":"    protected String name;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"arraysius"},"content":"    protected String description;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"arraysius"},"content":"    public BaseModule(String name, String description) {","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"arraysius"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"arraysius"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"arraysius"},"content":"    public String getName() {","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"arraysius"},"content":"        return name;","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"arraysius"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"arraysius"},"content":"        return description;","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"arraysius"},"content":"     * Performs data processing on the provided Data object. Abstract method to be implemented by other modules.","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"arraysius"},"content":"     * @return Data object containing new processed data.","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"Kair0s3"},"content":"    public abstract Data run(Data data) throws ModuleException;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"rizemon":4,"arraysius":27,"Kair0s3":2}},{"path":"src/main/java/decodex/modules/ModuleManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.modules;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import decodex.Decodex;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.UnknownModuleException;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"import decodex.modules.base64.Base64Decoder;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"import decodex.modules.base64.Base64Encoder;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":"import decodex.modules.hex.HexDecoder;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"arraysius"},"content":"import decodex.modules.hex.HexEncoder;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"arraysius"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"arraysius"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"arraysius"},"content":" * ModuleManager maintains the list of available modules and returns selected modules.","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"arraysius"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"arraysius"},"content":"public class ModuleManager {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"arraysius"},"content":"    private Logger logger \u003d Decodex.logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"arraysius"},"content":"     * Array of available modules.","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"arraysius"},"content":"    private final BaseModule[] modules \u003d {new Base64Encoder(), new Base64Decoder(), new HexEncoder(), new HexDecoder()};","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"arraysius"},"content":"    public ModuleManager() {","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"arraysius"},"content":"        // Log available modules","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"arraysius"},"content":"        for (BaseModule module : modules) {","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"arraysius"},"content":"            logger.fine(String.format(\"Loaded %s\", module.getName()));","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"arraysius"},"content":"    public BaseModule[] getModules() {","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"arraysius"},"content":"        return modules;","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"arraysius"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"arraysius"},"content":"     * Select module from a provided module name.","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"arraysius"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"arraysius"},"content":"     * @param moduleName Name of selected module.","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"arraysius"},"content":"     * @return Selected module.","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"arraysius"},"content":"     * @throws UnknownModuleException Not a module name of an available module.","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"arraysius"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"arraysius"},"content":"    public BaseModule selectModule(String moduleName) throws UnknownModuleException {","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"arraysius"},"content":"        for (BaseModule module : modules) {","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"arraysius"},"content":"            if (module.getName().equals(moduleName)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"SeenFang"},"content":"                logger.fine(String.format(\"Selected %s\", module.getName()));","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"arraysius"},"content":"                return module;","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"arraysius"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"arraysius"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"arraysius"},"content":"        throw new UnknownModuleException(moduleName);","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"arraysius"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"arraysius":51,"SeenFang":4}},{"path":"src/main/java/decodex/modules/base64/Base64Decoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.modules.base64;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"import decodex.modules.BaseModule;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"import java.util.Base64;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":" * Base64Encoder serves to carry out the Base64 decoding operations.","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Kair0s3"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Kair0s3"},"content":"public class Base64Decoder extends BaseModule {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Kair0s3"},"content":"    private final Base64.Decoder base64Decoder;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Kair0s3"},"content":"    public static final String MODULE_NAME \u003d \"base64decode\";","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Kair0s3"},"content":"    public static final String MODULE_DESCRIPTION \u003d \"Decodes the data using Base64 format.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Kair0s3"},"content":"    public Base64Decoder() {","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Kair0s3"},"content":"        super(MODULE_NAME, MODULE_DESCRIPTION);","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Kair0s3"},"content":"        base64Decoder \u003d Base64.getDecoder();","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Kair0s3"},"content":"     * Performs Base64 Decoding on the provided Data object.","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Kair0s3"},"content":"     * @param data The Data object of the encoded data.","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Kair0s3"},"content":"     * @return The Data object of the Base64-decoded data.","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Kair0s3"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"Kair0s3"},"content":"    public Data run(Data data) throws ModuleException {","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Kair0s3"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"Kair0s3"},"content":"            Data decodedData;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Kair0s3"},"content":"            byte[] originalBytes \u003d data.getRawBytes();","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Kair0s3"},"content":"            byte[] base64DecodedBytes \u003d base64Decoder.decode(originalBytes);","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Kair0s3"},"content":"            decodedData \u003d new Data(base64DecodedBytes);","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"Kair0s3"},"content":"            return decodedData;","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"Kair0s3"},"content":"        } catch (IllegalArgumentException err) {","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Kair0s3"},"content":"            throw new ModuleException(ModuleException.BASE64_DECODING_FAILED_MESSAGE);","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"Kair0s3"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"rizemon":2,"Kair0s3":40}},{"path":"src/main/java/decodex/modules/base64/Base64Encoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.modules.base64;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import decodex.modules.BaseModule;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"import java.util.Base64;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":" * Base64Encoder serves to carry out the Base64 encoding operations.","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Kair0s3"},"content":"public class Base64Encoder extends BaseModule {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Kair0s3"},"content":"    private final Base64.Encoder base64Encoder;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Kair0s3"},"content":"    public static final String MODULE_NAME \u003d \"base64encode\";","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Kair0s3"},"content":"    public static final String MODULE_DESCRIPTION \u003d \"Encodes the data using Base64 format.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"    public Base64Encoder() {","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Kair0s3"},"content":"        super(MODULE_NAME, MODULE_DESCRIPTION);","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Kair0s3"},"content":"        base64Encoder \u003d Base64.getEncoder();","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Kair0s3"},"content":"     * Performs Base64 Encoding on the provided Data object.","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Kair0s3"},"content":"     * @param data The Data object of the original/previous data.","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Kair0s3"},"content":"     * @return The Data object of the Base64-encoded data.","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Kair0s3"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Kair0s3"},"content":"    public Data run(Data data) {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"Kair0s3"},"content":"        Data encodedData;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Kair0s3"},"content":"        byte[] originalBytes \u003d data.getRawBytes();","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Kair0s3"},"content":"        byte[] base64EncodedBytes \u003d base64Encoder.encode(originalBytes);","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Kair0s3"},"content":"        encodedData \u003d new Data(base64EncodedBytes);","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Kair0s3"},"content":"        return encodedData;","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"Kair0s3"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"rizemon":2,"Kair0s3":35}},{"path":"src/main/java/decodex/modules/hex/HexDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package decodex.modules.hex;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.BaseModule;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":" * The HexDecoder class converts a hexadecimal string back into its raw value.","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"public class HexDecoder extends BaseModule {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"    public static final String MODULE_NAME \u003d \"hexdecode\";","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"    public static final String MODULE_DESCRIPTION \u003d \"Converts a hexadecimal string back into its raw value\";","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"    public static final int HEXADECIMAL_RADIX \u003d 16;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"    public static final String REGEX_SPLIT_EVERY_2_CHARS \u003d \"(?\u003c\u003d\\\\G..)\";","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"SeenFang"},"content":"    public HexDecoder() {","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"SeenFang"},"content":"        super(MODULE_NAME, MODULE_DESCRIPTION);","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"SeenFang"},"content":"     * Decodes the given hexadecimal string back into its raw value.","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"SeenFang"},"content":"     * @param data Data object to be decoded.","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"SeenFang"},"content":"     * @return new Data object representing the decoded input.","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"SeenFang"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"SeenFang"},"content":"    public Data run(Data data) throws ModuleException {","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"SeenFang"},"content":"        String inputString \u003d data.toString().toLowerCase();","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"SeenFang"},"content":"        if (!isValidHex(inputString)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"SeenFang"},"content":"            throw new ModuleException(\"Invalid hexadecimal string\");","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"SeenFang"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"SeenFang"},"content":"        String decodedString \u003d Arrays","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"SeenFang"},"content":"                .stream(inputString.split(REGEX_SPLIT_EVERY_2_CHARS))","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"SeenFang"},"content":"                .map(s -\u003e Character.toString((char) Integer.parseInt(s, HEXADECIMAL_RADIX)))","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"SeenFang"},"content":"                .collect(Collectors.joining());","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"SeenFang"},"content":"        return new Data(decodedString);","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"SeenFang"},"content":"     * Checks if the provided hexadecimal string is valid.","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"SeenFang"},"content":"     * @param hexString Hexadecimal string to be checked.","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"SeenFang"},"content":"     * @return Boolean if hexadecimal string is valid.","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"SeenFang"},"content":"    private boolean isValidHex(String hexString) {","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"SeenFang"},"content":"        boolean isEven \u003d hexString.length() % 2 \u003d\u003d 0;","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"SeenFang"},"content":"        boolean isHexCharacters \u003d isHexCharacters(hexString);","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"SeenFang"},"content":"        return isEven \u0026\u0026 isHexCharacters;","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"SeenFang"},"content":"     * Checks if the provided hexadecimal string is of valid hexadecimal characters.","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"SeenFang"},"content":"     * @param hexString Hexadecimal string to be checked.","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"SeenFang"},"content":"     * @return Boolean is hexadecimal string consists of valid characters.","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"SeenFang"},"content":"    private boolean isHexCharacters(String hexString) {","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"SeenFang"},"content":"        // Check if String is valid hexadecimal String.","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"SeenFang"},"content":"        for (int i \u003d 1; i \u003c hexString.length(); i++) {","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"SeenFang"},"content":"            if (Character.digit(hexString.charAt(i), 16) \u003d\u003d -1) {","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"SeenFang"},"content":"                return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"SeenFang"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"SeenFang"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"SeenFang"},"content":"        return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"SeenFang":75}},{"path":"src/main/java/decodex/modules/hex/HexEncoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package decodex.modules.hex;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"import decodex.modules.BaseModule;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":" * The HexEncoder class converts the input string to hexadecimal bytes.","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"public class HexEncoder extends BaseModule {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"    public static final String MODULE_NAME \u003d \"hexencode\";","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"    public static final String MODULE_DESCRIPTION \u003d \"Converts the input string to hexadecimal bytes\";","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"    public HexEncoder() {","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"        super(MODULE_NAME, MODULE_DESCRIPTION);","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"     * Encodes the given Data object to Hexadecimal.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"SeenFang"},"content":"     * @param data Data object to be encoded.","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"SeenFang"},"content":"     * @return new Data object representing the encoded input.","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"SeenFang"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"SeenFang"},"content":"    public Data run(Data data) {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"SeenFang"},"content":"        StringBuilder encodedStringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"SeenFang"},"content":"        for (byte b : data.getRawBytes()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"SeenFang"},"content":"            encodedStringBuilder.append(String.format(\"%02x\", b));","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"SeenFang"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"SeenFang"},"content":"        String encodedString \u003d encodedStringBuilder.toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"SeenFang"},"content":"        return new Data(encodedString);","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"SeenFang":36}},{"path":"src/main/java/decodex/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.parser;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"import decodex.commands.Command;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"import decodex.commands.DataCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"import decodex.commands.ExitCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"import decodex.commands.ListCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"import decodex.commands.ResetCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"import decodex.commands.SelectCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.exception.ParserException;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Kair0s3"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Kair0s3"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"Kair0s3"},"content":" * Parses and validates the user input.","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"Kair0s3"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"public class Parser {","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Kair0s3"},"content":"     * Specifies the index of the tokens where specific parameters can be found.","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Kair0s3"},"content":"    private static final int COMMAND_INDEX \u003d 0;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Kair0s3"},"content":"     * Specifies the starting index where the arguments can be found.","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Kair0s3"},"content":"    private static final int STARTING_ARGUMENTS_INDEX \u003d 1;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Kair0s3"},"content":"     * Specifies the valid length of the tokens and used to check validity of tokens.","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Kair0s3"},"content":"    private static final int VALID_TOKENS_LENGTH_FOR_COMMAND \u003d 1;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"Kair0s3"},"content":"    private static final int VALID_TOKENS_LENGTH_FOR_ARGUMENTS \u003d 2;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"Kair0s3"},"content":"     * Returns the type of command that user has entered.","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"Kair0s3"},"content":"     * @param userInput The input specified by the user.","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"Kair0s3"},"content":"     * @return The type of command.","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"Kair0s3"},"content":"    public String getCommandType(String userInput) throws ParserException {","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Kair0s3"},"content":"        String strippedUserInput \u003d userInput.stripLeading();","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Kair0s3"},"content":"        if (strippedUserInput.isEmpty()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"Kair0s3"},"content":"            throw new ParserException(ParserException.MISSING_COMMAND_TYPE_MESSAGE);","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Kair0s3"},"content":"        String[] tokens \u003d strippedUserInput.split(\" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"Kair0s3"},"content":"        boolean isInvalidTokensLength \u003d tokens.length \u003c VALID_TOKENS_LENGTH_FOR_COMMAND;","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Kair0s3"},"content":"        if (isInvalidTokensLength) {","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Kair0s3"},"content":"            throw new ParserException(ParserException.MISSING_COMMAND_TYPE_MESSAGE);","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"Kair0s3"},"content":"        String commandType \u003d tokens[COMMAND_INDEX];","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"Kair0s3"},"content":"        assert !commandType.isEmpty() : \"Command Type should not be empty\";","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"Kair0s3"},"content":"        return commandType;","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"Kair0s3"},"content":"     * Returns the Argument portion of the user input as a whole string.","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"Kair0s3"},"content":"     * @param userInput The input specified by the user.","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"Kair0s3"},"content":"     * @return The argument portion of the user input as an array.","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"Kair0s3"},"content":"    public String getUserArgument(String userInput) throws ParserException {","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"Kair0s3"},"content":"        String strippedUserInput \u003d userInput.stripLeading();","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"Kair0s3"},"content":"        String[] tokens \u003d strippedUserInput.split(\" \", -1);","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"Kair0s3"},"content":"        if (tokens.length \u003c VALID_TOKENS_LENGTH_FOR_ARGUMENTS) {","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"Kair0s3"},"content":"            throw new ParserException(ParserException.MISSING_COMMAND_ARGS_MESSAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"Kair0s3"},"content":"        String[] argumentTokens \u003d Arrays.copyOfRange(tokens, STARTING_ARGUMENTS_INDEX, tokens.length);","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"Kair0s3"},"content":"        if (argumentTokens.length \u003e 1) {","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"Kair0s3"},"content":"            String joinedArguments \u003d String.join(\" \", argumentTokens);","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"Kair0s3"},"content":"            return joinedArguments;","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"Kair0s3"},"content":"        String singleArgument \u003d argumentTokens[0];","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"Kair0s3"},"content":"        return singleArgument;","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"rizemon"},"content":"     * Parses the user input provided by user and returns its respective command. Returns a null object if the command","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"rizemon"},"content":"     * is invalid.","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"Kair0s3"},"content":"     * @param userInput The user input specified by the user.","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"Kair0s3"},"content":"     * @return The respective Command object.","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"rizemon"},"content":"    public Command parseCommand(String userInput) throws ParserException {","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"Kair0s3"},"content":"        Command command;","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"Kair0s3"},"content":"        String commandType \u003d getCommandType(userInput);","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"Kair0s3"},"content":"        switch (commandType) {","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"Kair0s3"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"Kair0s3"},"content":"            command \u003d craftExitCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"Kair0s3"},"content":"            break;","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"Kair0s3"},"content":"        case DataCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"Kair0s3"},"content":"            command \u003d craftDataCommand(userInput);","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"Kair0s3"},"content":"            break;","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"Kair0s3"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"Kair0s3"},"content":"            command \u003d craftListCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"Kair0s3"},"content":"            break;","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"Kair0s3"},"content":"        case ResetCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"Kair0s3"},"content":"            command \u003d craftResetCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"Kair0s3"},"content":"            break;","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"Kair0s3"},"content":"        case SelectCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"Kair0s3"},"content":"            command \u003d craftSelectCommand(userInput);","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"Kair0s3"},"content":"            break;","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"Kair0s3"},"content":"        default:","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"Kair0s3"},"content":"            throw new ParserException(\"[-] Unknown command, please enter a valid command\");","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"Kair0s3"},"content":"        return command;","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"Kair0s3"},"content":"     * Crafts and returns the Exit Command.","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"Kair0s3"},"content":"     * @return The Exit command.","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"Kair0s3"},"content":"    private Command craftExitCommand() {","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"Kair0s3"},"content":"        return new ExitCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"Kair0s3"},"content":"     * Crafts and returns the Data Command given the user input.","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"Kair0s3"},"content":"     * @param userInput The user input specified by the user.","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"Kair0s3"},"content":"     * @return The Data command","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"Kair0s3"},"content":"     * @throws ParserException ParserException","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"Kair0s3"},"content":"    private Command craftDataCommand(String userInput) throws ParserException {","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"Kair0s3"},"content":"        String arguments \u003d getUserArgument(userInput);","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"Kair0s3"},"content":"        return new DataCommand(arguments);","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"Kair0s3"},"content":"     * Crafts and returns the List Command.","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"Kair0s3"},"content":"     * @return The List command.","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"Kair0s3"},"content":"    private Command craftListCommand() {","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"Kair0s3"},"content":"        return new ListCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"Kair0s3"},"content":"     * Crafts and returns the Reset Command.","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"Kair0s3"},"content":"     * @return The Reset command.","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"Kair0s3"},"content":"    private Command craftResetCommand() {","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"Kair0s3"},"content":"        return new ResetCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"Kair0s3"},"content":"     * Crafts and returns the Select Command.","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"Kair0s3"},"content":"     * @param userInput The user input specified by the user.","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"Kair0s3"},"content":"     * @return The Select command.","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"Kair0s3"},"content":"     * @throws ParserException ParserException","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"Kair0s3"},"content":"    private Command craftSelectCommand(String userInput) throws ParserException {","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"Kair0s3"},"content":"        String moduleName \u003d getUserArgument(userInput);","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"Kair0s3"},"content":"        return new SelectCommand(moduleName);","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"rizemon":8,"Kair0s3":159}},{"path":"src/main/java/decodex/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.storage;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"public class Storage {","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"rizemon":5}},{"path":"src/main/java/decodex/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"public class Ui {","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"rizemon":5}},{"path":"src/test/java/decodex/DecodexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"class DecodexTest {","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"rizemon":3,"-":10}},{"path":"src/test/java/decodex/commands/DataCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.UnknownModuleException;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.DataManagerException;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"public class DataCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"    public void run_missingArguments_expectException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"        String dataString \u003d \"\";","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"        Command testCommand \u003d new DataCommand(dataString);","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"        assertThrows(CommandException.class, () -\u003e testCommand.run(dataManager, moduleManager, ui));","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Kair0s3"},"content":"    public void run_insertData_insertedData()","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"Kair0s3"},"content":"            throws CommandException, DataManagerException, UnknownModuleException, ModuleException {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"        String dataString \u003d \"something\";","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"        Command testCommand \u003d new DataCommand(dataString);","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"        testCommand.run(dataManager, moduleManager, ui);","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"        Data testData \u003d new Data(dataString);","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"        assertTrue(Arrays.equals(dataManager.getOriginalData().getRawBytes(), testData.getRawBytes()));","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"rizemon":39,"arraysius":1,"Kair0s3":3}},{"path":"src/test/java/decodex/commands/ResetCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.UnknownModuleException;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.CommandException;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.DataManagerException;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"class ResetCommandTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"SeenFang"},"content":"    public void run_noChanges_sameOriginalData() throws CommandException, DataManagerException,","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"SeenFang"},"content":"            UnknownModuleException, ModuleException {","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"        Data originalData \u003d new Data(\"hi\");","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"        dataManager.setOriginalData(originalData);","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"        Command testCommand \u003d new ResetCommand();","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"        testCommand.run(dataManager, moduleManager, ui);","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"        assertTrue(Arrays.equals(dataManager.getCurrentData().getRawBytes(), originalData.getRawBytes()));","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"SeenFang"},"content":"    public void run_newData_sameOriginalData()","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"SeenFang"},"content":"            throws CommandException, DataManagerException, UnknownModuleException, ModuleException {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"        Data originalData \u003d new Data(\"hi\");","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"        dataManager.setOriginalData(originalData);","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"        Data newData \u003d new Data(\"bye\");","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"        dataManager.setCurrentData(newData);","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"        Command testCommand \u003d new ResetCommand();","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"        testCommand.run(dataManager, moduleManager, ui);","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"rizemon"},"content":"        assertTrue(Arrays.equals(dataManager.getCurrentData().getRawBytes(), originalData.getRawBytes()));","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"rizemon":45,"arraysius":1,"SeenFang":5}},{"path":"src/test/java/decodex/commands/SelectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":"import decodex.data.DataManager;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.CommandException;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.DataManagerException;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.UnknownModuleException;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"arraysius"},"content":"import decodex.modules.ModuleManager;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"arraysius"},"content":"import decodex.ui.Ui;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"arraysius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"arraysius"},"content":"public class SelectCommandTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Kair0s3"},"content":"    public void run_validModuleName_success()","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Kair0s3"},"content":"            throws UnknownModuleException, CommandException, DataManagerException, ModuleException {","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"arraysius"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"arraysius"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"arraysius"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"arraysius"},"content":"        Data data \u003d new Data(\"hello world\");","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"arraysius"},"content":"        dataManager.setOriginalData(data);","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"arraysius"},"content":"        String moduleName \u003d \"base64encode\";","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"arraysius"},"content":"        SelectCommand selectCommand \u003d new SelectCommand(moduleName);","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"arraysius"},"content":"        selectCommand.run(dataManager, moduleManager, ui);","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"arraysius"},"content":"        assertEquals(\"aGVsbG8gd29ybGQ\u003d\", dataManager.getCurrentData().toString());","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"arraysius"},"content":"    public void run_blankModuleName_expectException() throws CommandException {","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"arraysius"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"arraysius"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"arraysius"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"arraysius"},"content":"        Data data \u003d new Data(\"hello world\");","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"arraysius"},"content":"        dataManager.setOriginalData(data);","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"arraysius"},"content":"        String moduleName \u003d \"\";","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"arraysius"},"content":"        SelectCommand selectCommand \u003d new SelectCommand(moduleName);","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"arraysius"},"content":"        assertThrows(CommandException.class, () -\u003e selectCommand.run(dataManager, moduleManager, ui));","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"arraysius"},"content":"    public void run_unknownModuleName_expectException() throws CommandException {","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"arraysius"},"content":"        DataManager dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"arraysius"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"arraysius"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"arraysius"},"content":"        Data data \u003d new Data(\"hello world\");","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"arraysius"},"content":"        dataManager.setOriginalData(data);","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"arraysius"},"content":"        String moduleName \u003d \"unknownModule\";","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"arraysius"},"content":"        SelectCommand selectCommand \u003d new SelectCommand(moduleName);","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"arraysius"},"content":"        assertThrows(UnknownModuleException.class, () -\u003e selectCommand.run(dataManager, moduleManager, ui));","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"arraysius"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"arraysius":62,"Kair0s3":3,"SeenFang":1}},{"path":"src/test/java/decodex/data/DataManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.data;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"import decodex.data.exception.DataManagerException;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"class DataManagerTest {","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"    public void getOriginalData_noData_expectException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"        DataManager testManager \u003d new DataManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"        assertThrows(DataManagerException.class, () -\u003e testManager.getOriginalData());","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"    public void getCurrentData_noData_expectException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"        DataManager testManager \u003d new DataManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"        assertThrows(DataManagerException.class, () -\u003e testManager.getCurrentData());","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"    public void getCurrentData_withOriginalData_originalData() throws DataManagerException {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"        DataManager testManager \u003d new DataManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"        Data originalData \u003d new Data(\"hi\");","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"        testManager.setOriginalData(originalData);","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"        assertTrue(Arrays.equals(testManager.getCurrentData().getRawBytes(), originalData.getRawBytes()));","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"rizemon"},"content":"    public void setOriginalData_withOriginalData_originalData() throws DataManagerException {","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"rizemon"},"content":"        DataManager testManager \u003d new DataManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"rizemon"},"content":"        Data originalData \u003d new Data(\"hi\");","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"rizemon"},"content":"        testManager.setOriginalData(originalData);","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"rizemon"},"content":"        assertTrue(Arrays.equals(testManager.getOriginalData().getRawBytes(), originalData.getRawBytes()));","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"rizemon"},"content":"    public void setCurrentData_noData_expectException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"rizemon"},"content":"        DataManager testManager \u003d new DataManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"rizemon"},"content":"        Data newData \u003d new Data(\"bye\");","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"rizemon"},"content":"        assertThrows(DataManagerException.class, () -\u003e testManager.setCurrentData(newData));","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"rizemon"},"content":"    public void setCurrentData_newData_newData() throws DataManagerException {","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"rizemon"},"content":"        DataManager testManager \u003d new DataManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"rizemon"},"content":"        Data originalData \u003d new Data(\"hi\");","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"rizemon"},"content":"        testManager.setOriginalData(originalData);","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"rizemon"},"content":"        Data newData \u003d new Data(\"bye\");","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"rizemon"},"content":"        testManager.setCurrentData(newData);","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"rizemon"},"content":"        assertTrue(Arrays.equals(testManager.getCurrentData().getRawBytes(), newData.getRawBytes()));","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"rizemon"},"content":"    public void resetToOriginalData_noUpdates_originalData() throws DataManagerException {","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"rizemon"},"content":"        DataManager testManager \u003d new DataManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"rizemon"},"content":"        Data originalData \u003d new Data(\"hi\");","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"rizemon"},"content":"        testManager.setOriginalData(originalData);","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"rizemon"},"content":"        testManager.resetToOriginalData();","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"rizemon"},"content":"        assertTrue(Arrays.equals(testManager.getCurrentData().getRawBytes(), originalData.getRawBytes()));","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"rizemon"},"content":"    public void resetToOriginalData_newData_originalData() throws DataManagerException {","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"rizemon"},"content":"        DataManager testManager \u003d new DataManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"rizemon"},"content":"        Data originalData \u003d new Data(\"hi\");","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"rizemon"},"content":"        testManager.setOriginalData(originalData);","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"rizemon"},"content":"        Data newData \u003d new Data(\"bye\");","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"rizemon"},"content":"        testManager.setCurrentData(newData);","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"rizemon"},"content":"        testManager.resetToOriginalData();","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"rizemon"},"content":"        assertTrue(Arrays.equals(testManager.getCurrentData().getRawBytes(), originalData.getRawBytes()));","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"rizemon":77}},{"path":"src/test/java/decodex/data/DataTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.data;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"rizemon"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"rizemon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"rizemon"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"rizemon"},"content":"class DataTest {","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"rizemon"},"content":"    public void getRawBytes_stringConstructor_actualBytesOfString() {","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"rizemon"},"content":"        Data testData \u003d new Data(\"hi\");","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"rizemon"},"content":"        byte[] expectedBytes \u003d new byte[]{104, 105}; // ASCII values of \"hi\"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"rizemon"},"content":"        assertTrue(Arrays.equals(testData.getRawBytes(), expectedBytes));","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"rizemon"},"content":"    public void getRawBytes_bytesConstructor_actualBytesOfString() {","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"rizemon"},"content":"        byte[] expectedBytes \u003d new byte[]{104, 105}; // ASCII values of \"hi\"","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"rizemon"},"content":"        Data testData \u003d new Data(expectedBytes);","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"rizemon"},"content":"        assertTrue(Arrays.equals(testData.getRawBytes(), expectedBytes));","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"rizemon"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"rizemon"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"rizemon"},"content":"    public void toString_correctStringRepresentation() {","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"rizemon"},"content":"        String testString \u003d \"hi\";","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"rizemon"},"content":"        Data testData \u003d new Data(testString);","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"rizemon"},"content":"        assertTrue(testString.equals(testData.toString()));","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"rizemon"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"rizemon"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"rizemon":31}},{"path":"src/test/java/decodex/modules/ModuleManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"arraysius"},"content":"package decodex.modules;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"arraysius"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"arraysius"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"arraysius"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"arraysius"},"content":"import decodex.data.exception.UnknownModuleException;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"arraysius"},"content":"import decodex.modules.base64.Base64Encoder;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"arraysius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"arraysius"},"content":"public class ModuleManagerTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"arraysius"},"content":"    public void selectModule_base64encode_success() throws UnknownModuleException {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"arraysius"},"content":"        String moduleName \u003d \"base64encode\";","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"arraysius"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"arraysius"},"content":"        BaseModule module \u003d moduleManager.selectModule(moduleName);","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"arraysius"},"content":"        assertTrue(module instanceof Base64Encoder);","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"arraysius"},"content":"    public void selectModule_unknownModuleName_unknownModuleExceptionThrown() {","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"arraysius"},"content":"        String moduleName \u003d \"unknownModule\";","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"arraysius"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"arraysius"},"content":"        assertThrows(UnknownModuleException.class, () -\u003e moduleManager.selectModule(moduleName));","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"arraysius"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"arraysius"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"arraysius"},"content":"    public void selectModule_blankModuleName_unknownModuleExceptionThrown() {","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"arraysius"},"content":"        String moduleName \u003d \"\";","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"arraysius"},"content":"        ModuleManager moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"arraysius"},"content":"        assertThrows(UnknownModuleException.class, () -\u003e moduleManager.selectModule(moduleName));","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"arraysius"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"arraysius"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"arraysius":35}},{"path":"src/test/java/decodex/modules/base64/Base64DecoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.modules.base64;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":"class Base64DecoderTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Kair0s3"},"content":"    void run_encodedString_base64DecodedData() throws ModuleException {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Kair0s3"},"content":"        Base64Decoder base64Decoder \u003d new Base64Decoder();","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Kair0s3"},"content":"        String encodedString \u003d \"dGVzdA\u003d\u003d\";","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Kair0s3"},"content":"        String expectedString \u003d \"test\";","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"        Data encodedData \u003d new Data(encodedString);","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Kair0s3"},"content":"        Data decodedData \u003d base64Decoder.run(encodedData);","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Kair0s3"},"content":"        assertEquals(expectedString, decodedData.toString());","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Kair0s3"},"content":"    void run_emptyString_emptyDecodedData() throws ModuleException {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Kair0s3"},"content":"        Base64Decoder base64Decoder \u003d new Base64Decoder();","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Kair0s3"},"content":"        String encodedString \u003d \"\";","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Kair0s3"},"content":"        String expectedString \u003d \"\";","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Kair0s3"},"content":"        Data encodedData \u003d new Data(encodedString);","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Kair0s3"},"content":"        Data decodedData \u003d base64Decoder.run(encodedData);","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Kair0s3"},"content":"        assertEquals(expectedString, decodedData.toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"Kair0s3"},"content":"    void run_nullByteBase64EncodedInput_expectNullByte() throws ModuleException {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"Kair0s3"},"content":"        Base64Decoder base64Decoder \u003d new Base64Decoder();","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Kair0s3"},"content":"        String encodedString \u003d \"AA\u003d\u003d\";","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Kair0s3"},"content":"        String expectedString \u003d \"\\00\";","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Kair0s3"},"content":"        Data encodedData \u003d new Data(encodedString);","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Kair0s3"},"content":"        Data decodedData \u003d base64Decoder.run(encodedData);","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Kair0s3"},"content":"        assertEquals(expectedString, decodedData.toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"Kair0s3"},"content":"    void run_stringWithOneSpace_throwsModuleException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"Kair0s3"},"content":"        Base64Decoder base64Decoder \u003d new Base64Decoder();","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Kair0s3"},"content":"        String encodedString \u003d \" \";","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Kair0s3"},"content":"        Data encodedData \u003d new Data(encodedString);","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Kair0s3"},"content":"        assertThrows(ModuleException.class, () -\u003e base64Decoder.run(encodedData));","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"Kair0s3"},"content":"    void run_nullByteString_throwsModuleException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"Kair0s3"},"content":"        Base64Decoder base64Decoder \u003d new Base64Decoder();","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"Kair0s3"},"content":"        String encodedString \u003d \"\\00\";","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"Kair0s3"},"content":"        Data encodedData \u003d new Data(encodedString);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"Kair0s3"},"content":"        assertThrows(ModuleException.class, () -\u003e base64Decoder.run(encodedData));","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"Kair0s3"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"rizemon":1,"Kair0s3":61}},{"path":"src/test/java/decodex/modules/base64/Base64EncoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rizemon"},"content":"package decodex.modules.base64;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"class Base64EncoderTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Kair0s3"},"content":"    void run_originalString_base64EncodedData() {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Kair0s3"},"content":"        Base64Encoder base64Encoder \u003d new Base64Encoder();","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Kair0s3"},"content":"        String testString \u003d \"test\";","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Kair0s3"},"content":"        String expectedString \u003d \"dGVzdA\u003d\u003d\";","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Kair0s3"},"content":"        Data originalData \u003d new Data(testString);","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Kair0s3"},"content":"        Data encodedData \u003d base64Encoder.run(originalData);","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"        assertEquals(expectedString, encodedData.toString());","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Kair0s3"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"rizemon":1,"Kair0s3":19}},{"path":"src/test/java/decodex/modules/hex/HexDecoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package decodex.modules.hex;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"import decodex.data.exception.ModuleException;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"class HexDecoderTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"    void run_validHex_expectAllAscii() throws ModuleException {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"        String inputString \u003d \"202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f40\"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"                + \"4142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768\"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"                + \"696a6b6c6d6e6f707172737475767778797a7b7c7d7e\";","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"        HexDecoder hexDecoder \u003d new HexDecoder();","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"        Data inputData \u003d new Data(inputString);","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"SeenFang"},"content":"        Data result \u003d hexDecoder.run(inputData);","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"SeenFang"},"content":"        String expectedString \u003d \" !\\\"#$%\u0026\u0027()*+,-./0123456789:;\"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"SeenFang"},"content":"                + \"\u003c\u003d\u003e?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\";","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"SeenFang"},"content":"        assertEquals(expectedString, result.toString());","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"SeenFang"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"SeenFang"},"content":"    void run_invalidHexChar_expectException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"SeenFang"},"content":"        String inputString \u003d \"AZ\";","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"SeenFang"},"content":"        HexDecoder hexDecoder \u003d new HexDecoder();","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"SeenFang"},"content":"        Data inputData \u003d new Data(inputString);","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"SeenFang"},"content":"        assertThrows(ModuleException.class, () -\u003e hexDecoder.run(inputData));","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"SeenFang"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"SeenFang"},"content":"    void run_invalidHexLength_expectException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"SeenFang"},"content":"        String inputString \u003d \"ZZZ\";","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"SeenFang"},"content":"        HexDecoder hexDecoder \u003d new HexDecoder();","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"SeenFang"},"content":"        Data inputData \u003d new Data(inputString);","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"SeenFang"},"content":"        assertThrows(ModuleException.class, () -\u003e hexDecoder.run(inputData));","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"SeenFang"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"SeenFang"},"content":"    void run_emptyHexInput_expectException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"SeenFang"},"content":"        String inputString \u003d \" \";","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"SeenFang"},"content":"        HexDecoder hexDecoder \u003d new HexDecoder();","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"SeenFang"},"content":"        Data inputData \u003d new Data(inputString);","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"SeenFang"},"content":"        assertThrows(ModuleException.class, () -\u003e hexDecoder.run(inputData));","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"SeenFang"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"SeenFang"},"content":"    void run_nullHexInput_expectException() throws ModuleException {","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"SeenFang"},"content":"        String inputString \u003d \"00\";","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"SeenFang"},"content":"        HexDecoder hexDecoder \u003d new HexDecoder();","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"SeenFang"},"content":"        Data inputData \u003d new Data(inputString);","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"SeenFang"},"content":"        Data result \u003d hexDecoder.run(inputData);","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"SeenFang"},"content":"        String expectedString \u003d \"\\00\";","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"SeenFang"},"content":"        assertEquals(expectedString, result.toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"SeenFang":66}},{"path":"src/test/java/decodex/modules/hex/HexEncoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package decodex.modules.hex;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"import decodex.data.Data;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"class HexEncoderTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"    void run_allAsciiChars_expectHexEncoding() {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"        String inputString \u003d \" !\\\"#$%\u0026\u0027()*+,-./0123456789:;\"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"                + \"\u003c\u003d\u003e?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\";","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"        HexEncoder hexEncoder \u003d new HexEncoder();","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"        Data inputData \u003d new Data(inputString);","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"        Data result \u003d hexEncoder.run(inputData);","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"        String expectedString \u003d \"202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f40\"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"                + \"4142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768\"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"SeenFang"},"content":"                + \"696a6b6c6d6e6f707172737475767778797a7b7c7d7e\";","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"SeenFang"},"content":"        assertEquals(expectedString, result.toString());","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"SeenFang":25}},{"path":"src/test/java/decodex/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kair0s3"},"content":"package decodex.parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"import decodex.commands.Command;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"import decodex.commands.DataCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"import decodex.commands.ExitCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"import decodex.commands.ListCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"import decodex.commands.ResetCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"import decodex.commands.SelectCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":"import decodex.data.exception.ParserException;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Kair0s3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"Kair0s3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"Kair0s3"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"Kair0s3"},"content":"class ParserTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"    Parser parser \u003d new Parser();","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"Kair0s3"},"content":"    void getCommandType_stringWithNoSeparator_expectCommandTypeString() throws ParserException {","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Kair0s3"},"content":"        String testInput \u003d \"test\";","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"Kair0s3"},"content":"        String expectedOutput \u003d \"test\";","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"Kair0s3"},"content":"        String commandType \u003d parser.getCommandType(testInput);","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Kair0s3"},"content":"        assertEquals(expectedOutput, commandType);","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"Kair0s3"},"content":"    void getCommandType_stringWithOneSpaceSeparator_expectCommandTypeString() throws ParserException {","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Kair0s3"},"content":"        String testInput \u003d \"test data\";","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"Kair0s3"},"content":"        String expectedOutput \u003d \"test\";","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"Kair0s3"},"content":"        String commandType \u003d parser.getCommandType(testInput);","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Kair0s3"},"content":"        assertEquals(expectedOutput, commandType);","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Kair0s3"},"content":"    void getUserArguments_userInputWithOneSpaceSeparator_expectOneArgumentString() throws ParserException {","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Kair0s3"},"content":"        String testInput \u003d \"test data\";","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Kair0s3"},"content":"        String expectedOutput \u003d \"data\";","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"Kair0s3"},"content":"        String arguments \u003d parser.getUserArgument(testInput);","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"Kair0s3"},"content":"        assertEquals(expectedOutput, arguments);","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Kair0s3"},"content":"    /* The JUnit test methods below are for testing \"normal\" usage flows for the respective commands.*/","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"Kair0s3"},"content":"    void parseCommand_userInputSpecifyingValidData_expectDataCommand() throws ParserException {","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"Kair0s3"},"content":"        String userInput \u003d \"data dummyData\";","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"Kair0s3"},"content":"        Command command \u003d parser.parseCommand(userInput);","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"Kair0s3"},"content":"        assertTrue(command instanceof DataCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"Kair0s3"},"content":"    void parseCommand_userInputSpecifyingExit_expectExitCommand() throws ParserException {","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"Kair0s3"},"content":"        String userInput \u003d \"exit\";","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"rizemon"},"content":"        Command command \u003d parser.parseCommand(userInput);","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"Kair0s3"},"content":"        assertTrue(command instanceof ExitCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"Kair0s3"},"content":"    void parseCommand_userInputSpecifyingValidData_expectListCommand() throws ParserException {","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"Kair0s3"},"content":"        String userInput \u003d \"list\";","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"Kair0s3"},"content":"        Command command \u003d parser.parseCommand(userInput);","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"Kair0s3"},"content":"        assertTrue(command instanceof ListCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"Kair0s3"},"content":"    void parseCommand_userInputSpecifyingReset_expectResetCommand() throws ParserException {","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"Kair0s3"},"content":"        String userInput \u003d \"reset\";","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"Kair0s3"},"content":"        Command command \u003d parser.parseCommand(userInput);","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"Kair0s3"},"content":"        assertTrue(command instanceof ResetCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"Kair0s3"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"Kair0s3"},"content":"    void parseCommand_userInputSpecifyingValidSelect_expectSelectCommand() throws ParserException {","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"Kair0s3"},"content":"        String userInput \u003d \"select dummyMod\";","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"Kair0s3"},"content":"        Command command \u003d parser.parseCommand(userInput);","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"Kair0s3"},"content":"        assertTrue(command instanceof SelectCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"Kair0s3"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"rizemon":1,"Kair0s3":96}}]
