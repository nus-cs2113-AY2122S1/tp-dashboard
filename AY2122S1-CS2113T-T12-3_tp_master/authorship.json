[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"kyun99"},"content":"    mainClassName \u003d \"seedu.duke.StonksXD\"","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"kyun99"},"content":"    archiveBaseName \u003d \"StonksXD\"","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"jonathanlkw"},"content":"    //enableAssertions \u003d true;","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kyun99":2,"jonathanlkw":1,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"KZQ1999"},"content":"| Display | Name | Github Profile | Portfolio |","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"KZQ1999"},"content":"| ------------ | ------------- | ------------- | --------- |","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"KZQ1999"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) | Lim Kay Yun | [Github](https://github.com/kyun99) | [Portfolio](team/kyun99.md) |","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"KZQ1999"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) | Lee An Sheng | [Github](https://github.com/AnShengLee) | [Portfolio](team/anshenglee.md) |","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"KZQ1999"},"content":"| ![](https://avatars.githubusercontent.com/u/77761339?v\u003d4) | Nirmaleshwar | [Github](https://github.com/) | [Portfolio](team/Nirmaleshwar.md) |","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"KZQ1999"},"content":"| ![catmemeresized](https://user-images.githubusercontent.com/69465661/139677543-b64dd74b-90ec-419e-a4ff-c2fbdcd6bb34.png) | Zhi Qian | [Github](https://github.com/KZQ1999) | [Portfolio](team/kzq1999.md) |","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"KZQ1999"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) | Lam Kai Wen Jonathan | [Github](https://github.com/jonathanlkw) | [Portfolio](team/jonathanlkw.md) |","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"KZQ1999":10,"-":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"KZQ1999"},"content":"Snippets of code from Baeldung’s guide to unit testing of system.out.println() with junit were used.","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"KZQ1999"},"content":"Source: https://www.baeldung.com/java-testing-system-out-println","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"AnShengLee"},"content":"Snippets of code from addressbook-level2’s Parser.java were used.","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"AnShengLee"},"content":"Source: https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/parser/Parser.java","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"jonathanlkw"},"content":"### Architecture","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"jonathanlkw"},"content":"![](Architecture.drawio.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"jonathanlkw"},"content":"The __Architecture Diagram__ above explains the high-level design of the StonksXD app.","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"jonathanlkw"},"content":"Given below is a quick overview of the main components of the application and how they interact with each other:","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"jonathanlkw"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"jonathanlkw"},"content":"`Ui` is the class responsible for interfacing with the user. ","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"jonathanlkw"},"content":"It receives user input and passes it to`StonksXD`.","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"jonathanlkw"},"content":"It also receives data from `Command` to output to the user.","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"jonathanlkw"},"content":"`User` \u0026harr; `Ui` \u0026rarr; `StonksXD`","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"jonathanlkw"},"content":"`Ui` \u0026larr; `Command`","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"jonathanlkw"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"jonathanlkw"},"content":"`StonksXD` is the main class of the app. It has 2 main functions: ","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"jonathanlkw"},"content":"1. Upon opening the app, it loads saved data by calling `DataManager`. Before closing the app, it calls `DataManager` again to save data.","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"jonathanlkw"},"content":"2. Runs a loop receiving new user input from `Ui` and passing it to `Parser`.","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"jonathanlkw"},"content":"`StonksXD` \u0026rarr; `DataManager`","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"jonathanlkw"},"content":"`Ui` \u0026rarr; `StonksXD` \u0026rarr; `Parser`","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"jonathanlkw"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"jonathanlkw"},"content":"`Parser` is the class responsible for interpreting the user input. ","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"jonathanlkw"},"content":"It ensures the appropriate input format, and passes the input data to the appropriate command.","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"jonathanlkw"},"content":"`StonksXD` \u0026rarr; `Parser` \u0026rarr; `Command`","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"jonathanlkw"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"jonathanlkw"},"content":"`Command` is the class responsible for the execution of all commands.","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"jonathanlkw"},"content":"It contains child classes for all possible commands.","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"jonathanlkw"},"content":"It interacts with `FinancialTracker` and `BudgetManager` to execute commands, before sending information to `Ui` for output.","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"jonathanlkw"},"content":"`Parser` \u0026rarr; `Command` \u0026harr; `FinancialTracker`","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"jonathanlkw"},"content":"`Parser` \u0026rarr; `Command` \u0026harr; `BudgetManager`","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"jonathanlkw"},"content":"`Ui` \u0026larr; `Command`","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"jonathanlkw"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"jonathanlkw"},"content":"`FinancialTracker` is the class containing and handling all income and expense entries input by the user.","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"jonathanlkw"},"content":"It interacts with `Command` to execute tasks, and writes to `DataManager` to save its data.","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"jonathanlkw"},"content":"It also retrieves data from `DataManager` when the program is loaded.","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"jonathanlkw"},"content":"`Command` \u0026harr; `FinancialTracker`","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"jonathanlkw"},"content":"`FinancialTracker` \u0026harr; `DataManager`","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"jonathanlkw"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"jonathanlkw"},"content":"`BudgetManager` is the class containing and handling all budget information.","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"jonathanlkw"},"content":"It interacts with `Command` to execute tasks, and writes to `DataManager` to save its data.","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"jonathanlkw"},"content":"It also retrieves data from `DataManager` when the program is loaded.","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"jonathanlkw"},"content":"`Command` \u0026harr; `BudgetManager`","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"jonathanlkw"},"content":"`BudgetManager` \u0026harr; `DataManager`","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"jonathanlkw"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"jonathanlkw"},"content":"`DataManager` is the class responsible for reading data from the `StonksXD_entries.csv` and `StonksXD_budget.csv` files upon boot up,","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"jonathanlkw"},"content":"and writing save data to the files before terminating the program.","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"jonathanlkw"},"content":"It interacts with `FinancialTracker` and `BudgetManager` and receives commands from `StonksXD`.","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"jonathanlkw"},"content":"`FinancialTracker` \u0026harr; `DataManager`","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"jonathanlkw"},"content":"`BudgetManager` \u0026harr; `DataManager`","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"jonathanlkw"},"content":"`DataManager` \u0026larr; `StonksXD_data.csv`","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"kyun99"},"content":"The Sequence Diagram below shows how the components interact with each other in a typical feedback loop.","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"kyun99"},"content":"It is illustrated using the hypothetical scenario where the user issues the command `del_ex i/1`.","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"kyun99"},"content":"![](StonksXDSequenceDiagram.drawio.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"jonathanlkw"},"content":"The sections below provide more information on the respective components.","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"kyun99"},"content":"---","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"KZQ1999"},"content":"### Ui Component","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"KZQ1999"},"content":"Ui contains a Scanner object that takes in user inputs from the command line.","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"KZQ1999"},"content":"The Ui’s main role is to provide feedback whenever the user enters a command through the form of messages. It also ","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"KZQ1999"},"content":"handles the indexing of each element in the listing methods before printing out to the standard output for users to see.","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":103,"author":{"gitId":"KZQ1999"},"content":"The image below illustrates the sequence diagram in the context of listing methods","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"KZQ1999"},"content":"which includes listExpense, listIncome and listFind","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"KZQ1999"},"content":"![Untitled Diagram drawio (2)](https://user-images.githubusercontent.com/69465661/138629733-63b2a115-5405-4af5-8a74-4d18f51c8f96.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"KZQ1999"},"content":"How the Ui component works:","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"KZQ1999"},"content":"1. The Ui component consists mainly of printing methods that are tailored to be informative.","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"KZQ1999"},"content":"2. The listing sequence diagram shown above uses the listExpense() method that calls printLine(), which is a line separator in the terminal.","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"KZQ1999"},"content":"3. Based on the state of the list given it would decide whether to print a feedback message or to print the entire list with its indexes.","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"KZQ1999"},"content":"4. Before ending with another line separator to mark the end of the message.","lastModifiedDate":"2021-11-07"},{"lineNumber":114,"author":{"gitId":"KZQ1999"},"content":"5. There are many more methods that provides feedback messages like printing of exceptions, values and graphs. Some of this would be covered in the later sections.","lastModifiedDate":"2021-11-07"},{"lineNumber":115,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":116,"author":{"gitId":"kyun99"},"content":"---","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"Nirmaleshwar"},"content":"### Command Component","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"Nirmaleshwar"},"content":"The `Command` class is a parent class that contains all the basic command features required to operate on incoming income or expense data.","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"Nirmaleshwar"},"content":"Each method is abstracted into an appropriate child class (for e.g. `AddExpenseCommand`) in accordance with SLAP and OOP rules to handle only one function.","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"Nirmaleshwar"},"content":"After obtaining the attributes of an entry from the `entry` class and the required command given by the user from the `parser` class, it directs the inputs to the respective methods for execution.","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"kyun99"},"content":"The image below shows the sequence diagram of how the `AddExpenseCommand` class is used and, the other classes involved with it as well.","lastModifiedDate":"2021-11-07"},{"lineNumber":127,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"kyun99"},"content":"![](AddExpenseCommandSD.drawio.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":129,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"AnShengLee"},"content":"---","lastModifiedDate":"2021-11-05"},{"lineNumber":131,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":132,"author":{"gitId":"AnShengLee"},"content":"### Parser component","lastModifiedDate":"2021-11-05"},{"lineNumber":133,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":134,"author":{"gitId":"AnShengLee"},"content":"The `Parser` class is in charge of:","lastModifiedDate":"2021-11-07"},{"lineNumber":135,"author":{"gitId":"AnShengLee"},"content":"1. Converting user inputs to commands. ","lastModifiedDate":"2021-11-07"},{"lineNumber":136,"author":{"gitId":"AnShengLee"},"content":"2. It is also in charge of converting important user information to `csv` data, vice versa.","lastModifiedDate":"2021-11-07"},{"lineNumber":137,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":138,"author":{"gitId":"AnShengLee"},"content":"#### Implementation","lastModifiedDate":"2021-11-05"},{"lineNumber":139,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":140,"author":{"gitId":"AnShengLee"},"content":"`Parser` mainly uses regex to parse items.","lastModifiedDate":"2021-11-07"},{"lineNumber":141,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":142,"author":{"gitId":"kyun99"},"content":"---","lastModifiedDate":"2021-11-07"},{"lineNumber":143,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":144,"author":{"gitId":"kyun99"},"content":"### Financial Tracker Component","lastModifiedDate":"2021-11-07"},{"lineNumber":145,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":146,"author":{"gitId":"kyun99"},"content":"The `FinancialTracker` class is in charge of storing, deleting, and retrieving income and ","lastModifiedDate":"2021-11-07"},{"lineNumber":147,"author":{"gitId":"kyun99"},"content":"expense related calculations while the program is running. It performs these operations based","lastModifiedDate":"2021-11-07"},{"lineNumber":148,"author":{"gitId":"kyun99"},"content":"on the different commands it receives from the user.","lastModifiedDate":"2021-11-07"},{"lineNumber":149,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":150,"author":{"gitId":"kyun99"},"content":"The class diagram below shows the structure of `FinancialTracker`.","lastModifiedDate":"2021-11-07"},{"lineNumber":151,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":152,"author":{"gitId":"kyun99"},"content":"![](FinancialTrackerCD.drawio.png) ","lastModifiedDate":"2021-11-07"},{"lineNumber":153,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":154,"author":{"gitId":"kyun99"},"content":"The `FinancialTracker` component,","lastModifiedDate":"2021-11-07"},{"lineNumber":155,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":156,"author":{"gitId":"kyun99"},"content":"- Uses `ArrayList` called `incomes` and `expenses` to store `income` and `expense` objects, which inherits from the parent class `entry`.","lastModifiedDate":"2021-11-07"},{"lineNumber":157,"author":{"gitId":"kyun99"},"content":"- It also uses `DateOperator` and `FinancialCalculator` as helper class, used to perform calculation and dates related operation","lastModifiedDate":"2021-11-07"},{"lineNumber":158,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":159,"author":{"gitId":"kyun99"},"content":"The sequence diagram below is used to illustrate how `FinancialTracker` utilizes the helper classes.","lastModifiedDate":"2021-11-07"},{"lineNumber":160,"author":{"gitId":"kyun99"},"content":"It shows the hypothetical scenario where its `getExpenseBetween` method.","lastModifiedDate":"2021-11-07"},{"lineNumber":161,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":162,"author":{"gitId":"kyun99"},"content":"![](FinancialTrackerSD.drawio.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":163,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":164,"author":{"gitId":"kyun99"},"content":"1. `getExpenseBetween` is implemented using streams. It filters through the entire `expenses` ArrayList,","lastModifiedDate":"2021-11-07"},{"lineNumber":165,"author":{"gitId":"kyun99"},"content":"checking if the date associated to that entry lies within the given date range provided as input parameters.","lastModifiedDate":"2021-11-07"},{"lineNumber":166,"author":{"gitId":"kyun99"},"content":"Those that passes this check are stored in a `List` using the method `.collect(Collections.toList())` method, called on the stream. ","lastModifiedDate":"2021-11-07"},{"lineNumber":167,"author":{"gitId":"kyun99"},"content":"2. This check is done by the `entryDateInRange` method in `DateOperator`. `DateOperator` stores and carries out all date related operations. ","lastModifiedDate":"2021-11-07"},{"lineNumber":168,"author":{"gitId":"kyun99"},"content":"3. The list is then passes into another method `getSumOfEntries`, which is a method in `FinancialCalculator` class.","lastModifiedDate":"2021-11-07"},{"lineNumber":169,"author":{"gitId":"kyun99"},"content":"4. The method makes use of streams as well. It replaces all the entries with doubles associate to that entry","lastModifiedDate":"2021-11-07"},{"lineNumber":170,"author":{"gitId":"kyun99"},"content":"   using the method `mapToDouble` which uses the `getvalue` method in `Entry` to get the value of the entry.","lastModifiedDate":"2021-11-07"},{"lineNumber":171,"author":{"gitId":"kyun99"},"content":"5. Finally, the method `sum()` is called on the stream which returns the sum of all the values inside the stream. This value ","lastModifiedDate":"2021-11-07"},{"lineNumber":172,"author":{"gitId":"kyun99"},"content":"   is then returned at the end of the function call.","lastModifiedDate":"2021-11-07"},{"lineNumber":173,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":174,"author":{"gitId":"kyun99"},"content":"---","lastModifiedDate":"2021-11-07"},{"lineNumber":175,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":176,"author":{"gitId":"AnShengLee"},"content":"##### Converting user inputs to commands","lastModifiedDate":"2021-11-07"},{"lineNumber":177,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":178,"author":{"gitId":"AnShengLee"},"content":"1. When the user gives an input, it will first be split into 2 parts command word and arguments using regex.","lastModifiedDate":"2021-11-07"},{"lineNumber":179,"author":{"gitId":"AnShengLee"},"content":"2. The command word will be matched with the list of expected command words. If there is no match, return an ","lastModifiedDate":"2021-11-07"},{"lineNumber":180,"author":{"gitId":"AnShengLee"},"content":"invalid command and the process stops here.","lastModifiedDate":"2021-11-07"},{"lineNumber":181,"author":{"gitId":"AnShengLee"},"content":"3. If there is a match, `Parser` will check the validity of the arguments the user gave. This is also done","lastModifiedDate":"2021-11-07"},{"lineNumber":182,"author":{"gitId":"AnShengLee"},"content":"using regex.","lastModifiedDate":"2021-11-07"},{"lineNumber":183,"author":{"gitId":"AnShengLee"},"content":"4. If the arguments are valid, the corresponding command will be returned.","lastModifiedDate":"2021-11-07"},{"lineNumber":184,"author":{"gitId":"AnShengLee"},"content":"5. If invalid, return an invalid command.","lastModifiedDate":"2021-11-07"},{"lineNumber":185,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":186,"author":{"gitId":"AnShengLee"},"content":"##### Converting user information to `csv` data","lastModifiedDate":"2021-11-07"},{"lineNumber":187,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":188,"author":{"gitId":"AnShengLee"},"content":"Every important field will be separated by `Parser` with a `,` before saving them into the respective `csv` files.","lastModifiedDate":"2021-11-07"},{"lineNumber":189,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":190,"author":{"gitId":"AnShengLee"},"content":"##### Converting `csv` data to user information","lastModifiedDate":"2021-11-07"},{"lineNumber":191,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":192,"author":{"gitId":"AnShengLee"},"content":"When a line of data is obtained from the `csv` file, `Parser` will check if the line fits the required format using","lastModifiedDate":"2021-11-07"},{"lineNumber":193,"author":{"gitId":"AnShengLee"},"content":"regex.","lastModifiedDate":"2021-11-07"},{"lineNumber":194,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":195,"author":{"gitId":"jonathanlkw"},"content":"### Budget Component","lastModifiedDate":"2021-10-27"},{"lineNumber":196,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":197,"author":{"gitId":"jonathanlkw"},"content":"The Budget component consists mainly of the `BudgetManager` class and the `Budget` class.","lastModifiedDate":"2021-10-27"},{"lineNumber":198,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"jonathanlkw"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":200,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":201,"author":{"gitId":"jonathanlkw"},"content":"The `BudgetManager` class is the main class containing all methods relating to budget operations.","lastModifiedDate":"2021-10-27"},{"lineNumber":202,"author":{"gitId":"jonathanlkw"},"content":"On the other hand, the `Budget` class is the parent class of all the budget categories. ","lastModifiedDate":"2021-10-27"},{"lineNumber":203,"author":{"gitId":"jonathanlkw"},"content":"There are currently 7 child classes of `Budget` (i.e. 7 legal budget categories in the program).","lastModifiedDate":"2021-10-27"},{"lineNumber":204,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"jonathanlkw"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":206,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":207,"author":{"gitId":"jonathanlkw"},"content":"How the Budget compoment works:","lastModifiedDate":"2021-10-27"},{"lineNumber":208,"author":{"gitId":"jonathanlkw"},"content":"- Upon start-up, a new `BudgetManager` is initialised in `StonksXD`.","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"jonathanlkw"},"content":"- `BudgetManager` initialises all `Budget` sub-classes with respective budget limit values loaded from `DataManager`.","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"jonathanlkw"},"content":"- When an entry is added by the user, `BudgetManager` parses the category input by the user and calls the relevant `Budget` sub-class.","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"jonathanlkw"},"content":"- The `handleBudget` method is performed on the `Budget` sub-class.","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"jonathanlkw"},"content":"- The relevant budgeting information is then sent to the `Ui` class for printing.","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":214,"author":{"gitId":"jonathanlkw"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":215,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":216,"author":{"gitId":"jonathanlkw"},"content":"Below is a sequence diagram of the Budget component when `handleBudget` is executed:","lastModifiedDate":"2021-10-27"},{"lineNumber":217,"author":{"gitId":"jonathanlkw"},"content":"![](BudgetComponent.drawio.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":218,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":219,"author":{"gitId":"Nirmaleshwar"},"content":"_------Work in Progress------_","lastModifiedDate":"2021-10-20"},{"lineNumber":220,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":221,"author":{"gitId":"kyun99"},"content":"---","lastModifiedDate":"2021-11-04"},{"lineNumber":222,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":223,"author":{"gitId":"KZQ1999"},"content":"### Graphing Component","lastModifiedDate":"2021-11-01"},{"lineNumber":224,"author":{"gitId":"kyun99"},"content":"Below is a class diagram to show the classes that interacts with StonksGraph. When the ShowGraphCommand is called it would call the execute method","lastModifiedDate":"2021-11-04"},{"lineNumber":225,"author":{"gitId":"KZQ1999"},"content":"which calls the constructor of StonksGraph to generate a graph based on current year values or a year entered by the user. These values are calculated based on the data in FinancialTracker.","lastModifiedDate":"2021-11-07"},{"lineNumber":226,"author":{"gitId":"kyun99"},"content":"The constructed StonksGraph will then be printed out by the Ui class through the printGraph method.","lastModifiedDate":"2021-11-04"},{"lineNumber":227,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":228,"author":{"gitId":"kyun99"},"content":"#### Class Diagram","lastModifiedDate":"2021-11-04"},{"lineNumber":229,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":230,"author":{"gitId":"KZQ1999"},"content":"![](italiciseAbstractCD.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":231,"author":{"gitId":"KZQ1999"},"content":"In the class diagram above the StonksGraph class has a 2D array as a private attribute representing the graph.","lastModifiedDate":"2021-11-07"},{"lineNumber":232,"author":{"gitId":"KZQ1999"},"content":"It also contains multiple methods used to write the proper characters to each parts of the 2D array.","lastModifiedDate":"2021-11-07"},{"lineNumber":233,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":234,"author":{"gitId":"KZQ1999"},"content":"Below is a list of some of the more important methods","lastModifiedDate":"2021-11-07"},{"lineNumber":235,"author":{"gitId":"KZQ1999"},"content":"1. drawBorder() is used to set all characters in the border of the 2D array grid to the border character and the rest to blank","lastModifiedDate":"2021-11-07"},{"lineNumber":236,"author":{"gitId":"KZQ1999"},"content":"2. writeToGraph() takes in 2 integers representing coordinates and a string to be written to inside the 2D array","lastModifiedDate":"2021-11-07"},{"lineNumber":237,"author":{"gitId":"KZQ1999"},"content":"3. determineBarValue() is used to determine the skill of the graph based on the biggest value of that report\u0027s year, scaled to the nearest representing 10,100,1000.....\u003cbr\u003eFor example a value of 7672 will have a scale of 10,000/10 \u003d 1000 and a value of 0.01 will have a scale of 0.1/10 \u003d 0.01","lastModifiedDate":"2021-11-07"},{"lineNumber":238,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":239,"author":{"gitId":"KZQ1999"},"content":"---","lastModifiedDate":"2021-11-07"},{"lineNumber":240,"author":{"gitId":"KZQ1999"},"content":"### Notes","lastModifiedDate":"2021-11-07"},{"lineNumber":241,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":242,"author":{"gitId":"KZQ1999"},"content":"- In the following section all coordinates will be in the form of `(Row from the top, Column from the left)` and coordinates mark with X is a don\u0027t care.","lastModifiedDate":"2021-11-07"},{"lineNumber":243,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":244,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":246,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":247,"author":{"gitId":"KZQ1999"},"content":"#### Sequential Diagram","lastModifiedDate":"2021-11-07"},{"lineNumber":248,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":249,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":250,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":251,"author":{"gitId":"KZQ1999"},"content":"![](UpdatedWithDateOpSD.drawio.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":252,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":253,"author":{"gitId":"KZQ1999"},"content":"Above is a sequential diagram for the constructor of StonksGraph that shows the different method calls when a new StonksGraph object is instantiated.","lastModifiedDate":"2021-11-07"},{"lineNumber":254,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":255,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":256,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":257,"author":{"gitId":"KZQ1999"},"content":"How the graphing component works:","lastModifiedDate":"2021-11-07"},{"lineNumber":258,"author":{"gitId":"KZQ1999"},"content":"1. The graphing component consists mainly of the StonksGraph class which contains a 20 by 100 2D array.","lastModifiedDate":"2021-11-07"},{"lineNumber":259,"author":{"gitId":"KZQ1999"},"content":"2. When first initialised, the StonksGraph constructor will call setBorder() which will loop through the 2D array and set","lastModifiedDate":"2021-11-07"},{"lineNumber":260,"author":{"gitId":"KZQ1999"},"content":"   all border characters as the given border character \u0027x\u0027 while keeping the others as the char blank.","lastModifiedDate":"2021-11-01"},{"lineNumber":261,"author":{"gitId":"KZQ1999"},"content":"3. It then calculates the balance of the financial tracker using the calculateBalance() method and write the value with its descriptor starting from coordinate (2,4).","lastModifiedDate":"2021-11-01"},{"lineNumber":262,"author":{"gitId":"KZQ1999"},"content":"4. Next it calls the drawReport() method, first it writes the title \"Your Yearly Report\" at coordinate (5,4).","lastModifiedDate":"2021-11-01"},{"lineNumber":263,"author":{"gitId":"KZQ1999"},"content":"   Then it writes the separator at (6,X), followed by a legend at (2,75) the top right. It also writes the x-axis with its month labels.","lastModifiedDate":"2021-11-01"},{"lineNumber":264,"author":{"gitId":"kyun99"},"content":"5. It then calls the getMonthlyIncomeBreakdown(year) and getMonthlyExpenseBreakdown(year) methods to retrieve all total expenses and total incomes","lastModifiedDate":"2021-11-05"},{"lineNumber":265,"author":{"gitId":"kyun99"},"content":"   for input year when the user is using the app. The user can choose between showing the current year or the year of their choice.","lastModifiedDate":"2021-11-05"},{"lineNumber":266,"author":{"gitId":"KZQ1999"},"content":"6. Using this 24 data set in total (12months for both expenses and incomes) it will calculate the scale for each bar unit","lastModifiedDate":"2021-11-01"},{"lineNumber":267,"author":{"gitId":"KZQ1999"},"content":"7. Then it plots the bar graph based on whichever column it looped through using the drawBar() method.","lastModifiedDate":"2021-11-01"},{"lineNumber":268,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":269,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":270,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":271,"author":{"gitId":"kyun99"},"content":"---","lastModifiedDate":"2021-11-04"},{"lineNumber":272,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":273,"author":{"gitId":"AnShengLee"},"content":"### Data storage Component","lastModifiedDate":"2021-11-05"},{"lineNumber":274,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":275,"author":{"gitId":"AnShengLee"},"content":"The saving and loading of data is handled by the `DataManager` class. There are 2 `csv` files that will be storing ","lastModifiedDate":"2021-11-07"},{"lineNumber":276,"author":{"gitId":"AnShengLee"},"content":"data. ","lastModifiedDate":"2021-11-07"},{"lineNumber":277,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":278,"author":{"gitId":"AnShengLee"},"content":"First file is `StonksXD_Entries.csv` which will be storing entries. They are:","lastModifiedDate":"2021-11-07"},{"lineNumber":279,"author":{"gitId":"AnShengLee"},"content":"1. `Expense` entries.","lastModifiedDate":"2021-11-07"},{"lineNumber":280,"author":{"gitId":"AnShengLee"},"content":"2. `Income` entries.","lastModifiedDate":"2021-11-07"},{"lineNumber":281,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":282,"author":{"gitId":"AnShengLee"},"content":"Second file is `StonksXD_Settings.csv` which will be storing settings. They are:","lastModifiedDate":"2021-11-07"},{"lineNumber":283,"author":{"gitId":"AnShengLee"},"content":"1. Budget settings for various expense category.","lastModifiedDate":"2021-11-07"},{"lineNumber":284,"author":{"gitId":"AnShengLee"},"content":"2. The currency setting.","lastModifiedDate":"2021-11-07"},{"lineNumber":285,"author":{"gitId":"AnShengLee"},"content":"3. The threshold setting.","lastModifiedDate":"2021-11-07"},{"lineNumber":286,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":287,"author":{"gitId":"AnShengLee"},"content":"Every important fields will be separate by a `,`. ","lastModifiedDate":"2021-11-07"},{"lineNumber":288,"author":{"gitId":"AnShengLee"},"content":"These 2 files will be located in the same directory as `StonksXD.jar`.","lastModifiedDate":"2021-11-07"},{"lineNumber":289,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":290,"author":{"gitId":"AnShengLee"},"content":"`DataManager` requires an instance of the `Parser`, `FinancialTracker`, `Ui`, `CurrencyManager` and `BudgetManager` ","lastModifiedDate":"2021-11-05"},{"lineNumber":291,"author":{"gitId":"AnShengLee"},"content":"at the moment of creation. ","lastModifiedDate":"2021-11-05"},{"lineNumber":292,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":293,"author":{"gitId":"AnShengLee"},"content":"- When saving data into the csv files, `DataManager` uses Java\u0027s `FileWriter` and `BufferedWriter` class to ","lastModifiedDate":"2021-10-25"},{"lineNumber":294,"author":{"gitId":"AnShengLee"},"content":"interact with the csv files.","lastModifiedDate":"2021-11-07"},{"lineNumber":295,"author":{"gitId":"AnShengLee"},"content":"- When loading data from the csv files, `DataManager` uses Java\u0027s `FileInputStream` and `Scanner` to interact with ","lastModifiedDate":"2021-10-25"},{"lineNumber":296,"author":{"gitId":"AnShengLee"},"content":"the csv files. ","lastModifiedDate":"2021-11-07"},{"lineNumber":297,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":298,"author":{"gitId":"AnShengLee"},"content":"The image below illustrates the class diagram in the context of data saving and loading.","lastModifiedDate":"2021-10-19"},{"lineNumber":299,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":300,"author":{"gitId":"AnShengLee"},"content":"![](DataManagerCD.drawio.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":301,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":302,"author":{"gitId":"AnShengLee"},"content":"#### Loading of data","lastModifiedDate":"2021-11-07"},{"lineNumber":303,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":304,"author":{"gitId":"AnShengLee"},"content":"Loading of data will take place immediately when `StonksXD` starts. Settings will be loaded in first followed by ","lastModifiedDate":"2021-11-07"},{"lineNumber":305,"author":{"gitId":"AnShengLee"},"content":"entries immediately.","lastModifiedDate":"2021-11-07"},{"lineNumber":306,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":307,"author":{"gitId":"AnShengLee"},"content":"##### Loading of settings from `StonksXD_Settings.csv`","lastModifiedDate":"2021-11-07"},{"lineNumber":308,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":309,"author":{"gitId":"AnShengLee"},"content":"1. Create a `FileInputStream`.","lastModifiedDate":"2021-11-07"},{"lineNumber":310,"author":{"gitId":"AnShengLee"},"content":"2. Create a `Scanner` with the `FileInputStream`.","lastModifiedDate":"2021-11-07"},{"lineNumber":311,"author":{"gitId":"AnShengLee"},"content":"3. Check if the first line of the `csv` file has the correct header. If the header is not correct, a warning will be ","lastModifiedDate":"2021-11-07"},{"lineNumber":312,"author":{"gitId":"AnShengLee"},"content":"shown to the user.","lastModifiedDate":"2021-11-07"},{"lineNumber":313,"author":{"gitId":"AnShengLee"},"content":"4. Read the second line,called `data`, which should contain all the settings.","lastModifiedDate":"2021-11-07"},{"lineNumber":314,"author":{"gitId":"AnShengLee"},"content":"5. Pass `data` into `Parser` to obtain the `CurrencyType` and load it into `CurrencyManager`.","lastModifiedDate":"2021-11-07"},{"lineNumber":315,"author":{"gitId":"AnShengLee"},"content":"6. Pass `data` into `Parser` to obtain the threshold value and load it into `BudgetManager`.","lastModifiedDate":"2021-11-07"},{"lineNumber":316,"author":{"gitId":"AnShengLee"},"content":"7. Pass `data` into `Parser` to obtain the different budget settings and load them into `BudgetManager`.","lastModifiedDate":"2021-11-07"},{"lineNumber":317,"author":{"gitId":"AnShengLee"},"content":"8. Return.","lastModifiedDate":"2021-11-07"},{"lineNumber":318,"author":{"gitId":"AnShengLee"},"content":"9. Now DataManager will begin loading all the entries from `StonksXD_Entries.csv`.","lastModifiedDate":"2021-11-07"},{"lineNumber":319,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":320,"author":{"gitId":"AnShengLee"},"content":"##### Loading of Entries from `StonksXD_Entries.csv`","lastModifiedDate":"2021-11-07"},{"lineNumber":321,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":322,"author":{"gitId":"AnShengLee"},"content":"9. Create a `FileInputStream` to the `csv` file.","lastModifiedDate":"2021-11-07"},{"lineNumber":323,"author":{"gitId":"AnShengLee"},"content":"10. Create a `Scanner` with the `FileInputStream`.","lastModifiedDate":"2021-11-07"},{"lineNumber":324,"author":{"gitId":"AnShengLee"},"content":"11. Check if the first line of the `csv` file has the correct header. If the header is not correct, a warning will be","lastModifiedDate":"2021-11-07"},{"lineNumber":325,"author":{"gitId":"AnShengLee"},"content":"shown to the user.","lastModifiedDate":"2021-11-07"},{"lineNumber":326,"author":{"gitId":"AnShengLee"},"content":"12. Read from the `csv` file line by line.","lastModifiedDate":"2021-11-07"},{"lineNumber":327,"author":{"gitId":"AnShengLee"},"content":"13. For every line, `x`, 2 things can happen (they will not happen concurrently):","lastModifiedDate":"2021-11-07"},{"lineNumber":328,"author":{"gitId":"AnShengLee"},"content":"    - If `x` can be loaded as an `Expense` entry, `Parser` will convert it to an `Expense` and load it into ","lastModifiedDate":"2021-11-07"},{"lineNumber":329,"author":{"gitId":"AnShengLee"},"content":"    `FinancialTracker`. Start reading for the next line.","lastModifiedDate":"2021-11-07"},{"lineNumber":330,"author":{"gitId":"AnShengLee"},"content":"    - If `x` can be loaded as an `Income` entry, `Parser` will convert it to an `Income` and load it into","lastModifiedDate":"2021-11-07"},{"lineNumber":331,"author":{"gitId":"AnShengLee"},"content":"      `FinancialTracker`. Start reading for the next line.","lastModifiedDate":"2021-11-07"},{"lineNumber":332,"author":{"gitId":"AnShengLee"},"content":"14. If there are corrupted entries (cannot be loaded as `Expense` or `Income`), a warning will be ","lastModifiedDate":"2021-11-07"},{"lineNumber":333,"author":{"gitId":"AnShengLee"},"content":"shown to the user.","lastModifiedDate":"2021-11-07"},{"lineNumber":334,"author":{"gitId":"AnShengLee"},"content":"15. Return the control to caller.","lastModifiedDate":"2021-11-07"},{"lineNumber":335,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":336,"author":{"gitId":"AnShengLee"},"content":"The sequence diagrams below will illustrate the loading process. Note that the diagrams do not show the full","lastModifiedDate":"2021-11-07"},{"lineNumber":337,"author":{"gitId":"AnShengLee"},"content":"details to reduce complexity.","lastModifiedDate":"2021-11-07"},{"lineNumber":338,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":339,"author":{"gitId":"AnShengLee"},"content":"![](.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":340,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":341,"author":{"gitId":"AnShengLee"},"content":"#### Saving","lastModifiedDate":"2021-11-05"},{"lineNumber":342,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":343,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":344,"author":{"gitId":"AnShengLee"},"content":"Saving of data will take place after every user input. Entries will be saved first followed by","lastModifiedDate":"2021-11-07"},{"lineNumber":345,"author":{"gitId":"AnShengLee"},"content":"settings immediately.","lastModifiedDate":"2021-11-07"},{"lineNumber":346,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":347,"author":{"gitId":"AnShengLee"},"content":"##### Saving of entries into `StonksXD_Entries.csv`","lastModifiedDate":"2021-11-07"},{"lineNumber":348,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":349,"author":{"gitId":"AnShengLee"},"content":"1. Create a `FileWriter` to the `csv` file.","lastModifiedDate":"2021-11-07"},{"lineNumber":350,"author":{"gitId":"AnShengLee"},"content":"2. Create a `BufferedWriter` using the `FileWriter`. `BufferedWriter` is used as since we are writing many times, it","lastModifiedDate":"2021-11-07"},{"lineNumber":351,"author":{"gitId":"AnShengLee"},"content":"could be the faster option.","lastModifiedDate":"2021-11-07"},{"lineNumber":352,"author":{"gitId":"AnShengLee"},"content":"3. Write in the `csv` header.","lastModifiedDate":"2021-11-07"},{"lineNumber":353,"author":{"gitId":"AnShengLee"},"content":"4. Obtain all `Expense` entries from `FinancialTracker`.","lastModifiedDate":"2021-11-07"},{"lineNumber":354,"author":{"gitId":"AnShengLee"},"content":"5. For each `Expense`, convert it to a `String` through `Parser` and write the `String` to the `csv` file.","lastModifiedDate":"2021-11-07"},{"lineNumber":355,"author":{"gitId":"AnShengLee"},"content":"6. Obtain all `Income` entries from `FinancialTracker`. (Will not be shown in diagram as it is similar to step 4.)","lastModifiedDate":"2021-11-07"},{"lineNumber":356,"author":{"gitId":"AnShengLee"},"content":"7. For each `Income`, convert it to a `String` through `Parser` and write the `String` to the `csv` file.","lastModifiedDate":"2021-11-07"},{"lineNumber":357,"author":{"gitId":"AnShengLee"},"content":"(Will not be shown in diagram as it is similar to step 5.)","lastModifiedDate":"2021-11-07"},{"lineNumber":358,"author":{"gitId":"AnShengLee"},"content":"8. Close the buffer and return.","lastModifiedDate":"2021-11-07"},{"lineNumber":359,"author":{"gitId":"AnShengLee"},"content":"9. Begin saving the settings.","lastModifiedDate":"2021-11-07"},{"lineNumber":360,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":361,"author":{"gitId":"AnShengLee"},"content":"##### Saving of settings into `StonksXD_Settings.csv`","lastModifiedDate":"2021-11-07"},{"lineNumber":362,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":363,"author":{"gitId":"AnShengLee"},"content":"10. Create a `FileWriter` to the `csv` file.","lastModifiedDate":"2021-11-07"},{"lineNumber":364,"author":{"gitId":"AnShengLee"},"content":"11. Create a `BufferedWriter` using the `FileWriter`. `BufferedWriter` is used as since we are writing many times, it","lastModifiedDate":"2021-11-07"},{"lineNumber":365,"author":{"gitId":"AnShengLee"},"content":"could be the faster option.","lastModifiedDate":"2021-11-07"},{"lineNumber":366,"author":{"gitId":"AnShengLee"},"content":"12. Write in the `csv` header.","lastModifiedDate":"2021-11-07"},{"lineNumber":367,"author":{"gitId":"AnShengLee"},"content":"13. Use `Parser` to convert all settings to a `String`.","lastModifiedDate":"2021-11-07"},{"lineNumber":368,"author":{"gitId":"AnShengLee"},"content":"14. Write the `String` to the `csv` file.","lastModifiedDate":"2021-11-07"},{"lineNumber":369,"author":{"gitId":"AnShengLee"},"content":"15. Close the buffer.","lastModifiedDate":"2021-11-07"},{"lineNumber":370,"author":{"gitId":"AnShengLee"},"content":"16. Return the control to the caller.","lastModifiedDate":"2021-11-07"},{"lineNumber":371,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":372,"author":{"gitId":"AnShengLee"},"content":"The sequence diagrams below will illustrate the saving process. Note that the diagrams do not show the full","lastModifiedDate":"2021-11-07"},{"lineNumber":373,"author":{"gitId":"AnShengLee"},"content":"details to reduce complexity.","lastModifiedDate":"2021-11-07"},{"lineNumber":374,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":375,"author":{"gitId":"AnShengLee"},"content":"![](.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":378,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":379,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":381,"author":{"gitId":"KZQ1999"},"content":"The Stonks XD program is meant to target computing students that have trouble managing their finances and require reminders/advice to aid them in their financial journey.","lastModifiedDate":"2021-11-07"},{"lineNumber":382,"author":{"gitId":"KZQ1999"},"content":"It is designed to fit the needs of students who travel frequently and prefer logging their financial records daily. Our goal as developers of this app is to provide users with the feeling of having a combination of both a journal and a snapshot.","lastModifiedDate":"2021-11-07"},{"lineNumber":383,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":385,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":387,"author":{"gitId":"kyun99"},"content":"StonksXD a global financial tracking journal, capable of both budgeting and ","lastModifiedDate":"2021-11-07"},{"lineNumber":388,"author":{"gitId":"kyun99"},"content":"analysis to serve financial needs while traveling. It is highly operable and ","lastModifiedDate":"2021-11-07"},{"lineNumber":389,"author":{"gitId":"kyun99"},"content":"intuitive command line program that is simple to use and is optimized for ","lastModifiedDate":"2021-11-07"},{"lineNumber":390,"author":{"gitId":"kyun99"},"content":"anyone on the go. Using a minimalistic command format, we aim to empower ","lastModifiedDate":"2021-11-07"},{"lineNumber":391,"author":{"gitId":"kyun99"},"content":"youth to manage their finances by making personal finance entries simple.","lastModifiedDate":"2021-11-07"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":393,"author":{"gitId":"KZQ1999"},"content":"---","lastModifiedDate":"2021-11-07"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":395,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":397,"author":{"gitId":"KZQ1999"},"content":"|Version| As a ... (role)| I want to ... (Function)| So that I can … (Benefit)|","lastModifiedDate":"2021-10-19"},{"lineNumber":398,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":399,"author":{"gitId":"KZQ1999"},"content":"|v1.0|New User|List out all possible commands|Know what I can key into the CLI interface|","lastModifiedDate":"2021-10-19"},{"lineNumber":400,"author":{"gitId":"KZQ1999"},"content":"|v1.0|User|Be able to record my spendings|Keep track of all my expenses|","lastModifiedDate":"2021-10-19"},{"lineNumber":401,"author":{"gitId":"KZQ1999"},"content":"|v1.0|User|View all expense entries|See which spending I can cut down on and better manage my finances|","lastModifiedDate":"2021-10-19"},{"lineNumber":402,"author":{"gitId":"KZQ1999"},"content":"|v1.0|User|Delete my expense entries|Delete wrong entries due to possible typos|","lastModifiedDate":"2021-10-19"},{"lineNumber":403,"author":{"gitId":"KZQ1999"},"content":"|v1.0|User|View total expense|See if I need to reduce my spending in the future|","lastModifiedDate":"2021-10-19"},{"lineNumber":404,"author":{"gitId":"KZQ1999"},"content":"|v1.0|User|Delete my income entries|Delete wrong entries due to possible typos|","lastModifiedDate":"2021-10-19"},{"lineNumber":405,"author":{"gitId":"KZQ1999"},"content":"|v1.0|Worker|Create income entries|Keep track of my total income and not spend more than that amount|","lastModifiedDate":"2021-10-19"},{"lineNumber":406,"author":{"gitId":"KZQ1999"},"content":"|v1.0|User|See all income entries|Have an understanding of income history|","lastModifiedDate":"2021-10-19"},{"lineNumber":407,"author":{"gitId":"KZQ1999"},"content":"|v1.0|User|View total income|Know what my spending limits are|","lastModifiedDate":"2021-10-19"},{"lineNumber":408,"author":{"gitId":"AnShengLee"},"content":"|v2.0|User|Have my entries saved into the hard disk automatically|My data would not be lost when I close the application|","lastModifiedDate":"2021-10-19"},{"lineNumber":409,"author":{"gitId":"AnShengLee"},"content":"|v2.0|User|Convert income / expense entries to different currencies|Do not have to manually convert currencies|","lastModifiedDate":"2021-10-19"},{"lineNumber":410,"author":{"gitId":"AnShengLee"},"content":"|v2.0|User|View my expenditure in the form of bar charts|Gain more useful insights on my overall financial situation|","lastModifiedDate":"2021-10-19"},{"lineNumber":411,"author":{"gitId":"AnShengLee"},"content":"|v2.0|Frugal spender|Set monthly budgets (overall budget and categorical budgets)|Plan my spending in advance|","lastModifiedDate":"2021-10-19"},{"lineNumber":412,"author":{"gitId":"AnShengLee"},"content":"|v2.0|Large spender|Receive reminders when I am about to overspend|Cut back on my spending|","lastModifiedDate":"2021-10-19"},{"lineNumber":413,"author":{"gitId":"AnShengLee"},"content":"|v2.0|Big spender|Get assistance readjusting my budget when I overspend|Can minimize the damage of spending too much|","lastModifiedDate":"2021-10-19"},{"lineNumber":414,"author":{"gitId":"AnShengLee"},"content":"|v2.0|Financially conscious user|Receive daily tips on saving, budgeting and spending|Can be more frugal and wiser with my financial decisions|","lastModifiedDate":"2021-10-19"},{"lineNumber":415,"author":{"gitId":"AnShengLee"},"content":"|v2.0|Long term user|See my account net balance|Can make appropriate plans / adjustments for the future|","lastModifiedDate":"2021-10-19"},{"lineNumber":416,"author":{"gitId":"AnShengLee"},"content":"|v2.0|User|Find expense / income entry with keyword search|Narrow down the entries I want to see|","lastModifiedDate":"2021-10-19"},{"lineNumber":417,"author":{"gitId":"AnShengLee"},"content":"|v2.0|User|See expenditure each month|Budget how much I need each month|","lastModifiedDate":"2021-10-19"},{"lineNumber":418,"author":{"gitId":"AnShengLee"},"content":"|v2.0|User|See income earned each month|Be more motivated to save|","lastModifiedDate":"2021-10-19"},{"lineNumber":419,"author":{"gitId":"AnShengLee"},"content":"|v2.0|User|Clear all my entries|Start afresh|","lastModifiedDate":"2021-10-19"},{"lineNumber":420,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":421,"author":{"gitId":"KZQ1999"},"content":"---","lastModifiedDate":"2021-11-07"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":423,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":425,"author":{"gitId":"kyun99"},"content":"- Accessibility requirements: the application should be accessible by anyone with the `.jar` file","lastModifiedDate":"2021-10-20"},{"lineNumber":426,"author":{"gitId":"kyun99"},"content":"- Constrains: the CSV files created by the application should be able to run on different machines running the same application","lastModifiedDate":"2021-10-20"},{"lineNumber":427,"author":{"gitId":"kyun99"},"content":"- Fault tolerance requirements: the application should handle inputs with a reasonable amount of errors","lastModifiedDate":"2021-10-20"},{"lineNumber":428,"author":{"gitId":"kyun99"},"content":"- Interoperability requirements: the application should run on macOS, Windows and Linux operating systems","lastModifiedDate":"2021-10-20"},{"lineNumber":429,"author":{"gitId":"kyun99"},"content":"- Stability requirements: Application should run without internet so that user can access the application anywhere without having to connect to the internet","lastModifiedDate":"2021-10-20"},{"lineNumber":430,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":431,"author":{"gitId":"KZQ1999"},"content":"---","lastModifiedDate":"2021-11-07"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":433,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":435,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":437,"author":{"gitId":"KZQ1999"},"content":"---","lastModifiedDate":"2021-11-07"},{"lineNumber":438,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":439,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":441,"author":{"gitId":"Nirmaleshwar"},"content":"### Initial start-up guide:","lastModifiedDate":"2021-10-20"},{"lineNumber":442,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":443,"author":{"gitId":"Nirmaleshwar"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2021-10-20"},{"lineNumber":444,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":445,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":446,"author":{"gitId":"Nirmaleshwar"},"content":"2. Download the latest version of `StonksXD.jar` from [here](https://github.com/AY2122S1-CS2113T-T12-3/tp/releases).","lastModifiedDate":"2021-10-20"},{"lineNumber":447,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":448,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":449,"author":{"gitId":"Nirmaleshwar"},"content":"3. Copy the file to the folder you want to use as the home folder for your `StonksXD`.","lastModifiedDate":"2021-10-20"},{"lineNumber":450,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":451,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":452,"author":{"gitId":"Nirmaleshwar"},"content":"4. Open the Command-Line interface (CLI) and navigate to the directory where you saved the `.jar` file and run `java -jar tp.java` in the command line. `StonksXD` will start up.","lastModifiedDate":"2021-10-20"},{"lineNumber":453,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":454,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":455,"author":{"gitId":"Nirmaleshwar"},"content":"### Testing Guide:","lastModifiedDate":"2021-10-20"},{"lineNumber":456,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":457,"author":{"gitId":"Nirmaleshwar"},"content":"Below are a few types of testing that you can perform:","lastModifiedDate":"2021-10-20"},{"lineNumber":458,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":459,"author":{"gitId":"Nirmaleshwar"},"content":"- Manual Testing","lastModifiedDate":"2021-10-20"},{"lineNumber":460,"author":{"gitId":"Nirmaleshwar"},"content":"- JUnit Testing","lastModifiedDate":"2021-10-20"},{"lineNumber":461,"author":{"gitId":"Nirmaleshwar"},"content":"- Gradle Daemon Testing","lastModifiedDate":"2021-10-20"},{"lineNumber":462,"author":{"gitId":"Nirmaleshwar"},"content":"- I/O Re-direction Testing","lastModifiedDate":"2021-10-20"},{"lineNumber":463,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":464,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":465,"author":{"gitId":"Nirmaleshwar"},"content":"### Manual Testing","lastModifiedDate":"2021-10-20"},{"lineNumber":466,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":467,"author":{"gitId":"Nirmaleshwar"},"content":"This is a non-exhaustive list of some common manual tests that can given as commands during run-time to test code defensibility:","lastModifiedDate":"2021-10-20"},{"lineNumber":468,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":469,"author":{"gitId":"Nirmaleshwar"},"content":"- #### _Adding Income/ Expense entries_","lastModifiedDate":"2021-10-20"},{"lineNumber":470,"author":{"gitId":"Nirmaleshwar"},"content":"  1. Test Case: `add_ex d/DESCRIPTION a/AMOUNT c/CATEGORY`. \u003c/p\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":471,"author":{"gitId":"Nirmaleshwar"},"content":"     Expected : Adds an expense item to the list. Displays confirmation message with timestamp.","lastModifiedDate":"2021-10-20"},{"lineNumber":472,"author":{"gitId":"Nirmaleshwar"},"content":"  ","lastModifiedDate":"2021-10-20"},{"lineNumber":473,"author":{"gitId":"Nirmaleshwar"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":474,"author":{"gitId":"Nirmaleshwar"},"content":"  ","lastModifiedDate":"2021-10-20"},{"lineNumber":475,"author":{"gitId":"Nirmaleshwar"},"content":"  2. Test Case: `add_ex` but leave `d/`, `/a`, `/c` or all  empty. \u003c/p\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":476,"author":{"gitId":"Nirmaleshwar"},"content":"     Expected : No item is added. Error message displayed showing correct syntax.","lastModifiedDate":"2021-10-20"},{"lineNumber":477,"author":{"gitId":"Nirmaleshwar"},"content":"  ","lastModifiedDate":"2021-10-20"},{"lineNumber":478,"author":{"gitId":"Nirmaleshwar"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":479,"author":{"gitId":"Nirmaleshwar"},"content":"  ","lastModifiedDate":"2021-10-20"},{"lineNumber":480,"author":{"gitId":"Nirmaleshwar"},"content":"  3. Test Case: `add_ex` but give non-existent category for `/c`.","lastModifiedDate":"2021-10-20"},{"lineNumber":481,"author":{"gitId":"Nirmaleshwar"},"content":"     Expected : No item added. Error message displayed showing available categories.","lastModifiedDate":"2021-10-20"},{"lineNumber":482,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":483,"author":{"gitId":"Nirmaleshwar"},"content":"- #### _Delete Income/ Expense entries_","lastModifiedDate":"2021-10-20"},{"lineNumber":484,"author":{"gitId":"Nirmaleshwar"},"content":"  1. Pre-requisite: List expense or income using `list_ex`/ `list_in. Must have one or more entries.","lastModifiedDate":"2021-10-20"},{"lineNumber":485,"author":{"gitId":"Nirmaleshwar"},"content":"  ","lastModifiedDate":"2021-10-20"},{"lineNumber":486,"author":{"gitId":"Nirmaleshwar"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":487,"author":{"gitId":"Nirmaleshwar"},"content":"  ","lastModifiedDate":"2021-10-20"},{"lineNumber":488,"author":{"gitId":"Nirmaleshwar"},"content":"  2. Test Case: `del_in i/1` or `del_ex i/1` \u003c/p\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":489,"author":{"gitId":"Nirmaleshwar"},"content":"     Expected : Deletes the 1st entry in Income/ Expense list. Displays confirmation message.","lastModifiedDate":"2021-10-20"},{"lineNumber":490,"author":{"gitId":"Nirmaleshwar"},"content":"  ","lastModifiedDate":"2021-10-20"},{"lineNumber":491,"author":{"gitId":"Nirmaleshwar"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":492,"author":{"gitId":"Nirmaleshwar"},"content":"  ","lastModifiedDate":"2021-10-20"},{"lineNumber":493,"author":{"gitId":"Nirmaleshwar"},"content":"  3. Test Case: `del_in i/0`, `del_in i/ABC` or `del_in i/-3`. \u003c/p\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":494,"author":{"gitId":"Nirmaleshwar"},"content":"     Expected : Displays error message saying invalid index.","lastModifiedDate":"2021-10-20"},{"lineNumber":495,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":496,"author":{"gitId":"Nirmaleshwar"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":497,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":498,"author":{"gitId":"Nirmaleshwar"},"content":"  4. Test Case: `del_in i/x` where x is larger than list size.","lastModifiedDate":"2021-10-20"},{"lineNumber":499,"author":{"gitId":"Nirmaleshwar"},"content":"     Expected : Similar error message as before.","lastModifiedDate":"2021-10-20"},{"lineNumber":500,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":501,"author":{"gitId":"Nirmaleshwar"},"content":"- #### _List Income/ Expense entries_","lastModifiedDate":"2021-10-20"},{"lineNumber":502,"author":{"gitId":"Nirmaleshwar"},"content":"  1. Test Case: `list_ex` or `list_in` \u003c/p\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":503,"author":{"gitId":"Nirmaleshwar"},"content":"     Expected : Lists all entries added so far.","lastModifiedDate":"2021-10-20"},{"lineNumber":504,"author":{"gitId":"Nirmaleshwar"},"content":"  ","lastModifiedDate":"2021-10-20"},{"lineNumber":505,"author":{"gitId":"Nirmaleshwar"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":506,"author":{"gitId":"Nirmaleshwar"},"content":"  ","lastModifiedDate":"2021-10-20"},{"lineNumber":507,"author":{"gitId":"Nirmaleshwar"},"content":"  2. Test Case: `list_ex` or `list_in` but no items in both lists.","lastModifiedDate":"2021-10-20"},{"lineNumber":508,"author":{"gitId":"Nirmaleshwar"},"content":"     Expected : Displays message saying no items in list.","lastModifiedDate":"2021-10-20"},{"lineNumber":509,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":510,"author":{"gitId":"Nirmaleshwar"},"content":"### JUnit Testing ","lastModifiedDate":"2021-10-20"},{"lineNumber":511,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":512,"author":{"gitId":"Nirmaleshwar"},"content":"JUnit testing modules are available in the test folder. They can be run separately or all together based on developer requirements.","lastModifiedDate":"2021-10-20"},{"lineNumber":513,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":514,"author":{"gitId":"Nirmaleshwar"},"content":"Below is a list of the currently available tests:","lastModifiedDate":"2021-10-20"},{"lineNumber":515,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":516,"author":{"gitId":"Nirmaleshwar"},"content":"- _CommandTest:_ Tests if commands like add, delete, list etc. are calling their respective methods and providing with the appropriate parameters.","lastModifiedDate":"2021-10-20"},{"lineNumber":517,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":518,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":519,"author":{"gitId":"Nirmaleshwar"},"content":"- _DataManagerTest:_ Tests the data saving function of program.","lastModifiedDate":"2021-10-20"},{"lineNumber":520,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":521,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":522,"author":{"gitId":"Nirmaleshwar"},"content":"- _DukeTest:_ Used as driver to run main().","lastModifiedDate":"2021-10-20"},{"lineNumber":523,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":524,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":525,"author":{"gitId":"Nirmaleshwar"},"content":"- _ExpenseTest:_ Tests if expense entries are processed correctly into their appropriate attributes.","lastModifiedDate":"2021-10-20"},{"lineNumber":526,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":527,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":528,"author":{"gitId":"Nirmaleshwar"},"content":"- _IncomeTest:_ Tests if income entries are processed into their appropriate attributes.","lastModifiedDate":"2021-10-20"},{"lineNumber":529,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":530,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":531,"author":{"gitId":"Nirmaleshwar"},"content":"- _FinancialTrackerTest:_ ","lastModifiedDate":"2021-10-20"},{"lineNumber":532,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":533,"author":{"gitId":"Nirmaleshwar"},"content":"### Gradle Daemon Testing","lastModifiedDate":"2021-10-20"},{"lineNumber":534,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":535,"author":{"gitId":"Nirmaleshwar"},"content":"Intellij comes with an in-built Gradle Daemon that can be used to run the following test:","lastModifiedDate":"2021-10-20"},{"lineNumber":536,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":537,"author":{"gitId":"Nirmaleshwar"},"content":"- `.\\gradlew test` to check if all test files have passed.","lastModifiedDate":"2021-10-20"},{"lineNumber":538,"author":{"gitId":"kyun99"},"content":"- `.\\gradlew checkStyleTest` to check if test files comply with certain coding standards and conventions.","lastModifiedDate":"2021-11-07"},{"lineNumber":539,"author":{"gitId":"Nirmaleshwar"},"content":"- `.\\gradlew checkStyleMain` to check if main program complies with all JAVA coding standards.","lastModifiedDate":"2021-10-20"},{"lineNumber":540,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":541,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":542,"author":{"gitId":"Nirmaleshwar"},"content":"### I/O Re-direction Testing","lastModifiedDate":"2021-10-20"},{"lineNumber":543,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":544,"author":{"gitId":"Nirmaleshwar"},"content":"This form of testing involves loading sample data stored in the `text-ui-test` folder. It can be performed as follows:","lastModifiedDate":"2021-10-20"},{"lineNumber":545,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":546,"author":{"gitId":"Nirmaleshwar"},"content":"1. Enter new sample data or use the pre-existing test data that can be found in the `input.txt` file.","lastModifiedDate":"2021-10-20"},{"lineNumber":547,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":548,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":549,"author":{"gitId":"Nirmaleshwar"},"content":"3. Open CLI terminal and navigate to the `text-ui-test` directory using the following command - `cd /text-ui-test`","lastModifiedDate":"2021-10-20"},{"lineNumber":550,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":551,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":552,"author":{"gitId":"Nirmaleshwar"},"content":"2. Run `.\\runtest.bat` in CLI and see if you receive the message `\"Test Passed!\"`.","lastModifiedDate":"2021-10-20"},{"lineNumber":553,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":554,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":555,"author":{"gitId":"Nirmaleshwar"},"content":"3. The IDE will compare the output in the `EXPECTED.TXT` and `ACTUAL.TXT` files to see if they are exactly the same to pass this test.","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kyun99":68,"AnShengLee":149,"KZQ1999":77,"Nirmaleshwar":125,"jonathanlkw":104,"-":32}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KZQ1999"},"content":"# Stonks XD","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"KZQ1999"},"content":"Stonks XD is your go-to smart money management application that is able to:","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"KZQ1999"},"content":"- track your daily expenses","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"KZQ1999"},"content":"- set/adjust your spending limits","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"KZQ1999"},"content":"- provide you with helpful financial tips and insights","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"KZQ1999"},"content":"It is optimised as a daily journal, so you can key in your entries while you unwind at the end of the day.","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"KZQ1999"},"content":"It also allows you to view your financial records in different currencies through both text and graphs,","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"KZQ1999"},"content":"so you can use this application anywhere around the world!","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"KZQ1999":9,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"# Stonks XD User Guide","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"Nirmaleshwar"},"content":"![](https://melmagazine.com/wp-content/uploads/2019/07/Stonks_Meme.jpg)","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"Stonks XD is your go-to smart money management application that is able to: ","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"- track your daily expenses ","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"KZQ1999"},"content":"- set/adjust your spending limits","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":"- provide you with helpful financial tips and insights","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"jonathanlkw"},"content":"It is optimised as a daily journal, so you can key in your entries while you unwind at the end of the day. ","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"jonathanlkw"},"content":"It also allows you to view your financial records in different currencies through both text and graphs,","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"jonathanlkw"},"content":"so you can use this application anywhere around the world!","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"jonathanlkw"},"content":"With this guide, you will be able to learn how to use all the functionalities of this application through step-by-step instructions ","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":"without having to learn how to write a single line of code.","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"jonathanlkw"},"content":"Before you learn how to use the app, take a look at the [quickstart](#quick-start) guide on how to install and prepare the application for use.","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"KZQ1999"},"content":"---","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"AnShengLee"},"content":"## Table of Contents","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"kyun99"},"content":"1. [Quick Start](#1-quick-start)","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"kyun99"},"content":"2. [Features](#2-features)","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"KZQ1999"},"content":"   2.1 Help ","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"KZQ1999"},"content":"   * [View all possible commands: `help`](#view-all-possible-commands-help)","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"KZQ1999"},"content":" ","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"KZQ1999"},"content":"   2.2 Add / Delete Entries","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"KZQ1999"},"content":"   * [Create expense entry: `add_ex`](#create-expense-entry-add_ex)","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"KZQ1999"},"content":"   * [Create expense entry with date: `add_ex_d`](#create-expense-entry-with-date-add_ex_d)","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"KZQ1999"},"content":"   * [Delete expense entry: `del_ex`](#delete-expense-entry-del_ex)","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"KZQ1999"},"content":"   * [Create income entry: `add_in`](#create-income-entry-add_in)","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"KZQ1999"},"content":"   * [Create income entry with date: `add_in_d`](#create-income-entry-with-date-add_in_d)","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"KZQ1999"},"content":"   * [Delete income entry: `del_in`](#delete-income-entry-del_in)","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"KZQ1999"},"content":"   2.3 List / View information","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"KZQ1999"},"content":"   * [List all expense entries: `list_ex`](#list-all-expense-entries-list_ex)","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"KZQ1999"},"content":"   * [List all income entries: `list_in`](#list-all-income-entries-list_in)","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"KZQ1999"},"content":"   * [View total expense: `total_ex`](#view-total-expense-total_ex)","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"KZQ1999"},"content":"   * [View total income: `total_in`](#view-total-income-total_in)","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"KZQ1999"},"content":"   * [View total balance: `balance`](#view-total-balance-balance)","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"KZQ1999"},"content":"   * [Show total expense between 2 dates: `btw_ex`](#show-total-expense-between-2-dates-btw_ex)","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"KZQ1999"},"content":"   * [Show total income between 2 dates: `btw_in `](#show-total-income-between-2-dates-btw_in)","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"KZQ1999"},"content":"   2.4 Finding Entries","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"KZQ1999"},"content":"   * [Find entry using date: `find DATE`](#find-entry-using-date-find-ddmmyyyy)","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"KZQ1999"},"content":"   * [Find entry using keyword: `find KEYWORD`](#find-entry-using-keyword-find-keyword)","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"KZQ1999"},"content":"   2.5 Budget Setting ","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"KZQ1999"},"content":"   * [Set budget: `set_budget`](#set-budget-set_budget)","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"KZQ1999"},"content":"   * [Check budget: `check_budget`](#check-budget-check_budget)","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"KZQ1999"},"content":"   * [Set_threshold: `set_threshold`](#set-threshold-set_threshold)","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"KZQ1999"},"content":"   2.6 Currency Conversion","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"KZQ1999"},"content":"   * [Set currency: `set_curr`](#set-currency-set_curr)","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"KZQ1999"},"content":"   * [Check current currency: `check_curr`](#check-current-currency-check_curr)","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"KZQ1999"},"content":"   2.7 Graphing","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"KZQ1999"},"content":"   * [View yearly report: `show_graph`](#view-yearly-report-show_graph)","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"KZQ1999"},"content":"   2.8 Clear All Entries","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"KZQ1999"},"content":"   * [Clear all entries: `clear_all_entries`](#clear-all-entries-clear_all_entries)","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"KZQ1999"},"content":"    ","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"KZQ1999"},"content":"   2.9 Terminating Program","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"KZQ1999"},"content":"   * [Terminate program: `end`](#terminate-program-end)","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"KZQ1999"},"content":"   2.10 Saving of Data","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"KZQ1999"},"content":"   * [Saving of data](#saving-of-data)","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"AnShengLee"},"content":"   ","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"kyun99"},"content":"3. [FAQ](#3-faq)","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"kyun99"},"content":"4. [Command Summary](#4-command-summary)","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"KZQ1999"},"content":"---","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"KZQ1999"},"content":"## 1. Quick Start","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":84,"author":{"gitId":"Nirmaleshwar"},"content":"2. Download the latest version of `StonksXD.jar` from [here](https://github.com/AY2122S1-CS2113T-T12-3/tp/releases).","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"AnShengLee"},"content":"3. Copy the file to the folder you want to use as the home folder for your `Stonks XD`.","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"AnShengLee"},"content":"4. Open the Command-Line interface (CLI) and navigate to the directory where you saved the `.jar` file and run ","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"AnShengLee"},"content":"`java -jar StonksXD.jar` in the command line. `Stonks XD` will start up.","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"KZQ1999"},"content":"5. The image shown below is what the program should look like for first time users like yourself!   ","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"KZQ1999"},"content":"![image](https://user-images.githubusercontent.com/69465661/140613991-7848997a-e97b-4c65-825a-1e126590b6a0.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"KZQ1999"},"content":"6. In `Stonks XD`, type the command in the CLI and press `Enter` on your keyboard to execute it. (Tip: type `help` ","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"AnShengLee"},"content":"to show all available commands and their format.)","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"KZQ1999"},"content":"7. Use the format `add_ex d/DESCRIPTION a/AMOUNT c/CATEGORY` to add expense entries to `Stonks XD`.","lastModifiedDate":"2021-11-07"},{"lineNumber":95,"author":{"gitId":"KZQ1999"},"content":"8. Use the format `add_in d/DESCRIPTION a/AMOUNT c/CATEGORY` to add income entries to `Stonks XD`.","lastModifiedDate":"2021-11-07"},{"lineNumber":96,"author":{"gitId":"KZQ1999"},"content":"9. Type `balance` to view your net saving or type `show_graph` to see an overview of your finances!","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"KZQ1999"},"content":"10. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":99,"author":{"gitId":"KZQ1999"},"content":"---","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"KZQ1999"},"content":"## 2. Features ","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":103,"author":{"gitId":"AnShengLee"},"content":"### Notes","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"jonathanlkw"},"content":"- Words in `UPPER_CASE` are the parameters to be supplied by you, the user.","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"jonathanlkw"},"content":"e.g. in add `a/AMOUNT`, `AMOUNT` is a parameter which can be typed as `a/12.30`.","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"AnShengLee"},"content":"- Parameters can be in any order.","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"AnShengLee"},"content":"e.g. if the command specifies `c/CATEGORY a/AMOUNT`, `a/AMOUNT c/CATEGORY` is also acceptable.","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"AnShengLee"},"content":"- If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence ","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"AnShengLee"},"content":"of the parameter will be taken. e.g. if you gave `a/100 a/1000`, only `a/1000` will be read in.","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"AnShengLee"},"content":"- Most features below have a collapsible section that allows you to see the run time output. Do check them out if you ","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"AnShengLee"},"content":"want to visualize what the product looks like!","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":114,"author":{"gitId":"KZQ1999"},"content":"---","lastModifiedDate":"2021-11-01"},{"lineNumber":115,"author":{"gitId":"KZQ1999"},"content":"### 2.1 Help","lastModifiedDate":"2021-11-01"},{"lineNumber":116,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":117,"author":{"gitId":"AnShengLee"},"content":"### View all possible commands: `help`","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"jonathanlkw"},"content":"This shows a list of all possible commands. Use this command when you are lost while using the app!","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"Nirmaleshwar"},"content":"Format: `help`","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cdetails\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"KZQ1999"},"content":"\u003csummary\u003e ▼ Expected output in run window (Click to expand!)\u003c/summary\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":125,"author":{"gitId":"KZQ1999"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"Nirmaleshwar"},"content":"This is a list of commands and their format!","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"Nirmaleshwar"},"content":"List Out All Commands: help","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"KZQ1999"},"content":"Adding Expense: add_ex d/DESCRIPTION a/AMOUNT c/CATEGORY","lastModifiedDate":"2021-11-07"},{"lineNumber":131,"author":{"gitId":"KZQ1999"},"content":"Adding Expense With Date (Date Format: DD/MM/YYYY): add_ex_d d/DESCRIPTION a/AMOUNT c/CATEGORY D/DATE","lastModifiedDate":"2021-11-07"},{"lineNumber":132,"author":{"gitId":"Nirmaleshwar"},"content":"Deleting Expense: del_ex i/INDEX","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"KZQ1999"},"content":"Adding Income: add_in d/DESCRIPTION a/AMOUNT c/CATEGORY","lastModifiedDate":"2021-11-07"},{"lineNumber":134,"author":{"gitId":"KZQ1999"},"content":"Adding Income With Date (Date Format: DD/MM/YYYY): add_in_d d/DESCRIPTION a/AMOUNT c/CATEGORY D/DATE","lastModifiedDate":"2021-11-07"},{"lineNumber":135,"author":{"gitId":"Nirmaleshwar"},"content":"Deleting Income: del_in i/INDEX","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"KZQ1999"},"content":"Listing Expense: list_ex","lastModifiedDate":"2021-11-01"},{"lineNumber":137,"author":{"gitId":"Nirmaleshwar"},"content":"Listing Income: list_in","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"KZQ1999"},"content":"Show Total Expense: total_ex","lastModifiedDate":"2021-11-01"},{"lineNumber":139,"author":{"gitId":"Nirmaleshwar"},"content":"Show Total Income: total_in","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"Nirmaleshwar"},"content":"To Display Total Balance: balance","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"KZQ1999"},"content":"Show Total Expense between 2 dates (Date Format: DD/MM/YYYY): btw_ex s/START_DATE e/END_DATE","lastModifiedDate":"2021-11-01"},{"lineNumber":142,"author":{"gitId":"Nirmaleshwar"},"content":"Show Total Income between 2 dates (Date Format: DD/MM/YYYY): btw_in s/START_DATE e/END_DATE","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"KZQ1999"},"content":"To Find Using Date: find DD/MM/YYYY","lastModifiedDate":"2021-11-01"},{"lineNumber":144,"author":{"gitId":"KZQ1999"},"content":"To Find Based On Keyword: find KEYWORD","lastModifiedDate":"2021-11-01"},{"lineNumber":145,"author":{"gitId":"KZQ1999"},"content":"To Set Budgets: set_budget c/CATEGORY a/AMOUNT","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"KZQ1999"},"content":"To Check Budgets: check_budget c/CATEGORY","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"KZQ1999"},"content":"To Set Threshold Value for Reminders: set_threshold t/THRESHOLD","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"Nirmaleshwar"},"content":"To change entries into a different currency: set_curr c/CURRENCY","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"Nirmaleshwar"},"content":"To check the currency that entries are currently in: check_curr","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"KZQ1999"},"content":"Lists available currency types for conversion: list_curr","lastModifiedDate":"2021-11-07"},{"lineNumber":151,"author":{"gitId":"KZQ1999"},"content":"To View Your Yearly Report (Year format: YYYY): show_graph [Y/YEAR]","lastModifiedDate":"2021-11-07"},{"lineNumber":152,"author":{"gitId":"KZQ1999"},"content":"To Clear All Expense And Income Entries: clear_all_entries","lastModifiedDate":"2021-11-01"},{"lineNumber":153,"author":{"gitId":"Nirmaleshwar"},"content":"To Terminate The Program: end","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"KZQ1999"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"Nirmaleshwar"},"content":"\u003c/details\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"KZQ1999"},"content":"---","lastModifiedDate":"2021-11-01"},{"lineNumber":160,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":161,"author":{"gitId":"KZQ1999"},"content":"### 2.2 Add / Delete Entries","lastModifiedDate":"2021-11-01"},{"lineNumber":162,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":163,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":164,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":165,"author":{"gitId":"AnShengLee"},"content":"### Create expense entry: `add_ex`","lastModifiedDate":"2021-10-11"},{"lineNumber":166,"author":{"gitId":"jonathanlkw"},"content":"This command adds an expense entry to your list. Use this to keep track of your daily expenses!","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"KZQ1999"},"content":"Format: `add_ex d/DESCRIPTION a/AMOUNT c/CATEGORY`","lastModifiedDate":"2021-11-07"},{"lineNumber":169,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":170,"author":{"gitId":"AnShengLee"},"content":"- `DESCRIPTION` has to be non-empty.","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"KZQ1999"},"content":"- `AMOUNT` has to be a positive amount that has a maximum of 2 decimal points.","lastModifiedDate":"2021-11-07"},{"lineNumber":172,"author":{"gitId":"jonathanlkw"},"content":"- `CATEGORY` has to be either `food`, `transport`, `bills`, `medical`, `entertainment`, or `misc`.","lastModifiedDate":"2021-10-27"},{"lineNumber":173,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"kyun99"},"content":"Note:","lastModifiedDate":"2021-10-31"},{"lineNumber":175,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":176,"author":{"gitId":"kyun99"},"content":"- The default date of the added expense will be the date in which the expense is added.","lastModifiedDate":"2021-10-31"},{"lineNumber":177,"author":{"gitId":"KZQ1999"},"content":"- Each expense entry can only have a maximum value of 1,000,000 (1 Million).","lastModifiedDate":"2021-11-07"},{"lineNumber":178,"author":{"gitId":"KZQ1999"},"content":"- The sum of all your entries cannot be more than 100,000,000,000 (100 Billion).","lastModifiedDate":"2021-11-01"},{"lineNumber":179,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":180,"author":{"gitId":"AnShengLee"},"content":"Examples:","lastModifiedDate":"2021-10-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":182,"author":{"gitId":"Nirmaleshwar"},"content":"- `add_ex d/KFC lunch a/10.20 c/food` Adds an expense entry regarding lunch that costs $10.20.","lastModifiedDate":"2021-10-19"},{"lineNumber":183,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cdetails\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":184,"author":{"gitId":"KZQ1999"},"content":"\u003csummary\u003e ▼ Expected output in run window \u003c/summary\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":185,"author":{"gitId":"KZQ1999"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":187,"author":{"gitId":"Nirmaleshwar"},"content":"Your most recent spending: ","lastModifiedDate":"2021-10-19"},{"lineNumber":188,"author":{"gitId":"KZQ1999"},"content":"[E] KFC lunch - $10.20 (19/10/2021)","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"KZQ1999"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":191,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":192,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":193,"author":{"gitId":"KZQ1999"},"content":"Note: Budget reminders of different kinds might also appear when expenses are added! ","lastModifiedDate":"2021-11-07"},{"lineNumber":194,"author":{"gitId":"KZQ1999"},"content":"They might look something like this.","lastModifiedDate":"2021-11-07"},{"lineNumber":195,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":196,"author":{"gitId":"KZQ1999"},"content":"\u003cpre\u003e-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-07"},{"lineNumber":197,"author":{"gitId":"KZQ1999"},"content":"You are almost reaching the OCTOBER OVERALL budget: $48.40/$50.00","lastModifiedDate":"2021-11-07"},{"lineNumber":198,"author":{"gitId":"KZQ1999"},"content":"Consider readjusting your OCTOBER OVERALL budget!","lastModifiedDate":"2021-11-07"},{"lineNumber":199,"author":{"gitId":"KZQ1999"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-07"},{"lineNumber":200,"author":{"gitId":"KZQ1999"},"content":"You have exceeded the OCTOBER FOOD budget: $30.40/$30.00","lastModifiedDate":"2021-11-07"},{"lineNumber":201,"author":{"gitId":"KZQ1999"},"content":"Since you have not yet exceeded your OCTOBER OVERALL budget: $48.40/$50.00","lastModifiedDate":"2021-11-07"},{"lineNumber":202,"author":{"gitId":"KZQ1999"},"content":"You can directly increase your OCTOBER FOOD budget up to $32.00!","lastModifiedDate":"2021-11-07"},{"lineNumber":203,"author":{"gitId":"KZQ1999"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-07"},{"lineNumber":204,"author":{"gitId":"KZQ1999"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":205,"author":{"gitId":"KZQ1999"},"content":"\u003c/details\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":206,"author":{"gitId":"KZQ1999"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":207,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":208,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":209,"author":{"gitId":"KZQ1999"},"content":"### Create expense entry with date: `add_ex_d`","lastModifiedDate":"2021-11-07"},{"lineNumber":210,"author":{"gitId":"KZQ1999"},"content":"This command adds an expense entry to your list with a date of your choice!","lastModifiedDate":"2021-11-07"},{"lineNumber":211,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":212,"author":{"gitId":"KZQ1999"},"content":"Format: `add_ex_d d/DESCRIPTION a/AMOUNT c/CATEGORY D/DATE`","lastModifiedDate":"2021-11-07"},{"lineNumber":213,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":214,"author":{"gitId":"KZQ1999"},"content":"- `DESCRIPTION` has to be non-empty.","lastModifiedDate":"2021-11-07"},{"lineNumber":215,"author":{"gitId":"KZQ1999"},"content":"- `AMOUNT` has to be a positive amount that has a maximum of 2 decimal points.","lastModifiedDate":"2021-11-07"},{"lineNumber":216,"author":{"gitId":"KZQ1999"},"content":"- `CATEGORY` has to be either `food`, `transport`, `bills`, `medical`, `entertainment`, or `misc`.","lastModifiedDate":"2021-11-07"},{"lineNumber":217,"author":{"gitId":"KZQ1999"},"content":"- `DATE` must be in the DD/MM/YYYY format.","lastModifiedDate":"2021-11-07"},{"lineNumber":218,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":219,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":220,"author":{"gitId":"KZQ1999"},"content":"Note:","lastModifiedDate":"2021-11-07"},{"lineNumber":221,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":222,"author":{"gitId":"KZQ1999"},"content":"- Each expense entry can only have a maximum value of 1,000,000 (1 Million).","lastModifiedDate":"2021-11-07"},{"lineNumber":223,"author":{"gitId":"KZQ1999"},"content":"- The sum of all your entries cannot be more than 100,000,000,000 (100 Billion).","lastModifiedDate":"2021-11-07"},{"lineNumber":224,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":225,"author":{"gitId":"KZQ1999"},"content":"Examples:","lastModifiedDate":"2021-11-07"},{"lineNumber":226,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":227,"author":{"gitId":"KZQ1999"},"content":"- `add_ex_d d/McDonalds dinner a/7.50 c/food D/20/10/2021` Adds a dinner expense entry that costs $7.50 that is made on 20th October 2021.","lastModifiedDate":"2021-11-07"},{"lineNumber":228,"author":{"gitId":"KZQ1999"},"content":"\u003cdetails\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":229,"author":{"gitId":"KZQ1999"},"content":"\u003csummary\u003e ▼ Expected output in run window \u003c/summary\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":230,"author":{"gitId":"kyun99"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":231,"author":{"gitId":"kyun99"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-02"},{"lineNumber":232,"author":{"gitId":"kyun99"},"content":"Your most recent spending: ","lastModifiedDate":"2021-11-02"},{"lineNumber":233,"author":{"gitId":"KZQ1999"},"content":"[E] McDonalds dinner - $7.50 (20/10/2021)","lastModifiedDate":"2021-11-07"},{"lineNumber":234,"author":{"gitId":"kyun99"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-02"},{"lineNumber":235,"author":{"gitId":"kyun99"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":236,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":237,"author":{"gitId":"jonathanlkw"},"content":"Note: Budget reminders of different kinds might also appear when expenses are added!","lastModifiedDate":"2021-10-27"},{"lineNumber":238,"author":{"gitId":"jonathanlkw"},"content":"They might look something like this.","lastModifiedDate":"2021-10-27"},{"lineNumber":239,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":240,"author":{"gitId":"jonathanlkw"},"content":"\u003cpre\u003e-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":241,"author":{"gitId":"jonathanlkw"},"content":"You are almost reaching the OCTOBER OVERALL budget: $48.40/$50.00","lastModifiedDate":"2021-10-27"},{"lineNumber":242,"author":{"gitId":"jonathanlkw"},"content":"Consider readjusting your OCTOBER OVERALL budget!","lastModifiedDate":"2021-10-27"},{"lineNumber":243,"author":{"gitId":"jonathanlkw"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":244,"author":{"gitId":"jonathanlkw"},"content":"You have exceeded the OCTOBER FOOD budget: $30.40/$30.00","lastModifiedDate":"2021-10-27"},{"lineNumber":245,"author":{"gitId":"jonathanlkw"},"content":"Since you have not yet exceeded your OCTOBER OVERALL budget: $48.40/$50.00","lastModifiedDate":"2021-10-27"},{"lineNumber":246,"author":{"gitId":"jonathanlkw"},"content":"You can directly increase your OCTOBER FOOD budget up to $32.00!","lastModifiedDate":"2021-10-27"},{"lineNumber":247,"author":{"gitId":"jonathanlkw"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":248,"author":{"gitId":"jonathanlkw"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":249,"author":{"gitId":"Nirmaleshwar"},"content":"\u003c/details\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":250,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":252,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":253,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":254,"author":{"gitId":"AnShengLee"},"content":"### Delete expense entry: `del_ex`","lastModifiedDate":"2021-10-11"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":256,"author":{"gitId":"KZQ1999"},"content":"You can delete an incorrect expense entry by providing the index of said entry. ","lastModifiedDate":"2021-11-07"},{"lineNumber":257,"author":{"gitId":"jonathanlkw"},"content":"Index can be found via the `list_ex` command below.","lastModifiedDate":"2021-10-27"},{"lineNumber":258,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":259,"author":{"gitId":"Nirmaleshwar"},"content":"Format: `del_ex i/INDEX`","lastModifiedDate":"2021-10-19"},{"lineNumber":260,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":261,"author":{"gitId":"Nirmaleshwar"},"content":"- `INDEX` has to be non-empty.","lastModifiedDate":"2021-10-19"},{"lineNumber":262,"author":{"gitId":"Nirmaleshwar"},"content":"- `INDEX` has to be a valid non-negative integer.","lastModifiedDate":"2021-10-19"},{"lineNumber":263,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":264,"author":{"gitId":"Nirmaleshwar"},"content":"Examples:","lastModifiedDate":"2021-10-19"},{"lineNumber":265,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":266,"author":{"gitId":"Nirmaleshwar"},"content":"- `del_ex i/1` Deletes the 1st entry from the expense list.","lastModifiedDate":"2021-10-19"},{"lineNumber":267,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":268,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cdetails\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":269,"author":{"gitId":"KZQ1999"},"content":"\u003csummary\u003e ▼ Expected output in run window \u003c/summary\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":270,"author":{"gitId":"KZQ1999"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":271,"author":{"gitId":"Nirmaleshwar"},"content":"Before deletion the expense list is as follows:","lastModifiedDate":"2021-10-19"},{"lineNumber":272,"author":{"gitId":"KZQ1999"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":273,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":274,"author":{"gitId":"Nirmaleshwar"},"content":"Below is a list of all of your recent spending!","lastModifiedDate":"2021-10-19"},{"lineNumber":275,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":276,"author":{"gitId":"KZQ1999"},"content":"1: [E] pillow - $500.00 (18/10/2021)","lastModifiedDate":"2021-10-25"},{"lineNumber":277,"author":{"gitId":"KZQ1999"},"content":"2: [E] bought cookies - $500.00 (18/01/2021)","lastModifiedDate":"2021-10-25"},{"lineNumber":278,"author":{"gitId":"KZQ1999"},"content":"3: [E] bought home - $555.00 (18/07/2021)","lastModifiedDate":"2021-10-25"},{"lineNumber":279,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":280,"author":{"gitId":"KZQ1999"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":281,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":282,"author":{"gitId":"KZQ1999"},"content":"When command \u003ccode\u003edel_ex i/1\u003c/code\u003e is given, you get the following message:","lastModifiedDate":"2021-11-01"},{"lineNumber":283,"author":{"gitId":"KZQ1999"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":284,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":285,"author":{"gitId":"Nirmaleshwar"},"content":"You removed this: ","lastModifiedDate":"2021-10-19"},{"lineNumber":286,"author":{"gitId":"KZQ1999"},"content":"[E] pillow - $500.00 (18/10/2021)","lastModifiedDate":"2021-10-25"},{"lineNumber":287,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":288,"author":{"gitId":"KZQ1999"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":289,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":290,"author":{"gitId":"Nirmaleshwar"},"content":"After deletion, we see that the list has removed the previous first entry!","lastModifiedDate":"2021-10-19"},{"lineNumber":291,"author":{"gitId":"KZQ1999"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":292,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":293,"author":{"gitId":"KZQ1999"},"content":"1: [E] bought cookies - $500.00 (18/01/2021)","lastModifiedDate":"2021-10-25"},{"lineNumber":294,"author":{"gitId":"KZQ1999"},"content":"2: [E] bought home - $555.00 (18/07/2021)","lastModifiedDate":"2021-10-25"},{"lineNumber":295,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":296,"author":{"gitId":"KZQ1999"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":297,"author":{"gitId":"Nirmaleshwar"},"content":"\u003c/details\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":298,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":300,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":301,"author":{"gitId":"AnShengLee"},"content":"### Create income entry: `add_in`","lastModifiedDate":"2021-10-11"},{"lineNumber":302,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":303,"author":{"gitId":"jonathanlkw"},"content":"This adds an income entry to your list. Use this to keep track of your income!","lastModifiedDate":"2021-10-27"},{"lineNumber":304,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":305,"author":{"gitId":"KZQ1999"},"content":"Format: `add_in d/DESCRIPTION a/AMOUNT c/CATEGORY`","lastModifiedDate":"2021-11-07"},{"lineNumber":306,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":307,"author":{"gitId":"Nirmaleshwar"},"content":"- `DESCRIPTION` has to be non-empty.","lastModifiedDate":"2021-10-19"},{"lineNumber":308,"author":{"gitId":"KZQ1999"},"content":"- `AMOUNT` has to be a positive amount that has a maximum of 2 decimal points.","lastModifiedDate":"2021-11-07"},{"lineNumber":309,"author":{"gitId":"kyun99"},"content":"- `CATEGORY` has to be either `salary`, `allowance`, `others` or `adhoc`.","lastModifiedDate":"2021-10-22"},{"lineNumber":310,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":311,"author":{"gitId":"kyun99"},"content":"Note:","lastModifiedDate":"2021-10-31"},{"lineNumber":312,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":313,"author":{"gitId":"kyun99"},"content":"- The default date of the added income will be the date in which the income is added.","lastModifiedDate":"2021-10-31"},{"lineNumber":314,"author":{"gitId":"KZQ1999"},"content":"- Each income entry can only have a maximum value of 1,000,000 (1 Million).","lastModifiedDate":"2021-11-07"},{"lineNumber":315,"author":{"gitId":"KZQ1999"},"content":"- The sum of all your entries cannot be more than 100,000,000,000 (100 Billion).","lastModifiedDate":"2021-11-01"},{"lineNumber":316,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":317,"author":{"gitId":"Nirmaleshwar"},"content":"Examples:","lastModifiedDate":"2021-10-19"},{"lineNumber":318,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":319,"author":{"gitId":"kyun99"},"content":"- `add_in d/lunch money a/1000 c/allowance` Adds an income entry regarding a lunch allowance of $1000.","lastModifiedDate":"2021-11-02"},{"lineNumber":320,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":321,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cdetails\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":322,"author":{"gitId":"KZQ1999"},"content":"  \u003csummary\u003e ▼ Expected output in run window \u003c/summary\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":323,"author":{"gitId":"KZQ1999"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":324,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":325,"author":{"gitId":"Nirmaleshwar"},"content":"Your most recent earning: ","lastModifiedDate":"2021-10-19"},{"lineNumber":326,"author":{"gitId":"KZQ1999"},"content":"[I] lunch money - $1000.00 (19/10/2021)","lastModifiedDate":"2021-10-25"},{"lineNumber":327,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":328,"author":{"gitId":"KZQ1999"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":329,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":330,"author":{"gitId":"KZQ1999"},"content":"\u003c/details\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":331,"author":{"gitId":"KZQ1999"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":332,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":333,"author":{"gitId":"KZQ1999"},"content":"### Create income entry with date: `add_in_d`","lastModifiedDate":"2021-11-07"},{"lineNumber":334,"author":{"gitId":"KZQ1999"},"content":"This command adds an income entry to your list with a date of your choice!","lastModifiedDate":"2021-11-07"},{"lineNumber":335,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":336,"author":{"gitId":"KZQ1999"},"content":"Format: `add_in_d d/DESCRIPTION a/AMOUNT c/CATEGORY D/DATE`","lastModifiedDate":"2021-11-07"},{"lineNumber":337,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":338,"author":{"gitId":"KZQ1999"},"content":"- `DESCRIPTION` has to be non-empty.","lastModifiedDate":"2021-11-07"},{"lineNumber":339,"author":{"gitId":"KZQ1999"},"content":"- `AMOUNT` has to be a positive amount that has a maximum of 2 decimal points.","lastModifiedDate":"2021-11-07"},{"lineNumber":340,"author":{"gitId":"KZQ1999"},"content":"- `CATEGORY` has to be either `salary`, `allowance`, `others` or `adhoc`.","lastModifiedDate":"2021-11-07"},{"lineNumber":341,"author":{"gitId":"KZQ1999"},"content":"- `DATE` must be in the DD/MM/YYYY format.","lastModifiedDate":"2021-11-07"},{"lineNumber":342,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":343,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":344,"author":{"gitId":"KZQ1999"},"content":"Note:","lastModifiedDate":"2021-11-07"},{"lineNumber":345,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":346,"author":{"gitId":"KZQ1999"},"content":"- Each income entry can only have a maximum value of 1,000,000 (1 Million).","lastModifiedDate":"2021-11-07"},{"lineNumber":347,"author":{"gitId":"KZQ1999"},"content":"- The sum of all your entries cannot be more than 100,000,000,000 (100 Billion).","lastModifiedDate":"2021-11-07"},{"lineNumber":348,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":349,"author":{"gitId":"KZQ1999"},"content":"Examples:","lastModifiedDate":"2021-11-07"},{"lineNumber":350,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":351,"author":{"gitId":"KZQ1999"},"content":"- `add_in_d/december\u0027s bonus a/5000 c/salary D/26/12/2021` Adds an income entry regarding a salary bonus of $5000 for 26th December 2021.","lastModifiedDate":"2021-11-07"},{"lineNumber":352,"author":{"gitId":"KZQ1999"},"content":"\u003cdetails\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":353,"author":{"gitId":"KZQ1999"},"content":"\u003csummary\u003e ▼ Expected output in run window \u003c/summary\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":354,"author":{"gitId":"kyun99"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":355,"author":{"gitId":"kyun99"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-02"},{"lineNumber":356,"author":{"gitId":"kyun99"},"content":"Your most recent earning: ","lastModifiedDate":"2021-11-02"},{"lineNumber":357,"author":{"gitId":"kyun99"},"content":"[I] december\u0027s bonus - $5000.00 (26/12/2021)","lastModifiedDate":"2021-11-02"},{"lineNumber":358,"author":{"gitId":"kyun99"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-02"},{"lineNumber":359,"author":{"gitId":"kyun99"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":360,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":361,"author":{"gitId":"KZQ1999"},"content":"Note: Budget reminders of different kinds might also appear when expenses are added!","lastModifiedDate":"2021-11-07"},{"lineNumber":362,"author":{"gitId":"KZQ1999"},"content":"They might look something like this.","lastModifiedDate":"2021-11-07"},{"lineNumber":363,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":364,"author":{"gitId":"KZQ1999"},"content":"\u003cpre\u003e-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-07"},{"lineNumber":365,"author":{"gitId":"KZQ1999"},"content":"You are almost reaching the OCTOBER OVERALL budget: $48.40/$50.00","lastModifiedDate":"2021-11-07"},{"lineNumber":366,"author":{"gitId":"KZQ1999"},"content":"Consider readjusting your OCTOBER OVERALL budget!","lastModifiedDate":"2021-11-07"},{"lineNumber":367,"author":{"gitId":"KZQ1999"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-07"},{"lineNumber":368,"author":{"gitId":"KZQ1999"},"content":"You have exceeded the OCTOBER FOOD budget: $30.40/$30.00","lastModifiedDate":"2021-11-07"},{"lineNumber":369,"author":{"gitId":"KZQ1999"},"content":"Since you have not yet exceeded your OCTOBER OVERALL budget: $48.40/$50.00","lastModifiedDate":"2021-11-07"},{"lineNumber":370,"author":{"gitId":"KZQ1999"},"content":"You can directly increase your OCTOBER FOOD budget up to $32.00!","lastModifiedDate":"2021-11-07"},{"lineNumber":371,"author":{"gitId":"KZQ1999"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-07"},{"lineNumber":372,"author":{"gitId":"KZQ1999"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":373,"author":{"gitId":"Nirmaleshwar"},"content":"\u003c/details\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":374,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":375,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":376,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":377,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":378,"author":{"gitId":"AnShengLee"},"content":"### Delete income entry: `del_in`","lastModifiedDate":"2021-10-11"},{"lineNumber":379,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":380,"author":{"gitId":"KZQ1999"},"content":"You can delete an incorrect income entry by providing the index of said entry.","lastModifiedDate":"2021-11-07"},{"lineNumber":381,"author":{"gitId":"jonathanlkw"},"content":"The index can be found using the `list_in` command found below.","lastModifiedDate":"2021-10-27"},{"lineNumber":382,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":383,"author":{"gitId":"Nirmaleshwar"},"content":"Format: `del_in i/INDEX`","lastModifiedDate":"2021-10-19"},{"lineNumber":384,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":385,"author":{"gitId":"Nirmaleshwar"},"content":"- `INDEX` has to be non-empty.","lastModifiedDate":"2021-10-19"},{"lineNumber":386,"author":{"gitId":"Nirmaleshwar"},"content":"- `INDEX` has to be a valid non-negative integer.","lastModifiedDate":"2021-10-19"},{"lineNumber":387,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":388,"author":{"gitId":"Nirmaleshwar"},"content":"Examples:","lastModifiedDate":"2021-10-19"},{"lineNumber":389,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":390,"author":{"gitId":"Nirmaleshwar"},"content":"- `del_in i/1` Deletes the 1st entry from the income list.","lastModifiedDate":"2021-10-19"},{"lineNumber":391,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":392,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cdetails\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":393,"author":{"gitId":"KZQ1999"},"content":"\u003csummary\u003e ▼ Expected output in run window \u003c/summary\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":394,"author":{"gitId":"KZQ1999"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":395,"author":{"gitId":"Nirmaleshwar"},"content":"Before deletion the income list is as follows:","lastModifiedDate":"2021-10-19"},{"lineNumber":396,"author":{"gitId":"KZQ1999"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":397,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":398,"author":{"gitId":"Nirmaleshwar"},"content":"Below is a list of all of your recent earnings!","lastModifiedDate":"2021-10-19"},{"lineNumber":399,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":400,"author":{"gitId":"KZQ1999"},"content":"1: [I] rob a bank - $800.00 (18/10/2021)","lastModifiedDate":"2021-10-25"},{"lineNumber":401,"author":{"gitId":"KZQ1999"},"content":"2: [I] rob a church - $300.00 (18/11/2021)","lastModifiedDate":"2021-10-25"},{"lineNumber":402,"author":{"gitId":"KZQ1999"},"content":"3: [I] rob a car - $400.00 (18/12/2021)","lastModifiedDate":"2021-10-25"},{"lineNumber":403,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":404,"author":{"gitId":"KZQ1999"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":405,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":406,"author":{"gitId":"kyun99"},"content":"When command \u003ccode\u003edel_in i/1\u003c/code\u003e is given, you get the following message:","lastModifiedDate":"2021-10-26"},{"lineNumber":407,"author":{"gitId":"KZQ1999"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":408,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":409,"author":{"gitId":"Nirmaleshwar"},"content":"You removed this: ","lastModifiedDate":"2021-10-19"},{"lineNumber":410,"author":{"gitId":"KZQ1999"},"content":"[I] rob a bank - $800.00 (18/10/2021)","lastModifiedDate":"2021-10-25"},{"lineNumber":411,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":412,"author":{"gitId":"KZQ1999"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":413,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":414,"author":{"gitId":"Nirmaleshwar"},"content":"After deletion, we see that the list has removed the previous first entry!","lastModifiedDate":"2021-10-19"},{"lineNumber":415,"author":{"gitId":"KZQ1999"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":416,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":417,"author":{"gitId":"KZQ1999"},"content":"1: [I] rob a church - $300.00 (18/11/2021)","lastModifiedDate":"2021-10-25"},{"lineNumber":418,"author":{"gitId":"KZQ1999"},"content":"2: [I] rob a car - $400.00 (18/12/2021)","lastModifiedDate":"2021-10-25"},{"lineNumber":419,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":420,"author":{"gitId":"KZQ1999"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":421,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":422,"author":{"gitId":"Nirmaleshwar"},"content":"\u003c/details\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":423,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":424,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":425,"author":{"gitId":"KZQ1999"},"content":"---","lastModifiedDate":"2021-11-01"},{"lineNumber":426,"author":{"gitId":"KZQ1999"},"content":"### 2.3 List / View information","lastModifiedDate":"2021-11-01"},{"lineNumber":427,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":428,"author":{"gitId":"KZQ1999"},"content":"### List all expense entries: `list_ex`","lastModifiedDate":"2021-11-01"},{"lineNumber":429,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":430,"author":{"gitId":"KZQ1999"},"content":"This displays the previously added expense entries in the form of a list.","lastModifiedDate":"2021-11-01"},{"lineNumber":431,"author":{"gitId":"KZQ1999"},"content":"Use this to find the index of an entry you want to delete.","lastModifiedDate":"2021-11-01"},{"lineNumber":432,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":433,"author":{"gitId":"KZQ1999"},"content":"Format: `list_ex`","lastModifiedDate":"2021-11-01"},{"lineNumber":434,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":435,"author":{"gitId":"KZQ1999"},"content":"\u003cdetails\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":436,"author":{"gitId":"KZQ1999"},"content":"\u003csummary\u003e ▼ Expected output in run window \u003c/summary\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":437,"author":{"gitId":"KZQ1999"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":438,"author":{"gitId":"KZQ1999"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":439,"author":{"gitId":"KZQ1999"},"content":"Below is a list of all of your recent spending!","lastModifiedDate":"2021-11-01"},{"lineNumber":440,"author":{"gitId":"KZQ1999"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":441,"author":{"gitId":"KZQ1999"},"content":"1: [E] bought cookies - $500.00 (18/01/2021)","lastModifiedDate":"2021-11-01"},{"lineNumber":442,"author":{"gitId":"KZQ1999"},"content":"2: [E] bought home - $555.00 (18/07/2021)","lastModifiedDate":"2021-11-01"},{"lineNumber":443,"author":{"gitId":"KZQ1999"},"content":"3: [E] bought car - $4777.00 (18/06/2021)","lastModifiedDate":"2021-11-01"},{"lineNumber":444,"author":{"gitId":"KZQ1999"},"content":"4: [E] bought condo - $87654888878.00 (18/05/2021)","lastModifiedDate":"2021-11-01"},{"lineNumber":445,"author":{"gitId":"KZQ1999"},"content":"5: [E] KFC lunch - $10.20 (19/10/2021)","lastModifiedDate":"2021-11-01"},{"lineNumber":446,"author":{"gitId":"KZQ1999"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":447,"author":{"gitId":"KZQ1999"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":448,"author":{"gitId":"KZQ1999"},"content":"\u003c/details\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":449,"author":{"gitId":"KZQ1999"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":450,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":451,"author":{"gitId":"AnShengLee"},"content":"### List all income entries: `list_in`","lastModifiedDate":"2021-10-11"},{"lineNumber":452,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":453,"author":{"gitId":"jonathanlkw"},"content":"This displays the previously added income entries in the form of a list. ","lastModifiedDate":"2021-10-27"},{"lineNumber":454,"author":{"gitId":"jonathanlkw"},"content":"Use this to find the index of the entries you want to delete.","lastModifiedDate":"2021-10-27"},{"lineNumber":455,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":456,"author":{"gitId":"Nirmaleshwar"},"content":"Format: `list_in`","lastModifiedDate":"2021-10-19"},{"lineNumber":457,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":458,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cdetails\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":459,"author":{"gitId":"KZQ1999"},"content":"\u003csummary\u003e ▼ Expected output in run window \u003c/summary\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":460,"author":{"gitId":"KZQ1999"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":461,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":462,"author":{"gitId":"Nirmaleshwar"},"content":"Below is a list of all of your recent earnings!","lastModifiedDate":"2021-10-19"},{"lineNumber":463,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":464,"author":{"gitId":"KZQ1999"},"content":"1: [I] rob a church - $300.00 (18/11/2021)","lastModifiedDate":"2021-10-25"},{"lineNumber":465,"author":{"gitId":"KZQ1999"},"content":"2: [I] rob a car - $400.00 (18/12/2021)","lastModifiedDate":"2021-10-25"},{"lineNumber":466,"author":{"gitId":"KZQ1999"},"content":"3: [I] rob a home - $500.00 (18/09/2021)","lastModifiedDate":"2021-10-25"},{"lineNumber":467,"author":{"gitId":"KZQ1999"},"content":"4: [I] rob a child - $600.00 (18/08/2021)","lastModifiedDate":"2021-10-25"},{"lineNumber":468,"author":{"gitId":"KZQ1999"},"content":"5: [I] lunch money - $1000.00 (19/10/2021)","lastModifiedDate":"2021-10-25"},{"lineNumber":469,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":470,"author":{"gitId":"KZQ1999"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":471,"author":{"gitId":"Nirmaleshwar"},"content":"\u003c/details\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":472,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":473,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":474,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":475,"author":{"gitId":"KZQ1999"},"content":"### View total expense: `total_ex`","lastModifiedDate":"2021-11-01"},{"lineNumber":476,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":477,"author":{"gitId":"KZQ1999"},"content":"This displays the total amount of all expenses in your list.","lastModifiedDate":"2021-11-01"},{"lineNumber":478,"author":{"gitId":"KZQ1999"},"content":"This is great for giving you a quick snapshot of how much you\u0027ve spent!","lastModifiedDate":"2021-11-01"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":480,"author":{"gitId":"KZQ1999"},"content":"Format: `total_ex`","lastModifiedDate":"2021-11-01"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":482,"author":{"gitId":"kyun99"},"content":"Note:","lastModifiedDate":"2021-11-02"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":484,"author":{"gitId":"kyun99"},"content":"- `total_ex` command is only able to print values less than 100,000,000,000 (100Billion).","lastModifiedDate":"2021-11-03"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":486,"author":{"gitId":"kyun99"},"content":"Examples:","lastModifiedDate":"2021-11-03"},{"lineNumber":487,"author":{"gitId":"kyun99"},"content":"\u003col\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":488,"author":{"gitId":"kyun99"},"content":"\u003cli\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":489,"author":{"gitId":"kyun99"},"content":"Let\u0027s say you have made expense entries consistently for a couple of months since you downloaded the application and you want to know the total expense you have logged.","lastModifiedDate":"2021-11-03"},{"lineNumber":490,"author":{"gitId":"kyun99"},"content":"\u003c/li\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":491,"author":{"gitId":"kyun99"},"content":"\u003c/ol\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":492,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cdetails\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":493,"author":{"gitId":"KZQ1999"},"content":"\u003csummary\u003e ▼ Expected output in run window \u003c/summary\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":494,"author":{"gitId":"KZQ1999"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":495,"author":{"gitId":"kyun99"},"content":"These are the expense entries you have made in the past couple of months. ","lastModifiedDate":"2021-11-03"},{"lineNumber":496,"author":{"gitId":"KZQ1999"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":497,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":498,"author":{"gitId":"kyun99"},"content":"1: [E] Lunch with Friends - $22.00 (02/01/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":499,"author":{"gitId":"kyun99"},"content":"2: [E] Movie date - $50.00 (07/01/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":500,"author":{"gitId":"kyun99"},"content":"3: [E] ORD PARTY!! - $150.00 (12/01/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":501,"author":{"gitId":"kyun99"},"content":"4: [E] Top up my bus card for the month of Feb - $150.00 (02/02/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":502,"author":{"gitId":"kyun99"},"content":"5: [E] Roses - $30.00 (14/02/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":503,"author":{"gitId":"kyun99"},"content":"6: [E] Dinner with Friends - $37.00 (24/02/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":504,"author":{"gitId":"kyun99"},"content":"7: [E] Mum\u0027s birthday treat - $120.00 (07/03/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":505,"author":{"gitId":"kyun99"},"content":"8: [E] Grab food delivery - $45.00 (24/03/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":506,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":507,"author":{"gitId":"KZQ1999"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":508,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":509,"author":{"gitId":"kyun99"},"content":"Simply type in the command \u003ccode\u003etotal_ex\u003c/code\u003e, and the program will display the total expense entries you have made:","lastModifiedDate":"2021-11-03"},{"lineNumber":510,"author":{"gitId":"KZQ1999"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":511,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":512,"author":{"gitId":"kyun99"},"content":"Your total income is: $604.00","lastModifiedDate":"2021-11-03"},{"lineNumber":513,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":514,"author":{"gitId":"KZQ1999"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":515,"author":{"gitId":"Nirmaleshwar"},"content":"\u003c/details\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":516,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":519,"author":{"gitId":"KZQ1999"},"content":"### View total income: `total_in`","lastModifiedDate":"2021-11-01"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":521,"author":{"gitId":"kyun99"},"content":"This will give you the sum of all income entries in you have made in your list.","lastModifiedDate":"2021-11-03"},{"lineNumber":522,"author":{"gitId":"KZQ1999"},"content":"This is great for giving you a quick snapshot of how much you\u0027ve earned!","lastModifiedDate":"2021-11-01"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":525,"author":{"gitId":"KZQ1999"},"content":"Format: `total_in`","lastModifiedDate":"2021-11-01"},{"lineNumber":526,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":527,"author":{"gitId":"kyun99"},"content":"Note:","lastModifiedDate":"2021-11-02"},{"lineNumber":528,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":529,"author":{"gitId":"kyun99"},"content":"- `total_in` command is only able to print values less than 100,000,000,000 (100Billion).","lastModifiedDate":"2021-11-02"},{"lineNumber":530,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":531,"author":{"gitId":"kyun99"},"content":"Examples:","lastModifiedDate":"2021-11-03"},{"lineNumber":532,"author":{"gitId":"kyun99"},"content":"\u003col\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":533,"author":{"gitId":"kyun99"},"content":"\u003cli\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":534,"author":{"gitId":"kyun99"},"content":"Let\u0027s say you have made income entries consistently for a couple of months since you downloaded the application and you want to know the total income you have logged.","lastModifiedDate":"2021-11-03"},{"lineNumber":535,"author":{"gitId":"kyun99"},"content":"\u003c/li\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":536,"author":{"gitId":"kyun99"},"content":"\u003c/ol\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":537,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cdetails\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":538,"author":{"gitId":"KZQ1999"},"content":"\u003csummary\u003e ▼ Expected output in run window \u003c/summary\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":539,"author":{"gitId":"kyun99"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":540,"author":{"gitId":"kyun99"},"content":"These are the income entries you have made in the past couple of months. ","lastModifiedDate":"2021-11-03"},{"lineNumber":541,"author":{"gitId":"KZQ1999"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":542,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":543,"author":{"gitId":"kyun99"},"content":"1: [I] Allowance for the month of Jan - $250.00 (02/01/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":544,"author":{"gitId":"kyun99"},"content":"2: [I] Allowance for the month of Feb - $250.00 (04/02/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":545,"author":{"gitId":"kyun99"},"content":"3: [I] Money from teaching tuition  - $800.00 (07/03/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":546,"author":{"gitId":"kyun99"},"content":"4: [I] Part time job - $1000.00 (20/04/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":547,"author":{"gitId":"kyun99"},"content":"5: [I] Part time job - $1000.00 (20/05/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":548,"author":{"gitId":"kyun99"},"content":"6: [I] Part time job - $1000.00 (20/06/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":549,"author":{"gitId":"kyun99"},"content":"7: [I] Part time job - $1000.00 (20/07/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":550,"author":{"gitId":"kyun99"},"content":"8: [I] Allowance for the month of Aug - $350.00 (01/08/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":551,"author":{"gitId":"kyun99"},"content":"9: [I] Allowance for the month of Sept - $350.00 (11/09/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":552,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":553,"author":{"gitId":"KZQ1999"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":554,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":555,"author":{"gitId":"kyun99"},"content":"Simply type in the command \u003ccode\u003etotal_in\u003c/code\u003e, and the program will display the total income entries you have made:","lastModifiedDate":"2021-11-03"},{"lineNumber":556,"author":{"gitId":"KZQ1999"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":557,"author":{"gitId":"KZQ1999"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":558,"author":{"gitId":"kyun99"},"content":"Your total income is: $6000.00","lastModifiedDate":"2021-11-03"},{"lineNumber":559,"author":{"gitId":"KZQ1999"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":560,"author":{"gitId":"KZQ1999"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":561,"author":{"gitId":"Nirmaleshwar"},"content":"\u003c/details\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":562,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":563,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":564,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":565,"author":{"gitId":"Nirmaleshwar"},"content":"### View total balance: `balance`","lastModifiedDate":"2021-10-19"},{"lineNumber":566,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":567,"author":{"gitId":"jonathanlkw"},"content":"This shows the net balance you have after subtracting your expenses from your incomes.","lastModifiedDate":"2021-10-27"},{"lineNumber":568,"author":{"gitId":"jonathanlkw"},"content":"Use this to get a snapshot of whether you\u0027re in the red!","lastModifiedDate":"2021-10-27"},{"lineNumber":569,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":570,"author":{"gitId":"Nirmaleshwar"},"content":"Format: `balance`","lastModifiedDate":"2021-10-19"},{"lineNumber":571,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cdetails\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":572,"author":{"gitId":"KZQ1999"},"content":"  \u003csummary\u003e ▼ Expected output in run window \u003c/summary\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":573,"author":{"gitId":"KZQ1999"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":574,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":575,"author":{"gitId":"Nirmaleshwar"},"content":"Your current balance is: $-87654891720.20","lastModifiedDate":"2021-10-19"},{"lineNumber":576,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":577,"author":{"gitId":"KZQ1999"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":578,"author":{"gitId":"Nirmaleshwar"},"content":"\u003c/details\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":579,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":580,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":581,"author":{"gitId":"AnShengLee"},"content":"### Show total expense between 2 dates: `btw_ex`","lastModifiedDate":"2021-10-20"},{"lineNumber":582,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":583,"author":{"gitId":"kyun99"},"content":"This shows the sum of all the expense you had accumulated between a given date range.","lastModifiedDate":"2021-11-02"},{"lineNumber":584,"author":{"gitId":"kyun99"},"content":"This is great for checking your total weekly, monthly, or yearly expenses!","lastModifiedDate":"2021-11-02"},{"lineNumber":585,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":586,"author":{"gitId":"AnShengLee"},"content":"Format: `btw_ex s/START_DATE e/END_DATE`","lastModifiedDate":"2021-10-20"},{"lineNumber":587,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":588,"author":{"gitId":"KZQ1999"},"content":"- `START_DATE` \u0026 `END_DATE` must be in the DD/MM/YYYY format.","lastModifiedDate":"2021-11-01"},{"lineNumber":589,"author":{"gitId":"kyun99"},"content":"- `START_DATE` \u0026 `END_DATE` have to be valid and non-empty.","lastModifiedDate":"2021-11-02"},{"lineNumber":590,"author":{"gitId":"kyun99"},"content":"- `START_DATE` must be before or the same as `END_DATE`.","lastModifiedDate":"2021-11-02"},{"lineNumber":591,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":592,"author":{"gitId":"AnShengLee"},"content":"Examples:","lastModifiedDate":"2021-10-20"},{"lineNumber":593,"author":{"gitId":"kyun99"},"content":"\u003col\u003e\u003cli\u003eLet\u0027s you have have made a bunch of expense entries in the past 2 weeks, from  10th August 2021 and 23rd August 2021, and you want to find out how much you have spent during this time period.\u003c/li\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":594,"author":{"gitId":"kyun99"},"content":"\u003cbr\u003e\u003cli\u003eSimply key in two dates using the command format\u003ccode\u003ebtw_ex s/10/08/2021 e/23/08/2021\u003c/code\u003e to get the total you have spent in those 2 weeks! \u003c/li\u003e\u003c/ol\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":595,"author":{"gitId":"AnShengLee"},"content":"\u003cdetails\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":596,"author":{"gitId":"KZQ1999"},"content":"\u003csummary\u003e ▼ Expected output in run window \u003c/summary\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":597,"author":{"gitId":"KZQ1999"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":598,"author":{"gitId":"kyun99"},"content":"These are the expense entries you have made in the past couple of months. ","lastModifiedDate":"2021-11-03"},{"lineNumber":599,"author":{"gitId":"kyun99"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":600,"author":{"gitId":"kyun99"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-03"},{"lineNumber":601,"author":{"gitId":"kyun99"},"content":"1: [E] Lunch with Friends - $22.00 (09/07/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":602,"author":{"gitId":"kyun99"},"content":"2: [E] Movie date - $50.00 (20/07/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":603,"author":{"gitId":"kyun99"},"content":"3: [E] ORD PARTY!! - $150.00 (12/08/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":604,"author":{"gitId":"kyun99"},"content":"4: [E] Top up my bus card for the month of Aug - $150.00 (15/08/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":605,"author":{"gitId":"kyun99"},"content":"5: [E] Hostel fees - $1873.00 (15/08/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":606,"author":{"gitId":"kyun99"},"content":"6: [E] Dinner with Friends - $37.00 (17/08/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":607,"author":{"gitId":"kyun99"},"content":"7: [E] Mum\u0027s birthday treat - $120.00 (23/08/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":608,"author":{"gitId":"kyun99"},"content":"8: [E] Grab food delivery - $45.00 (23/08/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":609,"author":{"gitId":"kyun99"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-03"},{"lineNumber":610,"author":{"gitId":"kyun99"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":611,"author":{"gitId":"kyun99"},"content":"Your total expense that you have logged for the past 2 weeks will be shown:","lastModifiedDate":"2021-11-03"},{"lineNumber":612,"author":{"gitId":"KZQ1999"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":613,"author":{"gitId":"AnShengLee"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-20"},{"lineNumber":614,"author":{"gitId":"kyun99"},"content":"Your total expense between 10 Aug 2021 and 23 Aug 2021 is : $2375.00","lastModifiedDate":"2021-11-03"},{"lineNumber":615,"author":{"gitId":"AnShengLee"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-20"},{"lineNumber":616,"author":{"gitId":"KZQ1999"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":617,"author":{"gitId":"AnShengLee"},"content":"\u003c/details\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":618,"author":{"gitId":"AnShengLee"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":619,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":620,"author":{"gitId":"Nirmaleshwar"},"content":"### Show total income between 2 dates: `btw_in`","lastModifiedDate":"2021-10-19"},{"lineNumber":621,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":622,"author":{"gitId":"kyun99"},"content":"This shows the total income you have accumulated between a given date range.","lastModifiedDate":"2021-11-02"},{"lineNumber":623,"author":{"gitId":"kyun99"},"content":"This is great for checking your total weekly, monthly, or yearly expenses!","lastModifiedDate":"2021-11-02"},{"lineNumber":624,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":625,"author":{"gitId":"Nirmaleshwar"},"content":"Format: `btw_in s/START_DATE e/END_DATE`","lastModifiedDate":"2021-10-19"},{"lineNumber":626,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":627,"author":{"gitId":"KZQ1999"},"content":"- `START_DATE` \u0026 `END_DATE` must be in the DD/MM/YYYY format.","lastModifiedDate":"2021-11-01"},{"lineNumber":628,"author":{"gitId":"kyun99"},"content":"- `START_DATE` \u0026 `END_DATE` have to be valid and non-empty.","lastModifiedDate":"2021-11-02"},{"lineNumber":629,"author":{"gitId":"kyun99"},"content":"- `START_DATE` must be before or the same as `END_DATE`.","lastModifiedDate":"2021-11-02"},{"lineNumber":630,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":631,"author":{"gitId":"Nirmaleshwar"},"content":"Examples:","lastModifiedDate":"2021-10-19"},{"lineNumber":632,"author":{"gitId":"kyun99"},"content":"\u003col\u003e\u003cli\u003eLet\u0027s you have have made a bunch of income entries in the past 2 weeks, from  10th August 2021 and 23rd August 2021, and you want to find out how much you have received during this time period.\u003c/li\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":633,"author":{"gitId":"kyun99"},"content":"\u003cbr\u003e\u003cli\u003eSimply key in two dates using the command format\u003ccode\u003ebtw_in s/10/08/2021 e/23/08/2021\u003c/code\u003e to get the total income you have gotten in those 2 weeks! \u003c/li\u003e\u003c/ol\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":634,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cdetails\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":635,"author":{"gitId":"KZQ1999"},"content":"\u003csummary\u003e ▼ Expected output in run window \u003c/summary\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":636,"author":{"gitId":"KZQ1999"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":637,"author":{"gitId":"kyun99"},"content":"These are the income entries you have made in the past couple of months. ","lastModifiedDate":"2021-11-03"},{"lineNumber":638,"author":{"gitId":"kyun99"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":639,"author":{"gitId":"kyun99"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-03"},{"lineNumber":640,"author":{"gitId":"kyun99"},"content":"1: [I] Allowance for the month of Jul - $350.00 (02/07/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":641,"author":{"gitId":"kyun99"},"content":"2: [I] Allowance for the month of Aug - $350.00 (04/08/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":642,"author":{"gitId":"kyun99"},"content":"3: [I] Money from teaching tuition  - $800.00 (11/08/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":643,"author":{"gitId":"kyun99"},"content":"4: [I] Part time job - $1000.00 (15/08/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":644,"author":{"gitId":"kyun99"},"content":"5: [I] Friend finally paid me back for lunch last week -.-\" - $23.00 (15/08/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":645,"author":{"gitId":"kyun99"},"content":"6: [I] Mahjong ZMMT :) - $50.00 (20/08/2021)","lastModifiedDate":"2021-11-03"},{"lineNumber":646,"author":{"gitId":"kyun99"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-03"},{"lineNumber":647,"author":{"gitId":"kyun99"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":648,"author":{"gitId":"kyun99"},"content":"Your total income that you have logged for the past 2 weeks will be shown:","lastModifiedDate":"2021-11-03"},{"lineNumber":649,"author":{"gitId":"KZQ1999"},"content":"\u003cpre\u003e ","lastModifiedDate":"2021-10-25"},{"lineNumber":650,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":651,"author":{"gitId":"kyun99"},"content":"Your total income between 10 Aug 2021 and 23 Aug 2021 is : $1873.00","lastModifiedDate":"2021-11-03"},{"lineNumber":652,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":653,"author":{"gitId":"KZQ1999"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":654,"author":{"gitId":"Nirmaleshwar"},"content":"\u003c/details\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":655,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":656,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":657,"author":{"gitId":"KZQ1999"},"content":"---","lastModifiedDate":"2021-11-01"},{"lineNumber":658,"author":{"gitId":"KZQ1999"},"content":"### 2.4 Finding Entries","lastModifiedDate":"2021-11-01"},{"lineNumber":659,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":660,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":661,"author":{"gitId":"KZQ1999"},"content":"### Find entry using date: `find DD/MM/YYYY`","lastModifiedDate":"2021-11-01"},{"lineNumber":662,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":663,"author":{"gitId":"KZQ1999"},"content":"You can use this command to find and display the income or expense entries with the given date. ","lastModifiedDate":"2021-11-01"},{"lineNumber":664,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":665,"author":{"gitId":"KZQ1999"},"content":"Format: `find DD/MM/YYYY`","lastModifiedDate":"2021-11-01"},{"lineNumber":666,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":667,"author":{"gitId":"KZQ1999"},"content":"- If the date given is not in the recognised format, a keyword search would be done instead.","lastModifiedDate":"2021-11-01"},{"lineNumber":668,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":669,"author":{"gitId":"KZQ1999"},"content":"Examples:","lastModifiedDate":"2021-11-01"},{"lineNumber":670,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":671,"author":{"gitId":"KZQ1999"},"content":"- `find 19/10/2021` returns income and expense entries with the given date.","lastModifiedDate":"2021-11-01"},{"lineNumber":672,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":673,"author":{"gitId":"AnShengLee"},"content":"\u003cdetails\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":674,"author":{"gitId":"KZQ1999"},"content":"\u003csummary\u003e ▼ Expected output in run window \u003c/summary\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":675,"author":{"gitId":"KZQ1999"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":676,"author":{"gitId":"KZQ1999"},"content":"If you enter \u003ccode\u003efind 19/10/2021\u003c/code\u003e, it will find the entry recorded on that date:","lastModifiedDate":"2021-11-01"},{"lineNumber":677,"author":{"gitId":"KZQ1999"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":678,"author":{"gitId":"KZQ1999"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":679,"author":{"gitId":"KZQ1999"},"content":"Your most recent earning: ","lastModifiedDate":"2021-11-01"},{"lineNumber":680,"author":{"gitId":"KZQ1999"},"content":"[I] Birthday Money! - $200.00 (19/10/2021)","lastModifiedDate":"2021-11-01"},{"lineNumber":681,"author":{"gitId":"KZQ1999"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":682,"author":{"gitId":"KZQ1999"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":683,"author":{"gitId":"KZQ1999"},"content":"\u003c/details\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":684,"author":{"gitId":"KZQ1999"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":685,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":686,"author":{"gitId":"KZQ1999"},"content":"### Find entry using keyword: `find KEYWORD`","lastModifiedDate":"2021-11-01"},{"lineNumber":687,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":688,"author":{"gitId":"KZQ1999"},"content":"This finds and displays the income or expense entries that contain the given keyword.","lastModifiedDate":"2021-11-01"},{"lineNumber":689,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":690,"author":{"gitId":"KZQ1999"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2021-11-01"},{"lineNumber":691,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":692,"author":{"gitId":"KZQ1999"},"content":"- `KEYWORD` has to be a non-empty","lastModifiedDate":"2021-11-01"},{"lineNumber":693,"author":{"gitId":"KZQ1999"},"content":"- `KEYWORD` can be any alpha-numeric string","lastModifiedDate":"2021-11-01"},{"lineNumber":694,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":695,"author":{"gitId":"KZQ1999"},"content":"Examples:","lastModifiedDate":"2021-11-01"},{"lineNumber":696,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":697,"author":{"gitId":"KZQ1999"},"content":"- `find FOOD` returns income and expense entries that contain the keyword `FOOD` in their description or categories.","lastModifiedDate":"2021-11-01"},{"lineNumber":698,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":699,"author":{"gitId":"KZQ1999"},"content":"\u003cdetails\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":700,"author":{"gitId":"KZQ1999"},"content":"\u003csummary\u003e ▼ Expected output in run window \u003c/summary\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":701,"author":{"gitId":"KZQ1999"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":702,"author":{"gitId":"KZQ1999"},"content":"If you wish to search based on category, for e.g. all \u003ccode\u003efood\u003c/code\u003e expenses:","lastModifiedDate":"2021-11-01"},{"lineNumber":703,"author":{"gitId":"KZQ1999"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":704,"author":{"gitId":"KZQ1999"},"content":"\u003cul\u003e\u003cli\u003eGive the command \u003ccode\u003efind food\u003c/code\u003e and it will return the following:\u003c/li\u003e\u003c/ul\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":705,"author":{"gitId":"KZQ1999"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":706,"author":{"gitId":"AnShengLee"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-20"},{"lineNumber":707,"author":{"gitId":"KZQ1999"},"content":"Below is a list of all your findings!","lastModifiedDate":"2021-11-01"},{"lineNumber":708,"author":{"gitId":"KZQ1999"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":709,"author":{"gitId":"KZQ1999"},"content":"1: [E] KFC lunch - $10.20 (19/10/2021)","lastModifiedDate":"2021-11-01"},{"lineNumber":710,"author":{"gitId":"KZQ1999"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":711,"author":{"gitId":"KZQ1999"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":712,"author":{"gitId":"KZQ1999"},"content":"If you wish to search based on description, for e.g. all entries that contain the keyword \u003ccode\u003ebought\u003c/code\u003e:","lastModifiedDate":"2021-11-01"},{"lineNumber":713,"author":{"gitId":"KZQ1999"},"content":"\u003cul\u003e\u003cli\u003eGive the command \u003ccode\u003efind bought\u003c/code\u003e and it will return the following:\u003c/li\u003e\u003c/ul\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":714,"author":{"gitId":"KZQ1999"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":715,"author":{"gitId":"KZQ1999"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":716,"author":{"gitId":"KZQ1999"},"content":"Below is a list of all your findings!","lastModifiedDate":"2021-11-01"},{"lineNumber":717,"author":{"gitId":"KZQ1999"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":718,"author":{"gitId":"KZQ1999"},"content":"1: [E] bought cookies - $500.00 (18/01/2021)","lastModifiedDate":"2021-11-01"},{"lineNumber":719,"author":{"gitId":"KZQ1999"},"content":"2: [E] bought home - $555.00 (18/07/2021)","lastModifiedDate":"2021-11-01"},{"lineNumber":720,"author":{"gitId":"KZQ1999"},"content":"3: [E] bought car - $4777.00 (18/06/2021)","lastModifiedDate":"2021-11-01"},{"lineNumber":721,"author":{"gitId":"KZQ1999"},"content":"4: [E] bought condo - $87654888878.00 (18/05/2021)","lastModifiedDate":"2021-11-01"},{"lineNumber":722,"author":{"gitId":"KZQ1999"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":723,"author":{"gitId":"KZQ1999"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":724,"author":{"gitId":"KZQ1999"},"content":"If you wish to search based on value, for e.g. all entries that contain the value \u003ccode\u003e5\u003c/code\u003e:","lastModifiedDate":"2021-11-01"},{"lineNumber":725,"author":{"gitId":"KZQ1999"},"content":"\u003cul\u003e\u003cli\u003eGive the command \u003ccode\u003efind 5\u003c/code\u003e and it will return the following:\u003c/li\u003e\u003c/ul\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":726,"author":{"gitId":"KZQ1999"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":727,"author":{"gitId":"KZQ1999"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":728,"author":{"gitId":"KZQ1999"},"content":"Below is a list of all your findings!","lastModifiedDate":"2021-11-01"},{"lineNumber":729,"author":{"gitId":"KZQ1999"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":730,"author":{"gitId":"KZQ1999"},"content":"1: [E] bought cookies - $500.00 (18/01/2021)","lastModifiedDate":"2021-11-01"},{"lineNumber":731,"author":{"gitId":"KZQ1999"},"content":"2: [E] bought home - $555.00 (18/07/2021)","lastModifiedDate":"2021-11-01"},{"lineNumber":732,"author":{"gitId":"KZQ1999"},"content":"3: [E] bought condo - $87654888878.00 (18/05/2021)","lastModifiedDate":"2021-11-01"},{"lineNumber":733,"author":{"gitId":"AnShengLee"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-20"},{"lineNumber":734,"author":{"gitId":"KZQ1999"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":735,"author":{"gitId":"AnShengLee"},"content":"\u003c/details\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":736,"author":{"gitId":"AnShengLee"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":737,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":738,"author":{"gitId":"KZQ1999"},"content":"---","lastModifiedDate":"2021-11-01"},{"lineNumber":739,"author":{"gitId":"KZQ1999"},"content":"### 2.5 Budget Setting","lastModifiedDate":"2021-11-01"},{"lineNumber":740,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":741,"author":{"gitId":"kyun99"},"content":"### Set budget: `set_budget`","lastModifiedDate":"2021-10-25"},{"lineNumber":742,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":743,"author":{"gitId":"jonathanlkw"},"content":"This sets a budget for one of the many preset expense categories. ","lastModifiedDate":"2021-10-27"},{"lineNumber":744,"author":{"gitId":"jonathanlkw"},"content":"Reminders will be given when your spending approaches the budget limit!","lastModifiedDate":"2021-10-27"},{"lineNumber":745,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":746,"author":{"gitId":"jonathanlkw"},"content":"Format: `set_budget c/CATEGORY a/AMOUNT`","lastModifiedDate":"2021-10-27"},{"lineNumber":747,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":748,"author":{"gitId":"jonathanlkw"},"content":"- `CATEGORY` has to be one of `food`, `transport`, `bills`, `medical`, `entertainment`, `misc` or `overall`.","lastModifiedDate":"2021-10-27"},{"lineNumber":749,"author":{"gitId":"jonathanlkw"},"content":"- `AMOUNT` has to be a valid non-negative number.","lastModifiedDate":"2021-10-27"},{"lineNumber":750,"author":{"gitId":"jonathanlkw"},"content":"- TIP: Setting `AMOUNT` to 0 deactivates the budget warnings for that category!","lastModifiedDate":"2021-10-27"},{"lineNumber":751,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":752,"author":{"gitId":"jonathanlkw"},"content":"Examples:","lastModifiedDate":"2021-10-27"},{"lineNumber":753,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":754,"author":{"gitId":"jonathanlkw"},"content":"- `set_budget c/bills a/100` Sets the `bills` budget to $100.","lastModifiedDate":"2021-10-27"},{"lineNumber":755,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":756,"author":{"gitId":"jonathanlkw"},"content":"\u003cdetails\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":757,"author":{"gitId":"KZQ1999"},"content":"\u003csummary\u003e ▼ Expected output in run window \u003c/summary\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":758,"author":{"gitId":"jonathanlkw"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":759,"author":{"gitId":"jonathanlkw"},"content":"When command \u003ccode\u003eset_budget c/bills a/100\u003c/code\u003e is given, you get the following message:","lastModifiedDate":"2021-10-27"},{"lineNumber":760,"author":{"gitId":"jonathanlkw"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":761,"author":{"gitId":"jonathanlkw"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":762,"author":{"gitId":"jonathanlkw"},"content":"BILLS budget has been set to $100.00","lastModifiedDate":"2021-10-27"},{"lineNumber":763,"author":{"gitId":"jonathanlkw"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":764,"author":{"gitId":"jonathanlkw"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":765,"author":{"gitId":"jonathanlkw"},"content":"\u003c/details\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":766,"author":{"gitId":"jonathanlkw"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":767,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":768,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":769,"author":{"gitId":"kyun99"},"content":"### Check budget: `check_budget`","lastModifiedDate":"2021-10-25"},{"lineNumber":770,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":771,"author":{"gitId":"jonathanlkw"},"content":"This checks the budget limit of one of the many preset expense categories.","lastModifiedDate":"2021-10-27"},{"lineNumber":772,"author":{"gitId":"jonathanlkw"},"content":"Use this when you forget your budget limits!","lastModifiedDate":"2021-10-27"},{"lineNumber":773,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":774,"author":{"gitId":"jonathanlkw"},"content":"Format: `check_budget c/CATEGORY`","lastModifiedDate":"2021-10-27"},{"lineNumber":775,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":776,"author":{"gitId":"jonathanlkw"},"content":"- `CATEGORY` has to be one of `food`, `transport`, `bills`, `medical`, `entertainment`, `misc` or `overall`.","lastModifiedDate":"2021-10-27"},{"lineNumber":777,"author":{"gitId":"jonathanlkw"},"content":"- TIP: Setting `AMOUNT` to 0 deactivates the budget warnings for that category!","lastModifiedDate":"2021-10-27"},{"lineNumber":778,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":779,"author":{"gitId":"jonathanlkw"},"content":"Examples:","lastModifiedDate":"2021-10-27"},{"lineNumber":780,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":781,"author":{"gitId":"jonathanlkw"},"content":"- `check_budget c/bills` checks the budget limit of the `bills` budget.","lastModifiedDate":"2021-10-27"},{"lineNumber":782,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":783,"author":{"gitId":"jonathanlkw"},"content":"\u003cdetails\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":784,"author":{"gitId":"KZQ1999"},"content":"\u003csummary\u003e ▼ Expected output in run window \u003c/summary\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":785,"author":{"gitId":"jonathanlkw"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":786,"author":{"gitId":"jonathanlkw"},"content":"When command \u003ccode\u003echeck_budget c/bills\u003c/code\u003e is given, you get the following message:","lastModifiedDate":"2021-10-27"},{"lineNumber":787,"author":{"gitId":"jonathanlkw"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":788,"author":{"gitId":"jonathanlkw"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":789,"author":{"gitId":"jonathanlkw"},"content":"Current BILLS limit is $100.00","lastModifiedDate":"2021-10-27"},{"lineNumber":790,"author":{"gitId":"jonathanlkw"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":791,"author":{"gitId":"jonathanlkw"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":792,"author":{"gitId":"jonathanlkw"},"content":"\u003c/details\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":793,"author":{"gitId":"jonathanlkw"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":794,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":795,"author":{"gitId":"kyun99"},"content":"### Set threshold: `set_threshold`","lastModifiedDate":"2021-10-25"},{"lineNumber":796,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":797,"author":{"gitId":"jonathanlkw"},"content":"This sets the threshold beyond which reminders will be given when approaching the budget limit.","lastModifiedDate":"2021-10-27"},{"lineNumber":798,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":799,"author":{"gitId":"jonathanlkw"},"content":"Format: `set_threshold t/THRESHOLD`","lastModifiedDate":"2021-10-27"},{"lineNumber":800,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":801,"author":{"gitId":"jonathanlkw"},"content":"- `THRESHOLD` has to be a value between 0 and 1.","lastModifiedDate":"2021-10-27"},{"lineNumber":802,"author":{"gitId":"jonathanlkw"},"content":"- Setting `THRESHOLD` to 0.1 produces reminders when you have used up more than 90% of your budget!","lastModifiedDate":"2021-10-27"},{"lineNumber":803,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":804,"author":{"gitId":"jonathanlkw"},"content":"Examples:","lastModifiedDate":"2021-10-27"},{"lineNumber":805,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":806,"author":{"gitId":"KZQ1999"},"content":"- `set_threshold t/0.2` sets the threshold value of all budget categories to 80%.","lastModifiedDate":"2021-11-01"},{"lineNumber":807,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":808,"author":{"gitId":"jonathanlkw"},"content":"\u003cdetails\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":809,"author":{"gitId":"KZQ1999"},"content":"\u003csummary\u003e ▼ Expected output in run window \u003c/summary\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":810,"author":{"gitId":"jonathanlkw"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":811,"author":{"gitId":"jonathanlkw"},"content":"When command \u003ccode\u003eset_threshold t/0.2\u003c/code\u003e is given, you get the following message:","lastModifiedDate":"2021-10-27"},{"lineNumber":812,"author":{"gitId":"jonathanlkw"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":813,"author":{"gitId":"jonathanlkw"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":814,"author":{"gitId":"jonathanlkw"},"content":"Threshold for budget reminders set to 0.2","lastModifiedDate":"2021-10-27"},{"lineNumber":815,"author":{"gitId":"jonathanlkw"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":816,"author":{"gitId":"jonathanlkw"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":817,"author":{"gitId":"jonathanlkw"},"content":"\u003c/details\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":818,"author":{"gitId":"jonathanlkw"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":819,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":820,"author":{"gitId":"KZQ1999"},"content":"---","lastModifiedDate":"2021-11-01"},{"lineNumber":821,"author":{"gitId":"KZQ1999"},"content":"### 2.6 Currency Conversion","lastModifiedDate":"2021-11-01"},{"lineNumber":822,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":823,"author":{"gitId":"AnShengLee"},"content":"### Set currency: `set_curr`","lastModifiedDate":"2021-10-27"},{"lineNumber":824,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":825,"author":{"gitId":"AnShengLee"},"content":"This allows you to see everything money-related in a different currency. Any money-related amount you key in from now ","lastModifiedDate":"2021-10-27"},{"lineNumber":826,"author":{"gitId":"AnShengLee"},"content":"onwards will be treated as the new currency set.","lastModifiedDate":"2021-10-27"},{"lineNumber":827,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":828,"author":{"gitId":"AnShengLee"},"content":"Format: `set_curr c/CURRENCY`","lastModifiedDate":"2021-10-27"},{"lineNumber":829,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":830,"author":{"gitId":"AnShengLee"},"content":"- As of v2.0, Stonks XD supports 2 different currencies: SGD and USD.","lastModifiedDate":"2021-10-27"},{"lineNumber":831,"author":{"gitId":"AnShengLee"},"content":"- If you try to set currency to currency you\u0027re already using, a warning will be shown.","lastModifiedDate":"2021-10-27"},{"lineNumber":832,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":833,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cdetails\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":834,"author":{"gitId":"KZQ1999"},"content":"\u003csummary\u003e ▼ Expected output in run window \u003c/summary\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":835,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":836,"author":{"gitId":"Nirmaleshwar"},"content":"Let\u0027s take the following budget limit for \u003ccode\u003eFOOD\u003c/code\u003e expenses as an example:","lastModifiedDate":"2021-10-27"},{"lineNumber":837,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":838,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":839,"author":{"gitId":"Nirmaleshwar"},"content":"Current FOOD limit is $10.00","lastModifiedDate":"2021-10-27"},{"lineNumber":840,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":841,"author":{"gitId":"Nirmaleshwar"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":842,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":843,"author":{"gitId":"Nirmaleshwar"},"content":"If you wish to convert the above (and all entries) to USD, simply enter \u003ccode\u003eset_curr c/USD\u003c/code\u003e. You will receive the following confirmation message:","lastModifiedDate":"2021-10-27"},{"lineNumber":844,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":845,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":846,"author":{"gitId":"Nirmaleshwar"},"content":"All entries have been converted to USD!","lastModifiedDate":"2021-10-27"},{"lineNumber":847,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":848,"author":{"gitId":"Nirmaleshwar"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":849,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":850,"author":{"gitId":"Nirmaleshwar"},"content":"If we check our budget limit once again, we see that it has now been converted to the appropriate value in USD!","lastModifiedDate":"2021-10-27"},{"lineNumber":851,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":852,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":853,"author":{"gitId":"Nirmaleshwar"},"content":"Current FOOD limit is $7.40","lastModifiedDate":"2021-10-27"},{"lineNumber":854,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":855,"author":{"gitId":"Nirmaleshwar"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":856,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":857,"author":{"gitId":"Nirmaleshwar"},"content":"To convert back to SGD, just enter \u003ccode\u003eset_curr c/SGD\u003c/code\u003e and all entries will revert back to their original denominations.","lastModifiedDate":"2021-10-27"},{"lineNumber":858,"author":{"gitId":"Nirmaleshwar"},"content":"\u003c/details\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":859,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":860,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":861,"author":{"gitId":"AnShengLee"},"content":"### Check current currency: `check_curr`","lastModifiedDate":"2021-10-27"},{"lineNumber":862,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":863,"author":{"gitId":"AnShengLee"},"content":"This shows you what currency setting you are currently on.","lastModifiedDate":"2021-10-27"},{"lineNumber":864,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":865,"author":{"gitId":"AnShengLee"},"content":"Format: `check_curr`","lastModifiedDate":"2021-10-27"},{"lineNumber":866,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":867,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cdetails\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":868,"author":{"gitId":"KZQ1999"},"content":"\u003csummary\u003e ▼ Expected output in run window \u003c/summary\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":869,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":870,"author":{"gitId":"Nirmaleshwar"},"content":"If you are unsure what currency your values are in, just enter \u003ccode\u003echeck_curr\u003c/code\u003e and it will show the following message:","lastModifiedDate":"2021-10-27"},{"lineNumber":871,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":872,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":873,"author":{"gitId":"Nirmaleshwar"},"content":"You currency setting currently: SGD","lastModifiedDate":"2021-10-27"},{"lineNumber":874,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":875,"author":{"gitId":"Nirmaleshwar"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":876,"author":{"gitId":"Nirmaleshwar"},"content":"\u003c/details\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":877,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":878,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":879,"author":{"gitId":"KZQ1999"},"content":"---","lastModifiedDate":"2021-11-01"},{"lineNumber":880,"author":{"gitId":"KZQ1999"},"content":"### 2.7 Graphing","lastModifiedDate":"2021-11-01"},{"lineNumber":881,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":882,"author":{"gitId":"KZQ1999"},"content":"### View yearly report: `show_graph`","lastModifiedDate":"2021-11-01"},{"lineNumber":883,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":884,"author":{"gitId":"KZQ1999"},"content":"This shows the monthly breakdown of the finances in a Yearly Report which also","lastModifiedDate":"2021-11-01"},{"lineNumber":885,"author":{"gitId":"KZQ1999"},"content":"includes current month spending and earnings.","lastModifiedDate":"2021-11-01"},{"lineNumber":886,"author":{"gitId":"KZQ1999"},"content":"We recommend using this function after your daily logging of expenses for a one-stop check-in on the state of your finances!","lastModifiedDate":"2021-11-01"},{"lineNumber":887,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":888,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":889,"author":{"gitId":"kyun99"},"content":"#### Note","lastModifiedDate":"2021-11-04"},{"lineNumber":890,"author":{"gitId":"kyun99"},"content":"1. The graph scales according to your largest monthly total, the scale currently used by the graph will be shown to you on the top right. 1.0E9 for example would mean 1,000,000,000, E stands for exponential.","lastModifiedDate":"2021-11-04"},{"lineNumber":891,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":892,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":893,"author":{"gitId":"kyun99"},"content":"2. It would be ideal not to have entries with big differences as the Stonks XD app is meant for daily logging.","lastModifiedDate":"2021-11-04"},{"lineNumber":894,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":895,"author":{"gitId":"kyun99"},"content":"Format: `show_graph [Y/YEAR]`","lastModifiedDate":"2021-11-05"},{"lineNumber":896,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":897,"author":{"gitId":"kyun99"},"content":"- `YEAR` is an optional input which you may include. It will show the graph that corresponds to the given year. It must be in the YYYY format","lastModifiedDate":"2021-11-05"},{"lineNumber":898,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":899,"author":{"gitId":"KZQ1999"},"content":"\u003cdetails\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":900,"author":{"gitId":"KZQ1999"},"content":"\u003csummary\u003e ▼ Expected output in run window \u003c/summary\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":901,"author":{"gitId":"KZQ1999"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":902,"author":{"gitId":"KZQ1999"},"content":"show_graph","lastModifiedDate":"2021-11-01"},{"lineNumber":903,"author":{"gitId":"KZQ1999"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":904,"author":{"gitId":"KZQ1999"},"content":"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx","lastModifiedDate":"2021-11-01"},{"lineNumber":905,"author":{"gitId":"KZQ1999"},"content":"x                                                                                                  x","lastModifiedDate":"2021-11-01"},{"lineNumber":906,"author":{"gitId":"kyun99"},"content":"x   Account Balance: $-449.50                                              Legend:                 x","lastModifiedDate":"2021-11-04"},{"lineNumber":907,"author":{"gitId":"kyun99"},"content":"x   Current month (NOVEMBER) total expense: $5454.00                             # is Expense      x","lastModifiedDate":"2021-11-04"},{"lineNumber":908,"author":{"gitId":"kyun99"},"content":"x   Current month (NOVEMBER) total income: $0.00                                 o is Income       x","lastModifiedDate":"2021-11-04"},{"lineNumber":909,"author":{"gitId":"kyun99"},"content":"x   Your Yearly Report                                                     Unit: 1000.0            x","lastModifiedDate":"2021-11-04"},{"lineNumber":910,"author":{"gitId":"KZQ1999"},"content":"x ------------------------------------------------------------------------------------------------ x","lastModifiedDate":"2021-11-01"},{"lineNumber":911,"author":{"gitId":"KZQ1999"},"content":"x                                                                                                  x","lastModifiedDate":"2021-11-01"},{"lineNumber":912,"author":{"gitId":"KZQ1999"},"content":"x                                                                                                  x","lastModifiedDate":"2021-11-01"},{"lineNumber":913,"author":{"gitId":"KZQ1999"},"content":"x                                                                                                  x","lastModifiedDate":"2021-11-01"},{"lineNumber":914,"author":{"gitId":"KZQ1999"},"content":"x                                                                                                  x","lastModifiedDate":"2021-11-01"},{"lineNumber":915,"author":{"gitId":"KZQ1999"},"content":"x                                                                                                  x","lastModifiedDate":"2021-11-01"},{"lineNumber":916,"author":{"gitId":"kyun99"},"content":"x                                                                                   #        o     x","lastModifiedDate":"2021-11-04"},{"lineNumber":917,"author":{"gitId":"kyun99"},"content":"x                                                                                   #        o     x","lastModifiedDate":"2021-11-04"},{"lineNumber":918,"author":{"gitId":"kyun99"},"content":"x                                                                                   #        o     x","lastModifiedDate":"2021-11-04"},{"lineNumber":919,"author":{"gitId":"kyun99"},"content":"x                                                                                   #        o     x","lastModifiedDate":"2021-11-04"},{"lineNumber":920,"author":{"gitId":"kyun99"},"content":"x                                                                                   #        o     x","lastModifiedDate":"2021-11-04"},{"lineNumber":921,"author":{"gitId":"KZQ1999"},"content":"x ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ x","lastModifiedDate":"2021-11-01"},{"lineNumber":922,"author":{"gitId":"KZQ1999"},"content":"x   Jan     Feb     Mar     Apr     May     Jun     Jul     Aug     Sept    Oct     Nov     Dec    x","lastModifiedDate":"2021-11-01"},{"lineNumber":923,"author":{"gitId":"KZQ1999"},"content":"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx","lastModifiedDate":"2021-11-01"},{"lineNumber":924,"author":{"gitId":"KZQ1999"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":925,"author":{"gitId":"KZQ1999"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":926,"author":{"gitId":"KZQ1999"},"content":"\u003c/details\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":927,"author":{"gitId":"KZQ1999"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":928,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":929,"author":{"gitId":"KZQ1999"},"content":"---","lastModifiedDate":"2021-11-01"},{"lineNumber":930,"author":{"gitId":"KZQ1999"},"content":"### 2.8 Clear all entries","lastModifiedDate":"2021-11-01"},{"lineNumber":931,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":932,"author":{"gitId":"KZQ1999"},"content":"### Clear all entries: `clear_all_entries`","lastModifiedDate":"2021-11-01"},{"lineNumber":933,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":934,"author":{"gitId":"KZQ1999"},"content":"Clears all the income and expense entries Stonks XD is currently keeping track of.","lastModifiedDate":"2021-11-01"},{"lineNumber":935,"author":{"gitId":"KZQ1999"},"content":"Use this when you want to start Stonks XD afresh. Be careful when you use it though!","lastModifiedDate":"2021-11-01"},{"lineNumber":936,"author":{"gitId":"KZQ1999"},"content":"This cannot be undone!","lastModifiedDate":"2021-11-01"},{"lineNumber":937,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":938,"author":{"gitId":"KZQ1999"},"content":"Format: `clear_all_entries`","lastModifiedDate":"2021-11-01"},{"lineNumber":939,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":940,"author":{"gitId":"KZQ1999"},"content":"\u003cdetails\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":941,"author":{"gitId":"KZQ1999"},"content":"\u003csummary\u003e ▼ Expected output in run window \u003c/summary\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":942,"author":{"gitId":"KZQ1999"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":943,"author":{"gitId":"KZQ1999"},"content":"If you wish to clear all your entries and start afresh:","lastModifiedDate":"2021-11-01"},{"lineNumber":944,"author":{"gitId":"KZQ1999"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":945,"author":{"gitId":"KZQ1999"},"content":"\u003cul\u003e\u003cli\u003e Give the command \u003ccode\u003eclear_all_entries\u003c/code\u003e\u003c/li\u003e\u003c/ul\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":946,"author":{"gitId":"KZQ1999"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":947,"author":{"gitId":"KZQ1999"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":948,"author":{"gitId":"KZQ1999"},"content":"All your entries have been cleared!","lastModifiedDate":"2021-11-01"},{"lineNumber":949,"author":{"gitId":"KZQ1999"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":950,"author":{"gitId":"KZQ1999"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":951,"author":{"gitId":"KZQ1999"},"content":"\u003c/details\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":952,"author":{"gitId":"KZQ1999"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":953,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":954,"author":{"gitId":"KZQ1999"},"content":"---","lastModifiedDate":"2021-11-01"},{"lineNumber":955,"author":{"gitId":"KZQ1999"},"content":"### 2.9 Terminating Program","lastModifiedDate":"2021-11-01"},{"lineNumber":956,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":957,"author":{"gitId":"Nirmaleshwar"},"content":"### Terminate program: `end`","lastModifiedDate":"2021-10-19"},{"lineNumber":958,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":959,"author":{"gitId":"kyun99"},"content":"This exits the program when you are done using it. A random tip will be shown along with the \"BYE\" message shown below.","lastModifiedDate":"2021-11-02"},{"lineNumber":960,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":961,"author":{"gitId":"Nirmaleshwar"},"content":"Format: `end`","lastModifiedDate":"2021-10-19"},{"lineNumber":962,"author":{"gitId":"Nirmaleshwar"},"content":"\u003cdetails\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":963,"author":{"gitId":"KZQ1999"},"content":"\u003csummary\u003e ▼ Expected output in run window \u003c/summary\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":964,"author":{"gitId":"KZQ1999"},"content":"\u003cpre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":965,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":966,"author":{"gitId":"Nirmaleshwar"},"content":"██████  ██    ██ ███████        ██  ","lastModifiedDate":"2021-10-19"},{"lineNumber":967,"author":{"gitId":"Nirmaleshwar"},"content":"██   ██  ██  ██  ██          ██  ██ ","lastModifiedDate":"2021-10-19"},{"lineNumber":968,"author":{"gitId":"Nirmaleshwar"},"content":"██████    ████   █████           ██ ","lastModifiedDate":"2021-10-19"},{"lineNumber":969,"author":{"gitId":"Nirmaleshwar"},"content":"██   ██    ██    ██          ██  ██ ","lastModifiedDate":"2021-10-19"},{"lineNumber":970,"author":{"gitId":"Nirmaleshwar"},"content":"██████     ██    ███████        ██ ","lastModifiedDate":"2021-10-19"},{"lineNumber":971,"author":{"gitId":"kyun99"},"content":"Here\u0027s our tip for the day: Try using the 50/30/20 rule to budget. 50% for needs, 30% for wants and 20% for savings","lastModifiedDate":"2021-11-02"},{"lineNumber":972,"author":{"gitId":"Nirmaleshwar"},"content":"-----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-19"},{"lineNumber":973,"author":{"gitId":"KZQ1999"},"content":"\u003c/pre\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":974,"author":{"gitId":"Nirmaleshwar"},"content":"\u003c/details\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":975,"author":{"gitId":"AnShengLee"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":976,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":977,"author":{"gitId":"KZQ1999"},"content":"---","lastModifiedDate":"2021-11-01"},{"lineNumber":978,"author":{"gitId":"KZQ1999"},"content":"### 2.10 Saving of Data","lastModifiedDate":"2021-11-01"},{"lineNumber":979,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":980,"author":{"gitId":"AnShengLee"},"content":"### Saving of Data","lastModifiedDate":"2021-10-26"},{"lineNumber":981,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":982,"author":{"gitId":"AnShengLee"},"content":"Stonks XD will save / load your data from `StonksXD_Entries.csv` and `StonksXD_Settings.csv`. This ensures that you ","lastModifiedDate":"2021-11-07"},{"lineNumber":983,"author":{"gitId":"AnShengLee"},"content":"will not lose your important data when Stonks XD changes.","lastModifiedDate":"2021-11-07"},{"lineNumber":984,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":985,"author":{"gitId":"AnShengLee"},"content":"The 2 `csv` files will be stored in the same directory as `StonksXD.jar`.","lastModifiedDate":"2021-11-07"},{"lineNumber":986,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":987,"author":{"gitId":"AnShengLee"},"content":"`StonksXD_Entries.csv` will store all your entries. They are:","lastModifiedDate":"2021-11-07"},{"lineNumber":988,"author":{"gitId":"AnShengLee"},"content":"1. `Expense` entries.","lastModifiedDate":"2021-11-07"},{"lineNumber":989,"author":{"gitId":"AnShengLee"},"content":"2. `Income` entries.","lastModifiedDate":"2021-11-07"},{"lineNumber":990,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":991,"author":{"gitId":"AnShengLee"},"content":"`StonksXD_Settings.csv` will store all the important settings. They are:","lastModifiedDate":"2021-11-07"},{"lineNumber":992,"author":{"gitId":"AnShengLee"},"content":"1. Currency setting","lastModifiedDate":"2021-11-07"},{"lineNumber":993,"author":{"gitId":"AnShengLee"},"content":"2. Threshold setting","lastModifiedDate":"2021-11-07"},{"lineNumber":994,"author":{"gitId":"AnShengLee"},"content":"3. Budget settings for different expense categories.","lastModifiedDate":"2021-11-07"},{"lineNumber":995,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":996,"author":{"gitId":"AnShengLee"},"content":"All important fields will be separated by a `,`.","lastModifiedDate":"2021-11-07"},{"lineNumber":997,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":998,"author":{"gitId":"AnShengLee"},"content":"The reason for data files to be in `.csv` format is so that you can have an easier time editing those data in Excel ","lastModifiedDate":"2021-10-26"},{"lineNumber":999,"author":{"gitId":"AnShengLee"},"content":"when **not** using the program. It is easy to make mistakes when editing the `csv` files manually so do be careful.","lastModifiedDate":"2021-11-07"},{"lineNumber":1000,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":1001,"author":{"gitId":"AnShengLee"},"content":"#### When editing csv files","lastModifiedDate":"2021-11-02"},{"lineNumber":1002,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":1003,"author":{"gitId":"AnShengLee"},"content":"- `.csv` files **must not** be open concurrently while Stonks XD is running. In other words, never have two programs ","lastModifiedDate":"2021-11-07"},{"lineNumber":1004,"author":{"gitId":"AnShengLee"},"content":"writing / reading the `.csv` files at the same time. This will very likely cause a saving / loading error and ","lastModifiedDate":"2021-11-07"},{"lineNumber":1005,"author":{"gitId":"AnShengLee"},"content":"lost of data.","lastModifiedDate":"2021-11-07"},{"lineNumber":1006,"author":{"gitId":"AnShengLee"},"content":"- Restrictions and rules for different variables are the same as how you would enter them in the Command Line ","lastModifiedDate":"2021-11-07"},{"lineNumber":1007,"author":{"gitId":"AnShengLee"},"content":"Interface, as specified above.","lastModifiedDate":"2021-11-07"},{"lineNumber":1008,"author":{"gitId":"AnShengLee"},"content":"  - For example, when editing an expense entry in `StonksXD_Entries.csv`, `entry_description` must not be blank.","lastModifiedDate":"2021-11-07"},{"lineNumber":1009,"author":{"gitId":"AnShengLee"},"content":"  - Another example, when editing an income entry in `StonksXD_Entries.csv`, `amount` has to be a positive number and ","lastModifiedDate":"2021-11-02"},{"lineNumber":1010,"author":{"gitId":"AnShengLee"},"content":"  less than 1000000.","lastModifiedDate":"2021-11-07"},{"lineNumber":1011,"author":{"gitId":"AnShengLee"},"content":"  - Another example, when editing `threshold` in `StonksXD_Settings.csv`, ensure it is between 0 and 1. ","lastModifiedDate":"2021-11-02"},{"lineNumber":1012,"author":{"gitId":"AnShengLee"},"content":"  - Another example, when editing an expense entry in `StonksXD_Entries.csv`, category should be the ones available and ","lastModifiedDate":"2021-11-02"},{"lineNumber":1013,"author":{"gitId":"AnShengLee"},"content":"  specified earlier on in the user guide.","lastModifiedDate":"2021-11-07"},{"lineNumber":1014,"author":{"gitId":"AnShengLee"},"content":"- Do not alter / delete the headers of `.csv` files. Stonks XD is able to minimise the damage if you do so but to ","lastModifiedDate":"2021-11-02"},{"lineNumber":1015,"author":{"gitId":"AnShengLee"},"content":"ensure your data is saved / loaded properly, please do not edit anything unexpected.","lastModifiedDate":"2021-11-02"},{"lineNumber":1016,"author":{"gitId":"AnShengLee"},"content":"- Stonks XD expects the dates in `StonksXD_Entries.csv` to be in `DD/MM/YYYY` format i.e., `11/12/2021` when loading ","lastModifiedDate":"2021-11-02"},{"lineNumber":1017,"author":{"gitId":"AnShengLee"},"content":"data. When opening `StonksXD_Entries.csv` in Excel, Excel might change the format of the dates. Do ensure Excel\u0027s date ","lastModifiedDate":"2021-11-07"},{"lineNumber":1018,"author":{"gitId":"AnShengLee"},"content":"format is in `DD/MM/YYYY` when dealing with `StonksXD_Entries.csv`. Entries with a different date format will be ","lastModifiedDate":"2021-11-02"},{"lineNumber":1019,"author":{"gitId":"AnShengLee"},"content":"considered corrupted and not be loaded into Stonks XD.","lastModifiedDate":"2021-11-02"},{"lineNumber":1020,"author":{"gitId":"AnShengLee"},"content":"- Changing the currency setting in `StonksXD_Settings.csv` is not recommended. This is because it will","lastModifiedDate":"2021-11-02"},{"lineNumber":1021,"author":{"gitId":"AnShengLee"},"content":"cause all your entries and budgets to be recognised as a different currency.","lastModifiedDate":"2021-10-27"},{"lineNumber":1022,"author":{"gitId":"AnShengLee"},"content":"- Do not edit the amount of your entries drastically such that they exceed the max amount per entry or the ","lastModifiedDate":"2021-11-07"},{"lineNumber":1023,"author":{"gitId":"AnShengLee"},"content":"total limit of 100000000000 for expenses / incomes. Entries that cause you to exceed either of the 2 limit will be ","lastModifiedDate":"2021-11-07"},{"lineNumber":1024,"author":{"gitId":"AnShengLee"},"content":"considered corrupted and not be loaded.","lastModifiedDate":"2021-11-07"},{"lineNumber":1025,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":1026,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":1027,"author":{"gitId":"AnShengLee"},"content":"#### In the event of corrupted data","lastModifiedDate":"2021-11-02"},{"lineNumber":1028,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":1029,"author":{"gitId":"AnShengLee"},"content":"When you run Stonks XD, it will immediately start to load all the data from both `.csv` files. You might run into ","lastModifiedDate":"2021-11-02"},{"lineNumber":1030,"author":{"gitId":"AnShengLee"},"content":"messages telling you that there are corrupted data, and they will not be loaded. This is likely because you have ","lastModifiedDate":"2021-11-02"},{"lineNumber":1031,"author":{"gitId":"AnShengLee"},"content":"edited things you are not suppose to, or you have edited wrongly. There is a way to minimise this damage (This is ","lastModifiedDate":"2021-11-02"},{"lineNumber":1032,"author":{"gitId":"AnShengLee"},"content":"optional, and you do not have to do this if you are fine with losing data). ","lastModifiedDate":"2021-11-02"},{"lineNumber":1033,"author":{"gitId":"AnShengLee"},"content":"Here are the steps:","lastModifiedDate":"2021-11-02"},{"lineNumber":1034,"author":{"gitId":"AnShengLee"},"content":"1. When you ended Stonks XD already but wants to edit the `.csv` files, make a copy of them first.","lastModifiedDate":"2021-11-02"},{"lineNumber":1035,"author":{"gitId":"AnShengLee"},"content":"2. When you run Stonks XD and receive corruption errors, end the program.","lastModifiedDate":"2021-11-02"},{"lineNumber":1036,"author":{"gitId":"AnShengLee"},"content":"3. Copy and paste the contents from your copies back into `StonksXD_Entries.csv` and `StonksXD_Settings.csv`. This ","lastModifiedDate":"2021-11-02"},{"lineNumber":1037,"author":{"gitId":"AnShengLee"},"content":"means all your edits are gone. But this pretty much ensures that there will be no corrupted data. ","lastModifiedDate":"2021-11-02"},{"lineNumber":1038,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":1039,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":1040,"author":{"gitId":"KZQ1999"},"content":"---","lastModifiedDate":"2021-11-01"},{"lineNumber":1041,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":1042,"author":{"gitId":"kyun99"},"content":"## 3. FAQ","lastModifiedDate":"2021-11-04"},{"lineNumber":1043,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1044,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1046,"author":{"gitId":"kyun99"},"content":"**A**: Your data is saved in 2 `.csv` files called `StonksXD_Entries.csv` and `StonksXD_Budget.csv`. To transfer the data, make a copy of these files and paste them in the same directory as the `.jar` file on your new machine. ","lastModifiedDate":"2021-10-25"},{"lineNumber":1047,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":1048,"author":{"gitId":"kyun99"},"content":"**Q**: What if my program terminates unexpectedly?","lastModifiedDate":"2021-10-25"},{"lineNumber":1049,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":1050,"author":{"gitId":"kyun99"},"content":"**A**: All data will be stored inside the respective `.csv` files.","lastModifiedDate":"2021-10-25"},{"lineNumber":1051,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1052,"author":{"gitId":"KZQ1999"},"content":"---","lastModifiedDate":"2021-11-01"},{"lineNumber":1053,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":1054,"author":{"gitId":"kyun99"},"content":"## 4. Command Summary","lastModifiedDate":"2021-11-04"},{"lineNumber":1055,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1056,"author":{"gitId":"KZQ1999"},"content":"| Action | Format | Examples |","lastModifiedDate":"2021-10-25"},{"lineNumber":1057,"author":{"gitId":"KZQ1999"},"content":"| ------------ | ------------- | ------------- |","lastModifiedDate":"2021-10-25"},{"lineNumber":1058,"author":{"gitId":"KZQ1999"},"content":"| View all possible commands | `help` | - |","lastModifiedDate":"2021-10-25"},{"lineNumber":1059,"author":{"gitId":"KZQ1999"},"content":"| Create expense entry | `add_ex d/DESCRIPTION a/AMOUNT c/CATEGORY`  |  `add_ex d/KFC lunch a/10.20 c/food` |","lastModifiedDate":"2021-10-25"},{"lineNumber":1060,"author":{"gitId":"KZQ1999"},"content":"| Create expense entry with date | `add_ex_d d/DESCRIPTION a/AMOUNT c/CATEGORY D/DATE`  |  `add_ex_d d/KFC lunch a/10.20 c/food D/20/08/2021` |","lastModifiedDate":"2021-11-07"},{"lineNumber":1061,"author":{"gitId":"KZQ1999"},"content":"| Delete expense entry | `del_ex i/INDEX` | `del_ex i/3` |","lastModifiedDate":"2021-10-25"},{"lineNumber":1062,"author":{"gitId":"KZQ1999"},"content":"| List all expense entries | `list_ex` | - |","lastModifiedDate":"2021-10-25"},{"lineNumber":1063,"author":{"gitId":"KZQ1999"},"content":"| View total expense | `total_ex` | - |","lastModifiedDate":"2021-10-25"},{"lineNumber":1064,"author":{"gitId":"KZQ1999"},"content":"| Create income entry | `add_in d/DESCRIPTION a/AMOUNT c/CATEGORY`  | `add_in d/work a/3200 c/salary` |","lastModifiedDate":"2021-10-25"},{"lineNumber":1065,"author":{"gitId":"KZQ1999"},"content":"| Create income entry with date | `add_in_d d/DESCRIPTION a/AMOUNT c/CATEGORY D/DATE`  |  `add_in_d d/work a/10.20 c/salary D/20/08/2021` |","lastModifiedDate":"2021-11-07"},{"lineNumber":1066,"author":{"gitId":"KZQ1999"},"content":"| Delete income entry | `del_in i/INDEX` | `del_in i/2` |","lastModifiedDate":"2021-10-25"},{"lineNumber":1067,"author":{"gitId":"KZQ1999"},"content":"| List all income entries | `list_in` | - |","lastModifiedDate":"2021-10-25"},{"lineNumber":1068,"author":{"gitId":"KZQ1999"},"content":"| View total income | `total_in` | - |","lastModifiedDate":"2021-10-25"},{"lineNumber":1069,"author":{"gitId":"KZQ1999"},"content":"| Find entry using date | `find YYYY-MM-DD` | `find 19/10/2021` |","lastModifiedDate":"2021-10-25"},{"lineNumber":1070,"author":{"gitId":"KZQ1999"},"content":"| Find entry using keyword | `find KEYWORD` | `find food`\u003cbr\u003e`find 3` |","lastModifiedDate":"2021-11-01"},{"lineNumber":1071,"author":{"gitId":"KZQ1999"},"content":"| View total balance | `balance` | - |","lastModifiedDate":"2021-10-25"},{"lineNumber":1072,"author":{"gitId":"KZQ1999"},"content":"| Show total expense between 2 dates | `btw_ex s/START_DATE e/END_DATE` | `btw_ex s/10/07/2021 e/23/10/2021` |","lastModifiedDate":"2021-10-25"},{"lineNumber":1073,"author":{"gitId":"KZQ1999"},"content":"| Show total income between 2 dates | `btw_in s/START_DATE e/END_DATE` | `btw_in s/10/07/2021 e/23/10/2021`  |","lastModifiedDate":"2021-10-25"},{"lineNumber":1074,"author":{"gitId":"KZQ1999"},"content":"| Clear all entries | `clear_all_entries` | - |","lastModifiedDate":"2021-10-25"},{"lineNumber":1075,"author":{"gitId":"KZQ1999"},"content":"| View Yearly Report | `show_graph` | - |","lastModifiedDate":"2021-10-25"},{"lineNumber":1076,"author":{"gitId":"KZQ1999"},"content":"| View Input Year Report|`show_graph Y/YYYY`|`show_graph Y/2023`|","lastModifiedDate":"2021-11-07"},{"lineNumber":1077,"author":{"gitId":"AnShengLee"},"content":"| Set currency | `set_curr c/CURRENCY` | `set_curr c/usd` |","lastModifiedDate":"2021-10-27"},{"lineNumber":1078,"author":{"gitId":"KZQ1999"},"content":"| Check current currency | `check_curr` | - |","lastModifiedDate":"2021-11-01"},{"lineNumber":1079,"author":{"gitId":"KZQ1999"},"content":"| To terminate program | `end` | - |","lastModifiedDate":"2021-10-25"},{"lineNumber":1080,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":1081,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":1082,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"kyun99":157,"AnShengLee":138,"Nirmaleshwar":194,"KZQ1999":464,"jonathanlkw":97,"-":32}},{"path":"docs/team/Nirmaleshwar.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Nirmaleshwar"},"content":"# Nirmaleshwar Sathiya Moorthi - Project Portfolio","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"Nirmaleshwar"},"content":"## Overview","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"Nirmaleshwar"},"content":"Year 3 Computer Engineering Student at National of University of Singapore.","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"Nirmaleshwar"},"content":"###Major projects include:","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"Nirmaleshwar"},"content":"- MBot using Arduino UNO","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"Nirmaleshwar"},"content":"- FPGA applications using Verilog","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"Nirmaleshwar"},"content":"- RTOS Programming on FRDM boards","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"Nirmaleshwar"},"content":"- Python and JAVA Scripting on PowerBI and Power Automate","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"Nirmaleshwar"},"content":"Done a host of other small projects in the following languages:","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"Nirmaleshwar"},"content":"- C","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"Nirmaleshwar"},"content":"- C++","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"Nirmaleshwar"},"content":"- JAVA","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"Nirmaleshwar"},"content":"- Python","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"Nirmaleshwar"},"content":"- Swift","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"Nirmaleshwar"},"content":"- NodeJS","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"Nirmaleshwar"},"content":"### Summary of Contributions","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"Nirmaleshwar":21}},{"path":"docs/team/anshenglee.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"# Lee An Sheng - Project Portfolio Page","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"## Overview","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":"Stonks XD is an expense managing software that aims to simplify the process of keeping track of one\u0027s finances.","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"AnShengLee"},"content":"The target users for this app are computing students that travels frequently and prefer logging their finances.","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"AnShengLee"},"content":"The app is able to track your daily expenses, set and adjust your spending limits and give advice based on daily expenses.","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"AnShengLee"},"content":"It is also able to give visual representations of financial data through bar graphs with currency conversion capabilities.","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"AnShengLee"},"content":"### Summary of Contributions","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"AnShengLee"},"content":"- **New Feature**: Added `Parser` class.","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"AnShengLee"},"content":"    - What it does: Parses user inputs and determine the command user is trying to call. Convert important information such as users\u0027 entries to easy-to-read data, vice versa.","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"AnShengLee"},"content":"    - Justification: `Parser` uses regex to do its job.","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"AnShengLee"},"content":"    - Highlights: This feature requires a decent understanding of regex. This feature also requires good thinking at the low level.","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"AnShengLee"},"content":"- **New Feature**: Added `DataManager` class.","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"AnShengLee"},"content":"    - What it does: Save and load users\u0027 entries and settings into a `csv` file.","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"AnShengLee"},"content":"    - Justification: Uses classes like `BufferedWriter` and `Scanner` to write and read files.","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"AnShengLee"},"content":"    - Highlights: This feature requires an understanding of file writing and reading libraries. Understand things like String manipulation to convert entries to `csv` data.","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"AnShengLee"},"content":"    ","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"AnShengLee"},"content":"  ","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"AnShengLee":23}},{"path":"docs/team/jonathanlkw.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jonathanlkw"},"content":"# Lam Kai Wen Jonathan - Project Portfolio Page","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"jonathanlkw"},"content":"---","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"## Overview","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"Stonks XD is an expense managing software that aims to simplify the process of keeping track of one\u0027s finances.","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"The target users for this app are computing students that travels frequently and prefer logging their finances.","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"jonathanlkw"},"content":"The app is able to track your daily expenses, set and adjust your spending limits and give advice based on daily expenses.","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"It is also able to give visual representations of financial data through bar graphs with currency conversion capabilities.","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"jonathanlkw"},"content":"---","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"jonathanlkw"},"content":"### Summary of Contributions","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"jonathanlkw"},"content":"- **New Feature**: Added `Entry`, `Expense` and `Income` classes.","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"jonathanlkw"},"content":"  - What it does: These form the base class structure for all added expense and income entries.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"jonathanlkw"},"content":"  - Justification: Each instance of the `Expense` and `Income` class contains important information about the entries in a concise manner.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"jonathanlkw"},"content":"  - Highlights: This feature requires an understanding of class inheritance to implement. Furthermore, `Expense` and `Income` classes form the basis for most implementations in `FinancialTracker`.","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"jonathanlkw"},"content":"- **New Feature**: Added `Budget` class and its child classes.","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"jonathanlkw"},"content":"  - What it does: Stores every possible budget in the program as a child class of `Budget`.","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"jonathanlkw"},"content":"  - Justification: Information about the respective budgets (budget limits, current spending), and their methods can be stored an accessed in an elegant manner.","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"jonathanlkw"},"content":"  - Highlights: This feature requires an understanding of class and method inheritance in order to efficiently set up multiple budgets.","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"jonathanlkw"},"content":"- **New Feature**: Added `BudgetManager` class.","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"jonathanlkw"},"content":"  - What it does: This is the main processor of all budget and budget reminder operations. (Budget reminders are given when the user approaches/exceeds an active budget, and prompts are given to the user on how to refactor the budget.)","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"jonathanlkw"},"content":"  - Justification: Contains all budget and budget reminder methods. Isolates budget operations from other operations in the program.","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"jonathanlkw"},"content":"  - Highlights: The logic behind the budget reminders to be given was quite challenging as it contained many scenarios.","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"jonathanlkw"},"content":"- **New Feature**: Added `set_budget` command.","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"jonathanlkw"},"content":"  - What it does: Receives input from the user and sets the budget limit for the appropriate budget. Budget limits of 0 represent deactivated budgets.","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"jonathanlkw"},"content":"  - Justification: Allows user to set his budgets as a way to manage his finances.","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"jonathanlkw"},"content":"  - Highlights: This feature required interaction between `Parser`, `Command` and `Ui` classes. Understanding of the program execution flow was required to implement correctly. Furthermore, invalid inputs by users had to be properly handled with error messages shown.","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"jonathanlkw"},"content":"- **New Feature**: Added `check_budget` command.","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"jonathanlkw"},"content":"  - What it does: Shows the user the current budget limit of a requested budget.","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"jonathanlkw"},"content":"  - Justification: Allows the user to check and understand his current budget limits and plan appropriately. ","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"jonathanlkw"},"content":"  - Highlights: This feature required interaction between `Parser`, `Command` and `Ui` classes. Understanding of the program execution flow was required to implement correctly. Furthermore, invalid budgets inputted had to be properly handled with error messages shown.","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"jonathanlkw"},"content":"- **New Feature**: Added `set_threshold` command.","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"jonathanlkw"},"content":"  - What it does: Receives input from the user and sets the threshold limit beyond which budget reminders will be given.","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"jonathanlkw"},"content":"  - Justification: Allows user to customise when he wants to receive warnings.","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"jonathanlkw"},"content":"  - Highlights: This feature required understand of the interaction between `Parser`, `Command` and `Ui` classes. Invalid inputs of more than 2dp had to be handled and inputs below zero and above 1 had to be rejected.","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"jonathanlkw"},"content":"  ","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"jonathanlkw"},"content":"Link to code contribution: [RepoSense Link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003djonathanlkw\u0026tabRepo\u003dAY2122S1-CS2113T-T12-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"jonathanlkw"},"content":"- **Project Management**: ","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"jonathanlkw"},"content":"  - Managed release `v1.0` on GitHub.","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"jonathanlkw"},"content":"- **Enhancement to existing features**: ","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"jonathanlkw"},"content":"  - Wrote JUnit tests for `BudgetManager` class (Pull requests [#84](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/84), [#127](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/127)) TO-BE-UPDATED","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"jonathanlkw"},"content":"  - Added additional JUnit tests for `Ui` class (Pull request [#127](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/127)) TO-BE-UPDATED","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"jonathanlkw"},"content":"  - Bug fixes. (Pull requests [#42](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/42), [#44](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/44), [#135](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/135)) TO-BE-UPDATED","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"jonathanlkw"},"content":"  ","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"jonathanlkw"},"content":"- **Documentation**:","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"jonathanlkw"},"content":"  - User Guide:","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"jonathanlkw"},"content":"    - Contributed to the writing of the introduction to StonksXD (Pull requests [#86](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/86/files), [#129](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/129))","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"jonathanlkw"},"content":"    - Added write-up for `set_budget`, `check_budget` and `set_threshold` commands (Pull request [#129](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/129))","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"jonathanlkw"},"content":"    - Made edits for grammar and friendlier tone (Pull request [#129](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/129)) TO-BE-UPDATED","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"jonathanlkw"},"content":"  - Developer Guide:","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"jonathanlkw"},"content":"    - Added Architecture Component write-up and architecture diagram (Pull requests [#85](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/85), [#89](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/89), [#133](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/133))","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"jonathanlkw"},"content":"    - Added Budget Component write-up and sequence diagram (Pull request [#133](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/133))","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"jonathanlkw"},"content":"- **Community**:","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"jonathanlkw"},"content":"  - PRs reviewed (with non-trivial comments): [#27](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/27), [#83](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/83), [#122](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/122), [#201](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/201), [#211](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/211), [#213](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/213) TO-BE-UPDATED","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"jonathanlkw"},"content":"  - Contributed to the discussion of solutions to PE-D bugs via zoom meetings.","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"jonathanlkw":72}},{"path":"docs/team/kyun99.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"# Lim Kay Yun\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"kyun99"},"content":"## Project: StonksXD","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"Stonks XD - It is an expense managing software that aims to simplify the process of keeping track of ones\u0027 s finances.","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"The target users for this app are computing students that travels frequently and prefer logging their finances.","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"By simplifying the commands, we made logging financial information easy, lowering the barrier of entry for users to build","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"positive financial habits","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"kyun99"},"content":"- **New Feature**: Added StonksXD class.","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"kyun99"},"content":"  - What it does: It is the main class of the entire program which interacts with all the main components of the program","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"kyun99"},"content":"  - Justification: This feature acts as the central processor of the program ","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":"  - Highlights: The components used in the program used this class a point of entry. New components are added accordingly in this class","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":"  - Credits: Structure of code is adapted from [addressbook-level2](https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/Main.java)  ","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"kyun99"},"content":"- **New Feature**: Added command and exit command class","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"kyun99"},"content":"  - What is does: Command is the parent class which all other commands inherit from and ExitCommand is the only class that inherits","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"kyun99"},"content":"     overrides isExit method of Command, which is used to terminate the program","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"kyun99"},"content":"  - Justification: Command specifies the structure of the other command classes so that they can integrate well with the main class.","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"kyun99"},"content":"    Only the exit command should terminate the program. Other classes which inherits from Command should not be able to do so.","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"kyun99"},"content":"  - Highlights: All commands used in the program inherits from the Command class. If there is any change in behavior require to be done for ","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"kyun99"},"content":"    all commands, it should be done in Command.","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"kyun99"},"content":"- **New Feature**: Added commands to get the total expense/income entries.","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"kyun99"},"content":"  - What it does: It calculates the sum of all the amounts in each expense/income entry.  ","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"kyun99"},"content":"  - Justification: Provides insights on the expense/income of the user","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"kyun99"},"content":"  - Highlights: This feature is used as a foundation for another command that gets total expense/income given a specified date range.","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"kyun99"},"content":"- **New Feature**: Added commands to get the total expense/income entries between 2 dates.","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"kyun99"},"content":"  - What it does: It calculates the sum of all the amounts in each expense/income entry based on a pair of dates.","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"kyun99"},"content":"  - Justification: Provides insights on the expense/income of the user","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"kyun99"},"content":"  - Highlights: This feature is used as a foundation for methods used to extract information to be printed on the graph using the graph command.","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"kyun99"},"content":"- **Code contributed**: https://nus-cs2113-ay2122s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dkyun99","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"kyun99"},"content":"- **Project management**:","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"kyun99"},"content":"  - Managed release v2.0 on GitHub","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"kyun99"},"content":"  - Ensured forking workflow","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"kyun99"},"content":"  - Brainstormed for features and ideas as a project","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"kyun99"},"content":"- **Enhancements to existing features**: (TO BE UPDATED)","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"kyun99"},"content":"  - Fixed PE-D bugs. [#195](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/195/files), [#200](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/200/files)","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"kyun99"},"content":"  - Wrote additional tests for existing features. [#166](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/116), [#202](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/202)","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"kyun99"},"content":"  - Added Categories and Date fields to Expense and Income.[#56](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/56)","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"kyun99"},"content":"  - Added method to get data for printing in graph command. [#66](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/66)","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"kyun99"},"content":"  - Refactored financial tracker class to use 2 array list instead of 1, making the code cleaner and more readable. [#45](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/45) ","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"kyun99"},"content":"  - Refactored parser code to use exceptions. [#97](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/97)","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"kyun99"},"content":"- **Documentation**: (TO BE UPDATED)","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"kyun99"},"content":"  - User Guide:","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"kyun99"},"content":"    - Supplemented total_in, total_ex, btw_in, btw_ex commands. [#217](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/217)","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"kyun99"},"content":"    - Supplemented add_in, add_ex commands. [#208](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/208)","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"kyun99"},"content":"    - Added FAQ. [#105](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/105)","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"kyun99"},"content":"  - Developer Guide:","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"kyun99"},"content":"    - Add Financial Tracker component","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"kyun99"},"content":"    - Add StonksXD sequence diagram","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"kyun99"},"content":"    - Add Command component sequence diagram","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"kyun99"},"content":"- **Community**: ","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"kyun99"},"content":"  - PRs reviewed including but not limited to: [#49](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/49), [213](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/213), [#64](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/64)","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"kyun99"},"content":"  ","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"kyun99":72}},{"path":"docs/team/kzq1999.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KZQ1999"},"content":"# Zhi Qian - Project Portfolio Page","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"KZQ1999"},"content":"--- ","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"KZQ1999"},"content":"## 1. Overview","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"Stonks XD is an expense managing software that aims to simplify the process of keeping track of one\u0027s finances.","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"KZQ1999"},"content":"The target users for this app are computing students that travels frequently and prefer logging their finances.","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"KZQ1999"},"content":"The app is able to track your daily expenses, set and adjust your spending limits and give advice based on daily expenses.","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"KZQ1999"},"content":"It is also able to give visual representations of financial data through bar graphs with currency conversion capabilities.","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"KZQ1999"},"content":"---","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"KZQ1999"},"content":"### 2. Summary of Contributions","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"KZQ1999"},"content":"* `Ui class`","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"KZQ1999"},"content":"  * What it does: Handles all the feedback messages and listing message of the program by printing it to the terminal for users to see.","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"KZQ1999"},"content":"  * Justifications: Users requires some sort of feedback to know what they are doing in the program, things include error messages, alerting of missing parameters, indexing and organising of different messages.","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"KZQ1999"},"content":"  * Highlights: This enhancement requires proper understanding of what needs to be shown, the indexing, different enums, format specifiers like 2 decimal place for money related entries. ","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"KZQ1999"},"content":"  ","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"KZQ1999"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"KZQ1999"},"content":"  ","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"KZQ1999"},"content":"* `Help command`","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"KZQ1999"},"content":"  * What it does: Listing all possible commands for the users","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"KZQ1999"},"content":"  * Justifications: Users need to have something to remind them of what commands exist","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"KZQ1999"},"content":"  * Highlights: Uses  the List library to add every help command and its format into an array, command and its format are all represented as CONSTANTS for easy reconfiguration.","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"KZQ1999"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"KZQ1999"},"content":"* `List commands` ","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"KZQ1999"},"content":"  * What it does: List out the expenses entries, income entries or entries that the user searched for using find command","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"KZQ1999"},"content":"  * Justifications: Users that use the Stonks XD program might want to view all the things that they added, so having the capability to list would be a very helpful addition to the program.","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"KZQ1999"},"content":"  * Highlights: Requires handling of multiple ArrayList of FinancialTracker.","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"KZQ1999"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"KZQ1999"},"content":"  ","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"KZQ1999"},"content":"* `Find command`","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"KZQ1999"},"content":"  * What it does: Allow users to search through dates, keywords, value and category","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"KZQ1999"},"content":"  * Justifications: There may be too many entries and having a find function that can filter through all these entries would be very helpful.","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"KZQ1999"},"content":"Users might want to search not only based on description but also based on dates, values and categories being able to do so would be much more convenient","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"KZQ1999"},"content":"  * Highlights: Requires parsing of values from double to string, dates to string and use of try- catch to handle any exceptions thrown. Enums were used in finding categories in place of original version of String.","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"KZQ1999"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"KZQ1999"},"content":"  ","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"KZQ1999"},"content":"* `Balance command` ","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"KZQ1999"},"content":"  * What it does: Allow users to see the net balance of all expenses and incomes in the program","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"KZQ1999"},"content":"  * Justifications: Users might want to know how much they have right now so they can decide how much to spend in the future","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"KZQ1999"},"content":"  * Highlights: Balance is dynamic and it depends on the entries given in the program, so using clear_all_entries would wipe all balance too.","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"KZQ1999"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"KZQ1999"},"content":"  ","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"KZQ1999"},"content":"* `StonksGraph Class` ","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"KZQ1999"},"content":"  * What it does: Graphing of the various financial calculations into a snapshot with bargraphs","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"KZQ1999"},"content":"  * Justifications: Users might need some sort of visualisation of their financial data, as numbers by itself are not that helpful. With this feature they will be able to view their monthly expenses throughout the year with ease and identify point of major spending or earning.","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"KZQ1999"},"content":"  * Highlights: Uses 2D array to represent the graph and uses date library to constantly plot the graph based on current year and current month.","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"KZQ1999"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"KZQ1999"},"content":"* Link to code contribution: [Reposense Link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-25\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dKZQ1999\u0026tabRepo\u003dAY2122S1-CS2113T-T12-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"KZQ1999"},"content":"* Enhancement to existing features","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"KZQ1999"},"content":"  * Added Junit testing for testing outputs to terminal [#25](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/25) [#40](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/40) [#80](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/80) [#93](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/93)","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"KZQ1999"},"content":"  * Refractoring and cleaning of code [#47](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/47) [#91](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/91)","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"KZQ1999"},"content":"  * Javadocs [#125](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/125)","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"KZQ1999"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"KZQ1999"},"content":"* Contributions to the UG: ","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"KZQ1999"},"content":"  * Content page organisation [#201](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/201)","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"KZQ1999"},"content":"  * `Graphing` feature in the UG [#104](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/104)","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"KZQ1999"},"content":"  * `Find,help and end` feature in the UG [#205](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/205)","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"KZQ1999"},"content":"  * Fixed UG deployment issue [#113](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/113)","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"KZQ1999"},"content":"  * Contributed to the command summary table as part of the team  [#205](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/205)","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"KZQ1999"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"KZQ1999"},"content":"* Contributions to the DG: ","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"KZQ1999"},"content":"  * `Ui` component and user stories [#80](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/80)","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"KZQ1999"},"content":"  * Added `listing` Sequence Diagram for the `Ui` component [#104](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/104)","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"KZQ1999"},"content":"  * Added Sequence Diagram for the `graphing` component: [#205](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/205) [#210](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/210)","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"KZQ1999"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"KZQ1999"},"content":"* Contributions to team-based tasks","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"KZQ1999"},"content":"  * Creating Team Repository","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"KZQ1999"},"content":"  * Worked as a team to come out with User Guide, Features for V1.0 through many team meetings ","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"KZQ1999"},"content":"  * Brainstormed for user stories as a team","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"KZQ1999"},"content":"  * Creating jar file for `v1.0`","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"KZQ1999"},"content":"  * Issue, Milestone handling in Github issue tracker.","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"KZQ1999"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":89,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":90,"author":{"gitId":"KZQ1999"},"content":"* Review/mentoring contributions:","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"KZQ1999"},"content":"  * Links to PR reviewed:","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"KZQ1999"},"content":"    [#11](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/11)","lastModifiedDate":"2021-11-02"},{"lineNumber":93,"author":{"gitId":"KZQ1999"},"content":"    [#20](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/20)","lastModifiedDate":"2021-11-02"},{"lineNumber":94,"author":{"gitId":"KZQ1999"},"content":"    [#27](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/27)","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"KZQ1999"},"content":"    [#49](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/49)","lastModifiedDate":"2021-11-02"},{"lineNumber":96,"author":{"gitId":"KZQ1999"},"content":"    [#56](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/56)","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"KZQ1999"},"content":"    [#110](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/110)","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"KZQ1999"},"content":"    [#123](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/123)","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"KZQ1999"},"content":"    [#201](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/201)","lastModifiedDate":"2021-11-02"},{"lineNumber":100,"author":{"gitId":"KZQ1999"},"content":"    [#206](https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/206)","lastModifiedDate":"2021-11-02"},{"lineNumber":101,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":102,"author":{"gitId":"KZQ1999"},"content":"  * Helped in other ways:","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"KZQ1999"},"content":"    * Contributed to zoom calls to help teammates in trouble.","lastModifiedDate":"2021-11-02"},{"lineNumber":104,"author":{"gitId":"KZQ1999"},"content":"    * Contributed to discussions and call for help whenever a teammate is in trouble.","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":107,"author":{"gitId":"KZQ1999"},"content":"  ","lastModifiedDate":"2021-11-01"},{"lineNumber":108,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":109,"author":{"gitId":"KZQ1999"},"content":"* Evidence of helping others: ","lastModifiedDate":"2021-11-02"},{"lineNumber":110,"author":{"gitId":"KZQ1999"},"content":"  * [PE-DryRun](https://github.com/KZQ1999/ped/tree/main/files)","lastModifiedDate":"2021-11-02"},{"lineNumber":111,"author":{"gitId":"KZQ1999"},"content":"  * [DG-Review](https://github.com/nus-cs2113-AY2122S1/tp/pull/28/files/b7ab96268157fb2dd4459dd973ac30ded04712c0)","lastModifiedDate":"2021-11-02"},{"lineNumber":112,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":113,"author":{"gitId":"KZQ1999"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":114,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":115,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":116,"author":{"gitId":"KZQ1999"},"content":"* Evidence of technical accomplishments ","lastModifiedDate":"2021-11-01"},{"lineNumber":117,"author":{"gitId":"KZQ1999"},"content":"  * Graphing is a component that is quite tricky as it involves 2d arrays, plotting, incorporating different methods to generate each part of the graph. Scaling of graph is another major component that is quite difficult to accomplish.","lastModifiedDate":"2021-11-02"},{"lineNumber":118,"author":{"gitId":"KZQ1999"},"content":"  ","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"KZQ1999":117,"jonathanlkw":1}},{"path":"src/main/java/seedu/budget/BillsBudget.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonathanlkw"},"content":"package seedu.budget;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"jonathanlkw"},"content":"import seedu.entry.ExpenseCategory;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"public class BillsBudget extends Budget {","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"    public BillsBudget(double limit) {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"jonathanlkw"},"content":"        this.category \u003d ExpenseCategory.BILLS;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"        this.name \u003d ExpenseCategory.BILLS.toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"jonathanlkw"},"content":"        this.limit \u003d limit;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"jonathanlkw"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"jonathanlkw":11}},{"path":"src/main/java/seedu/budget/Budget.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonathanlkw"},"content":"package seedu.budget;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"jonathanlkw"},"content":"import seedu.entry.Expense;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"import seedu.entry.ExpenseCategory;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"jonathanlkw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"jonathanlkw"},"content":"public abstract class Budget {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"jonathanlkw"},"content":"    protected ExpenseCategory category;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"jonathanlkw"},"content":"    protected String name;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"jonathanlkw"},"content":"    protected double limit;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"jonathanlkw"},"content":"    public ExpenseCategory getCategory() {","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"jonathanlkw"},"content":"        return this.category;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"jonathanlkw"},"content":"    public String getName() {","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"jonathanlkw"},"content":"        return this.name;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"jonathanlkw"},"content":"    public void setLimit(double amount) {","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"jonathanlkw"},"content":"        this.limit \u003d amount;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"jonathanlkw"},"content":"    public double getLimit() {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"jonathanlkw"},"content":"        return this.limit;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"jonathanlkw"},"content":"    public double calAmount(ArrayList\u003cExpense\u003e entries, LocalDate date) {","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"jonathanlkw"},"content":"        double amount \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"jonathanlkw"},"content":"        for (Expense expense : entries) {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"jonathanlkw"},"content":"            if ((expense.getCategory() \u003d\u003d this.category) \u0026 isCorrectMonthYear(expense, date)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"jonathanlkw"},"content":"                amount +\u003d expense.getValue();","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"jonathanlkw"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"jonathanlkw"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"jonathanlkw"},"content":"        assert amount \u003e\u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"jonathanlkw"},"content":"        return amount;","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"jonathanlkw"},"content":"    protected boolean isCorrectMonthYear(Expense expense, LocalDate date) {","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"jonathanlkw"},"content":"        return expense.getDate().getMonth() \u003d\u003d date.getMonth() \u0026 expense.getDate().getYear() \u003d\u003d date.getYear();","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"jonathanlkw"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"jonathanlkw":44}},{"path":"src/main/java/seedu/budget/EntertainmentBudget.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonathanlkw"},"content":"package seedu.budget;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"jonathanlkw"},"content":"import seedu.entry.ExpenseCategory;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"public class EntertainmentBudget extends Budget {","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"    public EntertainmentBudget(double limit) {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"jonathanlkw"},"content":"        this.category \u003d ExpenseCategory.ENTERTAINMENT;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"        this.name \u003d ExpenseCategory.ENTERTAINMENT.toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"jonathanlkw"},"content":"        this.limit \u003d limit;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"jonathanlkw"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"jonathanlkw":11}},{"path":"src/main/java/seedu/budget/FoodBudget.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonathanlkw"},"content":"package seedu.budget;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"jonathanlkw"},"content":"import seedu.entry.ExpenseCategory;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"public class FoodBudget extends Budget {","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"jonathanlkw"},"content":"    public FoodBudget(double limit) {","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"        this.category \u003d ExpenseCategory.FOOD;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"jonathanlkw"},"content":"        this.name \u003d ExpenseCategory.FOOD.toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"jonathanlkw"},"content":"        this.limit \u003d limit;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"jonathanlkw"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"jonathanlkw":12}},{"path":"src/main/java/seedu/budget/MedicalBudget.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonathanlkw"},"content":"package seedu.budget;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"jonathanlkw"},"content":"import seedu.entry.ExpenseCategory;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"public class MedicalBudget extends Budget {","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"jonathanlkw"},"content":"    public MedicalBudget(double limit) {","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"        this.category \u003d ExpenseCategory.MEDICAL;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"jonathanlkw"},"content":"        this.name \u003d ExpenseCategory.MEDICAL.toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"jonathanlkw"},"content":"        this.limit \u003d limit;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"jonathanlkw"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"jonathanlkw":12}},{"path":"src/main/java/seedu/budget/MiscBudget.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonathanlkw"},"content":"package seedu.budget;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"jonathanlkw"},"content":"import seedu.entry.ExpenseCategory;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"public class MiscBudget extends Budget {","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"    public MiscBudget(double limit) {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"jonathanlkw"},"content":"        this.category \u003d ExpenseCategory.MISC;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"        this.name \u003d ExpenseCategory.MISC.toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"jonathanlkw"},"content":"        this.limit \u003d limit;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"jonathanlkw"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"jonathanlkw":11}},{"path":"src/main/java/seedu/budget/OverallBudget.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonathanlkw"},"content":"package seedu.budget;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"jonathanlkw"},"content":"import seedu.entry.Expense;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"public class OverallBudget extends Budget {","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"jonathanlkw"},"content":"    public OverallBudget(double limit) {","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"jonathanlkw"},"content":"        this.category \u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"jonathanlkw"},"content":"        this.name \u003d \"OVERALL\";","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"jonathanlkw"},"content":"        this.limit \u003d limit;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"jonathanlkw"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"jonathanlkw"},"content":"    public double calAmount(ArrayList\u003cExpense\u003e entries, LocalDate date) {","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"jonathanlkw"},"content":"        double amount \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"jonathanlkw"},"content":"        for (Expense expense : entries) {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"jonathanlkw"},"content":"            if (isCorrectMonthYear(expense, date)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"jonathanlkw"},"content":"                amount +\u003d expense.getValue();","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"jonathanlkw"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"jonathanlkw"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"jonathanlkw"},"content":"        assert amount \u003e\u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"jonathanlkw"},"content":"        return amount;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"jonathanlkw"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"jonathanlkw":27}},{"path":"src/main/java/seedu/budget/TransportBudget.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonathanlkw"},"content":"package seedu.budget;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"jonathanlkw"},"content":"import seedu.entry.ExpenseCategory;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"public class TransportBudget extends Budget {","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"jonathanlkw"},"content":"    public TransportBudget(double limit) {","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"        this.category \u003d ExpenseCategory.TRANSPORT;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"jonathanlkw"},"content":"        this.name \u003d ExpenseCategory.TRANSPORT.toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"jonathanlkw"},"content":"        this.limit \u003d limit;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"jonathanlkw"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"jonathanlkw":12}},{"path":"src/main/java/seedu/commands/ClearAllEntriesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nirmaleshwar"},"content":"package seedu.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.budget.Budget;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Nirmaleshwar"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"Nirmaleshwar"},"content":" * Clears all expense and income entries. This is so that users can start afresh.","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"Nirmaleshwar"},"content":" * Also allows us developers to have easier time testing data saving capabilities.","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"Nirmaleshwar"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"Nirmaleshwar"},"content":"public class ClearAllEntriesCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"Nirmaleshwar"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"Nirmaleshwar"},"content":"    public void execute(FinancialTracker finances, Ui ui, BudgetManager budgetManager,","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"Nirmaleshwar"},"content":"                        CurrencyManager currencyManager) {","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"Nirmaleshwar"},"content":"        finances.clearAllEntries();","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"Nirmaleshwar"},"content":"        ui.printAllEntriesCleared();","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"Nirmaleshwar"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"Nirmaleshwar":21}},{"path":"src/main/java/seedu/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"Nirmaleshwar"},"content":"    public abstract void execute(FinancialTracker finances, Ui ui, BudgetManager budgetManager,","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"Nirmaleshwar"},"content":"                                 CurrencyManager currencyManager);","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"kyun99"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"kyun99"},"content":"        return false;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kyun99":11,"Nirmaleshwar":3,"jonathanlkw":1}},{"path":"src/main/java/seedu/commands/InvalidCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"AnShengLee"},"content":"    ","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"AnShengLee"},"content":"    private final String message;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"AnShengLee"},"content":"    ","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"AnShengLee"},"content":"    public InvalidCommand(String message) {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"AnShengLee"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"AnShengLee"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"AnShengLee"},"content":"        return message;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"kyun99"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"Nirmaleshwar"},"content":"    public void execute(FinancialTracker finances, Ui ui, BudgetManager budgetManager,","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"Nirmaleshwar"},"content":"                        CurrencyManager currencyManager) {","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"AnShengLee"},"content":"        ui.printError(message);","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kyun99":9,"AnShengLee":12,"Nirmaleshwar":3,"jonathanlkw":1}},{"path":"src/main/java/seedu/commands/budget/BalanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package seedu.commands.budget;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"KZQ1999"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"KZQ1999"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"KZQ1999"},"content":"public class BalanceCommand extends Command {","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"KZQ1999"},"content":"     * Prints the balance of the financial tracker to the standard output.","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"KZQ1999"},"content":"     * @param finances The financial tracker containing all the entries.","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"KZQ1999"},"content":"     * @param ui The user interface which provide feedback to the user.","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"KZQ1999"},"content":"     * @param budgetManager The budgeting manager that manages all the budget related operations.","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"Nirmaleshwar"},"content":"    public void execute(FinancialTracker finances, Ui ui, BudgetManager budgetManager,","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"Nirmaleshwar"},"content":"                        CurrencyManager currencyManager) {","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"AnShengLee"},"content":"        ui.printBalance(finances.calculateBalance());","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"KZQ1999"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"AnShengLee":3,"KZQ1999":15,"Nirmaleshwar":3,"jonathanlkw":1}},{"path":"src/main/java/seedu/commands/budget/CheckBudgetCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package seedu.commands.budget;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"import seedu.entry.ExpenseCategory;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"jonathanlkw"},"content":"public class CheckBudgetCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"jonathanlkw"},"content":"    ExpenseCategory category;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"jonathanlkw"},"content":"    public CheckBudgetCommand(ExpenseCategory category) {","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"jonathanlkw"},"content":"        this.category \u003d category;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"jonathanlkw"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"Nirmaleshwar"},"content":"    public void execute(FinancialTracker finances, Ui ui, BudgetManager budgetManager,","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"Nirmaleshwar"},"content":"                        CurrencyManager currencyManager) {","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"jonathanlkw"},"content":"        double budgetLimit \u003d budgetManager.getBudget(category);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"jonathanlkw"},"content":"        ui.printBudget(category, budgetLimit);","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"jonathanlkw"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"AnShengLee":2,"Nirmaleshwar":3,"jonathanlkw":19}},{"path":"src/main/java/seedu/commands/budget/SetBudgetCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package seedu.commands.budget;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"import seedu.entry.ExpenseCategory;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"import seedu.reminder.BudgetReminder;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"jonathanlkw"},"content":"public class SetBudgetCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"jonathanlkw"},"content":"    ExpenseCategory category;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"jonathanlkw"},"content":"    double amount;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"jonathanlkw"},"content":"    public SetBudgetCommand(ExpenseCategory category, double amount) {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"jonathanlkw"},"content":"        this.category \u003d category;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"jonathanlkw"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"jonathanlkw"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"Nirmaleshwar"},"content":"    public void execute(FinancialTracker finances, Ui ui, BudgetManager budgetManager,","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"Nirmaleshwar"},"content":"                        CurrencyManager currencyManager) {","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"jonathanlkw"},"content":"        BudgetReminder reminder \u003d budgetManager.setBudget(amount, category, finances.getExpenses());","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"jonathanlkw"},"content":"        ui.printSetBudgetReminder(reminder);","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"jonathanlkw"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"AnShengLee":2,"Nirmaleshwar":3,"jonathanlkw":21}},{"path":"src/main/java/seedu/commands/budget/SetThresholdCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package seedu.commands.budget;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"jonathanlkw"},"content":"public class SetThresholdCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"jonathanlkw"},"content":"    double threshold;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"jonathanlkw"},"content":"    public SetThresholdCommand(double threshold) {","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"jonathanlkw"},"content":"        this.threshold \u003d threshold;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"jonathanlkw"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"Nirmaleshwar"},"content":"    public void execute(FinancialTracker finances, Ui ui, BudgetManager budgetManager,","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"Nirmaleshwar"},"content":"                        CurrencyManager currencyManager) {","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"jonathanlkw"},"content":"        budgetManager.setThreshold(threshold);","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"jonathanlkw"},"content":"        ui.printThresholdConfirmation(threshold);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"jonathanlkw"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"AnShengLee":2,"Nirmaleshwar":3,"jonathanlkw":17}},{"path":"src/main/java/seedu/commands/currency/CheckCurrentCurrencyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nirmaleshwar"},"content":"package seedu.commands.currency;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"AnShengLee"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"AnShengLee"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"AnShengLee"},"content":"public class CheckCurrentCurrencyCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"AnShengLee"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"Nirmaleshwar"},"content":"    public void execute(FinancialTracker finances, Ui ui, BudgetManager budgetManager,","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"Nirmaleshwar"},"content":"                        CurrencyManager currencyManager) {","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"Nirmaleshwar"},"content":"        CurrencyType currency \u003d currencyManager.getCurrency();","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"AnShengLee"},"content":"        ui.printCurrentCurrency(currency);","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"AnShengLee"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"AnShengLee":12,"Nirmaleshwar":5}},{"path":"src/main/java/seedu/commands/currency/CurrencyConversionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nirmaleshwar"},"content":"package seedu.commands.currency;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.commands.Command;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.exceptions.SameCurrencyTypeException;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"Nirmaleshwar"},"content":"public class CurrencyConversionCommand extends Command {","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"Nirmaleshwar"},"content":"    protected CurrencyType from \u003d CurrencyType.SGD;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"Nirmaleshwar"},"content":"    protected CurrencyType to;","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"Nirmaleshwar"},"content":"    public CurrencyConversionCommand(CurrencyType to) {","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"Nirmaleshwar"},"content":"        this.to \u003d to;","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"Nirmaleshwar"},"content":"    @Override","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"Nirmaleshwar"},"content":"    public void execute(FinancialTracker finances, Ui ui, BudgetManager budgetManager,","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"Nirmaleshwar"},"content":"                        CurrencyManager currencyManager) {","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"Nirmaleshwar"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"Nirmaleshwar"},"content":"            currencyManager.currencyConvertor(from, to, finances, budgetManager);","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"Nirmaleshwar"},"content":"            ui.printCurrencyChangedConfirmation(to);","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"Nirmaleshwar"},"content":"        } catch (SameCurrencyTypeException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"Nirmaleshwar"},"content":"            ui.printSameCurrencyTypeMessage(to);","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"Nirmaleshwar"},"content":"}","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"Nirmaleshwar":29}},{"path":"src/main/java/seedu/commands/currency/CurrencyType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nirmaleshwar"},"content":"package seedu.commands.currency;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"Nirmaleshwar"},"content":"public enum CurrencyType {","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"Nirmaleshwar"},"content":"    USD, SGD","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"Nirmaleshwar"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"Nirmaleshwar":5}},{"path":"src/main/java/seedu/commands/currency/ListCurrencyTypesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nirmaleshwar"},"content":"package seedu.commands.currency;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.commands.Command;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"Nirmaleshwar"},"content":"public class ListCurrencyTypesCommand extends Command {","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"Nirmaleshwar"},"content":"    @Override","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"Nirmaleshwar"},"content":"    public void execute(FinancialTracker finances, Ui ui, BudgetManager budgetManager,","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"Nirmaleshwar"},"content":"                        CurrencyManager currencyManager) {","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"Nirmaleshwar"},"content":"        ui.printCurrencyTypes(currencyManager.getCurrencyTypes());","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"Nirmaleshwar"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"Nirmaleshwar":16}},{"path":"src/main/java/seedu/commands/expense/AddExpenseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package seedu.commands.expense;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"import seedu.entry.Expense;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.ExpenseOverflowException;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"import seedu.reminder.BudgetReminder;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"jonathanlkw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"kyun99"},"content":"public class AddExpenseCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"kyun99"},"content":"    private Expense expense;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":"    public AddExpenseCommand(Expense expense) {","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"kyun99"},"content":"        this.expense \u003d expense;","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"kyun99"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"Nirmaleshwar"},"content":"    public void execute(FinancialTracker finances, Ui ui, BudgetManager budgetManager,","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"Nirmaleshwar"},"content":"                        CurrencyManager currencyManager) {","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"kyun99"},"content":"        try {","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"kyun99"},"content":"            finances.addExpense(expense);","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"kyun99"},"content":"            ui.printExpenseAdded(expense);","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"jonathanlkw"},"content":"            BudgetReminder reminder \u003d budgetManager.handleBudget(expense, finances.getExpenses());","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"jonathanlkw"},"content":"            ui.printBudgetReminder(reminder);","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"kyun99"},"content":"        } catch (ExpenseOverflowException e) {","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"kyun99"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"kyun99"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kyun99":22,"AnShengLee":2,"Nirmaleshwar":3,"jonathanlkw":6}},{"path":"src/main/java/seedu/commands/expense/DeleteExpenseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package seedu.commands.expense;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.entry.Expense;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"import seedu.exceptions.ExpenseEntryNotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":"public class DeleteExpenseCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"jonathanlkw"},"content":"    private int expenseNumber;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"jonathanlkw"},"content":"    public DeleteExpenseCommand(int expenseNumber) {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"jonathanlkw"},"content":"        this.expenseNumber \u003d expenseNumber;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"kyun99"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"Nirmaleshwar"},"content":"    public void execute(FinancialTracker finances, Ui ui, BudgetManager budgetManager,","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"Nirmaleshwar"},"content":"                        CurrencyManager currencyManager) {","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"Nirmaleshwar"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"kyun99"},"content":"            Expense deletedExpense \u003d finances.removeExpense(expenseNumber);","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"kyun99"},"content":"            ui.printExpenseDeleted(deletedExpense);","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Nirmaleshwar"},"content":"        } catch (ExpenseEntryNotFoundException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"Nirmaleshwar"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kyun99":13,"AnShengLee":2,"Nirmaleshwar":8,"jonathanlkw":5}},{"path":"src/main/java/seedu/commands/expense/ListExpenseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package seedu.commands.expense;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"import seedu.entry.Expense;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"kyun99"},"content":"public class ListExpenseCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"kyun99"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"Nirmaleshwar"},"content":"    public void execute(FinancialTracker finances, Ui ui, BudgetManager budgetManager,","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"Nirmaleshwar"},"content":"                        CurrencyManager currencyManager) {","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"KZQ1999"},"content":"        ArrayList\u003cExpense\u003e expenses \u003d finances.getExpenses(); ","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":"        ui.listExpense(expenses);","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kyun99":12,"AnShengLee":2,"Nirmaleshwar":3,"KZQ1999":1,"jonathanlkw":1}},{"path":"src/main/java/seedu/commands/expense/TotalExpenseBetweenCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package seedu.commands.expense;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"import seedu.entry.Expense;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"import seedu.utility.tools.DateRange;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"kyun99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"kyun99"},"content":"public class TotalExpenseBetweenCommand extends Command {","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"kyun99"},"content":"    private LocalDate start;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":"    private LocalDate end;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":"    ","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"kyun99"},"content":"    public TotalExpenseBetweenCommand(DateRange dateRange) {","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"kyun99"},"content":"        this.start \u003d dateRange.getStartDate();","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"kyun99"},"content":"        this.end \u003d dateRange.getEndDate();","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"kyun99"},"content":"    ","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"kyun99"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"Nirmaleshwar"},"content":"    public void execute(FinancialTracker finances, Ui ui, BudgetManager budgetManager,","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"Nirmaleshwar"},"content":"                        CurrencyManager currencyManager) {","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"kyun99"},"content":"        double totalExpenseBetween \u003d finances.getExpenseBetween(start,end);","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"kyun99"},"content":"        ui.printTotalExpenseBetween(totalExpenseBetween,start,end);","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"kyun99":24,"AnShengLee":2,"Nirmaleshwar":3,"jonathanlkw":1}},{"path":"src/main/java/seedu/commands/expense/TotalExpenseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package seedu.commands.expense;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.ExpenseOverflowException;","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":"public class TotalExpenseCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"Nirmaleshwar"},"content":"    public void execute(FinancialTracker finances, Ui ui, BudgetManager budgetManager,","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"Nirmaleshwar"},"content":"                        CurrencyManager currencyManager) {","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"kyun99"},"content":"        double totalExpense \u003d finances.getTotalExpense();","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"kyun99"},"content":"        ui.printTotalExpense(totalExpense);","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":"        ","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kyun99":12,"AnShengLee":2,"Nirmaleshwar":3,"jonathanlkw":1}},{"path":"src/main/java/seedu/commands/general/ClearAllEntriesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package seedu.commands.general;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"AnShengLee"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"AnShengLee"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"AnShengLee"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"AnShengLee"},"content":" * Clears all expense and income entries. This is so that users can start afresh.","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"AnShengLee"},"content":" * Also allows us developers to have easier time testing data saving capabilities.","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"AnShengLee"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"AnShengLee"},"content":"public class ClearAllEntriesCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"AnShengLee"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"Nirmaleshwar"},"content":"    public void execute(FinancialTracker finances, Ui ui, BudgetManager budgetManager,","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"Nirmaleshwar"},"content":"                        CurrencyManager currencyManager) {","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"AnShengLee"},"content":"        finances.clearAllEntries();","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"AnShengLee"},"content":"        ui.printAllEntriesCleared();","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"AnShengLee"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"AnShengLee":17,"Nirmaleshwar":3,"jonathanlkw":1}},{"path":"src/main/java/seedu/commands/general/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package seedu.commands.general;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"Nirmaleshwar"},"content":"    public void execute(FinancialTracker finances, Ui ui, BudgetManager budgetManager,","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"Nirmaleshwar"},"content":"                        CurrencyManager currencyManager) {","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"kyun99"},"content":"        return true;","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kyun99":14,"AnShengLee":2,"Nirmaleshwar":3,"jonathanlkw":1}},{"path":"src/main/java/seedu/commands/general/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package seedu.commands.general;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"import seedu.entry.Entry;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"import seedu.entry.ExpenseCategory;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"import seedu.entry.IncomeCategory;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"KZQ1999"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"KZQ1999"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"KZQ1999"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"AnShengLee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"KZQ1999"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"KZQ1999"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"KZQ1999"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"AnShengLee"},"content":"    private static final String DATE_FORMAT \u003d \"dd/MM/yyyy\";","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"KZQ1999"},"content":"    protected String keyword;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"KZQ1999"},"content":"    ","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"KZQ1999"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"KZQ1999"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"KZQ1999"},"content":"     * Filters through both the expense list and income list to search for entries with matching search keywords.","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"KZQ1999"},"content":"     * @param finances The financial tracker containing all the entries.","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"KZQ1999"},"content":"     * @param ui The user interface which provide feedback to the user.","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"KZQ1999"},"content":"     * @param budgetManager The budgeting manager that manages all the budget related operations.","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"Nirmaleshwar"},"content":"    public void execute(FinancialTracker finances, Ui ui, BudgetManager budgetManager,","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"Nirmaleshwar"},"content":"                        CurrencyManager currencyManager) {","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"KZQ1999"},"content":"        ArrayList\u003cEntry\u003e entries \u003d finances.getEntries();","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"KZQ1999"},"content":"        ArrayList\u003cEntry\u003e filteredEntries \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"KZQ1999"},"content":"        ","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"KZQ1999"},"content":"        try {","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"KZQ1999"},"content":"            filterByDate(entries, filteredEntries);","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"KZQ1999"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"KZQ1999"},"content":"            filterByKeyword(entries, filteredEntries);","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"KZQ1999"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"KZQ1999"},"content":"        ","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"KZQ1999"},"content":"        ui.listFind(filteredEntries);","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"KZQ1999"},"content":"    private void filterByDate(ArrayList\u003cEntry\u003e entries, ArrayList\u003cEntry\u003e filteredEntries) {","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"AnShengLee"},"content":"        LocalDate localDate \u003d LocalDate.parse(keyword, DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"KZQ1999"},"content":"        for (Entry entry: entries) {","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"KZQ1999"},"content":"            if (entry.getDate().isEqual(localDate)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"KZQ1999"},"content":"                filteredEntries.add(entry);","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"KZQ1999"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"KZQ1999"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"KZQ1999"},"content":"    private void filterByKeyword(ArrayList\u003cEntry\u003e entries, ArrayList\u003cEntry\u003e filteredEntries) {","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"KZQ1999"},"content":"        for (Entry entry: entries) {","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"KZQ1999"},"content":"            String valueAsString \u003d Double.toString(entry.getValue());","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"KZQ1999"},"content":"            if (entry.getDescription().contains(keyword)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"KZQ1999"},"content":"                filteredEntries.add(entry);","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"KZQ1999"},"content":"            } else if (valueAsString.contains(keyword)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"KZQ1999"},"content":"                filteredEntries.add(entry);","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"kyun99"},"content":"            } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"KZQ1999"},"content":"                Enum filterCategory \u003d determineCategory();","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"KZQ1999"},"content":"                if (entry.getCategory().equals(filterCategory)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"KZQ1999"},"content":"                    filteredEntries.add(entry);","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"KZQ1999"},"content":"                }","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"KZQ1999"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"KZQ1999"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"KZQ1999"},"content":"    private Enum determineCategory() {","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"kyun99"},"content":"        Enum filterCategory;","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"KZQ1999"},"content":"        switch (keyword.toUpperCase()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"kyun99"},"content":"        case \"FOOD\":","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"kyun99"},"content":"            filterCategory \u003d ExpenseCategory.FOOD;","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"kyun99"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"kyun99"},"content":"        case \"TRANSPORT\":","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"kyun99"},"content":"            filterCategory \u003d ExpenseCategory.TRANSPORT;","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"kyun99"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"kyun99"},"content":"        case \"MEDICAL\":","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"kyun99"},"content":"            filterCategory \u003d ExpenseCategory.MEDICAL;","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"kyun99"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"kyun99"},"content":"        case \"BILLS\":","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"kyun99"},"content":"            filterCategory \u003d ExpenseCategory.BILLS;","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"kyun99"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"kyun99"},"content":"        case \"ENTERTAINMENT\":","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"kyun99"},"content":"            filterCategory \u003d ExpenseCategory.ENTERTAINMENT;","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"kyun99"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"jonathanlkw"},"content":"        case \"MISC\":","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"jonathanlkw"},"content":"            filterCategory \u003d ExpenseCategory.MISC;","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"jonathanlkw"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"kyun99"},"content":"        case \"SALARY\":","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"kyun99"},"content":"            filterCategory \u003d IncomeCategory.SALARY;","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"kyun99"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"kyun99"},"content":"        case \"ALLOWANCE\":","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"kyun99"},"content":"            filterCategory \u003d IncomeCategory.ALLOWANCE;","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"kyun99"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"kyun99"},"content":"        case \"ADHOC\":","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"kyun99"},"content":"            filterCategory \u003d IncomeCategory.ADHOC;","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"kyun99"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"jonathanlkw"},"content":"        case \"OTHERS\":","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"jonathanlkw"},"content":"            filterCategory \u003d IncomeCategory.OTHERS;","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"jonathanlkw"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"kyun99"},"content":"        default:","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"kyun99"},"content":"            filterCategory \u003d ExpenseCategory.NULL;","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"kyun99"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"KZQ1999"},"content":"        return filterCategory;","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"KZQ1999"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"kyun99":32,"AnShengLee":5,"KZQ1999":63,"Nirmaleshwar":3,"jonathanlkw":7}},{"path":"src/main/java/seedu/commands/general/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package seedu.commands.general;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"Nirmaleshwar"},"content":"    public void execute(FinancialTracker finances, Ui ui, BudgetManager budgetManager,","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"Nirmaleshwar"},"content":"                        CurrencyManager currencyManager) {","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"Nirmaleshwar"},"content":"        ui.printHelp();","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kyun99":8,"AnShengLee":2,"Nirmaleshwar":4,"jonathanlkw":1}},{"path":"src/main/java/seedu/commands/general/ShowGraphByYearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.commands.general;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"kyun99"},"content":"import seedu.commands.Command;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"import seedu.utility.StonksGraph;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"kyun99"},"content":"public class ShowGraphByYearCommand extends Command {","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"kyun99"},"content":"    private int year;","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"kyun99"},"content":"    ","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":"    public ShowGraphByYearCommand(LocalDate year) {","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":"        this.year \u003d year.getYear();","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"kyun99"},"content":"    @Override","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"kyun99"},"content":"    public void execute(FinancialTracker finances, Ui ui, BudgetManager budgetManager,","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"kyun99"},"content":"                        CurrencyManager currencyManager) {","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"kyun99"},"content":"        StonksGraph stonksGraph \u003d new StonksGraph(finances,year);","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"kyun99"},"content":"        ui.printGraph(stonksGraph);","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"kyun99":26}},{"path":"src/main/java/seedu/commands/general/ShowGraphCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"package seedu.commands.general;","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"AnShengLee"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"AnShengLee"},"content":"import seedu.utility.StonksGraph;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"AnShengLee"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"AnShengLee"},"content":"public class ShowGraphCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"kyun99"},"content":"    private int year;","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":"    public ShowGraphCommand() {","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":"        this.year \u003d currentYear();","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"KZQ1999"},"content":"    //@@author KZQ1999","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"KZQ1999"},"content":"    private int currentYear() {","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"KZQ1999"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"KZQ1999"},"content":"        return currentDate.getYear();","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"KZQ1999"},"content":"    //@@author KZQ1999","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"KZQ1999"},"content":"    ","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"KZQ1999"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"KZQ1999"},"content":"    public void execute(FinancialTracker finances, Ui ui, BudgetManager budgetManager,","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"KZQ1999"},"content":"                        CurrencyManager currencyManager) {","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"KZQ1999"},"content":"        StonksGraph stonksGraph \u003d new StonksGraph(finances,year);","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"KZQ1999"},"content":"        ui.printGraph(stonksGraph);","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"KZQ1999"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"kyun99":10,"AnShengLee":8,"KZQ1999":16,"jonathanlkw":1}},{"path":"src/main/java/seedu/commands/income/AddIncomeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package seedu.commands.income;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"import seedu.entry.Income;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.IncomeOverflowException;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":"public class AddIncomeCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"kyun99"},"content":"    private Income income;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"kyun99"},"content":"    public AddIncomeCommand(Income income) {","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"kyun99"},"content":"        this.income \u003d income;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"kyun99"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"Nirmaleshwar"},"content":"    public void execute(FinancialTracker finances, Ui ui, BudgetManager budgetManager,","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"Nirmaleshwar"},"content":"                        CurrencyManager currencyManager) {","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"kyun99"},"content":"        try {","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"kyun99"},"content":"            finances.addIncome(income);","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"kyun99"},"content":"            ui.printIncomeAdded(income);","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"kyun99"},"content":"        } catch (IncomeOverflowException e) {","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"kyun99"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"kyun99"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"kyun99"},"content":"        ","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kyun99":23,"AnShengLee":2,"Nirmaleshwar":3,"jonathanlkw":1}},{"path":"src/main/java/seedu/commands/income/DeleteIncomeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package seedu.commands.income;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.entry.Income;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"import seedu.exceptions.IncomeEntryNotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":"public class DeleteIncomeCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"jonathanlkw"},"content":"    private int incomeNumber;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"jonathanlkw"},"content":"    public DeleteIncomeCommand(int incomeNumber) {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"jonathanlkw"},"content":"        this.incomeNumber \u003d incomeNumber;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"kyun99"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"Nirmaleshwar"},"content":"    public void execute(FinancialTracker finances, Ui ui, BudgetManager budgetManager,","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"Nirmaleshwar"},"content":"                        CurrencyManager currencyManager) {","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"Nirmaleshwar"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"Nirmaleshwar"},"content":"            Income deletedIncome \u003d finances.removeIncome(incomeNumber);","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"Nirmaleshwar"},"content":"            ui.printIncomeDeleted(deletedIncome);","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"Nirmaleshwar"},"content":"        } catch (IncomeEntryNotFoundException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"Nirmaleshwar"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kyun99":11,"AnShengLee":2,"Nirmaleshwar":10,"jonathanlkw":5}},{"path":"src/main/java/seedu/commands/income/ListIncomeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package seedu.commands.income;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"import seedu.entry.Income;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"kyun99"},"content":"public class ListIncomeCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"kyun99"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"Nirmaleshwar"},"content":"    public void execute(FinancialTracker finances, Ui ui, BudgetManager budgetManager,","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"Nirmaleshwar"},"content":"                        CurrencyManager currencyManager) {","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"KZQ1999"},"content":"        ArrayList\u003cIncome\u003e incomes \u003d finances.getIncomes(); ","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":"        ui.listIncome(incomes);","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kyun99":12,"AnShengLee":2,"Nirmaleshwar":3,"KZQ1999":1,"jonathanlkw":1}},{"path":"src/main/java/seedu/commands/income/TotalIncomeBetweenCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package seedu.commands.income;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"import seedu.entry.Expense;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"import seedu.entry.Income;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":"import seedu.utility.tools.DateRange;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"kyun99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"kyun99"},"content":"public class TotalIncomeBetweenCommand extends Command {","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"kyun99"},"content":"    private LocalDate start;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":"    private LocalDate end;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":"    ","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"kyun99"},"content":"    public TotalIncomeBetweenCommand(DateRange dateRange) {","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"kyun99"},"content":"        this.start \u003d dateRange.getStartDate();","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"kyun99"},"content":"        this.end \u003d dateRange.getEndDate();","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"kyun99"},"content":"    ","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"kyun99"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"Nirmaleshwar"},"content":"    public void execute(FinancialTracker finances, Ui ui, BudgetManager budgetManager,","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"Nirmaleshwar"},"content":"                        CurrencyManager currencyManager) {","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"kyun99"},"content":"        double totalIncomeBetween \u003d finances.getIncomeBetween(start,end);","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"kyun99"},"content":"        ui.printTotalIncomeBetween(totalIncomeBetween,start,end);","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"kyun99":24,"AnShengLee":2,"Nirmaleshwar":3,"jonathanlkw":1}},{"path":"src/main/java/seedu/commands/income/TotalIncomeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package seedu.commands.income;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.IncomeOverflowException;","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":"public class TotalIncomeCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"Nirmaleshwar"},"content":"    public void execute(FinancialTracker finances, Ui ui, BudgetManager budgetManager,","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"Nirmaleshwar"},"content":"                        CurrencyManager currencyManager) {","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"kyun99"},"content":"        double totalIncome \u003d finances.getTotalIncome();","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"kyun99"},"content":"        ui.printTotalIncome(totalIncome);","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kyun99":11,"AnShengLee":2,"Nirmaleshwar":3,"jonathanlkw":1}},{"path":"src/main/java/seedu/duke/StonksXD.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"kyun99"},"content":"import seedu.commands.Command;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"AnShengLee"},"content":"import seedu.utility.DataManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":"import seedu.utility.Parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"kyun99"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"kyun99"},"content":" * A command line interfaced program that can store your financial entries and provide other insights and analytical ","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"kyun99"},"content":" * services.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":"public class StonksXD {","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"KZQ1999"},"content":"    private final Ui ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"KZQ1999"},"content":"    private final FinancialTracker finances;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"KZQ1999"},"content":"    private final Parser parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"KZQ1999"},"content":"    private final DataManager dataManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"KZQ1999"},"content":"    private final BudgetManager budgetManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"KZQ1999"},"content":"    private final CurrencyManager currencyManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"kyun99"},"content":"    private boolean isNonTerminatingCommand \u003d true;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"kyun99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"kyun99"},"content":"     * Constructor for StonksXD. It instantiates all the components used and are crucial to the functioning of the ","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"kyun99"},"content":"     * program.","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"kyun99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"kyun99"},"content":"    public StonksXD() {","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"kyun99"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"kyun99"},"content":"        this.finances \u003d new FinancialTracker();","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"kyun99"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"jonathanlkw"},"content":"        this.budgetManager \u003d new BudgetManager();","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"kyun99"},"content":"        this.currencyManager \u003d new CurrencyManager();","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"kyun99"},"content":"        ","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"kyun99"},"content":"        this.dataManager \u003d new DataManager(parser, finances, ui, budgetManager, currencyManager);","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"kyun99"},"content":"        dataManager.loadAll();","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"kyun99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"kyun99"},"content":"     * This method handles the lifecycle and the general logic of the program. It reads users input and performs actions","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"kyun99"},"content":"     * based on it.","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"kyun99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"kyun99"},"content":"    public void run() {","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"kyun99"},"content":"        ui.printWelcome();","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"kyun99"},"content":"        ","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"kyun99"},"content":"        while (isNonTerminatingCommand) {","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"kyun99"},"content":"            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"kyun99"},"content":"            Command command \u003d parser.parseCommand(fullCommand);","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"kyun99"},"content":"            command.execute(finances, ui, budgetManager, currencyManager);","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"kyun99"},"content":"            if (command.isExit()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"kyun99"},"content":"                terminateStonksXD();","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"kyun99"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"AnShengLee"},"content":"            dataManager.saveAll();","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"kyun99"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"kyun99"},"content":"        //ui.printBye();","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"kyun99"},"content":"    ","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"kyun99"},"content":"    private void terminateStonksXD() {","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"kyun99"},"content":"        isNonTerminatingCommand \u003d false;","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"kyun99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"kyun99"},"content":"     * Point of entry for the program.","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"kyun99"},"content":"     * ","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"kyun99"},"content":"     * @param args No input parameters is expected.","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"kyun99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"kyun99"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"kyun99"},"content":"        new StonksXD().run();","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kyun99":60,"AnShengLee":4,"KZQ1999":6,"jonathanlkw":2}},{"path":"src/main/java/seedu/entry/Entry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.entry;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"KZQ1999"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":" * Entry is the parent class that Expense and Income inherits from.","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"public abstract class Entry {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"KZQ1999"},"content":"    protected String description;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"KZQ1999"},"content":"    protected double value;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"KZQ1999"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"AnShengLee"},"content":"    protected static final String DATE_FORMAT \u003d \"dd/MM/yyyy\";","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"kyun99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"kyun99"},"content":"     * Gets the description of the entry.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":"     * ","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":"     * @return A String storing information on the entry.","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"kyun99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"jonathanlkw"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"jonathanlkw"},"content":"        return this.description;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"kyun99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"kyun99"},"content":"     * Gets the value of the entry.","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"kyun99"},"content":"     * ","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"kyun99"},"content":"     * @return A double storing the value of the entry.","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"kyun99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"jonathanlkw"},"content":"    public double getValue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"jonathanlkw"},"content":"        return this.value;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"kyun99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"kyun99"},"content":"     * Sets a value for an entry.","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"kyun99"},"content":"     * ","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"kyun99"},"content":"     * @param newValue A double that will replace the original value.","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"kyun99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Nirmaleshwar"},"content":"    public void setValue(double newValue) {","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"Nirmaleshwar"},"content":"        this.value \u003d newValue;","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"kyun99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"kyun99"},"content":"     * Get the date information of the entry.","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"kyun99"},"content":"     * ","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"kyun99"},"content":"     * @return A LocalDate which is associated with the entry.","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"kyun99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"KZQ1999"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"KZQ1999"},"content":"        return this.date;","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"kyun99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"kyun99"},"content":"     * Get the category associated with the entry.","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"kyun99"},"content":"     * ","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"kyun99"},"content":"     * @return A enum which the entry is categorised under.","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"kyun99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"kyun99"},"content":"    public abstract Enum getCategory();","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"kyun99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"kyun99"},"content":"     * Converts the object into a string to be printed.","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"kyun99"},"content":"     * ","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"kyun99"},"content":"     * @return A string of information associated to the entry.","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"kyun99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"kyun99"},"content":"    public abstract String toString();","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kyun99":40,"AnShengLee":1,"KZQ1999":9,"Nirmaleshwar":4,"jonathanlkw":9}},{"path":"src/main/java/seedu/entry/Expense.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KZQ1999"},"content":"package seedu.entry;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"kyun99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"public class Expense extends Entry {","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"    private ExpenseCategory category;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"    ","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"    public Expense(String description, double value, ExpenseCategory category) {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"jonathanlkw"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"jonathanlkw"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"kyun99"},"content":"        this.date \u003d LocalDate.now();","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"kyun99"},"content":"        this.category \u003d category;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":"    public Expense(String description, double value, ExpenseCategory category, LocalDate date) {","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"AnShengLee"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"AnShengLee"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"AnShengLee"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"AnShengLee"},"content":"        this.category \u003d category;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"kyun99"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"kyun99"},"content":"    public ExpenseCategory getCategory() {","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"kyun99"},"content":"        return category;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"kyun99"},"content":"    ","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"jonathanlkw"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"jonathanlkw"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"AnShengLee"},"content":"        String expenseDate \u003d date.format(DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"KZQ1999"},"content":"        return String.format(\"[E] %s - $%.2f (%s)\", description, value, expenseDate);","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kyun99":16,"AnShengLee":7,"KZQ1999":2,"jonathanlkw":8}},{"path":"src/main/java/seedu/entry/ExpenseCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.entry;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"kyun99"},"content":"public enum ExpenseCategory {","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"    OVERALL, FOOD, TRANSPORT, MEDICAL, BILLS, ENTERTAINMENT, MISC, NULL","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"kyun99":4,"jonathanlkw":1}},{"path":"src/main/java/seedu/entry/Income.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KZQ1999"},"content":"package seedu.entry;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"kyun99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"public class Income extends Entry {","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"    IncomeCategory category;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"    public Income(String description, double value, IncomeCategory category) {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"jonathanlkw"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"jonathanlkw"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"kyun99"},"content":"        this.date \u003d LocalDate.now();","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"kyun99"},"content":"        this.category \u003d category;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":"    public Income(String description, double value, IncomeCategory category, LocalDate date) {","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"AnShengLee"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"AnShengLee"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"AnShengLee"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"AnShengLee"},"content":"        this.category \u003d category;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"kyun99"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"kyun99"},"content":"    public IncomeCategory getCategory() {","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"kyun99"},"content":"        return category;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"jonathanlkw"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"jonathanlkw"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"AnShengLee"},"content":"        String incomeDate \u003d date.format(DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"KZQ1999"},"content":"        return String.format(\"[I] %s - $%.2f (%s)\", description, value, incomeDate);","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kyun99":16,"AnShengLee":7,"KZQ1999":2,"jonathanlkw":8}},{"path":"src/main/java/seedu/entry/IncomeCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.entry;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"kyun99"},"content":"public enum IncomeCategory {","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"    SALARY, ALLOWANCE, ADHOC, OTHERS, NULL","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"kyun99":4,"jonathanlkw":1}},{"path":"src/main/java/seedu/exceptions/BlankCurrencyTypeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nirmaleshwar"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"Nirmaleshwar"},"content":"public class BlankCurrencyTypeException extends InputException {","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Nirmaleshwar"},"content":"    public BlankCurrencyTypeException(String message) {","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Nirmaleshwar"},"content":"        super(message);","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Nirmaleshwar"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"Nirmaleshwar":7}},{"path":"src/main/java/seedu/exceptions/BlankExpenseCategoryException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"kyun99"},"content":"public class BlankExpenseCategoryException extends InputException {","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"    public BlankExpenseCategoryException(String message) {","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"        super(message);","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"kyun99":7}},{"path":"src/main/java/seedu/exceptions/BlankIncomeCategoryException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"kyun99"},"content":"public class BlankIncomeCategoryException extends InputException {","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"    public BlankIncomeCategoryException(String message) {","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"        super(message);","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"kyun99":7}},{"path":"src/main/java/seedu/exceptions/EntryAmountExceedLimitException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"public class EntryAmountExceedLimitException extends InputException {","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":"    public EntryAmountExceedLimitException(String message) {","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"AnShengLee"},"content":"        super(message);","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"AnShengLee"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"AnShengLee":7}},{"path":"src/main/java/seedu/exceptions/ExpenseEntryNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonathanlkw"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"jonathanlkw"},"content":"public class ExpenseEntryNotFoundException extends Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"    public ExpenseEntryNotFoundException(String message) {","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"        super(message);","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"jonathanlkw"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"jonathanlkw":7}},{"path":"src/main/java/seedu/exceptions/ExpenseOverflowException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"kyun99"},"content":"public class ExpenseOverflowException extends Exception {","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"    public ExpenseOverflowException(String message) {","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"        super(message);","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"kyun99":7}},{"path":"src/main/java/seedu/exceptions/IncomeEntryNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonathanlkw"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"jonathanlkw"},"content":"public class IncomeEntryNotFoundException extends Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"    public IncomeEntryNotFoundException(String message) {","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"        super(message);","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"jonathanlkw"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"jonathanlkw":7}},{"path":"src/main/java/seedu/exceptions/IncomeOverflowException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"kyun99"},"content":"public class IncomeOverflowException extends Exception {","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"    public IncomeOverflowException(String message) {","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"        super(message);","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"kyun99":7}},{"path":"src/main/java/seedu/exceptions/InputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"kyun99"},"content":"public class InputException extends Exception {","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"    public InputException(String message) {","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"        super(message);","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"kyun99":7}},{"path":"src/main/java/seedu/exceptions/InvalidAmountException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"public class InvalidAmountException extends InputException {","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":"    public InvalidAmountException(String message) {","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"AnShengLee"},"content":"        super(message);","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"AnShengLee"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"AnShengLee":7}},{"path":"src/main/java/seedu/exceptions/InvalidBudgetAmountException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonathanlkw"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"jonathanlkw"},"content":"public class InvalidBudgetAmountException extends InputException {","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"    public InvalidBudgetAmountException(String message) {","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"        super(message);","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"jonathanlkw"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"jonathanlkw":7}},{"path":"src/main/java/seedu/exceptions/InvalidCurrencyTypeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nirmaleshwar"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"Nirmaleshwar"},"content":"public class InvalidCurrencyTypeException extends InputException {","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Nirmaleshwar"},"content":"    public InvalidCurrencyTypeException(String message) {","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Nirmaleshwar"},"content":"        super(message);","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Nirmaleshwar"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"Nirmaleshwar":7}},{"path":"src/main/java/seedu/exceptions/InvalidDescriptionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"kyun99"},"content":"public class InvalidDescriptionException extends InputException {","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"    public InvalidDescriptionException(String message) {","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"        super(message);","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"kyun99":7}},{"path":"src/main/java/seedu/exceptions/InvalidExpenseCategoryException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"kyun99"},"content":"public class InvalidExpenseCategoryException extends InputException {","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"    public InvalidExpenseCategoryException(String message) {","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"        super(message);","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"kyun99":7}},{"path":"src/main/java/seedu/exceptions/InvalidExpenseDataFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"public class InvalidExpenseDataFormatException extends Exception {","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"AnShengLee":4}},{"path":"src/main/java/seedu/exceptions/InvalidIncomeCategoryException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"kyun99"},"content":"public class InvalidIncomeCategoryException extends InputException { ","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"    public InvalidIncomeCategoryException(String message) {","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"        super(message);","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"kyun99":7}},{"path":"src/main/java/seedu/exceptions/InvalidIncomeDataFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"public class InvalidIncomeDataFormatException extends Exception {","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"AnShengLee":4}},{"path":"src/main/java/seedu/exceptions/InvalidIndexException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"kyun99"},"content":"public class InvalidIndexException extends InputException {","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"    public InvalidIndexException(String message) {","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"        super(message);","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"kyun99":7}},{"path":"src/main/java/seedu/exceptions/InvalidSettingsDataException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"public class InvalidSettingsDataException extends Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":"    ","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"AnShengLee"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"AnShengLee":5}},{"path":"src/main/java/seedu/exceptions/InvalidThresholdValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"public class InvalidThresholdValueException extends InputException {","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":"    public InvalidThresholdValueException(String message) {","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"AnShengLee"},"content":"        super(message);","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"AnShengLee"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"AnShengLee":7}},{"path":"src/main/java/seedu/exceptions/SameCurrencyTypeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nirmaleshwar"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"Nirmaleshwar"},"content":"public class SameCurrencyTypeException extends InputException {","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Nirmaleshwar"},"content":"    public SameCurrencyTypeException(String message) {","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Nirmaleshwar"},"content":"        super(message);","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Nirmaleshwar"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"Nirmaleshwar":7}},{"path":"src/main/java/seedu/reminder/BudgetReminder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonathanlkw"},"content":"package seedu.reminder;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"jonathanlkw"},"content":"public abstract class BudgetReminder {","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"    protected String month;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"    protected String budgetName;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"    protected double currBudgetAmount;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"jonathanlkw"},"content":"    protected double budgetLimit;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"jonathanlkw"},"content":"    protected String roundTwoDecimalPlace(double value) {","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"jonathanlkw"},"content":"        double intermediateValue \u003d Math.round(value * 100);","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"jonathanlkw"},"content":"        double roundedValue \u003d intermediateValue / 100;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"jonathanlkw"},"content":"        String displayValue \u003d Double.toString(roundedValue);","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"jonathanlkw"},"content":"        int decimalPointIndex \u003d displayValue.indexOf(\".\");","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"jonathanlkw"},"content":"        if (displayValue.substring(decimalPointIndex).length() \u003c 3) {","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"jonathanlkw"},"content":"            displayValue +\u003d \"0\";","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"jonathanlkw"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"jonathanlkw"},"content":"        return displayValue;","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"jonathanlkw"},"content":"    @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"jonathanlkw"},"content":"    public abstract String toString();","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"jonathanlkw"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"jonathanlkw":22}},{"path":"src/main/java/seedu/reminder/BudgetSetReminder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonathanlkw"},"content":"package seedu.reminder;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"jonathanlkw"},"content":"public class BudgetSetReminder extends BudgetReminder {","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"    public BudgetSetReminder(String budgetName, double budgetLimit) {","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"        this.month \u003d null;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"jonathanlkw"},"content":"        this.budgetName \u003d budgetName;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"        this.currBudgetAmount \u003d 0;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"jonathanlkw"},"content":"        this.budgetLimit \u003d budgetLimit;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"jonathanlkw"},"content":"    @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"jonathanlkw"},"content":"    public String toString() {","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"jonathanlkw"},"content":"        return budgetName + \" budget set to $\" + roundTwoDecimalPlace(budgetLimit);","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"jonathanlkw"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"jonathanlkw":16}},{"path":"src/main/java/seedu/reminder/DoubleExceededBudgetReminder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonathanlkw"},"content":"package seedu.reminder;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"jonathanlkw"},"content":"public class DoubleExceededBudgetReminder extends DoubleReminder {","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"    public DoubleExceededBudgetReminder(String month, String budgetName, double currBudgetAmount,","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"                                                double budgetLimit, double currOverallAmount,","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"jonathanlkw"},"content":"                                                double overallLimit, double totalBudget) {","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"        this.month \u003d month;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"jonathanlkw"},"content":"        this.budgetName \u003d budgetName;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"jonathanlkw"},"content":"        this.currBudgetAmount \u003d currBudgetAmount;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"jonathanlkw"},"content":"        this.budgetLimit \u003d budgetLimit;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"jonathanlkw"},"content":"        this.currOverallAmount \u003d currOverallAmount;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"jonathanlkw"},"content":"        this.overallLimit \u003d overallLimit;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"jonathanlkw"},"content":"        this.totalBudget \u003d totalBudget;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"jonathanlkw"},"content":"    @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"jonathanlkw"},"content":"    public String toString() {","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"jonathanlkw"},"content":"        return \"Exceeded both \" + month + \" \" + budgetName + \" budget ($\"","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"jonathanlkw"},"content":"                + roundTwoDecimalPlace(currBudgetAmount) + \"/$\" + roundTwoDecimalPlace(budgetLimit)","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"jonathanlkw"},"content":"                + \") and \" + month + \" OVERALL budget ($\" + roundTwoDecimalPlace(currOverallAmount)","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"jonathanlkw"},"content":"                + \"/$\" + roundTwoDecimalPlace(overallLimit) + \").\"","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"jonathanlkw"},"content":"                + \"\\nConsider adjusting your OVERALL budget to $\" + roundTwoDecimalPlace(totalBudget)","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"jonathanlkw"},"content":"                + \" before adjusting your \" + budgetName + \" budget!\"","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"jonathanlkw"},"content":"                + \"\\nCurrently you cannot extend your \" + budgetName","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"jonathanlkw"},"content":"                + \" budget without first extending your OVERALL budget!\";","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"jonathanlkw"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"jonathanlkw":28}},{"path":"src/main/java/seedu/reminder/DoubleNearingBudgetReminder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonathanlkw"},"content":"package seedu.reminder;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"public class DoubleNearingBudgetReminder extends DoubleReminder {","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"jonathanlkw"},"content":"    public DoubleNearingBudgetReminder(String month, String budgetName, double currBudgetAmount, double budgetLimit,","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"                                       double currOverallAmount, double overallLimit, double totalBudget) {","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"jonathanlkw"},"content":"        this.month \u003d month;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"jonathanlkw"},"content":"        this.budgetName \u003d budgetName;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"jonathanlkw"},"content":"        this.currBudgetAmount \u003d currBudgetAmount;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"jonathanlkw"},"content":"        this.budgetLimit \u003d budgetLimit;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"jonathanlkw"},"content":"        this.currOverallAmount \u003d currOverallAmount;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"jonathanlkw"},"content":"        this.overallLimit \u003d overallLimit;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"jonathanlkw"},"content":"        this.totalBudget \u003d totalBudget;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"jonathanlkw"},"content":"    @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"jonathanlkw"},"content":"    public String toString() {","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"jonathanlkw"},"content":"        double extendedBudget \u003d overallLimit - totalBudget + budgetLimit;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"jonathanlkw"},"content":"        if (extendedBudget \u003d\u003d budgetLimit) {","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"jonathanlkw"},"content":"            return \"Nearing both \" + month + \" \" + budgetName + \" budget ($\"","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"jonathanlkw"},"content":"                    + roundTwoDecimalPlace(currBudgetAmount) + \"/$\" + roundTwoDecimalPlace(budgetLimit)","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"jonathanlkw"},"content":"                    + \") and \" + month + \" OVERALL budget ($\" + roundTwoDecimalPlace(currOverallAmount)","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"jonathanlkw"},"content":"                    + \"/$\" + roundTwoDecimalPlace(overallLimit) + \").\"","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"jonathanlkw"},"content":"                    + \"\\nConsider adjusting your OVERALL budget before adjusting your \" + budgetName + \" budget!\"","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"jonathanlkw"},"content":"                    + \"\\nCurrently you cannot extend your \" + budgetName","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"jonathanlkw"},"content":"                    + \" budget without first extending your OVERALL budget!\";","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"jonathanlkw"},"content":"        } else {","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"jonathanlkw"},"content":"            return \"Nearing both \" + month + \" \" + budgetName + \" budget ($\"","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"jonathanlkw"},"content":"                    + roundTwoDecimalPlace(currBudgetAmount) + \"/$\" + roundTwoDecimalPlace(budgetLimit)","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"jonathanlkw"},"content":"                    + \") and \" + month + \" OVERALL budget ($\" + roundTwoDecimalPlace(currOverallAmount)","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"jonathanlkw"},"content":"                    + \"/$\" + roundTwoDecimalPlace(overallLimit) + \").\"","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"jonathanlkw"},"content":"                    + \"\\nConsider adjusting your OVERALL budget before adjusting your \" + budgetName + \" budget!\"","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"jonathanlkw"},"content":"                    + \"\\nCurrently you can extend your \" + budgetName","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"jonathanlkw"},"content":"                    + \" budget up until $\" + roundTwoDecimalPlace(extendedBudget) + \"!\";","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"jonathanlkw"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"jonathanlkw"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"jonathanlkw":41}},{"path":"src/main/java/seedu/reminder/DoubleReminder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonathanlkw"},"content":"package seedu.reminder;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"jonathanlkw"},"content":"import seedu.budget.Budget;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"public abstract class DoubleReminder extends BudgetReminder {","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"    protected double currOverallAmount;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"jonathanlkw"},"content":"    protected double overallLimit;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"    protected double totalBudget;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"jonathanlkw"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"jonathanlkw":9}},{"path":"src/main/java/seedu/reminder/ExceededBudgetNearingOverallReminder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonathanlkw"},"content":"package seedu.reminder;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"jonathanlkw"},"content":"public class ExceededBudgetNearingOverallReminder extends DoubleReminder {","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"    public ExceededBudgetNearingOverallReminder(String month, String budgetName, double currBudgetAmount,","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"                                                double budgetLimit, double currOverallAmount,","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"jonathanlkw"},"content":"                                                double overallLimit, double totalBudget) {","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"        this.month \u003d month;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"jonathanlkw"},"content":"        this.budgetName \u003d budgetName;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"jonathanlkw"},"content":"        this.currBudgetAmount \u003d currBudgetAmount;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"jonathanlkw"},"content":"        this.budgetLimit \u003d budgetLimit;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"jonathanlkw"},"content":"        this.currOverallAmount \u003d currOverallAmount;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"jonathanlkw"},"content":"        this.overallLimit \u003d overallLimit;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"jonathanlkw"},"content":"        this.totalBudget \u003d totalBudget;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"jonathanlkw"},"content":"    @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"jonathanlkw"},"content":"    public String toString() {","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"jonathanlkw"},"content":"        double extendedBudget \u003d overallLimit - totalBudget + currBudgetAmount;","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"jonathanlkw"},"content":"        if (extendedBudget \u003c currBudgetAmount) {","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"jonathanlkw"},"content":"            return \"Exceeded \" + month + \" \" + budgetName + \" budget ($\"","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"jonathanlkw"},"content":"                    + roundTwoDecimalPlace(currBudgetAmount) + \"/$\" + roundTwoDecimalPlace(budgetLimit)","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"jonathanlkw"},"content":"                    + \") and nearing \" + month + \" OVERALL budget ($\" + roundTwoDecimalPlace(currOverallAmount)","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"jonathanlkw"},"content":"                    + \"/$\" + roundTwoDecimalPlace(overallLimit) + \").\"","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"jonathanlkw"},"content":"                    + \"\\nConsider adjusting your OVERALL budget before adjusting your \" + budgetName + \" budget!\"","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"jonathanlkw"},"content":"                    + \"\\nCurrently you cannot extend your \" + budgetName","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"jonathanlkw"},"content":"                    + \" budget without first extending your OVERALL budget!\";","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"jonathanlkw"},"content":"        } else {","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"jonathanlkw"},"content":"            return \"Exceeded \" + month + \" \" + budgetName + \" budget ($\"","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"jonathanlkw"},"content":"                    + roundTwoDecimalPlace(currBudgetAmount) + \"/$\" + roundTwoDecimalPlace(budgetLimit)","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"jonathanlkw"},"content":"                    + \") and nearing \" + month + \" OVERALL budget ($\" + roundTwoDecimalPlace(currOverallAmount)","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"jonathanlkw"},"content":"                    + \"/$\" + roundTwoDecimalPlace(overallLimit) + \").\"","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"jonathanlkw"},"content":"                    + \"\\nConsider adjusting your OVERALL budget before adjusting your \" + budgetName + \" budget!\"","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"jonathanlkw"},"content":"                    + \"\\nCurrently you can extend your \" + budgetName","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"jonathanlkw"},"content":"                    + \" budget up until $\" + roundTwoDecimalPlace(extendedBudget) + \"!\";","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"jonathanlkw"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"jonathanlkw"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"jonathanlkw":38}},{"path":"src/main/java/seedu/reminder/NoReminder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonathanlkw"},"content":"package seedu.reminder;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"jonathanlkw"},"content":"public class NoReminder extends BudgetReminder {","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"    public NoReminder() {","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"        this.month \u003d null;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"        this.budgetName \u003d null;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"jonathanlkw"},"content":"        this.currBudgetAmount \u003d 0;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"        this.budgetLimit \u003d 0;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"jonathanlkw"},"content":"    @Override","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"jonathanlkw"},"content":"    public String toString() {","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"jonathanlkw"},"content":"        return \"Budget reminders are only given for current month!\";","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"jonathanlkw"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"jonathanlkw":15}},{"path":"src/main/java/seedu/reminder/SingleExceededReminder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonathanlkw"},"content":"package seedu.reminder;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"jonathanlkw"},"content":"public class SingleExceededReminder extends BudgetReminder {","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"    public SingleExceededReminder(String month, String budgetName, double currBudgetAmount, double budgetLimit) {","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"        this.month \u003d month;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"jonathanlkw"},"content":"        this.budgetName \u003d budgetName;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"        this.currBudgetAmount \u003d currBudgetAmount;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"jonathanlkw"},"content":"        this.budgetLimit \u003d budgetLimit;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"jonathanlkw"},"content":"    @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"jonathanlkw"},"content":"    public String toString() {","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"jonathanlkw"},"content":"        return \"You have exceeded the \" + month + \" \" + budgetName + \" budget: $\"","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"jonathanlkw"},"content":"                + roundTwoDecimalPlace(currBudgetAmount) + \"/\" + \"$\" + roundTwoDecimalPlace(budgetLimit)","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"jonathanlkw"},"content":"                + \"\\nConsider readjusting your \" + month + \" \" + budgetName + \" budget!\";","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"jonathanlkw"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"jonathanlkw":18}},{"path":"src/main/java/seedu/reminder/SingleNearingReminder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonathanlkw"},"content":"package seedu.reminder;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"jonathanlkw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"public class SingleNearingReminder extends BudgetReminder {","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"jonathanlkw"},"content":"    public SingleNearingReminder(String month, String budgetName, double currBudgetAmount, double budgetLimit) {","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"        this.month \u003d month;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"jonathanlkw"},"content":"        this.budgetName \u003d budgetName;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"jonathanlkw"},"content":"        this.currBudgetAmount \u003d currBudgetAmount;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"jonathanlkw"},"content":"        this.budgetLimit \u003d budgetLimit;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"jonathanlkw"},"content":"    @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"jonathanlkw"},"content":"    public String toString() {","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"jonathanlkw"},"content":"        return \"You are almost reaching the \" + month + \" \" + budgetName + \" budget: $\"","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"jonathanlkw"},"content":"                + roundTwoDecimalPlace(currBudgetAmount) + \"/$\" + roundTwoDecimalPlace(budgetLimit)","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"jonathanlkw"},"content":"                + \"\\nConsider readjusting your \" + month + \" \" + budgetName + \" budget!\";","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"jonathanlkw"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"jonathanlkw":20}},{"path":"src/main/java/seedu/reminder/SingleReminder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonathanlkw"},"content":"package seedu.reminder;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"jonathanlkw"},"content":"public class SingleReminder extends BudgetReminder {","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"    public SingleReminder(String month, String budgetName, double currBudgetAmount, double budgetLimit) {","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"        this.month \u003d month;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"jonathanlkw"},"content":"        this.budgetName \u003d budgetName;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"        this.currBudgetAmount \u003d currBudgetAmount;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"jonathanlkw"},"content":"        this.budgetLimit \u003d budgetLimit;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"jonathanlkw"},"content":"    @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"jonathanlkw"},"content":"    public String toString() {","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"jonathanlkw"},"content":"        return \"Current \" + month + \" \" + budgetName + \" budget: $\"","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"jonathanlkw"},"content":"                + roundTwoDecimalPlace(currBudgetAmount) + \"/$\" + roundTwoDecimalPlace(budgetLimit);","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"jonathanlkw"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"jonathanlkw":18}},{"path":"src/main/java/seedu/reminder/UnableToSetBudgetReminder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonathanlkw"},"content":"package seedu.reminder;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"jonathanlkw"},"content":"public class UnableToSetBudgetReminder extends BudgetReminder {","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"    private double overallLimit;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"    private double newBudgetLimit;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"    private double newTotalBudget;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"    public UnableToSetBudgetReminder(String budgetName, double currBudgetAmount, double overallLimit,","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"jonathanlkw"},"content":"                                     double newBudgetLimit, double newTotalBudget) {","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"jonathanlkw"},"content":"        this.month \u003d null;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"jonathanlkw"},"content":"        this.budgetName \u003d budgetName;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"jonathanlkw"},"content":"        this.currBudgetAmount \u003d currBudgetAmount;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"jonathanlkw"},"content":"        this.budgetLimit \u003d 0;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"jonathanlkw"},"content":"        this.overallLimit \u003d overallLimit;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"jonathanlkw"},"content":"        this.newBudgetLimit \u003d newBudgetLimit;","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"jonathanlkw"},"content":"        this.newTotalBudget \u003d newTotalBudget;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"jonathanlkw"},"content":"    @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"jonathanlkw"},"content":"    public String toString() {","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"jonathanlkw"},"content":"        if (newBudgetLimit \u003c currBudgetAmount \u0026\u0026 newTotalBudget \u003e overallLimit) {","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"jonathanlkw"},"content":"            return budgetName + \" budget must be greater than current \" + budgetName + \" spending of $\"","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"jonathanlkw"},"content":"                    + roundTwoDecimalPlace(currBudgetAmount) + \".\"","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"jonathanlkw"},"content":"                    + \"\\nWith new \" + budgetName","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"jonathanlkw"},"content":"                    + \" budget, total of all sub-budgets/spending will exceed OVERALL budget ($\"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"jonathanlkw"},"content":"                    + roundTwoDecimalPlace(newTotalBudget) + \"/$\" + roundTwoDecimalPlace(overallLimit) + \").\"","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"jonathanlkw"},"content":"                    + \"\\nIncrease your OVERALL budget first!\";","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"jonathanlkw"},"content":"        } else if (newBudgetLimit \u003c currBudgetAmount) {","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"jonathanlkw"},"content":"            return budgetName + \" budget must be greater than current \" + budgetName + \" spending of $\"","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"jonathanlkw"},"content":"                    + roundTwoDecimalPlace(currBudgetAmount) + \".\";","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"jonathanlkw"},"content":"        } else {","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"jonathanlkw"},"content":"            return \"With new \" + budgetName","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"jonathanlkw"},"content":"                    + \" budget, total of all sub-budgets/spending will exceed OVERALL budget ($\"","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"jonathanlkw"},"content":"                    + roundTwoDecimalPlace(newTotalBudget) + \"/$\" + roundTwoDecimalPlace(overallLimit) + \").\"","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"jonathanlkw"},"content":"                    + \"\\nIncrease your OVERALL budget first!\";","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"jonathanlkw"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"jonathanlkw"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"jonathanlkw":38}},{"path":"src/main/java/seedu/reminder/UnableToSetOverallBudgetReminder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonathanlkw"},"content":"package seedu.reminder;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"jonathanlkw"},"content":"public class UnableToSetOverallBudgetReminder extends BudgetReminder {","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"    private double totalBudget;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"    public UnableToSetOverallBudgetReminder(String budgetName, double budgetLimit, double totalBudget) {","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"jonathanlkw"},"content":"        this.month \u003d null;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"        this.budgetName \u003d budgetName;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"jonathanlkw"},"content":"        this.currBudgetAmount \u003d 0;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"jonathanlkw"},"content":"        this.budgetLimit \u003d budgetLimit;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"jonathanlkw"},"content":"        this.totalBudget \u003d totalBudget;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"jonathanlkw"},"content":"    @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"jonathanlkw"},"content":"    public String toString() {","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"jonathanlkw"},"content":"        return \"OVERALL budget must be greater than all sub-budgets and spending!\"","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"jonathanlkw"},"content":"                + \"\\nCurrently sum of all sub-budgets/spending: $\" + roundTwoDecimalPlace(totalBudget);","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"jonathanlkw"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"jonathanlkw":19}},{"path":"src/main/java/seedu/utility/BudgetManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonathanlkw"},"content":"package seedu.utility;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"jonathanlkw"},"content":"import seedu.budget.BillsBudget;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"import seedu.budget.Budget;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"import seedu.budget.EntertainmentBudget;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"import seedu.budget.FoodBudget;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"jonathanlkw"},"content":"import seedu.budget.MedicalBudget;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"import seedu.budget.MiscBudget;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"jonathanlkw"},"content":"import seedu.budget.OverallBudget;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"jonathanlkw"},"content":"import seedu.budget.TransportBudget;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"jonathanlkw"},"content":"import seedu.entry.Expense;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"jonathanlkw"},"content":"import seedu.entry.ExpenseCategory;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"jonathanlkw"},"content":"import seedu.reminder.BudgetReminder;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"jonathanlkw"},"content":"import seedu.reminder.BudgetSetReminder;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"jonathanlkw"},"content":"import seedu.reminder.DoubleExceededBudgetReminder;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"jonathanlkw"},"content":"import seedu.reminder.DoubleNearingBudgetReminder;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"jonathanlkw"},"content":"import seedu.reminder.ExceededBudgetNearingOverallReminder;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"jonathanlkw"},"content":"import seedu.reminder.NoReminder;","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"jonathanlkw"},"content":"import seedu.reminder.SingleExceededReminder;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"jonathanlkw"},"content":"import seedu.reminder.SingleNearingReminder;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"jonathanlkw"},"content":"import seedu.reminder.SingleReminder;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"jonathanlkw"},"content":"import seedu.reminder.UnableToSetBudgetReminder;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"jonathanlkw"},"content":"import seedu.reminder.UnableToSetOverallBudgetReminder;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"jonathanlkw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"jonathanlkw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"jonathanlkw"},"content":"public class BudgetManager {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"jonathanlkw"},"content":"    private double threshold;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"jonathanlkw"},"content":"    private final OverallBudget overallBudget \u003d new OverallBudget(0);","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"jonathanlkw"},"content":"    private final FoodBudget foodBudget \u003d new FoodBudget(0);","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"jonathanlkw"},"content":"    private final TransportBudget transportBudget \u003d new TransportBudget(0);","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"jonathanlkw"},"content":"    private final MedicalBudget medicalBudget \u003d new MedicalBudget(0);","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"jonathanlkw"},"content":"    private final BillsBudget billsBudget \u003d new BillsBudget(0);","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"jonathanlkw"},"content":"    private final EntertainmentBudget entertainmentBudget \u003d new EntertainmentBudget(0);","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"jonathanlkw"},"content":"    private final MiscBudget miscBudget \u003d new MiscBudget(0);","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"jonathanlkw"},"content":"    ArrayList\u003cBudget\u003e budgets \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"jonathanlkw"},"content":"    public BudgetManager() {","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"jonathanlkw"},"content":"        this.threshold \u003d 0.9;","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"jonathanlkw"},"content":"        budgets.add(overallBudget);","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"jonathanlkw"},"content":"        budgets.add(foodBudget);","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"jonathanlkw"},"content":"        budgets.add(transportBudget);","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"jonathanlkw"},"content":"        budgets.add(medicalBudget);","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"jonathanlkw"},"content":"        budgets.add(billsBudget);","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"jonathanlkw"},"content":"        budgets.add(entertainmentBudget);","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"jonathanlkw"},"content":"        budgets.add(miscBudget);","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"jonathanlkw"},"content":"    public BudgetReminder handleBudget(Expense expense, ArrayList\u003cExpense\u003e expenses) {","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"jonathanlkw"},"content":"        Budget budget \u003d expenseCategoryToBudget(expense.getCategory());","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"jonathanlkw"},"content":"        LocalDate date \u003d expense.getDate();","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"jonathanlkw"},"content":"        String month \u003d date.getMonth().toString();","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"jonathanlkw"},"content":"        double currBudgetAmount \u003d budget.calAmount(expenses, date);","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"jonathanlkw"},"content":"        double currOverallAmount \u003d overallBudget.calAmount(expenses, date);","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"jonathanlkw"},"content":"        if (isNotCurrentMonth(date)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"jonathanlkw"},"content":"            return new NoReminder();","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"jonathanlkw"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"jonathanlkw"},"content":"        if (isNearingLimit(budget, currBudgetAmount) \u0026\u0026 isNearingLimit(overallBudget, currOverallAmount)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"jonathanlkw"},"content":"            return new DoubleNearingBudgetReminder(month, budget.getName(), currBudgetAmount, budget.getLimit(),","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"jonathanlkw"},"content":"                    currOverallAmount, overallBudget.getLimit(), getTotalBudget(expenses, date));","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"jonathanlkw"},"content":"        } else if (isExceededLimit(budget, currBudgetAmount) \u0026\u0026 isExceededLimit(overallBudget, currOverallAmount)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"jonathanlkw"},"content":"            return new DoubleExceededBudgetReminder(month, budget.getName(), currBudgetAmount, budget.getLimit(),","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"jonathanlkw"},"content":"                    currOverallAmount, overallBudget.getLimit(), getTotalBudget(expenses, date));","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"jonathanlkw"},"content":"        } else if (isExceededLimit(budget, currBudgetAmount) \u0026\u0026 isNearingLimit(overallBudget, currOverallAmount)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"jonathanlkw"},"content":"            return new ExceededBudgetNearingOverallReminder(month, budget.getName(), currBudgetAmount,","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"jonathanlkw"},"content":"                    budget.getLimit(), currOverallAmount, overallBudget.getLimit(), getTotalBudget(expenses, date));","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"jonathanlkw"},"content":"        } else {","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"jonathanlkw"},"content":"            if (isNearingLimit(budget, currBudgetAmount)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"jonathanlkw"},"content":"                return new SingleNearingReminder(month, budget.getName(), currBudgetAmount, budget.getLimit());","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"jonathanlkw"},"content":"            } else if (isExceededLimit(budget, currBudgetAmount)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"jonathanlkw"},"content":"                return new SingleExceededReminder(month, budget.getName(), currBudgetAmount, budget.getLimit());","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"jonathanlkw"},"content":"            } else {","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"jonathanlkw"},"content":"                return new SingleReminder(month, budget.getName(), currBudgetAmount, budget.getLimit());","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"jonathanlkw"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":86,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"jonathanlkw"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":88,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"jonathanlkw"},"content":"    private boolean isNotCurrentMonth(LocalDate date) {","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"jonathanlkw"},"content":"        return date.getMonth() !\u003d LocalDate.now().getMonth() | date.getYear() !\u003d LocalDate.now().getYear();","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"jonathanlkw"},"content":"    private double getThresholdLimit(double budgetLimit) {","lastModifiedDate":"2021-11-06"},{"lineNumber":95,"author":{"gitId":"jonathanlkw"},"content":"        return (1 - threshold) * budgetLimit;","lastModifiedDate":"2021-11-06"},{"lineNumber":96,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":98,"author":{"gitId":"jonathanlkw"},"content":"    private boolean isNearingLimit(Budget budget, double currBudgetAmount) {","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"jonathanlkw"},"content":"        double diff \u003d budget.getLimit() - currBudgetAmount;","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"jonathanlkw"},"content":"        double thresholdLimit \u003d getThresholdLimit(budget.getLimit());","lastModifiedDate":"2021-11-07"},{"lineNumber":101,"author":{"gitId":"jonathanlkw"},"content":"        return (diff \u003e 0) \u0026\u0026 (diff \u003c\u003d thresholdLimit);","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":103,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":104,"author":{"gitId":"jonathanlkw"},"content":"    private boolean isExceededLimit(Budget budget, double currBudgetAmount) {","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"jonathanlkw"},"content":"        double diff \u003d budget.getLimit() - currBudgetAmount;","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"jonathanlkw"},"content":"        return diff \u003c\u003d 0;","lastModifiedDate":"2021-11-06"},{"lineNumber":107,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":109,"author":{"gitId":"jonathanlkw"},"content":"    private boolean isActive(Budget budget) {","lastModifiedDate":"2021-11-06"},{"lineNumber":110,"author":{"gitId":"jonathanlkw"},"content":"        if (budget.getLimit() !\u003d 0) {","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"jonathanlkw"},"content":"            return true;","lastModifiedDate":"2021-11-06"},{"lineNumber":112,"author":{"gitId":"jonathanlkw"},"content":"        } else {","lastModifiedDate":"2021-11-06"},{"lineNumber":113,"author":{"gitId":"jonathanlkw"},"content":"            return false;","lastModifiedDate":"2021-11-06"},{"lineNumber":114,"author":{"gitId":"jonathanlkw"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":117,"author":{"gitId":"jonathanlkw"},"content":"    public void setThreshold(double threshold) {","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"jonathanlkw"},"content":"        assert (threshold \u003e\u003d 0) \u0026\u0026 (threshold \u003c\u003d 1);","lastModifiedDate":"2021-11-07"},{"lineNumber":119,"author":{"gitId":"jonathanlkw"},"content":"        this.threshold \u003d threshold;","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"jonathanlkw"},"content":"    public double getThreshold() {","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"jonathanlkw"},"content":"        return this.threshold;","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"jonathanlkw"},"content":"    public BudgetReminder setBudget(double amount, ExpenseCategory category, ArrayList\u003cExpense\u003e expenses) {","lastModifiedDate":"2021-11-06"},{"lineNumber":127,"author":{"gitId":"jonathanlkw"},"content":"        assert amount \u003e\u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"jonathanlkw"},"content":"        assert category !\u003d ExpenseCategory.NULL;","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"jonathanlkw"},"content":"        Budget budget \u003d expenseCategoryToBudget(category);","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"jonathanlkw"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2021-11-07"},{"lineNumber":131,"author":{"gitId":"jonathanlkw"},"content":"        if (budget \u003d\u003d overallBudget) {","lastModifiedDate":"2021-11-06"},{"lineNumber":132,"author":{"gitId":"jonathanlkw"},"content":"            if (amount \u003e\u003d getTotalBudget(expenses, date)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":133,"author":{"gitId":"jonathanlkw"},"content":"                budget.setLimit(amount);","lastModifiedDate":"2021-11-06"},{"lineNumber":134,"author":{"gitId":"jonathanlkw"},"content":"                return new BudgetSetReminder(budget.getName(), budget.getLimit());","lastModifiedDate":"2021-11-07"},{"lineNumber":135,"author":{"gitId":"jonathanlkw"},"content":"            } else {","lastModifiedDate":"2021-11-06"},{"lineNumber":136,"author":{"gitId":"jonathanlkw"},"content":"                return new UnableToSetOverallBudgetReminder(budget.getName(),","lastModifiedDate":"2021-11-06"},{"lineNumber":137,"author":{"gitId":"jonathanlkw"},"content":"                        budget.getLimit(), getTotalBudget(expenses, date));","lastModifiedDate":"2021-11-07"},{"lineNumber":138,"author":{"gitId":"jonathanlkw"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":139,"author":{"gitId":"jonathanlkw"},"content":"        } else {","lastModifiedDate":"2021-11-06"},{"lineNumber":140,"author":{"gitId":"jonathanlkw"},"content":"            double oldBudget \u003d budget.getLimit();","lastModifiedDate":"2021-11-07"},{"lineNumber":141,"author":{"gitId":"jonathanlkw"},"content":"            budget.setLimit(amount);","lastModifiedDate":"2021-11-07"},{"lineNumber":142,"author":{"gitId":"jonathanlkw"},"content":"            double newTotalBudget \u003d getTotalBudget(expenses, date);","lastModifiedDate":"2021-11-07"},{"lineNumber":143,"author":{"gitId":"jonathanlkw"},"content":"            if (amount \u003e\u003d budget.calAmount(expenses, date) \u0026\u0026 newTotalBudget \u003c\u003d overallBudget.getLimit()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":144,"author":{"gitId":"jonathanlkw"},"content":"                return new BudgetSetReminder(budget.getName(), budget.getLimit());","lastModifiedDate":"2021-11-07"},{"lineNumber":145,"author":{"gitId":"jonathanlkw"},"content":"            } else {","lastModifiedDate":"2021-11-06"},{"lineNumber":146,"author":{"gitId":"jonathanlkw"},"content":"                budget.setLimit(oldBudget);","lastModifiedDate":"2021-11-07"},{"lineNumber":147,"author":{"gitId":"jonathanlkw"},"content":"                return new UnableToSetBudgetReminder(budget.getName(), budget.calAmount(expenses, date),","lastModifiedDate":"2021-11-07"},{"lineNumber":148,"author":{"gitId":"jonathanlkw"},"content":"                        overallBudget.getLimit(), amount, newTotalBudget);","lastModifiedDate":"2021-11-07"},{"lineNumber":149,"author":{"gitId":"jonathanlkw"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":150,"author":{"gitId":"jonathanlkw"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":151,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"jonathanlkw"},"content":"    public double getBudget(ExpenseCategory category) {","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"jonathanlkw"},"content":"        assert category !\u003d ExpenseCategory.NULL;","lastModifiedDate":"2021-10-20"},{"lineNumber":155,"author":{"gitId":"jonathanlkw"},"content":"        Budget budget \u003d expenseCategoryToBudget(category);","lastModifiedDate":"2021-10-20"},{"lineNumber":156,"author":{"gitId":"jonathanlkw"},"content":"        return budget.getLimit();","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"Nirmaleshwar"},"content":"    public ArrayList\u003cBudget\u003e getBudgets() {","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"Nirmaleshwar"},"content":"        return budgets;","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"jonathanlkw"},"content":"    public double getTotalBudget(ArrayList\u003cExpense\u003e expenses, LocalDate date) {","lastModifiedDate":"2021-11-07"},{"lineNumber":164,"author":{"gitId":"jonathanlkw"},"content":"        double total \u003d 0;","lastModifiedDate":"2021-11-06"},{"lineNumber":165,"author":{"gitId":"jonathanlkw"},"content":"        for (Budget budget : budgets) {","lastModifiedDate":"2021-11-06"},{"lineNumber":166,"author":{"gitId":"jonathanlkw"},"content":"            if (budget \u003d\u003d overallBudget) {","lastModifiedDate":"2021-11-06"},{"lineNumber":167,"author":{"gitId":"jonathanlkw"},"content":"                continue;","lastModifiedDate":"2021-11-06"},{"lineNumber":168,"author":{"gitId":"jonathanlkw"},"content":"            } else if (budget.getLimit() \u003e\u003d budget.calAmount(expenses, date)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":169,"author":{"gitId":"jonathanlkw"},"content":"                total +\u003d budget.getLimit();","lastModifiedDate":"2021-11-06"},{"lineNumber":170,"author":{"gitId":"jonathanlkw"},"content":"            } else {","lastModifiedDate":"2021-11-06"},{"lineNumber":171,"author":{"gitId":"jonathanlkw"},"content":"                total +\u003d budget.calAmount(expenses, date);","lastModifiedDate":"2021-11-07"},{"lineNumber":172,"author":{"gitId":"jonathanlkw"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":173,"author":{"gitId":"jonathanlkw"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":174,"author":{"gitId":"jonathanlkw"},"content":"        return total;","lastModifiedDate":"2021-11-06"},{"lineNumber":175,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":176,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":177,"author":{"gitId":"jonathanlkw"},"content":"    private Budget expenseCategoryToBudget(ExpenseCategory category) {","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"jonathanlkw"},"content":"        assert category !\u003d ExpenseCategory.NULL;","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"jonathanlkw"},"content":"        Budget budget;","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"jonathanlkw"},"content":"        switch (category) {","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"jonathanlkw"},"content":"        case FOOD:","lastModifiedDate":"2021-10-20"},{"lineNumber":182,"author":{"gitId":"jonathanlkw"},"content":"            budget \u003d foodBudget;","lastModifiedDate":"2021-10-20"},{"lineNumber":183,"author":{"gitId":"jonathanlkw"},"content":"            break;","lastModifiedDate":"2021-10-20"},{"lineNumber":184,"author":{"gitId":"jonathanlkw"},"content":"        case TRANSPORT:","lastModifiedDate":"2021-10-20"},{"lineNumber":185,"author":{"gitId":"jonathanlkw"},"content":"            budget \u003d transportBudget;","lastModifiedDate":"2021-10-20"},{"lineNumber":186,"author":{"gitId":"jonathanlkw"},"content":"            break;","lastModifiedDate":"2021-10-20"},{"lineNumber":187,"author":{"gitId":"jonathanlkw"},"content":"        case MEDICAL:","lastModifiedDate":"2021-10-20"},{"lineNumber":188,"author":{"gitId":"jonathanlkw"},"content":"            budget \u003d medicalBudget;","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"jonathanlkw"},"content":"            break;","lastModifiedDate":"2021-10-20"},{"lineNumber":190,"author":{"gitId":"jonathanlkw"},"content":"        case BILLS:","lastModifiedDate":"2021-10-20"},{"lineNumber":191,"author":{"gitId":"jonathanlkw"},"content":"            budget \u003d billsBudget;","lastModifiedDate":"2021-10-20"},{"lineNumber":192,"author":{"gitId":"jonathanlkw"},"content":"            break;","lastModifiedDate":"2021-10-20"},{"lineNumber":193,"author":{"gitId":"jonathanlkw"},"content":"        case ENTERTAINMENT:","lastModifiedDate":"2021-10-20"},{"lineNumber":194,"author":{"gitId":"jonathanlkw"},"content":"            budget \u003d entertainmentBudget;","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"jonathanlkw"},"content":"            break;","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"jonathanlkw"},"content":"        case MISC:","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"jonathanlkw"},"content":"            budget \u003d miscBudget;","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"jonathanlkw"},"content":"            break;","lastModifiedDate":"2021-10-20"},{"lineNumber":199,"author":{"gitId":"jonathanlkw"},"content":"        default:","lastModifiedDate":"2021-10-20"},{"lineNumber":200,"author":{"gitId":"jonathanlkw"},"content":"            budget \u003d overallBudget;","lastModifiedDate":"2021-10-20"},{"lineNumber":201,"author":{"gitId":"jonathanlkw"},"content":"            break;","lastModifiedDate":"2021-10-20"},{"lineNumber":202,"author":{"gitId":"jonathanlkw"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"jonathanlkw"},"content":"        return budget;","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":205,"author":{"gitId":"jonathanlkw"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"Nirmaleshwar":4,"jonathanlkw":201}},{"path":"src/main/java/seedu/utility/CommandFormat.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KZQ1999"},"content":"package seedu.utility;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"KZQ1999"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"KZQ1999"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"KZQ1999"},"content":"public class CommandFormat {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"KZQ1999"},"content":"    private static final String HELP_FORMAT \u003d \"List Out All Commands: help\";","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"KZQ1999"},"content":"    private static final String ADD_EXPENSE_FORMAT \u003d \"Adding Expense: add_ex d/DESCRIPTION \" ","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"KZQ1999"},"content":"            + \"a/AMOUNT c/CATEGORY\";","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"KZQ1999"},"content":"    private static final String ADD_EXPENSE_WITH_DATE_FORMAT \u003d \"Adding Expense With Date (Date Format: DD/MM/YYYY):\"","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"KZQ1999"},"content":"            + \" add_ex_d d/DESCRIPTION a/AMOUNT c/CATEGORY D/DATE\";","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"KZQ1999"},"content":"    private static final String DEL_EXPENSE_FORMAT \u003d \"Deleting Expense: del_ex i/INDEX\";","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"KZQ1999"},"content":"    private static final String LIST_EXPENSE_FORMAT \u003d \"Listing Expense: list_ex\";","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"KZQ1999"},"content":"    private static final String TOTAL_EXPENSE_FORMAT \u003d \"Show Total Expense: total_ex\";","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"KZQ1999"},"content":"    private static final String ADD_INCOME_FORMAT \u003d \"Adding Income: add_in d/DESCRIPTION \" ","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"KZQ1999"},"content":"            + \"a/AMOUNT c/CATEGORY\";","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"KZQ1999"},"content":"    private static final String ADD_INCOME_WITH_DATE_FORMAT \u003d \"Adding Income With Date (Date Format: DD/MM/YYYY):\"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"KZQ1999"},"content":"            + \" add_in_d d/DESCRIPTION a/AMOUNT c/CATEGORY D/DATE\";","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"KZQ1999"},"content":"    private static final String DEL_INCOME_FORMAT \u003d \"Deleting Income: del_in i/INDEX\";","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"KZQ1999"},"content":"    private static final String LIST_INCOME_FORMAT \u003d \"Listing Income: list_in\";","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"KZQ1999"},"content":"    private static final String TOTAL_INCOME_FORMAT \u003d \"Show Total Income: total_in\";","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"KZQ1999"},"content":"    private static final String EXPENSE_BETWEEN_FORMAT \u003d \"Show Total Expense between 2 dates (Date Format: DD/MM/YYYY)\"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"KZQ1999"},"content":"            + \": btw_ex s/START_DATE e/END_DATE\";","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"KZQ1999"},"content":"    private static final String INCOME_BETWEEN_FORMAT \u003d \"Show Total Income between 2 dates (Date Format: DD/MM/YYYY)\"","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"KZQ1999"},"content":"            + \": btw_in s/START_DATE e/END_DATE\";","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"KZQ1999"},"content":"    private static final String END_FORMAT \u003d \"To Terminate The Program: end\";","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"KZQ1999"},"content":"    private static final String FIND_FORMAT \u003d \"To Find Using Date: find DD/MM/YYYY\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"KZQ1999"},"content":"            + \"To Find Based On Keyword: find KEYWORD\";","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"KZQ1999"},"content":"    private static final String BALANCE_FORMAT \u003d \"To Display Total Balance: balance\";","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"KZQ1999"},"content":"    private static final String SET_BUDGET_FORMAT \u003d \"To Set Budgets: set_budget c/CATEGORY a/AMOUNT\";","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"KZQ1999"},"content":"    private static final String CHECK_BUDGET_FORMAT \u003d \"To Check Budgets: check_budget c/CATEGORY\";","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"KZQ1999"},"content":"    private static final String SET_THRESHOLD_FORMAT \u003d \"To Set Threshold Value for Reminders: \"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"KZQ1999"},"content":"            + \"set_threshold t/THRESHOLD\";","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"KZQ1999"},"content":"    private static final String CLEAR_FORMAT \u003d \"To Clear All Expense And Income Entries: clear_all_entries\";","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"kyun99"},"content":"    private static final String GRAPH_FORMAT \u003d \"To View Your Yearly Report (Year format: YYYY): show_graph [Y/YEAR]\";","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"Nirmaleshwar"},"content":"    private static final String CONVERT_CURRENCY_FORMAT","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"Nirmaleshwar"},"content":"            \u003d \"To change entries into a different currency: set_curr c/CURRENCY\";","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"Nirmaleshwar"},"content":"    private static final String CHECK_CURRENCY_FORMAT","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"Nirmaleshwar"},"content":"            \u003d \"To check the currency that entries are currently in: check_curr\";","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"kyun99"},"content":"    private static final String LIST_CURRENCY_TYPES_FORMAT","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"kyun99"},"content":"            \u003d  \"Lists available currency types for conversion: list_curr\";","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"KZQ1999"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"KZQ1999"},"content":"    public static final List\u003cString\u003e commands \u003d Arrays.asList(HELP_FORMAT, ADD_EXPENSE_FORMAT,","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"KZQ1999"},"content":"            ADD_EXPENSE_WITH_DATE_FORMAT, DEL_EXPENSE_FORMAT, ADD_INCOME_FORMAT, ADD_INCOME_WITH_DATE_FORMAT,","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"KZQ1999"},"content":"            DEL_INCOME_FORMAT, LIST_EXPENSE_FORMAT, LIST_INCOME_FORMAT, TOTAL_EXPENSE_FORMAT, TOTAL_INCOME_FORMAT,","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"KZQ1999"},"content":"            BALANCE_FORMAT, EXPENSE_BETWEEN_FORMAT, INCOME_BETWEEN_FORMAT, FIND_FORMAT, SET_BUDGET_FORMAT,","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"KZQ1999"},"content":"            CHECK_BUDGET_FORMAT, SET_THRESHOLD_FORMAT, CONVERT_CURRENCY_FORMAT, CHECK_CURRENCY_FORMAT,","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"kyun99"},"content":"            LIST_CURRENCY_TYPES_FORMAT, GRAPH_FORMAT, CLEAR_FORMAT, END_FORMAT);","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"KZQ1999"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kyun99":4,"KZQ1999":41,"Nirmaleshwar":4}},{"path":"src/main/java/seedu/utility/CommandKeywords.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package seedu.utility;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":" * Contains all the possible command words that users can give.","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"AnShengLee"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"AnShengLee"},"content":"public class CommandKeywords {","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"AnShengLee"},"content":"    public static final String HELP_COMMAND_KEYWORD \u003d \"help\";","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"AnShengLee"},"content":"    public static final String ADD_EXPENSE_KEYWORD \u003d \"add_ex\";","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"AnShengLee"},"content":"    public static final String ADD_EXPENSE_WITH_DATE_KEYWORD \u003d \"add_ex_d\";","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"AnShengLee"},"content":"    public static final String ADD_INCOME_KEYWORD \u003d \"add_in\";","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"AnShengLee"},"content":"    public static final String ADD_INCOME_WITH_DATE_KEYWORD \u003d \"add_in_d\";","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"AnShengLee"},"content":"    public static final String DELETE_EXPENSE_KEYWORD \u003d \"del_ex\";","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"AnShengLee"},"content":"    public static final String DELETE_INCOME_KEYWORD \u003d \"del_in\";","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"AnShengLee"},"content":"    public static final String LIST_EXPENSE_KEYWORD \u003d \"list_ex\";","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"AnShengLee"},"content":"    public static final String LIST_INCOME_KEYWORD \u003d \"list_in\";","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"AnShengLee"},"content":"    public static final String TOTAL_EXPENSE_KEYWORD \u003d \"total_ex\";","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"AnShengLee"},"content":"    public static final String TOTAL_INCOME_KEYWORD \u003d \"total_in\";","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"AnShengLee"},"content":"    public static final String FIND_KEYWORD \u003d \"find\";","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"AnShengLee"},"content":"    public static final String BALANCE_KEYWORD \u003d \"balance\";","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"AnShengLee"},"content":"    public static final String EXIT_KEYWORD \u003d \"end\";","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"AnShengLee"},"content":"    public static final String EXPENSE_RANGE_KEYWORD \u003d \"btw_ex\";","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"AnShengLee"},"content":"    public static final String INCOME_RANGE_KEYWORD \u003d \"btw_in\";","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"AnShengLee"},"content":"    public static final String SHOW_GRAPH_KEYWORD \u003d \"show_graph\";","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"AnShengLee"},"content":"    public static final String CLEAR_ALL_ENTRIES_KEYWORD \u003d \"clear_all_entries\";","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"AnShengLee"},"content":"    public static final String SET_BUDGET_KEYWORD \u003d \"set_budget\";","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"AnShengLee"},"content":"    public static final String CHECK_BUDGET_KEYWORD \u003d \"check_budget\";","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"AnShengLee"},"content":"    public static final String SET_THRESHOLD_KEYWORD \u003d \"set_threshold\";","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"AnShengLee"},"content":"    public static final String CONVERT_CURRENCY_KEYWORD \u003d \"set_curr\";","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"AnShengLee"},"content":"    public static final String CHECK_CURRENT_CURRENCY_KEYWORD \u003d \"check_curr\";","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"AnShengLee"},"content":"    public static final String LIST_CURRENCY_TYPES_KEYWORD \u003d \"list_curr\";","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"AnShengLee"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"AnShengLee":31}},{"path":"src/main/java/seedu/utility/CurrencyManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nirmaleshwar"},"content":"package seedu.utility;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.budget.Budget;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.commands.currency.CurrencyType;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.entry.Entry;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.exceptions.SameCurrencyTypeException;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"Nirmaleshwar"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"Nirmaleshwar"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"Nirmaleshwar"},"content":"public class CurrencyManager {","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"Nirmaleshwar"},"content":"    protected double exchangeRate;","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"Nirmaleshwar"},"content":"    private CurrencyType currency \u003d CurrencyType.SGD;","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"Nirmaleshwar"},"content":"    private ArrayList\u003cCurrencyType\u003e currencyTypes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"Nirmaleshwar"},"content":"    public void currencyConvertor(CurrencyType from, CurrencyType to, FinancialTracker finances,","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"Nirmaleshwar"},"content":"                                   BudgetManager budgetManager) throws SameCurrencyTypeException {","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"Nirmaleshwar"},"content":"        if (getCurrency() \u003d\u003d to) {","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"Nirmaleshwar"},"content":"            throw new SameCurrencyTypeException(Messages.SAME_CURRENCY_TYPE_MESSAGE);","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"Nirmaleshwar"},"content":"        } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"Nirmaleshwar"},"content":"            ArrayList\u003cEntry\u003e entries \u003d finances.getEntries();","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"Nirmaleshwar"},"content":"            ArrayList\u003cBudget\u003e budgets \u003d budgetManager.getBudgets();","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"Nirmaleshwar"},"content":"            convertEntries(entries, from, to);","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"Nirmaleshwar"},"content":"            convertBudgets(budgets, from, to);","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"Nirmaleshwar"},"content":"    public CurrencyType getCurrency() {","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"Nirmaleshwar"},"content":"        assert currency !\u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"Nirmaleshwar"},"content":"        return currency;","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"Nirmaleshwar"},"content":"    public void setCurrency(CurrencyType currency) {","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"Nirmaleshwar"},"content":"        this.currency \u003d currency;","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"Nirmaleshwar"},"content":"    public ArrayList\u003cCurrencyType\u003e getCurrencyTypes() {","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"Nirmaleshwar"},"content":"        currencyTypes.addAll(Arrays.asList(CurrencyType.values()));","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"Nirmaleshwar"},"content":"        return currencyTypes;","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"Nirmaleshwar"},"content":"    public double determineExchangeRate(CurrencyType to) {","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"Nirmaleshwar"},"content":"        switch (to) {","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"Nirmaleshwar"},"content":"        case USD:","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"Nirmaleshwar"},"content":"            return exchangeRate \u003d 0.74;","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"Nirmaleshwar"},"content":"        case SGD:","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"Nirmaleshwar"},"content":"            return exchangeRate \u003d 1.35;","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"Nirmaleshwar"},"content":"        default:","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"Nirmaleshwar"},"content":"            return exchangeRate \u003d 1.00;","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"Nirmaleshwar"},"content":"    public boolean isBaseCurrency(CurrencyType from) {","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"Nirmaleshwar"},"content":"        return !from.equals(CurrencyType.SGD);","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"Nirmaleshwar"},"content":"    public void convertEntries(ArrayList\u003cEntry\u003e entries, CurrencyType from, CurrencyType to) {","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"Nirmaleshwar"},"content":"        for (Entry entry : entries) {","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"Nirmaleshwar"},"content":"            double newValue \u003d convertItem(from, to, entry.getValue());","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"Nirmaleshwar"},"content":"            assert newValue \u003e\u003d 0;","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"Nirmaleshwar"},"content":"            entry.setValue(newValue);","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"Nirmaleshwar"},"content":"        setCurrency(to);","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"Nirmaleshwar"},"content":"    public void convertBudgets(ArrayList\u003cBudget\u003e budgets, CurrencyType from, CurrencyType to) {","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"Nirmaleshwar"},"content":"        for (Budget budget : budgets) {","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"Nirmaleshwar"},"content":"            double newValue \u003d convertItem(from, to, budget.getLimit());","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"Nirmaleshwar"},"content":"            budget.setLimit(newValue);","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"Nirmaleshwar"},"content":"        setCurrency(to);","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"Nirmaleshwar"},"content":"    public double convertItem(CurrencyType from, CurrencyType to, double value) {","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"Nirmaleshwar"},"content":"        if (isBaseCurrency(from)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"Nirmaleshwar"},"content":"            double fromRate \u003d determineExchangeRate(from);","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"Nirmaleshwar"},"content":"            assert fromRate \u003e\u003d 0;","lastModifiedDate":"2021-11-02"},{"lineNumber":79,"author":{"gitId":"Nirmaleshwar"},"content":"            value \u003d (value / fromRate);","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"Nirmaleshwar"},"content":"        double toRate \u003d determineExchangeRate(to);","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"Nirmaleshwar"},"content":"        assert toRate \u003e\u003d 0;","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"Nirmaleshwar"},"content":"        return (value * toRate);","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"Nirmaleshwar"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"Nirmaleshwar":85}},{"path":"src/main/java/seedu/utility/DataManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package seedu.utility;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.commands.currency.CurrencyType;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":"import seedu.entry.Expense;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"AnShengLee"},"content":"import seedu.entry.ExpenseCategory;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"AnShengLee"},"content":"import seedu.entry.Income;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"AnShengLee"},"content":"import seedu.exceptions.BlankCurrencyTypeException;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.ExpenseOverflowException;","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.IncomeOverflowException;","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"AnShengLee"},"content":"import seedu.exceptions.InputException;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"AnShengLee"},"content":"import seedu.exceptions.InvalidCurrencyTypeException;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"AnShengLee"},"content":"import seedu.exceptions.InvalidExpenseDataFormatException;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"AnShengLee"},"content":"import seedu.exceptions.InvalidIncomeDataFormatException;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"AnShengLee"},"content":"import seedu.exceptions.InvalidSettingsDataException;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"AnShengLee"},"content":"import seedu.exceptions.InvalidThresholdValueException;","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"AnShengLee"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"AnShengLee"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"AnShengLee"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"AnShengLee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"AnShengLee"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"AnShengLee"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"AnShengLee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"AnShengLee"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"AnShengLee"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"AnShengLee"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"AnShengLee"},"content":" * Saves entries (expenses and incomes) Stonks XD is tracking into a csv file.","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"AnShengLee"},"content":" * Also saves Stonks XD settings into another csv file. Settings include: currency state, amount for each budget","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"AnShengLee"},"content":" * category and the reminder threshold value.","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"AnShengLee"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"AnShengLee"},"content":"public class DataManager {","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"KZQ1999"},"content":"    private static final String NEWLINE \u003d System.lineSeparator();","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"AnShengLee"},"content":"    private static final String ENTRIES_FILE_NAME \u003d \"./StonksXD_Entries.csv\";","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"AnShengLee"},"content":"    private static final String ENTRIES_CSV_HEADER \u003d \"entry_type,entry_description,amount,category,date\";","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"AnShengLee"},"content":"    private static final String SETTINGS_FILE_NAME \u003d \"./StonksXD_Settings.csv\";","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"jonathanlkw"},"content":"    private static final String SETTINGS_CSV_HEADER \u003d \"currency,threshold,overall,food,transport,medical,\"","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"jonathanlkw"},"content":"            + \"bills,entertainment,misc\";","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"AnShengLee"},"content":"    private final Parser parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"AnShengLee"},"content":"    private final Ui ui;","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"Nirmaleshwar"},"content":"    private final FinancialTracker financialTracker;","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"Nirmaleshwar"},"content":"    private final CurrencyManager currencyManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"AnShengLee"},"content":"    private final BudgetManager budgetManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"AnShengLee"},"content":"     * Constructs a instance of DataManager.","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"AnShengLee"},"content":"     * @param parser           The parser will be used to convert settings and entries to data, vice verse.","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"AnShengLee"},"content":"     * @param financialTracker The finantialTracker will provide all the entries Stonks XD is tracking currently.","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"AnShengLee"},"content":"     * @param ui               The ui will be used to print out any warnings or messages to the user.","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"AnShengLee"},"content":"     * @param budgetManager    The budgetManager will provide all the budget settings to be saved / loaded.","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"AnShengLee"},"content":"     * @param currencyManager  The currencyManager will provide the currency setting.","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"Nirmaleshwar"},"content":"    public DataManager(Parser parser, FinancialTracker financialTracker, Ui ui, BudgetManager budgetManager,","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"Nirmaleshwar"},"content":"                       CurrencyManager currencyManager) {","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"AnShengLee"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"AnShengLee"},"content":"        this.financialTracker \u003d financialTracker;","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"AnShengLee"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"AnShengLee"},"content":"        this.budgetManager \u003d budgetManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"Nirmaleshwar"},"content":"        this.currencyManager \u003d currencyManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"AnShengLee"},"content":"     * Saves all entries and settings.","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"AnShengLee"},"content":"     * This method will be used more frequently as we typically want to save both entries and settings together.","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"AnShengLee"},"content":"    public void saveAll() {","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"AnShengLee"},"content":"        saveEntries();","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"AnShengLee"},"content":"        saveSettings();","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"AnShengLee"},"content":"     * Loads all entries and settings.","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"AnShengLee"},"content":"     * This method will be used more frequently as we typically want to load both entries and settings together.","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"AnShengLee"},"content":"    public void loadAll() {","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"AnShengLee"},"content":"        loadSettings();","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"AnShengLee"},"content":"        loadEntries();","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"AnShengLee"},"content":"     * Saves all entries StonksXD is currently tracking into a csv file.","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"AnShengLee"},"content":"     * This allows users to not lose all their entries when program closes.","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"AnShengLee"},"content":"    private void saveEntries() {","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"AnShengLee"},"content":"        try {","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"AnShengLee"},"content":"            FileWriter writer \u003d new FileWriter(ENTRIES_FILE_NAME);","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"AnShengLee"},"content":"            BufferedWriter buffer \u003d new BufferedWriter(writer);","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"AnShengLee"},"content":"            buffer.write(ENTRIES_CSV_HEADER);","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"AnShengLee"},"content":"            buffer.write(NEWLINE);","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"AnShengLee"},"content":"            writeExpenses(buffer);","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"AnShengLee"},"content":"            writeIncomes(buffer);","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"AnShengLee"},"content":"            buffer.close();","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"AnShengLee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-01"},{"lineNumber":97,"author":{"gitId":"AnShengLee"},"content":"            ui.printError(Messages.ERROR_SAVING_ENTRIES_MESSAGE);","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":99,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"AnShengLee"},"content":"    private void writeIncomes(BufferedWriter buffer) throws IOException {","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"AnShengLee"},"content":"        String data;","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"AnShengLee"},"content":"        ArrayList\u003cIncome\u003e incomes \u003d financialTracker.getIncomes();","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"AnShengLee"},"content":"        for (Income income : incomes) {","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"AnShengLee"},"content":"            data \u003d parser.convertIncomeToData(income);","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"AnShengLee"},"content":"            buffer.write(data);","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"AnShengLee"},"content":"            buffer.write(NEWLINE);","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":110,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"AnShengLee"},"content":"    private void writeExpenses(BufferedWriter buffer) throws IOException {","lastModifiedDate":"2021-11-01"},{"lineNumber":112,"author":{"gitId":"AnShengLee"},"content":"        String data;","lastModifiedDate":"2021-11-01"},{"lineNumber":113,"author":{"gitId":"AnShengLee"},"content":"        ArrayList\u003cExpense\u003e expenses \u003d financialTracker.getExpenses();","lastModifiedDate":"2021-11-01"},{"lineNumber":114,"author":{"gitId":"AnShengLee"},"content":"        for (Expense expense : expenses) {","lastModifiedDate":"2021-11-01"},{"lineNumber":115,"author":{"gitId":"AnShengLee"},"content":"            data \u003d parser.convertExpenseToData(expense);","lastModifiedDate":"2021-11-01"},{"lineNumber":116,"author":{"gitId":"AnShengLee"},"content":"            buffer.write(data);","lastModifiedDate":"2021-11-01"},{"lineNumber":117,"author":{"gitId":"AnShengLee"},"content":"            buffer.write(NEWLINE);","lastModifiedDate":"2021-11-01"},{"lineNumber":118,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":120,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":121,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"AnShengLee"},"content":"     * Loads all entries from StonksXD_Data.csv into StonksXD.","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"AnShengLee"},"content":"     * This allows users to not lose all their entries when the previous instance of StonksXD closed.","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"AnShengLee"},"content":"    private void loadEntries() {","lastModifiedDate":"2021-11-01"},{"lineNumber":126,"author":{"gitId":"AnShengLee"},"content":"        FileInputStream fis;","lastModifiedDate":"2021-10-16"},{"lineNumber":127,"author":{"gitId":"AnShengLee"},"content":"        try {","lastModifiedDate":"2021-10-16"},{"lineNumber":128,"author":{"gitId":"AnShengLee"},"content":"            fis \u003d new FileInputStream(ENTRIES_FILE_NAME);","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"AnShengLee"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-16"},{"lineNumber":130,"author":{"gitId":"AnShengLee"},"content":"            ui.printLoadingError(Messages.UNABLE_TO_FIND_DATA_FILE);","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"AnShengLee"},"content":"            return;","lastModifiedDate":"2021-10-16"},{"lineNumber":132,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":133,"author":{"gitId":"AnShengLee"},"content":"        boolean hasCorruptedLines \u003d false;","lastModifiedDate":"2021-11-01"},{"lineNumber":134,"author":{"gitId":"AnShengLee"},"content":"        Scanner sc \u003d new Scanner(fis);","lastModifiedDate":"2021-10-16"},{"lineNumber":135,"author":{"gitId":"AnShengLee"},"content":"        checkForEntriesFileHeader(sc);","lastModifiedDate":"2021-11-01"},{"lineNumber":136,"author":{"gitId":"AnShengLee"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2021-10-16"},{"lineNumber":137,"author":{"gitId":"AnShengLee"},"content":"            String data \u003d sc.nextLine();","lastModifiedDate":"2021-10-16"},{"lineNumber":138,"author":{"gitId":"AnShengLee"},"content":"            try {","lastModifiedDate":"2021-10-16"},{"lineNumber":139,"author":{"gitId":"AnShengLee"},"content":"                loadAsExpense(data);","lastModifiedDate":"2021-11-01"},{"lineNumber":140,"author":{"gitId":"AnShengLee"},"content":"            } catch (InputException | InvalidExpenseDataFormatException | DateTimeParseException","lastModifiedDate":"2021-11-01"},{"lineNumber":141,"author":{"gitId":"AnShengLee"},"content":"                    | ExpenseOverflowException e) {","lastModifiedDate":"2021-11-01"},{"lineNumber":142,"author":{"gitId":"AnShengLee"},"content":"                try {","lastModifiedDate":"2021-10-16"},{"lineNumber":143,"author":{"gitId":"AnShengLee"},"content":"                    loadAsIncome(data);","lastModifiedDate":"2021-11-01"},{"lineNumber":144,"author":{"gitId":"AnShengLee"},"content":"                } catch (InputException | InvalidIncomeDataFormatException | DateTimeParseException","lastModifiedDate":"2021-11-01"},{"lineNumber":145,"author":{"gitId":"AnShengLee"},"content":"                        | IncomeOverflowException ie) {","lastModifiedDate":"2021-11-01"},{"lineNumber":146,"author":{"gitId":"AnShengLee"},"content":"                    hasCorruptedLines \u003d true;","lastModifiedDate":"2021-10-16"},{"lineNumber":147,"author":{"gitId":"AnShengLee"},"content":"                }","lastModifiedDate":"2021-10-16"},{"lineNumber":148,"author":{"gitId":"AnShengLee"},"content":"            }","lastModifiedDate":"2021-10-16"},{"lineNumber":149,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":150,"author":{"gitId":"AnShengLee"},"content":"        if (hasCorruptedLines) {","lastModifiedDate":"2021-10-16"},{"lineNumber":151,"author":{"gitId":"AnShengLee"},"content":"            ui.printLoadingError(Messages.HAS_CORRUPTED_DATA_ENTRIES);","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":153,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":154,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"AnShengLee"},"content":"    private void loadAsIncome(String data) throws InputException, InvalidIncomeDataFormatException,","lastModifiedDate":"2021-11-01"},{"lineNumber":156,"author":{"gitId":"AnShengLee"},"content":"            IncomeOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":157,"author":{"gitId":"AnShengLee"},"content":"        Income income \u003d parser.convertDataToIncome(data);","lastModifiedDate":"2021-11-01"},{"lineNumber":158,"author":{"gitId":"AnShengLee"},"content":"        financialTracker.addIncome(income);","lastModifiedDate":"2021-11-01"},{"lineNumber":159,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":160,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":161,"author":{"gitId":"AnShengLee"},"content":"    private void loadAsExpense(String data) throws InputException, InvalidExpenseDataFormatException,","lastModifiedDate":"2021-11-01"},{"lineNumber":162,"author":{"gitId":"AnShengLee"},"content":"            ExpenseOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":163,"author":{"gitId":"AnShengLee"},"content":"        Expense expense \u003d parser.convertDataToExpense(data);","lastModifiedDate":"2021-11-01"},{"lineNumber":164,"author":{"gitId":"AnShengLee"},"content":"        financialTracker.addExpense(expense);","lastModifiedDate":"2021-11-01"},{"lineNumber":165,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":166,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":167,"author":{"gitId":"AnShengLee"},"content":"    private void checkForEntriesFileHeader(Scanner sc) {","lastModifiedDate":"2021-11-01"},{"lineNumber":168,"author":{"gitId":"AnShengLee"},"content":"        String data;","lastModifiedDate":"2021-11-01"},{"lineNumber":169,"author":{"gitId":"AnShengLee"},"content":"        try {","lastModifiedDate":"2021-11-01"},{"lineNumber":170,"author":{"gitId":"AnShengLee"},"content":"            data \u003d sc.nextLine();","lastModifiedDate":"2021-11-01"},{"lineNumber":171,"author":{"gitId":"AnShengLee"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2021-11-01"},{"lineNumber":172,"author":{"gitId":"AnShengLee"},"content":"            ui.printLoadingError(Messages.INCOMPLETE_ENTRIES_CSV_HEADER_MESSAGE);","lastModifiedDate":"2021-11-01"},{"lineNumber":173,"author":{"gitId":"AnShengLee"},"content":"            return;","lastModifiedDate":"2021-11-01"},{"lineNumber":174,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":175,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":176,"author":{"gitId":"AnShengLee"},"content":"        if (!data.equals(ENTRIES_CSV_HEADER)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":177,"author":{"gitId":"AnShengLee"},"content":"            ui.printLoadingError(Messages.INCOMPLETE_ENTRIES_CSV_HEADER_MESSAGE);","lastModifiedDate":"2021-11-01"},{"lineNumber":178,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":179,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":180,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":181,"author":{"gitId":"AnShengLee"},"content":"    private void checkForSettingsFileHeader(Scanner sc) {","lastModifiedDate":"2021-11-01"},{"lineNumber":182,"author":{"gitId":"AnShengLee"},"content":"        String data;","lastModifiedDate":"2021-11-01"},{"lineNumber":183,"author":{"gitId":"AnShengLee"},"content":"        try {","lastModifiedDate":"2021-11-01"},{"lineNumber":184,"author":{"gitId":"AnShengLee"},"content":"            data \u003d sc.nextLine();","lastModifiedDate":"2021-11-01"},{"lineNumber":185,"author":{"gitId":"AnShengLee"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2021-11-01"},{"lineNumber":186,"author":{"gitId":"AnShengLee"},"content":"            ui.printLoadingError(Messages.INCOMPLETE_SETTINGS_CSV_HEADER_MESSAGE);","lastModifiedDate":"2021-11-01"},{"lineNumber":187,"author":{"gitId":"AnShengLee"},"content":"            return;","lastModifiedDate":"2021-11-01"},{"lineNumber":188,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":189,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":190,"author":{"gitId":"AnShengLee"},"content":"        if (!data.equals(SETTINGS_CSV_HEADER)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":191,"author":{"gitId":"AnShengLee"},"content":"            ui.printLoadingError(Messages.INCOMPLETE_SETTINGS_CSV_HEADER_MESSAGE);","lastModifiedDate":"2021-11-01"},{"lineNumber":192,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":193,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":194,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":195,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"AnShengLee"},"content":"     * Saves all settings into a csv file.","lastModifiedDate":"2021-11-01"},{"lineNumber":197,"author":{"gitId":"AnShengLee"},"content":"     * This allows users to not lose all their settings when program closes.","lastModifiedDate":"2021-11-01"},{"lineNumber":198,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"AnShengLee"},"content":"    private void saveSettings() {","lastModifiedDate":"2021-11-02"},{"lineNumber":200,"author":{"gitId":"AnShengLee"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":201,"author":{"gitId":"AnShengLee"},"content":"            FileWriter writer \u003d new FileWriter(SETTINGS_FILE_NAME);","lastModifiedDate":"2021-11-02"},{"lineNumber":202,"author":{"gitId":"AnShengLee"},"content":"            BufferedWriter buffer \u003d new BufferedWriter(writer);","lastModifiedDate":"2021-10-24"},{"lineNumber":203,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":204,"author":{"gitId":"AnShengLee"},"content":"            buffer.write(SETTINGS_CSV_HEADER);","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"AnShengLee"},"content":"            buffer.write(NEWLINE);","lastModifiedDate":"2021-10-24"},{"lineNumber":206,"author":{"gitId":"AnShengLee"},"content":"            writeSettings(buffer);","lastModifiedDate":"2021-11-01"},{"lineNumber":207,"author":{"gitId":"AnShengLee"},"content":"            buffer.close();","lastModifiedDate":"2021-10-24"},{"lineNumber":208,"author":{"gitId":"AnShengLee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"AnShengLee"},"content":"            ui.printError(Messages.ERROR_SAVING_SETTINGS_MESSAGE);","lastModifiedDate":"2021-11-02"},{"lineNumber":210,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":211,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":212,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":213,"author":{"gitId":"AnShengLee"},"content":"    private void writeSettings(BufferedWriter buffer) throws IOException {","lastModifiedDate":"2021-11-01"},{"lineNumber":214,"author":{"gitId":"AnShengLee"},"content":"        String data;","lastModifiedDate":"2021-11-01"},{"lineNumber":215,"author":{"gitId":"AnShengLee"},"content":"        data \u003d parser.convertSettingsToData(budgetManager, currencyManager);","lastModifiedDate":"2021-11-03"},{"lineNumber":216,"author":{"gitId":"AnShengLee"},"content":"        buffer.write(data);","lastModifiedDate":"2021-11-01"},{"lineNumber":217,"author":{"gitId":"AnShengLee"},"content":"        buffer.write(NEWLINE);","lastModifiedDate":"2021-11-04"},{"lineNumber":218,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":219,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":220,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":221,"author":{"gitId":"AnShengLee"},"content":"     * Loads all settings from StonksXD_Settings.csv into StonksXD.","lastModifiedDate":"2021-11-01"},{"lineNumber":222,"author":{"gitId":"AnShengLee"},"content":"     * This allows users to not lose all their settings when the previous instance of","lastModifiedDate":"2021-11-01"},{"lineNumber":223,"author":{"gitId":"AnShengLee"},"content":"     * StonksXD closed.","lastModifiedDate":"2021-10-27"},{"lineNumber":224,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"AnShengLee"},"content":"    private void loadSettings() {","lastModifiedDate":"2021-11-01"},{"lineNumber":226,"author":{"gitId":"AnShengLee"},"content":"        FileInputStream fis;","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"AnShengLee"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":228,"author":{"gitId":"AnShengLee"},"content":"            fis \u003d new FileInputStream(SETTINGS_FILE_NAME);","lastModifiedDate":"2021-10-27"},{"lineNumber":229,"author":{"gitId":"AnShengLee"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":230,"author":{"gitId":"AnShengLee"},"content":"            ui.printLoadingError(Messages.UNABLE_TO_FIND_SETTINGS_FILE);","lastModifiedDate":"2021-10-27"},{"lineNumber":231,"author":{"gitId":"AnShengLee"},"content":"            return;","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":234,"author":{"gitId":"AnShengLee"},"content":"        Scanner sc \u003d new Scanner(fis);","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"AnShengLee"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":236,"author":{"gitId":"AnShengLee"},"content":"            checkForSettingsFileHeader(sc);","lastModifiedDate":"2021-11-01"},{"lineNumber":237,"author":{"gitId":"AnShengLee"},"content":"            String data \u003d sc.nextLine();","lastModifiedDate":"2021-11-01"},{"lineNumber":238,"author":{"gitId":"AnShengLee"},"content":"            CurrencyType currency \u003d parser.convertDataToCurrencySetting(data);","lastModifiedDate":"2021-11-01"},{"lineNumber":239,"author":{"gitId":"AnShengLee"},"content":"            loadCurrencySetting(currency);","lastModifiedDate":"2021-11-01"},{"lineNumber":240,"author":{"gitId":"AnShengLee"},"content":"            double thresholdValue \u003d parser.convertDataToThresholdSetting(data);","lastModifiedDate":"2021-11-01"},{"lineNumber":241,"author":{"gitId":"AnShengLee"},"content":"            loadThresholdSetting(thresholdValue);","lastModifiedDate":"2021-11-04"},{"lineNumber":242,"author":{"gitId":"AnShengLee"},"content":"            ArrayList\u003cDouble\u003e budgetSettings \u003d parser.convertDataToBudgetSettings(data);","lastModifiedDate":"2021-11-03"},{"lineNumber":243,"author":{"gitId":"AnShengLee"},"content":"            loadBudgetSettings(budgetSettings);","lastModifiedDate":"2021-11-03"},{"lineNumber":244,"author":{"gitId":"AnShengLee"},"content":"        } catch (NullPointerException | NumberFormatException | InvalidSettingsDataException","lastModifiedDate":"2021-11-01"},{"lineNumber":245,"author":{"gitId":"AnShengLee"},"content":"                | InvalidCurrencyTypeException | BlankCurrencyTypeException | NoSuchElementException","lastModifiedDate":"2021-11-01"},{"lineNumber":246,"author":{"gitId":"AnShengLee"},"content":"                | InvalidThresholdValueException e) {","lastModifiedDate":"2021-11-01"},{"lineNumber":247,"author":{"gitId":"AnShengLee"},"content":"            ui.printLoadingError(Messages.HAS_CORRUPTED_SETTINGS);","lastModifiedDate":"2021-11-01"},{"lineNumber":248,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":249,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":250,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":251,"author":{"gitId":"AnShengLee"},"content":"    private void loadCurrencySetting(CurrencyType currency) {","lastModifiedDate":"2021-11-01"},{"lineNumber":252,"author":{"gitId":"Nirmaleshwar"},"content":"        currencyManager.setCurrency(currency);","lastModifiedDate":"2021-11-02"},{"lineNumber":253,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":254,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":255,"author":{"gitId":"AnShengLee"},"content":"    private void loadBudgetSettings(ArrayList\u003cDouble\u003e budgetSettings) {","lastModifiedDate":"2021-11-01"},{"lineNumber":256,"author":{"gitId":"AnShengLee"},"content":"        int budgetIndex \u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":257,"author":{"gitId":"AnShengLee"},"content":"        for (ExpenseCategory category : ExpenseCategory.values()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":258,"author":{"gitId":"AnShengLee"},"content":"            // Not expected to have a budget related to NULL","lastModifiedDate":"2021-10-25"},{"lineNumber":259,"author":{"gitId":"AnShengLee"},"content":"            if (category \u003d\u003d ExpenseCategory.NULL) {","lastModifiedDate":"2021-10-25"},{"lineNumber":260,"author":{"gitId":"AnShengLee"},"content":"                break;","lastModifiedDate":"2021-10-25"},{"lineNumber":261,"author":{"gitId":"AnShengLee"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":262,"author":{"gitId":"jonathanlkw"},"content":"            budgetManager.setBudget(budgetSettings.get(budgetIndex), category, financialTracker.getExpenses());","lastModifiedDate":"2021-11-07"},{"lineNumber":263,"author":{"gitId":"AnShengLee"},"content":"            budgetIndex +\u003d 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":264,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":265,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":266,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":267,"author":{"gitId":"AnShengLee"},"content":"    private void loadThresholdSetting(double thresholdValue) {","lastModifiedDate":"2021-11-04"},{"lineNumber":268,"author":{"gitId":"AnShengLee"},"content":"        budgetManager.setThreshold(thresholdValue);","lastModifiedDate":"2021-11-01"},{"lineNumber":269,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":270,"author":{"gitId":"AnShengLee"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"kyun99":2,"AnShengLee":257,"Nirmaleshwar":7,"KZQ1999":1,"jonathanlkw":3}},{"path":"src/main/java/seedu/utility/FinancialTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.utility;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"KZQ1999"},"content":"import seedu.entry.Entry;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.entry.Expense;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"import seedu.entry.Income;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"import seedu.exceptions.ExpenseEntryNotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.ExpenseOverflowException;","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"import seedu.exceptions.IncomeEntryNotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.IncomeOverflowException;","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"kyun99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"kyun99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"kyun99"},"content":"import static java.util.stream.Collectors.toList;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":"import static seedu.utility.tools.DateOperator.entryDateInRange;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":"import static seedu.utility.tools.DateOperator.sameEntryYear;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"kyun99"},"content":"import static seedu.utility.tools.FinancialCalculator.getSumOfEntries;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"kyun99"},"content":"import static seedu.utility.tools.FinancialCalculator.sortEntriesByMonth;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"KZQ1999"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"KZQ1999"},"content":" * A Financial tracker that contains 2 separate list of income and expense entries and a net balance.","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"KZQ1999"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"kyun99"},"content":"public class FinancialTracker {","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"kyun99"},"content":"    public static final double TOTAL_ENTRIES_LIMIT \u003d 100000000000.00;","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"KZQ1999"},"content":"    private final ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"KZQ1999"},"content":"    private final ArrayList\u003cIncome\u003e incomes;","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"KZQ1999"},"content":"     * Constructor for financial tracker initialises two empty ArrayList, one for expenses and one for incomes.","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"kyun99"},"content":"    public FinancialTracker() {","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"kyun99"},"content":"        this.expenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"kyun99"},"content":"        this.incomes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"KZQ1999"},"content":"     * Returns balance of the financial tracker which is totalincome - totalexpense.","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"AnShengLee"},"content":"     * @return Balance of the financial tracker.","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"AnShengLee"},"content":"    public double calculateBalance() {","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"KZQ1999"},"content":"        return getTotalIncome() - getTotalExpense();","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"kyun99"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"kyun99"},"content":"     * Adds an Expense object into the expenses ArrayList of FinancialTracker.","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"kyun99"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"kyun99"},"content":"     * @param expense Expense object we want to add into the ArrayList.","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"kyun99"},"content":"     * @throws ExpenseOverflowException Thrown if the sum of expense exceeds a fixed limit. ","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"kyun99"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"kyun99"},"content":"    public void addExpense(Expense expense) throws ExpenseOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"jonathanlkw"},"content":"        int expenseSize \u003d 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"jonathanlkw"},"content":"        assert (expenseSize \u003d expenses.size()) \u003e\u003d 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"kyun99"},"content":"        if (isOverflowedExpense(expense)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"kyun99"},"content":"            throw new ExpenseOverflowException(Messages.EXPENSE_OVERFLOW_ERROR);","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"kyun99"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"kyun99"},"content":"        expenses.add(expense);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"kyun99"},"content":"        assert !expenses.isEmpty();","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"jonathanlkw"},"content":"        assert expenses.size() \u003e expenseSize;","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"kyun99"},"content":"    private boolean isOverflowedExpense(Expense expense) {","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"kyun99"},"content":"        return expense.getValue() + getTotalExpense() \u003e TOTAL_ENTRIES_LIMIT;","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"kyun99"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"kyun99"},"content":"     * Adds an Income object into the income ArrayList of FinancialTracker.","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"kyun99"},"content":"     * ","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"kyun99"},"content":"     * @param income Income object we want to add into the ArrayList.","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"kyun99"},"content":"     * @throws IncomeOverflowException Thrown if the sum of income exceeds a fixed limit.","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"kyun99"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"kyun99"},"content":"    public void addIncome(Income income) throws IncomeOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"jonathanlkw"},"content":"        int incomeSize \u003d 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"jonathanlkw"},"content":"        assert (incomeSize \u003d incomes.size()) \u003e\u003d 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"kyun99"},"content":"        if (isOverflowedIncome(income)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"kyun99"},"content":"            throw new IncomeOverflowException(Messages.INCOME_OVERFLOW_ERROR);","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"kyun99"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"kyun99"},"content":"        incomes.add(income);","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"kyun99"},"content":"        assert !incomes.isEmpty();","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"jonathanlkw"},"content":"        assert incomes.size() \u003e incomeSize;","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":84,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":85,"author":{"gitId":"kyun99"},"content":"    private boolean isOverflowedIncome(Income income) {","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"kyun99"},"content":"        return income.getValue() + getTotalIncome() \u003e TOTAL_ENTRIES_LIMIT;","lastModifiedDate":"2021-11-06"},{"lineNumber":87,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":89,"author":{"gitId":"KZQ1999"},"content":"    private int indexOffset(int index) {","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"Nirmaleshwar"},"content":"        return index - 1;","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"kyun99"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":94,"author":{"gitId":"kyun99"},"content":"     * Removes an expense entry based on its index.","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"kyun99"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":96,"author":{"gitId":"kyun99"},"content":"     * @param expenseIndex Index of deleted expense entry.","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"kyun99"},"content":"     * @return Deleted expense object.","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"kyun99"},"content":"     * @throws ExpenseEntryNotFoundException Thrown if no entry can be found in the given index.","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"kyun99"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":100,"author":{"gitId":"Nirmaleshwar"},"content":"    public Expense removeExpense(int expenseIndex) throws ExpenseEntryNotFoundException {","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"Nirmaleshwar"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"KZQ1999"},"content":"            Expense removedExpense \u003d  expenses.remove(indexOffset(expenseIndex));","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"kyun99"},"content":"            assert expenses.stream().noneMatch(expense -\u003e expense \u003d\u003d removedExpense);","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"KZQ1999"},"content":"            return removedExpense;","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"Nirmaleshwar"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"Nirmaleshwar"},"content":"            throw new ExpenseEntryNotFoundException(Messages.UNABLE_TO_DELETE_MESSAGE);","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"kyun99"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":111,"author":{"gitId":"kyun99"},"content":"     * Removes an income entry based on its index.","lastModifiedDate":"2021-11-02"},{"lineNumber":112,"author":{"gitId":"kyun99"},"content":"     * ","lastModifiedDate":"2021-11-02"},{"lineNumber":113,"author":{"gitId":"kyun99"},"content":"     * @param incomeIndex Index of deleted income entry.","lastModifiedDate":"2021-11-02"},{"lineNumber":114,"author":{"gitId":"kyun99"},"content":"     * @return Deleted income object.","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"kyun99"},"content":"     * @throws IncomeEntryNotFoundException Thrown if no entry can be found in the given index.","lastModifiedDate":"2021-11-02"},{"lineNumber":116,"author":{"gitId":"kyun99"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":117,"author":{"gitId":"Nirmaleshwar"},"content":"    public Income removeIncome(int incomeIndex) throws IncomeEntryNotFoundException {","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"Nirmaleshwar"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"KZQ1999"},"content":"            Income removedIncome \u003d incomes.remove(indexOffset(incomeIndex));","lastModifiedDate":"2021-10-16"},{"lineNumber":120,"author":{"gitId":"kyun99"},"content":"            assert incomes.stream().noneMatch(expense -\u003e expense \u003d\u003d removedIncome);","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"KZQ1999"},"content":"            return removedIncome;","lastModifiedDate":"2021-10-16"},{"lineNumber":122,"author":{"gitId":"Nirmaleshwar"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"Nirmaleshwar"},"content":"            throw new IncomeEntryNotFoundException(Messages.UNABLE_TO_DELETE_MESSAGE);","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"kyun99"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":128,"author":{"gitId":"kyun99"},"content":"     * Returns an ArrayList called expenses from FinancialTracker.","lastModifiedDate":"2021-11-02"},{"lineNumber":129,"author":{"gitId":"kyun99"},"content":"     * ","lastModifiedDate":"2021-11-02"},{"lineNumber":130,"author":{"gitId":"kyun99"},"content":"     * @return Returns ArrayList with only expense entries inside.","lastModifiedDate":"2021-11-02"},{"lineNumber":131,"author":{"gitId":"kyun99"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":132,"author":{"gitId":"KZQ1999"},"content":"    public ArrayList\u003cExpense\u003e getExpenses() {","lastModifiedDate":"2021-10-15"},{"lineNumber":133,"author":{"gitId":"kyun99"},"content":"        assert expenses !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"kyun99"},"content":"        return expenses;","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"kyun99"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":138,"author":{"gitId":"kyun99"},"content":"     * Returns an ArrayList called incomes from FinancialTracker.","lastModifiedDate":"2021-11-02"},{"lineNumber":139,"author":{"gitId":"kyun99"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":140,"author":{"gitId":"kyun99"},"content":"     * @return Returns ArrayList with only income entries inside.","lastModifiedDate":"2021-11-02"},{"lineNumber":141,"author":{"gitId":"kyun99"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":142,"author":{"gitId":"KZQ1999"},"content":"    public ArrayList\u003cIncome\u003e getIncomes() {","lastModifiedDate":"2021-10-15"},{"lineNumber":143,"author":{"gitId":"kyun99"},"content":"        assert incomes !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"kyun99"},"content":"        return incomes;","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"KZQ1999"},"content":"     * Returns an ArrayList of Entry elements, which include all incomes and expenses entries in the financial tracker.","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"KZQ1999"},"content":"     * @return ArrayList of Entry elements.","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"KZQ1999"},"content":"    public ArrayList\u003cEntry\u003e getEntries() {","lastModifiedDate":"2021-10-15"},{"lineNumber":153,"author":{"gitId":"KZQ1999"},"content":"        ArrayList\u003cEntry\u003e entries \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":154,"author":{"gitId":"KZQ1999"},"content":"        entries.addAll(getExpenses());","lastModifiedDate":"2021-10-15"},{"lineNumber":155,"author":{"gitId":"KZQ1999"},"content":"        entries.addAll(getIncomes());","lastModifiedDate":"2021-10-15"},{"lineNumber":156,"author":{"gitId":"KZQ1999"},"content":"        return entries;","lastModifiedDate":"2021-10-15"},{"lineNumber":157,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":158,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":159,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"KZQ1999"},"content":"     * Returns the total expense of all expenses in the financial tracker.","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":162,"author":{"gitId":"KZQ1999"},"content":"     * @return Total expense of all expenses in the financial tracker.","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"kyun99"},"content":"    public double getTotalExpense() {","lastModifiedDate":"2021-11-01"},{"lineNumber":165,"author":{"gitId":"kyun99"},"content":"        double totalExpense \u003d 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"kyun99"},"content":"        for (Expense expense : expenses) {","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"kyun99"},"content":"            assert expense.getValue() \u003e\u003d 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"kyun99"},"content":"            totalExpense +\u003d expense.getValue();","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"jonathanlkw"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"jonathanlkw"},"content":"        assert totalExpense \u003e\u003d 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":171,"author":{"gitId":"kyun99"},"content":"        assert totalExpense \u003c\u003d TOTAL_ENTRIES_LIMIT;","lastModifiedDate":"2021-11-07"},{"lineNumber":172,"author":{"gitId":"kyun99"},"content":"        return totalExpense;","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"jonathanlkw"},"content":"    ","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"KZQ1999"},"content":"     * Returns the total income of all incomes in the financial tracker.","lastModifiedDate":"2021-10-26"},{"lineNumber":177,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"KZQ1999"},"content":"     * @return Total income of all incomes in the financial tracker.","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"kyun99"},"content":"    public double getTotalIncome() {","lastModifiedDate":"2021-11-01"},{"lineNumber":181,"author":{"gitId":"kyun99"},"content":"        double totalIncome \u003d 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"kyun99"},"content":"        for (Income income : incomes) {","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"kyun99"},"content":"            assert income.getValue() \u003e\u003d 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"kyun99"},"content":"            totalIncome +\u003d income.getValue();","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"kyun99"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":186,"author":{"gitId":"jonathanlkw"},"content":"        assert totalIncome \u003e\u003d 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":187,"author":{"gitId":"kyun99"},"content":"        assert totalIncome \u003c\u003d TOTAL_ENTRIES_LIMIT;","lastModifiedDate":"2021-11-07"},{"lineNumber":188,"author":{"gitId":"kyun99"},"content":"        return totalIncome;","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":190,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":191,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":192,"author":{"gitId":"KZQ1999"},"content":"     * Returns total expense between two given dates.","lastModifiedDate":"2021-10-26"},{"lineNumber":193,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":194,"author":{"gitId":"KZQ1999"},"content":"     * @param startDate Starting date (Left boundary).","lastModifiedDate":"2021-10-26"},{"lineNumber":195,"author":{"gitId":"KZQ1999"},"content":"     * @param endDate End Date (Right boundary).","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"KZQ1999"},"content":"     * @return Total expense between two given dates.","lastModifiedDate":"2021-10-26"},{"lineNumber":197,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":198,"author":{"gitId":"kyun99"},"content":"    public double getExpenseBetween(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":199,"author":{"gitId":"kyun99"},"content":"        List\u003cEntry\u003e accumulatedExpense \u003d expenses.stream()","lastModifiedDate":"2021-11-06"},{"lineNumber":200,"author":{"gitId":"kyun99"},"content":"                .filter(entryDateInRange(startDate, endDate))","lastModifiedDate":"2021-11-06"},{"lineNumber":201,"author":{"gitId":"kyun99"},"content":"                .collect(toList());","lastModifiedDate":"2021-11-06"},{"lineNumber":202,"author":{"gitId":"kyun99"},"content":"        return getSumOfEntries(accumulatedExpense);","lastModifiedDate":"2021-11-06"},{"lineNumber":203,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":204,"author":{"gitId":"kyun99"},"content":"    ","lastModifiedDate":"2021-10-18"},{"lineNumber":205,"author":{"gitId":"kyun99"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":206,"author":{"gitId":"kyun99"},"content":"     * Returns an ArrayList of size 12, where each element stores the total expense of that month in the given year.","lastModifiedDate":"2021-11-02"},{"lineNumber":207,"author":{"gitId":"kyun99"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":208,"author":{"gitId":"kyun99"},"content":"     * @param inputYear Year which the monthly breakdown is based on.","lastModifiedDate":"2021-11-02"},{"lineNumber":209,"author":{"gitId":"kyun99"},"content":"     * @return ArrayList of elements representing total expense in each month.","lastModifiedDate":"2021-11-02"},{"lineNumber":210,"author":{"gitId":"kyun99"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":211,"author":{"gitId":"kyun99"},"content":"    public ArrayList\u003cDouble\u003e getMonthlyExpenseBreakdown(int inputYear) {","lastModifiedDate":"2021-10-18"},{"lineNumber":212,"author":{"gitId":"kyun99"},"content":"        List\u003cEntry\u003e yearlyAccumulatedExpense \u003d expenses.stream()","lastModifiedDate":"2021-11-06"},{"lineNumber":213,"author":{"gitId":"kyun99"},"content":"                .filter(sameEntryYear(inputYear))","lastModifiedDate":"2021-11-06"},{"lineNumber":214,"author":{"gitId":"kyun99"},"content":"                .collect(toList());","lastModifiedDate":"2021-11-06"},{"lineNumber":215,"author":{"gitId":"kyun99"},"content":"        return sortEntriesByMonth(yearlyAccumulatedExpense);","lastModifiedDate":"2021-11-06"},{"lineNumber":216,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":217,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":218,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":219,"author":{"gitId":"KZQ1999"},"content":"     * Returns total income between two given dates.","lastModifiedDate":"2021-10-26"},{"lineNumber":220,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":221,"author":{"gitId":"KZQ1999"},"content":"     * @param startDate Starting date (Left boundary).","lastModifiedDate":"2021-10-26"},{"lineNumber":222,"author":{"gitId":"KZQ1999"},"content":"     * @param endDate End Date (Right boundary).","lastModifiedDate":"2021-10-26"},{"lineNumber":223,"author":{"gitId":"KZQ1999"},"content":"     * @return Total income between two given dates.","lastModifiedDate":"2021-10-26"},{"lineNumber":224,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":225,"author":{"gitId":"kyun99"},"content":"    public double getIncomeBetween(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":226,"author":{"gitId":"kyun99"},"content":"        List\u003cEntry\u003e accumulatedIncome \u003d incomes.stream()","lastModifiedDate":"2021-11-06"},{"lineNumber":227,"author":{"gitId":"kyun99"},"content":"                .filter(entryDateInRange(startDate, endDate))","lastModifiedDate":"2021-11-06"},{"lineNumber":228,"author":{"gitId":"kyun99"},"content":"                .collect(toList());","lastModifiedDate":"2021-11-06"},{"lineNumber":229,"author":{"gitId":"kyun99"},"content":"        return getSumOfEntries(accumulatedIncome);","lastModifiedDate":"2021-11-06"},{"lineNumber":230,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":231,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":232,"author":{"gitId":"kyun99"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":233,"author":{"gitId":"kyun99"},"content":"     * Returns an ArrayList of size 12, where each element stores the total income of that month in the given year.","lastModifiedDate":"2021-11-02"},{"lineNumber":234,"author":{"gitId":"kyun99"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":235,"author":{"gitId":"kyun99"},"content":"     * @param inputYear Year which the monthly breakdown is based on.","lastModifiedDate":"2021-11-02"},{"lineNumber":236,"author":{"gitId":"kyun99"},"content":"     * @return ArrayList of elements representing total income in each month.","lastModifiedDate":"2021-11-02"},{"lineNumber":237,"author":{"gitId":"kyun99"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":238,"author":{"gitId":"kyun99"},"content":"    public ArrayList\u003cDouble\u003e getMonthlyIncomeBreakdown(int inputYear) {","lastModifiedDate":"2021-10-18"},{"lineNumber":239,"author":{"gitId":"kyun99"},"content":"        List\u003cEntry\u003e yearlyAccumulatedIncome \u003d incomes.stream()","lastModifiedDate":"2021-11-06"},{"lineNumber":240,"author":{"gitId":"kyun99"},"content":"                .filter(sameEntryYear(inputYear))","lastModifiedDate":"2021-11-06"},{"lineNumber":241,"author":{"gitId":"kyun99"},"content":"                .collect(toList());","lastModifiedDate":"2021-11-06"},{"lineNumber":242,"author":{"gitId":"kyun99"},"content":"        return sortEntriesByMonth(yearlyAccumulatedIncome);","lastModifiedDate":"2021-11-06"},{"lineNumber":243,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":244,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":245,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":246,"author":{"gitId":"KZQ1999"},"content":"     * Returns the size of the expenses ArrayList.","lastModifiedDate":"2021-10-26"},{"lineNumber":247,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":248,"author":{"gitId":"KZQ1999"},"content":"     * @return Size of the expenses array list.","lastModifiedDate":"2021-10-26"},{"lineNumber":249,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":250,"author":{"gitId":"kyun99"},"content":"    public int getExpenseSize() {","lastModifiedDate":"2021-10-12"},{"lineNumber":251,"author":{"gitId":"kyun99"},"content":"        return expenses.size();","lastModifiedDate":"2021-10-12"},{"lineNumber":252,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":253,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":254,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":255,"author":{"gitId":"KZQ1999"},"content":"     * Returns the size of the incomes ArrayList.","lastModifiedDate":"2021-10-26"},{"lineNumber":256,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":257,"author":{"gitId":"KZQ1999"},"content":"     * @return Size of the incomes array list.","lastModifiedDate":"2021-10-26"},{"lineNumber":258,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":259,"author":{"gitId":"kyun99"},"content":"    public int getIncomeSize() {","lastModifiedDate":"2021-10-12"},{"lineNumber":260,"author":{"gitId":"kyun99"},"content":"        return incomes.size();","lastModifiedDate":"2021-10-12"},{"lineNumber":261,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":262,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":263,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":264,"author":{"gitId":"KZQ1999"},"content":"     * Returns true if expenses list of financial tracker is empty.","lastModifiedDate":"2021-10-26"},{"lineNumber":265,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":266,"author":{"gitId":"KZQ1999"},"content":"     * @return Whether the expense list is empty.","lastModifiedDate":"2021-10-26"},{"lineNumber":267,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":268,"author":{"gitId":"kyun99"},"content":"    public boolean isExpensesEmpty() {","lastModifiedDate":"2021-10-12"},{"lineNumber":269,"author":{"gitId":"kyun99"},"content":"        return expenses.isEmpty();","lastModifiedDate":"2021-10-12"},{"lineNumber":270,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":271,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":272,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":273,"author":{"gitId":"KZQ1999"},"content":"     * Returns true if incomes list of financial tracker is empty.","lastModifiedDate":"2021-10-26"},{"lineNumber":274,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":275,"author":{"gitId":"KZQ1999"},"content":"     * @return Whether the income list is empty.","lastModifiedDate":"2021-10-26"},{"lineNumber":276,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":277,"author":{"gitId":"kyun99"},"content":"    public boolean isIncomesEmpty() {","lastModifiedDate":"2021-10-12"},{"lineNumber":278,"author":{"gitId":"kyun99"},"content":"        return incomes.isEmpty();","lastModifiedDate":"2021-10-12"},{"lineNumber":279,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":280,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":281,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":282,"author":{"gitId":"KZQ1999"},"content":"     * Delete all entries from both expenses and income list in financial tracker and set balance to zero.","lastModifiedDate":"2021-10-26"},{"lineNumber":283,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":284,"author":{"gitId":"AnShengLee"},"content":"    public void clearAllEntries() {","lastModifiedDate":"2021-10-19"},{"lineNumber":285,"author":{"gitId":"AnShengLee"},"content":"        expenses.clear();","lastModifiedDate":"2021-10-19"},{"lineNumber":286,"author":{"gitId":"AnShengLee"},"content":"        incomes.clear();","lastModifiedDate":"2021-10-19"},{"lineNumber":287,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":288,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kyun99":163,"AnShengLee":10,"KZQ1999":79,"Nirmaleshwar":16,"jonathanlkw":20}},{"path":"src/main/java/seedu/utility/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package seedu.utility;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":" * Contains all the warning messages to be sent to the user when an invalid input is given.","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"AnShengLee"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"AnShengLee"},"content":"public class Messages {","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"AnShengLee"},"content":"    public static final String INVALID_COMMAND_MESSAGE \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"AnShengLee"},"content":"            \"Invalid command. Use \\\"help\\\" to show the list of possible commands.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"AnShengLee"},"content":"    public static final String NON_NUMERIC_AMOUNT_MESSAGE \u003d \"Only numeric inputs are allowed for amount.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"AnShengLee"},"content":"    public static final String NON_NUMERIC_THRESHOLD_MESSAGE \u003d \"Threshold value given is either out of range or \" ","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"AnShengLee"},"content":"            + \"non-numeric. Please try again.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"AnShengLee"},"content":"    public static final String NON_POSITIVE_AMOUNT_MESSAGE \u003d \"Only positive values are allowed for amount.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"AnShengLee"},"content":"    public static final String NON_POSITIVE_INTEGER_INDEX_MESSAGE \u003d \"Only positive integers are allowed for index.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"jonathanlkw"},"content":"    public static final String BLANK_AMOUNT_MESSAGE \u003d \"No amount inputted!\";","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"jonathanlkw"},"content":"    public static final String UNABLE_TO_DELETE_MESSAGE \u003d \"Entry not deleted because entry not found!\";","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Nirmaleshwar"},"content":"    public static final String BLANK_DESCRIPTION_MESSAGE \u003d \"Your description is empty!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"AnShengLee"},"content":"    public static final String HAS_CORRUPTED_DATA_ENTRIES \u003d \"StonksXD_Entries.csv has corrupted entries, \" ","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"AnShengLee"},"content":"            + \"those corrupted entries will be discarded and not be loaded.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"AnShengLee"},"content":"    public static final String HAS_CORRUPTED_SETTINGS \u003d \"StonksXD_Settings.csv has corrupted settings, \"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"AnShengLee"},"content":"            + \"all settings will be reset.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"AnShengLee"},"content":"    public static final String UNABLE_TO_FIND_DATA_FILE \u003d \"Unable to find StonksXD_Entries.csv, a new one \" ","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"AnShengLee"},"content":"            + \"has been made.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"AnShengLee"},"content":"    public static final String UNABLE_TO_FIND_SETTINGS_FILE \u003d \"Unable to find StonksXD_Settings.csv, a new one \" ","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"AnShengLee"},"content":"            + \"has been made.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"KZQ1999"},"content":"    public static final String SEARCH_NO_MATCH_MESSAGE \u003d \"Your search did not match any of the entries!\";","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"KZQ1999"},"content":"    public static final String TYPE_SOMETHING_MESSAGE \u003d \"Type something!\";","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"KZQ1999"},"content":"    public static final String HELP_COMMAND_MESSAGE \u003d \"This is a list of commands and their format!\";","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"KZQ1999"},"content":"    public static final String LISTING_EXPENSE_MESSAGE \u003d \"Below is a list of all of your recent spending!\";","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"KZQ1999"},"content":"    public static final String LISTING_INCOME_MESSAGE \u003d \"Below is a list of all of your recent earnings!\";","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"KZQ1999"},"content":"    public static final String EMPTY_INCOME_MESSAGE \u003d \"You have not entered any income!\";","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"KZQ1999"},"content":"    public static final String EMPTY_EXPENSE_MESSAGE \u003d \"You have not spent anything!\";","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"KZQ1999"},"content":"    public static final String FOUND_LIST_MESSAGE \u003d \"Below is a list of all your findings!\";","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"kyun99"},"content":"    public static final String BLANK_CATEGORY_MESSAGE \u003d \"Your category is empty!\";","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"AnShengLee"},"content":"    public static final String DATE_FORMAT_MESSAGE \u003d \"Your start and end dates must be in a DD/MM/YYYY format!\";","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"AnShengLee"},"content":"    public static final String ALL_DATA_CLEARED \u003d \"All your entries have been cleared!\";","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"kyun99"},"content":"    public static final String INVALID_EXPENSE_CATEGORY_MESSAGE \u003d \"Input only 1 of these 6 categories: Food, \" ","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"kyun99"},"content":"            + \"Transport, Bills, Medical, Entertainment or Misc.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"kyun99"},"content":"    public static final String INVALID_INCOME_CATEGORY_MESSAGE \u003d \"Input only 1 of these 4 categories: Salary, \" ","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"kyun99"},"content":"            + \"Allowance, Adhoc, or Others.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"jonathanlkw"},"content":"    public static final String INVALID_BUDGET_CATEGORY_MESSAGE \u003d \"Input only 1 of these 6 categories: Food, \"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"jonathanlkw"},"content":"            + \"Transport, Bills, Medical, Entertainment or Overall\";","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"jonathanlkw"},"content":"    public static final String INVALID_THRESHOLD_MESSAGE \u003d \"Threshold value should between 0 and 1.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kyun99"},"content":"    public static final String INVALID_CURRENCY_TYPE_MESSAGE \u003d \"Please enter a valid currency for conversion!\";","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"Nirmaleshwar"},"content":"    public static final String BLANK_CURRENCY_TYPE_MESSAGE \u003d \"You have not entered any currency type!\";","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"Nirmaleshwar"},"content":"    public static final String SAME_CURRENCY_TYPE_MESSAGE \u003d \"Your lists are already in the requested currency type!\";","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"kyun99"},"content":"    public static final String AVAILABLE_CURRENCIES_MESSAGE","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"kyun99"},"content":"            \u003d \"Here is a list of available currencies you can convert to!\";","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"KZQ1999"},"content":"    public static final String SEPARATOR_MESSAGE \u003d \"----------------------------------------------------------------\"","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"KZQ1999"},"content":"            + \"-------------------------------------\";","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"KZQ1999"},"content":"    public static final String BYE_MESSAGE \u003d \"██████  ██    ██ ███████        ██  \\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"KZQ1999"},"content":"            + \"██   ██  ██  ██  ██          ██  ██ \\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"KZQ1999"},"content":"            + \"██████    ████   █████           ██ \\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"KZQ1999"},"content":"            + \"██   ██    ██    ██          ██  ██ \\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"KZQ1999"},"content":"            + \"██████     ██    ███████        ██ \";","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"KZQ1999"},"content":"    public static final String LOGO_MESSAGE \u003d \"███████ ████████  ██████  ███    ██ ██   ██ ███████\"","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"KZQ1999"},"content":"            + \"     ██   ██ ██████  \\n██         ██    ██    ██ ████   ██ ██  ██  ██           ██ ██  ██   ██ \\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"KZQ1999"},"content":"            + \"███████    ██    ██    ██ ██ ██  ██ █████   ███████       ███   ██   ██ \\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"KZQ1999"},"content":"            + \"     ██    ██    ██    ██ ██  ██ ██ ██  ██       ██      ██ ██  ██   ██ \\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"KZQ1999"},"content":"            + \"███████    ██     ██████  ██   ████ ██   ██ ███████     ██   ██ ██████  \";","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"kyun99"},"content":"    public static final String TIP_HEADER \u003d \"Here\u0027s our tip for the day: \";","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"kyun99"},"content":"    public static final String DISPLAY_ADVICE_ERROR \u003d \"Sorry there is no advice for you at this moment \u003e.\u003c\";","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"AnShengLee"},"content":"    public static final String CURRENT_CURRENCY_MESSAGE \u003d \"You currency setting currently: \";","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"kyun99"},"content":"    public static final String INVALID_DATE_RANGE_MESSAGE \u003d \"Make sure your start date is before your end date\";","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"AnShengLee"},"content":"    public static final String PARAMETERS_ERROR_MESSAGE \u003d \"You have missing or invalid parameters. Use help to view \" ","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"AnShengLee"},"content":"            + \"commands again!\";","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"kyun99"},"content":"    public static final String INVALID_EXPENSE_VALUE \u003d \"Wow! That\u0027s a lot of money. \"","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"kyun99"},"content":"            + \"Are you sure you have spent that much?\";","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"kyun99"},"content":"    public static final String INVALID_INCOME_VALUE \u003d \"Wow! That\u0027s a lot of money.\"","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"kyun99"},"content":"            + \"I don\u0027t think we can handle that much money\";","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"jonathanlkw"},"content":"    public static final String INVALID_BUDGET_VALUE \u003d \"Wow! That\u0027s a lot of money.\"","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"jonathanlkw"},"content":"            + \"I don\u0027t think we can handle that much money\";","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"AnShengLee"},"content":"    public static final String INCOMPLETE_ENTRIES_CSV_HEADER_MESSAGE \u003d \"The CSV header for StonksXD_Entries.csv \" ","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"AnShengLee"},"content":"            + \"seems to be incomplete or missing.\\nDo not worry, we will put back the CSV header.\\nNote: If you \" ","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"AnShengLee"},"content":"            + \"replaced the CSV header with an entry, that entry will not be loaded.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"AnShengLee"},"content":"    public static final String INCOMPLETE_SETTINGS_CSV_HEADER_MESSAGE \u003d \"The CSV header for StonksXD_Settings.csv \"","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"AnShengLee"},"content":"            + \"seems to be incomplete or missing.\\nDo not worry, we will put back the CSV header.\\nNote: If you \" ","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"AnShengLee"},"content":"            + \"replaced the CSV header with the settings, those settings will not be loaded.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"kyun99"},"content":"    public static final String EXPENSE_OVERFLOW_ERROR \u003d \"Your total expense will exceed $100000000000. \" ","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"kyun99"},"content":"            + \"Are you sure you have spent this much?\";","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"kyun99"},"content":"    public static final String INCOME_OVERFLOW_ERROR \u003d \"Your total income will exceed $100000000000. \"","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"kyun99"},"content":"            + \"Are you sure you have gotten this much?\";","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"AnShengLee"},"content":"    public static final String ERROR_SAVING_ENTRIES_MESSAGE \u003d \"There is trouble saving entries into \" ","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"AnShengLee"},"content":"            + \"StonksXD_Entries.csv, some or all entries maybe lost.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"AnShengLee"},"content":"    public static final String ERROR_SAVING_SETTINGS_MESSAGE \u003d \"There is trouble saving entries into \"","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"AnShengLee"},"content":"            + \"StonksXD_Settings.csv, some or all settings maybe lost.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"AnShengLee"},"content":"    public static final String TOO_MANY_DP_MESSAGE \u003d \"Only 2 or less decimal places are allowed!\";","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"AnShengLee"},"content":"    public static final String INVALID_DATE_FORMAT \u003d \"Your date format is invalid. Please use DD/MM/YYYY\";","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"kyun99"},"content":"    public static final String INVALID_INDEX_MESSAGE \u003d \"Index given is either out of range or not an integer.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"kyun99"},"content":"    public static final String INVALID_YEAR_MESSAGE \u003d \"The given year must be in the YYYY format.\";","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"AnShengLee"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"kyun99":21,"AnShengLee":39,"Nirmaleshwar":3,"KZQ1999":24,"jonathanlkw":7}},{"path":"src/main/java/seedu/utility/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.utility;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.commands.currency.ListCurrencyTypesCommand;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.expense.AddExpenseCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.commands.currency.CheckCurrentCurrencyCommand;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"import seedu.commands.general.ClearAllEntriesCommand;","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"import seedu.commands.general.ExitCommand;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"import seedu.commands.general.FindCommand;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"import seedu.commands.general.HelpCommand;","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":"import seedu.commands.general.ShowGraphByYearCommand;","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":"import seedu.commands.general.ShowGraphCommand;","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.income.AddIncomeCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.budget.CheckBudgetCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"kyun99"},"content":"import seedu.commands.Command;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.commands.currency.CurrencyConversionCommand;","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.commands.currency.CurrencyType;","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.expense.DeleteExpenseCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.income.DeleteIncomeCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"kyun99"},"content":"import seedu.commands.InvalidCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.expense.ListExpenseCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.income.ListIncomeCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.budget.SetBudgetCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.budget.SetThresholdCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.expense.TotalExpenseBetweenCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.expense.TotalExpenseCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.income.TotalIncomeBetweenCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.income.TotalIncomeCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.budget.BalanceCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"kyun99"},"content":"import seedu.entry.Expense;","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"kyun99"},"content":"import seedu.entry.ExpenseCategory;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"kyun99"},"content":"import seedu.entry.Income;","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"kyun99"},"content":"import seedu.entry.IncomeCategory;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.BlankCurrencyTypeException;","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.InputException;","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"jonathanlkw"},"content":"import seedu.exceptions.InvalidBudgetAmountException;","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.InvalidCurrencyTypeException;","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.InvalidExpenseDataFormatException;","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.InvalidIncomeDataFormatException;","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.InvalidIndexException;","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.InvalidSettingsDataException;","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"AnShengLee"},"content":"import seedu.exceptions.InvalidThresholdValueException;","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"kyun99"},"content":"import seedu.utility.tools.DateRange;","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"kyun99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"kyun99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"kyun99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"AnShengLee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"AnShengLee"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"AnShengLee"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"AnShengLee"},"content":"import static seedu.utility.CommandKeywords.ADD_EXPENSE_KEYWORD;","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"AnShengLee"},"content":"import static seedu.utility.CommandKeywords.ADD_EXPENSE_WITH_DATE_KEYWORD;","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"AnShengLee"},"content":"import static seedu.utility.CommandKeywords.ADD_INCOME_KEYWORD;","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"AnShengLee"},"content":"import static seedu.utility.CommandKeywords.ADD_INCOME_WITH_DATE_KEYWORD;","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"AnShengLee"},"content":"import static seedu.utility.CommandKeywords.BALANCE_KEYWORD;","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"AnShengLee"},"content":"import static seedu.utility.CommandKeywords.CHECK_BUDGET_KEYWORD;","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"AnShengLee"},"content":"import static seedu.utility.CommandKeywords.CHECK_CURRENT_CURRENCY_KEYWORD;","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"AnShengLee"},"content":"import static seedu.utility.CommandKeywords.CLEAR_ALL_ENTRIES_KEYWORD;","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"AnShengLee"},"content":"import static seedu.utility.CommandKeywords.CONVERT_CURRENCY_KEYWORD;","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"AnShengLee"},"content":"import static seedu.utility.CommandKeywords.DELETE_EXPENSE_KEYWORD;","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"AnShengLee"},"content":"import static seedu.utility.CommandKeywords.DELETE_INCOME_KEYWORD;","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"AnShengLee"},"content":"import static seedu.utility.CommandKeywords.EXIT_KEYWORD;","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"AnShengLee"},"content":"import static seedu.utility.CommandKeywords.EXPENSE_RANGE_KEYWORD;","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"AnShengLee"},"content":"import static seedu.utility.CommandKeywords.FIND_KEYWORD;","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"AnShengLee"},"content":"import static seedu.utility.CommandKeywords.HELP_COMMAND_KEYWORD;","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"AnShengLee"},"content":"import static seedu.utility.CommandKeywords.INCOME_RANGE_KEYWORD;","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"AnShengLee"},"content":"import static seedu.utility.CommandKeywords.LIST_CURRENCY_TYPES_KEYWORD;","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"AnShengLee"},"content":"import static seedu.utility.CommandKeywords.LIST_EXPENSE_KEYWORD;","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"AnShengLee"},"content":"import static seedu.utility.CommandKeywords.LIST_INCOME_KEYWORD;","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"AnShengLee"},"content":"import static seedu.utility.CommandKeywords.SET_BUDGET_KEYWORD;","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"AnShengLee"},"content":"import static seedu.utility.CommandKeywords.SET_THRESHOLD_KEYWORD;","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"AnShengLee"},"content":"import static seedu.utility.CommandKeywords.SHOW_GRAPH_KEYWORD;","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"AnShengLee"},"content":"import static seedu.utility.CommandKeywords.TOTAL_EXPENSE_KEYWORD;","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"AnShengLee"},"content":"import static seedu.utility.CommandKeywords.TOTAL_INCOME_KEYWORD;","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"kyun99"},"content":"import static seedu.utility.tools.DateOperator.extractDate;","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"kyun99"},"content":"import static seedu.utility.tools.DateOperator.extractStartAndEndDate;","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"kyun99"},"content":"import static seedu.utility.tools.DateOperator.getYearFormat;","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"kyun99"},"content":"import static seedu.utility.tools.DateOperator.isValidDateRange;","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"AnShengLee"},"content":"import static seedu.utility.tools.Extractor.extractAmount;","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"jonathanlkw"},"content":"import static seedu.utility.tools.Extractor.extractBudgetAmount;","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"kyun99"},"content":"import static seedu.utility.tools.Extractor.extractDescription;","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"kyun99"},"content":"import static seedu.utility.tools.Extractor.extractExpenseCategory;","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"kyun99"},"content":"import static seedu.utility.tools.Extractor.extractIncomeCategory;","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"kyun99"},"content":"import static seedu.utility.tools.Extractor.extractIndex;","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"jonathanlkw"},"content":"import static seedu.utility.tools.Extractor.extractThresholdValue;","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"AnShengLee"},"content":"public class Parser {","lastModifiedDate":"2021-10-03"},{"lineNumber":88,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":89,"author":{"gitId":"AnShengLee"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2021-10-03"},{"lineNumber":90,"author":{"gitId":"AnShengLee"},"content":"     * This was adapted from addressbook-level2 source code here:","lastModifiedDate":"2021-10-03"},{"lineNumber":91,"author":{"gitId":"AnShengLee"},"content":"     * https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/parser/Parser.java","lastModifiedDate":"2021-10-03"},{"lineNumber":92,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":93,"author":{"gitId":"AnShengLee"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-10-03"},{"lineNumber":94,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":95,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":96,"author":{"gitId":"AnShengLee"},"content":"     * This was adapted from addressbook-level2 source code here:","lastModifiedDate":"2021-10-03"},{"lineNumber":97,"author":{"gitId":"AnShengLee"},"content":"     * https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/parser/Parser.java","lastModifiedDate":"2021-10-03"},{"lineNumber":98,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":99,"author":{"gitId":"AnShengLee"},"content":"    private static final Pattern ADD_EXPENSE_ARGUMENT_FORMAT \u003d","lastModifiedDate":"2021-10-03"},{"lineNumber":100,"author":{"gitId":"AnShengLee"},"content":"            Pattern.compile(\"^(?\u003d [cda]/)(?\u003d.* d/(?\u003cdescription\u003e.+?)( [ca]/|$))\"","lastModifiedDate":"2021-11-06"},{"lineNumber":101,"author":{"gitId":"AnShengLee"},"content":"                    + \"(?\u003d.* a/(?\u003camount\u003e.+?)( [dc]/|$))\"","lastModifiedDate":"2021-11-06"},{"lineNumber":102,"author":{"gitId":"AnShengLee"},"content":"                    + \"(?\u003d.* c/(?\u003ccategory\u003e.+?)( [da]/|$)).*$\");","lastModifiedDate":"2021-11-06"},{"lineNumber":103,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":104,"author":{"gitId":"AnShengLee"},"content":"    private static final Pattern ADD_EXPENSE_ARGUMENT_FORMAT_WITH_DATE \u003d","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"AnShengLee"},"content":"            Pattern.compile(\"^(?\u003d [cdaD]/)(?\u003d.* d/(?\u003cdescription\u003e.+?)( [caD]/|$))\"","lastModifiedDate":"2021-11-06"},{"lineNumber":106,"author":{"gitId":"AnShengLee"},"content":"                    + \"(?\u003d.* a/(?\u003camount\u003e.+?)( [dcD]/|$))\"","lastModifiedDate":"2021-11-06"},{"lineNumber":107,"author":{"gitId":"AnShengLee"},"content":"                    + \"(?\u003d.* c/(?\u003ccategory\u003e.+?)( [daD]/|$))\"","lastModifiedDate":"2021-11-06"},{"lineNumber":108,"author":{"gitId":"AnShengLee"},"content":"                    + \"(?\u003d.* D/(?\u003cdate\u003e.+?)( [dac]/|$)).*$\");","lastModifiedDate":"2021-11-06"},{"lineNumber":109,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":111,"author":{"gitId":"AnShengLee"},"content":"     * This was adapted from addressbook-level2 source code here:","lastModifiedDate":"2021-10-03"},{"lineNumber":112,"author":{"gitId":"AnShengLee"},"content":"     * https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/parser/Parser.java","lastModifiedDate":"2021-10-03"},{"lineNumber":113,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":114,"author":{"gitId":"AnShengLee"},"content":"    private static final Pattern ADD_INCOME_ARGUMENT_FORMAT \u003d","lastModifiedDate":"2021-10-03"},{"lineNumber":115,"author":{"gitId":"AnShengLee"},"content":"            Pattern.compile(\"^(?\u003d [cda]/)(?\u003d.* d/(?\u003cdescription\u003e.+?)( [ca]/|$))\"","lastModifiedDate":"2021-11-06"},{"lineNumber":116,"author":{"gitId":"AnShengLee"},"content":"                    + \"(?\u003d.* a/(?\u003camount\u003e.+?)( [dc]/|$))\"","lastModifiedDate":"2021-11-06"},{"lineNumber":117,"author":{"gitId":"AnShengLee"},"content":"                    + \"(?\u003d.* c/(?\u003ccategory\u003e.+?)( [da]/|$)).*$\");","lastModifiedDate":"2021-11-06"},{"lineNumber":118,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":119,"author":{"gitId":"AnShengLee"},"content":"    private static final Pattern ADD_INCOME_ARGUMENT_FORMAT_WITH_DATE \u003d","lastModifiedDate":"2021-10-31"},{"lineNumber":120,"author":{"gitId":"AnShengLee"},"content":"            Pattern.compile(\"^(?\u003d [cdaD]/)(?\u003d.* d/(?\u003cdescription\u003e.+?)( [caD]/|$))\"","lastModifiedDate":"2021-11-06"},{"lineNumber":121,"author":{"gitId":"AnShengLee"},"content":"                    + \"(?\u003d.* a/(?\u003camount\u003e.+?)( [dcD]/|$))\"","lastModifiedDate":"2021-11-06"},{"lineNumber":122,"author":{"gitId":"AnShengLee"},"content":"                    + \"(?\u003d.* c/(?\u003ccategory\u003e.+?)( [daD]/|$))\"","lastModifiedDate":"2021-11-06"},{"lineNumber":123,"author":{"gitId":"AnShengLee"},"content":"                    + \"(?\u003d.* D/(?\u003cdate\u003e.+?)( [dac]/|$)).*$\");","lastModifiedDate":"2021-11-06"},{"lineNumber":124,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":125,"author":{"gitId":"AnShengLee"},"content":"     * This was adapted from addressbook-level2 source code here:","lastModifiedDate":"2021-10-03"},{"lineNumber":126,"author":{"gitId":"AnShengLee"},"content":"     * https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/parser/Parser.java","lastModifiedDate":"2021-10-03"},{"lineNumber":127,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":128,"author":{"gitId":"AnShengLee"},"content":"    private static final Pattern DELETE_EXPENSE_ARGUMENT_FORMAT \u003d","lastModifiedDate":"2021-10-03"},{"lineNumber":129,"author":{"gitId":"AnShengLee"},"content":"            Pattern.compile(\"i/(?\u003cindex\u003e[^/]+)\");","lastModifiedDate":"2021-10-03"},{"lineNumber":130,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":131,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":132,"author":{"gitId":"AnShengLee"},"content":"     * This was adapted from addressbook-level2 source code here:","lastModifiedDate":"2021-10-03"},{"lineNumber":133,"author":{"gitId":"AnShengLee"},"content":"     * https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/parser/Parser.java","lastModifiedDate":"2021-10-03"},{"lineNumber":134,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":135,"author":{"gitId":"AnShengLee"},"content":"    private static final Pattern DELETE_INCOME_ARGUMENT_FORMAT \u003d","lastModifiedDate":"2021-10-03"},{"lineNumber":136,"author":{"gitId":"AnShengLee"},"content":"            Pattern.compile(\"i/(?\u003cindex\u003e[^/]+)\");","lastModifiedDate":"2021-10-03"},{"lineNumber":137,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":138,"author":{"gitId":"kyun99"},"content":"    private static final Pattern DATE_RANGE_ARGUMENT_FORMAT \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":139,"author":{"gitId":"AnShengLee"},"content":"            Pattern.compile(\"^(?\u003d [se]/)(?\u003d.* s/(?\u003cstart\u003e.+?)( [e]/|$))\"","lastModifiedDate":"2021-11-06"},{"lineNumber":140,"author":{"gitId":"AnShengLee"},"content":"                    + \"(?\u003d.* e/(?\u003cend\u003e.+?)( [s]/|$)).*$\");","lastModifiedDate":"2021-11-06"},{"lineNumber":141,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":142,"author":{"gitId":"jonathanlkw"},"content":"    private static final Pattern SET_BUDGET_ARGUMENT_FORMAT \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"AnShengLee"},"content":"            Pattern.compile(\"^(?\u003d [ca]/)(?\u003d.* c/(?\u003ccategory\u003e.+?)( [a]/|$))\"","lastModifiedDate":"2021-11-06"},{"lineNumber":144,"author":{"gitId":"AnShengLee"},"content":"                    + \"(?\u003d.* a/(?\u003camount\u003e.+?)( [c]/|$)).*$\");","lastModifiedDate":"2021-11-06"},{"lineNumber":145,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"jonathanlkw"},"content":"    private static final Pattern CHECK_BUDGET_ARGUMENT_FORMAT \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"jonathanlkw"},"content":"            Pattern.compile(\"c/(?\u003ccategory\u003e[^/]+)\");","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":149,"author":{"gitId":"jonathanlkw"},"content":"    private static final Pattern SET_THRESHOLD_ARGUMENT_FORMAT \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"jonathanlkw"},"content":"            Pattern.compile(\"t/(?\u003cthreshold\u003e[^/]+)\");","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"Nirmaleshwar"},"content":"    private static final Pattern CURRENCY_CONVERSION_FORMAT \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"AnShengLee"},"content":"            Pattern.compile(\"c/(?\u003ccurrency\u003e.+)\");","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"kyun99"},"content":"    private static final Pattern SHOW_GRAPH_BY_YEAR_FORMAT \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":156,"author":{"gitId":"kyun99"},"content":"            Pattern.compile(\"Y/(?\u003cyear\u003e.+)\");","lastModifiedDate":"2021-11-05"},{"lineNumber":157,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":158,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":159,"author":{"gitId":"AnShengLee"},"content":"    private static final String DATA_SEPARATOR \u003d \",\";","lastModifiedDate":"2021-10-14"},{"lineNumber":160,"author":{"gitId":"AnShengLee"},"content":"    private static final Pattern EXPENSE_DATA_FORMAT","lastModifiedDate":"2021-10-14"},{"lineNumber":161,"author":{"gitId":"AnShengLee"},"content":"            \u003d Pattern.compile(\"E\" + DATA_SEPARATOR + \"(?\u003cdescription\u003e.+)\" + DATA_SEPARATOR","lastModifiedDate":"2021-10-23"},{"lineNumber":162,"author":{"gitId":"AnShengLee"},"content":"            + \"(?\u003camount\u003e.+)\" + DATA_SEPARATOR + \"(?\u003ccategory\u003e.+)\" + DATA_SEPARATOR + \"(?\u003cdate\u003e.+)\");","lastModifiedDate":"2021-10-23"},{"lineNumber":163,"author":{"gitId":"AnShengLee"},"content":"    private static final Pattern INCOME_DATA_FORMAT","lastModifiedDate":"2021-10-14"},{"lineNumber":164,"author":{"gitId":"AnShengLee"},"content":"            \u003d Pattern.compile(\"I\" + DATA_SEPARATOR + \"(?\u003cdescription\u003e.+)\" + DATA_SEPARATOR","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"AnShengLee"},"content":"            + \"(?\u003camount\u003e.+)\" + DATA_SEPARATOR + \"(?\u003ccategory\u003e.+)\" + DATA_SEPARATOR + \"(?\u003cdate\u003e.+)\");","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"AnShengLee"},"content":"    private static final Pattern SETTINGS_DATA_FORMAT \u003d Pattern.compile(\"(?\u003ccurrency\u003e.+)\" + DATA_SEPARATOR","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"jonathanlkw"},"content":"            + \"(?\u003cthreshold\u003e.+)\" + DATA_SEPARATOR + \"(?\u003coverall\u003e.+)\" + DATA_SEPARATOR + \"(?\u003cfood\u003e.+)\"","lastModifiedDate":"2021-11-07"},{"lineNumber":168,"author":{"gitId":"jonathanlkw"},"content":"            + DATA_SEPARATOR + \"(?\u003ctransport\u003e.+)\" + DATA_SEPARATOR + \"(?\u003cmedical\u003e.+)\"","lastModifiedDate":"2021-11-07"},{"lineNumber":169,"author":{"gitId":"jonathanlkw"},"content":"            + DATA_SEPARATOR + \"(?\u003cbills\u003e.+)\" + DATA_SEPARATOR + \"(?\u003centertainment\u003e.+)\"","lastModifiedDate":"2021-11-07"},{"lineNumber":170,"author":{"gitId":"jonathanlkw"},"content":"            + DATA_SEPARATOR + \"(?\u003cmisc\u003e.+)\");","lastModifiedDate":"2021-11-07"},{"lineNumber":171,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"kyun99"},"content":"    public static final String DATE_FORMAT \u003d \"dd/MM/yyyy\";","lastModifiedDate":"2021-11-07"},{"lineNumber":173,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":174,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":175,"author":{"gitId":"AnShengLee"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2021-10-03"},{"lineNumber":176,"author":{"gitId":"AnShengLee"},"content":"     * This was adapted from addressbook-level2 source code here:","lastModifiedDate":"2021-10-03"},{"lineNumber":177,"author":{"gitId":"AnShengLee"},"content":"     * https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/parser/Parser.java","lastModifiedDate":"2021-10-03"},{"lineNumber":178,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":179,"author":{"gitId":"AnShengLee"},"content":"     * @param userInput full user input string","lastModifiedDate":"2021-10-03"},{"lineNumber":180,"author":{"gitId":"AnShengLee"},"content":"     * @return the command based on the user input","lastModifiedDate":"2021-10-03"},{"lineNumber":181,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":182,"author":{"gitId":"AnShengLee"},"content":"    public Command parseCommand(String userInput) {","lastModifiedDate":"2021-10-03"},{"lineNumber":183,"author":{"gitId":"AnShengLee"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-10-03"},{"lineNumber":184,"author":{"gitId":"AnShengLee"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":185,"author":{"gitId":"AnShengLee"},"content":"            return new InvalidCommand(Messages.INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-11"},{"lineNumber":186,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":187,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":188,"author":{"gitId":"AnShengLee"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2021-10-03"},{"lineNumber":189,"author":{"gitId":"AnShengLee"},"content":"        String arguments \u003d matcher.group(\"arguments\").trim();","lastModifiedDate":"2021-11-06"},{"lineNumber":190,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":191,"author":{"gitId":"AnShengLee"},"content":"        if (isExpenseRelatedCommand(commandWord)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":192,"author":{"gitId":"AnShengLee"},"content":"            return prepareExpenseRelatedCommand(commandWord, arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"AnShengLee"},"content":"        } else if (isIncomeRelatedCommand(commandWord)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"AnShengLee"},"content":"            return prepareIncomeRelatedCommand(commandWord, arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":195,"author":{"gitId":"AnShengLee"},"content":"        } else if (isGeneralRelatedCommand(commandWord)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"AnShengLee"},"content":"            return prepareGeneralRelatedCommand(commandWord, arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":197,"author":{"gitId":"AnShengLee"},"content":"        } else if (isBudgetRelatedCommand(commandWord)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":198,"author":{"gitId":"AnShengLee"},"content":"            return prepareBudgetRelatedCommand(commandWord, arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"Nirmaleshwar"},"content":"        } else if (isCurrencyRelatedCommand(commandWord)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":200,"author":{"gitId":"Nirmaleshwar"},"content":"            return prepareCurrencyRelatedCommand(commandWord, arguments);","lastModifiedDate":"2021-11-02"},{"lineNumber":201,"author":{"gitId":"Nirmaleshwar"},"content":"        } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":202,"author":{"gitId":"AnShengLee"},"content":"            return new InvalidCommand(Messages.INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-24"},{"lineNumber":203,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":204,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":205,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":206,"author":{"gitId":"AnShengLee"},"content":"    private boolean isExpenseRelatedCommand(String commandWord) {","lastModifiedDate":"2021-10-24"},{"lineNumber":207,"author":{"gitId":"AnShengLee"},"content":"        return (commandWord.equals(ADD_EXPENSE_KEYWORD) || commandWord.equals(DELETE_EXPENSE_KEYWORD)","lastModifiedDate":"2021-10-24"},{"lineNumber":208,"author":{"gitId":"AnShengLee"},"content":"                || commandWord.equals(LIST_EXPENSE_KEYWORD) || commandWord.equals(TOTAL_EXPENSE_KEYWORD)","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"AnShengLee"},"content":"                || commandWord.equals(EXPENSE_RANGE_KEYWORD) || commandWord.equals(ADD_EXPENSE_WITH_DATE_KEYWORD));","lastModifiedDate":"2021-11-06"},{"lineNumber":210,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":211,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":212,"author":{"gitId":"AnShengLee"},"content":"    private boolean isIncomeRelatedCommand(String commandWord) {","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"AnShengLee"},"content":"        return (commandWord.equals(ADD_INCOME_KEYWORD) || commandWord.equals(DELETE_INCOME_KEYWORD)","lastModifiedDate":"2021-10-24"},{"lineNumber":214,"author":{"gitId":"AnShengLee"},"content":"                || commandWord.equals(LIST_INCOME_KEYWORD) || commandWord.equals(TOTAL_INCOME_KEYWORD)","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"AnShengLee"},"content":"                || commandWord.equals(INCOME_RANGE_KEYWORD) || commandWord.equals(ADD_INCOME_WITH_DATE_KEYWORD));","lastModifiedDate":"2021-11-06"},{"lineNumber":216,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":217,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":218,"author":{"gitId":"AnShengLee"},"content":"    private boolean isGeneralRelatedCommand(String commandWord) {","lastModifiedDate":"2021-10-24"},{"lineNumber":219,"author":{"gitId":"AnShengLee"},"content":"        return (commandWord.equals(HELP_COMMAND_KEYWORD) || commandWord.equals(FIND_KEYWORD)","lastModifiedDate":"2021-10-24"},{"lineNumber":220,"author":{"gitId":"AnShengLee"},"content":"                || commandWord.equals(EXIT_KEYWORD) || commandWord.equals(SHOW_GRAPH_KEYWORD)","lastModifiedDate":"2021-10-24"},{"lineNumber":221,"author":{"gitId":"Nirmaleshwar"},"content":"                || commandWord.equals(CLEAR_ALL_ENTRIES_KEYWORD));","lastModifiedDate":"2021-11-02"},{"lineNumber":222,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":224,"author":{"gitId":"AnShengLee"},"content":"    private boolean isBudgetRelatedCommand(String commandWord) {","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"AnShengLee"},"content":"        return (commandWord.equals(BALANCE_KEYWORD) || commandWord.equals(SET_BUDGET_KEYWORD)","lastModifiedDate":"2021-10-24"},{"lineNumber":226,"author":{"gitId":"AnShengLee"},"content":"                || commandWord.equals(CHECK_BUDGET_KEYWORD) || commandWord.equals(SET_THRESHOLD_KEYWORD));","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":228,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":229,"author":{"gitId":"Nirmaleshwar"},"content":"    private boolean isCurrencyRelatedCommand(String commandWord) {","lastModifiedDate":"2021-11-02"},{"lineNumber":230,"author":{"gitId":"Nirmaleshwar"},"content":"        return (commandWord.equals(CHECK_CURRENT_CURRENCY_KEYWORD) || commandWord.equals(CONVERT_CURRENCY_KEYWORD)","lastModifiedDate":"2021-11-02"},{"lineNumber":231,"author":{"gitId":"Nirmaleshwar"},"content":"                || commandWord.equals(LIST_CURRENCY_TYPES_KEYWORD));","lastModifiedDate":"2021-11-02"},{"lineNumber":232,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":233,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":234,"author":{"gitId":"AnShengLee"},"content":"    private Command prepareExpenseRelatedCommand(String commandWord, String arguments) {","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"AnShengLee"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-10-03"},{"lineNumber":236,"author":{"gitId":"AnShengLee"},"content":"        case ADD_EXPENSE_KEYWORD:","lastModifiedDate":"2021-10-04"},{"lineNumber":237,"author":{"gitId":"AnShengLee"},"content":"            return prepareAddExpenseWithoutDate(arguments);","lastModifiedDate":"2021-11-06"},{"lineNumber":238,"author":{"gitId":"AnShengLee"},"content":"        case ADD_EXPENSE_WITH_DATE_KEYWORD:","lastModifiedDate":"2021-11-06"},{"lineNumber":239,"author":{"gitId":"AnShengLee"},"content":"            return prepareAddExpenseWithDate(arguments);","lastModifiedDate":"2021-11-06"},{"lineNumber":240,"author":{"gitId":"AnShengLee"},"content":"        case DELETE_EXPENSE_KEYWORD:","lastModifiedDate":"2021-10-04"},{"lineNumber":241,"author":{"gitId":"AnShengLee"},"content":"            return prepareDeleteExpense(arguments);","lastModifiedDate":"2021-10-03"},{"lineNumber":242,"author":{"gitId":"AnShengLee"},"content":"        case LIST_EXPENSE_KEYWORD:","lastModifiedDate":"2021-10-04"},{"lineNumber":243,"author":{"gitId":"AnShengLee"},"content":"            return prepareListExpense(arguments);","lastModifiedDate":"2021-10-04"},{"lineNumber":244,"author":{"gitId":"AnShengLee"},"content":"        case TOTAL_EXPENSE_KEYWORD:","lastModifiedDate":"2021-10-04"},{"lineNumber":245,"author":{"gitId":"AnShengLee"},"content":"            return prepareTotalExpense(arguments);","lastModifiedDate":"2021-10-04"},{"lineNumber":246,"author":{"gitId":"kyun99"},"content":"        case EXPENSE_RANGE_KEYWORD:","lastModifiedDate":"2021-10-15"},{"lineNumber":247,"author":{"gitId":"kyun99"},"content":"            return prepareExpenseRange(arguments);","lastModifiedDate":"2021-10-15"},{"lineNumber":248,"author":{"gitId":"AnShengLee"},"content":"        default:","lastModifiedDate":"2021-10-24"},{"lineNumber":249,"author":{"gitId":"AnShengLee"},"content":"            return new InvalidCommand(Messages.INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-24"},{"lineNumber":250,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":251,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":252,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":253,"author":{"gitId":"AnShengLee"},"content":"    private Command prepareIncomeRelatedCommand(String commandWord, String arguments) {","lastModifiedDate":"2021-10-24"},{"lineNumber":254,"author":{"gitId":"AnShengLee"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-10-24"},{"lineNumber":255,"author":{"gitId":"AnShengLee"},"content":"        case ADD_INCOME_KEYWORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":256,"author":{"gitId":"AnShengLee"},"content":"            return prepareAddIncomeWithoutDate(arguments);","lastModifiedDate":"2021-11-06"},{"lineNumber":257,"author":{"gitId":"AnShengLee"},"content":"        case ADD_INCOME_WITH_DATE_KEYWORD:","lastModifiedDate":"2021-11-06"},{"lineNumber":258,"author":{"gitId":"AnShengLee"},"content":"            return prepareAddIncomeWithDate(arguments);","lastModifiedDate":"2021-11-06"},{"lineNumber":259,"author":{"gitId":"AnShengLee"},"content":"        case DELETE_INCOME_KEYWORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":260,"author":{"gitId":"AnShengLee"},"content":"            return prepareDeleteIncome(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":261,"author":{"gitId":"AnShengLee"},"content":"        case LIST_INCOME_KEYWORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":262,"author":{"gitId":"AnShengLee"},"content":"            return prepareListIncome(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":263,"author":{"gitId":"AnShengLee"},"content":"        case TOTAL_INCOME_KEYWORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":264,"author":{"gitId":"AnShengLee"},"content":"            return prepareTotalIncome(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":265,"author":{"gitId":"kyun99"},"content":"        case INCOME_RANGE_KEYWORD:","lastModifiedDate":"2021-10-15"},{"lineNumber":266,"author":{"gitId":"kyun99"},"content":"            return prepareIncomeRange(arguments);","lastModifiedDate":"2021-10-15"},{"lineNumber":267,"author":{"gitId":"AnShengLee"},"content":"        default:","lastModifiedDate":"2021-10-24"},{"lineNumber":268,"author":{"gitId":"AnShengLee"},"content":"            return new InvalidCommand(Messages.INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-24"},{"lineNumber":269,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":270,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":271,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":272,"author":{"gitId":"AnShengLee"},"content":"    private Command prepareBudgetRelatedCommand(String commandWord, String arguments) {","lastModifiedDate":"2021-10-24"},{"lineNumber":273,"author":{"gitId":"AnShengLee"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-10-24"},{"lineNumber":274,"author":{"gitId":"AnShengLee"},"content":"        case BALANCE_KEYWORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":275,"author":{"gitId":"AnShengLee"},"content":"            return prepareBalance(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":276,"author":{"gitId":"jonathanlkw"},"content":"        case SET_BUDGET_KEYWORD:","lastModifiedDate":"2021-10-20"},{"lineNumber":277,"author":{"gitId":"jonathanlkw"},"content":"            return prepareSetBudget(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":278,"author":{"gitId":"jonathanlkw"},"content":"        case CHECK_BUDGET_KEYWORD:","lastModifiedDate":"2021-10-20"},{"lineNumber":279,"author":{"gitId":"jonathanlkw"},"content":"            return prepareCheckBudget(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":280,"author":{"gitId":"jonathanlkw"},"content":"        case SET_THRESHOLD_KEYWORD:","lastModifiedDate":"2021-10-20"},{"lineNumber":281,"author":{"gitId":"jonathanlkw"},"content":"            return prepareSetThreshold(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":282,"author":{"gitId":"AnShengLee"},"content":"        default:","lastModifiedDate":"2021-10-03"},{"lineNumber":283,"author":{"gitId":"AnShengLee"},"content":"            return new InvalidCommand(Messages.INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-11"},{"lineNumber":284,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":285,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":286,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":287,"author":{"gitId":"Nirmaleshwar"},"content":"    private Command prepareCurrencyRelatedCommand(String commandWord, String arguments) {","lastModifiedDate":"2021-11-02"},{"lineNumber":288,"author":{"gitId":"Nirmaleshwar"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-11-02"},{"lineNumber":289,"author":{"gitId":"Nirmaleshwar"},"content":"        case CHECK_CURRENT_CURRENCY_KEYWORD:","lastModifiedDate":"2021-11-02"},{"lineNumber":290,"author":{"gitId":"Nirmaleshwar"},"content":"            return prepareCheckCurrentCurrency(arguments);","lastModifiedDate":"2021-11-02"},{"lineNumber":291,"author":{"gitId":"Nirmaleshwar"},"content":"        case CONVERT_CURRENCY_KEYWORD:","lastModifiedDate":"2021-11-02"},{"lineNumber":292,"author":{"gitId":"Nirmaleshwar"},"content":"            return prepareConvertCurrency(arguments);","lastModifiedDate":"2021-11-02"},{"lineNumber":293,"author":{"gitId":"Nirmaleshwar"},"content":"        case LIST_CURRENCY_TYPES_KEYWORD:","lastModifiedDate":"2021-11-02"},{"lineNumber":294,"author":{"gitId":"Nirmaleshwar"},"content":"            return prepareListCurrencyTypes(arguments);","lastModifiedDate":"2021-11-02"},{"lineNumber":295,"author":{"gitId":"Nirmaleshwar"},"content":"        default:","lastModifiedDate":"2021-11-02"},{"lineNumber":296,"author":{"gitId":"Nirmaleshwar"},"content":"            return new InvalidCommand(Messages.INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-11-02"},{"lineNumber":297,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":298,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":299,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":300,"author":{"gitId":"AnShengLee"},"content":"    private Command prepareGeneralRelatedCommand(String commandWord, String arguments) {","lastModifiedDate":"2021-10-24"},{"lineNumber":301,"author":{"gitId":"AnShengLee"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-10-24"},{"lineNumber":302,"author":{"gitId":"AnShengLee"},"content":"        case HELP_COMMAND_KEYWORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":303,"author":{"gitId":"AnShengLee"},"content":"            return prepareHelp(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":304,"author":{"gitId":"AnShengLee"},"content":"        case FIND_KEYWORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":305,"author":{"gitId":"AnShengLee"},"content":"            return prepareFind(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":306,"author":{"gitId":"AnShengLee"},"content":"        case EXIT_KEYWORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":307,"author":{"gitId":"AnShengLee"},"content":"            return prepareExit(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":308,"author":{"gitId":"AnShengLee"},"content":"        case SHOW_GRAPH_KEYWORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":309,"author":{"gitId":"AnShengLee"},"content":"            return prepareShowGraph(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":310,"author":{"gitId":"AnShengLee"},"content":"        case CLEAR_ALL_ENTRIES_KEYWORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":311,"author":{"gitId":"AnShengLee"},"content":"            return prepareClearAllEntries(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":312,"author":{"gitId":"AnShengLee"},"content":"        default:","lastModifiedDate":"2021-10-24"},{"lineNumber":313,"author":{"gitId":"AnShengLee"},"content":"            return new InvalidCommand(Messages.INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-24"},{"lineNumber":314,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":315,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":316,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":317,"author":{"gitId":"kyun99"},"content":"    private Command prepareIncomeRange(String arguments) {","lastModifiedDate":"2021-10-15"},{"lineNumber":318,"author":{"gitId":"kyun99"},"content":"        try {","lastModifiedDate":"2021-11-07"},{"lineNumber":319,"author":{"gitId":"AnShengLee"},"content":"            final Matcher matcher \u003d DATE_RANGE_ARGUMENT_FORMAT.matcher(\" \" + arguments);","lastModifiedDate":"2021-11-06"},{"lineNumber":320,"author":{"gitId":"kyun99"},"content":"            if (!matcher.matches()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":321,"author":{"gitId":"AnShengLee"},"content":"                return new InvalidCommand(Messages.PARAMETERS_ERROR_MESSAGE);","lastModifiedDate":"2021-11-02"},{"lineNumber":322,"author":{"gitId":"kyun99"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":323,"author":{"gitId":"kyun99"},"content":"            DateRange dateRange \u003d extractStartAndEndDate(matcher);","lastModifiedDate":"2021-11-07"},{"lineNumber":324,"author":{"gitId":"kyun99"},"content":"            if (isValidDateRange(dateRange)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":325,"author":{"gitId":"kyun99"},"content":"                return new TotalIncomeBetweenCommand(dateRange);","lastModifiedDate":"2021-11-07"},{"lineNumber":326,"author":{"gitId":"kyun99"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":327,"author":{"gitId":"kyun99"},"content":"            return new InvalidCommand(Messages.INVALID_DATE_RANGE_MESSAGE);","lastModifiedDate":"2021-10-31"},{"lineNumber":328,"author":{"gitId":"kyun99"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-15"},{"lineNumber":329,"author":{"gitId":"kyun99"},"content":"            return new InvalidCommand(Messages.DATE_FORMAT_MESSAGE);","lastModifiedDate":"2021-10-15"},{"lineNumber":330,"author":{"gitId":"kyun99"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":331,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":332,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":333,"author":{"gitId":"kyun99"},"content":"    private Command prepareExpenseRange(String arguments) {","lastModifiedDate":"2021-10-15"},{"lineNumber":334,"author":{"gitId":"kyun99"},"content":"        try {","lastModifiedDate":"2021-11-07"},{"lineNumber":335,"author":{"gitId":"AnShengLee"},"content":"            final Matcher matcher \u003d DATE_RANGE_ARGUMENT_FORMAT.matcher(\" \" + arguments);","lastModifiedDate":"2021-11-06"},{"lineNumber":336,"author":{"gitId":"kyun99"},"content":"            if (!matcher.matches()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":337,"author":{"gitId":"AnShengLee"},"content":"                return new InvalidCommand(Messages.PARAMETERS_ERROR_MESSAGE);","lastModifiedDate":"2021-11-02"},{"lineNumber":338,"author":{"gitId":"kyun99"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":339,"author":{"gitId":"kyun99"},"content":"            DateRange dateRange \u003d extractStartAndEndDate(matcher);","lastModifiedDate":"2021-11-07"},{"lineNumber":340,"author":{"gitId":"kyun99"},"content":"            if (isValidDateRange(dateRange)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":341,"author":{"gitId":"kyun99"},"content":"                return new TotalExpenseBetweenCommand(dateRange);","lastModifiedDate":"2021-11-07"},{"lineNumber":342,"author":{"gitId":"kyun99"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":343,"author":{"gitId":"kyun99"},"content":"            return new InvalidCommand(Messages.INVALID_DATE_RANGE_MESSAGE);","lastModifiedDate":"2021-10-31"},{"lineNumber":344,"author":{"gitId":"kyun99"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-15"},{"lineNumber":345,"author":{"gitId":"kyun99"},"content":"            return new InvalidCommand(Messages.DATE_FORMAT_MESSAGE);","lastModifiedDate":"2021-10-15"},{"lineNumber":346,"author":{"gitId":"kyun99"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":347,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":348,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":349,"author":{"gitId":"KZQ1999"},"content":"    private Command prepareBalance(String arguments) {","lastModifiedDate":"2021-10-16"},{"lineNumber":350,"author":{"gitId":"KZQ1999"},"content":"        if (arguments.isBlank()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":351,"author":{"gitId":"KZQ1999"},"content":"            return new BalanceCommand();","lastModifiedDate":"2021-10-16"},{"lineNumber":352,"author":{"gitId":"KZQ1999"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":353,"author":{"gitId":"KZQ1999"},"content":"        return new InvalidCommand(Messages.INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-16"},{"lineNumber":354,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":355,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":356,"author":{"gitId":"KZQ1999"},"content":"    private Command prepareFind(String arguments) {","lastModifiedDate":"2021-10-16"},{"lineNumber":357,"author":{"gitId":"KZQ1999"},"content":"        if (arguments.isBlank()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":358,"author":{"gitId":"KZQ1999"},"content":"            return new InvalidCommand(Messages.INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-16"},{"lineNumber":359,"author":{"gitId":"KZQ1999"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":360,"author":{"gitId":"KZQ1999"},"content":"        return new FindCommand(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":361,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":362,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":363,"author":{"gitId":"AnShengLee"},"content":"    private Command prepareHelp(String arguments) {","lastModifiedDate":"2021-10-11"},{"lineNumber":364,"author":{"gitId":"KZQ1999"},"content":"        if (arguments.isBlank()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":365,"author":{"gitId":"AnShengLee"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-10-11"},{"lineNumber":366,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":367,"author":{"gitId":"AnShengLee"},"content":"        return new InvalidCommand(Messages.INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-11"},{"lineNumber":368,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":369,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":370,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":371,"author":{"gitId":"AnShengLee"},"content":"     * This was adapted from addressbook-level2 source code here:","lastModifiedDate":"2021-10-03"},{"lineNumber":372,"author":{"gitId":"AnShengLee"},"content":"     * https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/parser/Parser.java","lastModifiedDate":"2021-10-03"},{"lineNumber":373,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":374,"author":{"gitId":"AnShengLee"},"content":"    private Command prepareAddExpenseWithoutDate(String arguments) {","lastModifiedDate":"2021-11-06"},{"lineNumber":375,"author":{"gitId":"AnShengLee"},"content":"        final Matcher matcher \u003d ADD_EXPENSE_ARGUMENT_FORMAT.matcher(\" \" + arguments);","lastModifiedDate":"2021-11-06"},{"lineNumber":376,"author":{"gitId":"AnShengLee"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2021-11-06"},{"lineNumber":377,"author":{"gitId":"AnShengLee"},"content":"            try {","lastModifiedDate":"2021-10-04"},{"lineNumber":378,"author":{"gitId":"AnShengLee"},"content":"                double expenseAmount \u003d extractAmount(matcher);","lastModifiedDate":"2021-11-07"},{"lineNumber":379,"author":{"gitId":"kyun99"},"content":"                String expenseDescription \u003d extractDescription(matcher);","lastModifiedDate":"2021-11-07"},{"lineNumber":380,"author":{"gitId":"AnShengLee"},"content":"                ExpenseCategory expenseCategory \u003d extractExpenseCategory(matcher);","lastModifiedDate":"2021-10-24"},{"lineNumber":381,"author":{"gitId":"kyun99"},"content":"                Expense expense \u003d new Expense(expenseDescription, expenseAmount, expenseCategory);","lastModifiedDate":"2021-10-23"},{"lineNumber":382,"author":{"gitId":"AnShengLee"},"content":"                assert !expenseCategory.equals(ExpenseCategory.NULL);","lastModifiedDate":"2021-10-31"},{"lineNumber":383,"author":{"gitId":"kyun99"},"content":"                return new AddExpenseCommand(expense);","lastModifiedDate":"2021-10-23"},{"lineNumber":384,"author":{"gitId":"kyun99"},"content":"            } catch (InputException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":385,"author":{"gitId":"AnShengLee"},"content":"                return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-11"},{"lineNumber":386,"author":{"gitId":"AnShengLee"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":387,"author":{"gitId":"AnShengLee"},"content":"        } else {","lastModifiedDate":"2021-11-06"},{"lineNumber":388,"author":{"gitId":"AnShengLee"},"content":"            return new InvalidCommand(Messages.PARAMETERS_ERROR_MESSAGE);","lastModifiedDate":"2021-11-06"},{"lineNumber":389,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":390,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":391,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":392,"author":{"gitId":"AnShengLee"},"content":"    private Command prepareAddExpenseWithDate(String arguments) {","lastModifiedDate":"2021-11-06"},{"lineNumber":393,"author":{"gitId":"AnShengLee"},"content":"        final Matcher matcher \u003d ADD_EXPENSE_ARGUMENT_FORMAT_WITH_DATE.matcher(\" \" + arguments);","lastModifiedDate":"2021-11-06"},{"lineNumber":394,"author":{"gitId":"AnShengLee"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2021-11-06"},{"lineNumber":395,"author":{"gitId":"AnShengLee"},"content":"            try {","lastModifiedDate":"2021-10-31"},{"lineNumber":396,"author":{"gitId":"AnShengLee"},"content":"                double expenseAmount \u003d extractAmount(matcher);","lastModifiedDate":"2021-11-07"},{"lineNumber":397,"author":{"gitId":"kyun99"},"content":"                String expenseDescription \u003d extractDescription(matcher);","lastModifiedDate":"2021-11-07"},{"lineNumber":398,"author":{"gitId":"AnShengLee"},"content":"                ExpenseCategory expenseCategory \u003d extractExpenseCategory(matcher);","lastModifiedDate":"2021-10-31"},{"lineNumber":399,"author":{"gitId":"kyun99"},"content":"                LocalDate expenseDate \u003d extractDate(matcher);","lastModifiedDate":"2021-11-07"},{"lineNumber":400,"author":{"gitId":"AnShengLee"},"content":"                Expense expense \u003d new Expense(expenseDescription, expenseAmount, expenseCategory, expenseDate);","lastModifiedDate":"2021-10-31"},{"lineNumber":401,"author":{"gitId":"AnShengLee"},"content":"                assert !expenseCategory.equals(ExpenseCategory.NULL);","lastModifiedDate":"2021-10-31"},{"lineNumber":402,"author":{"gitId":"AnShengLee"},"content":"                return new AddExpenseCommand(expense);","lastModifiedDate":"2021-10-31"},{"lineNumber":403,"author":{"gitId":"AnShengLee"},"content":"            } catch (InputException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":404,"author":{"gitId":"AnShengLee"},"content":"                return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":405,"author":{"gitId":"AnShengLee"},"content":"            } catch (DateTimeParseException de) {","lastModifiedDate":"2021-11-02"},{"lineNumber":406,"author":{"gitId":"AnShengLee"},"content":"                return new InvalidCommand(Messages.INVALID_DATE_FORMAT);","lastModifiedDate":"2021-11-02"},{"lineNumber":407,"author":{"gitId":"AnShengLee"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":408,"author":{"gitId":"AnShengLee"},"content":"        } else {","lastModifiedDate":"2021-11-06"},{"lineNumber":409,"author":{"gitId":"AnShengLee"},"content":"            return new InvalidCommand(Messages.PARAMETERS_ERROR_MESSAGE);","lastModifiedDate":"2021-11-06"},{"lineNumber":410,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":411,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":412,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":413,"author":{"gitId":"AnShengLee"},"content":"    private Command prepareAddIncomeWithoutDate(String arguments) {","lastModifiedDate":"2021-11-06"},{"lineNumber":414,"author":{"gitId":"AnShengLee"},"content":"        final Matcher matcher \u003d ADD_INCOME_ARGUMENT_FORMAT.matcher(\" \" + arguments);","lastModifiedDate":"2021-11-06"},{"lineNumber":415,"author":{"gitId":"AnShengLee"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2021-11-06"},{"lineNumber":416,"author":{"gitId":"AnShengLee"},"content":"            try {","lastModifiedDate":"2021-10-04"},{"lineNumber":417,"author":{"gitId":"AnShengLee"},"content":"                double incomeAmount \u003d extractAmount(matcher);","lastModifiedDate":"2021-11-07"},{"lineNumber":418,"author":{"gitId":"kyun99"},"content":"                String incomeDescription \u003d extractDescription(matcher);","lastModifiedDate":"2021-11-07"},{"lineNumber":419,"author":{"gitId":"AnShengLee"},"content":"                IncomeCategory incomeCategory \u003d extractIncomeCategory(matcher);","lastModifiedDate":"2021-10-24"},{"lineNumber":420,"author":{"gitId":"kyun99"},"content":"                Income income \u003d new Income(incomeDescription, incomeAmount, incomeCategory);","lastModifiedDate":"2021-10-23"},{"lineNumber":421,"author":{"gitId":"AnShengLee"},"content":"                assert !incomeCategory.equals(IncomeCategory.NULL);","lastModifiedDate":"2021-10-31"},{"lineNumber":422,"author":{"gitId":"kyun99"},"content":"                return new AddIncomeCommand(income);","lastModifiedDate":"2021-10-23"},{"lineNumber":423,"author":{"gitId":"kyun99"},"content":"            } catch (InputException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":424,"author":{"gitId":"AnShengLee"},"content":"                return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-11"},{"lineNumber":425,"author":{"gitId":"AnShengLee"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":426,"author":{"gitId":"AnShengLee"},"content":"        } else {","lastModifiedDate":"2021-11-06"},{"lineNumber":427,"author":{"gitId":"AnShengLee"},"content":"            return new InvalidCommand(Messages.PARAMETERS_ERROR_MESSAGE);","lastModifiedDate":"2021-11-06"},{"lineNumber":428,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":429,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":430,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":431,"author":{"gitId":"AnShengLee"},"content":"    private Command prepareAddIncomeWithDate(String arguments) {","lastModifiedDate":"2021-11-06"},{"lineNumber":432,"author":{"gitId":"AnShengLee"},"content":"        final Matcher matcher \u003d ADD_INCOME_ARGUMENT_FORMAT_WITH_DATE.matcher(\" \" + arguments);","lastModifiedDate":"2021-11-06"},{"lineNumber":433,"author":{"gitId":"AnShengLee"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2021-11-06"},{"lineNumber":434,"author":{"gitId":"AnShengLee"},"content":"            try {","lastModifiedDate":"2021-10-31"},{"lineNumber":435,"author":{"gitId":"AnShengLee"},"content":"                double incomeAmount \u003d extractAmount(matcher);","lastModifiedDate":"2021-11-07"},{"lineNumber":436,"author":{"gitId":"kyun99"},"content":"                String incomeDescription \u003d extractDescription(matcher);","lastModifiedDate":"2021-11-07"},{"lineNumber":437,"author":{"gitId":"AnShengLee"},"content":"                IncomeCategory incomeCategory \u003d extractIncomeCategory(matcher);","lastModifiedDate":"2021-10-31"},{"lineNumber":438,"author":{"gitId":"kyun99"},"content":"                LocalDate incomeDate \u003d extractDate(matcher);","lastModifiedDate":"2021-11-07"},{"lineNumber":439,"author":{"gitId":"AnShengLee"},"content":"                Income income \u003d new Income(incomeDescription, incomeAmount, incomeCategory, incomeDate);","lastModifiedDate":"2021-10-31"},{"lineNumber":440,"author":{"gitId":"AnShengLee"},"content":"                assert !incomeCategory.equals(IncomeCategory.NULL);","lastModifiedDate":"2021-10-31"},{"lineNumber":441,"author":{"gitId":"AnShengLee"},"content":"                return new AddIncomeCommand(income);","lastModifiedDate":"2021-10-31"},{"lineNumber":442,"author":{"gitId":"AnShengLee"},"content":"            } catch (InputException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":443,"author":{"gitId":"AnShengLee"},"content":"                return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":444,"author":{"gitId":"AnShengLee"},"content":"            } catch (DateTimeParseException de) {","lastModifiedDate":"2021-11-02"},{"lineNumber":445,"author":{"gitId":"AnShengLee"},"content":"                return new InvalidCommand(Messages.INVALID_DATE_FORMAT);","lastModifiedDate":"2021-11-02"},{"lineNumber":446,"author":{"gitId":"AnShengLee"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":447,"author":{"gitId":"AnShengLee"},"content":"        } else {","lastModifiedDate":"2021-11-06"},{"lineNumber":448,"author":{"gitId":"AnShengLee"},"content":"            return new InvalidCommand(Messages.PARAMETERS_ERROR_MESSAGE);","lastModifiedDate":"2021-11-06"},{"lineNumber":449,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":450,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":451,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":452,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":453,"author":{"gitId":"AnShengLee"},"content":"     * This was adapted from addressbook-level2 source code here:","lastModifiedDate":"2021-10-03"},{"lineNumber":454,"author":{"gitId":"AnShengLee"},"content":"     * https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/parser/Parser.java","lastModifiedDate":"2021-10-03"},{"lineNumber":455,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":456,"author":{"gitId":"AnShengLee"},"content":"    private Command prepareDeleteExpense(String arguments) {","lastModifiedDate":"2021-10-03"},{"lineNumber":457,"author":{"gitId":"KZQ1999"},"content":"        final Matcher matcher \u003d DELETE_EXPENSE_ARGUMENT_FORMAT.matcher(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":458,"author":{"gitId":"AnShengLee"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":459,"author":{"gitId":"AnShengLee"},"content":"            return new InvalidCommand(Messages.PARAMETERS_ERROR_MESSAGE);","lastModifiedDate":"2021-11-02"},{"lineNumber":460,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":461,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":462,"author":{"gitId":"AnShengLee"},"content":"        String userGivenIndex \u003d matcher.group(\"index\").trim();","lastModifiedDate":"2021-10-11"},{"lineNumber":463,"author":{"gitId":"AnShengLee"},"content":"        int deleteExpenseIndex;","lastModifiedDate":"2021-10-11"},{"lineNumber":464,"author":{"gitId":"AnShengLee"},"content":"        try {","lastModifiedDate":"2021-10-03"},{"lineNumber":465,"author":{"gitId":"kyun99"},"content":"            deleteExpenseIndex \u003d extractIndex(userGivenIndex);","lastModifiedDate":"2021-11-07"},{"lineNumber":466,"author":{"gitId":"kyun99"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":467,"author":{"gitId":"AnShengLee"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-11"},{"lineNumber":468,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":469,"author":{"gitId":"AnShengLee"},"content":"        assert deleteExpenseIndex \u003e\u003d 1;","lastModifiedDate":"2021-10-11"},{"lineNumber":470,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":471,"author":{"gitId":"AnShengLee"},"content":"        return new DeleteExpenseCommand(deleteExpenseIndex);","lastModifiedDate":"2021-10-11"},{"lineNumber":472,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":473,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":474,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":475,"author":{"gitId":"AnShengLee"},"content":"     * This was adapted from addressbook-level2 source code here:","lastModifiedDate":"2021-10-03"},{"lineNumber":476,"author":{"gitId":"AnShengLee"},"content":"     * https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/parser/Parser.java","lastModifiedDate":"2021-10-03"},{"lineNumber":477,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":478,"author":{"gitId":"AnShengLee"},"content":"    private Command prepareDeleteIncome(String arguments) {","lastModifiedDate":"2021-10-03"},{"lineNumber":479,"author":{"gitId":"KZQ1999"},"content":"        final Matcher matcher \u003d DELETE_INCOME_ARGUMENT_FORMAT.matcher(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":480,"author":{"gitId":"AnShengLee"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":481,"author":{"gitId":"AnShengLee"},"content":"            return new InvalidCommand(Messages.PARAMETERS_ERROR_MESSAGE);","lastModifiedDate":"2021-11-02"},{"lineNumber":482,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":483,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":484,"author":{"gitId":"AnShengLee"},"content":"        String userGivenIndex \u003d matcher.group(\"index\").trim();","lastModifiedDate":"2021-10-11"},{"lineNumber":485,"author":{"gitId":"AnShengLee"},"content":"        int deleteIncomeIndex;","lastModifiedDate":"2021-10-11"},{"lineNumber":486,"author":{"gitId":"AnShengLee"},"content":"        try {","lastModifiedDate":"2021-10-03"},{"lineNumber":487,"author":{"gitId":"kyun99"},"content":"            deleteIncomeIndex \u003d extractIndex(userGivenIndex);","lastModifiedDate":"2021-11-07"},{"lineNumber":488,"author":{"gitId":"kyun99"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":489,"author":{"gitId":"AnShengLee"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-11"},{"lineNumber":490,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":491,"author":{"gitId":"AnShengLee"},"content":"        assert deleteIncomeIndex \u003e\u003d 1;","lastModifiedDate":"2021-10-11"},{"lineNumber":492,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":493,"author":{"gitId":"AnShengLee"},"content":"        return new DeleteIncomeCommand(deleteIncomeIndex);","lastModifiedDate":"2021-10-11"},{"lineNumber":494,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":495,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":496,"author":{"gitId":"AnShengLee"},"content":"    private Command prepareListExpense(String arguments) {","lastModifiedDate":"2021-10-04"},{"lineNumber":497,"author":{"gitId":"KZQ1999"},"content":"        if (arguments.isBlank()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":498,"author":{"gitId":"AnShengLee"},"content":"            return new ListExpenseCommand();","lastModifiedDate":"2021-10-04"},{"lineNumber":499,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":500,"author":{"gitId":"jonathanlkw"},"content":"        return new InvalidCommand(Messages.INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-13"},{"lineNumber":501,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":502,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":503,"author":{"gitId":"AnShengLee"},"content":"    private Command prepareListIncome(String arguments) {","lastModifiedDate":"2021-10-04"},{"lineNumber":504,"author":{"gitId":"KZQ1999"},"content":"        if (arguments.isBlank()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":505,"author":{"gitId":"AnShengLee"},"content":"            return new ListIncomeCommand();","lastModifiedDate":"2021-10-04"},{"lineNumber":506,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":507,"author":{"gitId":"jonathanlkw"},"content":"        return new InvalidCommand(Messages.INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-13"},{"lineNumber":508,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":509,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":510,"author":{"gitId":"AnShengLee"},"content":"    private Command prepareTotalExpense(String arguments) {","lastModifiedDate":"2021-10-04"},{"lineNumber":511,"author":{"gitId":"KZQ1999"},"content":"        if (arguments.isBlank()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":512,"author":{"gitId":"AnShengLee"},"content":"            return new TotalExpenseCommand();","lastModifiedDate":"2021-10-04"},{"lineNumber":513,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":514,"author":{"gitId":"jonathanlkw"},"content":"        return new InvalidCommand(Messages.INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-13"},{"lineNumber":515,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":516,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":517,"author":{"gitId":"AnShengLee"},"content":"    private Command prepareTotalIncome(String arguments) {","lastModifiedDate":"2021-10-04"},{"lineNumber":518,"author":{"gitId":"KZQ1999"},"content":"        if (arguments.isBlank()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":519,"author":{"gitId":"AnShengLee"},"content":"            return new TotalIncomeCommand();","lastModifiedDate":"2021-10-04"},{"lineNumber":520,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":521,"author":{"gitId":"jonathanlkw"},"content":"        return new InvalidCommand(Messages.INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-13"},{"lineNumber":522,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":523,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":524,"author":{"gitId":"AnShengLee"},"content":"    private Command prepareClearAllEntries(String arguments) {","lastModifiedDate":"2021-10-19"},{"lineNumber":525,"author":{"gitId":"KZQ1999"},"content":"        if (arguments.isBlank()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":526,"author":{"gitId":"AnShengLee"},"content":"            return new ClearAllEntriesCommand();","lastModifiedDate":"2021-10-19"},{"lineNumber":527,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":528,"author":{"gitId":"AnShengLee"},"content":"        return new InvalidCommand(Messages.INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-19"},{"lineNumber":529,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":530,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":531,"author":{"gitId":"AnShengLee"},"content":"    private Command prepareShowGraph(String arguments) {","lastModifiedDate":"2021-10-19"},{"lineNumber":532,"author":{"gitId":"KZQ1999"},"content":"        if (arguments.isBlank()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":533,"author":{"gitId":"AnShengLee"},"content":"            return new ShowGraphCommand();","lastModifiedDate":"2021-10-19"},{"lineNumber":534,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":535,"author":{"gitId":"kyun99"},"content":"        final Matcher matcher \u003d SHOW_GRAPH_BY_YEAR_FORMAT.matcher(arguments);","lastModifiedDate":"2021-11-05"},{"lineNumber":536,"author":{"gitId":"kyun99"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2021-11-05"},{"lineNumber":537,"author":{"gitId":"kyun99"},"content":"            try {","lastModifiedDate":"2021-11-05"},{"lineNumber":538,"author":{"gitId":"kyun99"},"content":"                DateTimeFormatter yearFormat \u003d getYearFormat();","lastModifiedDate":"2021-11-05"},{"lineNumber":539,"author":{"gitId":"kyun99"},"content":"                String userGivenYear \u003d matcher.group(\"year\").trim();","lastModifiedDate":"2021-11-05"},{"lineNumber":540,"author":{"gitId":"kyun99"},"content":"                LocalDate year \u003d LocalDate.parse(userGivenYear, yearFormat);","lastModifiedDate":"2021-11-05"},{"lineNumber":541,"author":{"gitId":"kyun99"},"content":"                return new ShowGraphByYearCommand(year);","lastModifiedDate":"2021-11-05"},{"lineNumber":542,"author":{"gitId":"kyun99"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":543,"author":{"gitId":"kyun99"},"content":"                return new InvalidCommand(Messages.INVALID_YEAR_MESSAGE);","lastModifiedDate":"2021-11-05"},{"lineNumber":544,"author":{"gitId":"kyun99"},"content":"            }","lastModifiedDate":"2021-11-05"},{"lineNumber":545,"author":{"gitId":"kyun99"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":546,"author":{"gitId":"AnShengLee"},"content":"        return new InvalidCommand(Messages.INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-19"},{"lineNumber":547,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":548,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":549,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":550,"author":{"gitId":"AnShengLee"},"content":"    private Command prepareCheckCurrentCurrency(String arguments) {","lastModifiedDate":"2021-10-27"},{"lineNumber":551,"author":{"gitId":"AnShengLee"},"content":"        if (arguments.isBlank()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":552,"author":{"gitId":"AnShengLee"},"content":"            return new CheckCurrentCurrencyCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":553,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":554,"author":{"gitId":"AnShengLee"},"content":"        return new InvalidCommand(Messages.INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-27"},{"lineNumber":555,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":556,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":557,"author":{"gitId":"AnShengLee"},"content":"    private Command prepareExit(String arguments) {","lastModifiedDate":"2021-10-04"},{"lineNumber":558,"author":{"gitId":"KZQ1999"},"content":"        if (arguments.isBlank()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":559,"author":{"gitId":"AnShengLee"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-10-04"},{"lineNumber":560,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":561,"author":{"gitId":"jonathanlkw"},"content":"        return new InvalidCommand(Messages.INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-13"},{"lineNumber":562,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":563,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":564,"author":{"gitId":"AnShengLee"},"content":"    private boolean hasMoreThanTwoDecimalPlaces(String userGivenAmount) {","lastModifiedDate":"2021-11-02"},{"lineNumber":565,"author":{"gitId":"AnShengLee"},"content":"        boolean hasDecimal \u003d userGivenAmount.contains(\".\");","lastModifiedDate":"2021-11-02"},{"lineNumber":566,"author":{"gitId":"AnShengLee"},"content":"        if (hasDecimal) {","lastModifiedDate":"2021-11-02"},{"lineNumber":567,"author":{"gitId":"AnShengLee"},"content":"            int indexOfDecimal \u003d userGivenAmount.indexOf(\".\");","lastModifiedDate":"2021-11-02"},{"lineNumber":568,"author":{"gitId":"AnShengLee"},"content":"            String decimals \u003d userGivenAmount.substring(indexOfDecimal + 1);","lastModifiedDate":"2021-11-02"},{"lineNumber":569,"author":{"gitId":"AnShengLee"},"content":"            int numOfDecimalPlaces \u003d decimals.length();","lastModifiedDate":"2021-11-02"},{"lineNumber":570,"author":{"gitId":"AnShengLee"},"content":"            return numOfDecimalPlaces \u003e 2;","lastModifiedDate":"2021-11-02"},{"lineNumber":571,"author":{"gitId":"AnShengLee"},"content":"        } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":572,"author":{"gitId":"AnShengLee"},"content":"            return false;","lastModifiedDate":"2021-11-02"},{"lineNumber":573,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":574,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":575,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":576,"author":{"gitId":"jonathanlkw"},"content":"    private Command prepareSetBudget(String arguments) {","lastModifiedDate":"2021-10-20"},{"lineNumber":577,"author":{"gitId":"AnShengLee"},"content":"        final Matcher matcher \u003d SET_BUDGET_ARGUMENT_FORMAT.matcher(\" \" + arguments);","lastModifiedDate":"2021-11-06"},{"lineNumber":578,"author":{"gitId":"jonathanlkw"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":579,"author":{"gitId":"AnShengLee"},"content":"            return new InvalidCommand(Messages.PARAMETERS_ERROR_MESSAGE);","lastModifiedDate":"2021-11-02"},{"lineNumber":580,"author":{"gitId":"jonathanlkw"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":581,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":582,"author":{"gitId":"jonathanlkw"},"content":"        double budgetAmount;","lastModifiedDate":"2021-10-20"},{"lineNumber":583,"author":{"gitId":"jonathanlkw"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":584,"author":{"gitId":"jonathanlkw"},"content":"            budgetAmount \u003d extractBudgetAmount(matcher);","lastModifiedDate":"2021-11-07"},{"lineNumber":585,"author":{"gitId":"jonathanlkw"},"content":"        } catch (InvalidBudgetAmountException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":586,"author":{"gitId":"jonathanlkw"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-11-07"},{"lineNumber":587,"author":{"gitId":"jonathanlkw"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":588,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":589,"author":{"gitId":"jonathanlkw"},"content":"        String expenseCategory \u003d matcher.group(\"category\").trim().toUpperCase();","lastModifiedDate":"2021-10-20"},{"lineNumber":590,"author":{"gitId":"jonathanlkw"},"content":"        switch (expenseCategory) {","lastModifiedDate":"2021-10-20"},{"lineNumber":591,"author":{"gitId":"jonathanlkw"},"content":"        case \"FOOD\":","lastModifiedDate":"2021-10-20"},{"lineNumber":592,"author":{"gitId":"jonathanlkw"},"content":"            return new SetBudgetCommand(ExpenseCategory.FOOD, budgetAmount);","lastModifiedDate":"2021-10-20"},{"lineNumber":593,"author":{"gitId":"jonathanlkw"},"content":"        case \"TRANSPORT\":","lastModifiedDate":"2021-10-20"},{"lineNumber":594,"author":{"gitId":"jonathanlkw"},"content":"            return new SetBudgetCommand(ExpenseCategory.TRANSPORT, budgetAmount);","lastModifiedDate":"2021-10-20"},{"lineNumber":595,"author":{"gitId":"jonathanlkw"},"content":"        case \"MEDICAL\":","lastModifiedDate":"2021-10-20"},{"lineNumber":596,"author":{"gitId":"jonathanlkw"},"content":"            return new SetBudgetCommand(ExpenseCategory.MEDICAL, budgetAmount);","lastModifiedDate":"2021-10-20"},{"lineNumber":597,"author":{"gitId":"jonathanlkw"},"content":"        case \"BILLS\":","lastModifiedDate":"2021-10-20"},{"lineNumber":598,"author":{"gitId":"jonathanlkw"},"content":"            return new SetBudgetCommand(ExpenseCategory.BILLS, budgetAmount);","lastModifiedDate":"2021-10-20"},{"lineNumber":599,"author":{"gitId":"jonathanlkw"},"content":"        case \"ENTERTAINMENT\":","lastModifiedDate":"2021-10-20"},{"lineNumber":600,"author":{"gitId":"jonathanlkw"},"content":"            return new SetBudgetCommand(ExpenseCategory.ENTERTAINMENT, budgetAmount);","lastModifiedDate":"2021-10-20"},{"lineNumber":601,"author":{"gitId":"jonathanlkw"},"content":"        case \"MISC\":","lastModifiedDate":"2021-10-20"},{"lineNumber":602,"author":{"gitId":"jonathanlkw"},"content":"            return new SetBudgetCommand(ExpenseCategory.MISC, budgetAmount);","lastModifiedDate":"2021-10-20"},{"lineNumber":603,"author":{"gitId":"jonathanlkw"},"content":"        case \"OVERALL\":","lastModifiedDate":"2021-10-20"},{"lineNumber":604,"author":{"gitId":"jonathanlkw"},"content":"            return new SetBudgetCommand(ExpenseCategory.OVERALL, budgetAmount);","lastModifiedDate":"2021-10-20"},{"lineNumber":605,"author":{"gitId":"jonathanlkw"},"content":"        default:","lastModifiedDate":"2021-10-20"},{"lineNumber":606,"author":{"gitId":"jonathanlkw"},"content":"            return new InvalidCommand(Messages.INVALID_BUDGET_CATEGORY_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":607,"author":{"gitId":"jonathanlkw"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":608,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":609,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":610,"author":{"gitId":"jonathanlkw"},"content":"    private Command prepareCheckBudget(String arguments) {","lastModifiedDate":"2021-10-20"},{"lineNumber":611,"author":{"gitId":"jonathanlkw"},"content":"        final Matcher matcher \u003d CHECK_BUDGET_ARGUMENT_FORMAT.matcher(arguments.trim());","lastModifiedDate":"2021-10-20"},{"lineNumber":612,"author":{"gitId":"jonathanlkw"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":613,"author":{"gitId":"AnShengLee"},"content":"            return new InvalidCommand(Messages.PARAMETERS_ERROR_MESSAGE);","lastModifiedDate":"2021-11-02"},{"lineNumber":614,"author":{"gitId":"jonathanlkw"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":615,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":616,"author":{"gitId":"jonathanlkw"},"content":"        String expenseCategory \u003d matcher.group(\"category\").trim().toUpperCase();","lastModifiedDate":"2021-10-20"},{"lineNumber":617,"author":{"gitId":"jonathanlkw"},"content":"        if (expenseCategory.isBlank()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":618,"author":{"gitId":"jonathanlkw"},"content":"            return new InvalidCommand(Messages.BLANK_CATEGORY_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":619,"author":{"gitId":"jonathanlkw"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":620,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":621,"author":{"gitId":"jonathanlkw"},"content":"        switch (expenseCategory) {","lastModifiedDate":"2021-10-20"},{"lineNumber":622,"author":{"gitId":"jonathanlkw"},"content":"        case \"FOOD\":","lastModifiedDate":"2021-10-20"},{"lineNumber":623,"author":{"gitId":"jonathanlkw"},"content":"            return new CheckBudgetCommand(ExpenseCategory.FOOD);","lastModifiedDate":"2021-10-20"},{"lineNumber":624,"author":{"gitId":"jonathanlkw"},"content":"        case \"TRANSPORT\":","lastModifiedDate":"2021-10-20"},{"lineNumber":625,"author":{"gitId":"jonathanlkw"},"content":"            return new CheckBudgetCommand(ExpenseCategory.TRANSPORT);","lastModifiedDate":"2021-10-20"},{"lineNumber":626,"author":{"gitId":"jonathanlkw"},"content":"        case \"MEDICAL\":","lastModifiedDate":"2021-10-20"},{"lineNumber":627,"author":{"gitId":"jonathanlkw"},"content":"            return new CheckBudgetCommand(ExpenseCategory.MEDICAL);","lastModifiedDate":"2021-10-20"},{"lineNumber":628,"author":{"gitId":"jonathanlkw"},"content":"        case \"BILLS\":","lastModifiedDate":"2021-10-20"},{"lineNumber":629,"author":{"gitId":"jonathanlkw"},"content":"            return new CheckBudgetCommand(ExpenseCategory.BILLS);","lastModifiedDate":"2021-10-20"},{"lineNumber":630,"author":{"gitId":"jonathanlkw"},"content":"        case \"ENTERTAINMENT\":","lastModifiedDate":"2021-10-20"},{"lineNumber":631,"author":{"gitId":"jonathanlkw"},"content":"            return new CheckBudgetCommand(ExpenseCategory.ENTERTAINMENT);","lastModifiedDate":"2021-10-20"},{"lineNumber":632,"author":{"gitId":"jonathanlkw"},"content":"        case \"MISC\":","lastModifiedDate":"2021-10-20"},{"lineNumber":633,"author":{"gitId":"jonathanlkw"},"content":"            return new CheckBudgetCommand(ExpenseCategory.MISC);","lastModifiedDate":"2021-10-20"},{"lineNumber":634,"author":{"gitId":"jonathanlkw"},"content":"        case \"OVERALL\":","lastModifiedDate":"2021-10-20"},{"lineNumber":635,"author":{"gitId":"jonathanlkw"},"content":"            return new CheckBudgetCommand(ExpenseCategory.OVERALL);","lastModifiedDate":"2021-10-20"},{"lineNumber":636,"author":{"gitId":"jonathanlkw"},"content":"        default:","lastModifiedDate":"2021-10-20"},{"lineNumber":637,"author":{"gitId":"jonathanlkw"},"content":"            return new InvalidCommand(Messages.INVALID_BUDGET_CATEGORY_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":638,"author":{"gitId":"jonathanlkw"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":639,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":640,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":641,"author":{"gitId":"jonathanlkw"},"content":"    private Command prepareSetThreshold(String arguments) {","lastModifiedDate":"2021-10-20"},{"lineNumber":642,"author":{"gitId":"jonathanlkw"},"content":"        final Matcher matcher \u003d SET_THRESHOLD_ARGUMENT_FORMAT.matcher(arguments.trim());","lastModifiedDate":"2021-10-20"},{"lineNumber":643,"author":{"gitId":"jonathanlkw"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":644,"author":{"gitId":"AnShengLee"},"content":"            return new InvalidCommand(Messages.PARAMETERS_ERROR_MESSAGE);","lastModifiedDate":"2021-11-02"},{"lineNumber":645,"author":{"gitId":"jonathanlkw"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":646,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":647,"author":{"gitId":"jonathanlkw"},"content":"        double thresholdValue;","lastModifiedDate":"2021-10-20"},{"lineNumber":648,"author":{"gitId":"jonathanlkw"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":649,"author":{"gitId":"AnShengLee"},"content":"            thresholdValue \u003d extractThresholdValue(matcher);","lastModifiedDate":"2021-11-01"},{"lineNumber":650,"author":{"gitId":"AnShengLee"},"content":"        } catch (InvalidThresholdValueException e) {","lastModifiedDate":"2021-11-01"},{"lineNumber":651,"author":{"gitId":"AnShengLee"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-11-01"},{"lineNumber":652,"author":{"gitId":"jonathanlkw"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":653,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":654,"author":{"gitId":"jonathanlkw"},"content":"        return new SetThresholdCommand(thresholdValue);","lastModifiedDate":"2021-10-20"},{"lineNumber":655,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":656,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":657,"author":{"gitId":"Nirmaleshwar"},"content":"    private Command prepareConvertCurrency(String arguments) {","lastModifiedDate":"2021-11-02"},{"lineNumber":658,"author":{"gitId":"Nirmaleshwar"},"content":"        final Matcher matcher \u003d CURRENCY_CONVERSION_FORMAT.matcher(arguments);","lastModifiedDate":"2021-11-02"},{"lineNumber":659,"author":{"gitId":"AnShengLee"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2021-11-06"},{"lineNumber":660,"author":{"gitId":"Nirmaleshwar"},"content":"            try {","lastModifiedDate":"2021-11-02"},{"lineNumber":661,"author":{"gitId":"Nirmaleshwar"},"content":"                CurrencyType newCurrencyType \u003d extractCurrencyType(matcher);","lastModifiedDate":"2021-11-02"},{"lineNumber":662,"author":{"gitId":"Nirmaleshwar"},"content":"                return new CurrencyConversionCommand(newCurrencyType);","lastModifiedDate":"2021-11-02"},{"lineNumber":663,"author":{"gitId":"Nirmaleshwar"},"content":"            } catch (InputException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":664,"author":{"gitId":"Nirmaleshwar"},"content":"                return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-11-02"},{"lineNumber":665,"author":{"gitId":"Nirmaleshwar"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":666,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":667,"author":{"gitId":"Nirmaleshwar"},"content":"        return new InvalidCommand(Messages.INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-11-02"},{"lineNumber":668,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":669,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":670,"author":{"gitId":"Nirmaleshwar"},"content":"    private CurrencyType extractCurrencyType(Matcher matcher)","lastModifiedDate":"2021-11-02"},{"lineNumber":671,"author":{"gitId":"Nirmaleshwar"},"content":"            throws BlankCurrencyTypeException, InvalidCurrencyTypeException {","lastModifiedDate":"2021-11-02"},{"lineNumber":672,"author":{"gitId":"Nirmaleshwar"},"content":"        String newCurrency \u003d matcher.group(\"currency\").trim();","lastModifiedDate":"2021-11-02"},{"lineNumber":673,"author":{"gitId":"Nirmaleshwar"},"content":"        if (newCurrency.isBlank()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":674,"author":{"gitId":"Nirmaleshwar"},"content":"            throw new BlankCurrencyTypeException(Messages.BLANK_CURRENCY_TYPE_MESSAGE);","lastModifiedDate":"2021-11-02"},{"lineNumber":675,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":676,"author":{"gitId":"Nirmaleshwar"},"content":"        switch (newCurrency.toUpperCase()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":677,"author":{"gitId":"Nirmaleshwar"},"content":"        case \"USD\":","lastModifiedDate":"2021-11-02"},{"lineNumber":678,"author":{"gitId":"Nirmaleshwar"},"content":"            return CurrencyType.USD;","lastModifiedDate":"2021-11-02"},{"lineNumber":679,"author":{"gitId":"Nirmaleshwar"},"content":"        case \"SGD\":","lastModifiedDate":"2021-11-02"},{"lineNumber":680,"author":{"gitId":"Nirmaleshwar"},"content":"            return CurrencyType.SGD;","lastModifiedDate":"2021-11-02"},{"lineNumber":681,"author":{"gitId":"Nirmaleshwar"},"content":"        default:","lastModifiedDate":"2021-11-02"},{"lineNumber":682,"author":{"gitId":"Nirmaleshwar"},"content":"            throw new InvalidCurrencyTypeException(Messages.INVALID_CURRENCY_TYPE_MESSAGE);","lastModifiedDate":"2021-11-02"},{"lineNumber":683,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":684,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":685,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":686,"author":{"gitId":"Nirmaleshwar"},"content":"    private Command prepareListCurrencyTypes(String arguments) {","lastModifiedDate":"2021-11-02"},{"lineNumber":687,"author":{"gitId":"Nirmaleshwar"},"content":"        if (arguments.isBlank()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":688,"author":{"gitId":"Nirmaleshwar"},"content":"            return new ListCurrencyTypesCommand();","lastModifiedDate":"2021-11-02"},{"lineNumber":689,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":690,"author":{"gitId":"Nirmaleshwar"},"content":"        return new InvalidCommand(Messages.INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-11-02"},{"lineNumber":691,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":692,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":693,"author":{"gitId":"AnShengLee"},"content":"    public String convertExpenseToData(Expense expense) {","lastModifiedDate":"2021-11-07"},{"lineNumber":694,"author":{"gitId":"AnShengLee"},"content":"        return \"E\" + DATA_SEPARATOR + expense.getDescription() + DATA_SEPARATOR + expense.getValue() + DATA_SEPARATOR","lastModifiedDate":"2021-11-07"},{"lineNumber":695,"author":{"gitId":"AnShengLee"},"content":"                + expense.getCategory() + DATA_SEPARATOR","lastModifiedDate":"2021-11-07"},{"lineNumber":696,"author":{"gitId":"AnShengLee"},"content":"                + expense.getDate().format(DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-11-07"},{"lineNumber":697,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":698,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":699,"author":{"gitId":"AnShengLee"},"content":"    public String convertIncomeToData(Income income) {","lastModifiedDate":"2021-11-07"},{"lineNumber":700,"author":{"gitId":"AnShengLee"},"content":"        return \"I\" + DATA_SEPARATOR + income.getDescription() + DATA_SEPARATOR + income.getValue() + DATA_SEPARATOR","lastModifiedDate":"2021-11-07"},{"lineNumber":701,"author":{"gitId":"AnShengLee"},"content":"                + income.getCategory() + DATA_SEPARATOR","lastModifiedDate":"2021-11-07"},{"lineNumber":702,"author":{"gitId":"AnShengLee"},"content":"                + income.getDate().format(DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-11-07"},{"lineNumber":703,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":704,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":705,"author":{"gitId":"AnShengLee"},"content":"    public Expense convertDataToExpense(String data) throws InputException, InvalidExpenseDataFormatException,","lastModifiedDate":"2021-11-07"},{"lineNumber":706,"author":{"gitId":"AnShengLee"},"content":"            DateTimeParseException {","lastModifiedDate":"2021-11-07"},{"lineNumber":707,"author":{"gitId":"AnShengLee"},"content":"        final Matcher matcher \u003d EXPENSE_DATA_FORMAT.matcher(data.trim());","lastModifiedDate":"2021-11-07"},{"lineNumber":708,"author":{"gitId":"AnShengLee"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":709,"author":{"gitId":"AnShengLee"},"content":"            String expenseDescription \u003d extractDescription(matcher);","lastModifiedDate":"2021-11-07"},{"lineNumber":710,"author":{"gitId":"AnShengLee"},"content":"            double expenseAmount \u003d extractAmount(matcher);","lastModifiedDate":"2021-11-07"},{"lineNumber":711,"author":{"gitId":"AnShengLee"},"content":"            ExpenseCategory expenseCategory \u003d extractExpenseCategory(matcher);","lastModifiedDate":"2021-11-07"},{"lineNumber":712,"author":{"gitId":"AnShengLee"},"content":"            LocalDate expenseDate \u003d extractDate(matcher);","lastModifiedDate":"2021-11-07"},{"lineNumber":713,"author":{"gitId":"AnShengLee"},"content":"            assert expenseAmount \u003e 0;","lastModifiedDate":"2021-11-07"},{"lineNumber":714,"author":{"gitId":"AnShengLee"},"content":"            assert !expenseDescription.isBlank();","lastModifiedDate":"2021-11-07"},{"lineNumber":715,"author":{"gitId":"AnShengLee"},"content":"            return new Expense(expenseDescription, expenseAmount, expenseCategory, expenseDate);","lastModifiedDate":"2021-11-07"},{"lineNumber":716,"author":{"gitId":"AnShengLee"},"content":"        } else {","lastModifiedDate":"2021-11-07"},{"lineNumber":717,"author":{"gitId":"AnShengLee"},"content":"            throw new InvalidExpenseDataFormatException();","lastModifiedDate":"2021-11-07"},{"lineNumber":718,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":719,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":720,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":721,"author":{"gitId":"AnShengLee"},"content":"    public Income convertDataToIncome(String data) throws InputException, InvalidIncomeDataFormatException,","lastModifiedDate":"2021-11-07"},{"lineNumber":722,"author":{"gitId":"AnShengLee"},"content":"            DateTimeParseException {","lastModifiedDate":"2021-11-07"},{"lineNumber":723,"author":{"gitId":"AnShengLee"},"content":"        final Matcher matcher \u003d INCOME_DATA_FORMAT.matcher(data.trim());","lastModifiedDate":"2021-11-07"},{"lineNumber":724,"author":{"gitId":"AnShengLee"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":725,"author":{"gitId":"AnShengLee"},"content":"            String incomeDescription \u003d extractDescription(matcher);","lastModifiedDate":"2021-11-07"},{"lineNumber":726,"author":{"gitId":"AnShengLee"},"content":"            double incomeAmount \u003d extractAmount(matcher);","lastModifiedDate":"2021-11-07"},{"lineNumber":727,"author":{"gitId":"AnShengLee"},"content":"            IncomeCategory incomeCategory \u003d extractIncomeCategory(matcher);","lastModifiedDate":"2021-11-07"},{"lineNumber":728,"author":{"gitId":"AnShengLee"},"content":"            LocalDate incomeDate \u003d extractDate(matcher);","lastModifiedDate":"2021-11-07"},{"lineNumber":729,"author":{"gitId":"AnShengLee"},"content":"            assert incomeAmount \u003e 0;","lastModifiedDate":"2021-11-07"},{"lineNumber":730,"author":{"gitId":"AnShengLee"},"content":"            assert !incomeDescription.isBlank();","lastModifiedDate":"2021-11-07"},{"lineNumber":731,"author":{"gitId":"AnShengLee"},"content":"            return new Income(incomeDescription, incomeAmount, incomeCategory, incomeDate);","lastModifiedDate":"2021-11-07"},{"lineNumber":732,"author":{"gitId":"AnShengLee"},"content":"        } else {","lastModifiedDate":"2021-11-07"},{"lineNumber":733,"author":{"gitId":"AnShengLee"},"content":"            throw new InvalidIncomeDataFormatException();","lastModifiedDate":"2021-11-07"},{"lineNumber":734,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":735,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":736,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":737,"author":{"gitId":"AnShengLee"},"content":"    public String convertSettingsToData(BudgetManager budgetManager, CurrencyManager currencyManager) {","lastModifiedDate":"2021-11-03"},{"lineNumber":738,"author":{"gitId":"Nirmaleshwar"},"content":"        CurrencyType currency \u003d currencyManager.getCurrency();","lastModifiedDate":"2021-11-02"},{"lineNumber":739,"author":{"gitId":"AnShengLee"},"content":"        StringBuilder data \u003d new StringBuilder(currency.toString() + \",\");","lastModifiedDate":"2021-10-27"},{"lineNumber":740,"author":{"gitId":"AnShengLee"},"content":"        data.append(budgetManager.getThreshold()).append(\",\");","lastModifiedDate":"2021-11-01"},{"lineNumber":741,"author":{"gitId":"AnShengLee"},"content":"        for (ExpenseCategory category : ExpenseCategory.values()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":742,"author":{"gitId":"jonathanlkw"},"content":"            // NULL is the category after MISC. We do not expect NULL to have a value thus we break here.","lastModifiedDate":"2021-11-07"},{"lineNumber":743,"author":{"gitId":"jonathanlkw"},"content":"            if (category \u003d\u003d ExpenseCategory.MISC) {","lastModifiedDate":"2021-11-07"},{"lineNumber":744,"author":{"gitId":"AnShengLee"},"content":"                data.append(budgetManager.getBudget(category));","lastModifiedDate":"2021-10-25"},{"lineNumber":745,"author":{"gitId":"AnShengLee"},"content":"                break;","lastModifiedDate":"2021-10-25"},{"lineNumber":746,"author":{"gitId":"AnShengLee"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":747,"author":{"gitId":"AnShengLee"},"content":"            data.append(budgetManager.getBudget(category));","lastModifiedDate":"2021-10-25"},{"lineNumber":748,"author":{"gitId":"AnShengLee"},"content":"            data.append(DATA_SEPARATOR);","lastModifiedDate":"2021-10-25"},{"lineNumber":749,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":750,"author":{"gitId":"AnShengLee"},"content":"        return data.toString();","lastModifiedDate":"2021-10-25"},{"lineNumber":751,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":752,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":753,"author":{"gitId":"AnShengLee"},"content":"    public CurrencyType convertDataToCurrencySetting(String data) throws InvalidCurrencyTypeException,","lastModifiedDate":"2021-10-27"},{"lineNumber":754,"author":{"gitId":"AnShengLee"},"content":"            BlankCurrencyTypeException, InvalidSettingsDataException {","lastModifiedDate":"2021-10-27"},{"lineNumber":755,"author":{"gitId":"AnShengLee"},"content":"        final Matcher matcher \u003d SETTINGS_DATA_FORMAT.matcher(data.trim());","lastModifiedDate":"2021-10-27"},{"lineNumber":756,"author":{"gitId":"AnShengLee"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":757,"author":{"gitId":"AnShengLee"},"content":"            return extractCurrencyType(matcher);","lastModifiedDate":"2021-10-27"},{"lineNumber":758,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":759,"author":{"gitId":"AnShengLee"},"content":"        throw new InvalidSettingsDataException();","lastModifiedDate":"2021-10-27"},{"lineNumber":760,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":761,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":762,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":763,"author":{"gitId":"AnShengLee"},"content":"    public double convertDataToThresholdSetting(String data) throws InvalidThresholdValueException,","lastModifiedDate":"2021-11-01"},{"lineNumber":764,"author":{"gitId":"AnShengLee"},"content":"            InvalidSettingsDataException {","lastModifiedDate":"2021-11-01"},{"lineNumber":765,"author":{"gitId":"AnShengLee"},"content":"        final Matcher matcher \u003d SETTINGS_DATA_FORMAT.matcher(data.trim());","lastModifiedDate":"2021-11-01"},{"lineNumber":766,"author":{"gitId":"AnShengLee"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":767,"author":{"gitId":"AnShengLee"},"content":"            return extractThresholdValue(matcher);","lastModifiedDate":"2021-11-01"},{"lineNumber":768,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":769,"author":{"gitId":"AnShengLee"},"content":"        throw new InvalidSettingsDataException();","lastModifiedDate":"2021-11-01"},{"lineNumber":770,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":771,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":772,"author":{"gitId":"AnShengLee"},"content":"    public ArrayList\u003cDouble\u003e convertDataToBudgetSettings(String data) throws NumberFormatException,","lastModifiedDate":"2021-11-07"},{"lineNumber":773,"author":{"gitId":"AnShengLee"},"content":"            NullPointerException, InvalidSettingsDataException {","lastModifiedDate":"2021-11-07"},{"lineNumber":774,"author":{"gitId":"AnShengLee"},"content":"        ArrayList\u003cDouble\u003e budgetSettings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-07"},{"lineNumber":775,"author":{"gitId":"AnShengLee"},"content":"        final Matcher matcher \u003d SETTINGS_DATA_FORMAT.matcher(data.trim());","lastModifiedDate":"2021-11-07"},{"lineNumber":776,"author":{"gitId":"AnShengLee"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":777,"author":{"gitId":"AnShengLee"},"content":"            for (ExpenseCategory category : ExpenseCategory.values()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":778,"author":{"gitId":"AnShengLee"},"content":"                // Not expected to have a budget related to NULL","lastModifiedDate":"2021-11-07"},{"lineNumber":779,"author":{"gitId":"AnShengLee"},"content":"                if (category \u003d\u003d ExpenseCategory.NULL) {","lastModifiedDate":"2021-11-07"},{"lineNumber":780,"author":{"gitId":"AnShengLee"},"content":"                    break;","lastModifiedDate":"2021-11-07"},{"lineNumber":781,"author":{"gitId":"AnShengLee"},"content":"                }","lastModifiedDate":"2021-11-07"},{"lineNumber":782,"author":{"gitId":"AnShengLee"},"content":"                budgetSettings.add(Double.parseDouble(matcher.group(category.toString().toLowerCase())));","lastModifiedDate":"2021-11-07"},{"lineNumber":783,"author":{"gitId":"AnShengLee"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":784,"author":{"gitId":"AnShengLee"},"content":"            return budgetSettings;","lastModifiedDate":"2021-11-07"},{"lineNumber":785,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":786,"author":{"gitId":"AnShengLee"},"content":"        throw new InvalidSettingsDataException();","lastModifiedDate":"2021-11-07"},{"lineNumber":787,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":788,"author":{"gitId":"AnShengLee"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"kyun99":105,"AnShengLee":493,"Nirmaleshwar":65,"KZQ1999":25,"jonathanlkw":100}},{"path":"src/main/java/seedu/utility/StonksGraph.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.utility;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"KZQ1999"},"content":"import seedu.utility.tools.DateOperator;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"AnShengLee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"AnShengLee"},"content":"import java.time.Month;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"KZQ1999"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"KZQ1999"},"content":"import java.util.Collections;","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"KZQ1999"},"content":"public class StonksGraph {","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"KZQ1999"},"content":"    private static final int ROWS \u003d 20;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"KZQ1999"},"content":"    private static final int COLS \u003d 100;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"KZQ1999"},"content":"    private static final int ROWS_OFFSET \u003d ROWS - 1;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"KZQ1999"},"content":"    private static final int COLS_OFFSET \u003d COLS - 1;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"KZQ1999"},"content":"    private static final char INCOME_BAR \u003d \u0027o\u0027;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"KZQ1999"},"content":"    private static final char EXPENSE_BAR \u003d \u0027#\u0027;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"KZQ1999"},"content":"    private static final char X_AXIS_CHAR \u003d \u0027~\u0027;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"KZQ1999"},"content":"    private static final char SEPARATOR_CHAR \u003d \u0027-\u0027;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"KZQ1999"},"content":"    private static final char BORDER_CHAR \u003d \u0027x\u0027;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"KZQ1999"},"content":"    private static final char NON_BORDER_CHAR \u003d \u0027 \u0027;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"KZQ1999"},"content":"    private final char[][] grid \u003d new char [ROWS][COLS];","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"KZQ1999"},"content":"     * Constructor for the StonksGraph which firsts set the border, then the balance and finally the report itself.","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"kyun99"},"content":"    public StonksGraph(FinancialTracker finances, int year) {","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"KZQ1999"},"content":"        drawBorder();","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"KZQ1999"},"content":"        drawBalance(finances.calculateBalance());","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"kyun99"},"content":"        drawReport(finances, year);","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"kyun99"},"content":"    @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"kyun99"},"content":"    public String toString() {","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"kyun99"},"content":"        return convertGridToString();","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"KZQ1999"},"content":"     * Returns true it\u0027s within the rows where the barchart is supposed to be.","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"KZQ1999"},"content":"    private boolean isWithinRowsConsistingOfBarGraph(int x) {","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"KZQ1999"},"content":"        return x \u003e\u003d 7 \u0026\u0026 x \u003c 17;","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"KZQ1999"},"content":"    private boolean isBorder(int x, int y) {","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"KZQ1999"},"content":"        return x \u003d\u003d 0 || y \u003d\u003d 0 || x \u003d\u003d ROWS_OFFSET || y \u003d\u003d COLS_OFFSET;","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"KZQ1999"},"content":"     * Returns true if position is that of each month\u0027s expense bar.","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"KZQ1999"},"content":"    private boolean isExpenseBar(int y) {","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"KZQ1999"},"content":"        return y \u003d\u003d 4 || y \u003d\u003d 12 || y \u003d\u003d 20 || y \u003d\u003d 28 || y \u003d\u003d 36 || y \u003d\u003d 44 || y \u003d\u003d 52 || y \u003d\u003d 60","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"KZQ1999"},"content":"                || y \u003d\u003d 68 || y \u003d\u003d 76 || y \u003d\u003d 84 || y \u003d\u003d 92;","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"KZQ1999"},"content":"     * Returns true if position is that of each month\u0027s income bar.","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"KZQ1999"},"content":"    private boolean isIncomeBar(int y) {","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"KZQ1999"},"content":"        return y \u003d\u003d 5 || y \u003d\u003d 13 || y \u003d\u003d 21 || y \u003d\u003d 29 || y \u003d\u003d 37 || y \u003d\u003d 45 || y \u003d\u003d 53 || y \u003d\u003d 61","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"KZQ1999"},"content":"                || y \u003d\u003d 69 || y \u003d\u003d 77 || y \u003d\u003d 85 || y \u003d\u003d 93;","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"KZQ1999"},"content":"    private void drawBorder() {","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"KZQ1999"},"content":"        for (int x \u003d 0; x \u003c ROWS; x++) {","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"KZQ1999"},"content":"            for (int y \u003d 0; y \u003c COLS; y++) {","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"KZQ1999"},"content":"                if (isBorder(x, y)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"KZQ1999"},"content":"                    grid[x][y] \u003d BORDER_CHAR;","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"KZQ1999"},"content":"                } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"KZQ1999"},"content":"                    grid[x][y] \u003d NON_BORDER_CHAR;","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"KZQ1999"},"content":"                }","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"KZQ1999"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"KZQ1999"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"KZQ1999"},"content":"    ","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"KZQ1999"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"KZQ1999"},"content":"    private void drawBalance(double balance) {","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"KZQ1999"},"content":"        String stringAmount \u003d String.format(\"$%.2f\", balance);","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":82,"author":{"gitId":"KZQ1999"},"content":"        assert (stringAmount.length() \u003c\u003d 30) : \"Size should be \u003c\u003d 30\";","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"KZQ1999"},"content":"        writeToGraph(2,4,\"Account Balance: \");","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"KZQ1999"},"content":"        writeToGraph(2,21,  stringAmount);","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"KZQ1999"},"content":"    private void writeToGraph(int rowCount, int colCount, String toAdd) {","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"KZQ1999"},"content":"        int stringLength \u003d toAdd.length();","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"KZQ1999"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"KZQ1999"},"content":"        while (i \u003c stringLength) {","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"KZQ1999"},"content":"            grid[rowCount][colCount] \u003d toAdd.charAt(i);","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"KZQ1999"},"content":"            colCount++;","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"KZQ1999"},"content":"            i++;","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"KZQ1999"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"KZQ1999"},"content":"        ","lastModifiedDate":"2021-11-06"},{"lineNumber":99,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"KZQ1999"},"content":"     * Converts the 2d array grid into a String.","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"KZQ1999"},"content":"     * @return A string which represents the 2D grid in 1D form.","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"kyun99"},"content":"    private String convertGridToString() {","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"KZQ1999"},"content":"        StringBuilder convertedString \u003d new StringBuilder();","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"KZQ1999"},"content":"        for (int x \u003d 0; x \u003c ROWS; x++) {","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"KZQ1999"},"content":"            for (int y \u003d 0; y \u003c COLS; y++) {","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"KZQ1999"},"content":"                convertedString.append(grid[x][y]);","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"KZQ1999"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"KZQ1999"},"content":"            convertedString.append(System.lineSeparator());","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"KZQ1999"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"KZQ1999"},"content":"        return convertedString.toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"KZQ1999"},"content":"    ","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"KZQ1999"},"content":"     * Returns month as an int based on which column it is at.","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"KZQ1999"},"content":"     * @param colCount The column count of the grid.","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"KZQ1999"},"content":"     * @return Returns an integer that represents the month.","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"KZQ1999"},"content":"    private int getMonth(int colCount) {","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"KZQ1999"},"content":"        if (colCount \u003e\u003d 4 \u0026\u0026 colCount \u003c\u003d 6) {","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"KZQ1999"},"content":"            return 1;","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"KZQ1999"},"content":"        } else if (colCount \u003e\u003d 12 \u0026\u0026 colCount \u003c\u003d 14) {","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"KZQ1999"},"content":"            return 2;","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"KZQ1999"},"content":"        }  else if (colCount \u003e\u003d 20 \u0026\u0026 colCount \u003c\u003d 22) {","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"KZQ1999"},"content":"            return 3;","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"KZQ1999"},"content":"        }  else if (colCount \u003e\u003d 28 \u0026\u0026 colCount \u003c\u003d 30) {","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"KZQ1999"},"content":"            return 4;","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"KZQ1999"},"content":"        }  else if (colCount \u003e\u003d 36 \u0026\u0026 colCount \u003c\u003d 38) {","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"KZQ1999"},"content":"            return 5;","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"KZQ1999"},"content":"        }  else if (colCount \u003e\u003d 44 \u0026\u0026 colCount \u003c\u003d 46) {","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"KZQ1999"},"content":"            return 6;","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"KZQ1999"},"content":"        }  else if (colCount \u003e\u003d 52 \u0026\u0026 colCount \u003c\u003d 54) {","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"KZQ1999"},"content":"            return 7;","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"KZQ1999"},"content":"        }  else if (colCount \u003e\u003d 60 \u0026\u0026 colCount \u003c\u003d 62) {","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"KZQ1999"},"content":"            return 8;","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"KZQ1999"},"content":"        }  else if (colCount \u003e\u003d 68 \u0026\u0026 colCount \u003c\u003d 70) {","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"KZQ1999"},"content":"            return 9;","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"KZQ1999"},"content":"        }  else if (colCount \u003e\u003d 76 \u0026\u0026 colCount \u003c\u003d 78) {","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"KZQ1999"},"content":"            return 10;","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"KZQ1999"},"content":"        }  else if (colCount \u003e\u003d 84 \u0026\u0026 colCount \u003c\u003d 86) {","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"KZQ1999"},"content":"            return 11;","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"KZQ1999"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"KZQ1999"},"content":"            return 12;","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"KZQ1999"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"KZQ1999"},"content":"     * Draw the total expenses and incomes for the current month in the yearly report.","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"KZQ1999"},"content":"     * @param currIncomeBreakdowns ArrayList containing all the totalIncomes for each month of the current year.","lastModifiedDate":"2021-11-06"},{"lineNumber":156,"author":{"gitId":"KZQ1999"},"content":"     * @param currExpenseBreakdowns ArrayList containing all the totalExpenses for each month of the current year.","lastModifiedDate":"2021-11-06"},{"lineNumber":157,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"KZQ1999"},"content":"    private void drawCurrentMonth(ArrayList\u003cDouble\u003e currIncomeBreakdowns, ArrayList\u003cDouble\u003e currExpenseBreakdowns) {","lastModifiedDate":"2021-11-06"},{"lineNumber":159,"author":{"gitId":"KZQ1999"},"content":"        ","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"KZQ1999"},"content":"        Month currentMonth \u003d DateOperator.currentMonth();","lastModifiedDate":"2021-11-06"},{"lineNumber":161,"author":{"gitId":"KZQ1999"},"content":"        int currentMonthInIndex \u003d DateOperator.currentMonthInIndex();","lastModifiedDate":"2021-11-06"},{"lineNumber":162,"author":{"gitId":"KZQ1999"},"content":"        String currentExpenseString \u003d \"Current month (\" + currentMonth + \") total expense: \";","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"KZQ1999"},"content":"        String currentIncomeString \u003d \"Current month (\" + currentMonth + \") total income: \";","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"KZQ1999"},"content":"        ","lastModifiedDate":"2021-11-06"},{"lineNumber":165,"author":{"gitId":"KZQ1999"},"content":"        double currentMonthExpense \u003d currExpenseBreakdowns.get(currentMonthInIndex);","lastModifiedDate":"2021-11-06"},{"lineNumber":166,"author":{"gitId":"KZQ1999"},"content":"        writeToGraph(3,4, currentExpenseString);","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"KZQ1999"},"content":"        String stringCurrentMonthExpense \u003d String.format(\"$%.2f\", currentMonthExpense);","lastModifiedDate":"2021-11-06"},{"lineNumber":168,"author":{"gitId":"KZQ1999"},"content":"        writeToGraph(3, 44, stringCurrentMonthExpense);","lastModifiedDate":"2021-11-01"},{"lineNumber":169,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":170,"author":{"gitId":"KZQ1999"},"content":"        double currentMonthIncome \u003d currIncomeBreakdowns.get(currentMonthInIndex);","lastModifiedDate":"2021-11-06"},{"lineNumber":171,"author":{"gitId":"KZQ1999"},"content":"        writeToGraph(4,4, currentIncomeString);","lastModifiedDate":"2021-10-27"},{"lineNumber":172,"author":{"gitId":"KZQ1999"},"content":"        String stringCurrentMonthIncome \u003d String.format(\"$%.2f\", currentMonthIncome);","lastModifiedDate":"2021-11-06"},{"lineNumber":173,"author":{"gitId":"KZQ1999"},"content":"        writeToGraph(4, 43, stringCurrentMonthIncome);","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"KZQ1999"},"content":"    private void drawLegendAndTitle() {","lastModifiedDate":"2021-11-06"},{"lineNumber":178,"author":{"gitId":"KZQ1999"},"content":"        writeToGraph(5,4, \"Your Year Report\");","lastModifiedDate":"2021-11-07"},{"lineNumber":179,"author":{"gitId":"KZQ1999"},"content":"        writeToGraph(2, 75, \"Legend:\");","lastModifiedDate":"2021-10-18"},{"lineNumber":180,"author":{"gitId":"KZQ1999"},"content":"        writeToGraph(3, 80, \" # is Expense\");","lastModifiedDate":"2021-10-18"},{"lineNumber":181,"author":{"gitId":"KZQ1999"},"content":"        writeToGraph(4, 80, \" o is Income \");","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":183,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":184,"author":{"gitId":"KZQ1999"},"content":"    private void drawXAxisLabels() {","lastModifiedDate":"2021-10-18"},{"lineNumber":185,"author":{"gitId":"KZQ1999"},"content":"        writeToGraph(18,4,\"Jan\");","lastModifiedDate":"2021-10-18"},{"lineNumber":186,"author":{"gitId":"KZQ1999"},"content":"        writeToGraph(18,12,\"Feb\");","lastModifiedDate":"2021-10-18"},{"lineNumber":187,"author":{"gitId":"KZQ1999"},"content":"        writeToGraph(18,20,\"Mar\");","lastModifiedDate":"2021-10-18"},{"lineNumber":188,"author":{"gitId":"KZQ1999"},"content":"        writeToGraph(18,28,\"Apr\");","lastModifiedDate":"2021-10-18"},{"lineNumber":189,"author":{"gitId":"KZQ1999"},"content":"        writeToGraph(18,36,\"May\");","lastModifiedDate":"2021-10-18"},{"lineNumber":190,"author":{"gitId":"KZQ1999"},"content":"        writeToGraph(18,44,\"Jun\");","lastModifiedDate":"2021-10-18"},{"lineNumber":191,"author":{"gitId":"KZQ1999"},"content":"        writeToGraph(18,52,\"Jul\");","lastModifiedDate":"2021-10-18"},{"lineNumber":192,"author":{"gitId":"KZQ1999"},"content":"        writeToGraph(18,60,\"Aug\");","lastModifiedDate":"2021-10-18"},{"lineNumber":193,"author":{"gitId":"KZQ1999"},"content":"        writeToGraph(18,68,\"Sept\");","lastModifiedDate":"2021-10-18"},{"lineNumber":194,"author":{"gitId":"KZQ1999"},"content":"        writeToGraph(18,76,\"Oct\");","lastModifiedDate":"2021-10-18"},{"lineNumber":195,"author":{"gitId":"KZQ1999"},"content":"        writeToGraph(18,84,\"Nov\");","lastModifiedDate":"2021-10-18"},{"lineNumber":196,"author":{"gitId":"KZQ1999"},"content":"        writeToGraph(18,92,\"Dec\");","lastModifiedDate":"2021-10-18"},{"lineNumber":197,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":198,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":199,"author":{"gitId":"KZQ1999"},"content":"    private void drawXAxis() {","lastModifiedDate":"2021-10-18"},{"lineNumber":200,"author":{"gitId":"KZQ1999"},"content":"        for (int i \u003d 2;i \u003c 98; i++) {","lastModifiedDate":"2021-10-18"},{"lineNumber":201,"author":{"gitId":"KZQ1999"},"content":"            grid[17][i] \u003d X_AXIS_CHAR;","lastModifiedDate":"2021-10-25"},{"lineNumber":202,"author":{"gitId":"KZQ1999"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":203,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":204,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":205,"author":{"gitId":"KZQ1999"},"content":"    private void drawSeparator() {","lastModifiedDate":"2021-10-18"},{"lineNumber":206,"author":{"gitId":"KZQ1999"},"content":"        for (int i \u003d 2;i \u003c 98; i++) {","lastModifiedDate":"2021-10-18"},{"lineNumber":207,"author":{"gitId":"KZQ1999"},"content":"            grid[6][i] \u003d SEPARATOR_CHAR;","lastModifiedDate":"2021-10-25"},{"lineNumber":208,"author":{"gitId":"KZQ1999"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":209,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":210,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":211,"author":{"gitId":"KZQ1999"},"content":"    private void drawIncomeBar(int x, int y, int incomeBar) {","lastModifiedDate":"2021-11-06"},{"lineNumber":212,"author":{"gitId":"KZQ1999"},"content":"        if (x \u003e\u003d 17 - incomeBar \u0026\u0026 x \u003c 17) {","lastModifiedDate":"2021-10-18"},{"lineNumber":213,"author":{"gitId":"KZQ1999"},"content":"            grid[x][y] \u003d INCOME_BAR;","lastModifiedDate":"2021-10-25"},{"lineNumber":214,"author":{"gitId":"KZQ1999"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":215,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":216,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":217,"author":{"gitId":"KZQ1999"},"content":"    private void drawExpenseBar(int x, int y, int expenseBar) {","lastModifiedDate":"2021-11-06"},{"lineNumber":218,"author":{"gitId":"KZQ1999"},"content":"        if (x \u003e\u003d 17 - expenseBar \u0026\u0026 x \u003c 17) {","lastModifiedDate":"2021-10-18"},{"lineNumber":219,"author":{"gitId":"KZQ1999"},"content":"            grid[x][y] \u003d EXPENSE_BAR;","lastModifiedDate":"2021-10-25"},{"lineNumber":220,"author":{"gitId":"KZQ1999"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":221,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":222,"author":{"gitId":"KZQ1999"},"content":"    ","lastModifiedDate":"2021-10-18"},{"lineNumber":223,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":224,"author":{"gitId":"KZQ1999"},"content":"    private void drawBar(int x, int y, int noOfIncomeBar, int noOfExpenseBar) {","lastModifiedDate":"2021-10-26"},{"lineNumber":225,"author":{"gitId":"KZQ1999"},"content":"        if (isWithinRowsConsistingOfBarGraph(x)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":226,"author":{"gitId":"KZQ1999"},"content":"            if (isExpenseBar(y)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":227,"author":{"gitId":"KZQ1999"},"content":"                drawExpenseBar(x, y, noOfExpenseBar);","lastModifiedDate":"2021-11-06"},{"lineNumber":228,"author":{"gitId":"KZQ1999"},"content":"            } else if (isIncomeBar(y)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":229,"author":{"gitId":"KZQ1999"},"content":"                drawIncomeBar(x, y, noOfIncomeBar);","lastModifiedDate":"2021-11-06"},{"lineNumber":230,"author":{"gitId":"KZQ1999"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":231,"author":{"gitId":"KZQ1999"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":232,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":233,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":234,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":235,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":236,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":237,"author":{"gitId":"KZQ1999"},"content":"     * Draws the yearly report shown in show_graph command depending on year user enter as input.","lastModifiedDate":"2021-11-06"},{"lineNumber":238,"author":{"gitId":"KZQ1999"},"content":"     * Yearly report includes the legend, current month totals , monthly breakdown, axes and the title.","lastModifiedDate":"2021-11-06"},{"lineNumber":239,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":240,"author":{"gitId":"KZQ1999"},"content":"     * @param finances The financial tracker with all the various entries.","lastModifiedDate":"2021-10-26"},{"lineNumber":241,"author":{"gitId":"KZQ1999"},"content":"     * @param year The year given as input by user.                ","lastModifiedDate":"2021-11-06"},{"lineNumber":242,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":243,"author":{"gitId":"kyun99"},"content":"    private void drawReport(FinancialTracker finances, int year) {","lastModifiedDate":"2021-11-05"},{"lineNumber":244,"author":{"gitId":"KZQ1999"},"content":"        drawSeparator();","lastModifiedDate":"2021-10-25"},{"lineNumber":245,"author":{"gitId":"KZQ1999"},"content":"        drawLegendAndTitle();","lastModifiedDate":"2021-11-06"},{"lineNumber":246,"author":{"gitId":"KZQ1999"},"content":"        drawXAxisLabels();","lastModifiedDate":"2021-10-25"},{"lineNumber":247,"author":{"gitId":"KZQ1999"},"content":"        drawXAxis();","lastModifiedDate":"2021-10-25"},{"lineNumber":248,"author":{"gitId":"KZQ1999"},"content":"        ArrayList\u003cDouble\u003e searchedIncomeBreakdowns \u003d finances.getMonthlyIncomeBreakdown(year);","lastModifiedDate":"2021-11-06"},{"lineNumber":249,"author":{"gitId":"KZQ1999"},"content":"        ArrayList\u003cDouble\u003e searchedExpenseBreakdowns \u003d finances.getMonthlyExpenseBreakdown(year);","lastModifiedDate":"2021-11-06"},{"lineNumber":250,"author":{"gitId":"KZQ1999"},"content":"        ","lastModifiedDate":"2021-11-01"},{"lineNumber":251,"author":{"gitId":"KZQ1999"},"content":"        ArrayList\u003cDouble\u003e values \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-01"},{"lineNumber":252,"author":{"gitId":"KZQ1999"},"content":"        values.addAll(searchedExpenseBreakdowns);","lastModifiedDate":"2021-11-06"},{"lineNumber":253,"author":{"gitId":"KZQ1999"},"content":"        values.addAll(searchedIncomeBreakdowns);","lastModifiedDate":"2021-11-06"},{"lineNumber":254,"author":{"gitId":"KZQ1999"},"content":"        double biggestTotal \u003d Collections.max(values);","lastModifiedDate":"2021-11-06"},{"lineNumber":255,"author":{"gitId":"KZQ1999"},"content":"        assert (biggestTotal \u003c\u003d 100000000000.00) : \"Total income/expense should be less than equal to 100Bil\";","lastModifiedDate":"2021-11-06"},{"lineNumber":256,"author":{"gitId":"KZQ1999"},"content":"        double barValue \u003d determineBarValue(biggestTotal);","lastModifiedDate":"2021-11-06"},{"lineNumber":257,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":258,"author":{"gitId":"KZQ1999"},"content":"        ArrayList\u003cDouble\u003e currentIncomeBreakdowns \u003d finances.getMonthlyIncomeBreakdown(LocalDate.now().getYear());","lastModifiedDate":"2021-11-06"},{"lineNumber":259,"author":{"gitId":"KZQ1999"},"content":"        ArrayList\u003cDouble\u003e currentExpenseBreakdowns \u003d finances.getMonthlyExpenseBreakdown(LocalDate.now().getYear());","lastModifiedDate":"2021-11-06"},{"lineNumber":260,"author":{"gitId":"KZQ1999"},"content":"        drawCurrentMonth(currentIncomeBreakdowns, currentExpenseBreakdowns);","lastModifiedDate":"2021-11-06"},{"lineNumber":261,"author":{"gitId":"KZQ1999"},"content":"        ","lastModifiedDate":"2021-11-01"},{"lineNumber":262,"author":{"gitId":"KZQ1999"},"content":"        ","lastModifiedDate":"2021-11-01"},{"lineNumber":263,"author":{"gitId":"KZQ1999"},"content":"        for (int x \u003d 0; x \u003c ROWS; x++) {","lastModifiedDate":"2021-10-25"},{"lineNumber":264,"author":{"gitId":"KZQ1999"},"content":"            for (int y \u003d 0; y \u003c COLS; y++) {","lastModifiedDate":"2021-10-25"},{"lineNumber":265,"author":{"gitId":"KZQ1999"},"content":"                int monthIndex \u003d getMonth(y) - 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":266,"author":{"gitId":"KZQ1999"},"content":"                int noOfIncomeBar \u003d (int)(searchedIncomeBreakdowns.get(monthIndex) / barValue);","lastModifiedDate":"2021-11-06"},{"lineNumber":267,"author":{"gitId":"KZQ1999"},"content":"                int noOfExpenseBar \u003d (int)(searchedExpenseBreakdowns.get(monthIndex) / barValue);","lastModifiedDate":"2021-11-06"},{"lineNumber":268,"author":{"gitId":"KZQ1999"},"content":"                drawBar(x, y, noOfIncomeBar, noOfExpenseBar);","lastModifiedDate":"2021-10-26"},{"lineNumber":269,"author":{"gitId":"KZQ1999"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":270,"author":{"gitId":"KZQ1999"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":271,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":272,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":273,"author":{"gitId":"kyun99"},"content":"    private double determineBarValue(double totalValue) {","lastModifiedDate":"2021-11-04"},{"lineNumber":274,"author":{"gitId":"kyun99"},"content":"        boolean isBetweenZeroPointOneAndOne \u003d totalValue \u003e\u003d 0.1 \u0026\u0026 totalValue \u003c 1;","lastModifiedDate":"2021-11-04"},{"lineNumber":275,"author":{"gitId":"kyun99"},"content":"        boolean isSmallerThanZeroPointOne \u003d totalValue \u003c 0.1;","lastModifiedDate":"2021-11-04"},{"lineNumber":276,"author":{"gitId":"kyun99"},"content":"        ","lastModifiedDate":"2021-11-04"},{"lineNumber":277,"author":{"gitId":"kyun99"},"content":"        if (isBetweenZeroPointOneAndOne) {","lastModifiedDate":"2021-11-04"},{"lineNumber":278,"author":{"gitId":"kyun99"},"content":"            writeToGraph(5, 75, \"Unit: 0.1\");","lastModifiedDate":"2021-11-04"},{"lineNumber":279,"author":{"gitId":"kyun99"},"content":"            return 0.1;","lastModifiedDate":"2021-11-04"},{"lineNumber":280,"author":{"gitId":"kyun99"},"content":"        } else if (isSmallerThanZeroPointOne) {","lastModifiedDate":"2021-11-04"},{"lineNumber":281,"author":{"gitId":"kyun99"},"content":"            writeToGraph(5, 75, \"Unit: 0.01\");","lastModifiedDate":"2021-11-04"},{"lineNumber":282,"author":{"gitId":"kyun99"},"content":"            return 0.01;","lastModifiedDate":"2021-11-04"},{"lineNumber":283,"author":{"gitId":"kyun99"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":284,"author":{"gitId":"kyun99"},"content":"        ","lastModifiedDate":"2021-11-04"},{"lineNumber":285,"author":{"gitId":"kyun99"},"content":"        int noOfDigits \u003d 0;","lastModifiedDate":"2021-11-04"},{"lineNumber":286,"author":{"gitId":"KZQ1999"},"content":"        //Counts no of digits on the left of decimal point","lastModifiedDate":"2021-11-06"},{"lineNumber":287,"author":{"gitId":"kyun99"},"content":"        while (totalValue \u003e\u003d 1) {","lastModifiedDate":"2021-11-04"},{"lineNumber":288,"author":{"gitId":"KZQ1999"},"content":"            totalValue \u003d totalValue / 10;","lastModifiedDate":"2021-11-06"},{"lineNumber":289,"author":{"gitId":"kyun99"},"content":"            noOfDigits++;","lastModifiedDate":"2021-11-04"},{"lineNumber":290,"author":{"gitId":"kyun99"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":291,"author":{"gitId":"kyun99"},"content":"        double barValue \u003d Math.pow(10, noOfDigits - 1);","lastModifiedDate":"2021-11-04"},{"lineNumber":292,"author":{"gitId":"kyun99"},"content":"        ","lastModifiedDate":"2021-11-04"},{"lineNumber":293,"author":{"gitId":"kyun99"},"content":"        writeToGraph(5, 75, \"Unit: \" + barValue);","lastModifiedDate":"2021-11-04"},{"lineNumber":294,"author":{"gitId":"kyun99"},"content":"        return barValue;","lastModifiedDate":"2021-11-04"},{"lineNumber":295,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":296,"author":{"gitId":"KZQ1999"},"content":"    ","lastModifiedDate":"2021-10-25"},{"lineNumber":297,"author":{"gitId":"KZQ1999"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"kyun99":31,"AnShengLee":2,"KZQ1999":264}},{"path":"src/main/java/seedu/utility/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KZQ1999"},"content":"package seedu.utility;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.commands.currency.CurrencyType;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"KZQ1999"},"content":"import seedu.entry.Entry;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"KZQ1999"},"content":"import seedu.entry.Expense;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"import seedu.entry.ExpenseCategory;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"KZQ1999"},"content":"import seedu.entry.Income;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"import seedu.reminder.BudgetReminder;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"KZQ1999"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"KZQ1999"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"kyun99"},"content":"import static seedu.utility.tools.FinancialAdvisor.getRandomAdvice;","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"KZQ1999"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"KZQ1999"},"content":" * Represents a user interface where feedbacks are given in response to user input.","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"KZQ1999"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"KZQ1999"},"content":"public class Ui {","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"KZQ1999"},"content":"    private final Scanner in;","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"KZQ1999"},"content":"    private static final String DATE_FORMAT \u003d \"dd/MM/yyyy\";","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"KZQ1999"},"content":"    private static final String NEW_LINE \u003d System.lineSeparator();","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"KZQ1999"},"content":"     * Constructor for Ui of the program with a Scanner object that is able to read user inputs.","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"kyun99"},"content":"    public Ui() {","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"kyun99"},"content":"        this.in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"KZQ1999"},"content":"     * Reads a new command from the user through the standard input and trim trailing spaces at the back.","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"kyun99"},"content":"    public String readCommand() {","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"KZQ1999"},"content":"        return in.nextLine().trim();","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"KZQ1999"},"content":"     * Prints the welcoming message for users that have entered the program.","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"kyun99"},"content":"    public void printWelcome() {","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"KZQ1999"},"content":"        System.out.println(Messages.LOGO_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"KZQ1999"},"content":"        System.out.println(Messages.TYPE_SOMETHING_MESSAGE);","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"kyun99"},"content":"    private void printLine() {","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"KZQ1999"},"content":"        System.out.println(Messages.SEPARATOR_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"KZQ1999"},"content":"     * Prints the given list of expenses to the standard output, else if its empty print the empty expense list message.","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"KZQ1999"},"content":"     * @param expenses An ArrayList of expense elements.","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"kyun99"},"content":"    public void listExpense(ArrayList\u003cExpense\u003e expenses) {","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"Nirmaleshwar"},"content":"        if (expenses.isEmpty()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"KZQ1999"},"content":"            printEmptyExpenseListMessage();","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"Nirmaleshwar"},"content":"        } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"KZQ1999"},"content":"            printExpenseList(expenses);","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"KZQ1999"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"KZQ1999"},"content":"     * Prints the given list of incomes else if its empty print the empty income list message.","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"KZQ1999"},"content":"     * ","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"KZQ1999"},"content":"     * @param incomes An ArrayList of income elements.","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"kyun99"},"content":"    public void listIncome(ArrayList\u003cIncome\u003e incomes) {","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"Nirmaleshwar"},"content":"        if (incomes.isEmpty()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"KZQ1999"},"content":"            printEmptyIncomeListMessage();","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"Nirmaleshwar"},"content":"        } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"KZQ1999"},"content":"            printIncomeList(incomes);","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"KZQ1999"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"KZQ1999"},"content":"     * Prints the given list of entries else if its empty print the no match found message.","lastModifiedDate":"2021-11-06"},{"lineNumber":87,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"KZQ1999"},"content":"     * @param filteredEntries The entries that got filtered out from searching through the financial tracker.","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"KZQ1999"},"content":"    public void listFind(ArrayList\u003cEntry\u003e filteredEntries) {","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"KZQ1999"},"content":"        if (filteredEntries.isEmpty()) {","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"KZQ1999"},"content":"            System.out.println(Messages.SEARCH_NO_MATCH_MESSAGE);","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"KZQ1999"},"content":"        } else {","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"KZQ1999"},"content":"            printFilteredList(filteredEntries);","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"KZQ1999"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"KZQ1999"},"content":"    ","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"KZQ1999"},"content":"    private void printEmptyIncomeListMessage() {","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"KZQ1999"},"content":"        System.out.println(Messages.EMPTY_INCOME_MESSAGE);","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"KZQ1999"},"content":"    private void printEmptyExpenseListMessage() {","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"KZQ1999"},"content":"        System.out.println(Messages.EMPTY_EXPENSE_MESSAGE);","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"KZQ1999"},"content":"    private void printFilteredList(ArrayList\u003cEntry\u003e filteredEntries) {","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"KZQ1999"},"content":"        assert filteredEntries.size() \u003e 0;","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"KZQ1999"},"content":"        System.out.println(Messages.FOUND_LIST_MESSAGE);","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"KZQ1999"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"KZQ1999"},"content":"        for (Entry entry : filteredEntries) {","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"KZQ1999"},"content":"            System.out.print(i + \": \" + entry + NEW_LINE);","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"KZQ1999"},"content":"            i++;","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"KZQ1999"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":118,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"KZQ1999"},"content":"    ","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"KZQ1999"},"content":"    private void printIncomeList(ArrayList\u003cIncome\u003e incomes) {","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"jonathanlkw"},"content":"        assert incomes.size() \u003e 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"KZQ1999"},"content":"        System.out.println(Messages.LISTING_INCOME_MESSAGE);","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"KZQ1999"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-10-04"},{"lineNumber":126,"author":{"gitId":"kyun99"},"content":"        for (Income income : incomes) {","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"KZQ1999"},"content":"            System.out.print(i + \": \" + income + NEW_LINE);","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"KZQ1999"},"content":"            i++;","lastModifiedDate":"2021-10-04"},{"lineNumber":129,"author":{"gitId":"KZQ1999"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":130,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"KZQ1999"},"content":"    ","lastModifiedDate":"2021-11-06"},{"lineNumber":133,"author":{"gitId":"KZQ1999"},"content":"    ","lastModifiedDate":"2021-11-06"},{"lineNumber":134,"author":{"gitId":"KZQ1999"},"content":"    private void printExpenseList(ArrayList\u003cExpense\u003e expenses) {","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"jonathanlkw"},"content":"        assert expenses.size() \u003e 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"KZQ1999"},"content":"        System.out.println(Messages.LISTING_EXPENSE_MESSAGE);","lastModifiedDate":"2021-10-16"},{"lineNumber":137,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"KZQ1999"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"KZQ1999"},"content":"        for (Expense expense : expenses) {","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"KZQ1999"},"content":"            System.out.print(i + \": \" + expense + NEW_LINE);","lastModifiedDate":"2021-11-03"},{"lineNumber":142,"author":{"gitId":"KZQ1999"},"content":"            i++;","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"KZQ1999"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":144,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"KZQ1999"},"content":"    ","lastModifiedDate":"2021-10-04"},{"lineNumber":146,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"KZQ1999"},"content":"     * Prints the total expense of all expenses in the financial tracker to the standard output.","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"KZQ1999"},"content":"     * @param totalExpense The total value of the expenses in the financial tracker.","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"jonathanlkw"},"content":"    public void printTotalExpense(double totalExpense) {","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"KZQ1999"},"content":"        assert totalExpense \u003e\u003d 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"KZQ1999"},"content":"        System.out.printf(\"Your total expense is: $%.2f\" + NEW_LINE, totalExpense);","lastModifiedDate":"2021-11-03"},{"lineNumber":155,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":157,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":158,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"KZQ1999"},"content":"     * Prints the total income of the financial tracker to the standard output.","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"KZQ1999"},"content":"     * @param totalIncome The total value of the incomes in the financial tracker.","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"jonathanlkw"},"content":"    public void printTotalIncome(double totalIncome) {","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"KZQ1999"},"content":"        assert totalIncome \u003e\u003d 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"KZQ1999"},"content":"        System.out.printf(\"Your total income is: $%.2f\" + NEW_LINE, totalIncome);","lastModifiedDate":"2021-11-03"},{"lineNumber":167,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":169,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":170,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"KZQ1999"},"content":"     * Prints the balance of the financial tracker to the standard output.","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"KZQ1999"},"content":"     * @param balance The balance which is the net value of totalIncome and totalExpense in the financial tracker.","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"KZQ1999"},"content":"    public void printBalance(double balance) {","lastModifiedDate":"2021-10-16"},{"lineNumber":176,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-16"},{"lineNumber":177,"author":{"gitId":"KZQ1999"},"content":"        System.out.printf(\"Your current balance is: $%.2f\" + NEW_LINE, balance);","lastModifiedDate":"2021-11-03"},{"lineNumber":178,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-16"},{"lineNumber":179,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":180,"author":{"gitId":"KZQ1999"},"content":"    ","lastModifiedDate":"2021-10-16"},{"lineNumber":181,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"KZQ1999"},"content":"     * Prints the feedback message for adding an expense to the financial tracker.","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"KZQ1999"},"content":"     * @param expense The expense to be added to the financial tracker.","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"KZQ1999"},"content":"    public void printExpenseAdded(Expense expense) {","lastModifiedDate":"2021-10-07"},{"lineNumber":187,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-11"},{"lineNumber":188,"author":{"gitId":"KZQ1999"},"content":"        System.out.println(\"Your most recent spending: \" + NEW_LINE + expense);","lastModifiedDate":"2021-11-03"},{"lineNumber":189,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-11"},{"lineNumber":190,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":191,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":192,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"KZQ1999"},"content":"     * Prints the feedback message for deleting an expense from the financial tracker.","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"KZQ1999"},"content":"     * @param expense The expense to be deleted from the financial tracker.","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"KZQ1999"},"content":"    public void printExpenseDeleted(Expense expense) {","lastModifiedDate":"2021-10-07"},{"lineNumber":198,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-11"},{"lineNumber":199,"author":{"gitId":"KZQ1999"},"content":"        System.out.println(\"You removed this: \" + NEW_LINE + expense);","lastModifiedDate":"2021-11-03"},{"lineNumber":200,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-11"},{"lineNumber":201,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":202,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":203,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"KZQ1999"},"content":"     * Prints the feedback message for adding an income to the financial tracker.","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"KZQ1999"},"content":"     * @param income The income to be added to the financial tracker.","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"KZQ1999"},"content":"    public void printIncomeAdded(Income income) {","lastModifiedDate":"2021-10-07"},{"lineNumber":209,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-11"},{"lineNumber":210,"author":{"gitId":"KZQ1999"},"content":"        System.out.println(\"Your most recent earning: \" + NEW_LINE + income);","lastModifiedDate":"2021-11-03"},{"lineNumber":211,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-11"},{"lineNumber":212,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":213,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":214,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"KZQ1999"},"content":"     * Prints the feedback message for deleting an income from the financial tracker.","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"KZQ1999"},"content":"     * @param income The income to be deleted from the financial tracker.","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"KZQ1999"},"content":"    public void printIncomeDeleted(Income income) {","lastModifiedDate":"2021-10-07"},{"lineNumber":220,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-11"},{"lineNumber":221,"author":{"gitId":"KZQ1999"},"content":"        System.out.println(\"You removed this: \" + NEW_LINE + income);","lastModifiedDate":"2021-11-03"},{"lineNumber":222,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-19"},{"lineNumber":223,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":224,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":225,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":226,"author":{"gitId":"KZQ1999"},"content":"     * Prints the total expense between two dates.","lastModifiedDate":"2021-10-26"},{"lineNumber":227,"author":{"gitId":"KZQ1999"},"content":"     * If totalExpense is 0 print the no expense between two dates message.","lastModifiedDate":"2021-10-26"},{"lineNumber":228,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":229,"author":{"gitId":"KZQ1999"},"content":"     * @param totalExpense The total value of the expenses in the financial tracker.","lastModifiedDate":"2021-10-26"},{"lineNumber":230,"author":{"gitId":"KZQ1999"},"content":"     * @param start The starting date (Left boundary).","lastModifiedDate":"2021-10-26"},{"lineNumber":231,"author":{"gitId":"KZQ1999"},"content":"     * @param end The ending date (Right boundary).","lastModifiedDate":"2021-10-26"},{"lineNumber":232,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":233,"author":{"gitId":"KZQ1999"},"content":"    public void printTotalExpenseBetween(double totalExpense, LocalDate start, LocalDate end) {","lastModifiedDate":"2021-10-19"},{"lineNumber":234,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-19"},{"lineNumber":235,"author":{"gitId":"KZQ1999"},"content":"        if (totalExpense \u003d\u003d 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":236,"author":{"gitId":"KZQ1999"},"content":"            printNoExpenseBetweenMessage(start, end);","lastModifiedDate":"2021-10-19"},{"lineNumber":237,"author":{"gitId":"KZQ1999"},"content":"        } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":238,"author":{"gitId":"KZQ1999"},"content":"            printExpenseBetweenMessage(totalExpense, start, end);","lastModifiedDate":"2021-10-19"},{"lineNumber":239,"author":{"gitId":"KZQ1999"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":240,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-19"},{"lineNumber":241,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":242,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":243,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":244,"author":{"gitId":"KZQ1999"},"content":"     * Prints the total income between two dates.","lastModifiedDate":"2021-10-26"},{"lineNumber":245,"author":{"gitId":"KZQ1999"},"content":"     * If totalIncome is 0 print the no income between two dates message.","lastModifiedDate":"2021-10-26"},{"lineNumber":246,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":247,"author":{"gitId":"KZQ1999"},"content":"     * @param totalIncome The total value of the incomes in the financial tracker.","lastModifiedDate":"2021-10-26"},{"lineNumber":248,"author":{"gitId":"KZQ1999"},"content":"     * @param start The starting date (Left boundary).","lastModifiedDate":"2021-10-26"},{"lineNumber":249,"author":{"gitId":"KZQ1999"},"content":"     * @param end The ending date (Right boundary).","lastModifiedDate":"2021-10-26"},{"lineNumber":250,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":251,"author":{"gitId":"KZQ1999"},"content":"    public void printTotalIncomeBetween(double totalIncome, LocalDate start, LocalDate end) {","lastModifiedDate":"2021-10-26"},{"lineNumber":252,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-11"},{"lineNumber":253,"author":{"gitId":"KZQ1999"},"content":"        if (totalIncome \u003d\u003d 0) {","lastModifiedDate":"2021-10-26"},{"lineNumber":254,"author":{"gitId":"KZQ1999"},"content":"            printNoIncomeBetweenMessage(start, end);","lastModifiedDate":"2021-10-19"},{"lineNumber":255,"author":{"gitId":"KZQ1999"},"content":"        } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":256,"author":{"gitId":"KZQ1999"},"content":"            printIncomeBetweenMessage(totalIncome, start, end);","lastModifiedDate":"2021-10-26"},{"lineNumber":257,"author":{"gitId":"KZQ1999"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":258,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-19"},{"lineNumber":259,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":260,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":261,"author":{"gitId":"KZQ1999"},"content":"    private void printExpenseBetweenMessage(double totalExpense, LocalDate start, LocalDate end) {","lastModifiedDate":"2021-10-19"},{"lineNumber":262,"author":{"gitId":"AnShengLee"},"content":"        String startString \u003d start.format(DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-10-23"},{"lineNumber":263,"author":{"gitId":"AnShengLee"},"content":"        String endString \u003d end.format(DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-10-23"},{"lineNumber":264,"author":{"gitId":"KZQ1999"},"content":"        System.out.printf(\"Your total expense between %s and %s is $%.2f\", startString, endString, totalExpense);","lastModifiedDate":"2021-10-19"},{"lineNumber":265,"author":{"gitId":"KZQ1999"},"content":"        System.out.print(NEW_LINE);","lastModifiedDate":"2021-11-03"},{"lineNumber":266,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":267,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":268,"author":{"gitId":"KZQ1999"},"content":"    private void printNoExpenseBetweenMessage(LocalDate start, LocalDate end) {","lastModifiedDate":"2021-10-19"},{"lineNumber":269,"author":{"gitId":"AnShengLee"},"content":"        String startString \u003d start.format(DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-10-23"},{"lineNumber":270,"author":{"gitId":"AnShengLee"},"content":"        String endString \u003d end.format(DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-10-23"},{"lineNumber":271,"author":{"gitId":"KZQ1999"},"content":"        System.out.printf(\"You do not have any expense between %s and %s\", startString, endString);","lastModifiedDate":"2021-10-19"},{"lineNumber":272,"author":{"gitId":"KZQ1999"},"content":"        System.out.print(NEW_LINE);","lastModifiedDate":"2021-11-03"},{"lineNumber":273,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":274,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":275,"author":{"gitId":"KZQ1999"},"content":"    private void printIncomeBetweenMessage(double totalExpense, LocalDate start, LocalDate end) {","lastModifiedDate":"2021-10-19"},{"lineNumber":276,"author":{"gitId":"AnShengLee"},"content":"        String startString \u003d start.format(DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-10-23"},{"lineNumber":277,"author":{"gitId":"AnShengLee"},"content":"        String endString \u003d end.format(DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-10-23"},{"lineNumber":278,"author":{"gitId":"KZQ1999"},"content":"        System.out.printf(\"Your total income between %s and %s is $%.2f\", startString, endString, totalExpense);","lastModifiedDate":"2021-10-19"},{"lineNumber":279,"author":{"gitId":"KZQ1999"},"content":"        System.out.print(NEW_LINE);","lastModifiedDate":"2021-11-03"},{"lineNumber":280,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":281,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":282,"author":{"gitId":"KZQ1999"},"content":"    private void printNoIncomeBetweenMessage(LocalDate start, LocalDate end) {","lastModifiedDate":"2021-10-19"},{"lineNumber":283,"author":{"gitId":"AnShengLee"},"content":"        String startString \u003d start.format(DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-10-23"},{"lineNumber":284,"author":{"gitId":"AnShengLee"},"content":"        String endString \u003d end.format(DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-10-23"},{"lineNumber":285,"author":{"gitId":"KZQ1999"},"content":"        System.out.printf(\"You do not have any income between %s and %s\", startString, endString);","lastModifiedDate":"2021-10-19"},{"lineNumber":286,"author":{"gitId":"KZQ1999"},"content":"        System.out.print(NEW_LINE);","lastModifiedDate":"2021-11-03"},{"lineNumber":287,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":288,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":289,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":290,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":291,"author":{"gitId":"KZQ1999"},"content":"     * Prints the list of commands and their respective format to the standard output.","lastModifiedDate":"2021-10-12"},{"lineNumber":292,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":293,"author":{"gitId":"kyun99"},"content":"    public void printHelp() {","lastModifiedDate":"2021-10-04"},{"lineNumber":294,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-11"},{"lineNumber":295,"author":{"gitId":"KZQ1999"},"content":"        System.out.println(Messages.HELP_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-16"},{"lineNumber":296,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-11"},{"lineNumber":297,"author":{"gitId":"KZQ1999"},"content":"        for (String command:CommandFormat.commands) {","lastModifiedDate":"2021-10-20"},{"lineNumber":298,"author":{"gitId":"KZQ1999"},"content":"            System.out.println(command);","lastModifiedDate":"2021-10-11"},{"lineNumber":299,"author":{"gitId":"KZQ1999"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":300,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-11"},{"lineNumber":301,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":302,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":303,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":304,"author":{"gitId":"KZQ1999"},"content":"     * Prints the termination message of the STONKS XD program.","lastModifiedDate":"2021-10-12"},{"lineNumber":305,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":306,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":307,"author":{"gitId":"kyun99"},"content":"    public void printBye() {","lastModifiedDate":"2021-11-07"},{"lineNumber":308,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-04"},{"lineNumber":309,"author":{"gitId":"KZQ1999"},"content":"        System.out.println(Messages.BYE_MESSAGE);","lastModifiedDate":"2021-10-16"},{"lineNumber":310,"author":{"gitId":"KZQ1999"},"content":"        System.out.println(NEW_LINE);","lastModifiedDate":"2021-11-03"},{"lineNumber":311,"author":{"gitId":"kyun99"},"content":"        System.out.println(Messages.TIP_HEADER + getRandomAdvice());","lastModifiedDate":"2021-11-07"},{"lineNumber":312,"author":{"gitId":"KZQ1999"},"content":"        printLine();","lastModifiedDate":"2021-10-04"},{"lineNumber":313,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":314,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":315,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":316,"author":{"gitId":"KZQ1999"},"content":"     * Prints the error message as feedback through the standard output.","lastModifiedDate":"2021-10-12"},{"lineNumber":317,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":318,"author":{"gitId":"KZQ1999"},"content":"     * @param errorMessage The error message to be printed out due to certain exceptions or invalid inputs.","lastModifiedDate":"2021-10-12"},{"lineNumber":319,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":320,"author":{"gitId":"KZQ1999"},"content":"    public void printError(String errorMessage) {","lastModifiedDate":"2021-10-12"},{"lineNumber":321,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-10-10"},{"lineNumber":322,"author":{"gitId":"KZQ1999"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2021-10-12"},{"lineNumber":323,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-10-10"},{"lineNumber":324,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":325,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":326,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":327,"author":{"gitId":"AnShengLee"},"content":"     * Prints the error message as feedback through the standard output, specifically for the loading of data process.","lastModifiedDate":"2021-10-27"},{"lineNumber":328,"author":{"gitId":"AnShengLee"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":329,"author":{"gitId":"AnShengLee"},"content":"     * @param errorMessage The error message to be printed out due to certain exceptions or invalid inputs.","lastModifiedDate":"2021-10-27"},{"lineNumber":330,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":331,"author":{"gitId":"AnShengLee"},"content":"    public void printLoadingError(String errorMessage) {","lastModifiedDate":"2021-10-27"},{"lineNumber":332,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":333,"author":{"gitId":"AnShengLee"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2021-10-27"},{"lineNumber":334,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":335,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":336,"author":{"gitId":"AnShengLee"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":337,"author":{"gitId":"AnShengLee"},"content":"     * Prints a message to user through standard output confirming all entries have been cleared.","lastModifiedDate":"2021-10-19"},{"lineNumber":338,"author":{"gitId":"AnShengLee"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":339,"author":{"gitId":"AnShengLee"},"content":"    public void printAllEntriesCleared() {","lastModifiedDate":"2021-10-19"},{"lineNumber":340,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-10-19"},{"lineNumber":341,"author":{"gitId":"AnShengLee"},"content":"        System.out.println(Messages.ALL_DATA_CLEARED);","lastModifiedDate":"2021-10-19"},{"lineNumber":342,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-10-19"},{"lineNumber":343,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":344,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":345,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":346,"author":{"gitId":"KZQ1999"},"content":"     * Prints the graph representing the yearly report.","lastModifiedDate":"2021-10-26"},{"lineNumber":347,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":348,"author":{"gitId":"KZQ1999"},"content":"     * @param stonksGraph The graph representing the yearly report of the financial tracker.","lastModifiedDate":"2021-10-26"},{"lineNumber":349,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":350,"author":{"gitId":"KZQ1999"},"content":"    public void printGraph(StonksGraph stonksGraph) {","lastModifiedDate":"2021-10-21"},{"lineNumber":351,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-10-19"},{"lineNumber":352,"author":{"gitId":"KZQ1999"},"content":"        System.out.print(stonksGraph);","lastModifiedDate":"2021-10-21"},{"lineNumber":353,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-10-19"},{"lineNumber":354,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":355,"author":{"gitId":"jonathanlkw"},"content":"  ","lastModifiedDate":"2021-10-20"},{"lineNumber":356,"author":{"gitId":"jonathanlkw"},"content":"    public void printBudgetReminder(BudgetReminder reminder) {","lastModifiedDate":"2021-11-06"},{"lineNumber":357,"author":{"gitId":"jonathanlkw"},"content":"        System.out.println(reminder);","lastModifiedDate":"2021-11-06"},{"lineNumber":358,"author":{"gitId":"jonathanlkw"},"content":"        printLine();","lastModifiedDate":"2021-10-26"},{"lineNumber":359,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":360,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":361,"author":{"gitId":"jonathanlkw"},"content":"    public void printSetBudgetReminder(BudgetReminder reminder) {","lastModifiedDate":"2021-11-07"},{"lineNumber":362,"author":{"gitId":"jonathanlkw"},"content":"        printLine();","lastModifiedDate":"2021-10-20"},{"lineNumber":363,"author":{"gitId":"jonathanlkw"},"content":"        System.out.println(reminder);","lastModifiedDate":"2021-11-07"},{"lineNumber":364,"author":{"gitId":"jonathanlkw"},"content":"        printLine();","lastModifiedDate":"2021-10-20"},{"lineNumber":365,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":366,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":367,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":368,"author":{"gitId":"KZQ1999"},"content":"     * Prints the budget for the given category.","lastModifiedDate":"2021-10-26"},{"lineNumber":369,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":370,"author":{"gitId":"KZQ1999"},"content":"     * @param category The category of expense.","lastModifiedDate":"2021-10-26"},{"lineNumber":371,"author":{"gitId":"KZQ1999"},"content":"     * @param budgetLimit The budget limit for the given category.","lastModifiedDate":"2021-10-26"},{"lineNumber":372,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":373,"author":{"gitId":"jonathanlkw"},"content":"    public void printBudget(ExpenseCategory category, double budgetLimit) {","lastModifiedDate":"2021-10-20"},{"lineNumber":374,"author":{"gitId":"jonathanlkw"},"content":"        printLine();","lastModifiedDate":"2021-10-20"},{"lineNumber":375,"author":{"gitId":"jonathanlkw"},"content":"        System.out.printf(\"Current %s limit is $%.2f\", category.toString(), budgetLimit);","lastModifiedDate":"2021-10-20"},{"lineNumber":376,"author":{"gitId":"KZQ1999"},"content":"        System.out.print(NEW_LINE);","lastModifiedDate":"2021-11-03"},{"lineNumber":377,"author":{"gitId":"jonathanlkw"},"content":"        printLine();","lastModifiedDate":"2021-10-20"},{"lineNumber":378,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":379,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":380,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":381,"author":{"gitId":"KZQ1999"},"content":"     * Prints the threshold set feedback for setting budgets.","lastModifiedDate":"2021-10-26"},{"lineNumber":382,"author":{"gitId":"KZQ1999"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":383,"author":{"gitId":"KZQ1999"},"content":"     * @param threshold The threshold for the budget.","lastModifiedDate":"2021-10-26"},{"lineNumber":384,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":385,"author":{"gitId":"jonathanlkw"},"content":"    public void printThresholdConfirmation(double threshold) {","lastModifiedDate":"2021-10-20"},{"lineNumber":386,"author":{"gitId":"jonathanlkw"},"content":"        printLine();","lastModifiedDate":"2021-10-20"},{"lineNumber":387,"author":{"gitId":"jonathanlkw"},"content":"        System.out.println(\"Threshold for budget reminders set to \" + threshold);","lastModifiedDate":"2021-10-20"},{"lineNumber":388,"author":{"gitId":"jonathanlkw"},"content":"        System.out.printf(\"We\u0027ll warn you when you spend %.1f%% of your budget!\", threshold * 100);","lastModifiedDate":"2021-11-04"},{"lineNumber":389,"author":{"gitId":"jonathanlkw"},"content":"        System.out.print(NEW_LINE);","lastModifiedDate":"2021-11-04"},{"lineNumber":390,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-10-19"},{"lineNumber":391,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":392,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":393,"author":{"gitId":"AnShengLee"},"content":"    public void printCurrencyChangedConfirmation(CurrencyType currency) {","lastModifiedDate":"2021-10-27"},{"lineNumber":394,"author":{"gitId":"Nirmaleshwar"},"content":"        printLine();","lastModifiedDate":"2021-10-26"},{"lineNumber":395,"author":{"gitId":"Nirmaleshwar"},"content":"        System.out.println(\"All entries have been converted to \" + currency + \"!\");","lastModifiedDate":"2021-10-27"},{"lineNumber":396,"author":{"gitId":"Nirmaleshwar"},"content":"        printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":397,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":398,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":399,"author":{"gitId":"AnShengLee"},"content":"    public void printSameCurrencyTypeMessage(CurrencyType currency) {","lastModifiedDate":"2021-10-27"},{"lineNumber":400,"author":{"gitId":"Nirmaleshwar"},"content":"        printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":401,"author":{"gitId":"Nirmaleshwar"},"content":"        System.out.println(Messages.SAME_CURRENCY_TYPE_MESSAGE + \"- \" + currency);","lastModifiedDate":"2021-11-02"},{"lineNumber":402,"author":{"gitId":"Nirmaleshwar"},"content":"        printLine();","lastModifiedDate":"2021-10-26"},{"lineNumber":403,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":404,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":405,"author":{"gitId":"AnShengLee"},"content":"    public void printCurrentCurrency(CurrencyType currency) {","lastModifiedDate":"2021-10-27"},{"lineNumber":406,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":407,"author":{"gitId":"AnShengLee"},"content":"        System.out.println(Messages.CURRENT_CURRENCY_MESSAGE + currency.toString());","lastModifiedDate":"2021-10-27"},{"lineNumber":408,"author":{"gitId":"AnShengLee"},"content":"        printLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":409,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":410,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":411,"author":{"gitId":"Nirmaleshwar"},"content":"    public void printCurrencyTypes(ArrayList\u003cCurrencyType\u003e currencyTypes) {","lastModifiedDate":"2021-11-02"},{"lineNumber":412,"author":{"gitId":"Nirmaleshwar"},"content":"        printLine();","lastModifiedDate":"2021-11-02"},{"lineNumber":413,"author":{"gitId":"Nirmaleshwar"},"content":"        System.out.println(Messages.AVAILABLE_CURRENCIES_MESSAGE);","lastModifiedDate":"2021-11-02"},{"lineNumber":414,"author":{"gitId":"Nirmaleshwar"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-11-02"},{"lineNumber":415,"author":{"gitId":"Nirmaleshwar"},"content":"        for (CurrencyType currencyType : currencyTypes) {","lastModifiedDate":"2021-11-02"},{"lineNumber":416,"author":{"gitId":"Nirmaleshwar"},"content":"            System.out.println(i + 1 + \". \" + currencyType);","lastModifiedDate":"2021-11-02"},{"lineNumber":417,"author":{"gitId":"Nirmaleshwar"},"content":"            i++;","lastModifiedDate":"2021-11-02"},{"lineNumber":418,"author":{"gitId":"Nirmaleshwar"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":419,"author":{"gitId":"Nirmaleshwar"},"content":"        printLine();","lastModifiedDate":"2021-11-02"},{"lineNumber":420,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":421,"author":{"gitId":"KZQ1999"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kyun99":17,"AnShengLee":44,"KZQ1999":305,"Nirmaleshwar":27,"jonathanlkw":28}},{"path":"src/main/java/seedu/utility/tools/DateOperator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.utility.tools;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"kyun99"},"content":"import seedu.entry.Entry;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"KZQ1999"},"content":"import java.time.Month;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"kyun99"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"kyun99"},"content":"import static seedu.utility.Parser.DATE_FORMAT;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":" * DateOperator is stores useful date manipulation methods which are used for processing data of FinancialTracker.java.","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"kyun99"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"kyun99"},"content":"public abstract class DateOperator {","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"kyun99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"kyun99"},"content":"     * Checks if the date of a given entry is within a valid date range, ","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"kyun99"},"content":"     * where startDate is earlier than or the same as endDate.","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"kyun99"},"content":"     * ","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"kyun99"},"content":"     * @param startDate The lower bound of the valid date range.","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"kyun99"},"content":"     * @param endDate The upper bound of the valid date range.","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"kyun99"},"content":"     * @param item The entry which date is of interest.","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"kyun99"},"content":"     * @return True if the date of the item lies within a valid range else returns false.","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"kyun99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"kyun99"},"content":"    public static boolean isBetweenStartAndEndDates(LocalDate startDate, LocalDate endDate, Entry item) {","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"kyun99"},"content":"        LocalDate date \u003d item.getDate();","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"kyun99"},"content":"        return ((date.isAfter(startDate) || date.isEqual(startDate))","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"kyun99"},"content":"                \u0026\u0026 (date.isBefore(endDate) || date.isEqual(endDate)));","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"kyun99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"kyun99"},"content":"     * Check if 2 dates form a valid date range.","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"kyun99"},"content":"     * ","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"kyun99"},"content":"     * @param dateRange Object containing the date range","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"kyun99"},"content":"     * @return True if the startDate is earlier than endDate.","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"kyun99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"kyun99"},"content":"    public static boolean isValidDateRange(DateRange dateRange) {","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"kyun99"},"content":"        LocalDate startDate \u003d dateRange.getStartDate();","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"kyun99"},"content":"        LocalDate endDate \u003d dateRange.getEndDate();","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"kyun99"},"content":"        return ((startDate.isBefore(endDate) || startDate.isEqual(endDate)));","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"kyun99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"kyun99"},"content":"     * Check if the year associated with the item matches the input year.","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"kyun99"},"content":"     * ","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"kyun99"},"content":"     * @param inputYear Year used to compare item year with","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"kyun99"},"content":"     * @param item The item whose year we want to compare","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"kyun99"},"content":"     * @return True if year of both inputYear and item\u0027s year are the same, false if different.","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"kyun99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"kyun99"},"content":"    public static boolean isSameYear(int inputYear, Entry item) {","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"kyun99"},"content":"        return item.getDate().getYear() \u003d\u003d inputYear;","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"kyun99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"kyun99"},"content":"     * Check if the month associated with the item matches the input year.","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"kyun99"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"kyun99"},"content":"     * @param inputMonth Year used to compare item month with","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"kyun99"},"content":"     * @param item The item whose month we want to compare","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"kyun99"},"content":"     * @return True if year of both inputMonth and item\u0027s month are the same, false if different.","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"kyun99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"kyun99"},"content":"    public static boolean isSameMonth(int inputMonth, Entry item) {","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"kyun99"},"content":"        return item.getDate().getMonthValue() \u003d\u003d inputMonth;","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"kyun99"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"kyun99"},"content":"     * Create a DateTime format that only accounts for year. It is used to compare with user input","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"kyun99"},"content":"     * ","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"kyun99"},"content":"     * @return DateTimeFormatter object that compares year.","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"kyun99"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"kyun99"},"content":"    public static DateTimeFormatter getYearFormat() {","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"kyun99"},"content":"        return new DateTimeFormatterBuilder().appendPattern(\"yyyy\")","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"kyun99"},"content":"                .parseDefaulting(ChronoField.MONTH_OF_YEAR, 1)","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"kyun99"},"content":"                .parseDefaulting(ChronoField.DAY_OF_MONTH, 1)","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"kyun99"},"content":"                .toFormatter();","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"kyun99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"kyun99"},"content":"     * Creates a lambda that compares if the date associated to an item falls between 2 given dates.","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"kyun99"},"content":"     * ","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"kyun99"},"content":"     * @param startDate The lower bound of the valid date range.","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"kyun99"},"content":"     * @param endDate The upper bound of the valid date range.","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"kyun99"},"content":"     * @return A lambda that can compare item\u0027s date to a valid date range.","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"kyun99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"kyun99"},"content":"    public static Predicate\u003cEntry\u003e entryDateInRange(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"kyun99"},"content":"        return item -\u003e isBetweenStartAndEndDates(startDate, endDate, item);","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"kyun99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"kyun99"},"content":"     * Creates a lambda that checks if the month associated to an item is the same as an input month.","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"kyun99"},"content":"     * ","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"kyun99"},"content":"     * @param inputMonth The month which we compare the item month to.","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"kyun99"},"content":"     * @return A lambda that can compare if item\u0027s month and input month is the same.","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"kyun99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"kyun99"},"content":"    public static Predicate\u003cEntry\u003e sameEntryMonth(int inputMonth) {","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"kyun99"},"content":"        return item -\u003e isSameMonth(inputMonth, item);","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"kyun99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"kyun99"},"content":"     * Creates a lambda that checks if the year associated to an item is the same as an input year.","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"kyun99"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"kyun99"},"content":"     * @param inputYear The month which we compare the item month to.","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"kyun99"},"content":"     * @return A lambda that can compare if item\u0027s year and input year is the same.","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"kyun99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"kyun99"},"content":"    public static Predicate\u003cEntry\u003e sameEntryYear(int inputYear) {","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"kyun99"},"content":"        return item -\u003e isSameYear(inputYear, item);","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":112,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":114,"author":{"gitId":"KZQ1999"},"content":"     * Returns the current month as an index.","lastModifiedDate":"2021-11-07"},{"lineNumber":115,"author":{"gitId":"KZQ1999"},"content":"     * @return The current month as an index of data type int.","lastModifiedDate":"2021-11-07"},{"lineNumber":116,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":117,"author":{"gitId":"KZQ1999"},"content":"    public static int currentMonthInIndex() {","lastModifiedDate":"2021-11-06"},{"lineNumber":118,"author":{"gitId":"KZQ1999"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2021-11-06"},{"lineNumber":119,"author":{"gitId":"KZQ1999"},"content":"        return currentDate.getMonthValue() - 1;","lastModifiedDate":"2021-11-06"},{"lineNumber":120,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":121,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":122,"author":{"gitId":"KZQ1999"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":123,"author":{"gitId":"KZQ1999"},"content":"     * Returns the current month.","lastModifiedDate":"2021-11-07"},{"lineNumber":124,"author":{"gitId":"KZQ1999"},"content":"     * @return The current month as an object.","lastModifiedDate":"2021-11-07"},{"lineNumber":125,"author":{"gitId":"KZQ1999"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":126,"author":{"gitId":"KZQ1999"},"content":"    public static Month currentMonth() {","lastModifiedDate":"2021-11-06"},{"lineNumber":127,"author":{"gitId":"KZQ1999"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2021-11-06"},{"lineNumber":128,"author":{"gitId":"KZQ1999"},"content":"        return currentDate.getMonth();","lastModifiedDate":"2021-11-06"},{"lineNumber":129,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":130,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":131,"author":{"gitId":"kyun99"},"content":"    public static DateRange extractStartAndEndDate(Matcher matcher) {","lastModifiedDate":"2021-11-07"},{"lineNumber":132,"author":{"gitId":"kyun99"},"content":"        String start \u003d matcher.group(\"start\").trim();","lastModifiedDate":"2021-11-07"},{"lineNumber":133,"author":{"gitId":"kyun99"},"content":"        LocalDate startDate \u003d LocalDate.parse(start, DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-11-07"},{"lineNumber":134,"author":{"gitId":"kyun99"},"content":"        String end \u003d matcher.group(\"end\").trim();","lastModifiedDate":"2021-11-07"},{"lineNumber":135,"author":{"gitId":"kyun99"},"content":"        LocalDate endDate \u003d LocalDate.parse(end, DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-11-07"},{"lineNumber":136,"author":{"gitId":"kyun99"},"content":"        return new DateRange(startDate,endDate);","lastModifiedDate":"2021-11-07"},{"lineNumber":137,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":138,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":139,"author":{"gitId":"AnShengLee"},"content":"    //@@author AnShengLee ","lastModifiedDate":"2021-11-07"},{"lineNumber":140,"author":{"gitId":"AnShengLee"},"content":"    public static LocalDate extractDate(Matcher matcher) throws DateTimeParseException {","lastModifiedDate":"2021-11-07"},{"lineNumber":141,"author":{"gitId":"AnShengLee"},"content":"        String date \u003d matcher.group(\"date\").trim();","lastModifiedDate":"2021-11-07"},{"lineNumber":142,"author":{"gitId":"AnShengLee"},"content":"        return LocalDate.parse(date, DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-11-07"},{"lineNumber":143,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":144,"author":{"gitId":"AnShengLee"},"content":"    //@@author AnShengLee","lastModifiedDate":"2021-11-07"},{"lineNumber":145,"author":{"gitId":"AnShengLee"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"kyun99":117,"AnShengLee":7,"KZQ1999":21}},{"path":"src/main/java/seedu/utility/tools/DateRange.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.utility.tools;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"kyun99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"public class DateRange {","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"    private LocalDate startDate;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"    private LocalDate endDate;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"    public DateRange(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"kyun99"},"content":"    public LocalDate getStartDate() {","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"kyun99"},"content":"        return startDate;","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":"    ","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"kyun99"},"content":"    public LocalDate getEndDate() {","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"kyun99"},"content":"        return endDate;","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"kyun99":21}},{"path":"src/main/java/seedu/utility/tools/Extractor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.utility.tools;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"jonathanlkw"},"content":"import seedu.commands.InvalidCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"import seedu.entry.ExpenseCategory;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"import seedu.entry.IncomeCategory;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.BlankExpenseCategoryException;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.BlankIncomeCategoryException;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"jonathanlkw"},"content":"import seedu.exceptions.InvalidBudgetAmountException;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.InvalidDescriptionException;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"AnShengLee"},"content":"import seedu.exceptions.InvalidAmountException;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.InvalidExpenseCategoryException;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.InvalidIncomeCategoryException;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.InvalidIndexException;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"AnShengLee"},"content":"import seedu.exceptions.EntryAmountExceedLimitException;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"AnShengLee"},"content":"import seedu.exceptions.InvalidThresholdValueException;","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":"import seedu.utility.Messages;","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"kyun99"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"kyun99"},"content":"public abstract class Extractor {","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"AnShengLee"},"content":"    private static final double ENTRY_AMOUNT_LIMIT \u003d 1000000;","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"jonathanlkw"},"content":"    private static final double BUDGET_AMOUNT_LIMIT \u003d 100000000000.00;","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"kyun99"},"content":"    public static int extractIndex(String userGivenIndex) throws InvalidIndexException {","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"kyun99"},"content":"        try {","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"kyun99"},"content":"            int deleteIndex \u003d Integer.parseInt(userGivenIndex);","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"kyun99"},"content":"            if (deleteIndex \u003c\u003d 0) {","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"kyun99"},"content":"                throw new InvalidIndexException(Messages.NON_POSITIVE_INTEGER_INDEX_MESSAGE);","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"kyun99"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"kyun99"},"content":"            return deleteIndex;","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"kyun99"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"kyun99"},"content":"            throw new InvalidIndexException(Messages.INVALID_INDEX_MESSAGE);","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"kyun99"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"kyun99"},"content":"    public static String extractDescription(Matcher matcher) throws","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"kyun99"},"content":"            InvalidDescriptionException {","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"kyun99"},"content":"        String description \u003d matcher.group(\"description\").trim();","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"kyun99"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"kyun99"},"content":"            throw new InvalidDescriptionException(Messages.BLANK_DESCRIPTION_MESSAGE);","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"kyun99"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"kyun99"},"content":"        return description;","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"kyun99"},"content":"    public static IncomeCategory extractIncomeCategory(Matcher matcher) throws","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"kyun99"},"content":"            BlankIncomeCategoryException, InvalidIncomeCategoryException {","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"kyun99"},"content":"        String incomeCategory \u003d matcher.group(\"category\").trim();","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"kyun99"},"content":"        if (incomeCategory.isBlank()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"kyun99"},"content":"            throw new BlankIncomeCategoryException(Messages.BLANK_CATEGORY_MESSAGE);","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"kyun99"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"kyun99"},"content":"        switch (incomeCategory.toUpperCase()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"kyun99"},"content":"        case \"ALLOWANCE\":","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"kyun99"},"content":"            return IncomeCategory.ALLOWANCE;","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"kyun99"},"content":"        case \"SALARY\":","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"kyun99"},"content":"            return IncomeCategory.SALARY;","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"kyun99"},"content":"        case \"ADHOC\":","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"kyun99"},"content":"            return IncomeCategory.ADHOC;","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"kyun99"},"content":"        case \"OTHERS\":","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"kyun99"},"content":"            return IncomeCategory.OTHERS;","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"kyun99"},"content":"        default:","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"kyun99"},"content":"            throw new InvalidIncomeCategoryException(Messages.INVALID_INCOME_CATEGORY_MESSAGE);","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"kyun99"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"kyun99"},"content":"    public static ExpenseCategory extractExpenseCategory(Matcher matcher) throws","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"kyun99"},"content":"            BlankExpenseCategoryException, InvalidExpenseCategoryException {","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"kyun99"},"content":"        String expenseCategory \u003d matcher.group(\"category\").trim();","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"kyun99"},"content":"        if (expenseCategory.isBlank()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"kyun99"},"content":"            throw new BlankExpenseCategoryException(Messages.BLANK_CATEGORY_MESSAGE);","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"kyun99"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"kyun99"},"content":"        switch (expenseCategory.toUpperCase()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"kyun99"},"content":"        case \"FOOD\":","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"kyun99"},"content":"            return ExpenseCategory.FOOD;","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"kyun99"},"content":"        case \"TRANSPORT\":","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"kyun99"},"content":"            return ExpenseCategory.TRANSPORT;","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"kyun99"},"content":"        case \"MEDICAL\":","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"kyun99"},"content":"            return ExpenseCategory.MEDICAL;","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"kyun99"},"content":"        case \"BILLS\":","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"kyun99"},"content":"            return ExpenseCategory.BILLS;","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"kyun99"},"content":"        case \"ENTERTAINMENT\":","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"kyun99"},"content":"            return ExpenseCategory.ENTERTAINMENT;","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"kyun99"},"content":"        case \"MISC\":","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"kyun99"},"content":"            return ExpenseCategory.MISC;","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"kyun99"},"content":"        default:","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"kyun99"},"content":"            throw new InvalidExpenseCategoryException(Messages.INVALID_EXPENSE_CATEGORY_MESSAGE);","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"kyun99"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"jonathanlkw"},"content":"    public static double extractBudgetAmount(Matcher matcher) throws InvalidBudgetAmountException {","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"jonathanlkw"},"content":"        String dataAmount \u003d matcher.group(\"amount\").trim();","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"jonathanlkw"},"content":"        if (dataAmount.isBlank()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"jonathanlkw"},"content":"            throw new InvalidBudgetAmountException(Messages.BLANK_AMOUNT_MESSAGE);","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"jonathanlkw"},"content":"        } else if (hasMoreThanTwoDecimalPlaces(dataAmount)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":95,"author":{"gitId":"jonathanlkw"},"content":"            throw new InvalidBudgetAmountException(Messages.TOO_MANY_DP_MESSAGE);","lastModifiedDate":"2021-11-07"},{"lineNumber":96,"author":{"gitId":"jonathanlkw"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"jonathanlkw"},"content":"        double budgetAmount;","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"jonathanlkw"},"content":"        try {","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"jonathanlkw"},"content":"            budgetAmount \u003d Double.parseDouble(dataAmount);","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"jonathanlkw"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":101,"author":{"gitId":"jonathanlkw"},"content":"            throw new InvalidBudgetAmountException(Messages.NON_NUMERIC_AMOUNT_MESSAGE);","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"jonathanlkw"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":103,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":104,"author":{"gitId":"jonathanlkw"},"content":"        if (budgetAmount \u003c 0) {","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"jonathanlkw"},"content":"            throw new InvalidBudgetAmountException(Messages.NON_POSITIVE_AMOUNT_MESSAGE);","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"jonathanlkw"},"content":"        } else if (Double.isInfinite(budgetAmount) || Double.isNaN(budgetAmount)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"jonathanlkw"},"content":"            throw new InvalidBudgetAmountException(Messages.NON_NUMERIC_AMOUNT_MESSAGE);","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"jonathanlkw"},"content":"        } else if (budgetAmount \u003e BUDGET_AMOUNT_LIMIT) {","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"jonathanlkw"},"content":"            throw new InvalidBudgetAmountException(Messages.INVALID_BUDGET_VALUE);","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"jonathanlkw"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"jonathanlkw"},"content":"        return budgetAmount;","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":114,"author":{"gitId":"AnShengLee"},"content":"    public static double extractAmount(Matcher matcher) throws InvalidAmountException,","lastModifiedDate":"2021-11-07"},{"lineNumber":115,"author":{"gitId":"AnShengLee"},"content":"            EntryAmountExceedLimitException {","lastModifiedDate":"2021-11-07"},{"lineNumber":116,"author":{"gitId":"AnShengLee"},"content":"        String userGivenAmount \u003d matcher.group(\"amount\").trim();","lastModifiedDate":"2021-11-07"},{"lineNumber":117,"author":{"gitId":"AnShengLee"},"content":"        double amount \u003d parseAmount(userGivenAmount);","lastModifiedDate":"2021-11-07"},{"lineNumber":118,"author":{"gitId":"AnShengLee"},"content":"        if (amount \u003e ENTRY_AMOUNT_LIMIT) {","lastModifiedDate":"2021-11-07"},{"lineNumber":119,"author":{"gitId":"AnShengLee"},"content":"            throw new EntryAmountExceedLimitException(Messages.INVALID_EXPENSE_VALUE);","lastModifiedDate":"2021-11-07"},{"lineNumber":120,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":121,"author":{"gitId":"AnShengLee"},"content":"        return amount;","lastModifiedDate":"2021-11-07"},{"lineNumber":122,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":123,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":124,"author":{"gitId":"AnShengLee"},"content":"    private static double parseAmount(String userGivenAmount) throws InvalidAmountException {","lastModifiedDate":"2021-11-07"},{"lineNumber":125,"author":{"gitId":"AnShengLee"},"content":"        double amount;","lastModifiedDate":"2021-11-07"},{"lineNumber":126,"author":{"gitId":"AnShengLee"},"content":"        try {","lastModifiedDate":"2021-11-07"},{"lineNumber":127,"author":{"gitId":"AnShengLee"},"content":"            amount \u003d Double.parseDouble(userGivenAmount);","lastModifiedDate":"2021-11-07"},{"lineNumber":128,"author":{"gitId":"AnShengLee"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":129,"author":{"gitId":"AnShengLee"},"content":"            throw new InvalidAmountException(Messages.NON_NUMERIC_AMOUNT_MESSAGE);","lastModifiedDate":"2021-11-07"},{"lineNumber":130,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":131,"author":{"gitId":"AnShengLee"},"content":"        if (hasMoreThanTwoDecimalPlaces(userGivenAmount)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":132,"author":{"gitId":"AnShengLee"},"content":"            throw new InvalidAmountException(Messages.TOO_MANY_DP_MESSAGE);","lastModifiedDate":"2021-11-07"},{"lineNumber":133,"author":{"gitId":"AnShengLee"},"content":"        } else if (amount \u003c\u003d 0) {","lastModifiedDate":"2021-11-07"},{"lineNumber":134,"author":{"gitId":"AnShengLee"},"content":"            throw new InvalidAmountException(Messages.NON_POSITIVE_AMOUNT_MESSAGE);","lastModifiedDate":"2021-11-07"},{"lineNumber":135,"author":{"gitId":"AnShengLee"},"content":"        } else if (Double.isNaN(amount) || Double.isInfinite(amount)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":136,"author":{"gitId":"AnShengLee"},"content":"            throw new InvalidAmountException(Messages.NON_NUMERIC_AMOUNT_MESSAGE);","lastModifiedDate":"2021-11-07"},{"lineNumber":137,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":138,"author":{"gitId":"AnShengLee"},"content":"        assert amount \u003e 0;","lastModifiedDate":"2021-11-07"},{"lineNumber":139,"author":{"gitId":"AnShengLee"},"content":"        return amount;","lastModifiedDate":"2021-11-07"},{"lineNumber":140,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":141,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":142,"author":{"gitId":"AnShengLee"},"content":"    private static boolean hasMoreThanTwoDecimalPlaces(String userGivenAmount) {","lastModifiedDate":"2021-11-07"},{"lineNumber":143,"author":{"gitId":"AnShengLee"},"content":"        boolean hasDecimal \u003d userGivenAmount.contains(\".\");","lastModifiedDate":"2021-11-07"},{"lineNumber":144,"author":{"gitId":"AnShengLee"},"content":"        if (hasDecimal) {","lastModifiedDate":"2021-11-07"},{"lineNumber":145,"author":{"gitId":"AnShengLee"},"content":"            int indexOfDecimal \u003d userGivenAmount.indexOf(\".\");","lastModifiedDate":"2021-11-07"},{"lineNumber":146,"author":{"gitId":"AnShengLee"},"content":"            String decimals \u003d userGivenAmount.substring(indexOfDecimal + 1);","lastModifiedDate":"2021-11-07"},{"lineNumber":147,"author":{"gitId":"AnShengLee"},"content":"            int numOfDecimalPlaces \u003d decimals.length();","lastModifiedDate":"2021-11-07"},{"lineNumber":148,"author":{"gitId":"AnShengLee"},"content":"            return numOfDecimalPlaces \u003e 2;","lastModifiedDate":"2021-11-07"},{"lineNumber":149,"author":{"gitId":"AnShengLee"},"content":"        } else {","lastModifiedDate":"2021-11-07"},{"lineNumber":150,"author":{"gitId":"AnShengLee"},"content":"            return false;","lastModifiedDate":"2021-11-07"},{"lineNumber":151,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":152,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":153,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":154,"author":{"gitId":"AnShengLee"},"content":"    public static double extractThresholdValue(Matcher matcher) throws InvalidThresholdValueException {","lastModifiedDate":"2021-11-07"},{"lineNumber":155,"author":{"gitId":"AnShengLee"},"content":"        String userGivenThreshold \u003d matcher.group(\"threshold\").trim();","lastModifiedDate":"2021-11-07"},{"lineNumber":156,"author":{"gitId":"AnShengLee"},"content":"        return parseThresholdValue(userGivenThreshold);","lastModifiedDate":"2021-11-07"},{"lineNumber":157,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":158,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":159,"author":{"gitId":"AnShengLee"},"content":"    private static double parseThresholdValue(String userGivenThreshold) throws InvalidThresholdValueException {","lastModifiedDate":"2021-11-07"},{"lineNumber":160,"author":{"gitId":"AnShengLee"},"content":"        double thresholdValue;","lastModifiedDate":"2021-11-07"},{"lineNumber":161,"author":{"gitId":"AnShengLee"},"content":"        try {","lastModifiedDate":"2021-11-07"},{"lineNumber":162,"author":{"gitId":"AnShengLee"},"content":"            thresholdValue \u003d Double.parseDouble(userGivenThreshold);","lastModifiedDate":"2021-11-07"},{"lineNumber":163,"author":{"gitId":"AnShengLee"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":164,"author":{"gitId":"AnShengLee"},"content":"            throw new InvalidThresholdValueException(Messages.NON_NUMERIC_THRESHOLD_MESSAGE);","lastModifiedDate":"2021-11-07"},{"lineNumber":165,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":166,"author":{"gitId":"AnShengLee"},"content":"        if ((thresholdValue \u003c 0) | (thresholdValue \u003e 1)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":167,"author":{"gitId":"AnShengLee"},"content":"            throw new InvalidThresholdValueException(Messages.INVALID_THRESHOLD_MESSAGE);","lastModifiedDate":"2021-11-07"},{"lineNumber":168,"author":{"gitId":"AnShengLee"},"content":"        } else if (Double.isNaN(thresholdValue) || Double.isInfinite(thresholdValue)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":169,"author":{"gitId":"AnShengLee"},"content":"            throw new InvalidThresholdValueException(Messages.NON_NUMERIC_THRESHOLD_MESSAGE);","lastModifiedDate":"2021-11-07"},{"lineNumber":170,"author":{"gitId":"AnShengLee"},"content":"        } else if (hasMoreThanTwoDecimalPlaces(userGivenThreshold)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":171,"author":{"gitId":"AnShengLee"},"content":"            throw new InvalidThresholdValueException(Messages.TOO_MANY_DP_MESSAGE);","lastModifiedDate":"2021-11-07"},{"lineNumber":172,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":173,"author":{"gitId":"AnShengLee"},"content":"        return thresholdValue;","lastModifiedDate":"2021-11-07"},{"lineNumber":174,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":175,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"kyun99":80,"AnShengLee":67,"jonathanlkw":28}},{"path":"src/main/java/seedu/utility/tools/FinancialAdvisor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.utility.tools;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"kyun99"},"content":"import seedu.utility.Messages;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"import java.util.Random;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":" * FinancialAdvisor offers a finance related tip to the user at the end when the program terminates.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"kyun99"},"content":"public abstract class FinancialAdvisor {","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"kyun99"},"content":"    private static final Random RANDOM \u003d new Random();","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"kyun99"},"content":"    ","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"kyun99"},"content":"    private static final String ADVICE_1 \u003d \"Try using the 50/30/20 rule to budget.\"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":"            + \" 50% for needs, 30% for wants and 20% for savings\";","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":"    private static final String ADVICE_2 \u003d \"Do you have an emergency fund? \"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"kyun99"},"content":"            + \"It should cover at least 3 to 6 months of your expense\";","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"kyun99"},"content":"    private static final String ADVICE_3 \u003d \"The Best Time To Invest Was Yesterday,\"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"kyun99"},"content":"            + \" The Second Best Time Is Today\";","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"kyun99"},"content":"    private static final String ADVICE_4 \u003d \"If you have any debts,\" ","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"kyun99"},"content":"            + \" try to pay off the one with the highest interest first.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"kyun99"},"content":"    private static final String ADVICE_5 \u003d \"If there is something you really want to buy\"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"kyun99"},"content":"            + \", make sure you have the price of it times 10 in your savings first\";","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"kyun99"},"content":"    private static final List\u003cString\u003e ADVICES \u003d Arrays.asList(ADVICE_1,ADVICE_2,ADVICE_3,ADVICE_4,ADVICE_5);","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"kyun99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"kyun99"},"content":"     * Generates a random advice.","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"kyun99"},"content":"     * ","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"kyun99"},"content":"     * @return A string that reads a financial advice.","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"kyun99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"kyun99"},"content":"    public static String getRandomAdvice() {","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"kyun99"},"content":"        int bound \u003d ADVICES.size();","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"kyun99"},"content":"        if (isValidRandomRange(bound)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"kyun99"},"content":"            int adviceIndex \u003d RANDOM.nextInt(bound);","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"kyun99"},"content":"            return ADVICES.get(adviceIndex);","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"kyun99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"kyun99"},"content":"        return Messages.DISPLAY_ADVICE_ERROR;","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"kyun99"},"content":"    private static boolean isValidRandomRange(int bound) {","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"kyun99"},"content":"        return bound \u003e 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"kyun99":44}},{"path":"src/main/java/seedu/utility/tools/FinancialCalculator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.utility.tools;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"kyun99"},"content":"import seedu.entry.Entry;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"import java.util.List;","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":"import static seedu.utility.FinancialTracker.TOTAL_ENTRIES_LIMIT;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":"import static seedu.utility.tools.DateOperator.sameEntryMonth;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"kyun99"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"kyun99"},"content":" * This class abstracts out more complication calculations used in FinancialTracker.","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":"public abstract class FinancialCalculator {","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"kyun99"},"content":"    private static final int[] MONTHS \u003d IntStream.range(1,13).toArray();","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"kyun99"},"content":"    ","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"kyun99"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"kyun99"},"content":"     * Sorts an entire year\u0027s entries according to the month they are associated with.","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"kyun99"},"content":"     * ","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"kyun99"},"content":"     * @param yearlyAccumulatedEntries A List of entries that all share the same associated year.","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"kyun99"},"content":"     * @return A sorted ArrayList where index 1 - 12 contains the total entry corresponding to the month Jan to Dec.","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"kyun99"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"kyun99"},"content":"    public static ArrayList\u003cDouble\u003e sortEntriesByMonth(List\u003cEntry\u003e yearlyAccumulatedEntries) {","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"kyun99"},"content":"        ArrayList\u003cDouble\u003e monthlyBreakdown \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"kyun99"},"content":"        for (int month : MONTHS) {","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"kyun99"},"content":"            double entryForTheMonth \u003d getMonthlyEntries(month, yearlyAccumulatedEntries);","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"kyun99"},"content":"            monthlyBreakdown.add(entryForTheMonth);","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"kyun99"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"kyun99"},"content":"        return monthlyBreakdown;","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"kyun99"},"content":"    ","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"kyun99"},"content":"    private static double getMonthlyEntries(int inputMonth, List\u003cEntry\u003e yearlyEntries) {","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"kyun99"},"content":"        List\u003cEntry\u003e monthlyAccumulatedEntries \u003d yearlyEntries.stream()","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"kyun99"},"content":"                .filter(sameEntryMonth(inputMonth))","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"kyun99"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"kyun99"},"content":"        return getSumOfEntries(monthlyAccumulatedEntries);","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"kyun99"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"kyun99"},"content":"     * Calculate the total amount associated to all the entries in the list.","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"kyun99"},"content":"     * ","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"kyun99"},"content":"     * @param accumulatedEntries A list containing all the entries we want to sum the values of.","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"kyun99"},"content":"     * @return The sum of all the entries stored as a double.","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"kyun99"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"kyun99"},"content":"    public static double getSumOfEntries(List\u003cEntry\u003e accumulatedEntries) {","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"kyun99"},"content":"        double totalEntry \u003d accumulatedEntries.stream()","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"kyun99"},"content":"                .mapToDouble(Entry::getValue)","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"kyun99"},"content":"                .sum();","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"kyun99"},"content":"        assert totalEntry \u003c\u003d TOTAL_ENTRIES_LIMIT;","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"kyun99"},"content":"        return totalEntry;","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"kyun99":55}},{"path":"src/test/java/seedu/duke/BalanceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"kyun99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"import seedu.entry.Expense;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"import seedu.entry.ExpenseCategory;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"import seedu.entry.Income;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"import seedu.entry.IncomeCategory;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.ExpenseOverflowException;","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.IncomeOverflowException;","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"kyun99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"kyun99"},"content":"public class BalanceCommandTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"kyun99"},"content":"    private FinancialTracker testTracker \u003d new FinancialTracker();","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":"    ","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"kyun99"},"content":"    public void execute_twoValidDateInputs_validTotalSum() throws IncomeOverflowException, ExpenseOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"kyun99"},"content":"        Income testIncome \u003d new Income(\"Salary\", 400.00, IncomeCategory.SALARY);","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"kyun99"},"content":"        Expense testExpense \u003d new Expense(\"Burger\", 500.00, ExpenseCategory.FOOD);","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"kyun99"},"content":"        testTracker.addIncome(testIncome);","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"kyun99"},"content":"        testTracker.addExpense(testExpense);","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"KZQ1999"},"content":"        assertEquals(-100.00, testTracker.calculateBalance());","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"kyun99":24,"KZQ1999":1}},{"path":"src/test/java/seedu/duke/BudgetManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonathanlkw"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"jonathanlkw"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jonathanlkw"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"jonathanlkw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"jonathanlkw"},"content":"import seedu.entry.Expense;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"jonathanlkw"},"content":"import seedu.entry.ExpenseCategory;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.ExpenseOverflowException;","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"jonathanlkw"},"content":"import seedu.reminder.BudgetReminder;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"jonathanlkw"},"content":"import seedu.reminder.BudgetSetReminder;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"jonathanlkw"},"content":"import seedu.reminder.DoubleExceededBudgetReminder;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"jonathanlkw"},"content":"import seedu.reminder.DoubleNearingBudgetReminder;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"jonathanlkw"},"content":"import seedu.reminder.ExceededBudgetNearingOverallReminder;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"jonathanlkw"},"content":"import seedu.reminder.SingleExceededReminder;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"jonathanlkw"},"content":"import seedu.reminder.SingleNearingReminder;","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"jonathanlkw"},"content":"import seedu.reminder.SingleReminder;","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"jonathanlkw"},"content":"import seedu.reminder.UnableToSetBudgetReminder;","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"jonathanlkw"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"jonathanlkw"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"jonathanlkw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"jonathanlkw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"jonathanlkw"},"content":"public class BudgetManagerTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"jonathanlkw"},"content":"    private static final String currentMonth \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"jonathanlkw"},"content":"            LocalDate.now().getMonth().toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"jonathanlkw"},"content":"    private final BudgetManager budgetManager \u003d new BudgetManager();","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"jonathanlkw"},"content":"    private final FinancialTracker finances \u003d new FinancialTracker();","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"jonathanlkw"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"jonathanlkw"},"content":"    public void setBudget_validEntry_correctBudget() {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"jonathanlkw"},"content":"        BudgetReminder reminder \u003d budgetManager.setBudget(2000.50, ExpenseCategory.OVERALL, finances.getExpenses());","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"jonathanlkw"},"content":"        BudgetReminder expectedReminder \u003d new BudgetSetReminder(\"OVERALL\", 2000.50);","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"jonathanlkw"},"content":"        assertEquals(2000.50, budgetManager.getBudget(ExpenseCategory.OVERALL));","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"jonathanlkw"},"content":"        assertEquals(expectedReminder.toString(), reminder.toString());","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"jonathanlkw"},"content":"    public void setBudget_overallBudgetLessThanBudget_warningGiven() {","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"jonathanlkw"},"content":"        BudgetReminder reminder \u003d budgetManager.setBudget(2000.50, ExpenseCategory.TRANSPORT,","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"jonathanlkw"},"content":"                finances.getExpenses());","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"jonathanlkw"},"content":"        BudgetReminder expectedReminder \u003d new UnableToSetBudgetReminder(\"TRANSPORT\", 0,","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"jonathanlkw"},"content":"                0, 2000.50, 2000.50);","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"jonathanlkw"},"content":"        assertEquals(0, budgetManager.getBudget(ExpenseCategory.TRANSPORT));","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"jonathanlkw"},"content":"        assertEquals(expectedReminder.toString(), reminder.toString());","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"jonathanlkw"},"content":"    public void setBudget_budgetLessThanExpense_warningGiven() throws ExpenseOverflowException {","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"jonathanlkw"},"content":"        budgetManager.setBudget(20, ExpenseCategory.OVERALL, finances.getExpenses());","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"jonathanlkw"},"content":"        finances.addExpense(new Expense(\"mcdonalds\", 15, ExpenseCategory.FOOD));","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"jonathanlkw"},"content":"        BudgetReminder reminder \u003d budgetManager.setBudget(10, ExpenseCategory.FOOD, finances.getExpenses());","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"jonathanlkw"},"content":"        BudgetReminder expectedReminder \u003d new UnableToSetBudgetReminder(\"FOOD\", 15,","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"jonathanlkw"},"content":"                20, 10, 15);","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"jonathanlkw"},"content":"        assertEquals(0, budgetManager.getBudget(ExpenseCategory.FOOD));","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"jonathanlkw"},"content":"        assertEquals(expectedReminder.toString(), reminder.toString());","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"jonathanlkw"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"jonathanlkw"},"content":"    public void setThreshold_validEntry_correctThreshold() {","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"jonathanlkw"},"content":"        budgetManager.setThreshold(0.85);","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"jonathanlkw"},"content":"        assertEquals(0.85, budgetManager.getThreshold());","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"jonathanlkw"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"jonathanlkw"},"content":"    public void handleBudget_overallNotExceededBudgetNotExceeded_DoubleNearingBudgetReminder()","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"kyun99"},"content":"            throws ExpenseOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"jonathanlkw"},"content":"        budgetManager.setBudget(13, ExpenseCategory.OVERALL, finances.getExpenses());","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"jonathanlkw"},"content":"        budgetManager.setBudget(12, ExpenseCategory.FOOD, finances.getExpenses());","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"jonathanlkw"},"content":"        budgetManager.setThreshold(0.8);","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"jonathanlkw"},"content":"        finances.addExpense(new Expense(\"mcdonalds\", 5, ExpenseCategory.FOOD));","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"jonathanlkw"},"content":"        Expense testExpense \u003d new Expense(\"dinner\", 6, ExpenseCategory.FOOD);","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"jonathanlkw"},"content":"        finances.addExpense(testExpense);","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"jonathanlkw"},"content":"        BudgetReminder reminder \u003d budgetManager.handleBudget(testExpense, finances.getExpenses());","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"jonathanlkw"},"content":"        BudgetReminder expectedReminder \u003d new DoubleNearingBudgetReminder(currentMonth,","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"jonathanlkw"},"content":"                \"FOOD\", 11, 12, 11, 13, 12);","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"jonathanlkw"},"content":"        assertEquals(expectedReminder.toString(), reminder.toString());","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"jonathanlkw"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"jonathanlkw"},"content":"    public void handleBudget_overallNotExceededBudgetExceeded_ExceededBudgetNearingOverallReminder()","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"jonathanlkw"},"content":"            throws ExpenseOverflowException {","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"jonathanlkw"},"content":"        budgetManager.setBudget(12, ExpenseCategory.OVERALL, finances.getExpenses());","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"jonathanlkw"},"content":"        budgetManager.setBudget(4, ExpenseCategory.FOOD, finances.getExpenses());","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"jonathanlkw"},"content":"        budgetManager.setThreshold(0.9);","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"jonathanlkw"},"content":"        Expense testExpense \u003d new Expense(\"breakfast\", 11, ExpenseCategory.FOOD);","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"jonathanlkw"},"content":"        finances.addExpense(testExpense);","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"jonathanlkw"},"content":"        BudgetReminder reminder \u003d budgetManager.handleBudget(testExpense, finances.getExpenses());","lastModifiedDate":"2021-11-07"},{"lineNumber":95,"author":{"gitId":"jonathanlkw"},"content":"        BudgetReminder expectedReminder \u003d new ExceededBudgetNearingOverallReminder(currentMonth,","lastModifiedDate":"2021-11-07"},{"lineNumber":96,"author":{"gitId":"jonathanlkw"},"content":"                \"FOOD\", 11, 4, 11,12, 11);","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"jonathanlkw"},"content":"        assertEquals(expectedReminder.toString(), reminder.toString());","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"jonathanlkw"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":101,"author":{"gitId":"jonathanlkw"},"content":"    public void handleBudget_overallExceededBudgetExceeded_DoubleExceededBudgetReminder()","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"jonathanlkw"},"content":"            throws ExpenseOverflowException {","lastModifiedDate":"2021-11-07"},{"lineNumber":103,"author":{"gitId":"jonathanlkw"},"content":"        budgetManager.setBudget(12, ExpenseCategory.OVERALL, finances.getExpenses());","lastModifiedDate":"2021-11-07"},{"lineNumber":104,"author":{"gitId":"jonathanlkw"},"content":"        budgetManager.setBudget(4, ExpenseCategory.FOOD, finances.getExpenses());","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"jonathanlkw"},"content":"        budgetManager.setThreshold(0.9);","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"jonathanlkw"},"content":"        Expense testExpense \u003d new Expense(\"breakfast\", 15, ExpenseCategory.FOOD);","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"jonathanlkw"},"content":"        finances.addExpense(testExpense);","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"jonathanlkw"},"content":"        BudgetReminder reminder \u003d budgetManager.handleBudget(testExpense, finances.getExpenses());","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"jonathanlkw"},"content":"        BudgetReminder expectedReminder \u003d new DoubleExceededBudgetReminder(currentMonth,","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"jonathanlkw"},"content":"                \"FOOD\", 15, 4, 15,12, 15);","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"jonathanlkw"},"content":"        assertEquals(expectedReminder.toString(), reminder.toString());","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"jonathanlkw"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"jonathanlkw"},"content":"    public void handleBudget_overallNoWarningBudgetExceeded_SingleExceededReminder()","lastModifiedDate":"2021-11-07"},{"lineNumber":116,"author":{"gitId":"kyun99"},"content":"            throws ExpenseOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":117,"author":{"gitId":"jonathanlkw"},"content":"        budgetManager.setBudget(12, ExpenseCategory.OVERALL, finances.getExpenses());","lastModifiedDate":"2021-11-07"},{"lineNumber":118,"author":{"gitId":"jonathanlkw"},"content":"        budgetManager.setBudget(4, ExpenseCategory.FOOD, finances.getExpenses());","lastModifiedDate":"2021-11-07"},{"lineNumber":119,"author":{"gitId":"jonathanlkw"},"content":"        budgetManager.setThreshold(0.9);","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"jonathanlkw"},"content":"        Expense testExpense \u003d new Expense(\"breakfast\", 5, ExpenseCategory.FOOD);","lastModifiedDate":"2021-11-07"},{"lineNumber":121,"author":{"gitId":"jonathanlkw"},"content":"        finances.addExpense(testExpense);","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"jonathanlkw"},"content":"        BudgetReminder reminder \u003d budgetManager.handleBudget(testExpense, finances.getExpenses());","lastModifiedDate":"2021-11-07"},{"lineNumber":123,"author":{"gitId":"jonathanlkw"},"content":"        BudgetReminder expectedReminder \u003d new SingleExceededReminder(currentMonth,","lastModifiedDate":"2021-11-07"},{"lineNumber":124,"author":{"gitId":"jonathanlkw"},"content":"                \"FOOD\", 5, 4);","lastModifiedDate":"2021-11-07"},{"lineNumber":125,"author":{"gitId":"jonathanlkw"},"content":"        assertEquals(expectedReminder.toString(), reminder.toString());","lastModifiedDate":"2021-11-07"},{"lineNumber":126,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":127,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"jonathanlkw"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":129,"author":{"gitId":"jonathanlkw"},"content":"    public void handleBudget_overallNoWarningBudgetNearing_SingleNearingReminder()","lastModifiedDate":"2021-11-07"},{"lineNumber":130,"author":{"gitId":"jonathanlkw"},"content":"            throws ExpenseOverflowException {","lastModifiedDate":"2021-11-07"},{"lineNumber":131,"author":{"gitId":"jonathanlkw"},"content":"        budgetManager.setBudget(12, ExpenseCategory.OVERALL, finances.getExpenses());","lastModifiedDate":"2021-11-07"},{"lineNumber":132,"author":{"gitId":"jonathanlkw"},"content":"        budgetManager.setBudget(4, ExpenseCategory.FOOD, finances.getExpenses());","lastModifiedDate":"2021-11-07"},{"lineNumber":133,"author":{"gitId":"jonathanlkw"},"content":"        budgetManager.setThreshold(0.9);","lastModifiedDate":"2021-11-07"},{"lineNumber":134,"author":{"gitId":"jonathanlkw"},"content":"        Expense testExpense \u003d new Expense(\"breakfast\", 3.9, ExpenseCategory.FOOD);","lastModifiedDate":"2021-11-07"},{"lineNumber":135,"author":{"gitId":"jonathanlkw"},"content":"        finances.addExpense(testExpense);","lastModifiedDate":"2021-11-07"},{"lineNumber":136,"author":{"gitId":"jonathanlkw"},"content":"        BudgetReminder reminder \u003d budgetManager.handleBudget(testExpense, finances.getExpenses());","lastModifiedDate":"2021-11-07"},{"lineNumber":137,"author":{"gitId":"jonathanlkw"},"content":"        BudgetReminder expectedReminder \u003d new SingleNearingReminder(currentMonth,","lastModifiedDate":"2021-11-07"},{"lineNumber":138,"author":{"gitId":"jonathanlkw"},"content":"                \"FOOD\", 3.9, 4);","lastModifiedDate":"2021-11-07"},{"lineNumber":139,"author":{"gitId":"jonathanlkw"},"content":"        assertEquals(expectedReminder.toString(), reminder.toString());","lastModifiedDate":"2021-11-07"},{"lineNumber":140,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"jonathanlkw"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":143,"author":{"gitId":"jonathanlkw"},"content":"    public void handleBudget_overallNoWarningBudgetNotNearing_SingleBudgetReminder()","lastModifiedDate":"2021-11-07"},{"lineNumber":144,"author":{"gitId":"jonathanlkw"},"content":"            throws ExpenseOverflowException {","lastModifiedDate":"2021-11-07"},{"lineNumber":145,"author":{"gitId":"jonathanlkw"},"content":"        budgetManager.setBudget(12, ExpenseCategory.OVERALL, finances.getExpenses());","lastModifiedDate":"2021-11-07"},{"lineNumber":146,"author":{"gitId":"jonathanlkw"},"content":"        budgetManager.setBudget(4, ExpenseCategory.FOOD, finances.getExpenses());","lastModifiedDate":"2021-11-07"},{"lineNumber":147,"author":{"gitId":"jonathanlkw"},"content":"        budgetManager.setThreshold(0.9);","lastModifiedDate":"2021-11-07"},{"lineNumber":148,"author":{"gitId":"jonathanlkw"},"content":"        Expense testExpense \u003d new Expense(\"breakfast\", 1.20, ExpenseCategory.FOOD);","lastModifiedDate":"2021-11-07"},{"lineNumber":149,"author":{"gitId":"jonathanlkw"},"content":"        finances.addExpense(testExpense);","lastModifiedDate":"2021-11-07"},{"lineNumber":150,"author":{"gitId":"jonathanlkw"},"content":"        BudgetReminder reminder \u003d budgetManager.handleBudget(testExpense, finances.getExpenses());","lastModifiedDate":"2021-11-07"},{"lineNumber":151,"author":{"gitId":"jonathanlkw"},"content":"        BudgetReminder expectedReminder \u003d new SingleReminder(currentMonth,","lastModifiedDate":"2021-11-07"},{"lineNumber":152,"author":{"gitId":"jonathanlkw"},"content":"                \"FOOD\", 1.20, 4);","lastModifiedDate":"2021-11-07"},{"lineNumber":153,"author":{"gitId":"jonathanlkw"},"content":"        assertEquals(expectedReminder.toString(), reminder.toString());","lastModifiedDate":"2021-11-07"},{"lineNumber":154,"author":{"gitId":"jonathanlkw"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":155,"author":{"gitId":"jonathanlkw"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"jonathanlkw"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kyun99":3,"jonathanlkw":153}},{"path":"src/test/java/seedu/duke/CommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"kyun99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.expense.AddExpenseCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.income.AddIncomeCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.general.ClearAllEntriesCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.expense.DeleteExpenseCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.income.DeleteIncomeCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.expense.TotalExpenseCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.income.TotalIncomeCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"kyun99"},"content":"import seedu.entry.Expense;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"kyun99"},"content":"import seedu.entry.ExpenseCategory;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"kyun99"},"content":"import seedu.entry.Income;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"kyun99"},"content":"import seedu.entry.IncomeCategory;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.ExpenseOverflowException;","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.IncomeOverflowException;","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"kyun99"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"kyun99"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Nirmaleshwar"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Nirmaleshwar"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"kyun99"},"content":"public class CommandTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"kyun99"},"content":"    private FinancialTracker testTracker \u003d new FinancialTracker();","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"kyun99"},"content":"    private Ui testUi \u003d new Ui();","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"jonathanlkw"},"content":"    private BudgetManager budgetManager \u003d new BudgetManager();","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"Nirmaleshwar"},"content":"    private CurrencyManager currencyManager \u003d new CurrencyManager();","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"kyun99"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"kyun99"},"content":"    public void testAddExpenseCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"kyun99"},"content":"        Expense testExpense \u003d new Expense(\"Bubble Tea\", 4.80, ExpenseCategory.FOOD);","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"kyun99"},"content":"        AddExpenseCommand testCommand \u003d new AddExpenseCommand(testExpense);","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"Nirmaleshwar"},"content":"        testCommand.execute(testTracker, testUi, budgetManager, currencyManager);","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"kyun99"},"content":"        assertEquals(1, testTracker.getExpenseSize());","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"kyun99"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"kyun99"},"content":"    public void testAddIncomeCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"kyun99"},"content":"        Income testIncome \u003d new Income(\"Pocket Money\", 100, IncomeCategory.ALLOWANCE);","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"kyun99"},"content":"        AddIncomeCommand testCommand \u003d new AddIncomeCommand(testIncome);","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"Nirmaleshwar"},"content":"        testCommand.execute(testTracker, testUi, budgetManager, currencyManager);","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"kyun99"},"content":"        assertEquals(1, testTracker.getIncomeSize());","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"kyun99"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"kyun99"},"content":"    public void testDeleteExpenseCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"kyun99"},"content":"        DeleteExpenseCommand testCommand \u003d new DeleteExpenseCommand(1);","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"Nirmaleshwar"},"content":"        testCommand.execute(testTracker, testUi, budgetManager, currencyManager);","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"kyun99"},"content":"        assertTrue(testTracker.isExpensesEmpty());","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"kyun99"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"kyun99"},"content":"    public void testDeleteIncomeCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"kyun99"},"content":"        DeleteIncomeCommand testCommand \u003d new DeleteIncomeCommand(1);","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"Nirmaleshwar"},"content":"        testCommand.execute(testTracker, testUi, budgetManager, currencyManager);","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"kyun99"},"content":"        assertTrue(testTracker.isIncomesEmpty());","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"Nirmaleshwar"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"Nirmaleshwar"},"content":"    public void testClearAllEntriesCommand() {","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"Nirmaleshwar"},"content":"        ClearAllEntriesCommand testCommand \u003d new ClearAllEntriesCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"Nirmaleshwar"},"content":"        testCommand.execute(testTracker, testUi, budgetManager, currencyManager);","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"Nirmaleshwar"},"content":"        assertEquals(0, testTracker.getIncomeSize());","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"Nirmaleshwar"},"content":"        assertEquals(0, testTracker.getExpenseSize());","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"Nirmaleshwar"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"kyun99"},"content":"    public void testTotalExpenseCommand() throws ExpenseOverflowException, IncomeOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"Nirmaleshwar"},"content":"        TotalExpenseCommand testCommand \u003d new TotalExpenseCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"Nirmaleshwar"},"content":"        testCommand.execute(testTracker, testUi, budgetManager, currencyManager);","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"Nirmaleshwar"},"content":"        assertEquals(0, testTracker.getTotalIncome());","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"Nirmaleshwar"},"content":"        Expense testExpense1 \u003d new Expense(\"Bubble Tea\", 4.80, ExpenseCategory.FOOD);","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"Nirmaleshwar"},"content":"        Expense testExpense2 \u003d new Expense(\"Chicken Rice\", 3.00, ExpenseCategory.FOOD);","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"Nirmaleshwar"},"content":"        AddExpenseCommand testCommand2 \u003d new AddExpenseCommand(testExpense1);","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"Nirmaleshwar"},"content":"        AddExpenseCommand testCommand3 \u003d new AddExpenseCommand(testExpense2);","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"Nirmaleshwar"},"content":"        testCommand2.execute(testTracker, testUi, budgetManager, currencyManager);","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"Nirmaleshwar"},"content":"        testCommand3.execute(testTracker, testUi, budgetManager, currencyManager);","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"Nirmaleshwar"},"content":"        TotalExpenseCommand testCommand4 \u003d new TotalExpenseCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"Nirmaleshwar"},"content":"        testCommand4.execute(testTracker, testUi, budgetManager, currencyManager);","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"Nirmaleshwar"},"content":"        assertEquals(7.80, testTracker.getTotalExpense());","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"Nirmaleshwar"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"kyun99"},"content":"    public void testTotalIncomeCommand() throws ExpenseOverflowException, IncomeOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":90,"author":{"gitId":"Nirmaleshwar"},"content":"        TotalIncomeCommand testCommand \u003d new TotalIncomeCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"Nirmaleshwar"},"content":"        testCommand.execute(testTracker, testUi, budgetManager, currencyManager);","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"Nirmaleshwar"},"content":"        assertEquals(0, testTracker.getTotalExpense());","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"Nirmaleshwar"},"content":"        Income testIncome1 \u003d new Income(\"Pocket Money\", 100, IncomeCategory.ALLOWANCE);","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"Nirmaleshwar"},"content":"        Income testIncome2 \u003d new Income(\"Chicken Rice\", 2500, IncomeCategory.SALARY);","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"Nirmaleshwar"},"content":"        AddIncomeCommand testCommand2 \u003d new AddIncomeCommand(testIncome1);","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"Nirmaleshwar"},"content":"        AddIncomeCommand testCommand3 \u003d new AddIncomeCommand(testIncome2);","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"Nirmaleshwar"},"content":"        testCommand2.execute(testTracker, testUi, budgetManager, currencyManager);","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"Nirmaleshwar"},"content":"        testCommand3.execute(testTracker, testUi, budgetManager, currencyManager);","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"Nirmaleshwar"},"content":"        TotalIncomeCommand testCommand4 \u003d new TotalIncomeCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"Nirmaleshwar"},"content":"        testCommand4.execute(testTracker, testUi, budgetManager, currencyManager);","lastModifiedDate":"2021-11-02"},{"lineNumber":101,"author":{"gitId":"Nirmaleshwar"},"content":"        assertEquals(2600, testTracker.getTotalIncome());","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"Nirmaleshwar"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"Nirmaleshwar"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"Nirmaleshwar"},"content":"","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kyun99":45,"AnShengLee":7,"Nirmaleshwar":49,"KZQ1999":2,"jonathanlkw":2}},{"path":"src/test/java/seedu/duke/DataManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":"import seedu.entry.Expense;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"import seedu.entry.ExpenseCategory;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"AnShengLee"},"content":"import seedu.entry.Income;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"import seedu.entry.IncomeCategory;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.ExpenseOverflowException;","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.IncomeOverflowException;","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"kyun99"},"content":"import seedu.utility.DataManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"kyun99"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"kyun99"},"content":"import seedu.utility.Parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"kyun99"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"AnShengLee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"AnShengLee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"AnShengLee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"AnShengLee"},"content":"public class DataManagerTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"AnShengLee"},"content":"    public static final String DATE_FORMAT \u003d \"dd/MM/yyyy\";","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"kyun99"},"content":"    public void saveEntries_validEntries_correctDataFileContent()","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"kyun99"},"content":"            throws ExpenseOverflowException, IncomeOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"AnShengLee"},"content":"        FinancialTracker financialTracker \u003d new FinancialTracker();","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"AnShengLee"},"content":"        LocalDate date \u003d LocalDate.parse(\"11/11/2121\", DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kyun99"},"content":"        financialTracker.addExpense(new Expense(\"qwe\", 12.5, ExpenseCategory.FOOD, date));","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"kyun99"},"content":"        financialTracker.addExpense(new Expense(\"qwe\", .5, ExpenseCategory.FOOD, date));","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"kyun99"},"content":"        financialTracker.addIncome(new Income(\"qwe\", 12.5, IncomeCategory.SALARY, date));","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"kyun99"},"content":"        financialTracker.addIncome(new Income(\"qwe\", 12.5, IncomeCategory.ALLOWANCE, date));","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"AnShengLee"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"AnShengLee"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"AnShengLee"},"content":"        BudgetManager budgetManager \u003d new BudgetManager();","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"Nirmaleshwar"},"content":"        CurrencyManager currencyManager \u003d new CurrencyManager();","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"Nirmaleshwar"},"content":"        DataManager dataManager \u003d new DataManager(parser, financialTracker, ui, budgetManager, currencyManager);","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"AnShengLee"},"content":"        dataManager.saveAll();","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"kyun99"},"content":"    public void loadEntries_validDataFileContent_correctEntries()","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"kyun99"},"content":"            throws ExpenseOverflowException, IncomeOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"AnShengLee"},"content":"        saveEntries_validEntries_correctDataFileContent();","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"AnShengLee"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"AnShengLee"},"content":"        FinancialTracker financialTracker \u003d new FinancialTracker();","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"AnShengLee"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"AnShengLee"},"content":"        BudgetManager budgetManager \u003d new BudgetManager();","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"Nirmaleshwar"},"content":"        CurrencyManager currencyManager \u003d new CurrencyManager();","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"Nirmaleshwar"},"content":"        DataManager dataManager \u003d new DataManager(parser, financialTracker, ui, budgetManager, currencyManager);","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"AnShengLee"},"content":"        dataManager.loadAll();","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"AnShengLee"},"content":"        assertEquals(12.5, financialTracker.getExpenses().get(0).getValue());","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"AnShengLee"},"content":"        assertEquals(\"qwe\", financialTracker.getExpenses().get(0).getDescription());","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"kyun99"},"content":"        assertEquals(ExpenseCategory.FOOD, financialTracker.getExpenses().get(0).getCategory());","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"AnShengLee"},"content":"        assertEquals(.5, financialTracker.getExpenses().get(1).getValue());","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"AnShengLee"},"content":"        assertEquals(\"qwe\", financialTracker.getExpenses().get(1).getDescription());","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"AnShengLee"},"content":"        assertEquals(12.5, financialTracker.getIncomes().get(0).getValue());","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"AnShengLee"},"content":"        assertEquals(\"qwe\", financialTracker.getIncomes().get(0).getDescription());","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"AnShengLee"},"content":"        assertEquals(12.5, financialTracker.getIncomes().get(1).getValue());","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"AnShengLee"},"content":"        assertEquals(\"qwe\", financialTracker.getIncomes().get(1).getDescription());","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"kyun99"},"content":"    public void loadEntries_invalidDataFileContent_detectInvalidDataEntriesAndOutputWarningMessages()","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"kyun99"},"content":"            throws ExpenseOverflowException, IncomeOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"AnShengLee"},"content":"        FinancialTracker financialTracker \u003d new FinancialTracker();","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"AnShengLee"},"content":"        LocalDate date \u003d LocalDate.parse(\"11/11/2121\", DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"kyun99"},"content":"        financialTracker.addExpense(new Expense(\"qwe\", 12.5, ExpenseCategory.FOOD, date));","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"kyun99"},"content":"        financialTracker.addIncome(new Income(\"qwe\", 12.5, IncomeCategory.ALLOWANCE, date));","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"kyun99"},"content":"        financialTracker.addIncome(new Income(\"\", 12.5, IncomeCategory.ALLOWANCE, date));","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"AnShengLee"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"AnShengLee"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"AnShengLee"},"content":"        BudgetManager budgetManager \u003d new BudgetManager();","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"Nirmaleshwar"},"content":"        CurrencyManager currencyManager \u003d new CurrencyManager();","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"Nirmaleshwar"},"content":"        DataManager dataManager \u003d new DataManager(parser, financialTracker, ui, budgetManager, currencyManager);","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"AnShengLee"},"content":"        dataManager.saveAll();","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"AnShengLee"},"content":"        dataManager.loadAll();","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"AnShengLee"},"content":"    public void saveSettings_validSettings_validSettingData() {","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"AnShengLee"},"content":"        FinancialTracker financialTracker \u003d new FinancialTracker();","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"AnShengLee"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"AnShengLee"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"AnShengLee"},"content":"        BudgetManager budgetManager \u003d new BudgetManager();","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"Nirmaleshwar"},"content":"        CurrencyManager currencyManager \u003d new CurrencyManager();","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"Nirmaleshwar"},"content":"        DataManager dataManager \u003d new DataManager(parser, financialTracker, ui, budgetManager, currencyManager);","lastModifiedDate":"2021-11-02"},{"lineNumber":93,"author":{"gitId":"jonathanlkw"},"content":"        int i \u003d 80;","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"AnShengLee"},"content":"        for (ExpenseCategory category : ExpenseCategory.values()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"AnShengLee"},"content":"            if (category \u003d\u003d ExpenseCategory.NULL) {","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"AnShengLee"},"content":"                break;","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"AnShengLee"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"jonathanlkw"},"content":"            budgetManager.setBudget(i, category, financialTracker.getExpenses());","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"jonathanlkw"},"content":"            i /\u003d 2;","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"AnShengLee"},"content":"        budgetManager.setThreshold(0.5);","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"AnShengLee"},"content":"        dataManager.saveAll();","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"AnShengLee"},"content":"        String testData \u003d parser.convertSettingsToData(budgetManager, currencyManager);","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"jonathanlkw"},"content":"        String expectedData \u003d \"SGD,0.5,80.0,40.0,20.0,10.0,5.0,2.0,1.0\";","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"AnShengLee"},"content":"        assertEquals(expectedData, testData);","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"AnShengLee"},"content":"    public void loadAll_validBudgetData_validBudgets() {","lastModifiedDate":"2021-11-01"},{"lineNumber":110,"author":{"gitId":"AnShengLee"},"content":"        saveSettings_validSettings_validSettingData();","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"AnShengLee"},"content":"        FinancialTracker financialTracker \u003d new FinancialTracker();","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"AnShengLee"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"AnShengLee"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"AnShengLee"},"content":"        BudgetManager budgetManager \u003d new BudgetManager();","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"Nirmaleshwar"},"content":"        CurrencyManager currencyManager \u003d new CurrencyManager();","lastModifiedDate":"2021-11-02"},{"lineNumber":116,"author":{"gitId":"Nirmaleshwar"},"content":"        DataManager dataManager \u003d new DataManager(parser, financialTracker, ui, budgetManager, currencyManager);","lastModifiedDate":"2021-11-02"},{"lineNumber":117,"author":{"gitId":"AnShengLee"},"content":"        dataManager.loadAll();","lastModifiedDate":"2021-11-01"},{"lineNumber":118,"author":{"gitId":"jonathanlkw"},"content":"        int i \u003d 80;","lastModifiedDate":"2021-11-07"},{"lineNumber":119,"author":{"gitId":"AnShengLee"},"content":"        for (ExpenseCategory category : ExpenseCategory.values()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"AnShengLee"},"content":"            if (category \u003d\u003d ExpenseCategory.NULL) {","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"AnShengLee"},"content":"                break;","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"AnShengLee"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"AnShengLee"},"content":"            assertEquals(budgetManager.getBudget(category), i);","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"jonathanlkw"},"content":"            i /\u003d 2;","lastModifiedDate":"2021-11-07"},{"lineNumber":125,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"AnShengLee"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"kyun99":23,"AnShengLee":87,"Nirmaleshwar":11,"jonathanlkw":6}},{"path":"src/test/java/seedu/duke/ExpenseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"kyun99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"import seedu.entry.Expense;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"import seedu.entry.ExpenseCategory;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"public class ExpenseTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"kyun99"},"content":"    public void getDescription_stringDescription_returnsDescription() {","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"kyun99"},"content":"        Expense e1 \u003d new Expense(\"Bubble tea\", 4.8, ExpenseCategory.FOOD);","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"kyun99"},"content":"        assertEquals(\"Bubble tea\", e1.getDescription());","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"kyun99"},"content":"    public void getValue_valueInputOfTypeDouble_returnsValueInput() {","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"kyun99"},"content":"        Expense e1 \u003d new Expense(\"Bubble tea\", 4.8, ExpenseCategory.FOOD);","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"kyun99"},"content":"        assertEquals(4.8, e1.getValue());","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"kyun99":22}},{"path":"src/test/java/seedu/duke/FinancialTrackerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"kyun99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"import seedu.entry.Expense;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"import seedu.entry.ExpenseCategory;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"import seedu.entry.Income;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"import seedu.entry.IncomeCategory;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.ExpenseEntryNotFoundException;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.ExpenseOverflowException;","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.IncomeEntryNotFoundException;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.IncomeOverflowException;","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"kyun99"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"kyun99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"kyun99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"kyun99"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"kyun99"},"content":"public class FinancialTrackerTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"kyun99"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"kyun99"},"content":"    public void addEntry_twoExpenseObjects_expectSizeOfListToBeTwo() throws ExpenseOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"kyun99"},"content":"        FinancialTracker testTracker \u003d new FinancialTracker();","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"kyun99"},"content":"        testTracker.addExpense(new Expense(\"Lunch\", 5.20, ExpenseCategory.FOOD));","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"kyun99"},"content":"        testTracker.addExpense(new Expense(\"Dinner\", 20, ExpenseCategory.FOOD));","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"kyun99"},"content":"        assertEquals(2, testTracker.getExpenseSize());","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"kyun99"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"kyun99"},"content":"    public void addIncome_twoIncomeObjects_expectSizeOfListToBeTwo() throws IncomeOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"kyun99"},"content":"        FinancialTracker testTracker \u003d new FinancialTracker();","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"kyun99"},"content":"        testTracker.addIncome(new Income(\"pocket money\", 5.20, IncomeCategory.ADHOC));","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"kyun99"},"content":"        testTracker.addIncome(new Income(\"salary\", 20, IncomeCategory.ADHOC));","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"kyun99"},"content":"        assertEquals(2, testTracker.getIncomeSize());","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"kyun99"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"kyun99"},"content":"    public void removeExpense_emptyExpenseList_expectExpenseEntryNotFoundException() throws ExpenseOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"kyun99"},"content":"        FinancialTracker testTracker \u003d new FinancialTracker();","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"kyun99"},"content":"        testTracker.addExpense(new Expense(\"Lunch\", 5.20, ExpenseCategory.FOOD));","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"kyun99"},"content":"        assertThrows(ExpenseEntryNotFoundException.class, () -\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"kyun99"},"content":"            testTracker.removeExpense(4);","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"kyun99"},"content":"        });","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"kyun99"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"kyun99"},"content":"    public void removeIncome_emptyIncomeList_expectIncomeEntryNotFoundException() throws IncomeOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"kyun99"},"content":"        FinancialTracker testTracker \u003d new FinancialTracker();","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"kyun99"},"content":"        testTracker.addIncome(new Income(\"pocket money\", 5.20, IncomeCategory.ADHOC));","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"kyun99"},"content":"        assertThrows(IncomeEntryNotFoundException.class, () -\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"kyun99"},"content":"            testTracker.removeIncome(4);","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"kyun99"},"content":"        });","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"kyun99"},"content":"    ","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"kyun99"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"kyun99"},"content":"    public void getMonthlyIncomeBreakdown_IncomeList_expectTotalAccumulatedIncome() throws IncomeOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"kyun99"},"content":"        FinancialTracker testTracker \u003d new FinancialTracker();","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"kyun99"},"content":"        testTracker.addIncome(new Income(\"pocket money\", 5.20, IncomeCategory.ALLOWANCE));","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"kyun99"},"content":"        testTracker.addIncome(new Income(\"salary\", 100, IncomeCategory.ADHOC));","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"kyun99"},"content":"        ArrayList\u003cDouble\u003e totalIncome \u003d testTracker.getMonthlyIncomeBreakdown(2021);","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"kyun99"},"content":"        assertEquals(105.20, totalIncome.get(LocalDate.now().getMonthValue() - 1));","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"kyun99"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"kyun99"},"content":"    public void getMonthlyExpenseBreakdown_ExpenseList_expectTotalAccumulatedExpense() throws ExpenseOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"kyun99"},"content":"        FinancialTracker testTracker \u003d new FinancialTracker();","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"kyun99"},"content":"        testTracker.addExpense(new Expense(\"lunch\", 5.20, ExpenseCategory.FOOD));","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"kyun99"},"content":"        testTracker.addExpense(new Expense(\"dinner\", 100, ExpenseCategory.FOOD));","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"kyun99"},"content":"        ArrayList\u003cDouble\u003e totalExpense \u003d testTracker.getMonthlyExpenseBreakdown(2021);","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"kyun99"},"content":"        System.out.println(totalExpense);","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"kyun99"},"content":"        assertEquals(105.20, totalExpense.get(LocalDate.now().getMonthValue() - 1));","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"kyun99"},"content":"    ","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"kyun99"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"kyun99"},"content":"    public void addIncome_InvalidLargeIncomeValue_expectIncomeOverflowException() throws IncomeOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"kyun99"},"content":"        FinancialTracker testTracker \u003d new FinancialTracker();","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"kyun99"},"content":"        testTracker.addIncome(new Income(\"salary\", 50000000000.0, IncomeCategory.SALARY));","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"kyun99"},"content":"        assertThrows(IncomeOverflowException.class, () -\u003e {","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"kyun99"},"content":"            testTracker.addIncome(new Income(\"salary\", 50000000001.0, IncomeCategory.SALARY));","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"kyun99"},"content":"        });","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"kyun99"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"kyun99"},"content":"    public void addExpense_InvalidLargeExpenseValue_expectExpenseOverflowException() throws ExpenseOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"kyun99"},"content":"        FinancialTracker testTracker \u003d new FinancialTracker();","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"kyun99"},"content":"        testTracker.addExpense(new Expense(\"food\", 50000000000.0, ExpenseCategory.FOOD));","lastModifiedDate":"2021-11-01"},{"lineNumber":89,"author":{"gitId":"kyun99"},"content":"        assertThrows(ExpenseOverflowException.class, () -\u003e {","lastModifiedDate":"2021-11-01"},{"lineNumber":90,"author":{"gitId":"kyun99"},"content":"            testTracker.addExpense(new Expense(\"food\", 50000000001.0, ExpenseCategory.FOOD));","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"kyun99"},"content":"        });","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"kyun99"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"kyun99"},"content":"    public void addExpense_LargeExpenseValue_validTotalExpense() throws ExpenseOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"kyun99"},"content":"        FinancialTracker testTracker \u003d new FinancialTracker();","lastModifiedDate":"2021-11-01"},{"lineNumber":97,"author":{"gitId":"kyun99"},"content":"        testTracker.addExpense(new Expense(\"food\", 50000000000.0, ExpenseCategory.FOOD));","lastModifiedDate":"2021-11-01"},{"lineNumber":98,"author":{"gitId":"kyun99"},"content":"        testTracker.addExpense(new Expense(\"food\", 10.0, ExpenseCategory.FOOD));","lastModifiedDate":"2021-11-01"},{"lineNumber":99,"author":{"gitId":"kyun99"},"content":"        testTracker.addExpense(new Expense(\"food\", 5.0, ExpenseCategory.FOOD));        ","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"kyun99"},"content":"        assertEquals(50000000015.00, testTracker.getTotalExpense());","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"kyun99"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"kyun99"},"content":"    public void addIncome_LargeIncomeValue_validTotalIncome() throws IncomeOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"kyun99"},"content":"        FinancialTracker testTracker \u003d new FinancialTracker();","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"kyun99"},"content":"        testTracker.addIncome(new Income(\"Income\", 90000000000.0, IncomeCategory.SALARY));","lastModifiedDate":"2021-11-01"},{"lineNumber":107,"author":{"gitId":"kyun99"},"content":"        testTracker.addIncome(new Income(\"Income\", 9999999998.0, IncomeCategory.SALARY));","lastModifiedDate":"2021-11-01"},{"lineNumber":108,"author":{"gitId":"kyun99"},"content":"        testTracker.addIncome(new Income(\"Income\", 1, IncomeCategory.SALARY));","lastModifiedDate":"2021-11-01"},{"lineNumber":109,"author":{"gitId":"kyun99"},"content":"        assertEquals(99999999999.00, testTracker.getTotalIncome());","lastModifiedDate":"2021-11-01"},{"lineNumber":110,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":111,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"kyun99":111}},{"path":"src/test/java/seedu/duke/IncomeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"kyun99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"import seedu.entry.Income;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"import seedu.entry.IncomeCategory;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"public class IncomeTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"kyun99"},"content":"    public void getDescription_stringDescription_returnsDescription() {","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"kyun99"},"content":"        Income i1 \u003d new Income(\"Jan Allowance\", 480.00, IncomeCategory.ALLOWANCE);","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"kyun99"},"content":"        assertEquals(\"Jan Allowance\", i1.getDescription());","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"kyun99"},"content":"    public void getValue_valueInputOfTypeDouble_returnsValueInput() {","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"kyun99"},"content":"        Income i1 \u003d new Income(\"Jan Allowance\", 480.00, IncomeCategory.ALLOWANCE);","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"kyun99"},"content":"        assertEquals(480.00, i1.getValue());","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"kyun99":22}},{"path":"src/test/java/seedu/duke/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AnShengLee"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"AnShengLee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"AnShengLee"},"content":"import static org.junit.jupiter.api.Assertions.assertSame;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"AnShengLee"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"AnShengLee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"import seedu.commands.Command;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.budget.BalanceCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.budget.SetThresholdCommand;","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.expense.AddExpenseCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.general.ClearAllEntriesCommand;","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.commands.currency.CurrencyType;","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"kyun99"},"content":"import seedu.commands.general.ShowGraphByYearCommand;","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.general.ShowGraphCommand;","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.income.AddIncomeCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.income.DeleteIncomeCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.general.HelpCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"kyun99"},"content":"import seedu.commands.InvalidCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.expense.ListExpenseCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.income.ListIncomeCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.income.TotalIncomeCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"AnShengLee"},"content":"import seedu.entry.Expense;","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"kyun99"},"content":"import seedu.entry.ExpenseCategory;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"AnShengLee"},"content":"import seedu.entry.Income;","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"kyun99"},"content":"import seedu.entry.IncomeCategory;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"AnShengLee"},"content":"import seedu.exceptions.BlankCurrencyTypeException;","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"AnShengLee"},"content":"import seedu.exceptions.InputException;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"AnShengLee"},"content":"import seedu.exceptions.InvalidCurrencyTypeException;","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"AnShengLee"},"content":"import seedu.exceptions.InvalidAmountException;","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"AnShengLee"},"content":"import seedu.exceptions.InvalidExpenseDataFormatException;","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"AnShengLee"},"content":"import seedu.exceptions.InvalidIncomeDataFormatException;","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"AnShengLee"},"content":"import seedu.exceptions.InvalidSettingsDataException;","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"AnShengLee"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"jonathanlkw"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"kyun99"},"content":"import seedu.utility.Messages;","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"kyun99"},"content":"import seedu.utility.Parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"AnShengLee"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"AnShengLee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"AnShengLee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"AnShengLee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"AnShengLee"},"content":"public class ParserTest {","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"AnShengLee"},"content":"    private static final String DATE_FORMAT \u003d \"dd/MM/yyyy\";","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"AnShengLee"},"content":"    private static final String DATA_SEPARATOR \u003d \",\";","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"AnShengLee"},"content":"    private static final int TOTAL_EXPENSE_CATEGORY \u003d 7;","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"AnShengLee"},"content":"    public void parseCommand_validHelpCommand_returnHelpCommand() {","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"AnShengLee"},"content":"        Command underTest \u003d testParser.parseCommand(\"help\");","lastModifiedDate":"2021-10-03"},{"lineNumber":55,"author":{"gitId":"AnShengLee"},"content":"        assertSame(underTest.getClass(), HelpCommand.class);","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"AnShengLee"},"content":"    public void parseCommand_invalidListCommand_returnInvalidCommand() {","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"AnShengLee"},"content":"        Command underTest \u003d testParser.parseCommand(\"list_in           d\");","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"AnShengLee"},"content":"        assertSame(underTest.getClass(), InvalidCommand.class);","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"AnShengLee"},"content":"    public void parseCommand_validListIncomeCommand_returnListIncomeCommand() {","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"AnShengLee"},"content":"        Command underTest \u003d testParser.parseCommand(\"list_in \");","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"AnShengLee"},"content":"        assertSame(underTest.getClass(), ListIncomeCommand.class);","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"AnShengLee"},"content":"    public void parseCommand_validListExpenseCommand_returnListIncomeCommand() {","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"AnShengLee"},"content":"        Command underTest \u003d testParser.parseCommand(\"list_ex\");","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"AnShengLee"},"content":"        assertSame(underTest.getClass(), ListExpenseCommand.class);","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":79,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":80,"author":{"gitId":"AnShengLee"},"content":"    public void parseCommand_invalidCommand_returnInvalidCommand() {","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-03"},{"lineNumber":82,"author":{"gitId":"AnShengLee"},"content":"        Command underTest \u003d testParser.parseCommand(\"tfshsdfh\");","lastModifiedDate":"2021-10-03"},{"lineNumber":83,"author":{"gitId":"AnShengLee"},"content":"        assertSame(underTest.getClass(), InvalidCommand.class);","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":85,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":86,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":87,"author":{"gitId":"AnShengLee"},"content":"    public void parseCommand_invalidAddExpenseCommand_returnInvalidCommand() {","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-03"},{"lineNumber":89,"author":{"gitId":"AnShengLee"},"content":"        Command underTest \u003d testParser.parseCommand(\"add_ex d/tfshsdfh a/12a c/qewew\");","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"AnShengLee"},"content":"        assertSame(underTest.getClass(), InvalidCommand.class);","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":92,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":93,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"AnShengLee"},"content":"    public void parseCommand_invalidAddExpenseCommandWithEmptyDescription_returnInvalidCommand() {","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"AnShengLee"},"content":"        Command underTest \u003d testParser.parseCommand(\"add_ex d/a/12a\");","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"AnShengLee"},"content":"        assertSame(underTest.getClass(), InvalidCommand.class);","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":101,"author":{"gitId":"kyun99"},"content":"    public void parseCommand_validAddExpenseCommand_returnInvalidExpenseCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-04"},{"lineNumber":103,"author":{"gitId":"AnShengLee"},"content":"        Command underTest \u003d testParser.parseCommand(\"add_ex    d/      tfshsdfh     a/          123  c/2wq2\");","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"kyun99"},"content":"        assertSame(underTest.getClass(), InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":106,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":107,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":108,"author":{"gitId":"AnShengLee"},"content":"    public void parseCommand_invalidDeleteIncomeCommand_returnInvalidCommand() {","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-04"},{"lineNumber":110,"author":{"gitId":"AnShengLee"},"content":"        Command underTest \u003d testParser.parseCommand(\"del_in      i/12a              \");","lastModifiedDate":"2021-10-04"},{"lineNumber":111,"author":{"gitId":"AnShengLee"},"content":"        assertSame(underTest.getClass(), InvalidCommand.class);","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"AnShengLee"},"content":"    public void parseCommand_invalidDeleteExpenseCommand_returnInvalidCommand() {","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"AnShengLee"},"content":"        Command underTest \u003d testParser.parseCommand(\"del_ex      i/12a              \");","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"AnShengLee"},"content":"        InvalidCommand test \u003d (InvalidCommand) underTest; ","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"AnShengLee"},"content":"        assertSame(\"Index given is either out of range or not an integer.\", test.getMessage());","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":121,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":122,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"AnShengLee"},"content":"    public void parseCommand_validDeleteIncomeCommand_returnDeleteIncomeCommand() {","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"AnShengLee"},"content":"        Command underTest \u003d testParser.parseCommand(\"del_in      i/   12              \");","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"AnShengLee"},"content":"        assertSame(underTest.getClass(), DeleteIncomeCommand.class);","lastModifiedDate":"2021-10-17"},{"lineNumber":127,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":130,"author":{"gitId":"AnShengLee"},"content":"    public void parseCommand_invalidTotalIncomeCommand_returnInvalidCommand() {","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-04"},{"lineNumber":132,"author":{"gitId":"AnShengLee"},"content":"        Command underTest \u003d testParser.parseCommand(\"total_in                 fddgf\");","lastModifiedDate":"2021-10-04"},{"lineNumber":133,"author":{"gitId":"AnShengLee"},"content":"        assertSame(underTest.getClass(), InvalidCommand.class);","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":135,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"AnShengLee"},"content":"    public void parseCommand_invalidTotalExpenseCommand_returnInvalidCommand() {","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"AnShengLee"},"content":"        Command underTest \u003d testParser.parseCommand(\"total_ex                 fddgf\");","lastModifiedDate":"2021-10-17"},{"lineNumber":140,"author":{"gitId":"AnShengLee"},"content":"        assertSame(underTest.getClass(), InvalidCommand.class);","lastModifiedDate":"2021-10-17"},{"lineNumber":141,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":142,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"AnShengLee"},"content":"    public void parseCommand_validTotalIncomeCommand_returnTotalIncomeCommand() {","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"AnShengLee"},"content":"        Command underTest \u003d testParser.parseCommand(\"total_in           \");","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"AnShengLee"},"content":"        assertSame(underTest.getClass(), TotalIncomeCommand.class);","lastModifiedDate":"2021-10-17"},{"lineNumber":148,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"AnShengLee"},"content":"    public void parseCommand_invalidInput_correctOutputWarningMessage() {","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"AnShengLee"},"content":"        Command underTest \u003d testParser.parseCommand(\"gfsbsfbgfsbfgs\");","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"AnShengLee"},"content":"        InvalidCommand test \u003d (InvalidCommand) underTest;","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"AnShengLee"},"content":"        assertSame(\"Invalid command. Use \\\"help\\\" to show the list of possible commands.\", test.getMessage());","lastModifiedDate":"2021-10-17"},{"lineNumber":156,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"AnShengLee"},"content":"    public void parseCommand_invalidDeleteIncomeCommand_correctOutputWarningMessage() {","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"AnShengLee"},"content":"        Command underTest \u003d testParser.parseCommand(\"del_in i/aa\");","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"AnShengLee"},"content":"        InvalidCommand test \u003d (InvalidCommand) underTest;","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"AnShengLee"},"content":"        assertSame(\"Index given is either out of range or not an integer.\", test.getMessage());","lastModifiedDate":"2021-11-04"},{"lineNumber":164,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"AnShengLee"},"content":"    public void parseCommand_invalidAddIncomeCommand_correctOutputWarningMessage() {","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"AnShengLee"},"content":"        Command underTest \u003d testParser.parseCommand(\"add_in d/buy book a/aa c/qwqe\");","lastModifiedDate":"2021-10-17"},{"lineNumber":170,"author":{"gitId":"AnShengLee"},"content":"        InvalidCommand test \u003d (InvalidCommand) underTest;","lastModifiedDate":"2021-10-17"},{"lineNumber":171,"author":{"gitId":"AnShengLee"},"content":"        assertSame(\"Only numeric inputs are allowed for amount.\", test.getMessage());","lastModifiedDate":"2021-10-17"},{"lineNumber":172,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":173,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":174,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":175,"author":{"gitId":"AnShengLee"},"content":"    public void parseCommand_invalidExitCommand_correctOutputWarningMessage() {","lastModifiedDate":"2021-10-17"},{"lineNumber":176,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-17"},{"lineNumber":177,"author":{"gitId":"AnShengLee"},"content":"        Command underTest \u003d testParser.parseCommand(\"bye\");","lastModifiedDate":"2021-10-17"},{"lineNumber":178,"author":{"gitId":"AnShengLee"},"content":"        InvalidCommand test \u003d (InvalidCommand) underTest;","lastModifiedDate":"2021-10-10"},{"lineNumber":179,"author":{"gitId":"AnShengLee"},"content":"        assertSame(\"Invalid command. Use \\\"help\\\" to show the list of possible commands.\", test.getMessage());","lastModifiedDate":"2021-10-17"},{"lineNumber":180,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":181,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":182,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":183,"author":{"gitId":"AnShengLee"},"content":"    public void convertExpenseToData_validExpense_correctDataOutput() {","lastModifiedDate":"2021-10-14"},{"lineNumber":184,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-14"},{"lineNumber":185,"author":{"gitId":"AnShengLee"},"content":"        LocalDate date \u003d LocalDate.parse(\"11/11/2121\", DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-10-23"},{"lineNumber":186,"author":{"gitId":"kyun99"},"content":"        Expense testExpense \u003d new Expense(\"buy book\", 12.33, ExpenseCategory.FOOD, date);","lastModifiedDate":"2021-10-19"},{"lineNumber":187,"author":{"gitId":"AnShengLee"},"content":"        String testData \u003d testParser.convertExpenseToData(testExpense);","lastModifiedDate":"2021-10-14"},{"lineNumber":188,"author":{"gitId":"AnShengLee"},"content":"        assertEquals(\"E\" + DATA_SEPARATOR + \"buy book\" + DATA_SEPARATOR + 12.33 + DATA_SEPARATOR + \"FOOD\" ","lastModifiedDate":"2021-10-23"},{"lineNumber":189,"author":{"gitId":"AnShengLee"},"content":"                + DATA_SEPARATOR + \"11/11/2121\", testData);","lastModifiedDate":"2021-10-23"},{"lineNumber":190,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":191,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":192,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":193,"author":{"gitId":"AnShengLee"},"content":"    public void convertIncomeToData_validIncome_correctDataOutput() {","lastModifiedDate":"2021-10-14"},{"lineNumber":194,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-14"},{"lineNumber":195,"author":{"gitId":"AnShengLee"},"content":"        LocalDate date \u003d LocalDate.parse(\"11/11/2121\", DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-10-23"},{"lineNumber":196,"author":{"gitId":"kyun99"},"content":"        Income testIncome \u003d new Income(\"job\", 1233.0, IncomeCategory.ADHOC, date);","lastModifiedDate":"2021-10-19"},{"lineNumber":197,"author":{"gitId":"AnShengLee"},"content":"        String testData \u003d testParser.convertIncomeToData(testIncome);","lastModifiedDate":"2021-10-14"},{"lineNumber":198,"author":{"gitId":"AnShengLee"},"content":"        assertEquals(\"I\" + DATA_SEPARATOR + \"job\" + DATA_SEPARATOR + 1233.0 + DATA_SEPARATOR + \"ADHOC\" ","lastModifiedDate":"2021-10-23"},{"lineNumber":199,"author":{"gitId":"AnShengLee"},"content":"                + DATA_SEPARATOR + \"11/11/2121\", testData);","lastModifiedDate":"2021-10-23"},{"lineNumber":200,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":201,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":202,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":203,"author":{"gitId":"AnShengLee"},"content":"    public void convertDataToExpense_validExpenseData_outputExpense() throws InputException,","lastModifiedDate":"2021-10-24"},{"lineNumber":204,"author":{"gitId":"AnShengLee"},"content":"            InvalidExpenseDataFormatException {","lastModifiedDate":"2021-10-16"},{"lineNumber":205,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-16"},{"lineNumber":206,"author":{"gitId":"AnShengLee"},"content":"        Expense testExpense \u003d testParser.convertDataToExpense(\"E,sfa,12,food,11/11/2121\");","lastModifiedDate":"2021-10-23"},{"lineNumber":207,"author":{"gitId":"AnShengLee"},"content":"        assertEquals(\"sfa\", testExpense.getDescription());","lastModifiedDate":"2021-10-23"},{"lineNumber":208,"author":{"gitId":"AnShengLee"},"content":"        assertEquals(12, testExpense.getValue());","lastModifiedDate":"2021-10-23"},{"lineNumber":209,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":210,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":211,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":212,"author":{"gitId":"AnShengLee"},"content":"    public void convertDataToExpense_invalidExpenseDataWithBlankDescription_throwsException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":213,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-16"},{"lineNumber":214,"author":{"gitId":"AnShengLee"},"content":"        assertThrows(InvalidExpenseDataFormatException.class, () -\u003e testParser.convertDataToExpense(\"E, ,\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":216,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":217,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":218,"author":{"gitId":"AnShengLee"},"content":"    public void convertDataToExpense_invalidExpenseDataWithInvalidAmount_throwsException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":219,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-16"},{"lineNumber":220,"author":{"gitId":"AnShengLee"},"content":"        assertThrows(InvalidAmountException.class,","lastModifiedDate":"2021-11-07"},{"lineNumber":221,"author":{"gitId":"AnShengLee"},"content":"            () -\u003e testParser.convertDataToExpense(\"E, asd, 12a, qwe, 21-11-11\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":222,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":223,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":224,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":225,"author":{"gitId":"AnShengLee"},"content":"    public void convertDataToIncome_validIncomeData_outputIncome() throws InputException, ","lastModifiedDate":"2021-10-24"},{"lineNumber":226,"author":{"gitId":"AnShengLee"},"content":"            InvalidIncomeDataFormatException, DateTimeException {","lastModifiedDate":"2021-10-17"},{"lineNumber":227,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-14"},{"lineNumber":228,"author":{"gitId":"AnShengLee"},"content":"        Income testIncome \u003d testParser.convertDataToIncome(\"I\" + DATA_SEPARATOR + \"pay\" + DATA_SEPARATOR ","lastModifiedDate":"2021-10-23"},{"lineNumber":229,"author":{"gitId":"AnShengLee"},"content":"                + 1000 + DATA_SEPARATOR + \"SALARY\" + DATA_SEPARATOR + \"11/11/2121\");","lastModifiedDate":"2021-10-23"},{"lineNumber":230,"author":{"gitId":"AnShengLee"},"content":"        assertEquals(\"pay\", testIncome.getDescription());","lastModifiedDate":"2021-10-23"},{"lineNumber":231,"author":{"gitId":"AnShengLee"},"content":"        assertEquals(1000.0, testIncome.getValue());","lastModifiedDate":"2021-10-23"},{"lineNumber":232,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":233,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":234,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":235,"author":{"gitId":"AnShengLee"},"content":"    public void convertDataToIncome_invalidIncomeDataWithBlankDescription_throwsException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":236,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-14"},{"lineNumber":237,"author":{"gitId":"AnShengLee"},"content":"        assertThrows(InputException.class, ","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"AnShengLee"},"content":"            () -\u003e testParser.convertDataToIncome(\"I, , 12, q, 2121-11-11\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":239,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":240,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":241,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":242,"author":{"gitId":"AnShengLee"},"content":"    public void convertDataToIncome_invalidIncomeDataWithInvalidAmount_throwsException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":243,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-14"},{"lineNumber":244,"author":{"gitId":"AnShengLee"},"content":"        assertThrows(InvalidAmountException.class, ","lastModifiedDate":"2021-11-07"},{"lineNumber":245,"author":{"gitId":"AnShengLee"},"content":"            () -\u003e testParser.convertDataToIncome(\"I, asd, 12a, q, 2121-11-11\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":246,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":247,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":248,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":249,"author":{"gitId":"AnShengLee"},"content":"    public void convertDataToIncome_invalidIncomeDataWithInvalidMarker_throwsException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":250,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-14"},{"lineNumber":251,"author":{"gitId":"AnShengLee"},"content":"        assertThrows(InvalidIncomeDataFormatException.class, ","lastModifiedDate":"2021-10-17"},{"lineNumber":252,"author":{"gitId":"AnShengLee"},"content":"            () -\u003e testParser.convertDataToIncome(\"E, asd, 12a, q, 2121-11-11\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":253,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":254,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":255,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":256,"author":{"gitId":"AnShengLee"},"content":"    public void convertDataToIncome_invalidIncomeDataWithInvalidSeparator_throwsException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":257,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-14"},{"lineNumber":258,"author":{"gitId":"AnShengLee"},"content":"        assertThrows(InvalidIncomeDataFormatException.class, ","lastModifiedDate":"2021-10-17"},{"lineNumber":259,"author":{"gitId":"AnShengLee"},"content":"            () -\u003e testParser.convertDataToIncome(\"I\" + DATA_SEPARATOR + \"pay\" + DATA_SEPARATOR + 1000 + DATA_SEPARATOR ","lastModifiedDate":"2021-10-23"},{"lineNumber":260,"author":{"gitId":"AnShengLee"},"content":"                    + \"SALARY\" + \"|\" + \"11/11/2121\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":261,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":262,"author":{"gitId":"AnShengLee"},"content":"    ","lastModifiedDate":"2021-10-25"},{"lineNumber":263,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":264,"author":{"gitId":"AnShengLee"},"content":"    public void convertSettingsToData_validSettings_validData() {","lastModifiedDate":"2021-10-27"},{"lineNumber":265,"author":{"gitId":"AnShengLee"},"content":"        BudgetManager testBudgetManager \u003d new BudgetManager();","lastModifiedDate":"2021-10-25"},{"lineNumber":266,"author":{"gitId":"jonathanlkw"},"content":"        FinancialTracker financialTracker \u003d new FinancialTracker();","lastModifiedDate":"2021-11-07"},{"lineNumber":267,"author":{"gitId":"AnShengLee"},"content":"        for (ExpenseCategory category : ExpenseCategory.values()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":268,"author":{"gitId":"AnShengLee"},"content":"            if (category \u003d\u003d ExpenseCategory.NULL) {","lastModifiedDate":"2021-10-25"},{"lineNumber":269,"author":{"gitId":"AnShengLee"},"content":"                break;","lastModifiedDate":"2021-10-25"},{"lineNumber":270,"author":{"gitId":"AnShengLee"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":271,"author":{"gitId":"jonathanlkw"},"content":"            if (category \u003d\u003d ExpenseCategory.OVERALL) {","lastModifiedDate":"2021-11-07"},{"lineNumber":272,"author":{"gitId":"jonathanlkw"},"content":"                testBudgetManager.setBudget(12, category, financialTracker.getExpenses());","lastModifiedDate":"2021-11-07"},{"lineNumber":273,"author":{"gitId":"jonathanlkw"},"content":"            } else {","lastModifiedDate":"2021-11-07"},{"lineNumber":274,"author":{"gitId":"jonathanlkw"},"content":"                testBudgetManager.setBudget(1, category, financialTracker.getExpenses());","lastModifiedDate":"2021-11-07"},{"lineNumber":275,"author":{"gitId":"jonathanlkw"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":276,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":277,"author":{"gitId":"AnShengLee"},"content":"        testBudgetManager.setThreshold(0.2);","lastModifiedDate":"2021-11-01"},{"lineNumber":278,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-25"},{"lineNumber":279,"author":{"gitId":"Nirmaleshwar"},"content":"        CurrencyManager currencyManager \u003d new CurrencyManager();","lastModifiedDate":"2021-11-02"},{"lineNumber":280,"author":{"gitId":"AnShengLee"},"content":"        String testData \u003d testParser.convertSettingsToData(testBudgetManager, currencyManager);","lastModifiedDate":"2021-11-03"},{"lineNumber":281,"author":{"gitId":"jonathanlkw"},"content":"        assertEquals(\"SGD,0.2,12.0,1.0,1.0,1.0,1.0,1.0,1.0\", testData);","lastModifiedDate":"2021-11-07"},{"lineNumber":282,"author":{"gitId":"AnShengLee"},"content":"        ","lastModifiedDate":"2021-10-25"},{"lineNumber":283,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":284,"author":{"gitId":"AnShengLee"},"content":"    ","lastModifiedDate":"2021-10-25"},{"lineNumber":285,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":286,"author":{"gitId":"AnShengLee"},"content":"    public void convertDataToBudgetSettings_validData_validBudgets() throws InvalidSettingsDataException {","lastModifiedDate":"2021-11-01"},{"lineNumber":287,"author":{"gitId":"jonathanlkw"},"content":"        String testData \u003d \"SGD,0.1,12.0,1.0,1.0,1.0,1.0,1.0,1.0\";","lastModifiedDate":"2021-11-07"},{"lineNumber":288,"author":{"gitId":"AnShengLee"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-10-25"},{"lineNumber":289,"author":{"gitId":"AnShengLee"},"content":"        ArrayList\u003cDouble\u003e testBudgets \u003d parser.convertDataToBudgetSettings(testData);","lastModifiedDate":"2021-10-25"},{"lineNumber":290,"author":{"gitId":"AnShengLee"},"content":"        for (int i \u003d 0; i \u003c TOTAL_EXPENSE_CATEGORY; i++) {","lastModifiedDate":"2021-10-25"},{"lineNumber":291,"author":{"gitId":"jonathanlkw"},"content":"            if (i \u003d\u003d 0) {","lastModifiedDate":"2021-11-07"},{"lineNumber":292,"author":{"gitId":"AnShengLee"},"content":"                assertEquals(12, testBudgets.get(i));","lastModifiedDate":"2021-10-25"},{"lineNumber":293,"author":{"gitId":"jonathanlkw"},"content":"            } else {","lastModifiedDate":"2021-11-07"},{"lineNumber":294,"author":{"gitId":"jonathanlkw"},"content":"                assertEquals(1, testBudgets.get(i));","lastModifiedDate":"2021-11-07"},{"lineNumber":295,"author":{"gitId":"jonathanlkw"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":296,"author":{"gitId":"AnShengLee"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":297,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":298,"author":{"gitId":"AnShengLee"},"content":"    ","lastModifiedDate":"2021-10-27"},{"lineNumber":299,"author":{"gitId":"AnShengLee"},"content":"    @Test ","lastModifiedDate":"2021-10-27"},{"lineNumber":300,"author":{"gitId":"AnShengLee"},"content":"    public void convertDataToCurrencySetting_validData_validCurrency() throws InvalidCurrencyTypeException, ","lastModifiedDate":"2021-11-01"},{"lineNumber":301,"author":{"gitId":"AnShengLee"},"content":"            InvalidSettingsDataException, BlankCurrencyTypeException {","lastModifiedDate":"2021-11-01"},{"lineNumber":302,"author":{"gitId":"AnShengLee"},"content":"        String testData \u003d \"SGD,0.0,12.0,12.0,12.0,12.0,12.0,12.0,12\";","lastModifiedDate":"2021-11-01"},{"lineNumber":303,"author":{"gitId":"AnShengLee"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-10-27"},{"lineNumber":304,"author":{"gitId":"AnShengLee"},"content":"        CurrencyType currency \u003d parser.convertDataToCurrencySetting(testData);","lastModifiedDate":"2021-10-27"},{"lineNumber":305,"author":{"gitId":"AnShengLee"},"content":"        assertEquals(currency.toString(), \"SGD\");","lastModifiedDate":"2021-10-27"},{"lineNumber":306,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":307,"author":{"gitId":"AnShengLee"},"content":"    ","lastModifiedDate":"2021-10-31"},{"lineNumber":308,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":309,"author":{"gitId":"AnShengLee"},"content":"    public void parseCommand_expenseInputWithDate_validCommand() {","lastModifiedDate":"2021-11-06"},{"lineNumber":310,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-31"},{"lineNumber":311,"author":{"gitId":"AnShengLee"},"content":"        String userInput \u003d \"add_ex_d D/11/11/2121 d/asf a/10 c/food\";","lastModifiedDate":"2021-11-06"},{"lineNumber":312,"author":{"gitId":"AnShengLee"},"content":"        Command testCommand \u003d testParser.parseCommand(userInput);","lastModifiedDate":"2021-10-31"},{"lineNumber":313,"author":{"gitId":"AnShengLee"},"content":"        assertEquals(testCommand.getClass(), AddExpenseCommand.class);","lastModifiedDate":"2021-10-31"},{"lineNumber":314,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":315,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":316,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":317,"author":{"gitId":"AnShengLee"},"content":"    public void parseCommand_incomeInputWithoutDate_validCommand() {","lastModifiedDate":"2021-11-06"},{"lineNumber":318,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-31"},{"lineNumber":319,"author":{"gitId":"AnShengLee"},"content":"        String userInput \u003d \"add_in c/salary d/a/g/adg/ad/gd/fag/ a/10\";","lastModifiedDate":"2021-11-06"},{"lineNumber":320,"author":{"gitId":"AnShengLee"},"content":"        Command testCommand \u003d testParser.parseCommand(userInput);","lastModifiedDate":"2021-10-31"},{"lineNumber":321,"author":{"gitId":"AnShengLee"},"content":"        assertEquals(testCommand.getClass(), AddIncomeCommand.class);","lastModifiedDate":"2021-10-31"},{"lineNumber":322,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":323,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":324,"author":{"gitId":"kyun99"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":325,"author":{"gitId":"kyun99"},"content":"    public void betweenIncome_invalidDateRange_invalidCommand() {","lastModifiedDate":"2021-10-31"},{"lineNumber":326,"author":{"gitId":"kyun99"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-31"},{"lineNumber":327,"author":{"gitId":"kyun99"},"content":"        String userInput \u003d \"btw_in s/11/12/2100 e/11/11/2100\";","lastModifiedDate":"2021-10-31"},{"lineNumber":328,"author":{"gitId":"kyun99"},"content":"        Command testCommand \u003d testParser.parseCommand(userInput);","lastModifiedDate":"2021-10-31"},{"lineNumber":329,"author":{"gitId":"kyun99"},"content":"        assertEquals(testCommand.getClass(), InvalidCommand.class);","lastModifiedDate":"2021-10-31"},{"lineNumber":330,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":331,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":332,"author":{"gitId":"kyun99"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":333,"author":{"gitId":"kyun99"},"content":"    public void betweenExpense_invalidDateRange_invalidCommand() {","lastModifiedDate":"2021-10-31"},{"lineNumber":334,"author":{"gitId":"kyun99"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-10-31"},{"lineNumber":335,"author":{"gitId":"kyun99"},"content":"        String userInput \u003d \"btw_ex s/11/12/2100 e/11/11/2100\";","lastModifiedDate":"2021-10-31"},{"lineNumber":336,"author":{"gitId":"kyun99"},"content":"        Command testCommand \u003d testParser.parseCommand(userInput);","lastModifiedDate":"2021-10-31"},{"lineNumber":337,"author":{"gitId":"kyun99"},"content":"        assertEquals(testCommand.getClass(), InvalidCommand.class);","lastModifiedDate":"2021-10-31"},{"lineNumber":338,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":339,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":340,"author":{"gitId":"kyun99"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":341,"author":{"gitId":"kyun99"},"content":"    public void parseAddExpenseCommand_invalidExpenseValue_invalidCommand() {","lastModifiedDate":"2021-11-01"},{"lineNumber":342,"author":{"gitId":"kyun99"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-11-01"},{"lineNumber":343,"author":{"gitId":"kyun99"},"content":"        Command underTest \u003d testParser.parseCommand(\"add_ex d/food a/1000000000.001 c/food\");","lastModifiedDate":"2021-11-01"},{"lineNumber":344,"author":{"gitId":"kyun99"},"content":"        assertSame(InvalidCommand.class, underTest.getClass());","lastModifiedDate":"2021-11-01"},{"lineNumber":345,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":346,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":347,"author":{"gitId":"kyun99"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":348,"author":{"gitId":"kyun99"},"content":"    public void parseAddIncomeCommand_invalidIncomeValue_invalidCommand() {","lastModifiedDate":"2021-11-01"},{"lineNumber":349,"author":{"gitId":"kyun99"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-11-01"},{"lineNumber":350,"author":{"gitId":"kyun99"},"content":"        Command underTest \u003d testParser.parseCommand(\"add_in d/salary a/1000000000.0011 c/salary\");","lastModifiedDate":"2021-11-01"},{"lineNumber":351,"author":{"gitId":"kyun99"},"content":"        assertSame(InvalidCommand.class, underTest.getClass());","lastModifiedDate":"2021-11-01"},{"lineNumber":352,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":353,"author":{"gitId":"kyun99"},"content":"    ","lastModifiedDate":"2021-11-01"},{"lineNumber":354,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":355,"author":{"gitId":"AnShengLee"},"content":"    public void parseCommand_validThresholdInput_correctCommand() {","lastModifiedDate":"2021-11-01"},{"lineNumber":356,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-11-01"},{"lineNumber":357,"author":{"gitId":"AnShengLee"},"content":"        Command underTest \u003d testParser.parseCommand(\"set_threshold t/0.5\");","lastModifiedDate":"2021-11-01"},{"lineNumber":358,"author":{"gitId":"AnShengLee"},"content":"        assertSame(SetThresholdCommand.class, underTest.getClass());","lastModifiedDate":"2021-11-01"},{"lineNumber":359,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":360,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":361,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":362,"author":{"gitId":"AnShengLee"},"content":"    public void parseCommand_validClearAllCommand_correctCommand() {","lastModifiedDate":"2021-11-01"},{"lineNumber":363,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-11-01"},{"lineNumber":364,"author":{"gitId":"AnShengLee"},"content":"        Command underTest \u003d testParser.parseCommand(\"clear_all_entries\");","lastModifiedDate":"2021-11-01"},{"lineNumber":365,"author":{"gitId":"AnShengLee"},"content":"        assertSame(ClearAllEntriesCommand.class, underTest.getClass());","lastModifiedDate":"2021-11-01"},{"lineNumber":366,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":367,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":368,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":369,"author":{"gitId":"AnShengLee"},"content":"    public void parseCommand_validShowGraphCommand_correctCommand() {","lastModifiedDate":"2021-11-01"},{"lineNumber":370,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-11-01"},{"lineNumber":371,"author":{"gitId":"AnShengLee"},"content":"        Command underTest \u003d testParser.parseCommand(\"show_graph\");","lastModifiedDate":"2021-11-01"},{"lineNumber":372,"author":{"gitId":"AnShengLee"},"content":"        assertSame(ShowGraphCommand.class, underTest.getClass());","lastModifiedDate":"2021-11-01"},{"lineNumber":373,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":374,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":375,"author":{"gitId":"kyun99"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":376,"author":{"gitId":"kyun99"},"content":"    public void parseCommand_validYearInputShowGraphCommand_correctCommand() {","lastModifiedDate":"2021-11-05"},{"lineNumber":377,"author":{"gitId":"kyun99"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-11-05"},{"lineNumber":378,"author":{"gitId":"kyun99"},"content":"        Command underTest \u003d testParser.parseCommand(\"show_graph Y/   2021    \");","lastModifiedDate":"2021-11-05"},{"lineNumber":379,"author":{"gitId":"kyun99"},"content":"        assertSame(ShowGraphByYearCommand.class, underTest.getClass());","lastModifiedDate":"2021-11-05"},{"lineNumber":380,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":381,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":382,"author":{"gitId":"kyun99"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":383,"author":{"gitId":"kyun99"},"content":"    public void parseCommand_invalidYearInputShowGraphCommand_correctCommand() {","lastModifiedDate":"2021-11-05"},{"lineNumber":384,"author":{"gitId":"kyun99"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-11-05"},{"lineNumber":385,"author":{"gitId":"kyun99"},"content":"        Command underTest \u003d testParser.parseCommand(\"show_graph Y/2023 12as d v \");","lastModifiedDate":"2021-11-05"},{"lineNumber":386,"author":{"gitId":"kyun99"},"content":"        assertEquals(Messages.INVALID_YEAR_MESSAGE,((InvalidCommand)underTest).getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":387,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":388,"author":{"gitId":"kyun99"},"content":"    ","lastModifiedDate":"2021-11-05"},{"lineNumber":389,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":390,"author":{"gitId":"AnShengLee"},"content":"    public void parseCommand_validExpenseInputD_C_A_validCommand() {","lastModifiedDate":"2021-11-06"},{"lineNumber":391,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-11-06"},{"lineNumber":392,"author":{"gitId":"AnShengLee"},"content":"        Command underTest \u003d testParser.parseCommand(\"add_ex d//fa/gd/ff/s/f/sf/s/f/ c/food a/100\");","lastModifiedDate":"2021-11-06"},{"lineNumber":393,"author":{"gitId":"AnShengLee"},"content":"        assertEquals(AddExpenseCommand.class, underTest.getClass());","lastModifiedDate":"2021-11-06"},{"lineNumber":394,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":395,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":396,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":397,"author":{"gitId":"AnShengLee"},"content":"    public void parseCommand_validExpenseInputC_D_A_validCommand() {","lastModifiedDate":"2021-11-06"},{"lineNumber":398,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-11-06"},{"lineNumber":399,"author":{"gitId":"AnShengLee"},"content":"        Command underTest \u003d testParser.parseCommand(\"add_ex c/food d//fa/gd/ff/s/f/sf/s/f/ a/100\");","lastModifiedDate":"2021-11-06"},{"lineNumber":400,"author":{"gitId":"AnShengLee"},"content":"        assertEquals(AddExpenseCommand.class, underTest.getClass());","lastModifiedDate":"2021-11-06"},{"lineNumber":401,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":402,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":403,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":404,"author":{"gitId":"AnShengLee"},"content":"    public void parseCommand_validExpenseInputA_C_D_validCommand() {","lastModifiedDate":"2021-11-06"},{"lineNumber":405,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-11-06"},{"lineNumber":406,"author":{"gitId":"AnShengLee"},"content":"        Command underTest \u003d testParser.parseCommand(\"add_ex a/100 c/food d//fa/gd/ff/s/f/sf/s/f/\");","lastModifiedDate":"2021-11-06"},{"lineNumber":407,"author":{"gitId":"AnShengLee"},"content":"        assertEquals(AddExpenseCommand.class, underTest.getClass());","lastModifiedDate":"2021-11-06"},{"lineNumber":408,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":409,"author":{"gitId":"AnShengLee"},"content":"    ","lastModifiedDate":"2021-11-06"},{"lineNumber":410,"author":{"gitId":"AnShengLee"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":411,"author":{"gitId":"AnShengLee"},"content":"    public void parseCommand_validBalanceCommand_validBalanceCommand() {","lastModifiedDate":"2021-11-06"},{"lineNumber":412,"author":{"gitId":"AnShengLee"},"content":"        Parser testParser \u003d new Parser();","lastModifiedDate":"2021-11-06"},{"lineNumber":413,"author":{"gitId":"AnShengLee"},"content":"        Command underTest \u003d testParser.parseCommand(\"balance\");","lastModifiedDate":"2021-11-06"},{"lineNumber":414,"author":{"gitId":"AnShengLee"},"content":"        assertEquals(BalanceCommand.class, underTest.getClass());","lastModifiedDate":"2021-11-06"},{"lineNumber":415,"author":{"gitId":"AnShengLee"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":416,"author":{"gitId":"AnShengLee"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"kyun99":56,"AnShengLee":344,"Nirmaleshwar":3,"jonathanlkw":13}},{"path":"src/test/java/seedu/duke/TotalExpenseBetweenCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"kyun99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"import seedu.entry.Expense;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"import seedu.entry.ExpenseCategory;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.ExpenseOverflowException;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"kyun99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"kyun99"},"content":"public class TotalExpenseBetweenCommandTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"kyun99"},"content":"    private FinancialTracker testTracker \u003d new FinancialTracker();","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":"    ","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"kyun99"},"content":"    public void execute_twoValidDateInputs_validTotalSum() throws ExpenseOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"kyun99"},"content":"        LocalDate startDate \u003d LocalDate.parse(\"20/10/2021\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"kyun99"},"content":"        LocalDate endDate \u003d LocalDate.parse(\"29/10/2021\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"AnShengLee"},"content":"        Expense testExpense1 \u003d new Expense(\"Salary\", 400.00, ExpenseCategory.FOOD, startDate);","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"AnShengLee"},"content":"        Expense testExpense2 \u003d new Expense(\"Allowance\", 400.00, ExpenseCategory.MISC, endDate);","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"kyun99"},"content":"        testTracker.addExpense(testExpense1);","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"kyun99"},"content":"        testTracker.addExpense(testExpense2);","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"kyun99"},"content":"        assertEquals(800.00, testTracker.getExpenseBetween(startDate,endDate));","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"kyun99"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"kyun99"},"content":"    public void execute_twoValidDateInputs_TotalSumZero() throws ExpenseOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"AnShengLee"},"content":"        LocalDate startDate \u003d LocalDate.parse(\"28/10/2021\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"AnShengLee"},"content":"        LocalDate endDate \u003d LocalDate.parse(\"29/10/2021\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"kyun99"},"content":"        Expense testExpense1 \u003d new Expense(\"Salary\", 400.00, ExpenseCategory.FOOD);","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"kyun99"},"content":"        Expense testExpense2 \u003d new Expense(\"Allowance\", 400.00, ExpenseCategory.MISC);","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"kyun99"},"content":"        testTracker.addExpense(testExpense1);","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"kyun99"},"content":"        testTracker.addExpense(testExpense2);","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"kyun99"},"content":"        assertEquals(0.00, testTracker.getExpenseBetween(startDate,endDate));","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"kyun99":35,"AnShengLee":4}},{"path":"src/test/java/seedu/duke/TotalIncomeBetweenCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"kyun99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"kyun99"},"content":"import seedu.entry.Income;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"kyun99"},"content":"import seedu.entry.IncomeCategory;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.IncomeOverflowException;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"kyun99"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"kyun99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"kyun99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"kyun99"},"content":"public class TotalIncomeBetweenCommandTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"kyun99"},"content":"    private FinancialTracker testTracker \u003d new FinancialTracker();","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"kyun99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"kyun99"},"content":"    public void execute_twoValidDateInputs_validTotalSum() throws IncomeOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"kyun99"},"content":"        LocalDate startDate \u003d LocalDate.parse(\"20/10/2021\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"kyun99"},"content":"        LocalDate endDate \u003d LocalDate.parse(\"29/10/2021\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"AnShengLee"},"content":"        Income testIncome1 \u003d new Income(\"Salary\", 400.00, IncomeCategory.ALLOWANCE, startDate);","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"AnShengLee"},"content":"        Income testIncome2 \u003d new Income(\"Allowance\", 400.00, IncomeCategory.ALLOWANCE, endDate);","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"kyun99"},"content":"        testTracker.addIncome(testIncome1);","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"kyun99"},"content":"        testTracker.addIncome(testIncome2);","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"kyun99"},"content":"        assertEquals(800.00, testTracker.getIncomeBetween(startDate,endDate));","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"kyun99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"kyun99"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"kyun99"},"content":"    public void execute_twoValidDateInputs_TotalSumZero() throws IncomeOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"AnShengLee"},"content":"        LocalDate startDate \u003d LocalDate.parse(\"28/10/2021\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"AnShengLee"},"content":"        LocalDate endDate \u003d LocalDate.parse(\"29/10/2021\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"kyun99"},"content":"        Income testIncome1 \u003d new Income(\"Salary\", 400.00, IncomeCategory.ALLOWANCE);","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"kyun99"},"content":"        Income testIncome2 \u003d new Income(\"Allowance\", 400.00, IncomeCategory.ALLOWANCE);","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"kyun99"},"content":"        testTracker.addIncome(testIncome1);","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"kyun99"},"content":"        testTracker.addIncome(testIncome2);","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"kyun99"},"content":"        assertEquals(0.00, testTracker.getIncomeBetween(startDate,endDate));","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"kyun99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"kyun99"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"kyun99":35,"AnShengLee":4}},{"path":"src/test/java/seedu/duke/UiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KZQ1999"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"KZQ1999"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"KZQ1999"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"KZQ1999"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"AnShengLee"},"content":"import seedu.commands.general.FindCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"KZQ1999"},"content":"import seedu.entry.Entry;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"KZQ1999"},"content":"import seedu.entry.Income;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"kyun99"},"content":"import seedu.entry.IncomeCategory;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"KZQ1999"},"content":"import seedu.entry.ExpenseCategory;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"KZQ1999"},"content":"import seedu.entry.Expense;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.ExpenseOverflowException;","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"kyun99"},"content":"import seedu.exceptions.IncomeOverflowException;","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"Nirmaleshwar"},"content":"import seedu.utility.CurrencyManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"KZQ1999"},"content":"import seedu.utility.FinancialTracker;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"KZQ1999"},"content":"import seedu.utility.Messages;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"KZQ1999"},"content":"import seedu.utility.StonksGraph;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"KZQ1999"},"content":"import seedu.utility.Ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"KZQ1999"},"content":"import seedu.utility.BudgetManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"KZQ1999"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"KZQ1999"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"KZQ1999"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"KZQ1999"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"KZQ1999"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"KZQ1999"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"KZQ1999"},"content":"public class UiTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"KZQ1999"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"KZQ1999"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"KZQ1999"},"content":"    private final String newLine \u003d System.lineSeparator();","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"KZQ1999"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"KZQ1999"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"KZQ1999"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"KZQ1999"},"content":"    @AfterEach","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"KZQ1999"},"content":"    public void tearDown() {","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"KZQ1999"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"KZQ1999"},"content":"    private static final String SEPARATOR_LINE \u003d \"-------------------------------------------------------------------\"","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"KZQ1999"},"content":"            + \"----------------------------------\";","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"KZQ1999"},"content":"    private static final String currentDate \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"AnShengLee"},"content":"            \"(\" + LocalDate.now().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")) + \")\";","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"KZQ1999"},"content":"    private static final String DATE_FORMAT \u003d \"dd/MM/yyyy\";","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"KZQ1999"},"content":"    ","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"KZQ1999"},"content":"    private final Ui testUI \u003d new Ui();","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"KZQ1999"},"content":"    private final FinancialTracker financialTracker \u003d new FinancialTracker();","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"KZQ1999"},"content":"    private BudgetManager budgetManager \u003d new BudgetManager();","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"Nirmaleshwar"},"content":"    private CurrencyManager currencyManager \u003d new CurrencyManager();","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"kyun99"},"content":"    public void initialiseFinancialTracker() throws IncomeOverflowException, ExpenseOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"kyun99"},"content":"        financialTracker.addIncome(new Income(\"Paycheck August\", 25.0, IncomeCategory.SALARY));","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"kyun99"},"content":"        financialTracker.addExpense(new Expense(\"Bought a game\", 19.73, ExpenseCategory.FOOD));","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"kyun99"},"content":"        financialTracker.addExpense(new Expense(\"Bought cookies\", 5.0, ExpenseCategory.FOOD));","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"kyun99"},"content":"        financialTracker.addExpense(new Expense(\"Bought cakes\", 7.0, ExpenseCategory.FOOD));","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"kyun99"},"content":"        financialTracker.addIncome(new Income(\"Rob a bank\", 2000.0, IncomeCategory.ADHOC));","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"kyun99"},"content":"        financialTracker.addIncome(new Income(\"Paycheck July\", 25.0, IncomeCategory.SALARY));","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"KZQ1999"},"content":"    ","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"KZQ1999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"kyun99"},"content":"        public void listExpense_validFinancialTracker_filteredExpenses() ","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"kyun99"},"content":"            throws ExpenseOverflowException, IncomeOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"KZQ1999"},"content":"        initialiseFinancialTracker();","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"KZQ1999"},"content":"        final String expectedOutput \u003d SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"KZQ1999"},"content":"                + \"Below is a list of all of your recent spending!\" + newLine ","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"KZQ1999"},"content":"                + \"1: [E] Bought a game - $19.73 \" + currentDate + newLine","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"KZQ1999"},"content":"                + \"2: [E] Bought cookies - $5.00 \" + currentDate + newLine ","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"KZQ1999"},"content":"                + \"3: [E] Bought cakes - $7.00 \" + currentDate + newLine","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE;","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"KZQ1999"},"content":"        ","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"KZQ1999"},"content":"        testUI.listExpense(financialTracker.getExpenses());","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"KZQ1999"},"content":"        assertEquals(expectedOutput, outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"KZQ1999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"kyun99"},"content":"    public void listIncome_validFinancialTracker_filteredIncomes() ","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"kyun99"},"content":"            throws ExpenseOverflowException, IncomeOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"KZQ1999"},"content":"        initialiseFinancialTracker();","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"KZQ1999"},"content":"        final String expectedOutput \u003d SEPARATOR_LINE + newLine ","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"KZQ1999"},"content":"                + \"Below is a list of all of your recent earnings!\" + newLine","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE + newLine ","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"KZQ1999"},"content":"                + \"1: [I] Paycheck August - $25.00 \" + currentDate + newLine","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"KZQ1999"},"content":"                + \"2: [I] Rob a bank - $2000.00 \" + currentDate + newLine","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"KZQ1999"},"content":"                + \"3: [I] Paycheck July - $25.00 \" + currentDate + newLine","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE;","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"KZQ1999"},"content":"        testUI.listIncome(financialTracker.getIncomes());","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"KZQ1999"},"content":"        assertEquals(expectedOutput, outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"KZQ1999"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"kyun99"},"content":"    public void listFind_givenFilteredList_printFilteredList() ","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"kyun99"},"content":"            throws ExpenseOverflowException, IncomeOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"KZQ1999"},"content":"        initialiseFinancialTracker();","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"KZQ1999"},"content":"        String expectedOutput \u003d SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"KZQ1999"},"content":"                + Messages.FOUND_LIST_MESSAGE + newLine","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"KZQ1999"},"content":"                + \"1: [E] Bought a game - $19.73 \" + currentDate + newLine","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"KZQ1999"},"content":"                + \"2: [E] Bought cookies - $5.00 \" + currentDate + newLine","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"KZQ1999"},"content":"                + \"3: [E] Bought cakes - $7.00 \" + currentDate + newLine","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"KZQ1999"},"content":"                + \"4: [I] Paycheck August - $25.00 \" + currentDate + newLine","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"KZQ1999"},"content":"                + \"5: [I] Rob a bank - $2000.00 \" + currentDate + newLine","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"KZQ1999"},"content":"                + \"6: [I] Paycheck July - $25.00 \" + currentDate + newLine","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE;","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"KZQ1999"},"content":"        testUI.listFind(financialTracker.getEntries());","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"KZQ1999"},"content":"        assertEquals(expectedOutput, outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"KZQ1999"},"content":"    ","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"KZQ1999"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"KZQ1999"},"content":"    public void printExpenseAdded_addedOneItem_expenseAddedFeedback() {","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"KZQ1999"},"content":"        final String expectedOutput \u003d SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"KZQ1999"},"content":"                + \"Your most recent spending: \" + newLine","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"KZQ1999"},"content":"                + \"[E] Bought cookies - $5.00 \" + currentDate + newLine","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE;","lastModifiedDate":"2021-10-17"},{"lineNumber":127,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":128,"author":{"gitId":"kyun99"},"content":"        testUI.printExpenseAdded(new Expense(\"Bought cookies\", 5.0, ExpenseCategory.FOOD));","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"KZQ1999"},"content":"        assertEquals(expectedOutput, outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-10-17"},{"lineNumber":130,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":131,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"KZQ1999"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"KZQ1999"},"content":"    public void printIncomeAdded_addedOneItem_incomeAddedFeedback() {","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"KZQ1999"},"content":"        final String expectedOutput \u003d SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-17"},{"lineNumber":135,"author":{"gitId":"KZQ1999"},"content":"                + \"Your most recent earning: \" + newLine","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"KZQ1999"},"content":"                + \"[I] Salary August - $5.00 \" + currentDate + newLine","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE;","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"kyun99"},"content":"        testUI.printIncomeAdded(new Income(\"Salary August\", 5.0, IncomeCategory.SALARY));","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"KZQ1999"},"content":"        assertEquals(expectedOutput, outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":142,"author":{"gitId":"KZQ1999"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":143,"author":{"gitId":"kyun99"},"content":"    public void printBalance_oneExpenseOneIncome_printNetBalance() ","lastModifiedDate":"2021-11-01"},{"lineNumber":144,"author":{"gitId":"kyun99"},"content":"            throws ExpenseOverflowException, IncomeOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":145,"author":{"gitId":"KZQ1999"},"content":"        initialiseFinancialTracker();","lastModifiedDate":"2021-10-17"},{"lineNumber":146,"author":{"gitId":"KZQ1999"},"content":"        final String expectedOutput \u003d SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-17"},{"lineNumber":147,"author":{"gitId":"KZQ1999"},"content":"                + \"Your current balance is: $2018.27\" + newLine","lastModifiedDate":"2021-10-17"},{"lineNumber":148,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE;","lastModifiedDate":"2021-10-17"},{"lineNumber":149,"author":{"gitId":"KZQ1999"},"content":"        ","lastModifiedDate":"2021-10-17"},{"lineNumber":150,"author":{"gitId":"KZQ1999"},"content":"        testUI.printBalance(financialTracker.calculateBalance());","lastModifiedDate":"2021-11-01"},{"lineNumber":151,"author":{"gitId":"KZQ1999"},"content":"        assertEquals(expectedOutput, outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-10-17"},{"lineNumber":152,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":153,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"KZQ1999"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"KZQ1999"},"content":"    public void listExpense_emptyFinancialTracker_emptyExpenseListMessage() {","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"KZQ1999"},"content":"        final String expectedOutput \u003d SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"KZQ1999"},"content":"                + \"You have not spent anything!\" + newLine","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE;","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"KZQ1999"},"content":"        testUI.listExpense(financialTracker.getExpenses());","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"KZQ1999"},"content":"        assertEquals(expectedOutput, outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"KZQ1999"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"KZQ1999"},"content":"    public void listIncome_emptyFinancialTracker_emptyIncomeListMessage() {","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"KZQ1999"},"content":"        final String expectedOutput \u003d SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"KZQ1999"},"content":"                + \"You have not entered any income!\" + newLine","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE;","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"KZQ1999"},"content":"        testUI.listIncome(financialTracker.getIncomes());","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"KZQ1999"},"content":"        assertEquals(expectedOutput, outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"KZQ1999"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"KZQ1999"},"content":"    public void listFind_emptyFilteredList_notFoundMessage() {","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"KZQ1999"},"content":"        final String expectedOutput \u003d SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"KZQ1999"},"content":"                + \"Your search did not match any of the entries!\" + newLine","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE;","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"KZQ1999"},"content":"        ArrayList\u003cEntry\u003e entries \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"KZQ1999"},"content":"        testUI.listFind(entries);","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"KZQ1999"},"content":"        assertEquals(expectedOutput, outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-10-21"},{"lineNumber":185,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":186,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":187,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":188,"author":{"gitId":"KZQ1999"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":189,"author":{"gitId":"KZQ1999"},"content":"    public void printTotalExpense_doubleExpense_totalExpenseMessage() {","lastModifiedDate":"2021-10-21"},{"lineNumber":190,"author":{"gitId":"KZQ1999"},"content":"        double totalExpense \u003d 98.72923;","lastModifiedDate":"2021-10-21"},{"lineNumber":191,"author":{"gitId":"KZQ1999"},"content":"        String expectedOutput \u003d SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-21"},{"lineNumber":192,"author":{"gitId":"KZQ1999"},"content":"                + \"Your total expense is: $98.73\" + newLine","lastModifiedDate":"2021-10-21"},{"lineNumber":193,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE;","lastModifiedDate":"2021-10-21"},{"lineNumber":194,"author":{"gitId":"KZQ1999"},"content":"        testUI.printTotalExpense(totalExpense);","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"KZQ1999"},"content":"        assertEquals(expectedOutput, outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-10-21"},{"lineNumber":196,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":197,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":198,"author":{"gitId":"KZQ1999"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":199,"author":{"gitId":"KZQ1999"},"content":"    public void printTotalIncome_doubleIncome_totalIncomeMessage() {","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"KZQ1999"},"content":"        double totalIncome \u003d 98.72923;","lastModifiedDate":"2021-10-21"},{"lineNumber":201,"author":{"gitId":"KZQ1999"},"content":"        String expectedOutput \u003d SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"KZQ1999"},"content":"                + \"Your total income is: $98.73\" + newLine","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE;","lastModifiedDate":"2021-10-21"},{"lineNumber":204,"author":{"gitId":"KZQ1999"},"content":"        testUI.printTotalIncome(totalIncome);","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"KZQ1999"},"content":"        assertEquals(expectedOutput, outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"KZQ1999"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":209,"author":{"gitId":"kyun99"},"content":"    public void expenseDeleted_oneExpenseDeleted_deletedExpenseMessage() ","lastModifiedDate":"2021-11-01"},{"lineNumber":210,"author":{"gitId":"kyun99"},"content":"            throws ExpenseOverflowException, IncomeOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":211,"author":{"gitId":"KZQ1999"},"content":"        initialiseFinancialTracker();","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"KZQ1999"},"content":"        String expectedOutput \u003d SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"KZQ1999"},"content":"                + \"You removed this: \" + newLine","lastModifiedDate":"2021-10-21"},{"lineNumber":214,"author":{"gitId":"KZQ1999"},"content":"                + \"[E] chocolate - $56.12 \" + currentDate + newLine","lastModifiedDate":"2021-10-21"},{"lineNumber":215,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE;","lastModifiedDate":"2021-10-21"},{"lineNumber":216,"author":{"gitId":"KZQ1999"},"content":"        Expense toBeDeletedExpense \u003d new Expense(\"chocolate\", 56.12, ExpenseCategory.FOOD);","lastModifiedDate":"2021-10-21"},{"lineNumber":217,"author":{"gitId":"KZQ1999"},"content":"        testUI.printExpenseDeleted(toBeDeletedExpense);","lastModifiedDate":"2021-10-21"},{"lineNumber":218,"author":{"gitId":"KZQ1999"},"content":"        assertEquals(expectedOutput, outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-10-21"},{"lineNumber":219,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":220,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":221,"author":{"gitId":"KZQ1999"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"kyun99"},"content":"    public void incomeDeleted_oneIncomeDeleted_deletedIncomeMessage() ","lastModifiedDate":"2021-11-01"},{"lineNumber":223,"author":{"gitId":"kyun99"},"content":"            throws ExpenseOverflowException, IncomeOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":224,"author":{"gitId":"KZQ1999"},"content":"        initialiseFinancialTracker();","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"KZQ1999"},"content":"        String expectedOutput \u003d SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-21"},{"lineNumber":226,"author":{"gitId":"KZQ1999"},"content":"                + \"You removed this: \" + newLine","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"KZQ1999"},"content":"                + \"[I] august paycheck - $567.12 \" + currentDate + newLine","lastModifiedDate":"2021-10-21"},{"lineNumber":228,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE;","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"KZQ1999"},"content":"        Income toBeDeletedIncome \u003d new Income(\"august paycheck\", 567.12, IncomeCategory.SALARY);","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"KZQ1999"},"content":"        testUI.printIncomeDeleted(toBeDeletedIncome);","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"KZQ1999"},"content":"        assertEquals(expectedOutput, outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"KZQ1999"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"KZQ1999"},"content":"    public void printTotalExpenseBetween_noExpenseBetween_printNoExpenseBetweenMessage() {","lastModifiedDate":"2021-10-21"},{"lineNumber":236,"author":{"gitId":"KZQ1999"},"content":"        String expectedOutput \u003d SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-21"},{"lineNumber":237,"author":{"gitId":"AnShengLee"},"content":"                + \"You do not have any expense between 30/08/2090 and 30/08/2092\" + newLine","lastModifiedDate":"2021-10-23"},{"lineNumber":238,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE;","lastModifiedDate":"2021-10-21"},{"lineNumber":239,"author":{"gitId":"KZQ1999"},"content":"        LocalDate testDate1 \u003d LocalDate.of(2090,8,30);","lastModifiedDate":"2021-10-21"},{"lineNumber":240,"author":{"gitId":"KZQ1999"},"content":"        LocalDate testDate2 \u003d LocalDate.of(2092,8,30);","lastModifiedDate":"2021-10-21"},{"lineNumber":241,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":242,"author":{"gitId":"KZQ1999"},"content":"        double totalExpense \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":243,"author":{"gitId":"KZQ1999"},"content":"        testUI.printTotalExpenseBetween(totalExpense, testDate1, testDate2);","lastModifiedDate":"2021-10-21"},{"lineNumber":244,"author":{"gitId":"KZQ1999"},"content":"        assertEquals(expectedOutput, outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-10-21"},{"lineNumber":245,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":246,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":247,"author":{"gitId":"KZQ1999"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":248,"author":{"gitId":"KZQ1999"},"content":"    public void printTotalExpenseBetween_gotExpenseBetween_printTotalExpenseBetweenMessage() {","lastModifiedDate":"2021-10-21"},{"lineNumber":249,"author":{"gitId":"KZQ1999"},"content":"        String expectedOutput \u003d SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-21"},{"lineNumber":250,"author":{"gitId":"AnShengLee"},"content":"                + \"Your total expense between 30/08/2090 and 30/08/2092 is $7512.00\" + newLine","lastModifiedDate":"2021-10-23"},{"lineNumber":251,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE;","lastModifiedDate":"2021-10-21"},{"lineNumber":252,"author":{"gitId":"KZQ1999"},"content":"        LocalDate testDate1 \u003d LocalDate.of(2090,8,30);","lastModifiedDate":"2021-10-21"},{"lineNumber":253,"author":{"gitId":"KZQ1999"},"content":"        LocalDate testDate2 \u003d LocalDate.of(2092,8,30);","lastModifiedDate":"2021-10-21"},{"lineNumber":254,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":255,"author":{"gitId":"KZQ1999"},"content":"        double totalExpense \u003d 7512;","lastModifiedDate":"2021-10-21"},{"lineNumber":256,"author":{"gitId":"KZQ1999"},"content":"        testUI.printTotalExpenseBetween(totalExpense, testDate1, testDate2);","lastModifiedDate":"2021-10-21"},{"lineNumber":257,"author":{"gitId":"KZQ1999"},"content":"        assertEquals(expectedOutput, outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-10-21"},{"lineNumber":258,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":259,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":260,"author":{"gitId":"KZQ1999"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":261,"author":{"gitId":"KZQ1999"},"content":"    public void printTotalIncomeBetween_noIncomeBetween_printNoIncomeBetweenMessage() {","lastModifiedDate":"2021-10-21"},{"lineNumber":262,"author":{"gitId":"KZQ1999"},"content":"        String expectedOutput \u003d SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-21"},{"lineNumber":263,"author":{"gitId":"AnShengLee"},"content":"                + \"You do not have any income between 30/08/2090 and 30/08/2092\" + newLine","lastModifiedDate":"2021-10-23"},{"lineNumber":264,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE;","lastModifiedDate":"2021-10-21"},{"lineNumber":265,"author":{"gitId":"KZQ1999"},"content":"        LocalDate testDate1 \u003d LocalDate.of(2090,8,30);","lastModifiedDate":"2021-10-21"},{"lineNumber":266,"author":{"gitId":"KZQ1999"},"content":"        LocalDate testDate2 \u003d LocalDate.of(2092,8,30);","lastModifiedDate":"2021-10-21"},{"lineNumber":267,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":268,"author":{"gitId":"KZQ1999"},"content":"        double totalIncome \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":269,"author":{"gitId":"KZQ1999"},"content":"        testUI.printTotalIncomeBetween(totalIncome, testDate1, testDate2);","lastModifiedDate":"2021-10-21"},{"lineNumber":270,"author":{"gitId":"KZQ1999"},"content":"        assertEquals(expectedOutput, outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-10-21"},{"lineNumber":271,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":272,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":273,"author":{"gitId":"KZQ1999"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":274,"author":{"gitId":"KZQ1999"},"content":"    public void printTotalIncomeBetween_gotIncomeBetween_printTotalIncomeBetweenMessage() {","lastModifiedDate":"2021-10-21"},{"lineNumber":275,"author":{"gitId":"KZQ1999"},"content":"        String expectedOutput \u003d SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-21"},{"lineNumber":276,"author":{"gitId":"AnShengLee"},"content":"                + \"Your total income between 30/08/2090 and 30/08/2092 is $988.10\" + newLine","lastModifiedDate":"2021-10-23"},{"lineNumber":277,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE;","lastModifiedDate":"2021-10-21"},{"lineNumber":278,"author":{"gitId":"KZQ1999"},"content":"        LocalDate testDate1 \u003d LocalDate.of(2090,8,30);","lastModifiedDate":"2021-10-21"},{"lineNumber":279,"author":{"gitId":"KZQ1999"},"content":"        LocalDate testDate2 \u003d LocalDate.of(2092,8,30);","lastModifiedDate":"2021-10-21"},{"lineNumber":280,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":281,"author":{"gitId":"KZQ1999"},"content":"        double totalIncome \u003d 988.1;","lastModifiedDate":"2021-10-21"},{"lineNumber":282,"author":{"gitId":"KZQ1999"},"content":"        testUI.printTotalIncomeBetween(totalIncome, testDate1, testDate2);","lastModifiedDate":"2021-10-21"},{"lineNumber":283,"author":{"gitId":"KZQ1999"},"content":"        assertEquals(expectedOutput, outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-10-21"},{"lineNumber":284,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":285,"author":{"gitId":"KZQ1999"},"content":"    ","lastModifiedDate":"2021-11-01"},{"lineNumber":286,"author":{"gitId":"KZQ1999"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":287,"author":{"gitId":"KZQ1999"},"content":"    public void printGraph_validStonksGraph_printCorrectGraph() {","lastModifiedDate":"2021-10-21"},{"lineNumber":288,"author":{"gitId":"KZQ1999"},"content":"        //empty financialtracker","lastModifiedDate":"2021-10-21"},{"lineNumber":289,"author":{"gitId":"kyun99"},"content":"        StonksGraph stonksGraph \u003d new StonksGraph(financialTracker,LocalDate.now().getYear());","lastModifiedDate":"2021-11-05"},{"lineNumber":290,"author":{"gitId":"KZQ1999"},"content":"        String expectedOutput \u003d SEPARATOR_LINE","lastModifiedDate":"2021-10-21"},{"lineNumber":291,"author":{"gitId":"KZQ1999"},"content":"                + \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"","lastModifiedDate":"2021-10-21"},{"lineNumber":292,"author":{"gitId":"KZQ1999"},"content":"                + \"x                                                                                                  x\"","lastModifiedDate":"2021-10-21"},{"lineNumber":293,"author":{"gitId":"KZQ1999"},"content":"                + \"x   Account Balance: $0.00                                                 Legend:                 x\"","lastModifiedDate":"2021-10-25"},{"lineNumber":294,"author":{"gitId":"KZQ1999"},"content":"                + \"x   Current month total expense: $0.00                                # is Expense      x\"","lastModifiedDate":"2021-11-01"},{"lineNumber":295,"author":{"gitId":"KZQ1999"},"content":"                + \"x   Current month total income: $0.00                                 o is Income       x\"","lastModifiedDate":"2021-11-01"},{"lineNumber":296,"author":{"gitId":"KZQ1999"},"content":"                + \"x   Your Year Report                                                       Unit: 0.01              x\"","lastModifiedDate":"2021-11-07"},{"lineNumber":297,"author":{"gitId":"KZQ1999"},"content":"                + \"x ------------------------------------------------------------------------------------------------ x\"","lastModifiedDate":"2021-10-21"},{"lineNumber":298,"author":{"gitId":"KZQ1999"},"content":"                + \"x                                                                                                  x\"","lastModifiedDate":"2021-10-21"},{"lineNumber":299,"author":{"gitId":"KZQ1999"},"content":"                + \"x                                                                                                  x\"","lastModifiedDate":"2021-10-21"},{"lineNumber":300,"author":{"gitId":"KZQ1999"},"content":"                + \"x                                                                                                  x\"","lastModifiedDate":"2021-10-21"},{"lineNumber":301,"author":{"gitId":"KZQ1999"},"content":"                + \"x                                                                                                  x\"","lastModifiedDate":"2021-10-21"},{"lineNumber":302,"author":{"gitId":"KZQ1999"},"content":"                + \"x                                                                                                  x\"","lastModifiedDate":"2021-10-21"},{"lineNumber":303,"author":{"gitId":"KZQ1999"},"content":"                + \"x                                                                                                  x\"","lastModifiedDate":"2021-10-21"},{"lineNumber":304,"author":{"gitId":"KZQ1999"},"content":"                + \"x                                                                                                  x\"","lastModifiedDate":"2021-10-21"},{"lineNumber":305,"author":{"gitId":"KZQ1999"},"content":"                + \"x                                                                                                  x\"","lastModifiedDate":"2021-10-21"},{"lineNumber":306,"author":{"gitId":"KZQ1999"},"content":"                + \"x                                                                                                  x\"","lastModifiedDate":"2021-10-21"},{"lineNumber":307,"author":{"gitId":"KZQ1999"},"content":"                + \"x                                                                                                  x\"","lastModifiedDate":"2021-10-21"},{"lineNumber":308,"author":{"gitId":"KZQ1999"},"content":"                + \"x ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ x\"","lastModifiedDate":"2021-10-21"},{"lineNumber":309,"author":{"gitId":"KZQ1999"},"content":"                + \"x   Jan     Feb     Mar     Apr     May     Jun     Jul     Aug     Sept    Oct     Nov     Dec    x\"","lastModifiedDate":"2021-10-21"},{"lineNumber":310,"author":{"gitId":"KZQ1999"},"content":"                + \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"","lastModifiedDate":"2021-10-21"},{"lineNumber":311,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE;","lastModifiedDate":"2021-10-21"},{"lineNumber":312,"author":{"gitId":"KZQ1999"},"content":"        testUI.printGraph(stonksGraph);","lastModifiedDate":"2021-10-21"},{"lineNumber":313,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":314,"author":{"gitId":"KZQ1999"},"content":"        String fullOutput \u003d outputStreamCaptor.toString().trim();","lastModifiedDate":"2021-10-21"},{"lineNumber":315,"author":{"gitId":"KZQ1999"},"content":"        String fullOutputWithoutNewLine \u003d fullOutput.replace(System.lineSeparator(),\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":316,"author":{"gitId":"KZQ1999"},"content":"        String outputToBeTested \u003d fullOutputWithoutNewLine.replaceAll(\"h.*?t\",\"h t\");","lastModifiedDate":"2021-11-01"},{"lineNumber":317,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":318,"author":{"gitId":"KZQ1999"},"content":"        assertEquals(expectedOutput, outputToBeTested);","lastModifiedDate":"2021-10-21"},{"lineNumber":319,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":320,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":321,"author":{"gitId":"KZQ1999"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":322,"author":{"gitId":"KZQ1999"},"content":"    public void printBudget_givenBudget_printBudgetMsg() {","lastModifiedDate":"2021-10-21"},{"lineNumber":323,"author":{"gitId":"KZQ1999"},"content":"        String expectedOutput \u003d SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-21"},{"lineNumber":324,"author":{"gitId":"KZQ1999"},"content":"                + \"Current FOOD limit is $58.71\" + newLine","lastModifiedDate":"2021-10-21"},{"lineNumber":325,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE;","lastModifiedDate":"2021-10-21"},{"lineNumber":326,"author":{"gitId":"KZQ1999"},"content":"        testUI.printBudget(ExpenseCategory.FOOD, 58.71);","lastModifiedDate":"2021-10-21"},{"lineNumber":327,"author":{"gitId":"KZQ1999"},"content":"        assertEquals(expectedOutput, outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-10-21"},{"lineNumber":328,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":329,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":330,"author":{"gitId":"KZQ1999"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":331,"author":{"gitId":"KZQ1999"},"content":"    public void printThresholdConfirmation_validThreshold_printThresholdMsg() {","lastModifiedDate":"2021-10-21"},{"lineNumber":332,"author":{"gitId":"KZQ1999"},"content":"        String expectedOutput \u003d SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-21"},{"lineNumber":333,"author":{"gitId":"jonathanlkw"},"content":"                + \"Threshold for budget reminders set to 0.58\" + newLine","lastModifiedDate":"2021-11-04"},{"lineNumber":334,"author":{"gitId":"jonathanlkw"},"content":"                + \"We\u0027ll warn you when you spend 58.0% of your budget!\" + newLine","lastModifiedDate":"2021-11-04"},{"lineNumber":335,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE;","lastModifiedDate":"2021-10-21"},{"lineNumber":336,"author":{"gitId":"jonathanlkw"},"content":"        testUI.printThresholdConfirmation(0.58);","lastModifiedDate":"2021-11-04"},{"lineNumber":337,"author":{"gitId":"KZQ1999"},"content":"        assertEquals(expectedOutput, outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-10-21"},{"lineNumber":338,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":339,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":340,"author":{"gitId":"KZQ1999"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":341,"author":{"gitId":"kyun99"},"content":"    public void filterByKeyword_testFood_printOnlyFoodEntries() ","lastModifiedDate":"2021-11-01"},{"lineNumber":342,"author":{"gitId":"kyun99"},"content":"            throws ExpenseOverflowException, IncomeOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":343,"author":{"gitId":"KZQ1999"},"content":"        FindCommand testFindCommand \u003d new FindCommand(\"food\");","lastModifiedDate":"2021-10-25"},{"lineNumber":344,"author":{"gitId":"KZQ1999"},"content":"        initialiseFinancialTracker();","lastModifiedDate":"2021-10-25"},{"lineNumber":345,"author":{"gitId":"Nirmaleshwar"},"content":"        testFindCommand.execute(financialTracker, testUI, budgetManager, currencyManager);","lastModifiedDate":"2021-11-02"},{"lineNumber":346,"author":{"gitId":"KZQ1999"},"content":"        String expectedOutput \u003d SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-25"},{"lineNumber":347,"author":{"gitId":"KZQ1999"},"content":"                + \"Below is a list of all your findings!\" + newLine","lastModifiedDate":"2021-10-25"},{"lineNumber":348,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-25"},{"lineNumber":349,"author":{"gitId":"kyun99"},"content":"                + \"1: [E] Bought a game - $19.73 \" + currentDate + newLine","lastModifiedDate":"2021-10-26"},{"lineNumber":350,"author":{"gitId":"kyun99"},"content":"                + \"2: [E] Bought cookies - $5.00 \" + currentDate + newLine","lastModifiedDate":"2021-10-26"},{"lineNumber":351,"author":{"gitId":"kyun99"},"content":"                + \"3: [E] Bought cakes - $7.00 \" + currentDate + newLine","lastModifiedDate":"2021-10-26"},{"lineNumber":352,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE;","lastModifiedDate":"2021-10-25"},{"lineNumber":353,"author":{"gitId":"KZQ1999"},"content":"        assertEquals(expectedOutput, outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-10-25"},{"lineNumber":354,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":355,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":356,"author":{"gitId":"KZQ1999"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":357,"author":{"gitId":"kyun99"},"content":"    public void filterByKeyword_testWordCasing_printFoodEntries() ","lastModifiedDate":"2021-11-01"},{"lineNumber":358,"author":{"gitId":"kyun99"},"content":"            throws ExpenseOverflowException, IncomeOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":359,"author":{"gitId":"KZQ1999"},"content":"        FindCommand testFindCommand \u003d new FindCommand(\"FOod\");","lastModifiedDate":"2021-10-25"},{"lineNumber":360,"author":{"gitId":"KZQ1999"},"content":"        initialiseFinancialTracker();","lastModifiedDate":"2021-10-25"},{"lineNumber":361,"author":{"gitId":"Nirmaleshwar"},"content":"        testFindCommand.execute(financialTracker, testUI, budgetManager, currencyManager);","lastModifiedDate":"2021-11-02"},{"lineNumber":362,"author":{"gitId":"KZQ1999"},"content":"        String expectedOutput \u003d SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-25"},{"lineNumber":363,"author":{"gitId":"KZQ1999"},"content":"                + \"Below is a list of all your findings!\" + newLine","lastModifiedDate":"2021-10-25"},{"lineNumber":364,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-25"},{"lineNumber":365,"author":{"gitId":"kyun99"},"content":"                + \"1: [E] Bought a game - $19.73 \" + currentDate + newLine","lastModifiedDate":"2021-10-26"},{"lineNumber":366,"author":{"gitId":"kyun99"},"content":"                + \"2: [E] Bought cookies - $5.00 \" + currentDate + newLine","lastModifiedDate":"2021-10-26"},{"lineNumber":367,"author":{"gitId":"kyun99"},"content":"                + \"3: [E] Bought cakes - $7.00 \" + currentDate + newLine","lastModifiedDate":"2021-10-26"},{"lineNumber":368,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE;","lastModifiedDate":"2021-10-25"},{"lineNumber":369,"author":{"gitId":"KZQ1999"},"content":"        assertEquals(expectedOutput, outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-10-25"},{"lineNumber":370,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":371,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":372,"author":{"gitId":"KZQ1999"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":373,"author":{"gitId":"kyun99"},"content":"    public void filterByDate_dateGotMatch_printOnlyEntriesOfThatDate() ","lastModifiedDate":"2021-11-01"},{"lineNumber":374,"author":{"gitId":"kyun99"},"content":"            throws IncomeOverflowException, ExpenseOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":375,"author":{"gitId":"kyun99"},"content":"        String currDate \u003d LocalDate.now().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":376,"author":{"gitId":"kyun99"},"content":"        FindCommand testFindCommand \u003d new FindCommand(currDate);","lastModifiedDate":"2021-10-26"},{"lineNumber":377,"author":{"gitId":"KZQ1999"},"content":"        initialiseFinancialTracker();","lastModifiedDate":"2021-10-25"},{"lineNumber":378,"author":{"gitId":"KZQ1999"},"content":"        LocalDate date \u003d LocalDate.parse(\"11/11/2121\", DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-10-25"},{"lineNumber":379,"author":{"gitId":"KZQ1999"},"content":"        Income incomeWithDiffDate \u003d new Income(\"Paycheck August\", 25.0, IncomeCategory.SALARY, date);","lastModifiedDate":"2021-10-25"},{"lineNumber":380,"author":{"gitId":"KZQ1999"},"content":"        financialTracker.addIncome(incomeWithDiffDate);","lastModifiedDate":"2021-10-25"},{"lineNumber":381,"author":{"gitId":"Nirmaleshwar"},"content":"        testFindCommand.execute(financialTracker, testUI, budgetManager, currencyManager);","lastModifiedDate":"2021-11-02"},{"lineNumber":382,"author":{"gitId":"KZQ1999"},"content":"        String expectedOutput \u003d SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-25"},{"lineNumber":383,"author":{"gitId":"KZQ1999"},"content":"                + \"Below is a list of all your findings!\" + newLine","lastModifiedDate":"2021-10-25"},{"lineNumber":384,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-25"},{"lineNumber":385,"author":{"gitId":"kyun99"},"content":"                + \"1: [E] Bought a game - $19.73 \" + currentDate + newLine","lastModifiedDate":"2021-10-26"},{"lineNumber":386,"author":{"gitId":"kyun99"},"content":"                + \"2: [E] Bought cookies - $5.00 \" + currentDate + newLine","lastModifiedDate":"2021-10-26"},{"lineNumber":387,"author":{"gitId":"kyun99"},"content":"                + \"3: [E] Bought cakes - $7.00 \" + currentDate + newLine","lastModifiedDate":"2021-10-26"},{"lineNumber":388,"author":{"gitId":"kyun99"},"content":"                + \"4: [I] Paycheck August - $25.00 \" + currentDate + newLine","lastModifiedDate":"2021-10-26"},{"lineNumber":389,"author":{"gitId":"kyun99"},"content":"                + \"5: [I] Rob a bank - $2000.00 \" + currentDate + newLine","lastModifiedDate":"2021-10-26"},{"lineNumber":390,"author":{"gitId":"kyun99"},"content":"                + \"6: [I] Paycheck July - $25.00 \" + currentDate + newLine","lastModifiedDate":"2021-10-26"},{"lineNumber":391,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE;","lastModifiedDate":"2021-10-25"},{"lineNumber":392,"author":{"gitId":"KZQ1999"},"content":"        assertEquals(expectedOutput, outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-10-25"},{"lineNumber":393,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":394,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":395,"author":{"gitId":"KZQ1999"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":396,"author":{"gitId":"kyun99"},"content":"    public void filterByDate_dateNoMatch_printNoEntryFound() ","lastModifiedDate":"2021-11-01"},{"lineNumber":397,"author":{"gitId":"kyun99"},"content":"            throws ExpenseOverflowException, IncomeOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":398,"author":{"gitId":"KZQ1999"},"content":"        FindCommand testFindCommand \u003d new FindCommand(\"25/10/2099\");","lastModifiedDate":"2021-10-25"},{"lineNumber":399,"author":{"gitId":"KZQ1999"},"content":"        initialiseFinancialTracker();","lastModifiedDate":"2021-10-25"},{"lineNumber":400,"author":{"gitId":"Nirmaleshwar"},"content":"        testFindCommand.execute(financialTracker, testUI, budgetManager, currencyManager);","lastModifiedDate":"2021-11-02"},{"lineNumber":401,"author":{"gitId":"KZQ1999"},"content":"        String expectedOutput \u003d SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-25"},{"lineNumber":402,"author":{"gitId":"KZQ1999"},"content":"                + \"Your search did not match any of the entries!\" + newLine","lastModifiedDate":"2021-10-25"},{"lineNumber":403,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE;","lastModifiedDate":"2021-10-25"},{"lineNumber":404,"author":{"gitId":"KZQ1999"},"content":"        assertEquals(expectedOutput, outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-10-25"},{"lineNumber":405,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":406,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":407,"author":{"gitId":"KZQ1999"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":408,"author":{"gitId":"kyun99"},"content":"    public void filterByKeyword_matchInDescription_printEntriesFound() ","lastModifiedDate":"2021-11-01"},{"lineNumber":409,"author":{"gitId":"kyun99"},"content":"            throws ExpenseOverflowException, IncomeOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":410,"author":{"gitId":"KZQ1999"},"content":"        FindCommand testFindCommand \u003d new FindCommand(\"game\");","lastModifiedDate":"2021-10-25"},{"lineNumber":411,"author":{"gitId":"KZQ1999"},"content":"        initialiseFinancialTracker();","lastModifiedDate":"2021-10-25"},{"lineNumber":412,"author":{"gitId":"Nirmaleshwar"},"content":"        testFindCommand.execute(financialTracker, testUI, budgetManager, currencyManager);","lastModifiedDate":"2021-11-02"},{"lineNumber":413,"author":{"gitId":"KZQ1999"},"content":"        String expectedOutput \u003d SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-25"},{"lineNumber":414,"author":{"gitId":"KZQ1999"},"content":"                + \"Below is a list of all your findings!\" + newLine","lastModifiedDate":"2021-10-25"},{"lineNumber":415,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-25"},{"lineNumber":416,"author":{"gitId":"kyun99"},"content":"                + \"1: [E] Bought a game - $19.73 \" + currentDate + newLine","lastModifiedDate":"2021-10-26"},{"lineNumber":417,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE;","lastModifiedDate":"2021-10-25"},{"lineNumber":418,"author":{"gitId":"KZQ1999"},"content":"        assertEquals(expectedOutput, outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-10-25"},{"lineNumber":419,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":420,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":421,"author":{"gitId":"KZQ1999"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":422,"author":{"gitId":"kyun99"},"content":"    public void filterByKeyword_matchInAmount_printEntriesFound() ","lastModifiedDate":"2021-11-01"},{"lineNumber":423,"author":{"gitId":"kyun99"},"content":"            throws ExpenseOverflowException, IncomeOverflowException {","lastModifiedDate":"2021-11-01"},{"lineNumber":424,"author":{"gitId":"KZQ1999"},"content":"        FindCommand testFindCommand \u003d new FindCommand(\"19.73\");","lastModifiedDate":"2021-10-25"},{"lineNumber":425,"author":{"gitId":"KZQ1999"},"content":"        initialiseFinancialTracker();","lastModifiedDate":"2021-10-25"},{"lineNumber":426,"author":{"gitId":"Nirmaleshwar"},"content":"        testFindCommand.execute(financialTracker, testUI, budgetManager, currencyManager);","lastModifiedDate":"2021-11-02"},{"lineNumber":427,"author":{"gitId":"KZQ1999"},"content":"        String expectedOutput \u003d SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-25"},{"lineNumber":428,"author":{"gitId":"KZQ1999"},"content":"                + \"Below is a list of all your findings!\" + newLine","lastModifiedDate":"2021-10-25"},{"lineNumber":429,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE + newLine","lastModifiedDate":"2021-10-25"},{"lineNumber":430,"author":{"gitId":"kyun99"},"content":"                + \"1: [E] Bought a game - $19.73 \" + currentDate + newLine","lastModifiedDate":"2021-10-26"},{"lineNumber":431,"author":{"gitId":"KZQ1999"},"content":"                + SEPARATOR_LINE;","lastModifiedDate":"2021-10-25"},{"lineNumber":432,"author":{"gitId":"KZQ1999"},"content":"        assertEquals(expectedOutput, outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-10-25"},{"lineNumber":433,"author":{"gitId":"KZQ1999"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":434,"author":{"gitId":"KZQ1999"},"content":"}","lastModifiedDate":"2021-10-07"},{"lineNumber":435,"author":{"gitId":"KZQ1999"},"content":"","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"kyun99":53,"AnShengLee":6,"KZQ1999":365,"Nirmaleshwar":8,"jonathanlkw":3}},{"path":"text-ui-test/.gradle/buildOutputCleanup/cache.properties","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"kyun99"},"content":"#Mon Oct 04 19:05:10 SGT 2021","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"kyun99"},"content":"gradle.version\u003d6.8","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kyun99":2}},{"path":"text-ui-test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@echo off","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"setlocal enableextensions","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"pushd %~dp0","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"call gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"cd build\\libs","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"for /f \"tokens\u003d*\" %%a in (","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u0027dir /b *.jar\u0027","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":") do (","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    set jarloc\u003d%%a","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"cd ..\\..\\text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"kyun99"},"content":"FC EXPECTED.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"kyun99":1,"-":18}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"AnShengLee"},"content":"if [ -e \"./StonksXD_Entries.csv\" ]","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"AnShengLee"},"content":"then","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"AnShengLee"},"content":"    rm StonksXD_Entries.csv","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"AnShengLee"},"content":"fi","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"AnShengLee"},"content":"if [ -e \"./StonksXD_Settings.csv\" ]","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"AnShengLee"},"content":"then","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"AnShengLee"},"content":"    rm StonksXD_Budget.csv","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"AnShengLee"},"content":"fi","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"AnShengLee"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"diff EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"AnShengLee":10,"-":23}}]
