[{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Alvin Tan Guo Hao | [Github](https://github.com/alvintan01) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Aeron Teo | [Github](https://github.com/a-tph) | [Portfolio](docs/team/a-tph.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"RemusTeo"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Teo Chin Kai Remus | [Github](https://github.com/RemusTeo) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"deonchung"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Deon Chung Hui | [Github](https://github.com/deonchung) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"jiangweichen835"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jiang Weichen | [Github](https://github.com/jiangweichen835) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"alvintan01":1,"RemusTeo":1,"deonchung":1,"-":4,"a-tph":1,"jiangweichen835":2}},{"path":"src/main/java/MediVault.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"import errors.InvalidCommand;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import parser.DateParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import parser.Parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":" * Helps to start the application, and initialise all variables.","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":" * It will continuously prompt for input from the user until \"EXIT\" is received.","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"public class MediVault {","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    private ArrayList\u003cMedicine\u003e medicines;","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    public MediVault() {","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"        medicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"        generateData();","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"        new MediVault().run();","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"     * Prompts input from user and processes it indefinitely until \"EXIT\" is received.","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"    private void run() {","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"        String userInput \u003d \"\";","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"        // Loops till exit is received","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"        while (true) {","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"            System.out.print(\"\u003e \");","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"            // Reads user input","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"            try {","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"                if (Parser.processCommand(ui, userInput, medicines)) { // User entered exit","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"                    break;","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"                }","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"            } catch (InvalidCommand e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"                // Invalid Command","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"                ui.printInvalidCommandMessage();","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"     * Temporary function to generate data to test features like delete and update. To be removed once add function is","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"     * complete.","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"    public void generateData() {","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Stock(\"PANADOL\", 20, 20, DateParser.stringToDate(\"13-9-2021\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"                    \"BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS\", 1000));","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"a-tph"},"content":"            medicines.add(new Stock(\"PANADOL\", 20, 10, DateParser.stringToDate(\"14-9-2021\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"a-tph"},"content":"                    \"BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS\", 1000));","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Stock(\"VICODIN\", 10, 20, DateParser.stringToDate(\"30-9-2021\"),","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"                    \"POPULAR DRUG FOR TREATING ACUTE OR CHRONIC MODERATE TO MODERATELY SEVERE PAIN\",","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"                    500));","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Stock(\"SIMVASTATIN\", 20, 25, DateParser.stringToDate(\"10-10-2021\"),","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"                    \"TREATS HIGH CHOLESTEROL AND REDUCES THE RISK OF STROKE\", 800));","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Stock(\"LISINOPRIL\", 20, 25, DateParser.stringToDate(\"15-10-2021\"),","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"                    \"USED FOR TREATING HYPOTHYROIDISM\", 800));","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Stock(\"AZITHROMYCIN\", 20, 35, DateParser.stringToDate(\"15-10-2021\"),","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"                    \"USED FOR TREATING EAR, THROAT, AND SINUS INFECTIONS\", 100));","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Unable to parse date!\");","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":78,"a-tph":2}},{"path":"src/main/java/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":" * Represents the generic command. Helps to declare the abstract methods. It is inherited by all commands.","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    public abstract void execute(Ui ui, HashMap\u003cString, String\u003e parameters, ArrayList\u003cMedicine\u003e medicines);","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":15}},{"path":"src/main/java/command/CommandList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":" * Represents all the commands available in the application.","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"public class CommandList {","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"    public static final String ADD \u003d \"ADD\";","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"    public static final String ADD_ORDER \u003d \"ADDORDER\";","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"    public static final String ARCHIVE \u003d \"ARCHIVE\";","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"    public static final String DELETE \u003d \"DELETE\";","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    public static final String DELETE_ORDER \u003d \"DELETEORDER\";","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"    public static final String DISPENSE \u003d \"DISPENSE\";","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    public static final String EXIT \u003d \"EXIT\";","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    public static final String HELP \u003d \"HELP\";","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    public static final String LIST \u003d \"LIST\";","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    public static final String LIST_ORDERS \u003d \"LISTORDERS\";","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    public static final String PURGE \u003d \"PURGE\";","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    public static final String QUERY \u003d \"QUERY\";","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    public static final String RECEIVE_ORDER \u003d \"RECEIVEORDER\";","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    public static final String UNDO \u003d \"UNDO\";","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    public static final String UPDATE \u003d \"UPDATE\";","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"    public static final String UPDATE_ORDER \u003d \"UPDATEORDER\";","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":24}},{"path":"src/main/java/command/CommandParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":" * Represents all the commands parameters used in the application.","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"public class CommandParameters {","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"    public static final String CUSTOMER_NRIC \u003d \"C\";","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"    public static final String DATE \u003d \"D\";","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"    public static final String DESCRIPTION \u003d \"D\";","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"    public static final String EXPIRY_DATE \u003d \"E\";","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    public static final String MAX_QUANTITY \u003d \"M\";","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"    public static final String NAME \u003d \"N\";","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    public static final String PRICE \u003d \"P\";","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    public static final String QUANTITY \u003d \"Q\";","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    public static final String REVERSED_SORT \u003d \"RSORT\";","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    public static final String SORT \u003d \"SORT\";","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    public static final String STAFF \u003d \"S\";","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    public static final String STOCK_ID \u003d \"I\";","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    public static final String UPDATED_MEDICINE_NAME \u003d \"U\";","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":22}},{"path":"src/main/java/command/CommandSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import parser.StockValidator;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":" * Contains all the valid command syntax accepted by the application. Also contains methods to validate if the","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":" * parameter and its value is valid for a given command.","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"public class CommandSyntax {","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    private String commandName;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    private String commandSyntax;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    public static final String COMMAND \u003d \"COMMAND\";","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    public static final String COMMAND_SYNTAX \u003d \"COMMAND SYNTAX\";","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    public static final String[] COLUMNS \u003d {COMMAND, COMMAND_SYNTAX};","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    public static final int NO_OF_COLUMNS \u003d 2;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"    public static final String ADD_COMMAND \u003d \"ADD N/NAME P/PRICE Q/QUANTITY E/EXPIRY_DATE \"","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"            + \"D/DESCRIPTION M/MAX_QUANTITY\";","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    public static final String LIST_COMMAND \u003d \"LIST {I/STOCK_ID P/PRICE Q/QUANTITY E/EXPIRY_DATE \"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"            + \"D/DESCRIPTION M/MAX_QUANTITY SORT/COLUMN_NAME RSORT/COLUMN NAME}\";","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"RemusTeo"},"content":"    public static final String UPDATE_COMMAND \u003d \"UPDATE I/STOCK_ID [U/UPDATED_NAME P/PRICE Q/QUANTITY E/EXPIRY_DATE \"","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"RemusTeo"},"content":"            + \"D/DESCRIPTION M/MAX_QUANTITY]\";","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"RemusTeo"},"content":"    public static final String DELETE_COMMAND \u003d \"DELETE I/STOCK_ID\";","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"RemusTeo"},"content":"    public static final String HELP_COMMAND \u003d \"HELP\";","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"RemusTeo"},"content":"    public static final String PURGE_COMMAND \u003d \"PURGE\";","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"RemusTeo"},"content":"    public static final String EXIT_COMMAND \u003d \"EXIT\";","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"    public CommandSyntax(String commandName, String commandSyntax) {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"        this.commandName \u003d commandName;","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"        this.commandSyntax \u003d commandSyntax;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"    public String getCommandName() {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"        return commandName;","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"    public void setCommandName(String commandName) {","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"        this.commandName \u003d commandName;","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"    public String getCommandSyntax() {","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"        return commandSyntax;","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"    public void setCommandSyntax(String commandSyntax) {","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"        this.commandSyntax \u003d commandSyntax;","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"RemusTeo"},"content":"     * Helps to check if the parameters required are provided by the user.","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"a-tph"},"content":"     * @param ui                 Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"     * @param parameters         Parameters entered in by the user.","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"a-tph"},"content":"     * @param requiredParameters Parameters required by the command.","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"a-tph"},"content":"     * @param optionalParameters Parameters that are optional.","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"     * @param commandSyntax      The command\u0027s valid syntax.","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"a-tph"},"content":"     * @return A boolean value indicating if the parameters required are entered by the user.","lastModifiedDate":"2021-10-03"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"    public static boolean containsInvalidParameters(Ui ui, HashMap\u003cString, String\u003e parameters,","lastModifiedDate":"2021-10-03"},{"lineNumber":67,"author":{"gitId":"a-tph"},"content":"                                                    String[] requiredParameters, String[] optionalParameters,","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"a-tph"},"content":"                                                    String commandSyntax) {","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"a-tph"},"content":"        int requiredParametersLength \u003d requiredParameters.length;","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"a-tph"},"content":"        int optionalParametersLength \u003d optionalParameters.length;","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"        // User did not provide parameters all the parameters","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"a-tph"},"content":"        if (parameters.keySet().size() \u003c requiredParametersLength) {","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"            ui.printInvalidParameter(\"\", commandSyntax);","lastModifiedDate":"2021-10-03"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"            return true;","lastModifiedDate":"2021-10-03"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"a-tph"},"content":"        for (String requiredParameter : requiredParameters) {","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"            if (!parameters.containsKey(requiredParameter)) { // Checks if required parameters are found","lastModifiedDate":"2021-10-03"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"                ui.printRequiredParameter(requiredParameter, commandSyntax);","lastModifiedDate":"2021-10-03"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"                return true;","lastModifiedDate":"2021-10-03"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":84,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"a-tph"},"content":"        // Optional parameters not provided considered valid","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"a-tph"},"content":"        if (optionalParameters \u003d\u003d null || optionalParametersLength \u003d\u003d 0) {","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"a-tph"},"content":"            return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"a-tph"},"content":"        int emptyOptionalFieldCount \u003d parameters.size() - requiredParametersLength;","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"a-tph"},"content":"        if (emptyOptionalFieldCount \u003c\u003d 0) {","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"a-tph"},"content":"            ui.print(\"Please provide at least one optional field!\");","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"a-tph"},"content":"            return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"a-tph"},"content":"        // Combine both parameter array to check if optional parameter is valid","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"a-tph"},"content":"        String[] mergedParameters \u003d new String[requiredParametersLength + optionalParametersLength];","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"a-tph"},"content":"        System.arraycopy(requiredParameters, 0, mergedParameters, 0, requiredParametersLength);","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"a-tph"},"content":"        System.arraycopy(optionalParameters, 0, mergedParameters, requiredParametersLength, optionalParametersLength);","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"a-tph"},"content":"        for (String parameter : parameters.keySet()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"a-tph"},"content":"            boolean isValid \u003d false;","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"a-tph"},"content":"            for (String mergedParameter : mergedParameters) {","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"a-tph"},"content":"                if (mergedParameter.equalsIgnoreCase(parameter)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"a-tph"},"content":"                    isValid \u003d true;","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"a-tph"},"content":"                    break;","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"a-tph"},"content":"                }","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"a-tph"},"content":"            if (!isValid) {","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"a-tph"},"content":"                ui.print(\"Please enter a valid optional parameter!\");","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"a-tph"},"content":"                return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"alvintan01"},"content":"        return false;","lastModifiedDate":"2021-10-03"},{"lineNumber":116,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":117,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":118,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":119,"author":{"gitId":"a-tph"},"content":"     * Checks if parameter values are valid.","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":121,"author":{"gitId":"a-tph"},"content":"     * @param ui         Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-03"},{"lineNumber":122,"author":{"gitId":"a-tph"},"content":"     * @param parameters HashMap Key-Value set for parameter and user specified parameter value.","lastModifiedDate":"2021-10-03"},{"lineNumber":123,"author":{"gitId":"a-tph"},"content":"     * @param medicines  Arraylist of all medicines.","lastModifiedDate":"2021-10-04"},{"lineNumber":124,"author":{"gitId":"a-tph"},"content":"     * @return A boolean value indicating whether parameter values are valid.","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":126,"author":{"gitId":"a-tph"},"content":"    public static boolean containsInvalidParameterValues(Ui ui, HashMap\u003cString, String\u003e parameters,","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"a-tph"},"content":"                                                         ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"a-tph"},"content":"        for (String parameter : parameters.keySet()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":129,"author":{"gitId":"a-tph"},"content":"            boolean isValid \u003d false;","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"a-tph"},"content":"            String parameterValue \u003d parameters.get(parameter);","lastModifiedDate":"2021-10-03"},{"lineNumber":131,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":132,"author":{"gitId":"a-tph"},"content":"            switch (parameter) {","lastModifiedDate":"2021-10-03"},{"lineNumber":133,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.PRICE:","lastModifiedDate":"2021-10-03"},{"lineNumber":134,"author":{"gitId":"alvintan01"},"content":"                isValid \u003d StockValidator.isValidPrice(ui, parameterValue);","lastModifiedDate":"2021-10-04"},{"lineNumber":135,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":136,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.QUANTITY:","lastModifiedDate":"2021-10-03"},{"lineNumber":137,"author":{"gitId":"alvintan01"},"content":"                isValid \u003d StockValidator.isValidQuantity(ui, parameterValue);","lastModifiedDate":"2021-10-04"},{"lineNumber":138,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":139,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.EXPIRY_DATE:","lastModifiedDate":"2021-10-03"},{"lineNumber":140,"author":{"gitId":"alvintan01"},"content":"                isValid \u003d StockValidator.isValidExpiry(ui, parameterValue);","lastModifiedDate":"2021-10-04"},{"lineNumber":141,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":142,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.DESCRIPTION:","lastModifiedDate":"2021-10-03"},{"lineNumber":143,"author":{"gitId":"alvintan01"},"content":"                isValid \u003d StockValidator.isValidDescription(ui, parameterValue);","lastModifiedDate":"2021-10-04"},{"lineNumber":144,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":145,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.UPDATED_MEDICINE_NAME:","lastModifiedDate":"2021-10-03"},{"lineNumber":146,"author":{"gitId":"deonchung"},"content":"            case CommandParameters.NAME:","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"alvintan01"},"content":"                isValid \u003d StockValidator.isValidName(ui, parameterValue);","lastModifiedDate":"2021-10-04"},{"lineNumber":148,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":149,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.MAX_QUANTITY:","lastModifiedDate":"2021-10-03"},{"lineNumber":150,"author":{"gitId":"alvintan01"},"content":"                isValid \u003d StockValidator.isValidMaxQuantity(ui, parameterValue);","lastModifiedDate":"2021-10-04"},{"lineNumber":151,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":152,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.STOCK_ID:","lastModifiedDate":"2021-10-03"},{"lineNumber":153,"author":{"gitId":"alvintan01"},"content":"                isValid \u003d StockValidator.isValidStockId(ui, parameterValue, medicines);","lastModifiedDate":"2021-10-04"},{"lineNumber":154,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":155,"author":{"gitId":"alvintan01"},"content":"            case CommandParameters.SORT:","lastModifiedDate":"2021-10-07"},{"lineNumber":156,"author":{"gitId":"alvintan01"},"content":"            case CommandParameters.REVERSED_SORT:","lastModifiedDate":"2021-10-07"},{"lineNumber":157,"author":{"gitId":"alvintan01"},"content":"                isValid \u003d StockValidator.isValidColumn(ui, parameterValue);","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"alvintan01"},"content":"                break;","lastModifiedDate":"2021-10-07"},{"lineNumber":159,"author":{"gitId":"a-tph"},"content":"            default:","lastModifiedDate":"2021-10-03"},{"lineNumber":160,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":162,"author":{"gitId":"a-tph"},"content":"            if (!isValid) {","lastModifiedDate":"2021-10-03"},{"lineNumber":163,"author":{"gitId":"a-tph"},"content":"                return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":164,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":165,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":166,"author":{"gitId":"a-tph"},"content":"        return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":167,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":168,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":76,"RemusTeo":7,"deonchung":1,"a-tph":84}},{"path":"src/main/java/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RemusTeo"},"content":"package command;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"RemusTeo"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"RemusTeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"RemusTeo"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"RemusTeo"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"RemusTeo"},"content":" * Display help message containing command usage information.","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"RemusTeo"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"RemusTeo"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"RemusTeo"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    public void execute(Ui ui, HashMap\u003cString, String\u003e parameters, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"        ArrayList\u003cCommandSyntax\u003e commandSyntaxes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.ADD, CommandSyntax.ADD_COMMAND));","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.LIST, CommandSyntax.LIST_COMMAND));","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.UPDATE, CommandSyntax.UPDATE_COMMAND));","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.DELETE, CommandSyntax.DELETE_COMMAND));","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.EXIT, CommandSyntax.EXIT_COMMAND));","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.HELP, CommandSyntax.HELP_COMMAND));","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.PURGE, CommandSyntax.PURGE_COMMAND));","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"        ui.printHelpMessage(commandSyntaxes);","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"RemusTeo"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"alvintan01":12,"RemusTeo":16}},{"path":"src/main/java/command/PurgeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":" * Helps to process the purge command and prompts the user for confirmation.","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"public class PurgeCommand extends Command {","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    public void execute(Ui ui, HashMap\u003cString, String\u003e parameters, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"        ui.print(\"Are you sure you want to delete all data? (Y/N)\");","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"        if (\"Y\".equals(in.nextLine())) {","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"            medicines.clear();","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"All data has been cleared!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"        } else {","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Purge aborted!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":26}},{"path":"src/main/java/command/medicine/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"deonchung"},"content":"package command.medicine;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"deonchung"},"content":"import command.Command;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"deonchung"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"deonchung"},"content":"import command.CommandSyntax;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"deonchung"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"deonchung"},"content":"import parser.DateParser;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"deonchung"},"content":"import parser.MedicineManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"import parser.StockValidator;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"deonchung"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"deonchung"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"deonchung"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"deonchung"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"deonchung"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"deonchung"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"deonchung"},"content":" * Add medication based on user input.","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"deonchung"},"content":" * User input include name, price, quantity, expiry date, description and maximum quantity of medication.","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"deonchung"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"deonchung"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"deonchung"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    public void execute(Ui ui, HashMap\u003cString, String\u003e parameters, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"deonchung"},"content":"        String[] requiredParameters \u003d {CommandParameters.NAME, CommandParameters.PRICE, CommandParameters.QUANTITY,","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"deonchung"},"content":"            CommandParameters.EXPIRY_DATE, CommandParameters.DESCRIPTION, CommandParameters.MAX_QUANTITY};","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"        String[] optionalParameters \u003d {};","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"        if (CommandSyntax.containsInvalidParameters(ui, parameters, requiredParameters, optionalParameters,","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"            CommandSyntax.ADD_COMMAND)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"deonchung"},"content":"            return;","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"deonchung"},"content":"        if (CommandSyntax.containsInvalidParameterValues(ui, parameters, medicines)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"deonchung"},"content":"            return;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"deonchung"},"content":"        String nameToAdd \u003d parameters.get(CommandParameters.NAME);","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"deonchung"},"content":"        String priceToAdd \u003d parameters.get(CommandParameters.PRICE);","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"deonchung"},"content":"        String quantityToAdd \u003d parameters.get(CommandParameters.QUANTITY);","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"deonchung"},"content":"        String expiryToAdd \u003d parameters.get(CommandParameters.EXPIRY_DATE);","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"deonchung"},"content":"        String descriptionToAdd \u003d parameters.get(CommandParameters.DESCRIPTION);","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"deonchung"},"content":"        String maxQuantityToAdd \u003d parameters.get(CommandParameters.MAX_QUANTITY);","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"deonchung"},"content":"        try {","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"deonchung"},"content":"            double price \u003d Double.parseDouble(priceToAdd);","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"deonchung"},"content":"            int quantity \u003d Integer.parseInt(quantityToAdd);","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"deonchung"},"content":"            int maxQuantity \u003d Integer.parseInt(maxQuantityToAdd);","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"deonchung"},"content":"            Date formatExpiry \u003d DateParser.stringToDate(expiryToAdd);","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"deonchung"},"content":"            int totalStock \u003d MedicineManager.getTotalStockQuantity(medicines, nameToAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"deonchung"},"content":"            for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"deonchung"},"content":"                Stock existingStock \u003d (Stock) medicine;","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"deonchung"},"content":"                String existingName \u003d existingStock.getMedicineName().toUpperCase();","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"deonchung"},"content":"                Date existingExpiry \u003d existingStock.getExpiry();","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"deonchung"},"content":"                String existingDescription \u003d existingStock.getDescription();","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"deonchung"},"content":"                int existingMaxQuantity \u003d existingStock.getMaxQuantity();","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"deonchung"},"content":"                boolean isValidQuantity \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"deonchung"},"content":"                        StockValidator.quantityValidityChecker(ui,(totalStock + quantity),existingMaxQuantity);","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"deonchung"},"content":"                boolean nameExist \u003d existingName.equals(nameToAdd.toUpperCase());","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"deonchung"},"content":"                boolean expiryExist \u003d existingExpiry.equals(formatExpiry);","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"deonchung"},"content":"                if (nameExist \u0026 expiryExist) {","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"deonchung"},"content":"                    ui.print(\"You already have existing stocks! Use update instead.\");","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"deonchung"},"content":"                    return;","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"deonchung"},"content":"                }","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"deonchung"},"content":"                if (nameExist \u0026 isValidQuantity) {","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"deonchung"},"content":"                    Stock stockToAdd \u003d new Stock(nameToAdd, price, quantity, formatExpiry, existingDescription,","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"deonchung"},"content":"                            existingMaxQuantity);","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"deonchung"},"content":"                    medicines.add(stockToAdd);","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"deonchung"},"content":"                    ui.print(\"Medication added: \" + nameToAdd);","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"                    ui.printStock(stockToAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"deonchung"},"content":"                    return;","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"deonchung"},"content":"                }","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"deonchung"},"content":"                if (isValidQuantity) {","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"deonchung"},"content":"                    ui.print(\"Stock added will exceed max quantity! Please try again with different quantity.\");","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"deonchung"},"content":"                    return;","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"deonchung"},"content":"                }","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"deonchung"},"content":"            Stock stock \u003d new Stock(nameToAdd, price, quantity, formatExpiry, descriptionToAdd, maxQuantity);","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"            medicines.add(stock);","lastModifiedDate":"2021-10-04"},{"lineNumber":84,"author":{"gitId":"deonchung"},"content":"            ui.print(\"Medication added: \" + nameToAdd);","lastModifiedDate":"2021-10-03"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"            ui.printStock(stock);","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"deonchung"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-03"},{"lineNumber":87,"author":{"gitId":"deonchung"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-03"},{"lineNumber":88,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":89,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":90,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":91,"author":{"gitId":"deonchung"},"content":"}","lastModifiedDate":"2021-10-03"},{"lineNumber":92,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"alvintan01":7,"deonchung":83,"a-tph":3}},{"path":"src/main/java/command/medicine/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RemusTeo"},"content":"package command.medicine;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"RemusTeo"},"content":"import command.Command;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"RemusTeo"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"RemusTeo"},"content":"import command.CommandSyntax;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"RemusTeo"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import parser.StockValidator;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"RemusTeo"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"RemusTeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"RemusTeo"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"RemusTeo"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"RemusTeo"},"content":" * Delete medication based on user input given stock id.","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"RemusTeo"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"RemusTeo"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"RemusTeo"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    public void execute(Ui ui, HashMap\u003cString, String\u003e parameters, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"RemusTeo"},"content":"        String[] requiredParameters \u003d {CommandParameters.STOCK_ID};","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"        String[] optionalParameters \u003d {};","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"        if (CommandSyntax.containsInvalidParameters(ui, parameters, requiredParameters, optionalParameters,","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"            CommandSyntax.DELETE_COMMAND)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"RemusTeo"},"content":"            return;","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"RemusTeo"},"content":"        String stockIdToDelete \u003d parameters.get(CommandParameters.STOCK_ID);","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"        if (!StockValidator.isValidStockId(ui, stockIdToDelete, medicines)) {","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"RemusTeo"},"content":"            return;","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"RemusTeo"},"content":"        int stockId \u003d Integer.parseInt(stockIdToDelete);","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"            Stock stock \u003d (Stock) medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"            if (stock.getStockID() \u003d\u003d stockId) {","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"                medicines.remove(medicine);","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"RemusTeo"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"RemusTeo"},"content":"        ui.print(\"Medication deleted: Stock_Id\u003d\" + stockId);","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"RemusTeo"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"alvintan01":9,"RemusTeo":33,"a-tph":3}},{"path":"src/main/java/command/medicine/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package command.medicine;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import command.Command;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import command.CommandSyntax;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import comparators.StockComparator;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"import parser.DateParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":" * Helps to process the list command together with filters and sort.","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    public void execute(Ui ui, HashMap\u003cString, String\u003e parameters, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"        String[] requiredParameter \u003d {};","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"        String[] optionalParameters \u003d {CommandParameters.STOCK_ID, CommandParameters.NAME, CommandParameters.PRICE,","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"            CommandParameters.QUANTITY, CommandParameters.EXPIRY_DATE, CommandParameters.DESCRIPTION,","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"            CommandParameters.MAX_QUANTITY, CommandParameters.SORT, CommandParameters.REVERSED_SORT};","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"        if (parameters.size() !\u003d 0) { // Check for valid parameters only when they are provided","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"            boolean isInvalidParameter \u003d CommandSyntax.containsInvalidParameters(ui, parameters, requiredParameter,","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"                    optionalParameters, CommandSyntax.LIST_COMMAND);","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"            if (isInvalidParameter) {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"                return;","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"            boolean isInvalidParameterValues \u003d CommandSyntax.containsInvalidParameterValues(ui, parameters, medicines);","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"            if (isInvalidParameterValues) {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"                return;","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"        ArrayList\u003cMedicine\u003e filteredMedicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"            if (medicine instanceof Stock) { // Ensure that it is a medicine object","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"                filteredMedicines.add(medicine);","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"        for (String parameter : parameters.keySet()) {","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"            String parameterValue \u003d parameters.get(parameter);","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"            switch (parameter) {","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"            case CommandParameters.STOCK_ID:","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"                filteredMedicines \u003d (ArrayList\u003cMedicine\u003e) filteredMedicines.stream()","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"                        .filter((m) -\u003e ((Stock) m).getStockID() \u003d\u003d Integer.parseInt(parameterValue))","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"                break;","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"            case CommandParameters.NAME:","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"                filteredMedicines \u003d (ArrayList\u003cMedicine\u003e) filteredMedicines.stream()","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"jiangweichen835"},"content":"                        .filter((m) -\u003e m.getMedicineName().equals(parameterValue))","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"jiangweichen835"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"                break;","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"            case CommandParameters.PRICE:","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"                filteredMedicines \u003d (ArrayList\u003cMedicine\u003e) filteredMedicines.stream()","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"                        .filter((m) -\u003e ((Stock) m).getPrice() \u003d\u003d Double.parseDouble(parameterValue))","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"                break;","lastModifiedDate":"2021-10-02"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"            case CommandParameters.QUANTITY:","lastModifiedDate":"2021-10-02"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"                filteredMedicines \u003d (ArrayList\u003cMedicine\u003e) filteredMedicines.stream()","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"                        .filter((m) -\u003e m.getQuantity() \u003d\u003d Integer.parseInt(parameterValue))","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"                break;","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"            case CommandParameters.EXPIRY_DATE:","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"                try {","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"                    Date expiryDate \u003d DateParser.stringToDate(parameterValue);","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"                    filteredMedicines \u003d (ArrayList\u003cMedicine\u003e) filteredMedicines.stream()","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"                            .filter((m) -\u003e ((Stock) m).getExpiry().equals(expiryDate))","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"                            .collect(Collectors.toList());","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"                } catch (ParseException e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"                    e.printStackTrace();","lastModifiedDate":"2021-10-02"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"                }","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"                break;","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"            case CommandParameters.DESCRIPTION:","lastModifiedDate":"2021-10-02"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"                filteredMedicines \u003d (ArrayList\u003cMedicine\u003e) filteredMedicines.stream()","lastModifiedDate":"2021-10-04"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"                        .filter((m) -\u003e ((Stock) m).getDescription().equals(parameterValue))","lastModifiedDate":"2021-10-04"},{"lineNumber":86,"author":{"gitId":"jiangweichen835"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2021-10-03"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"                break;","lastModifiedDate":"2021-10-02"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"            case CommandParameters.MAX_QUANTITY:","lastModifiedDate":"2021-10-02"},{"lineNumber":89,"author":{"gitId":"alvintan01"},"content":"                filteredMedicines \u003d (ArrayList\u003cMedicine\u003e) filteredMedicines.stream()","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"                        .filter((m) -\u003e ((Stock) m).getMaxQuantity() \u003d\u003d Integer.parseInt(parameterValue))","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"alvintan01"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"alvintan01"},"content":"                break;","lastModifiedDate":"2021-10-02"},{"lineNumber":93,"author":{"gitId":"alvintan01"},"content":"            case CommandParameters.SORT:","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"alvintan01"},"content":"                filteredMedicines.sort(new StockComparator(parameterValue.toUpperCase(), false));","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"alvintan01"},"content":"                break;","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"alvintan01"},"content":"            case CommandParameters.REVERSED_SORT:","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"alvintan01"},"content":"                filteredMedicines.sort(new StockComparator(parameterValue.toUpperCase(), true));","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"alvintan01"},"content":"                break;","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"alvintan01"},"content":"            default:","lastModifiedDate":"2021-10-02"},{"lineNumber":100,"author":{"gitId":"alvintan01"},"content":"                ui.printInvalidParameter(parameter, CommandSyntax.LIST_COMMAND);","lastModifiedDate":"2021-10-03"},{"lineNumber":101,"author":{"gitId":"alvintan01"},"content":"                return;","lastModifiedDate":"2021-10-02"},{"lineNumber":102,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":103,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":104,"author":{"gitId":"alvintan01"},"content":"        ui.printStocks(filteredMedicines);","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":106,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":103,"jiangweichen835":3}},{"path":"src/main/java/command/medicine/UpdateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package command.medicine;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import command.Command;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import command.CommandSyntax;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"import parser.DateParser;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import parser.MedicineManager;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"import parser.StockValidator;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":" * Update medication information based on user input given stock id.","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    public void execute(Ui ui, HashMap\u003cString, String\u003e parameters, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"        String[] requiredParameter \u003d {CommandParameters.STOCK_ID};","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"        String[] optionalParameters \u003d {CommandParameters.PRICE, CommandParameters.QUANTITY,","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"            CommandParameters.EXPIRY_DATE, CommandParameters.DESCRIPTION, CommandParameters.UPDATED_MEDICINE_NAME,","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"            CommandParameters.MAX_QUANTITY};","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"        boolean isInvalidParameter \u003d CommandSyntax.containsInvalidParameters(ui, parameters, requiredParameter,","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"                optionalParameters, CommandSyntax.UPDATE_COMMAND);","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"        if (isInvalidParameter) {","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"            return;","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"        boolean isInvalidParameterValues \u003d CommandSyntax.containsInvalidParameterValues(ui, parameters, medicines);","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"        if (isInvalidParameterValues) {","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"            return;","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"        Stock stock \u003d MedicineManager.extractStockObject(parameters, medicines);","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"        boolean isValidQuantityValues \u003d processQuantityValues(ui, parameters, medicines, stock);","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"        if (!isValidQuantityValues) {","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"a-tph"},"content":"            return;","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"        boolean isValidExpDate \u003d processDateInput(ui, parameters, medicines, stock);","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"a-tph"},"content":"        if (!isValidExpDate) {","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"a-tph"},"content":"            return;","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"a-tph"},"content":"        setUpdatesByStockID(parameters, medicines, stock);","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"a-tph"},"content":"        ui.print(\"Updated\");","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"        ui.printStock(stock);","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"a-tph"},"content":"    private boolean processDateInput(Ui ui, HashMap\u003cString, String\u003e parameters, ArrayList\u003cMedicine\u003e medicines,","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"a-tph"},"content":"                                     Stock stock) {","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"a-tph"},"content":"        String name \u003d stock.getMedicineName();","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"a-tph"},"content":"        boolean hasExpiryDate \u003d parameters.containsKey(CommandParameters.EXPIRY_DATE);","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"a-tph"},"content":"        if (!hasExpiryDate) {","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"a-tph"},"content":"            return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"a-tph"},"content":"        Date expiryDate \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"a-tph"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"a-tph"},"content":"            expiryDate \u003d DateParser.stringToDate(parameters.get(CommandParameters.EXPIRY_DATE));","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"a-tph"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"a-tph"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"a-tph"},"content":"        return StockValidator.dateValidityChecker(ui, medicines, expiryDate, name);","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":76,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":77,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"a-tph"},"content":"     * Process quantity values to be updated given a stock id.","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":80,"author":{"gitId":"a-tph"},"content":"     * @param ui         Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-03"},{"lineNumber":81,"author":{"gitId":"a-tph"},"content":"     * @param parameters HashMap Key-Value set for parameter and user specified parameter value.","lastModifiedDate":"2021-10-03"},{"lineNumber":82,"author":{"gitId":"a-tph"},"content":"     * @param medicines  Arraylist of all medicines.","lastModifiedDate":"2021-10-04"},{"lineNumber":83,"author":{"gitId":"a-tph"},"content":"     * @return Boolean value indicating if quantity values are valid.","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":85,"author":{"gitId":"a-tph"},"content":"    private boolean processQuantityValues(Ui ui, HashMap\u003cString, String\u003e parameters, ArrayList\u003cMedicine\u003e medicines,","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"a-tph"},"content":"                                          Stock stock) {","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":88,"author":{"gitId":"a-tph"},"content":"        String name \u003d stock.getMedicineName();","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"a-tph"},"content":"        int quantity \u003d 0;","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"a-tph"},"content":"        int maxQuantity \u003d 0;","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"a-tph"},"content":"        int totalStockQuantity \u003d 0;","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"a-tph"},"content":"        int initialQuantity \u003d 0;","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"a-tph"},"content":"        int updatedQuantity \u003d 0;","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":96,"author":{"gitId":"a-tph"},"content":"        boolean hasQuantity \u003d parameters.containsKey(CommandParameters.QUANTITY);","lastModifiedDate":"2021-10-03"},{"lineNumber":97,"author":{"gitId":"a-tph"},"content":"        boolean hasMaxQuantity \u003d parameters.containsKey(CommandParameters.MAX_QUANTITY);","lastModifiedDate":"2021-10-03"},{"lineNumber":98,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":99,"author":{"gitId":"a-tph"},"content":"        // initialise quantity and max quantity based on the different combinations of user inputs","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"a-tph"},"content":"        if (hasQuantity \u0026\u0026 hasMaxQuantity) {","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"a-tph"},"content":"            totalStockQuantity \u003d MedicineManager.getTotalStockQuantity(medicines, name);","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"a-tph"},"content":"            initialQuantity \u003d stock.getQuantity();","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"a-tph"},"content":"            updatedQuantity \u003d Integer.parseInt(parameters.get(CommandParameters.QUANTITY));","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"a-tph"},"content":"            quantity \u003d totalStockQuantity - initialQuantity + updatedQuantity;","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"a-tph"},"content":"            maxQuantity \u003d Integer.parseInt(parameters.get(CommandParameters.MAX_QUANTITY));","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":107,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":108,"author":{"gitId":"a-tph"},"content":"        if (hasQuantity \u0026\u0026 !hasMaxQuantity) {","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"a-tph"},"content":"            totalStockQuantity \u003d MedicineManager.getTotalStockQuantity(medicines, name);","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"a-tph"},"content":"            initialQuantity \u003d stock.getQuantity();","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"a-tph"},"content":"            updatedQuantity \u003d Integer.parseInt(parameters.get(CommandParameters.QUANTITY));","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"a-tph"},"content":"            quantity \u003d totalStockQuantity - initialQuantity + updatedQuantity;","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"a-tph"},"content":"            maxQuantity \u003d MedicineManager.getMaxStockQuantity(medicines, name);","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":115,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":116,"author":{"gitId":"a-tph"},"content":"        if (!hasQuantity \u0026\u0026 hasMaxQuantity) {","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"a-tph"},"content":"            quantity \u003d MedicineManager.getTotalStockQuantity(medicines, name);","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"a-tph"},"content":"            maxQuantity \u003d Integer.parseInt(parameters.get(CommandParameters.MAX_QUANTITY));","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":120,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":121,"author":{"gitId":"a-tph"},"content":"        return StockValidator.quantityValidityChecker(ui, quantity, maxQuantity);","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":123,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":124,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":125,"author":{"gitId":"a-tph"},"content":"     * Update values provided by user for a given stock id.","lastModifiedDate":"2021-10-03"},{"lineNumber":126,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":127,"author":{"gitId":"a-tph"},"content":"     * @param parameters HashMap Key-Value set for parameter and user specified parameter value.","lastModifiedDate":"2021-10-03"},{"lineNumber":128,"author":{"gitId":"a-tph"},"content":"     * @param medicines  Arraylist of all medicines.","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"a-tph"},"content":"     * @param stock      Stock object of the given stock id.","lastModifiedDate":"2021-10-04"},{"lineNumber":130,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":131,"author":{"gitId":"a-tph"},"content":"    private void setUpdatesByStockID(HashMap\u003cString, String\u003e parameters, ArrayList\u003cMedicine\u003e medicines, Stock stock) {","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cStock\u003e filteredMedicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"a-tph"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"a-tph"},"content":"            if (medicine instanceof Stock \u0026\u0026 medicine.getMedicineName().equalsIgnoreCase(stock.getMedicineName())) {","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"a-tph"},"content":"                filteredMedicines.add((Stock) medicine);","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":137,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"a-tph"},"content":"        for (String parameter : parameters.keySet()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":139,"author":{"gitId":"a-tph"},"content":"            String parameterValue \u003d parameters.get(parameter);","lastModifiedDate":"2021-10-03"},{"lineNumber":140,"author":{"gitId":"a-tph"},"content":"            switch (parameter) {","lastModifiedDate":"2021-10-03"},{"lineNumber":141,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.UPDATED_MEDICINE_NAME:","lastModifiedDate":"2021-10-03"},{"lineNumber":142,"author":{"gitId":"a-tph"},"content":"                for (Stock targetStock : filteredMedicines) {","lastModifiedDate":"2021-10-06"},{"lineNumber":143,"author":{"gitId":"a-tph"},"content":"                    targetStock.setMedicineName(parameterValue);","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"a-tph"},"content":"                }","lastModifiedDate":"2021-10-06"},{"lineNumber":145,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":146,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.PRICE:","lastModifiedDate":"2021-10-03"},{"lineNumber":147,"author":{"gitId":"alvintan01"},"content":"                stock.setPrice(Double.parseDouble(parameterValue));","lastModifiedDate":"2021-10-04"},{"lineNumber":148,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":149,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.QUANTITY:","lastModifiedDate":"2021-10-03"},{"lineNumber":150,"author":{"gitId":"alvintan01"},"content":"                stock.setQuantity(Integer.parseInt(parameterValue));","lastModifiedDate":"2021-10-04"},{"lineNumber":151,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":152,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.EXPIRY_DATE:","lastModifiedDate":"2021-10-03"},{"lineNumber":153,"author":{"gitId":"a-tph"},"content":"                try {","lastModifiedDate":"2021-10-03"},{"lineNumber":154,"author":{"gitId":"alvintan01"},"content":"                    stock.setExpiry(DateParser.stringToDate(parameterValue));","lastModifiedDate":"2021-10-04"},{"lineNumber":155,"author":{"gitId":"a-tph"},"content":"                } catch (ParseException e) {","lastModifiedDate":"2021-10-03"},{"lineNumber":156,"author":{"gitId":"a-tph"},"content":"                    e.printStackTrace();","lastModifiedDate":"2021-10-03"},{"lineNumber":157,"author":{"gitId":"a-tph"},"content":"                }","lastModifiedDate":"2021-10-03"},{"lineNumber":158,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":159,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.DESCRIPTION:","lastModifiedDate":"2021-10-03"},{"lineNumber":160,"author":{"gitId":"a-tph"},"content":"                for (Stock targetStock : filteredMedicines) {","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"a-tph"},"content":"                    targetStock.setDescription(parameterValue);","lastModifiedDate":"2021-10-06"},{"lineNumber":162,"author":{"gitId":"a-tph"},"content":"                }","lastModifiedDate":"2021-10-06"},{"lineNumber":163,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":164,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.MAX_QUANTITY:","lastModifiedDate":"2021-10-03"},{"lineNumber":165,"author":{"gitId":"a-tph"},"content":"                for (Stock targetStock : filteredMedicines) {","lastModifiedDate":"2021-10-06"},{"lineNumber":166,"author":{"gitId":"a-tph"},"content":"                    targetStock.setMaxQuantity(Integer.parseInt(parameterValue));","lastModifiedDate":"2021-10-06"},{"lineNumber":167,"author":{"gitId":"a-tph"},"content":"                }","lastModifiedDate":"2021-10-06"},{"lineNumber":168,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":169,"author":{"gitId":"a-tph"},"content":"            default:","lastModifiedDate":"2021-10-03"},{"lineNumber":170,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":171,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":172,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":173,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":174,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"alvintan01":7,"a-tph":167}},{"path":"src/main/java/comparators/StockComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package comparators;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":" * Helps to sort the medicines based on the column provided.","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"public class StockComparator implements Comparator\u003cMedicine\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    private String column;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    private Boolean isReversed;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    public StockComparator(String column, Boolean isReversed) {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"        this.column \u003d column;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"        this.isReversed \u003d isReversed;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"    public int compare(Medicine medicine1, Medicine medicine2) {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"        Stock stock1;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"        Stock stock2;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"        if (isReversed) { // If the user chooses to sort in reverse order","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"            stock1 \u003d (Stock) medicine2;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"            stock2 \u003d (Stock) medicine1;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"        } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"            stock1 \u003d (Stock) medicine1;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"            stock2 \u003d (Stock) medicine2;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"        switch (column) {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"        case Stock.ID:","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.STOCK_ID:","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"            return Integer.compare(stock1.getStockID(), stock2.getStockID());","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"        case Stock.NAME:","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.NAME:","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"            return stock1.getMedicineName().compareTo(stock2.getMedicineName());","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"        case Stock.PRICE:","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.PRICE:","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"            return Double.compare(stock1.getPrice(), stock2.getPrice());","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"        case Stock.QUANTITY:","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.QUANTITY:","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"            return Integer.compare(stock1.getQuantity(), stock2.getQuantity());","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"        case Stock.EXPIRY_DATE:","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.EXPIRY_DATE:","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"            return stock1.getExpiry().compareTo(stock2.getExpiry());","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"        case Stock.DESCRIPTION:","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.DESCRIPTION:","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"            return stock1.getDescription().compareTo(stock2.getDescription());","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"        case Stock.MAX_QUANTITY:","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.MAX_QUANTITY:","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"            return Integer.compare(stock1.getMaxQuantity(), stock2.getMaxQuantity());","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"        default:","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"            return 0;","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"alvintan01":60}},{"path":"src/main/java/errors/InvalidCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package errors;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":" * Represents the InvalidCommand thrown when a command is not found in command.CommandList.","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"public class InvalidCommand extends Exception {","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":8}},{"path":"src/main/java/inventory/Dispense.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package inventory;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":" * Represents a Dispensed object. A Dispensed object is represented by medicine name, quantity, customer\u0027s NRIC,","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":" * date and staff name.","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"public class Dispense extends Medicine {","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"    protected String customerNric;","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    protected Date date;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"    protected String staffName;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    public Dispense(String medicineName, int quantity, String customerName, Date date, String staffName) {","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"        super(medicineName, quantity);","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"        this.customerNric \u003d customerName;","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"        this.staffName \u003d staffName;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    public String getCustomerNric() {","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"        return customerNric;","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    public void setCustomerNric(String customerNric) {","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"        this.customerNric \u003d customerNric;","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"    public Date getDate() {","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"        return date;","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"    public void setDate(Date date) {","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"    public String getStaffName() {","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"        return staffName;","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"    public void setStaffName(String staffName) {","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"        this.staffName \u003d staffName;","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"alvintan01":45}},{"path":"src/main/java/inventory/Medicine.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package inventory;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":" * Represents the generic stock for the application. It contains the medicine name and quantity.","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":" * It is inherited by Dispense, Medicine and Order objects.","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"public abstract class Medicine {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"    protected String medicineName;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"    protected int quantity;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    public Medicine(String medicineName, int quantity) {","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"        this.medicineName \u003d medicineName;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    public String getMedicineName() {","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"        return medicineName;","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    public void setMedicineName(String medicineName) {","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"        this.medicineName \u003d medicineName;","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    public int getQuantity() {","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"        return quantity;","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    public void setQuantity(int quantity) {","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"alvintan01":32}},{"path":"src/main/java/inventory/Order.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package inventory;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":" * Represents an Order. An Order is represented by order_id, medicine name, quantity, date and isDelivered.","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"public class Order extends Medicine {","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"    public static int orderCount \u003d 0;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"    protected int orderId;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    protected Date date;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"    protected boolean isDelivered;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    public Order(String medicineName, int quantity, Date date) {","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"        super(medicineName, quantity);","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"        orderCount++;","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"        this.orderId \u003d orderCount;","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"        this.isDelivered \u003d false;","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"    public static int getOrderCount() {","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"        return orderCount;","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    public static void setOrderCount(int orderCount) {","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"        Order.orderCount \u003d orderCount;","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    public int getOrderId() {","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"        return orderId;","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"    public void setOrderId(int orderId) {","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"        this.orderId \u003d orderId;","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"    public Date getDate() {","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"        return date;","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"    public void setDate(Date date) {","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"    public boolean isDelivered() {","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"        return isDelivered;","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"    public void setDelivered(boolean delivered) {","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"        isDelivered \u003d delivered;","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"alvintan01":54}},{"path":"src/main/java/inventory/Stock.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package inventory;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":" * Represents a Medicine object. A Medicine object is represented by stock_id, name, price, quantity, expiry,","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":" * description and max quantity.","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"public class Stock extends Medicine {","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"    public static final String ID \u003d \"ID\";","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    public static final String NAME \u003d \"NAME\";","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"    public static final String PRICE \u003d \"PRICE\";","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    public static final String QUANTITY \u003d \"QUANTITY\";","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    public static final String EXPIRY_DATE \u003d \"EXPIRY_DATE\";","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    public static final String DESCRIPTION \u003d \"DESCRIPTION\";","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    public static final String MAX_QUANTITY \u003d \"MAX_QUANTITY\";","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    public static final String[] COLUMNS \u003d {ID, NAME, PRICE, QUANTITY, EXPIRY_DATE, DESCRIPTION, MAX_QUANTITY};","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    public static final int NO_OF_COLUMNS \u003d 7;","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    private static int stockCount \u003d 0;","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"    protected int stockID;","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    protected double price;","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    protected Date expiry;","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    protected String description;","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    protected int maxQuantity;","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    public Stock(String name, double price, int quantity, Date expiry, String description, int maxQuantity) {","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"        super(name, quantity);","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"        stockCount++;","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"        this.stockID \u003d stockCount;","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"        this.price \u003d price;","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"        this.expiry \u003d expiry;","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"        this.maxQuantity \u003d maxQuantity;","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"    public static int getStockCount() {","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"        return stockCount;","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"    public int getStockID() {","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"        return stockID;","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"    public void setStockID(int stockID) {","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"        this.stockID \u003d stockID;","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"    public double getPrice() {","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"        return price;","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"    public void setPrice(double price) {","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"        this.price \u003d price;","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"    public Date getExpiry() {","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"        return expiry;","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"    public void setExpiry(Date expiry) {","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"        this.expiry \u003d expiry;","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"        return description;","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"    public int getMaxQuantity() {","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"        return maxQuantity;","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"    public void setMaxQuantity(int maxQuantity) {","lastModifiedDate":"2021-10-04"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"        this.maxQuantity \u003d maxQuantity;","lastModifiedDate":"2021-10-04"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"alvintan01":82}},{"path":"src/main/java/parser/DateParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":" * Contains the parser for date objects.","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"public class DateParser {","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    public static final String INPUT_DATE_FORMAT \u003d \"d-M-yyyy\";","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    public static final String OUTPUT_DATE_FORMAT \u003d \"dd-MM-yyyy\";","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"     * Helps to parse a string to a LocalDate object.","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"     * @param date String date to be converted.","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"     * @return LocalDate object representing date.","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"     * @throws ParseException If date is invalid.","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    public static Date stringToDate(String date) throws ParseException {","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(INPUT_DATE_FORMAT);","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"            dateTimeFormatter.parse(date); // To check if date was in valid format","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"            throw new ParseException(\"Unknown date\", 0);","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"        return new SimpleDateFormat(INPUT_DATE_FORMAT).parse(date);","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"     * Helps to parse a LocalDate object to string.","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"     * @param date Date object to be converted to string.","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"     * @return String value of date.","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"    public static String dateToString(Date date) {","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"        return new SimpleDateFormat(OUTPUT_DATE_FORMAT).format(date);","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":43}},{"path":"src/main/java/parser/MedicineManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"public class MedicineManager {","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"     * Retrieves the total stock quantity for medicine with same name.","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"     * @param medicines Arraylist of medicines.","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"     * @param name      Medicine name.","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"     * @return Total stock quantity for the medicine.","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"    public static int getTotalStockQuantity(ArrayList\u003cMedicine\u003e medicines, String name) {","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"        int existingQuantity \u003d 0;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"            if (medicine instanceof Stock) {","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"                boolean isSameMedicineName \u003d medicine.getMedicineName().equalsIgnoreCase(name);","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"                if (isSameMedicineName) {","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"                    existingQuantity +\u003d medicine.getQuantity();","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"                }","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"        return existingQuantity;","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"     * Retrieves the maximum stock quantity for medicine with same name.","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"     * @param medicines Arraylist of medicines.","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"     * @param name      Medicine name.","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"     * @return Total maximum stock quantity for the medicine.","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"    public static int getMaxStockQuantity(ArrayList\u003cMedicine\u003e medicines, String name) {","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"        int existingMaxQuantity \u003d 0;","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"            if (medicine instanceof Stock) {","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"                boolean isSameMedicineName \u003d medicine.getMedicineName().equalsIgnoreCase(name);","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"                if (isSameMedicineName) {","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"a-tph"},"content":"                    existingMaxQuantity \u003d ((Stock) medicine).getMaxQuantity();","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"a-tph"},"content":"                    break;","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"a-tph"},"content":"                }","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"a-tph"},"content":"        return existingMaxQuantity;","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"a-tph"},"content":"     * Extracts the stock object for a given stock id.","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"a-tph"},"content":"     * @param parameters HashMap Key-Value set for parameter and user specified parameter value.","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"a-tph"},"content":"     * @param medicines  Arraylist of all medicines.","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"a-tph"},"content":"     * @return Stock object of the provided stock id by user","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"a-tph"},"content":"    public static Stock extractStockObject(HashMap\u003cString, String\u003e parameters, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"a-tph"},"content":"        int stockId \u003d Integer.parseInt(parameters.get(CommandParameters.STOCK_ID));","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"a-tph"},"content":"        Stock stock \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"a-tph"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"a-tph"},"content":"            if (medicine instanceof Stock \u0026\u0026 stockId \u003d\u003d ((Stock) medicine).getStockID()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"a-tph"},"content":"                stock \u003d (Stock) medicine;","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"a-tph"},"content":"        return stock;","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"a-tph":71}},{"path":"src/main/java/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"RemusTeo"},"content":"import command.HelpCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import command.PurgeCommand;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"RemusTeo"},"content":"import command.medicine.AddCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"RemusTeo"},"content":"import command.medicine.DeleteCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"RemusTeo"},"content":"import command.medicine.ListCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"RemusTeo"},"content":"import command.medicine.UpdateCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"import errors.InvalidCommand;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.ADD;","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.ADD_ORDER;","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.ARCHIVE;","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.DELETE;","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.DELETE_ORDER;","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.DISPENSE;","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.EXIT;","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.HELP;","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.LIST;","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.LIST_ORDERS;","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.PURGE;","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.QUERY;","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.RECEIVE_ORDER;","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.UNDO;","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.UPDATE;","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.UPDATE_ORDER;","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":" * Helps to parse the commands given by the user as well as extract the parameters provided.","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"public class Parser {","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"    private static final String DELIMITER \u003d \"/\";","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"     * Processes the user input into a Command Object.","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"     * @param ui        Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"     * @param userInput Input provided by user.","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"     * @param medicines    Arraylist of all stocks.","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"     * @return A boolean value indicating isExit.","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"     * @throws InvalidCommand If a command does not exist.","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"    public static boolean processCommand(Ui ui, String userInput, ArrayList\u003cMedicine\u003e medicines) throws InvalidCommand {","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"        String[] userCommand \u003d parseCommand(userInput);","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"        String command \u003d userCommand[0];","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"        String commandParameters \u003d userCommand[1];","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"        HashMap\u003cString, String\u003e parameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"        if (!commandParameters.equals(\"\")) {","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"            parameters \u003d parseParameters(commandParameters);","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"        switch (command) {","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"        case ADD:","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"            new AddCommand().execute(ui, parameters, medicines);","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"        case ADD_ORDER:","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"        case ARCHIVE:","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"        case DELETE:","lastModifiedDate":"2021-10-02"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"            new DeleteCommand().execute(ui, parameters, medicines);","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-02"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"        case DELETE_ORDER:","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-02"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"        case DISPENSE:","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"        case EXIT:","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"            return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"        case HELP:","lastModifiedDate":"2021-10-02"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"            new HelpCommand().execute(ui, parameters, medicines);","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"        case LIST:","lastModifiedDate":"2021-10-02"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"            new ListCommand().execute(ui, parameters, medicines);","lastModifiedDate":"2021-10-04"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"        case LIST_ORDERS:","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-02"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"        case PURGE:","lastModifiedDate":"2021-10-02"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"            new PurgeCommand().execute(ui, parameters, medicines);","lastModifiedDate":"2021-10-04"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-02"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"        case QUERY:","lastModifiedDate":"2021-10-02"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-02"},{"lineNumber":89,"author":{"gitId":"alvintan01"},"content":"        case RECEIVE_ORDER:","lastModifiedDate":"2021-10-02"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-02"},{"lineNumber":91,"author":{"gitId":"alvintan01"},"content":"        case UNDO:","lastModifiedDate":"2021-10-02"},{"lineNumber":92,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-02"},{"lineNumber":93,"author":{"gitId":"alvintan01"},"content":"        case UPDATE:","lastModifiedDate":"2021-10-02"},{"lineNumber":94,"author":{"gitId":"alvintan01"},"content":"            new UpdateCommand().execute(ui, parameters, medicines);","lastModifiedDate":"2021-10-04"},{"lineNumber":95,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-02"},{"lineNumber":96,"author":{"gitId":"alvintan01"},"content":"        case UPDATE_ORDER:","lastModifiedDate":"2021-10-02"},{"lineNumber":97,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-02"},{"lineNumber":98,"author":{"gitId":"alvintan01"},"content":"        default:","lastModifiedDate":"2021-10-02"},{"lineNumber":99,"author":{"gitId":"alvintan01"},"content":"            throw new InvalidCommand();","lastModifiedDate":"2021-10-02"},{"lineNumber":100,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":101,"author":{"gitId":"alvintan01"},"content":"        return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":102,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":103,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":104,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":105,"author":{"gitId":"alvintan01"},"content":"     * Splits the user input into command and command parameters.","lastModifiedDate":"2021-10-02"},{"lineNumber":106,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":107,"author":{"gitId":"alvintan01"},"content":"     * @param userInput String input from user.","lastModifiedDate":"2021-10-02"},{"lineNumber":108,"author":{"gitId":"alvintan01"},"content":"     * @return Array of string with size 2 with index 0 representing the command and index 1 representing the","lastModifiedDate":"2021-10-02"},{"lineNumber":109,"author":{"gitId":"alvintan01"},"content":"     *     command parameters.","lastModifiedDate":"2021-10-02"},{"lineNumber":110,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":111,"author":{"gitId":"alvintan01"},"content":"    public static String[] parseCommand(String userInput) {","lastModifiedDate":"2021-10-02"},{"lineNumber":112,"author":{"gitId":"alvintan01"},"content":"        String[] splitCommand \u003d new String[2];","lastModifiedDate":"2021-10-02"},{"lineNumber":113,"author":{"gitId":"alvintan01"},"content":"        // Splits user input by spaces","lastModifiedDate":"2021-10-02"},{"lineNumber":114,"author":{"gitId":"alvintan01"},"content":"        String[] userInputSplit \u003d userInput.split(\"\\\\s+\", 2);","lastModifiedDate":"2021-10-02"},{"lineNumber":115,"author":{"gitId":"alvintan01"},"content":"        String command \u003d userInputSplit[0].toUpperCase();","lastModifiedDate":"2021-10-02"},{"lineNumber":116,"author":{"gitId":"alvintan01"},"content":"        String commandParameters \u003d \"\";","lastModifiedDate":"2021-10-02"},{"lineNumber":117,"author":{"gitId":"alvintan01"},"content":"        if (userInputSplit.length \u003e 1) { // Ensure command parameter exists","lastModifiedDate":"2021-10-02"},{"lineNumber":118,"author":{"gitId":"alvintan01"},"content":"            commandParameters \u003d userInputSplit[1];","lastModifiedDate":"2021-10-02"},{"lineNumber":119,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":120,"author":{"gitId":"alvintan01"},"content":"        return new String[]{command, commandParameters};","lastModifiedDate":"2021-10-02"},{"lineNumber":121,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":122,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":123,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":124,"author":{"gitId":"alvintan01"},"content":"     * Returns all the parameters passed entered as a hashmap.","lastModifiedDate":"2021-10-02"},{"lineNumber":125,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":126,"author":{"gitId":"alvintan01"},"content":"     * @param parameterString String of parameters.","lastModifiedDate":"2021-10-02"},{"lineNumber":127,"author":{"gitId":"alvintan01"},"content":"     * @return HashMap with parameter as key and parameter contents as value.","lastModifiedDate":"2021-10-02"},{"lineNumber":128,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":129,"author":{"gitId":"alvintan01"},"content":"    public static HashMap\u003cString, String\u003e parseParameters(String parameterString) {","lastModifiedDate":"2021-10-02"},{"lineNumber":130,"author":{"gitId":"alvintan01"},"content":"        HashMap\u003cString, String\u003e parameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-02"},{"lineNumber":131,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":132,"author":{"gitId":"alvintan01"},"content":"        String[] parameterSplit \u003d parameterString.split(\"\\\\s+\"); // Split by space","lastModifiedDate":"2021-10-02"},{"lineNumber":133,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":134,"author":{"gitId":"alvintan01"},"content":"        String commandParameter \u003d \"\";","lastModifiedDate":"2021-10-02"},{"lineNumber":135,"author":{"gitId":"alvintan01"},"content":"        StringBuilder parameterContents \u003d new StringBuilder();","lastModifiedDate":"2021-10-02"},{"lineNumber":136,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":137,"author":{"gitId":"alvintan01"},"content":"        for (String s : parameterSplit) {","lastModifiedDate":"2021-10-02"},{"lineNumber":138,"author":{"gitId":"alvintan01"},"content":"            if (s.contains(DELIMITER)) {","lastModifiedDate":"2021-10-02"},{"lineNumber":139,"author":{"gitId":"alvintan01"},"content":"                if (!commandParameter.equals(\"\")) { // Ensure it is not the first iteration","lastModifiedDate":"2021-10-02"},{"lineNumber":140,"author":{"gitId":"alvintan01"},"content":"                    // Add to hashmap before resetting values","lastModifiedDate":"2021-10-02"},{"lineNumber":141,"author":{"gitId":"alvintan01"},"content":"                    parameters.put(commandParameter, parameterContents.toString());","lastModifiedDate":"2021-10-02"},{"lineNumber":142,"author":{"gitId":"alvintan01"},"content":"                }","lastModifiedDate":"2021-10-02"},{"lineNumber":143,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":144,"author":{"gitId":"alvintan01"},"content":"                parameterContents \u003d new StringBuilder(); // Reset the values","lastModifiedDate":"2021-10-02"},{"lineNumber":145,"author":{"gitId":"alvintan01"},"content":"                String[] commandSplit \u003d s.split(DELIMITER);","lastModifiedDate":"2021-10-02"},{"lineNumber":146,"author":{"gitId":"alvintan01"},"content":"                commandParameter \u003d commandSplit[0].toUpperCase();","lastModifiedDate":"2021-10-02"},{"lineNumber":147,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":148,"author":{"gitId":"alvintan01"},"content":"                if (commandSplit.length \u003e 1) {","lastModifiedDate":"2021-10-02"},{"lineNumber":149,"author":{"gitId":"alvintan01"},"content":"                    parameterContents \u003d new StringBuilder(commandSplit[1]);","lastModifiedDate":"2021-10-02"},{"lineNumber":150,"author":{"gitId":"alvintan01"},"content":"                }","lastModifiedDate":"2021-10-02"},{"lineNumber":151,"author":{"gitId":"alvintan01"},"content":"            } else { // Add the rest of the string","lastModifiedDate":"2021-10-02"},{"lineNumber":152,"author":{"gitId":"alvintan01"},"content":"                parameterContents.append(\" \").append(s);","lastModifiedDate":"2021-10-02"},{"lineNumber":153,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":154,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":155,"author":{"gitId":"alvintan01"},"content":"        parameters.put(commandParameter, parameterContents.toString()); // Add to hashmap for the last parameter","lastModifiedDate":"2021-10-02"},{"lineNumber":156,"author":{"gitId":"alvintan01"},"content":"        return parameters;","lastModifiedDate":"2021-10-02"},{"lineNumber":157,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":158,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":153,"RemusTeo":5}},{"path":"src/main/java/parser/StockValidator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":" * Contains all the methods to validate if a Medicine\u0027s input parameters are valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"public class StockValidator {","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"RemusTeo"},"content":"     * Checks if the given stock id is valid.","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"     * @param ui        Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"     * @param id        ID of the medicine to be checked.","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"     * @param medicines List of all medicines.","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"     * @return Boolean value indicating if medicine ID is valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    public static boolean isValidStockId(Ui ui, String id, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"            int stockId \u003d Integer.parseInt(id);","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"            if (stockId \u003c\u003d 0 || stockId \u003e Stock.getStockCount()) {","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"                throw new Exception();","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"RemusTeo"},"content":"            boolean stockExist \u003d false;","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"            for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"                Stock stock \u003d (Stock) medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"                if (stock.getStockID() \u003d\u003d stockId) {","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"RemusTeo"},"content":"                    stockExist \u003d true;","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"RemusTeo"},"content":"                    break;","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"RemusTeo"},"content":"                }","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"RemusTeo"},"content":"            if (!stockExist) {","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"RemusTeo"},"content":"                ui.print(\"Invalid stock id provided!\");","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"RemusTeo"},"content":"                return false;","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"            return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Invalid stock id provided!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"        return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"     * Checks if a medicine name is empty.","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"     * @param ui   Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"     * @param name Medicine name to be checked.","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"     * @return Boolean value indicating if medicine name is valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"    public static boolean isValidName(Ui ui, String name) {","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"        if (name.equals(\"\")) {","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Medication name cannot be empty!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"            return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"        return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"     * Checks if a medicine price is valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"     * @param ui          Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-02"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"     * @param priceString Price of the medicine to be checked.","lastModifiedDate":"2021-10-02"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"     * @return Boolean value indicating if medicine price is valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"    public static boolean isValidPrice(Ui ui, String priceString) {","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"            double price \u003d Double.parseDouble(priceString);","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"            if (price \u003c 0) {","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"                throw new Exception();","lastModifiedDate":"2021-10-02"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"            return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Invalid price provided!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"        return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"     * Checks if a medicine quantity is valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"     * @param ui             Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-02"},{"lineNumber":89,"author":{"gitId":"alvintan01"},"content":"     * @param quantityString Quantity of the medicine.","lastModifiedDate":"2021-10-02"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"     * @return Boolean value indicating if medicine quantity is valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":91,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":92,"author":{"gitId":"alvintan01"},"content":"    public static boolean isValidQuantity(Ui ui, String quantityString) {","lastModifiedDate":"2021-10-02"},{"lineNumber":93,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-10-02"},{"lineNumber":94,"author":{"gitId":"alvintan01"},"content":"            int quantity \u003d Integer.parseInt(quantityString);","lastModifiedDate":"2021-10-02"},{"lineNumber":95,"author":{"gitId":"alvintan01"},"content":"            if (quantity \u003c 0) {","lastModifiedDate":"2021-10-02"},{"lineNumber":96,"author":{"gitId":"alvintan01"},"content":"                throw new Exception();","lastModifiedDate":"2021-10-02"},{"lineNumber":97,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":98,"author":{"gitId":"alvintan01"},"content":"            return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":99,"author":{"gitId":"alvintan01"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":100,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Invalid quantity provided!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":101,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":102,"author":{"gitId":"alvintan01"},"content":"        return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":103,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":104,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":105,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":106,"author":{"gitId":"alvintan01"},"content":"     * Checks if a medicine expiry date is valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":107,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":108,"author":{"gitId":"alvintan01"},"content":"     * @param ui           Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-02"},{"lineNumber":109,"author":{"gitId":"alvintan01"},"content":"     * @param expiryString Expiry date of the medicine.","lastModifiedDate":"2021-10-02"},{"lineNumber":110,"author":{"gitId":"alvintan01"},"content":"     * @return Boolean value indicating if medicine expiry date is valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":111,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":112,"author":{"gitId":"alvintan01"},"content":"    public static boolean isValidExpiry(Ui ui, String expiryString) {","lastModifiedDate":"2021-10-02"},{"lineNumber":113,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-10-02"},{"lineNumber":114,"author":{"gitId":"alvintan01"},"content":"            DateParser.stringToDate(expiryString);","lastModifiedDate":"2021-10-02"},{"lineNumber":115,"author":{"gitId":"alvintan01"},"content":"            return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":116,"author":{"gitId":"alvintan01"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":117,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Invalid expiry date! Ensure date is in \" + DateParser.OUTPUT_DATE_FORMAT + \".\");","lastModifiedDate":"2021-10-02"},{"lineNumber":118,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":119,"author":{"gitId":"alvintan01"},"content":"        return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":120,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":121,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":122,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":123,"author":{"gitId":"alvintan01"},"content":"     * Checks if a medicine description is empty.","lastModifiedDate":"2021-10-02"},{"lineNumber":124,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":125,"author":{"gitId":"alvintan01"},"content":"     * @param ui          Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-02"},{"lineNumber":126,"author":{"gitId":"alvintan01"},"content":"     * @param description Medicine description to be checked.","lastModifiedDate":"2021-10-02"},{"lineNumber":127,"author":{"gitId":"alvintan01"},"content":"     * @return Boolean value indicating if medicine name is valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":128,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":129,"author":{"gitId":"alvintan01"},"content":"    public static boolean isValidDescription(Ui ui, String description) {","lastModifiedDate":"2021-10-02"},{"lineNumber":130,"author":{"gitId":"alvintan01"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2021-10-02"},{"lineNumber":131,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Description cannot be empty!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":132,"author":{"gitId":"alvintan01"},"content":"            return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":133,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":134,"author":{"gitId":"alvintan01"},"content":"        return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":135,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":136,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":137,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":138,"author":{"gitId":"alvintan01"},"content":"     * Checks if a medicine max quantity is valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":139,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":140,"author":{"gitId":"alvintan01"},"content":"     * @param ui                Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-02"},{"lineNumber":141,"author":{"gitId":"alvintan01"},"content":"     * @param maxQuantityString Max quantity of the medicine.","lastModifiedDate":"2021-10-02"},{"lineNumber":142,"author":{"gitId":"alvintan01"},"content":"     * @return Boolean value indicating if max medicine quantity is valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":143,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":144,"author":{"gitId":"alvintan01"},"content":"    public static boolean isValidMaxQuantity(Ui ui, String maxQuantityString) {","lastModifiedDate":"2021-10-02"},{"lineNumber":145,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-10-02"},{"lineNumber":146,"author":{"gitId":"alvintan01"},"content":"            int maxQuantity \u003d Integer.parseInt(maxQuantityString);","lastModifiedDate":"2021-10-02"},{"lineNumber":147,"author":{"gitId":"alvintan01"},"content":"            if (maxQuantity \u003c 0) {","lastModifiedDate":"2021-10-02"},{"lineNumber":148,"author":{"gitId":"alvintan01"},"content":"                throw new Exception();","lastModifiedDate":"2021-10-02"},{"lineNumber":149,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":150,"author":{"gitId":"alvintan01"},"content":"            return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":151,"author":{"gitId":"alvintan01"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":152,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Invalid max quantity provided!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":153,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":154,"author":{"gitId":"alvintan01"},"content":"        return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":155,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":156,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":157,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":158,"author":{"gitId":"alvintan01"},"content":"     * Checks if a medicine column/alias exists.","lastModifiedDate":"2021-10-02"},{"lineNumber":159,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":160,"author":{"gitId":"alvintan01"},"content":"     * @param ui         Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-02"},{"lineNumber":161,"author":{"gitId":"alvintan01"},"content":"     * @param columnName Column name/alias to be validated.","lastModifiedDate":"2021-10-02"},{"lineNumber":162,"author":{"gitId":"alvintan01"},"content":"     * @return Boolean value indicating if max medicine quantity is valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":163,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":164,"author":{"gitId":"alvintan01"},"content":"    public static boolean isValidColumn(Ui ui, String columnName) {","lastModifiedDate":"2021-10-02"},{"lineNumber":165,"author":{"gitId":"alvintan01"},"content":"        String[] columnAlias \u003d new String[]{CommandParameters.STOCK_ID, CommandParameters.NAME, CommandParameters.PRICE,","lastModifiedDate":"2021-10-02"},{"lineNumber":166,"author":{"gitId":"alvintan01"},"content":"            CommandParameters.QUANTITY, CommandParameters.EXPIRY_DATE, CommandParameters.DESCRIPTION,","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"alvintan01"},"content":"            CommandParameters.MAX_QUANTITY};","lastModifiedDate":"2021-10-02"},{"lineNumber":168,"author":{"gitId":"alvintan01"},"content":"        if (Arrays.asList(Stock.COLUMNS).contains(columnName.toUpperCase()) || Arrays.asList(columnAlias)","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"alvintan01"},"content":"                .contains(columnName.toUpperCase())) {","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"alvintan01"},"content":"            return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":171,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":172,"author":{"gitId":"alvintan01"},"content":"        ui.print(\"Invalid column name/alias! Column names can only be \" + Arrays.toString(Stock.COLUMNS) + \" and \"","lastModifiedDate":"2021-10-04"},{"lineNumber":173,"author":{"gitId":"alvintan01"},"content":"                + \"the respective aliases are \" + Arrays.toString(columnAlias) + \".\");","lastModifiedDate":"2021-10-02"},{"lineNumber":174,"author":{"gitId":"alvintan01"},"content":"        return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":175,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":176,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":177,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":178,"author":{"gitId":"a-tph"},"content":"     * Checks if total quantity of medicine is below max quantity.","lastModifiedDate":"2021-10-06"},{"lineNumber":179,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":180,"author":{"gitId":"a-tph"},"content":"     * @param ui          Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-06"},{"lineNumber":181,"author":{"gitId":"a-tph"},"content":"     * @param quantity    Quantity of the medicines.","lastModifiedDate":"2021-10-06"},{"lineNumber":182,"author":{"gitId":"a-tph"},"content":"     * @param maxQuantity Max quantity of medicines.","lastModifiedDate":"2021-10-06"},{"lineNumber":183,"author":{"gitId":"a-tph"},"content":"     * @return Boolean value indicating if total quantity is less than max quantity.","lastModifiedDate":"2021-10-06"},{"lineNumber":184,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":185,"author":{"gitId":"a-tph"},"content":"    public static boolean quantityValidityChecker(Ui ui, int quantity, int maxQuantity) {","lastModifiedDate":"2021-10-06"},{"lineNumber":186,"author":{"gitId":"a-tph"},"content":"        if (quantity \u003e maxQuantity) {","lastModifiedDate":"2021-10-06"},{"lineNumber":187,"author":{"gitId":"a-tph"},"content":"            String message \u003d \"Quantity: \" + quantity + \", Max Quantity: \" + maxQuantity;","lastModifiedDate":"2021-10-06"},{"lineNumber":188,"author":{"gitId":"a-tph"},"content":"            ui.print(\"Quantity cannot be more than maximum quantity!\");","lastModifiedDate":"2021-10-06"},{"lineNumber":189,"author":{"gitId":"a-tph"},"content":"            ui.print(message);","lastModifiedDate":"2021-10-06"},{"lineNumber":190,"author":{"gitId":"a-tph"},"content":"            return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":191,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":192,"author":{"gitId":"a-tph"},"content":"        return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":193,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":194,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":195,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":196,"author":{"gitId":"a-tph"},"content":"     * Checks if input date for medicine already exists.","lastModifiedDate":"2021-10-06"},{"lineNumber":197,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":198,"author":{"gitId":"a-tph"},"content":"     * @param ui         Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-06"},{"lineNumber":199,"author":{"gitId":"a-tph"},"content":"     * @param medicines  List of all medicines.","lastModifiedDate":"2021-10-06"},{"lineNumber":200,"author":{"gitId":"a-tph"},"content":"     * @param expiryDate Expiry date given by user","lastModifiedDate":"2021-10-06"},{"lineNumber":201,"author":{"gitId":"a-tph"},"content":"     * @param name       Medicine name to check against","lastModifiedDate":"2021-10-06"},{"lineNumber":202,"author":{"gitId":"a-tph"},"content":"     * @return Boolean false if same expiry date exist","lastModifiedDate":"2021-10-06"},{"lineNumber":203,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":204,"author":{"gitId":"a-tph"},"content":"    public static boolean dateValidityChecker(Ui ui, ArrayList\u003cMedicine\u003e medicines, Date expiryDate, String name) {","lastModifiedDate":"2021-10-06"},{"lineNumber":205,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cStock\u003e filteredMedicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":206,"author":{"gitId":"a-tph"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-06"},{"lineNumber":207,"author":{"gitId":"a-tph"},"content":"            if (medicine instanceof Stock \u0026\u0026 name.equalsIgnoreCase(medicine.getMedicineName())) {","lastModifiedDate":"2021-10-06"},{"lineNumber":208,"author":{"gitId":"a-tph"},"content":"                filteredMedicines.add((Stock) medicine);","lastModifiedDate":"2021-10-06"},{"lineNumber":209,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":210,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":211,"author":{"gitId":"a-tph"},"content":"        for (Stock filteredStock : filteredMedicines) {","lastModifiedDate":"2021-10-06"},{"lineNumber":212,"author":{"gitId":"a-tph"},"content":"            if (expiryDate.equals(filteredStock.getExpiry())) {","lastModifiedDate":"2021-10-06"},{"lineNumber":213,"author":{"gitId":"a-tph"},"content":"                ui.print(\"Same expiry date already exists!\");","lastModifiedDate":"2021-10-06"},{"lineNumber":214,"author":{"gitId":"a-tph"},"content":"                return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":215,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":216,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":217,"author":{"gitId":"a-tph"},"content":"        return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":218,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":219,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":165,"RemusTeo":10,"a-tph":44}},{"path":"src/main/java/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import command.CommandSyntax;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import parser.DateParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":" * Handles printing all messages in the application to the console.","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"public class Ui {","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    private static final int TABLE_PADDING \u003d 2;","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"     * Prints the welcome command message.","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"        String logo \u003d \"|  \\\\/  |          | |(_)| | | |              | || |  \\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"                + \"| .  . |  ___   __| | _ | | | |  __ _  _   _ | || |_ \\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"                + \"| |\\\\/| | / _ \\\\ / _` || || | | | / _` || | | || || __|\\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"                + \"| |  | ||  __/| (_| || |\\\\ \\\\_/ /| (_| || |_| || || |_ \\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"RemusTeo"},"content":"                + \"\\\\_|  |_/ \\\\___| \\\\__,_||_| \\\\___/  \\\\__,_| \\\\__,_||_| \\\\__|\\n\";","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"RemusTeo"},"content":"        print(logo + \"Welcome to MediVault!\");","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"     * Prints the invalid command message.","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"    public void printInvalidCommandMessage() {","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"        print(\"Sorry! I did not understand your command.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"     * Prints the statements.","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"     * @param statement Statement to be printed.","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"    public void print(String statement) {","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"        System.out.println(statement);","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"     * Prints the invalid parameter message.","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"     * @param parameter     The invalid parameter found.","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"     * @param commandSyntax The command syntax of the command.","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"    public void printInvalidParameter(String parameter, String commandSyntax) {","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"        if (parameter.equals(\"\")) {","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"            print(\"Please provide all the required parameters!\");","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"        } else {","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"            print(\"An invalid parameter \" + parameter + \" is provided!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"        print(\"COMMAND SYNTAX: \" + commandSyntax);","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"     * Prints the missing parameter message.","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"     * @param parameter     The parameter that is not found.","lastModifiedDate":"2021-10-03"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"     * @param commandSyntax The command syntax of the command.","lastModifiedDate":"2021-10-03"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"    public void printRequiredParameter(String parameter, String commandSyntax) {","lastModifiedDate":"2021-10-03"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"        print(\"Required parameter \" + parameter + \" is missing!\");","lastModifiedDate":"2021-10-03"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"        print(\"COMMAND SYNTAX: \" + commandSyntax);","lastModifiedDate":"2021-10-03"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"     * Prints out the medicine in a table format.","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"     * @param stock Medicine to be printed.","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"    public void printStock(Stock stock) {","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"        medicines.add(stock);","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"        printStocks(medicines);","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"     * Prints out all the stocks in the Arraylist in a table format.","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"     * @param medicines Arraylist of the medicines.","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"    public void printStocks(ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"        if (medicines.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-02"},{"lineNumber":89,"author":{"gitId":"alvintan01"},"content":"            print(\"There are no medicines found.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"            return;","lastModifiedDate":"2021-10-02"},{"lineNumber":91,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":92,"author":{"gitId":"alvintan01"},"content":"        int idWidth \u003d Stock.COLUMNS[0].length();","lastModifiedDate":"2021-10-04"},{"lineNumber":93,"author":{"gitId":"alvintan01"},"content":"        int nameWidth \u003d Stock.COLUMNS[1].length();","lastModifiedDate":"2021-10-04"},{"lineNumber":94,"author":{"gitId":"alvintan01"},"content":"        int priceWidth \u003d Stock.COLUMNS[2].length();","lastModifiedDate":"2021-10-04"},{"lineNumber":95,"author":{"gitId":"alvintan01"},"content":"        int quantityWidth \u003d Stock.COLUMNS[3].length();","lastModifiedDate":"2021-10-04"},{"lineNumber":96,"author":{"gitId":"alvintan01"},"content":"        int expiryWidth \u003d Stock.COLUMNS[4].length();","lastModifiedDate":"2021-10-04"},{"lineNumber":97,"author":{"gitId":"alvintan01"},"content":"        int descriptionWidth \u003d Stock.COLUMNS[5].length();","lastModifiedDate":"2021-10-04"},{"lineNumber":98,"author":{"gitId":"alvintan01"},"content":"        int maxQuantityWidth \u003d Stock.COLUMNS[6].length();","lastModifiedDate":"2021-10-04"},{"lineNumber":99,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":100,"author":{"gitId":"alvintan01"},"content":"        // Find the longest width of each column","lastModifiedDate":"2021-10-02"},{"lineNumber":101,"author":{"gitId":"alvintan01"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-04"},{"lineNumber":102,"author":{"gitId":"alvintan01"},"content":"            Stock stock \u003d (Stock) medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":103,"author":{"gitId":"alvintan01"},"content":"            idWidth \u003d Math.max(String.valueOf(stock.getStockID()).length(), idWidth);","lastModifiedDate":"2021-10-04"},{"lineNumber":104,"author":{"gitId":"alvintan01"},"content":"            nameWidth \u003d Math.max(stock.getMedicineName().length(), nameWidth);","lastModifiedDate":"2021-10-04"},{"lineNumber":105,"author":{"gitId":"alvintan01"},"content":"            priceWidth \u003d Math.max(String.format(\"$%.2f\", stock.getPrice()).length(), priceWidth);","lastModifiedDate":"2021-10-04"},{"lineNumber":106,"author":{"gitId":"alvintan01"},"content":"            quantityWidth \u003d Math.max(String.valueOf(stock.getQuantity()).length(), quantityWidth);","lastModifiedDate":"2021-10-04"},{"lineNumber":107,"author":{"gitId":"alvintan01"},"content":"            expiryWidth \u003d Math.max(DateParser.dateToString(stock.getExpiry()).length(), expiryWidth);","lastModifiedDate":"2021-10-04"},{"lineNumber":108,"author":{"gitId":"alvintan01"},"content":"            descriptionWidth \u003d Math.max(stock.getDescription().length(), descriptionWidth);","lastModifiedDate":"2021-10-04"},{"lineNumber":109,"author":{"gitId":"alvintan01"},"content":"            maxQuantityWidth \u003d Math.max(String.valueOf(stock.getMaxQuantity()).length(), maxQuantityWidth);","lastModifiedDate":"2021-10-04"},{"lineNumber":110,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":111,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":112,"author":{"gitId":"alvintan01"},"content":"        int[] columnWidths \u003d {idWidth, nameWidth, priceWidth, quantityWidth, expiryWidth, descriptionWidth,","lastModifiedDate":"2021-10-02"},{"lineNumber":113,"author":{"gitId":"alvintan01"},"content":"            maxQuantityWidth};","lastModifiedDate":"2021-10-02"},{"lineNumber":114,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":115,"author":{"gitId":"alvintan01"},"content":"        // Pad the data in the columns","lastModifiedDate":"2021-10-02"},{"lineNumber":116,"author":{"gitId":"alvintan01"},"content":"        String idFormat \u003d \"| %1$-\" + idWidth + \"s | \";","lastModifiedDate":"2021-10-02"},{"lineNumber":117,"author":{"gitId":"alvintan01"},"content":"        String nameFormat \u003d \"%1$-\" + nameWidth + \"s | \";","lastModifiedDate":"2021-10-02"},{"lineNumber":118,"author":{"gitId":"alvintan01"},"content":"        String priceFormat \u003d \"%1$-\" + priceWidth + \"s | \";","lastModifiedDate":"2021-10-02"},{"lineNumber":119,"author":{"gitId":"alvintan01"},"content":"        String quantityFormat \u003d \"%1$-\" + quantityWidth + \"s | \";","lastModifiedDate":"2021-10-02"},{"lineNumber":120,"author":{"gitId":"alvintan01"},"content":"        String expiryFormat \u003d \"%1$-\" + expiryWidth + \"s | \";","lastModifiedDate":"2021-10-02"},{"lineNumber":121,"author":{"gitId":"alvintan01"},"content":"        String descriptionFormat \u003d \"%1$-\" + descriptionWidth + \"s | \";","lastModifiedDate":"2021-10-02"},{"lineNumber":122,"author":{"gitId":"alvintan01"},"content":"        String maxQuantityFormat \u003d \"%1$-\" + maxQuantityWidth + \"s | \";","lastModifiedDate":"2021-10-02"},{"lineNumber":123,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":124,"author":{"gitId":"alvintan01"},"content":"        String[] formats \u003d {idFormat, nameFormat, priceFormat, quantityFormat, expiryFormat, descriptionFormat,","lastModifiedDate":"2021-10-02"},{"lineNumber":125,"author":{"gitId":"alvintan01"},"content":"            maxQuantityFormat};","lastModifiedDate":"2021-10-02"},{"lineNumber":126,"author":{"gitId":"alvintan01"},"content":"        StringBuilder headers \u003d new StringBuilder();","lastModifiedDate":"2021-10-02"},{"lineNumber":127,"author":{"gitId":"alvintan01"},"content":"        for (int i \u003d 0; i \u003c Stock.NO_OF_COLUMNS; i++) {","lastModifiedDate":"2021-10-04"},{"lineNumber":128,"author":{"gitId":"alvintan01"},"content":"            headers.append(String.format(formats[i], centerString(columnWidths[i], Stock.COLUMNS[i])));","lastModifiedDate":"2021-10-04"},{"lineNumber":129,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":130,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":131,"author":{"gitId":"alvintan01"},"content":"        printHeaderBorder(Stock.NO_OF_COLUMNS, columnWidths);","lastModifiedDate":"2021-10-04"},{"lineNumber":132,"author":{"gitId":"alvintan01"},"content":"        System.out.println(headers);","lastModifiedDate":"2021-10-02"},{"lineNumber":133,"author":{"gitId":"alvintan01"},"content":"        printHeaderBorder(Stock.NO_OF_COLUMNS, columnWidths);","lastModifiedDate":"2021-10-04"},{"lineNumber":134,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":135,"author":{"gitId":"alvintan01"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-04"},{"lineNumber":136,"author":{"gitId":"alvintan01"},"content":"            Stock stock \u003d (Stock) medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":137,"author":{"gitId":"alvintan01"},"content":"            String row \u003d String.format(idFormat, centerString(idWidth, String.valueOf(stock.getStockID())))","lastModifiedDate":"2021-10-04"},{"lineNumber":138,"author":{"gitId":"alvintan01"},"content":"                    + String.format(nameFormat, centerString(nameWidth, stock.getMedicineName()))","lastModifiedDate":"2021-10-04"},{"lineNumber":139,"author":{"gitId":"alvintan01"},"content":"                    + String.format(priceFormat, centerString(priceWidth, String.format(\"$%.2f\", stock.getPrice())))","lastModifiedDate":"2021-10-04"},{"lineNumber":140,"author":{"gitId":"alvintan01"},"content":"                    + String.format(quantityFormat, centerString(quantityWidth, String.valueOf(stock.getQuantity())))","lastModifiedDate":"2021-10-04"},{"lineNumber":141,"author":{"gitId":"alvintan01"},"content":"                    + String.format(expiryFormat, centerString(expiryWidth,","lastModifiedDate":"2021-10-03"},{"lineNumber":142,"author":{"gitId":"alvintan01"},"content":"                    DateParser.dateToString(stock.getExpiry())))","lastModifiedDate":"2021-10-04"},{"lineNumber":143,"author":{"gitId":"alvintan01"},"content":"                    + String.format(descriptionFormat, centerString(descriptionWidth, stock.getDescription()))","lastModifiedDate":"2021-10-04"},{"lineNumber":144,"author":{"gitId":"alvintan01"},"content":"                    + String.format(maxQuantityFormat, centerString(maxQuantityWidth,","lastModifiedDate":"2021-10-03"},{"lineNumber":145,"author":{"gitId":"alvintan01"},"content":"                    String.valueOf(stock.getMaxQuantity())));","lastModifiedDate":"2021-10-04"},{"lineNumber":146,"author":{"gitId":"alvintan01"},"content":"            System.out.println(row);","lastModifiedDate":"2021-10-02"},{"lineNumber":147,"author":{"gitId":"alvintan01"},"content":"            printRowBorder(Stock.NO_OF_COLUMNS, columnWidths);","lastModifiedDate":"2021-10-04"},{"lineNumber":148,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":149,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":150,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":151,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":152,"author":{"gitId":"alvintan01"},"content":"     * Prints the header borders for a table.","lastModifiedDate":"2021-10-02"},{"lineNumber":153,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":154,"author":{"gitId":"alvintan01"},"content":"     * @param noOfColumns  Number of columns in the table.","lastModifiedDate":"2021-10-02"},{"lineNumber":155,"author":{"gitId":"alvintan01"},"content":"     * @param columnWidths Array of the columns widths in the table.","lastModifiedDate":"2021-10-02"},{"lineNumber":156,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":157,"author":{"gitId":"alvintan01"},"content":"    private void printHeaderBorder(int noOfColumns, int[] columnWidths) {","lastModifiedDate":"2021-10-02"},{"lineNumber":158,"author":{"gitId":"alvintan01"},"content":"        StringBuilder headerBorder \u003d new StringBuilder();","lastModifiedDate":"2021-10-02"},{"lineNumber":159,"author":{"gitId":"alvintan01"},"content":"        for (int i \u003d 0; i \u003c noOfColumns; i++) {","lastModifiedDate":"2021-10-02"},{"lineNumber":160,"author":{"gitId":"alvintan01"},"content":"            headerBorder.append(\"+\");","lastModifiedDate":"2021-10-02"},{"lineNumber":161,"author":{"gitId":"alvintan01"},"content":"            int width \u003d Math.max(0, columnWidths[i] + TABLE_PADDING);","lastModifiedDate":"2021-10-02"},{"lineNumber":162,"author":{"gitId":"alvintan01"},"content":"            headerBorder.append(\"\u003d\".repeat(width));","lastModifiedDate":"2021-10-02"},{"lineNumber":163,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":164,"author":{"gitId":"alvintan01"},"content":"        headerBorder.append(\"+\");","lastModifiedDate":"2021-10-02"},{"lineNumber":165,"author":{"gitId":"alvintan01"},"content":"        System.out.println(headerBorder);","lastModifiedDate":"2021-10-02"},{"lineNumber":166,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":167,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":168,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":169,"author":{"gitId":"alvintan01"},"content":"     * Prints the row borders for a table.","lastModifiedDate":"2021-10-02"},{"lineNumber":170,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":171,"author":{"gitId":"alvintan01"},"content":"     * @param noOfColumns  Number of columns in the table.","lastModifiedDate":"2021-10-02"},{"lineNumber":172,"author":{"gitId":"alvintan01"},"content":"     * @param columnWidths Array of the columns widths in the table.","lastModifiedDate":"2021-10-02"},{"lineNumber":173,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":174,"author":{"gitId":"alvintan01"},"content":"    private void printRowBorder(int noOfColumns, int[] columnWidths) {","lastModifiedDate":"2021-10-02"},{"lineNumber":175,"author":{"gitId":"alvintan01"},"content":"        StringBuilder rowBorder \u003d new StringBuilder();","lastModifiedDate":"2021-10-02"},{"lineNumber":176,"author":{"gitId":"alvintan01"},"content":"        for (int i \u003d 0; i \u003c noOfColumns; i++) {","lastModifiedDate":"2021-10-02"},{"lineNumber":177,"author":{"gitId":"alvintan01"},"content":"            rowBorder.append(\"+\");","lastModifiedDate":"2021-10-02"},{"lineNumber":178,"author":{"gitId":"alvintan01"},"content":"            int width \u003d columnWidths[i] + TABLE_PADDING;","lastModifiedDate":"2021-10-07"},{"lineNumber":179,"author":{"gitId":"alvintan01"},"content":"            rowBorder.append(\"-\".repeat(width));","lastModifiedDate":"2021-10-02"},{"lineNumber":180,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":181,"author":{"gitId":"alvintan01"},"content":"        rowBorder.append(\"+\");","lastModifiedDate":"2021-10-02"},{"lineNumber":182,"author":{"gitId":"alvintan01"},"content":"        System.out.println(rowBorder);","lastModifiedDate":"2021-10-02"},{"lineNumber":183,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":184,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":185,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":186,"author":{"gitId":"alvintan01"},"content":"     * Centralise a string given a width.","lastModifiedDate":"2021-10-02"},{"lineNumber":187,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":188,"author":{"gitId":"alvintan01"},"content":"     * @param width Width of the column.","lastModifiedDate":"2021-10-02"},{"lineNumber":189,"author":{"gitId":"alvintan01"},"content":"     * @param s     String to be centralised.","lastModifiedDate":"2021-10-02"},{"lineNumber":190,"author":{"gitId":"alvintan01"},"content":"     * @return The centralised string.","lastModifiedDate":"2021-10-02"},{"lineNumber":191,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":192,"author":{"gitId":"alvintan01"},"content":"    private String centerString(int width, String s) {","lastModifiedDate":"2021-10-02"},{"lineNumber":193,"author":{"gitId":"alvintan01"},"content":"        return String.format(\"%-\" + width + \"s\", String.format(\"%\" + (s.length() + (width - s.length()) / 2) + \"s\", s));","lastModifiedDate":"2021-10-02"},{"lineNumber":194,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":195,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":196,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":197,"author":{"gitId":"alvintan01"},"content":"     * Prints out help table with the accepted commands and their respective syntaxes.","lastModifiedDate":"2021-10-07"},{"lineNumber":198,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":199,"author":{"gitId":"alvintan01"},"content":"     * @param commandSyntaxes Arraylist of the commandSyntax to be printed.","lastModifiedDate":"2021-10-07"},{"lineNumber":200,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":201,"author":{"gitId":"alvintan01"},"content":"    public void printHelpMessage(ArrayList\u003cCommandSyntax\u003e commandSyntaxes) {","lastModifiedDate":"2021-10-07"},{"lineNumber":202,"author":{"gitId":"alvintan01"},"content":"        int commandWidth \u003d CommandSyntax.COMMAND.length();","lastModifiedDate":"2021-10-07"},{"lineNumber":203,"author":{"gitId":"alvintan01"},"content":"        int commandSyntaxWidth \u003d CommandSyntax.COMMAND_SYNTAX.length();","lastModifiedDate":"2021-10-07"},{"lineNumber":204,"author":{"gitId":"alvintan01"},"content":"        for (CommandSyntax commandSyntax : commandSyntaxes) {","lastModifiedDate":"2021-10-07"},{"lineNumber":205,"author":{"gitId":"alvintan01"},"content":"            commandWidth \u003d Math.max(commandWidth, commandSyntax.getCommandName().length());","lastModifiedDate":"2021-10-07"},{"lineNumber":206,"author":{"gitId":"alvintan01"},"content":"            commandSyntaxWidth \u003d Math.max(commandSyntaxWidth, commandSyntax.getCommandSyntax().length());","lastModifiedDate":"2021-10-07"},{"lineNumber":207,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":208,"author":{"gitId":"alvintan01"},"content":"        int[] columnWidths \u003d {commandWidth, commandSyntaxWidth};","lastModifiedDate":"2021-10-07"},{"lineNumber":209,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":210,"author":{"gitId":"alvintan01"},"content":"        String commandFormat \u003d \"| %1$-\" + commandWidth + \"s | \";","lastModifiedDate":"2021-10-07"},{"lineNumber":211,"author":{"gitId":"alvintan01"},"content":"        String commandSyntaxFormat \u003d \"%1$-\" + commandSyntaxWidth + \"s | \";","lastModifiedDate":"2021-10-07"},{"lineNumber":212,"author":{"gitId":"alvintan01"},"content":"        String[] formats \u003d {commandFormat, commandSyntaxFormat};","lastModifiedDate":"2021-10-07"},{"lineNumber":213,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":214,"author":{"gitId":"alvintan01"},"content":"        StringBuilder headers \u003d new StringBuilder();","lastModifiedDate":"2021-10-07"},{"lineNumber":215,"author":{"gitId":"alvintan01"},"content":"        for (int i \u003d 0; i \u003c CommandSyntax.NO_OF_COLUMNS; i++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":216,"author":{"gitId":"alvintan01"},"content":"            headers.append(String.format(formats[i], centerString(columnWidths[i], CommandSyntax.COLUMNS[i])));","lastModifiedDate":"2021-10-07"},{"lineNumber":217,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":218,"author":{"gitId":"alvintan01"},"content":"        System.out.println(\"Welcome to the help page.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":219,"author":{"gitId":"alvintan01"},"content":"        System.out.println(\"Note that parameters in {curly braces} are optional.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":220,"author":{"gitId":"alvintan01"},"content":"        System.out.println(\"Parameters in [square braces] indicate that at least one of the parameter(s) must be \"","lastModifiedDate":"2021-10-07"},{"lineNumber":221,"author":{"gitId":"alvintan01"},"content":"                + \"provided.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":222,"author":{"gitId":"alvintan01"},"content":"        printHeaderBorder(CommandSyntax.NO_OF_COLUMNS, columnWidths);","lastModifiedDate":"2021-10-07"},{"lineNumber":223,"author":{"gitId":"alvintan01"},"content":"        System.out.println(headers);","lastModifiedDate":"2021-10-07"},{"lineNumber":224,"author":{"gitId":"alvintan01"},"content":"        printHeaderBorder(CommandSyntax.NO_OF_COLUMNS, columnWidths);","lastModifiedDate":"2021-10-07"},{"lineNumber":225,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":226,"author":{"gitId":"alvintan01"},"content":"        for (CommandSyntax commandSyntax : commandSyntaxes) {","lastModifiedDate":"2021-10-07"},{"lineNumber":227,"author":{"gitId":"alvintan01"},"content":"            String row \u003d String.format(commandFormat, centerString(commandWidth, commandSyntax.getCommandName()))","lastModifiedDate":"2021-10-07"},{"lineNumber":228,"author":{"gitId":"alvintan01"},"content":"                    + String.format(commandSyntaxFormat, centerString(commandSyntaxWidth,","lastModifiedDate":"2021-10-07"},{"lineNumber":229,"author":{"gitId":"alvintan01"},"content":"                    commandSyntax.getCommandSyntax()));","lastModifiedDate":"2021-10-07"},{"lineNumber":230,"author":{"gitId":"alvintan01"},"content":"            System.out.println(row);","lastModifiedDate":"2021-10-07"},{"lineNumber":231,"author":{"gitId":"alvintan01"},"content":"            printRowBorder(CommandSyntax.NO_OF_COLUMNS, columnWidths);","lastModifiedDate":"2021-10-07"},{"lineNumber":232,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":233,"author":{"gitId":"alvintan01"},"content":"        System.out.println(\"For more information, refer to User Guide: https://ay2122s1-cs2113t-t10-1.github.io/tp/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":234,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":235,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":233,"RemusTeo":2}},{"path":"src/test/java/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"public class ParserTest {","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"    public void extractCommand_oneSeparator_expectTwoParts() {","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"        String inputString \u003d \"list i/1\";","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"        String[] stringParts \u003d Parser.parseCommand(inputString);","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"        assertEquals(2, stringParts.length);","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    public void parseParameters_oneSeparator_expectTwoParts() {","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"        String inputString \u003d \"i/1 n/name\";","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"        HashMap\u003cString, String\u003e parametersValues \u003d Parser.parseParameters(inputString);","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"        assertEquals(2, parametersValues.keySet().size());","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":23}}]
