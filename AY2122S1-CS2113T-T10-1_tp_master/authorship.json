[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"RemusTeo"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"RemusTeo":1,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Alvin Tan Guo Hao | [Github](https://github.com/alvintan01) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Aeron Teo | [Github](https://github.com/a-tph) | [Portfolio](docs/team/a-tph.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"RemusTeo"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Teo Chin Kai Remus | [Github](https://github.com/RemusTeo) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"deonchung"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Deon Chung Hui | [Github](https://github.com/deonchung) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"jiangweichen835"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jiang Weichen | [Github](https://github.com/jiangweichen835) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"alvintan01":1,"RemusTeo":1,"deonchung":1,"-":4,"a-tph":1,"jiangweichen835":2}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"# MediVault","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"MediVault is a Command Line Interface (CLI) application that will help to","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"manage medication supplies within a pharmacy. It will solve the issue of","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"tracking the stocks manually, discrepancies between actual and physical","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"stocks as well as make the user\u0027s life easier by keeping track of expired","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"medication.","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"a-tph":6,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"MediVault is a Command Line Interface (CLI) application that will help to ","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"manage medication supplies within a pharmacy. It will solve the issue of ","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"tracking the stocks manually, discrepancies between actual and physical ","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"stocks as well as make the user\u0027s life easier by keeping track of expired ","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"medication.","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"## Contents","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"* [Features](#features)","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"  * [Add medication stock](#adding-a-medication-stock-add)","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"  * [Delete medication stock](#deleting-a-medication-stock-delete)","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"  * [Update medication stock](#updating-medication-stock-information-update)","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"  * [List medication stock](#listing-medication-stock--list)","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"  * [Purge data](#purging-existing-data--purge)","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"  * [Help](#showing-help-page--help)","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"  * [Exit](#exiting-medivault--exit)","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"* [FAQ](#faq)","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"2. Download the latest version of `MediVault.jar` from [here](https://github.com/AY2122S1-CS2113T-T10-1/tp/releases/tag/v1.0).","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"Notes about the commands:","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"* Parameters enclosed in `[]` are **one or more** optional parameters.","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"* Parameters enclosed in `{}` are **totally** optional parameters.","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"* Parameters you specify can be in any order.","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"  * E.g. `update i/1 q/100 m/200` and `update i/1 m/200 q/100` are both","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"  acceptable.","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"* MediVault ignores additional parameters provided when commands do not","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"require one.","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"* If you specify the same parameter multiple times, MediVault will accept ","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"the last occurrence.","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"  * E.g. `delete i/2 i/1`, MediVault interprets the command as `delete i/1`.","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"* MediVault\u0027s commands are case-insensitive.","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"* Dates in the `e/EXPIRY_DATE` field are in `DD-MM-YYYY` format.","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"a-tph"},"content":"### Adding a medication stock: `add`","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"deonchung"},"content":"Adds medication into the inventory.","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"deonchung"},"content":"* If medication exists, description and maximum quantity will be optional parameters. If you include `d/DESCRIPTION m/MAX_QUANTITY` parameter, it will be ignored, MediVault will add with the existing description and existing maximum quantity.","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"deonchung"},"content":"Format: `add n/NAME p/PRICE q/QUANTITY e/EXPIRY_DATE [d/DESCRIPTION m/MAX_QUANTITY]`","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"deonchung"},"content":"Example 1 (If medication exists): `add n/panadol p/5 q/50 e/19-09-2021`","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"deonchung"},"content":"Expected Output 1: ","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"deonchung"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"deonchung"},"content":"Medication added: panadol","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"deonchung"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"deonchung"},"content":"| ID |  NAME   | PRICE | QUANTITY | EXPIRY_DATE |                   DESCRIPTION                    | MAX_QUANTITY | ","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"deonchung"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"deonchung"},"content":"| 1  | panadol | $5.00 |    50    | 19-09-2021  | BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS |     1000     | ","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"deonchung"},"content":"+----+---------+-------+----------+-------------+--------------------------------------------------+--------------+","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"deonchung"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"deonchung"},"content":"Example 2 (If medication does not exists): `add n/vicodin q/10 p/10 e/02-11-2021 d/popular drug for treating pain m/500`","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"deonchung"},"content":"Expected Output 2:","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"deonchung"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"deonchung"},"content":"Medication added: vicodin","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"deonchung"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"deonchung"},"content":"| ID |  NAME   | PRICE  | QUANTITY | EXPIRY_DATE |          DESCRIPTION           | MAX_QUANTITY | ","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"deonchung"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"deonchung"},"content":"| 2  | vicodin | $10.00 |    10    | 02-11-2021  | popular drug for treating pain |     500      | ","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"deonchung"},"content":"+----+---------+--------+----------+-------------+--------------------------------+--------------+","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"deonchung"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"a-tph"},"content":"### Deleting a medication stock: `delete`","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"RemusTeo"},"content":"Deletes medication from the inventory by specifying stock Id.","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"RemusTeo"},"content":"Format: `delete i/STOCK_ID`","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"RemusTeo"},"content":"Example: `delete i/3`","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"a-tph"},"content":"Expected output:","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"RemusTeo"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"RemusTeo"},"content":"Medication deleted: Stock_Id\u003d3","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"RemusTeo"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"a-tph"},"content":"### Updating medication stock information: `update`","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"a-tph"},"content":"Edit an existing medication information in the inventory.","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"a-tph"},"content":"* Edits the optional parameters specified by the stock Id that you input. ","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"a-tph"},"content":"  * The stock Id must exist in MediVault.","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"a-tph"},"content":"* You cannot update the stock Id.","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"a-tph"},"content":"* If you include the `n/NAME`, `d/DESCRIPTION` or `m/MAX_QUANTITY` parameter, ","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"a-tph"},"content":"MediVault updates all entries that has same existing medication name given the ","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"a-tph"},"content":"`i/STOCK_ID` with your input values for these parameters.","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":96,"author":{"gitId":"a-tph"},"content":"Format: `update i/STOCK_ID [n/NAME p/PRICE q/QUANTITY e/EXPIRY_DATE d/DESCRIPTION","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"a-tph"},"content":"m/MAX_QUANTITY]`","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":99,"author":{"gitId":"a-tph"},"content":"Example:","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"a-tph"},"content":"`update i/1 n/panadol p/20 q/50 e/01-12-2021 ","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"a-tph"},"content":"d/Best medicine to cure headache, fever and pains m/100`","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":103,"author":{"gitId":"a-tph"},"content":"Expected output:","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"a-tph"},"content":"Updated! Number of rows affected: 1","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"a-tph"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"a-tph"},"content":"| ID |  NAME   | PRICE  | QUANTITY | EXPIRY_DATE |                   DESCRIPTION                   | MAX_QUANTITY | ","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"a-tph"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"a-tph"},"content":"| 1  | panadol | $20.00 |    50    | 01-12-2021  | Best medicine to cure headache, fever and pains |     100      | ","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"a-tph"},"content":"+----+---------+--------+----------+-------------+-------------------------------------------------+--------------+","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"a-tph"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":113,"author":{"gitId":"a-tph"},"content":"### Listing medication stock : `list`","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"jiangweichen835"},"content":"Lists all existing medication in the inventory.","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"jiangweichen835"},"content":"* All parameters for list command are optional, you can choose to list medication by any of the parameters.","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"jiangweichen835"},"content":"* Example 1 demonstrates the list of all medication without parameters.","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"jiangweichen835"},"content":"* Example 2 demonstrates list by medication name.","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":119,"author":{"gitId":"jiangweichen835"},"content":"Format: `list {i/STOCK_ID n/NAME p/PRICE q/QUANTITY e/EXPIRY_DATE d/DESCRIPTION m/MAX_QUANTITY sort/COLUMN_NAME rsort/COLUMN_NAME}`","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":121,"author":{"gitId":"jiangweichen835"},"content":"Example 1: `list`","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"jiangweichen835"},"content":"Expected output:","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"jiangweichen835"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"jiangweichen835"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"jiangweichen835"},"content":"| ID |     NAME     | PRICE  | QUANTITY | EXPIRY_DATE |                    DESCRIPTION                     | MAX_QUANTITY |","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"jiangweichen835"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"jiangweichen835"},"content":"| 1  |   PANADOL    | $20.00 |    20    | 13-09-2021  |  BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS  |     1000     |","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"jiangweichen835"},"content":"+----+--------------+--------+----------+-------------+----------------------------------------------------+--------------+","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"jiangweichen835"},"content":"| 2  |   PANADOL    | $20.00 |    10    | 14-09-2021  |  BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS  |     1000     |","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"jiangweichen835"},"content":"+----+--------------+--------+----------+-------------+----------------------------------------------------+--------------+","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"jiangweichen835"},"content":"| 3  |   VICODIN    | $10.00 |    20    | 30-09-2021  |    POPULAR DRUG FOR TREATING ACUTE OR CHRONIC      |     500      |","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"jiangweichen835"},"content":"|    |              |        |          |             |         MODERATE TO MODERATELY SEVERE PAIN         |              |","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"jiangweichen835"},"content":"+----+--------------+--------+----------+-------------+----------------------------------------------------+--------------+","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"jiangweichen835"},"content":"| 4  | SIMVASTATIN  | $20.00 |    25    | 10-10-2021  |  TREATS HIGH CHOLESTEROL AND REDUCES THE RISK OF   |     800      |","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"jiangweichen835"},"content":"|    |              |        |          |             |                       STROKE                       |              |","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"jiangweichen835"},"content":"+----+--------------+--------+----------+-------------+----------------------------------------------------+--------------+","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"jiangweichen835"},"content":"| 5  |  LISINOPRIL  | $20.00 |    25    | 15-10-2021  |          USED FOR TREATING HYPOTHYROIDISM          |     800      |","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"jiangweichen835"},"content":"+----+--------------+--------+----------+-------------+----------------------------------------------------+--------------+","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"jiangweichen835"},"content":"| 6  | AZITHROMYCIN | $20.00 |    35    | 15-10-2021  |     USED FOR TREATING EAR, THROAT, AND SINUS       |     100      |","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"jiangweichen835"},"content":"|    |              |        |          |             |                     INFECTIONS                     |              |","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"jiangweichen835"},"content":"+----+--------------+--------+----------+-------------+----------------------------------------------------+--------------+","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"jiangweichen835"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"jiangweichen835"},"content":"Example 2: `list n/panadol`","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":147,"author":{"gitId":"a-tph"},"content":"Expected output:","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"jiangweichen835"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"jiangweichen835"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"jiangweichen835"},"content":"| ID |  NAME   | PRICE  | QUANTITY | EXPIRY_DATE |                   DESCRIPTION                    | MAX_QUANTITY |","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"jiangweichen835"},"content":"+\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"jiangweichen835"},"content":"| 1  | PANADOL | $20.00 |    20    | 13-09-2021  | BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS |     1000     |","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"jiangweichen835"},"content":"+----+---------+--------+----------+-------------+--------------------------------------------------+--------------+","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"jiangweichen835"},"content":"| 2  | PANADOL | $20.00 |    10    | 14-09-2021  | BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS |     1000     |","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"jiangweichen835"},"content":"+----+---------+--------+----------+-------------+--------------------------------------------------+--------------+","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"jiangweichen835"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"a-tph"},"content":"### Purging existing data : `purge`","lastModifiedDate":"2021-10-13"},{"lineNumber":159,"author":{"gitId":"alvintan01"},"content":"Deletes all data in MediVault.","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"alvintan01"},"content":"Format: `purge`","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"alvintan01"},"content":"Example: `purge`","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"a-tph"},"content":"Expected output:","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"alvintan01"},"content":"Are you sure you want to delete all data? (Y/N)","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"alvintan01"},"content":"Y","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"alvintan01"},"content":"All data has been cleared!","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"a-tph"},"content":"### Showing help page : `help`","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"alvintan01"},"content":"Displays the command syntax of all accepted commands by Medivault.","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"alvintan01"},"content":"Format:`help`","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"alvintan01"},"content":"Example: `help`","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"a-tph"},"content":"Expected output:","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"alvintan01"},"content":"Welcome to the help page.","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"alvintan01"},"content":"Note that parameters in {curly braces} are optional.","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"alvintan01"},"content":"Parameters in [square braces] indicate that at least one of the parameter(s) must be provided.","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"alvintan01"},"content":"+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"alvintan01"},"content":"| COMMAND |                                                   COMMAND SYNTAX                                                   | ","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"alvintan01"},"content":"+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"alvintan01"},"content":"|   add   | add n/NAME p/PRICE q/QUANTITY e/EXPIRY_DATE d/DESCRIPTION m/MAX_QUANTITY                                           | ","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"alvintan01"},"content":"+---------+--------------------------------------------------------------------------------------------------------------------+","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"alvintan01"},"content":"|  list   | list {i/STOCK_ID p/PRICE q/QUANTITY e/EXPIRY_DATE d/DESCRIPTION m/MAX_QUANTITY sort/COLUMN_NAME rsort/COLUMN NAME} | ","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"alvintan01"},"content":"+---------+--------------------------------------------------------------------------------------------------------------------+","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"alvintan01"},"content":"| update  | update i/STOCK_ID [n/NAME p/PRICE q/QUANTITY e/EXPIRY_DATE d/DESCRIPTION m/MAX_QUANTITY]                           | ","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"alvintan01"},"content":"+---------+--------------------------------------------------------------------------------------------------------------------+","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"alvintan01"},"content":"| delete  | delete i/STOCK_ID                                                                                                  | ","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"alvintan01"},"content":"+---------+--------------------------------------------------------------------------------------------------------------------+","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"alvintan01"},"content":"|  exit   | exit                                                                                                               | ","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"alvintan01"},"content":"+---------+--------------------------------------------------------------------------------------------------------------------+","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"alvintan01"},"content":"|  help   | help                                                                                                               | ","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"alvintan01"},"content":"+---------+--------------------------------------------------------------------------------------------------------------------+","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"alvintan01"},"content":"|  purge  | purge                                                                                                              | ","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"alvintan01"},"content":"+---------+--------------------------------------------------------------------------------------------------------------------+","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"alvintan01"},"content":"For more information, refer to User Guide: https://ay2122s1-cs2113t-t10-1.github.io/tp/","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"a-tph"},"content":"### Exiting MediVault : `exit`","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"alvintan01"},"content":"Exits MediVault.","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"alvintan01"},"content":"Format: `exit`","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"alvintan01"},"content":"Example: `exit`","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"a-tph"},"content":"Expected output:","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"alvintan01"},"content":"Quitting MediVault...","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":220,"author":{"gitId":"a-tph"},"content":"**A**: Unfortunately, MediVault does not support saving information to files in v1.0.","lastModifiedDate":"2021-10-13"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":224,"author":{"gitId":"alvintan01"},"content":"Syntax | Command Parameters","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"alvintan01"},"content":"------ | ------","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"alvintan01"},"content":"add | `add n/NAME p/PRICE q/QUANTITY e/EXPIRY_DATE d/DESCRIPTION m/MAX_QUANTITY`","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"alvintan01"},"content":"delete | `delete i/STOCK_ID`","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"alvintan01"},"content":"update | `update i/STOCK_ID [n/NAME p/PRICE q/QUANTITY e/EXPIRY_DATE d/DESCRIPTION m/MAX_QUANTITY]`","lastModifiedDate":"2021-10-12"},{"lineNumber":229,"author":{"gitId":"alvintan01"},"content":"list | `list {i/STOCK_ID p/PRICE q/QUANTITY e/EXPIRY_DATE d/DESCRIPTION m/MAX_QUANTITY sort/COLUMN_NAME rsort/COLUMN NAME}`","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"alvintan01"},"content":"purge | `no parameters`","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"alvintan01"},"content":"help | `no parameters`","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"alvintan01"},"content":"exit | `no parameters`","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"alvintan01":50,"RemusTeo":6,"deonchung":24,"-":26,"a-tph":87,"jiangweichen835":39}},{"path":"src/main/java/MediVault.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"import errors.InvalidCommand;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"import inventory.Dispense;","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import inventory.Order;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import parser.DateParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import parser.Parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":" * Helps to start the application, and initialise all variables.","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":" * It will continuously prompt for input from the user until \"EXIT\" is received.","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"public class MediVault {","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"    private ArrayList\u003cMedicine\u003e medicines;","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    private static Logger logger \u003d Logger.getLogger(\"MediVault\");","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    public MediVault() {","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"        medicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"        generateData();","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"        logger.log(Level.INFO, \"All variables are initialised.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"        logger.log(Level.INFO, \"Medivault is starting up\");","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"        new MediVault().run();","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"     * Prompts input from user and processes it indefinitely until \"EXIT\" is received.","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"    private void run() {","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"        String userInput \u003d \"\";","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"        // Loops till exit is received","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"        while (true) {","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"            System.out.print(\"\u003e \");","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"            // Reads user input","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"            try {","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"                if (Parser.processCommand(ui, userInput, medicines)) { // User entered exit","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"                    break;","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"                }","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"            } catch (InvalidCommand e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"                // Invalid Command","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"                ui.printInvalidCommandMessage();","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"                logger.log(Level.WARNING, \"An invalid command was entered!\");","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"        logger.log(Level.INFO, \"MediVault is shutting down\");","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"     * Temporary function to generate data to test features like delete and update. To be removed once add function is","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"     * complete.","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"    public void generateData() {","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Stock(\"PANADOL\", 20, 20, DateParser.stringToDate(\"13-9-2021\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"                    \"BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS\", 1000));","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"a-tph"},"content":"            medicines.add(new Stock(\"PANADOL\", 20, 10, DateParser.stringToDate(\"14-9-2021\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"a-tph"},"content":"                    \"BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS\", 1000));","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Stock(\"VICODIN\", 10, 20, DateParser.stringToDate(\"30-9-2021\"),","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"                    \"POPULAR DRUG FOR TREATING ACUTE OR CHRONIC MODERATE TO MODERATELY SEVERE PAIN\",","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"                    500));","lastModifiedDate":"2021-10-04"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Stock(\"SIMVASTATIN\", 20, 25, DateParser.stringToDate(\"10-10-2021\"),","lastModifiedDate":"2021-10-04"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"                    \"TREATS HIGH CHOLESTEROL AND REDUCES THE RISK OF STROKE\", 800));","lastModifiedDate":"2021-10-04"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Stock(\"LISINOPRIL\", 20, 25, DateParser.stringToDate(\"15-10-2021\"),","lastModifiedDate":"2021-10-04"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"                    \"USED FOR TREATING HYPOTHYROIDISM\", 800));","lastModifiedDate":"2021-10-04"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Stock(\"AZITHROMYCIN\", 20, 35, DateParser.stringToDate(\"15-10-2021\"),","lastModifiedDate":"2021-10-04"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"                    \"USED FOR TREATING EAR, THROAT, AND SINUS INFECTIONS\", 100));","lastModifiedDate":"2021-10-04"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Order(\"PANADOL\", 100, DateParser.stringToDate(\"9-10-2021\")));","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"            Order order \u003d new Order(\"VICODIN\", 50, DateParser.stringToDate(\"10-10-2021\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"            order.setDelivered();","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"alvintan01"},"content":"            medicines.add(order);","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Order(\"SIMVASTATIN\", 20, DateParser.stringToDate(\"11-10-2021\")));","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Order(\"LISINOPRIL\", 200, DateParser.stringToDate(\"12-10-2021\")));","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Order(\"AZITHROMYCIN\", 100, DateParser.stringToDate(\"13-10-2021\")));","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Dispense(\"PANADOL\", 10, \"S1234567A\",","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"deonchung"},"content":"                    DateParser.stringToDate(\"9-10-2021\"), \"Jane\",1));","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Dispense(\"VICODIN\", 10, \"S2345678B\",","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"deonchung"},"content":"                    DateParser.stringToDate(\"10-10-2021\"), \"Peter\",3));","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Dispense(\"SIMVASTATIN\", 10, \"S1234567A\",","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"deonchung"},"content":"                    DateParser.stringToDate(\"11-10-2021\"), \"Sam\",4));","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Dispense(\"LISINOPRIL\", 10, \"S3456789C\",","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"deonchung"},"content":"                    DateParser.stringToDate(\"12-10-2021\"), \"Jane\",5));","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"alvintan01"},"content":"            medicines.add(new Dispense(\"AZITHROMYCIN\", 10, \"S2345678B\",","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"deonchung"},"content":"                    DateParser.stringToDate(\"13-10-2021\"), \"Peter\",6));","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"alvintan01"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-04"},{"lineNumber":104,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Unable to parse date!\");","lastModifiedDate":"2021-10-04"},{"lineNumber":105,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":106,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":107,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":108,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":99,"deonchung":5,"a-tph":4}},{"path":"src/main/java/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":" * Represents the generic command. Helps to declare the abstract methods. It is inherited by all commands.","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    public abstract void execute(Ui ui, HashMap\u003cString, String\u003e parameters, ArrayList\u003cMedicine\u003e medicines);","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":15}},{"path":"src/main/java/command/CommandList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":" * Represents all the commands available in the application.","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"public class CommandList {","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"    public static final String ADD_DISPENSE \u003d \"adddispense\";","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"    public static final String ADD_STOCK \u003d \"addstock\";","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"    public static final String ADD_ORDER \u003d \"addorder\";","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"    public static final String ARCHIVE \u003d \"archive\";","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    public static final String DELETE_DISPENSE \u003d \"deletedispense\";","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"    public static final String DELETE_STOCK \u003d \"deletestock\";","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    public static final String DELETE_ORDER \u003d \"deleteorder\";","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    public static final String EXIT \u003d \"exit\";","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    public static final String HELP \u003d \"help\";","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    public static final String LIST_DISPENSE \u003d \"listdispense\";","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    public static final String LIST_STOCK \u003d \"liststock\";","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    public static final String LIST_ORDER \u003d \"listorder\";","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    public static final String PURGE \u003d \"purge\";","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    public static final String RECEIVE_ORDER \u003d \"receiveorder\";","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    public static final String UNDO \u003d \"undo\";","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"    public static final String UPDATE_STOCK \u003d \"updatestock\";","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    public static final String UPDATE_DISPENSE \u003d \"updatedispense\";","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    public static final String UPDATE_ORDER \u003d \"updateorder\";","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":26}},{"path":"src/main/java/command/CommandParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":" * Represents all the commands parameters used in the application.","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"public class CommandParameters {","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"    public static final String CUSTOMER_ID \u003d \"c\";","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"    public static final String DATE \u003d \"d\";","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"    public static final String DESCRIPTION \u003d \"d\";","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"    public static final String EXPIRY_DATE \u003d \"e\";","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    public static final String ID \u003d \"i\";","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"    public static final String MAX_QUANTITY \u003d \"m\";","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    public static final String NAME \u003d \"n\";","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    public static final String PRICE \u003d \"p\";","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    public static final String QUANTITY \u003d \"q\";","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    public static final String REVERSED_SORT \u003d \"rsort\";","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    public static final String SORT \u003d \"sort\";","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    public static final String STAFF \u003d \"s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    public static final String STOCK_ID \u003d \"sid\";","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":21}},{"path":"src/main/java/command/CommandSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"deonchung"},"content":"import parser.DispenseValidator;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"deonchung"},"content":"import parser.MedicineValidator;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import parser.StockValidator;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":" * Contains all the valid command syntax accepted by the application. Also contains methods to validate if the","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":" * parameter and its value is valid for a given command.","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"public class CommandSyntax {","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    private String commandName;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    private String commandSyntax;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    public static final String COMMAND \u003d \"COMMAND\";","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    public static final String COMMAND_SYNTAX \u003d \"COMMAND SYNTAX\";","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    public static final String[] COLUMNS \u003d {COMMAND, COMMAND_SYNTAX};","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"    public static final int NO_OF_COLUMNS \u003d 2;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    public static final String ADD_DISPENSE_COMMAND \u003d \"adddispense n/NAME q/QUANTITY c/CUSTOMER_ID s/STAFF_NAME\";","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    public static final String ADD_STOCK_COMMAND \u003d \"addstock n/NAME p/PRICE q/QUANTITY e/EXPIRY_DATE \"","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"            + \"d/DESCRIPTION m/MAX_QUANTITY\";","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"    public static final String DELETE_STOCK_COMMAND \u003d \"deletestock i/ID\";","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    public static final String EXIT_COMMAND \u003d \"exit\";","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"    public static final String HELP_COMMAND \u003d \"help\";","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    public static final String LIST_DISPENSE_COMMAND \u003d \"listdispense {i/ID q/QUANTITY c/CUSTOMER_ID d/DATE \"","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"            + \"s/STAFF_NAME sid/STOCK_ID}\";","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"RemusTeo"},"content":"    public static final String LIST_ORDER_COMMAND \u003d \"listorder {i/ID n/NAME q/QUANTITY d/DATE s/STATUS}\";","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"    public static final String LIST_STOCK_COMMAND \u003d \"liststock {i/ID p/PRICE q/QUANTITY e/EXPIRY_DATE \"","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"            + \"d/DESCRIPTION m/MAX_QUANTITY sort/COLUMN_NAME rsort/COLUMN NAME}\";","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"    public static final String PURGE_COMMAND \u003d \"purge\";","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"    public static final String UPDATE_STOCK_COMMAND \u003d \"updatestock i/ID [n/NAME p/PRICE q/QUANTITY e/EXPIRY_DATE \"","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"            + \"d/DESCRIPTION m/MAX_QUANTITY]\";","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"    public CommandSyntax(String commandName, String commandSyntax) {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"        this.commandName \u003d commandName;","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"        this.commandSyntax \u003d commandSyntax;","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"    public String getCommandName() {","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"        return commandName;","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"    public void setCommandName(String commandName) {","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"        this.commandName \u003d commandName;","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"    public String getCommandSyntax() {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"        return commandSyntax;","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"    public void setCommandSyntax(String commandSyntax) {","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"        this.commandSyntax \u003d commandSyntax;","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"RemusTeo"},"content":"     * Helps to check if the parameters required are provided by the user.","lastModifiedDate":"2021-10-03"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"a-tph"},"content":"     * @param ui                         Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-03"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"     * @param parameters                 Parameters entered in by the user.","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"a-tph"},"content":"     * @param requiredParameters         Parameters required by the command.","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"a-tph"},"content":"     * @param optionalParameters         Parameters that are optional.","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"     * @param commandSyntax              The command\u0027s valid syntax.","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"a-tph"},"content":"     * @param requiresOptionalParameters Boolean value of whether command required optional parameters.","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"a-tph"},"content":"     * @return A boolean value indicating if the parameters required are entered by the user.","lastModifiedDate":"2021-10-03"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"    public static boolean containsInvalidParameters(Ui ui, HashMap\u003cString, String\u003e parameters,","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"a-tph"},"content":"                                                    String[] requiredParameters, String[] optionalParameters,","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"deonchung"},"content":"                                                    String commandSyntax, boolean requiresOptionalParameters) {","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"a-tph"},"content":"        int requiredParametersLength \u003d requiredParameters.length;","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"a-tph"},"content":"        int optionalParametersLength \u003d optionalParameters.length;","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"        // User did not provide parameters all the parameters","lastModifiedDate":"2021-10-03"},{"lineNumber":80,"author":{"gitId":"a-tph"},"content":"        if (parameters.keySet().size() \u003c requiredParametersLength) {","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"            ui.printInvalidParameter(\"\", commandSyntax);","lastModifiedDate":"2021-10-03"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"            return true;","lastModifiedDate":"2021-10-03"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":85,"author":{"gitId":"a-tph"},"content":"        for (String requiredParameter : requiredParameters) {","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"            if (!parameters.containsKey(requiredParameter)) { // Checks if required parameters are found","lastModifiedDate":"2021-10-03"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"                ui.printRequiredParameter(requiredParameter, commandSyntax);","lastModifiedDate":"2021-10-03"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"                return true;","lastModifiedDate":"2021-10-03"},{"lineNumber":89,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":91,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"a-tph"},"content":"        // Optional parameters not provided considered valid","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"a-tph"},"content":"        if (optionalParameters \u003d\u003d null || optionalParametersLength \u003d\u003d 0) {","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"a-tph"},"content":"            return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"a-tph"},"content":"        int emptyOptionalFieldCount \u003d parameters.size() - requiredParametersLength;","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"deonchung"},"content":"        if (emptyOptionalFieldCount \u003c\u003d 0 \u0026\u0026 requiresOptionalParameters) {","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"a-tph"},"content":"            ui.print(\"Please provide at least one optional field!\");","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"a-tph"},"content":"            return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"a-tph"},"content":"        // Combine both parameter array to check if optional parameter is valid","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"a-tph"},"content":"        String[] mergedParameters \u003d new String[requiredParametersLength + optionalParametersLength];","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"a-tph"},"content":"        System.arraycopy(requiredParameters, 0, mergedParameters, 0, requiredParametersLength);","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"a-tph"},"content":"        System.arraycopy(optionalParameters, 0, mergedParameters, requiredParametersLength, optionalParametersLength);","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"a-tph"},"content":"        for (String parameter : parameters.keySet()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"a-tph"},"content":"            boolean isValid \u003d false;","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"a-tph"},"content":"            for (String mergedParameter : mergedParameters) {","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"a-tph"},"content":"                if (mergedParameter.equalsIgnoreCase(parameter)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"a-tph"},"content":"                    isValid \u003d true;","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"a-tph"},"content":"                    break;","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"a-tph"},"content":"                }","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"a-tph"},"content":"            if (!isValid) {","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"a-tph"},"content":"                ui.print(\"Please enter a valid optional parameter!\");","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"a-tph"},"content":"                return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"alvintan01"},"content":"        return false;","lastModifiedDate":"2021-10-03"},{"lineNumber":123,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":124,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":125,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":126,"author":{"gitId":"a-tph"},"content":"     * Checks if parameter values are valid.","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":128,"author":{"gitId":"a-tph"},"content":"     * @param ui            Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-03"},{"lineNumber":129,"author":{"gitId":"a-tph"},"content":"     * @param parameters    HashMap Key-Value set for parameter and user specified parameter value.","lastModifiedDate":"2021-10-03"},{"lineNumber":130,"author":{"gitId":"a-tph"},"content":"     * @param medicines     Arraylist of all medicines.","lastModifiedDate":"2021-10-04"},{"lineNumber":131,"author":{"gitId":"a-tph"},"content":"     * @param commandSyntax The command\u0027s valid syntax.","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"a-tph"},"content":"     * @return A boolean value indicating whether parameter values are valid.","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":134,"author":{"gitId":"a-tph"},"content":"    public static boolean containsInvalidParameterValues(Ui ui, HashMap\u003cString, String\u003e parameters,","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"a-tph"},"content":"                                                         ArrayList\u003cMedicine\u003e medicines, String commandSyntax) {","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"a-tph"},"content":"        for (String parameter : parameters.keySet()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":137,"author":{"gitId":"a-tph"},"content":"            boolean isValid \u003d false;","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"a-tph"},"content":"            String parameterValue \u003d parameters.get(parameter);","lastModifiedDate":"2021-10-03"},{"lineNumber":139,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":140,"author":{"gitId":"a-tph"},"content":"            switch (parameter) {","lastModifiedDate":"2021-10-03"},{"lineNumber":141,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.PRICE:","lastModifiedDate":"2021-10-03"},{"lineNumber":142,"author":{"gitId":"alvintan01"},"content":"                isValid \u003d StockValidator.isValidPrice(ui, parameterValue);","lastModifiedDate":"2021-10-04"},{"lineNumber":143,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":144,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.QUANTITY:","lastModifiedDate":"2021-10-03"},{"lineNumber":145,"author":{"gitId":"deonchung"},"content":"                isValid \u003d MedicineValidator.isValidQuantity(ui, parameterValue);","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":147,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.EXPIRY_DATE:","lastModifiedDate":"2021-10-03"},{"lineNumber":148,"author":{"gitId":"alvintan01"},"content":"                isValid \u003d StockValidator.isValidExpiry(ui, parameterValue);","lastModifiedDate":"2021-10-04"},{"lineNumber":149,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":150,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.DESCRIPTION:","lastModifiedDate":"2021-10-03"},{"lineNumber":151,"author":{"gitId":"alvintan01"},"content":"                isValid \u003d StockValidator.isValidDescription(ui, parameterValue);","lastModifiedDate":"2021-10-04"},{"lineNumber":152,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":153,"author":{"gitId":"deonchung"},"content":"            case CommandParameters.NAME:","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"deonchung"},"content":"                isValid \u003d MedicineValidator.isValidName(ui, parameterValue);","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":156,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.MAX_QUANTITY:","lastModifiedDate":"2021-10-03"},{"lineNumber":157,"author":{"gitId":"alvintan01"},"content":"                isValid \u003d StockValidator.isValidMaxQuantity(ui, parameterValue);","lastModifiedDate":"2021-10-04"},{"lineNumber":158,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":159,"author":{"gitId":"alvintan01"},"content":"            case CommandParameters.ID:","lastModifiedDate":"2021-10-14"},{"lineNumber":160,"author":{"gitId":"alvintan01"},"content":"                isValid \u003d StockValidator.isValidStockId(ui, parameterValue, medicines);","lastModifiedDate":"2021-10-04"},{"lineNumber":161,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":162,"author":{"gitId":"alvintan01"},"content":"            case CommandParameters.SORT:","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"alvintan01"},"content":"            case CommandParameters.REVERSED_SORT:","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"alvintan01"},"content":"                isValid \u003d StockValidator.isValidColumn(ui, parameterValue);","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"alvintan01"},"content":"                break;","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"deonchung"},"content":"            case CommandParameters.CUSTOMER_ID:","lastModifiedDate":"2021-10-11"},{"lineNumber":167,"author":{"gitId":"deonchung"},"content":"                isValid \u003d DispenseValidator.isValidCustomerId(ui, parameterValue);","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"deonchung"},"content":"                break;","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"deonchung"},"content":"            case CommandParameters.STAFF:","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"deonchung"},"content":"                isValid \u003d DispenseValidator.isValidStaffName(ui, parameterValue);","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"deonchung"},"content":"                break;","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"a-tph"},"content":"            default:","lastModifiedDate":"2021-10-03"},{"lineNumber":173,"author":{"gitId":"a-tph"},"content":"                ui.printInvalidParameter(parameter, commandSyntax);","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-06"},{"lineNumber":175,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":176,"author":{"gitId":"a-tph"},"content":"            if (!isValid) {","lastModifiedDate":"2021-10-03"},{"lineNumber":177,"author":{"gitId":"a-tph"},"content":"                return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":178,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":179,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":180,"author":{"gitId":"a-tph"},"content":"        return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":181,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":182,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":86,"RemusTeo":2,"deonchung":13,"a-tph":81}},{"path":"src/main/java/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package command;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":" * Helps to process the exit command and prints the exit message.","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    public void execute(Ui ui, HashMap\u003cString, String\u003e parameters, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"        ui.printExit();","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"alvintan01":20}},{"path":"src/main/java/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RemusTeo"},"content":"package command;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"RemusTeo"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"RemusTeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"RemusTeo"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"RemusTeo"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"RemusTeo"},"content":" * Display help message containing command usage information.","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"RemusTeo"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"RemusTeo"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"RemusTeo"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    public void execute(Ui ui, HashMap\u003cString, String\u003e parameters, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"        ArrayList\u003cCommandSyntax\u003e commandSyntaxes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.ADD_STOCK, CommandSyntax.ADD_STOCK_COMMAND));","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.LIST_STOCK, CommandSyntax.LIST_STOCK_COMMAND));","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.UPDATE_STOCK, CommandSyntax.UPDATE_STOCK_COMMAND));","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.DELETE_STOCK, CommandSyntax.DELETE_STOCK_COMMAND));","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.ADD_DISPENSE, CommandSyntax.ADD_DISPENSE_COMMAND));","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"RemusTeo"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.LIST_ORDER, CommandSyntax.LIST_ORDER_COMMAND));","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.EXIT, CommandSyntax.EXIT_COMMAND));","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.HELP, CommandSyntax.HELP_COMMAND));","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"        commandSyntaxes.add(new CommandSyntax(CommandList.PURGE, CommandSyntax.PURGE_COMMAND));","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"        ui.printHelpMessage(commandSyntaxes);","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"RemusTeo"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"alvintan01":13,"RemusTeo":17}},{"path":"src/main/java/command/PurgeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":" * Helps to process the purge command and prompts the user for confirmation.","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"public class PurgeCommand extends Command {","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    public void execute(Ui ui, HashMap\u003cString, String\u003e parameters, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"        ui.print(\"Are you sure you want to delete all data? (Y/N)\");","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"        if (\"Y\".equals(in.nextLine())) {","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"            medicines.clear();","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"All data has been cleared!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"        } else {","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Purge aborted!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":26}},{"path":"src/main/java/command/dispense/AddDispense.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"deonchung"},"content":"package command.dispense;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"deonchung"},"content":"import command.Command;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"deonchung"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"deonchung"},"content":"import command.CommandSyntax;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"deonchung"},"content":"import inventory.Dispense;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"deonchung"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"deonchung"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"deonchung"},"content":"import parser.MedicineManager;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"deonchung"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"deonchung"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"deonchung"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"deonchung"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"deonchung"},"content":" * Dispense medication based on user input.","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"deonchung"},"content":" * User input includes medication name, quantity to dispense, Customer\u0027s NRIC and Staff name.","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"deonchung"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"deonchung"},"content":"public class AddDispense extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"deonchung"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"deonchung"},"content":"    public void execute(Ui ui, HashMap\u003cString, String\u003e parameters, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"deonchung"},"content":"        String medicationName \u003d parameters.get(CommandParameters.NAME);","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"deonchung"},"content":"        String quantity \u003d parameters.get(CommandParameters.QUANTITY);","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"deonchung"},"content":"        String customerId \u003d parameters.get(CommandParameters.CUSTOMER_ID);","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"deonchung"},"content":"        String staffName \u003d parameters.get(CommandParameters.STAFF);","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"deonchung"},"content":"        String[] requiredParameters \u003d {CommandParameters.NAME, CommandParameters.QUANTITY,","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"deonchung"},"content":"                                       CommandParameters.CUSTOMER_ID, CommandParameters.STAFF};","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"deonchung"},"content":"        String[] optionalParameters \u003d {};","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"deonchung"},"content":"        if (CommandSyntax.containsInvalidParameters(ui, parameters, requiredParameters, optionalParameters,","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"                CommandSyntax.ADD_DISPENSE_COMMAND, false)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"deonchung"},"content":"            return;","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"        if (CommandSyntax.containsInvalidParameterValues(ui, parameters, medicines,","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"                CommandSyntax.ADD_DISPENSE_COMMAND)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"deonchung"},"content":"            return;","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"deonchung"},"content":"        int dispenseQuantity \u003d Integer.parseInt(quantity);","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"deonchung"},"content":"        int quantityLeftToDispense \u003d dispenseQuantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"deonchung"},"content":"        int totalStock \u003d MedicineManager.getTotalStockQuantity(medicines, medicationName);","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"deonchung"},"content":"        int totalColumnLeft \u003d MedicineManager.getTotalRows(medicines, medicationName);","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"deonchung"},"content":"        Date dispenseDate \u003d new Date(); //dispense date will be today\u0027s date","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"deonchung"},"content":"        ArrayList\u003cMedicine\u003e filteredMedicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"deonchung"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"deonchung"},"content":"            if (medicine instanceof Stock) { //Ensure that it is a medicine object","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"deonchung"},"content":"                filteredMedicines.add(medicine);","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"        //filteredMedicines.sort(new StockComparator(CommandParameters.EXPIRY_DATE, false));","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"deonchung"},"content":"        for (Medicine medicine : filteredMedicines) {","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"deonchung"},"content":"            if (medicine instanceof Stock) {","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"deonchung"},"content":"                Stock existingStock \u003d (Stock) medicine;","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"deonchung"},"content":"                String existingName \u003d existingStock.getMedicineName().toUpperCase();","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"deonchung"},"content":"                int existingQuantity \u003d existingStock.getQuantity();","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"deonchung"},"content":"                int existingId \u003d existingStock.getStockID();;","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"deonchung"},"content":"                Date existingExpiry \u003d existingStock.getExpiry();","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"deonchung"},"content":"                boolean medicationExist \u003d existingName.equals(medicationName.toUpperCase());","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"deonchung"},"content":"                if (medicationExist \u0026\u0026 (dispenseQuantity \u003e totalStock)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"deonchung"},"content":"                    ui.print(\"Unable to Dispense! Dispense quantity is more than stock available!\");","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"deonchung"},"content":"                    ui.print(\"Dispense quantity: \" + dispenseQuantity + \" Stock available: \" + totalStock);","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"deonchung"},"content":"                    return;","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"deonchung"},"content":"                }","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"deonchung"},"content":"                if (medicationExist) {","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"deonchung"},"content":"                    if (existingQuantity \u003e\u003d quantityLeftToDispense) {","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"deonchung"},"content":"                        existingStock.setQuantity(existingQuantity - quantityLeftToDispense);","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"deonchung"},"content":"                        medicines.add(new Dispense(medicationName, dispenseQuantity, customerId, dispenseDate,","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"deonchung"},"content":"                                staffName, existingId));","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"deonchung"},"content":"                        ui.print(\"Dispensed:\" + medicationName + \" Quantity:\" + quantityLeftToDispense + \" Expiry \"","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"deonchung"},"content":"                                + \"date:\" + existingExpiry);","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"deonchung"},"content":"                        return;","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"deonchung"},"content":"                    }","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"deonchung"},"content":"                    if (totalColumnLeft \u003e 1 \u0026\u0026 existingQuantity \u003c dispenseQuantity) {","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"deonchung"},"content":"                        quantityLeftToDispense \u003d quantityLeftToDispense - existingQuantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"deonchung"},"content":"                        existingStock.setQuantity(0);","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"deonchung"},"content":"                        ui.print(\"Dispensed:\" + medicationName + \" Quantity:\" + existingQuantity + \" Expiry \"","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"deonchung"},"content":"                                + \"date:\" + existingExpiry);","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"deonchung"},"content":"                    }","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"deonchung"},"content":"                    totalColumnLeft--;","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"deonchung"},"content":"                }","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"deonchung"},"content":"        ui.print(\"Medicine not available!\");","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"deonchung"},"content":"        return;","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"deonchung"},"content":"}","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"alvintan01":5,"deonchung":100}},{"path":"src/main/java/command/medicine/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"deonchung"},"content":"package command.medicine;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"deonchung"},"content":"import command.Command;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"deonchung"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"deonchung"},"content":"import command.CommandSyntax;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"deonchung"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"deonchung"},"content":"import parser.DateParser;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"deonchung"},"content":"import parser.MedicineManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"import parser.StockValidator;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"deonchung"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"deonchung"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"deonchung"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"deonchung"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"deonchung"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"deonchung"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"deonchung"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"deonchung"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"deonchung"},"content":" * Add medication based on user input.","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"deonchung"},"content":" * User input include name, price, quantity, expiry date, description and maximum quantity of medication.","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"deonchung"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"deonchung"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"deonchung"},"content":"    private static Logger logger \u003d Logger.getLogger(\"AddCommand\");","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"deonchung"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    public void execute(Ui ui, HashMap\u003cString, String\u003e parameters, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"deonchung"},"content":"        logger.log(Level.INFO, \"Start addition of stock\");","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"deonchung"},"content":"        boolean nameExist \u003d false;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"deonchung"},"content":"        String nameToAdd \u003d parameters.get(CommandParameters.NAME);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"deonchung"},"content":"        Stock existingStock \u003d null;","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"deonchung"},"content":"        String[] optionalParameters \u003d {};","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"deonchung"},"content":"        if (parameters.containsKey(CommandParameters.NAME)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"deonchung"},"content":"            nameToAdd \u003d parameters.get(CommandParameters.NAME);","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"deonchung"},"content":"            for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"deonchung"},"content":"                if (medicine instanceof Stock \u0026\u0026 medicine.getMedicineName().equals(nameToAdd.toUpperCase())) {","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"deonchung"},"content":"                    existingStock \u003d (Stock) medicine;","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"deonchung"},"content":"                    nameExist \u003d true;","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"deonchung"},"content":"                    break;","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"deonchung"},"content":"                }","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"deonchung"},"content":"        if (nameExist) {","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"deonchung"},"content":"            String[] requiredParameters \u003d {CommandParameters.NAME, CommandParameters.PRICE,","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"deonchung"},"content":"                                           CommandParameters.QUANTITY, CommandParameters.EXPIRY_DATE};","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"deonchung"},"content":"            if (checkValidParametersAndValues(ui, parameters, medicines, requiredParameters, optionalParameters)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"deonchung"},"content":"                return;","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"deonchung"},"content":"            String quantityToAdd \u003d parameters.get(CommandParameters.QUANTITY);","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"deonchung"},"content":"            String expiryToAdd \u003d parameters.get(CommandParameters.EXPIRY_DATE);","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"deonchung"},"content":"            Date formatExpiry \u003d null;","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"deonchung"},"content":"            try {","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"deonchung"},"content":"                formatExpiry \u003d DateParser.stringToDate(expiryToAdd);","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"deonchung"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"deonchung"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"deonchung"},"content":"            int quantity \u003d Integer.parseInt(quantityToAdd);","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"deonchung"},"content":"            boolean isValidDate \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"deonchung"},"content":"                    StockValidator.dateValidityChecker(ui, medicines, formatExpiry, nameToAdd);","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"deonchung"},"content":"            if (!isValidDate) {","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"deonchung"},"content":"                logger.log(Level.WARNING, \"Invalid Date is specified by user\");","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"deonchung"},"content":"                logger.log(Level.INFO, \"Unsuccessful addition of stock\");","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"deonchung"},"content":"                return;","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"deonchung"},"content":"            int existingMaxQuantity \u003d existingStock.getMaxQuantity();","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"deonchung"},"content":"            int totalStock \u003d MedicineManager.getTotalStockQuantity(medicines, nameToAdd);","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"deonchung"},"content":"            assert totalStock \u003e 0 : \"Total Stock should be more than 0\";","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"deonchung"},"content":"            boolean isValidQuantity \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"deonchung"},"content":"                    StockValidator.quantityValidityChecker(ui, (totalStock + quantity),","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"deonchung"},"content":"                            existingMaxQuantity);","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"deonchung"},"content":"            if (!isValidQuantity) {","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"deonchung"},"content":"                logger.log(Level.WARNING, \"Invalid Quantity is specified by user\");","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"deonchung"},"content":"                logger.log(Level.INFO, \"Unsuccessful addition of stock\");","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"deonchung"},"content":"                return;","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"deonchung"},"content":"            String existingDescription \u003d existingStock.getDescription();","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"deonchung"},"content":"            String priceToAdd \u003d parameters.get(CommandParameters.PRICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"deonchung"},"content":"            double price \u003d Double.parseDouble(priceToAdd);","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"deonchung"},"content":"            addMedicine(ui, medicines, nameToAdd, existingDescription, price,","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"deonchung"},"content":"                    quantity, formatExpiry, existingMaxQuantity);","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"deonchung"},"content":"        } else {","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"deonchung"},"content":"            String[] requiredParameters \u003d {CommandParameters.NAME, CommandParameters.PRICE,","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"deonchung"},"content":"                                           CommandParameters.QUANTITY, CommandParameters.EXPIRY_DATE,","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"deonchung"},"content":"                                           CommandParameters.DESCRIPTION, CommandParameters.MAX_QUANTITY};","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"deonchung"},"content":"            if (checkValidParametersAndValues(ui, parameters, medicines, requiredParameters, optionalParameters)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"deonchung"},"content":"                return;","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"deonchung"},"content":"            String priceToAdd \u003d parameters.get(CommandParameters.PRICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"deonchung"},"content":"            String quantityToAdd \u003d parameters.get(CommandParameters.QUANTITY);","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"deonchung"},"content":"            String expiryToAdd \u003d parameters.get(CommandParameters.EXPIRY_DATE);","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"deonchung"},"content":"            String descriptionToAdd \u003d parameters.get(CommandParameters.DESCRIPTION);","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"deonchung"},"content":"            String maxQuantityToAdd \u003d parameters.get(CommandParameters.MAX_QUANTITY);","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"deonchung"},"content":"            Date formatExpiry \u003d null;","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"deonchung"},"content":"            try {","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"deonchung"},"content":"                formatExpiry \u003d DateParser.stringToDate(expiryToAdd);","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"deonchung"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"deonchung"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"deonchung"},"content":"            int maxQuantity \u003d Integer.parseInt(maxQuantityToAdd);","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"deonchung"},"content":"            int quantity \u003d Integer.parseInt(quantityToAdd);","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"deonchung"},"content":"            double price \u003d Double.parseDouble(priceToAdd);","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"deonchung"},"content":"            addMedicine(ui, medicines, nameToAdd, descriptionToAdd, price, quantity, formatExpiry, maxQuantity);","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":126,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":127,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"deonchung"},"content":"     * Check if input contains Invalid Parameters and Invalid Parameter Values.","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"deonchung"},"content":"     * @param ui                    Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"deonchung"},"content":"     * @param parameters            The parameter that is not found.","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"deonchung"},"content":"     * @param medicines             List of all medicines.","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"deonchung"},"content":"     * @param requiredParameters    The required parameters to check.","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"deonchung"},"content":"     * @param optionalParameters    The optional parameters to check.","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"deonchung"},"content":"     * @return                      Boolean value indicating if parameter and parameter values are valid.","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"deonchung"},"content":"    private boolean checkValidParametersAndValues(Ui ui, HashMap\u003cString, String\u003e parameters,","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"deonchung"},"content":"                                                  ArrayList\u003cMedicine\u003e medicines, String[] requiredParameters,","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"deonchung"},"content":"                                                  String[] optionalParameters) {","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"deonchung"},"content":"        if (CommandSyntax.containsInvalidParameters(ui, parameters, requiredParameters, optionalParameters,","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"alvintan01"},"content":"                CommandSyntax.ADD_STOCK_COMMAND, false)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":143,"author":{"gitId":"deonchung"},"content":"            logger.log(Level.WARNING, \"Invalid parameter is specified by user\");","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"deonchung"},"content":"            logger.log(Level.INFO, \"Unsuccessful addition of stock\");","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"deonchung"},"content":"            return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"alvintan01"},"content":"        if (CommandSyntax.containsInvalidParameterValues(ui, parameters, medicines, CommandSyntax.ADD_STOCK_COMMAND)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":149,"author":{"gitId":"deonchung"},"content":"            logger.log(Level.WARNING, \"Invalid parameter is specified by user\");","lastModifiedDate":"2021-10-11"},{"lineNumber":150,"author":{"gitId":"deonchung"},"content":"            logger.log(Level.INFO, \"Unsuccessful addition of stock\");","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"deonchung"},"content":"            return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"deonchung"},"content":"        return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"deonchung"},"content":"     * Add medication based on user input.","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"deonchung"},"content":"     * @param ui            Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"deonchung"},"content":"     * @param medicines     List of all medicines.","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"deonchung"},"content":"     * @param name          Name of medication to add.","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"deonchung"},"content":"     * @param description   Description of medication to add.","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"deonchung"},"content":"     * @param price         Price of medication to add.","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"deonchung"},"content":"     * @param quantity      Quantity of medication to add.","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"deonchung"},"content":"     * @param expiryDate    Expiry Date of medication to add.","lastModifiedDate":"2021-10-11"},{"lineNumber":166,"author":{"gitId":"deonchung"},"content":"     * @param maxQuantity   Maximum Quantity of medication to add.","lastModifiedDate":"2021-10-11"},{"lineNumber":167,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"deonchung"},"content":"    private void addMedicine(Ui ui, ArrayList\u003cMedicine\u003e medicines, String name, String description,","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"deonchung"},"content":"                             double price, int quantity, Date expiryDate, int maxQuantity) {","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"deonchung"},"content":"        Stock stock \u003d new Stock(name, price, quantity, expiryDate, description, maxQuantity);","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"deonchung"},"content":"        medicines.add(stock);","lastModifiedDate":"2021-10-08"},{"lineNumber":172,"author":{"gitId":"deonchung"},"content":"        ui.print(\"Medication added: \" + name);","lastModifiedDate":"2021-10-08"},{"lineNumber":173,"author":{"gitId":"deonchung"},"content":"        ui.printStock(stock);","lastModifiedDate":"2021-10-08"},{"lineNumber":174,"author":{"gitId":"deonchung"},"content":"        logger.log(Level.INFO, \"Successful addition of stock\");","lastModifiedDate":"2021-10-11"},{"lineNumber":175,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":176,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"deonchung"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"alvintan01":5,"deonchung":172}},{"path":"src/main/java/command/medicine/DeleteStock.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RemusTeo"},"content":"package command.medicine;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"RemusTeo"},"content":"import command.Command;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"RemusTeo"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"RemusTeo"},"content":"import command.CommandSyntax;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"RemusTeo"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import parser.StockValidator;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"RemusTeo"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"RemusTeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"RemusTeo"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"RemusTeo"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"RemusTeo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"RemusTeo"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"RemusTeo"},"content":" * Delete medication based on user input given stock id.","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"RemusTeo"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"RemusTeo"},"content":"public class DeleteStock extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"RemusTeo"},"content":"    private static Logger logger \u003d Logger.getLogger(\"DeleteStock\");","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"RemusTeo"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    public void execute(Ui ui, HashMap\u003cString, String\u003e parameters, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"RemusTeo"},"content":"        logger.log(Level.INFO, \"Start deletion of stock\");","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"        String[] requiredParameters \u003d {CommandParameters.ID};","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"        String[] optionalParameters \u003d {};","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"        if (CommandSyntax.containsInvalidParameters(ui, parameters, requiredParameters, optionalParameters,","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"                CommandSyntax.DELETE_STOCK_COMMAND, true)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"RemusTeo"},"content":"            logger.log(Level.WARNING, \"Invalid parameter is specified by user\");","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"RemusTeo"},"content":"            logger.log(Level.INFO, \"Unsuccessful deletion of stock\");","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"RemusTeo"},"content":"            return;","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"        String stockIdToDelete \u003d parameters.get(CommandParameters.ID);","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"        if (!StockValidator.isValidStockId(ui, stockIdToDelete, medicines)) {","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"RemusTeo"},"content":"            logger.log(Level.WARNING, \"Invalid stock id is specified by user\");","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"RemusTeo"},"content":"            logger.log(Level.INFO, \"Unsuccessful deletion of stock\");","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"RemusTeo"},"content":"            return;","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"RemusTeo"},"content":"        int stockId \u003d Integer.parseInt(stockIdToDelete);","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"RemusTeo"},"content":"        assert stockId \u003e 0 : \"Stock Id should be more than 0\";","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"RemusTeo"},"content":"        assert stockId \u003c\u003d Stock.getStockCount() : \"Stock Id should not exceed max stock count\";","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"            if (!(medicine instanceof Stock)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"                continue;","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"            Stock stock \u003d (Stock) medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"            if (stock.getStockID() \u003d\u003d stockId) {","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"                medicines.remove(medicine);","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"RemusTeo"},"content":"                logger.log(Level.INFO, \"Stock id found and deleted\");","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"RemusTeo"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"RemusTeo"},"content":"        ui.print(\"Medication deleted: Stock_Id\u003d\" + stockId);","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"RemusTeo"},"content":"        logger.log(Level.INFO, \"Successful deletion of stock\");","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"RemusTeo"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"alvintan01":15,"RemusTeo":46,"a-tph":2}},{"path":"src/main/java/command/medicine/ListStock.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package command.medicine;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import command.Command;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import command.CommandSyntax;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import comparators.StockComparator;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"import parser.DateParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"jiangweichen835"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"jiangweichen835"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":" * Helps to process the list command together with filters and sort.","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"jiangweichen835"},"content":"public class ListStock extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ListStock\");","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"    public void execute(Ui ui, HashMap\u003cString, String\u003e parameters, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"jiangweichen835"},"content":"        logger.log(Level.INFO, \"Start listing of available stock\");","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"        String[] requiredParameter \u003d {};","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"        String[] optionalParameters \u003d {CommandParameters.ID, CommandParameters.NAME, CommandParameters.PRICE,","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"jiangweichen835"},"content":"            CommandParameters.QUANTITY, CommandParameters.EXPIRY_DATE, CommandParameters.DESCRIPTION,","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"jiangweichen835"},"content":"            CommandParameters.MAX_QUANTITY, CommandParameters.SORT, CommandParameters.REVERSED_SORT};","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"jiangweichen835"},"content":"        boolean isInvalidParameter \u003d CommandSyntax.containsInvalidParameters(ui, parameters,","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"                    requiredParameter, optionalParameters, CommandSyntax.LIST_STOCK_COMMAND, false);","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"        if (isInvalidParameter) {","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"jiangweichen835"},"content":"            logger.log(Level.WARNING, \"Invalid parameters given by user\");","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"            return;","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"jiangweichen835"},"content":"        boolean isInvalidParameterValues \u003d CommandSyntax.containsInvalidParameterValues(ui, parameters,","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"                    medicines, CommandSyntax.LIST_STOCK_COMMAND);","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"        if (isInvalidParameterValues) {","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"jiangweichen835"},"content":"            logger.log(Level.WARNING, \"Invalid parameters values given by user\");","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"            return;","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"jiangweichen835"},"content":"        ArrayList\u003cStock\u003e filteredStocks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"jiangweichen835"},"content":"        assert (filteredStocks !\u003d null) : \"Array is not initialised\";","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"            if (medicine instanceof Stock) { // Ensure that it is a medicine object","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"jiangweichen835"},"content":"                filteredStocks.add((Stock) medicine);","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"            for (String parameter : parameters.keySet()) {","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"                String parameterValue \u003d parameters.get(parameter);","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"                switch (parameter) {","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"                case CommandParameters.ID:","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"jiangweichen835"},"content":"                    filteredStocks \u003d (ArrayList\u003cStock\u003e) filteredStocks.stream().filter((m) -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"jiangweichen835"},"content":"                                (m).getStockID() \u003d\u003d Integer.parseInt(parameterValue)).collect(Collectors.toList());","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"                    break;","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"                case CommandParameters.NAME:","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"jiangweichen835"},"content":"                    filteredStocks \u003d (ArrayList\u003cStock\u003e) filteredStocks.stream().filter((m) -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"jiangweichen835"},"content":"                                (m.getMedicineName().toUpperCase()).contains(parameterValue.toUpperCase()))","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"jiangweichen835"},"content":"                                .collect(Collectors.toList());","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"                    break;","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"                case CommandParameters.PRICE:","lastModifiedDate":"2021-10-02"},{"lineNumber":72,"author":{"gitId":"jiangweichen835"},"content":"                    filteredStocks \u003d (ArrayList\u003cStock\u003e) filteredStocks.stream().filter((m) -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"jiangweichen835"},"content":"                                (m).getPrice() \u003d\u003d Double.parseDouble(parameterValue)).collect(Collectors.toList());","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"                    break;","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"                case CommandParameters.QUANTITY:","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"jiangweichen835"},"content":"                    filteredStocks \u003d (ArrayList\u003cStock\u003e) filteredStocks.stream().filter((m) -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"jiangweichen835"},"content":"                                m.getQuantity() \u003d\u003d Integer.parseInt(parameterValue)).collect(Collectors.toList());","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"                    break;","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"                case CommandParameters.EXPIRY_DATE:","lastModifiedDate":"2021-10-02"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"                    try {","lastModifiedDate":"2021-10-02"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"                        Date expiryDate \u003d DateParser.stringToDate(parameterValue);","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"jiangweichen835"},"content":"                        filteredStocks \u003d (ArrayList\u003cStock\u003e) filteredStocks.stream().filter((m) -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"jiangweichen835"},"content":"                                    (m).getExpiry().equals(expiryDate)).collect(Collectors.toList());","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"                    } catch (ParseException e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"                        e.printStackTrace();","lastModifiedDate":"2021-10-02"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"                    }","lastModifiedDate":"2021-10-02"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"                    break;","lastModifiedDate":"2021-10-02"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"                case CommandParameters.DESCRIPTION:","lastModifiedDate":"2021-10-02"},{"lineNumber":89,"author":{"gitId":"jiangweichen835"},"content":"                    filteredStocks \u003d (ArrayList\u003cStock\u003e) filteredStocks.stream().filter((m) -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"jiangweichen835"},"content":"                                (m.getDescription().toUpperCase()).contains(parameterValue.toUpperCase()))","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"jiangweichen835"},"content":"                                .collect(Collectors.toList());","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"alvintan01"},"content":"                    break;","lastModifiedDate":"2021-10-02"},{"lineNumber":93,"author":{"gitId":"alvintan01"},"content":"                case CommandParameters.MAX_QUANTITY:","lastModifiedDate":"2021-10-02"},{"lineNumber":94,"author":{"gitId":"jiangweichen835"},"content":"                    filteredStocks \u003d (ArrayList\u003cStock\u003e) filteredStocks.stream().filter((m) -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"jiangweichen835"},"content":"                                m.getMaxQuantity() \u003d\u003d Integer.parseInt(parameterValue)).collect(Collectors.toList());","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"alvintan01"},"content":"                    break;","lastModifiedDate":"2021-10-02"},{"lineNumber":97,"author":{"gitId":"alvintan01"},"content":"                case CommandParameters.SORT:","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"jiangweichen835"},"content":"                    filteredStocks.sort(new StockComparator(parameterValue.toLowerCase(), false));","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"alvintan01"},"content":"                    break;","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"alvintan01"},"content":"                case CommandParameters.REVERSED_SORT:","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"jiangweichen835"},"content":"                    filteredStocks.sort(new StockComparator(parameterValue.toLowerCase(), true));","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"alvintan01"},"content":"                    break;","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"alvintan01"},"content":"                default:","lastModifiedDate":"2021-10-02"},{"lineNumber":104,"author":{"gitId":"alvintan01"},"content":"                    return;","lastModifiedDate":"2021-10-02"},{"lineNumber":105,"author":{"gitId":"alvintan01"},"content":"                }","lastModifiedDate":"2021-10-02"},{"lineNumber":106,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":107,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":108,"author":{"gitId":"alvintan01"},"content":"        ui.printStocks(filteredStocks, medicines);","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"alvintan01"},"content":"        logger.log(Level.INFO, \"Successful listing of stock\");","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":111,"author":{"gitId":"jiangweichen835"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"alvintan01":75,"jiangweichen835":36}},{"path":"src/main/java/command/medicine/UpdateStock.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package command.medicine;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import command.Command;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import command.CommandSyntax;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"import parser.DateParser;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import parser.MedicineManager;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"import parser.StockValidator;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":" * Update medication information based on user input given stock id.","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"public class UpdateStock extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"    private static final int MINIMUM_ROW_NUMBER_UPDATE \u003d 1;","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"    private static Logger logger \u003d Logger.getLogger(\"UpdateStock\");","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    public void execute(Ui ui, HashMap\u003cString, String\u003e parameters, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"        String[] requiredParameter \u003d {CommandParameters.ID};","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"        String[] optionalParameters \u003d {CommandParameters.PRICE, CommandParameters.QUANTITY,","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"            CommandParameters.EXPIRY_DATE, CommandParameters.DESCRIPTION, CommandParameters.NAME,","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"            CommandParameters.MAX_QUANTITY};","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"        boolean isInvalidParameter \u003d CommandSyntax.containsInvalidParameters(ui, parameters, requiredParameter,","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"                optionalParameters, CommandSyntax.UPDATE_STOCK_COMMAND, true);","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"        if (isInvalidParameter) {","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"            return;","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"        boolean isInvalidParameterValues \u003d CommandSyntax.containsInvalidParameterValues(ui, parameters, medicines,","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"            CommandSyntax.UPDATE_STOCK_COMMAND);","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"        if (isInvalidParameterValues) {","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"            return;","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"a-tph"},"content":"        Stock stock \u003d MedicineManager.extractStockObject(parameters, medicines);","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"        boolean isValidQuantityValues \u003d processQuantityValues(ui, parameters, medicines, stock);","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"a-tph"},"content":"        if (!isValidQuantityValues) {","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"a-tph"},"content":"            return;","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"a-tph"},"content":"        boolean isValidExpDate \u003d processDateInput(ui, parameters, medicines, stock);","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"a-tph"},"content":"        if (!isValidExpDate) {","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"a-tph"},"content":"            return;","lastModifiedDate":"2021-10-03"},{"lineNumber":56,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cStock\u003e filteredStocks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"a-tph"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"a-tph"},"content":"            if (medicine instanceof Stock \u0026\u0026 medicine.getMedicineName().equalsIgnoreCase(stock.getMedicineName())) {","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"a-tph"},"content":"                filteredStocks.add((Stock) medicine);","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"a-tph"},"content":"        // Default value for updating one row","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"a-tph"},"content":"        int rowsAffected \u003d MINIMUM_ROW_NUMBER_UPDATE;","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"a-tph"},"content":"        String[] affectedCommands \u003d {CommandParameters.NAME, CommandParameters.DESCRIPTION,","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"a-tph"},"content":"            CommandParameters.MAX_QUANTITY};","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"a-tph"},"content":"        for (String affectedCommand : affectedCommands) {","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"a-tph"},"content":"            if (parameters.containsKey(affectedCommand)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"a-tph"},"content":"                rowsAffected \u003d filteredStocks.size();","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"a-tph"},"content":"        setUpdatesByStockID(parameters, filteredStocks, stock);","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"a-tph"},"content":"        ui.print(\"Updated! Number of rows affected: \" + rowsAffected);","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"a-tph"},"content":"        if (rowsAffected \u003e MINIMUM_ROW_NUMBER_UPDATE) {","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"            ui.printStocks(filteredStocks, medicines);","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"a-tph"},"content":"        } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"            ui.printStock(stock, medicines);","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"a-tph"},"content":"     * Process valid date input to be updated given a stock id.","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"a-tph"},"content":"     * @param ui         Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"a-tph"},"content":"     * @param parameters HashMap Key-Value set for parameter and user specified parameter value.","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"a-tph"},"content":"     * @param medicines  Arraylist of all medicines.","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"a-tph"},"content":"     * @param stock      Stock object of the given stock id.","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"a-tph"},"content":"     * @return Boolean value indicating if quantity values are valid.","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"a-tph"},"content":"    private boolean processDateInput(Ui ui, HashMap\u003cString, String\u003e parameters, ArrayList\u003cMedicine\u003e medicines,","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"a-tph"},"content":"                                     Stock stock) {","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"a-tph"},"content":"        String name \u003d stock.getMedicineName();","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"a-tph"},"content":"        boolean hasExpiryDate \u003d parameters.containsKey(CommandParameters.EXPIRY_DATE);","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"a-tph"},"content":"        if (!hasExpiryDate) {","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"a-tph"},"content":"            return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"a-tph"},"content":"        Date expiryDate \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"a-tph"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"a-tph"},"content":"            expiryDate \u003d DateParser.stringToDate(parameters.get(CommandParameters.EXPIRY_DATE));","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"a-tph"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"a-tph"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"a-tph"},"content":"        return StockValidator.dateValidityChecker(ui, medicines, expiryDate, name);","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":113,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":114,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":115,"author":{"gitId":"a-tph"},"content":"     * Process quantity values to be updated given a stock id.","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":117,"author":{"gitId":"a-tph"},"content":"     * @param ui         Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-03"},{"lineNumber":118,"author":{"gitId":"a-tph"},"content":"     * @param parameters HashMap Key-Value set for parameter and user specified parameter value.","lastModifiedDate":"2021-10-03"},{"lineNumber":119,"author":{"gitId":"a-tph"},"content":"     * @param medicines  Arraylist of all medicines.","lastModifiedDate":"2021-10-04"},{"lineNumber":120,"author":{"gitId":"a-tph"},"content":"     * @param stock      Stock object of the given stock id.","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"a-tph"},"content":"     * @return Boolean value indicating if quantity values are valid.","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":123,"author":{"gitId":"a-tph"},"content":"    private boolean processQuantityValues(Ui ui, HashMap\u003cString, String\u003e parameters, ArrayList\u003cMedicine\u003e medicines,","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"a-tph"},"content":"                                          Stock stock) {","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":126,"author":{"gitId":"a-tph"},"content":"        String name \u003d stock.getMedicineName();","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"a-tph"},"content":"        int quantity \u003d 0;","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"a-tph"},"content":"        int maxQuantity \u003d 0;","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"a-tph"},"content":"        int totalStockQuantity \u003d 0;","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"a-tph"},"content":"        int initialQuantity \u003d 0;","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"a-tph"},"content":"        int updatedQuantity \u003d 0;","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":134,"author":{"gitId":"a-tph"},"content":"        boolean hasQuantity \u003d parameters.containsKey(CommandParameters.QUANTITY);","lastModifiedDate":"2021-10-03"},{"lineNumber":135,"author":{"gitId":"a-tph"},"content":"        boolean hasMaxQuantity \u003d parameters.containsKey(CommandParameters.MAX_QUANTITY);","lastModifiedDate":"2021-10-03"},{"lineNumber":136,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":137,"author":{"gitId":"a-tph"},"content":"        // initialise quantity and max quantity based on the different combinations of user inputs","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"a-tph"},"content":"        if (hasQuantity \u0026\u0026 hasMaxQuantity) {","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"a-tph"},"content":"            totalStockQuantity \u003d MedicineManager.getTotalStockQuantity(medicines, name);","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"a-tph"},"content":"            initialQuantity \u003d stock.getQuantity();","lastModifiedDate":"2021-10-06"},{"lineNumber":141,"author":{"gitId":"a-tph"},"content":"            updatedQuantity \u003d Integer.parseInt(parameters.get(CommandParameters.QUANTITY));","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"a-tph"},"content":"            quantity \u003d totalStockQuantity - initialQuantity + updatedQuantity;","lastModifiedDate":"2021-10-06"},{"lineNumber":143,"author":{"gitId":"a-tph"},"content":"            maxQuantity \u003d Integer.parseInt(parameters.get(CommandParameters.MAX_QUANTITY));","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":145,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":146,"author":{"gitId":"a-tph"},"content":"        if (hasQuantity \u0026\u0026 !hasMaxQuantity) {","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"a-tph"},"content":"            totalStockQuantity \u003d MedicineManager.getTotalStockQuantity(medicines, name);","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"a-tph"},"content":"            initialQuantity \u003d stock.getQuantity();","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"a-tph"},"content":"            updatedQuantity \u003d Integer.parseInt(parameters.get(CommandParameters.QUANTITY));","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"a-tph"},"content":"            quantity \u003d totalStockQuantity - initialQuantity + updatedQuantity;","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"a-tph"},"content":"            maxQuantity \u003d MedicineManager.getMaxStockQuantity(medicines, name);","lastModifiedDate":"2021-10-06"},{"lineNumber":152,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":153,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":154,"author":{"gitId":"a-tph"},"content":"        if (!hasQuantity \u0026\u0026 hasMaxQuantity) {","lastModifiedDate":"2021-10-06"},{"lineNumber":155,"author":{"gitId":"a-tph"},"content":"            quantity \u003d MedicineManager.getTotalStockQuantity(medicines, name);","lastModifiedDate":"2021-10-06"},{"lineNumber":156,"author":{"gitId":"a-tph"},"content":"            maxQuantity \u003d Integer.parseInt(parameters.get(CommandParameters.MAX_QUANTITY));","lastModifiedDate":"2021-10-06"},{"lineNumber":157,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":158,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":159,"author":{"gitId":"a-tph"},"content":"        return StockValidator.quantityValidityChecker(ui, quantity, maxQuantity);","lastModifiedDate":"2021-10-06"},{"lineNumber":160,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":161,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":162,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":163,"author":{"gitId":"a-tph"},"content":"     * Update values provided by user for a given stock id.","lastModifiedDate":"2021-10-03"},{"lineNumber":164,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":165,"author":{"gitId":"a-tph"},"content":"     * @param parameters     HashMap Key-Value set for parameter and user specified parameter value.","lastModifiedDate":"2021-10-03"},{"lineNumber":166,"author":{"gitId":"a-tph"},"content":"     * @param filteredStocks Arraylist of filtered medicine stocks.","lastModifiedDate":"2021-10-13"},{"lineNumber":167,"author":{"gitId":"a-tph"},"content":"     * @param stock          Stock object of the given stock id.","lastModifiedDate":"2021-10-04"},{"lineNumber":168,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":169,"author":{"gitId":"a-tph"},"content":"    private void setUpdatesByStockID(HashMap\u003cString, String\u003e parameters, ArrayList\u003cStock\u003e filteredStocks, Stock stock) {","lastModifiedDate":"2021-10-13"},{"lineNumber":170,"author":{"gitId":"a-tph"},"content":"        for (String parameter : parameters.keySet()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":171,"author":{"gitId":"a-tph"},"content":"            String parameterValue \u003d parameters.get(parameter);","lastModifiedDate":"2021-10-03"},{"lineNumber":172,"author":{"gitId":"a-tph"},"content":"            switch (parameter) {","lastModifiedDate":"2021-10-03"},{"lineNumber":173,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.NAME:","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"a-tph"},"content":"                for (Stock targetStock : filteredStocks) {","lastModifiedDate":"2021-10-13"},{"lineNumber":175,"author":{"gitId":"a-tph"},"content":"                    targetStock.setMedicineName(parameterValue);","lastModifiedDate":"2021-10-06"},{"lineNumber":176,"author":{"gitId":"a-tph"},"content":"                }","lastModifiedDate":"2021-10-06"},{"lineNumber":177,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":178,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.PRICE:","lastModifiedDate":"2021-10-03"},{"lineNumber":179,"author":{"gitId":"alvintan01"},"content":"                stock.setPrice(Double.parseDouble(parameterValue));","lastModifiedDate":"2021-10-04"},{"lineNumber":180,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":181,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.QUANTITY:","lastModifiedDate":"2021-10-03"},{"lineNumber":182,"author":{"gitId":"alvintan01"},"content":"                stock.setQuantity(Integer.parseInt(parameterValue));","lastModifiedDate":"2021-10-04"},{"lineNumber":183,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":184,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.EXPIRY_DATE:","lastModifiedDate":"2021-10-03"},{"lineNumber":185,"author":{"gitId":"a-tph"},"content":"                try {","lastModifiedDate":"2021-10-03"},{"lineNumber":186,"author":{"gitId":"alvintan01"},"content":"                    stock.setExpiry(DateParser.stringToDate(parameterValue));","lastModifiedDate":"2021-10-04"},{"lineNumber":187,"author":{"gitId":"a-tph"},"content":"                } catch (ParseException e) {","lastModifiedDate":"2021-10-03"},{"lineNumber":188,"author":{"gitId":"a-tph"},"content":"                    e.printStackTrace();","lastModifiedDate":"2021-10-03"},{"lineNumber":189,"author":{"gitId":"a-tph"},"content":"                }","lastModifiedDate":"2021-10-03"},{"lineNumber":190,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":191,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.DESCRIPTION:","lastModifiedDate":"2021-10-03"},{"lineNumber":192,"author":{"gitId":"a-tph"},"content":"                for (Stock targetStock : filteredStocks) {","lastModifiedDate":"2021-10-13"},{"lineNumber":193,"author":{"gitId":"a-tph"},"content":"                    targetStock.setDescription(parameterValue);","lastModifiedDate":"2021-10-13"},{"lineNumber":194,"author":{"gitId":"a-tph"},"content":"                }","lastModifiedDate":"2021-10-06"},{"lineNumber":195,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":196,"author":{"gitId":"a-tph"},"content":"            case CommandParameters.MAX_QUANTITY:","lastModifiedDate":"2021-10-03"},{"lineNumber":197,"author":{"gitId":"a-tph"},"content":"                for (Stock targetStock : filteredStocks) {","lastModifiedDate":"2021-10-13"},{"lineNumber":198,"author":{"gitId":"a-tph"},"content":"                    targetStock.setMaxQuantity(Integer.parseInt(parameterValue));","lastModifiedDate":"2021-10-13"},{"lineNumber":199,"author":{"gitId":"a-tph"},"content":"                }","lastModifiedDate":"2021-10-06"},{"lineNumber":200,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":201,"author":{"gitId":"a-tph"},"content":"            default:","lastModifiedDate":"2021-10-03"},{"lineNumber":202,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-03"},{"lineNumber":203,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":204,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":205,"author":{"gitId":"a-tph"},"content":"        logger.log(Level.INFO, \"Updated stock information with given user input\");","lastModifiedDate":"2021-10-10"},{"lineNumber":206,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":207,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"alvintan01":11,"a-tph":196}},{"path":"src/main/java/command/order/ListOrder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RemusTeo"},"content":"package command.order;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"RemusTeo"},"content":"import command.Command;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"RemusTeo"},"content":"import command.CommandSyntax;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"RemusTeo"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"RemusTeo"},"content":"import inventory.Order;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"RemusTeo"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"RemusTeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"RemusTeo"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"RemusTeo"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"RemusTeo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"RemusTeo"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"RemusTeo"},"content":" * Helps to process the list command together with filters and sort.","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"RemusTeo"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"RemusTeo"},"content":"public class ListOrder extends Command {","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"RemusTeo"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ListOrder\");","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"RemusTeo"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"RemusTeo"},"content":"    public void execute(Ui ui, HashMap\u003cString, String\u003e parameters, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"RemusTeo"},"content":"        logger.log(Level.INFO, \"Start listing of order\");","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"RemusTeo"},"content":"        // For now no optional parameters only listorder","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"RemusTeo"},"content":"        // Will do after I finish storage","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"RemusTeo"},"content":"        String[] requiredParameters \u003d {};","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"RemusTeo"},"content":"        String[] optionalParameters \u003d {};","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"RemusTeo"},"content":"        boolean isInvalidParameter \u003d CommandSyntax.containsInvalidParameters(ui, parameters,","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"RemusTeo"},"content":"                requiredParameters, optionalParameters, CommandSyntax.LIST_ORDER_COMMAND, false);","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"RemusTeo"},"content":"        if (isInvalidParameter) {","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"RemusTeo"},"content":"            logger.log(Level.WARNING, \"Invalid parameters given by user\");","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"RemusTeo"},"content":"            return;","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"RemusTeo"},"content":"        ArrayList\u003cOrder\u003e filteredOrders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"RemusTeo"},"content":"        assert (filteredOrders !\u003d null) : \"Array is not initialised\";","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"RemusTeo"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"RemusTeo"},"content":"            if (medicine instanceof Order) { // Ensure that it is a medicine object","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"RemusTeo"},"content":"                filteredOrders.add((Order) medicine);","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"RemusTeo"},"content":"        // To implement validation on filteredOrders","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"RemusTeo"},"content":"        // Will do after I finish storage","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"RemusTeo"},"content":"        ui.printOrders(filteredOrders);","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"RemusTeo"},"content":"        logger.log(Level.INFO, \"Successful listing of order\");","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"RemusTeo"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"RemusTeo":53}},{"path":"src/main/java/comparators/StockComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package comparators;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":" * Helps to sort the medicines based on the column provided.","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"public class StockComparator implements Comparator\u003cStock\u003e {","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"    private String column;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    private Boolean isReversed;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    public StockComparator(String column, Boolean isReversed) {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"        this.column \u003d column;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"        this.isReversed \u003d isReversed;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    public int compare(Stock stock1, Stock stock2) {","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"        Stock stock;","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"        if (isReversed) { // If the user chooses to sort in reverse order","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"            stock \u003d stock2;","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"            stock2 \u003d stock1;","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"            stock1 \u003d stock;","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"        switch (column) {","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"        case Stock.ID_LOWERCASE:","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.ID:","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"            return Integer.compare(stock1.getStockID(), stock2.getStockID());","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"        case Stock.NAME_LOWERCASE:","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.NAME:","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"            return stock1.getMedicineName().compareTo(stock2.getMedicineName());","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"        case Stock.PRICE_LOWERCASE:","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.PRICE:","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"            return Double.compare(stock1.getPrice(), stock2.getPrice());","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"        case Stock.QUANTITY_LOWERCASE:","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.QUANTITY:","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"            return Integer.compare(stock1.getQuantity(), stock2.getQuantity());","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"        case Stock.EXPIRY_DATE_LOWERCASE:","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.EXPIRY_DATE:","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"            return stock1.getExpiry().compareTo(stock2.getExpiry());","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"        case Stock.DESCRIPTION_LOWERCASE:","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.DESCRIPTION:","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"            return stock1.getDescription().compareTo(stock2.getDescription());","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"        case Stock.MAX_QUANTITY_LOWERCASE:","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"        case CommandParameters.MAX_QUANTITY:","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"            return Integer.compare(stock1.getMaxQuantity(), stock2.getMaxQuantity());","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"        default:","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"            return 0;","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"alvintan01":56}},{"path":"src/main/java/errors/InvalidCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package errors;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":" * Represents the InvalidCommand thrown when a command is not found in command.CommandList.","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"public class InvalidCommand extends Exception {","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":8}},{"path":"src/main/java/inventory/Dispense.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package inventory;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":" * Represents a Dispensed object. A Dispensed object is represented by medicine name, quantity, customer\u0027s NRIC,","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":" * date and staff name.","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"public class Dispense extends Medicine {","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"    public static final String ID \u003d \"ID\";","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    public static final String NAME \u003d \"NAME\";","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"    public static final String QUANTITY \u003d \"QUANTITY\";","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"deonchung"},"content":"    public static final String CUSTOMERS_ID \u003d \"CUSTOMER\u0027S ID\";","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    public static final String DATE \u003d \"DATE\";","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    public static final String STAFF_NAME \u003d \"STAFF NAME\";","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"deonchung"},"content":"    public static final String STOCK_ID \u003d \"STOCK ID\";","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"deonchung"},"content":"    public static final String[] COLUMNS \u003d {ID, NAME, QUANTITY, CUSTOMERS_ID, DATE, STAFF_NAME, STOCK_ID};","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    private static int dispenseCount \u003d 0;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    protected int dispenseId;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"deonchung"},"content":"    protected String customerId;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    protected Date date;","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    protected String staffName;","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"deonchung"},"content":"    protected int stockId;","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"deonchung"},"content":"    public Dispense(String medicineName, int quantity, String customerId, Date date, String staffName, int stockId) {","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"        super(medicineName, quantity);","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"        dispenseCount++;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"        this.dispenseId \u003d dispenseCount;","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"deonchung"},"content":"        this.customerId \u003d customerId;","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"        this.staffName \u003d staffName;","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"deonchung"},"content":"        this.stockId \u003d stockId;","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"    public static int getDispenseCount() {","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"        return dispenseCount;","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"    public static void setDispenseCount(int dispenseCount) {","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"        Dispense.dispenseCount \u003d dispenseCount;","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"    public int getDispenseId() {","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"        return dispenseId;","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"    public void setDispenseId(int dispenseId) {","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"        this.dispenseId \u003d dispenseId;","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"deonchung"},"content":"    public String getCustomerId() {","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"deonchung"},"content":"        return customerId;","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"deonchung"},"content":"    public void setCustomerId(String customerId) {","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"deonchung"},"content":"        this.customerId \u003d customerId;","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"    public Date getDate() {","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"        return date;","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"    public void setDate(Date date) {","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"    public String getStaffName() {","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"        return staffName;","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"    public void setStaffName(String staffName) {","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"        this.staffName \u003d staffName;","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"deonchung"},"content":"    public int getStockId() {","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"deonchung"},"content":"        return stockId;","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"deonchung"},"content":"    public void setStockId(int stockId) {","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"deonchung"},"content":"        this.stockId \u003d stockId;","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"alvintan01":65,"deonchung":21}},{"path":"src/main/java/inventory/Medicine.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package inventory;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":" * Represents the generic stock for the application. It contains the medicine name and quantity.","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":" * It is inherited by Dispense, Medicine and Order objects.","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"public abstract class Medicine {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"    protected String medicineName;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"    protected int quantity;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    public Medicine(String medicineName, int quantity) {","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"        this.medicineName \u003d medicineName;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    public String getMedicineName() {","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"        return medicineName;","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    public void setMedicineName(String medicineName) {","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"        this.medicineName \u003d medicineName;","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    public int getQuantity() {","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"        return quantity;","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    public void setQuantity(int quantity) {","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"alvintan01":32}},{"path":"src/main/java/inventory/Order.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package inventory;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":" * Represents an Order. An Order is represented by order_id, medicine name, quantity, date and isDelivered.","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"public class Order extends Medicine {","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"    public static final String ID \u003d \"ID\";","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"    public static final String NAME \u003d \"NAME\";","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    public static final String QUANTITY \u003d \"QUANTITY\";","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"    public static final String DATE \u003d \"DATE\";","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    public static final String STATUS \u003d \"STATUS\";","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    public static final String[] COLUMNS \u003d {ID, NAME, QUANTITY, DATE, STATUS};","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    private static int orderCount \u003d 0;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    protected int orderId;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    protected Date date;","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    protected boolean isDelivered;","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"    public Order(String medicineName, int quantity, Date date) {","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"        super(medicineName, quantity);","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"        orderCount++;","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"        this.orderId \u003d orderCount;","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"        this.isDelivered \u003d false;","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    public static int getOrderCount() {","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"        return orderCount;","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"    public static void setOrderCount(int orderCount) {","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"        Order.orderCount \u003d orderCount;","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"    public int getOrderId() {","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"        return orderId;","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"    public void setOrderId(int orderId) {","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"        this.orderId \u003d orderId;","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"    public Date getDate() {","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"        return date;","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"    public void setDate(Date date) {","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"    public boolean isDelivered() {","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"        return isDelivered;","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"    public void setDelivered() {","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"        isDelivered \u003d true;","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"    public String getStatus() {","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"        if (isDelivered) {","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"            return \"DELIVERED\";","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"        } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"            return \"PENDING\";","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"alvintan01":70}},{"path":"src/main/java/inventory/Stock.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package inventory;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":" * Represents a Medicine object. A Medicine object is represented by stock_id, name, price, quantity, expiry,","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":" * description and max quantity.","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"public class Stock extends Medicine {","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"    public static final String ID \u003d \"ID\";","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    public static final String NAME \u003d \"NAME\";","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"    public static final String PRICE \u003d \"PRICE\";","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    public static final String QUANTITY \u003d \"QUANTITY\";","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    public static final String EXPIRY_DATE \u003d \"EXPIRY_DATE\";","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    public static final String DESCRIPTION \u003d \"DESCRIPTION\";","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    public static final String MAX_QUANTITY \u003d \"MAX_QUANTITY\";","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    // Used for sorting","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    public static final String ID_LOWERCASE \u003d \"id\";","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    public static final String NAME_LOWERCASE \u003d \"name\";","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    public static final String PRICE_LOWERCASE \u003d \"price\";","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"    public static final String QUANTITY_LOWERCASE \u003d \"quantity\";","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    public static final String EXPIRY_DATE_LOWERCASE \u003d \"expiry\";","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    public static final String DESCRIPTION_LOWERCASE \u003d \"description\";","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    public static final String MAX_QUANTITY_LOWERCASE \u003d \"max_quantity\";","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"    public static final String[] COLUMNS \u003d {ID, NAME, PRICE, QUANTITY, EXPIRY_DATE, DESCRIPTION, MAX_QUANTITY};","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"    private static int stockCount \u003d 0;","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    protected int stockID;","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"    protected double price;","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"    protected Date expiry;","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"    protected String description;","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"    protected int maxQuantity;","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"    public Stock(String name, double price, int quantity, Date expiry, String description, int maxQuantity) {","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"        super(name, quantity);","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"        stockCount++;","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"        this.stockID \u003d stockCount;","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"        this.price \u003d price;","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"        this.expiry \u003d expiry;","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"        this.maxQuantity \u003d maxQuantity;","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"    public static int getStockCount() {","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"        return stockCount;","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"    public static void setStockCount(int stockCount) {","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"        Stock.stockCount \u003d stockCount;","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"    public int getStockID() {","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"        return stockID;","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"    public void setStockID(int stockID) {","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"        this.stockID \u003d stockID;","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"    public double getPrice() {","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"        return price;","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"    public void setPrice(double price) {","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"        this.price \u003d price;","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"    public Date getExpiry() {","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"        return expiry;","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"    public void setExpiry(Date expiry) {","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"        this.expiry \u003d expiry;","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-04"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"        return description;","lastModifiedDate":"2021-10-04"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-10-04"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-04"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"    public int getMaxQuantity() {","lastModifiedDate":"2021-10-04"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"        return maxQuantity;","lastModifiedDate":"2021-10-04"},{"lineNumber":89,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"alvintan01"},"content":"    public void setMaxQuantity(int maxQuantity) {","lastModifiedDate":"2021-10-04"},{"lineNumber":92,"author":{"gitId":"alvintan01"},"content":"        this.maxQuantity \u003d maxQuantity;","lastModifiedDate":"2021-10-04"},{"lineNumber":93,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"alvintan01":94}},{"path":"src/main/java/parser/DateParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":" * Contains the parser for date objects.","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"public class DateParser {","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    public static final String INPUT_DATE_FORMAT \u003d \"d-M-yyyy\";","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    public static final String OUTPUT_DATE_FORMAT \u003d \"dd-MM-yyyy\";","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"     * Helps to parse a string to a LocalDate object.","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"     * @param date String date to be converted.","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"     * @return LocalDate object representing date.","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"     * @throws ParseException If date is invalid.","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    public static Date stringToDate(String date) throws ParseException {","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(INPUT_DATE_FORMAT);","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"            dateTimeFormatter.parse(date); // To check if date was in valid format","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"            throw new ParseException(\"Unknown date\", 0);","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"        return new SimpleDateFormat(INPUT_DATE_FORMAT).parse(date);","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"     * Helps to parse a LocalDate object to string.","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"     * @param date Date object to be converted to string.","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"     * @return String value of date.","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"    public static String dateToString(Date date) {","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"        return new SimpleDateFormat(OUTPUT_DATE_FORMAT).format(date);","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":43}},{"path":"src/main/java/parser/DispenseValidator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"deonchung"},"content":"package parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"deonchung"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"deonchung"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"deonchung"},"content":" * Contains all the methods to validate if a Dispense input parameters are valid.","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"deonchung"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"deonchung"},"content":"public class DispenseValidator {","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"deonchung"},"content":"     * Checks if a customer ID is valid.","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"deonchung"},"content":"     * @param ui                Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"deonchung"},"content":"     * @param customerId        Customer ID to be checked.","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"deonchung"},"content":"     * @return                  Boolean value indicating if Customer ID is valid.","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"deonchung"},"content":"    public static boolean isValidCustomerId(Ui ui, String customerId) {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"deonchung"},"content":"        if (customerId.equals(\"\")) {","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"deonchung"},"content":"            ui.print(\"Customer ID cannot be empty!\");","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"deonchung"},"content":"            return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"deonchung"},"content":"        return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"deonchung"},"content":"     * Checks if a Staff Name is valid.","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"deonchung"},"content":"     * @param ui                Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"deonchung"},"content":"     * @param staffName         Staff Name to be checked.","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"deonchung"},"content":"     * @return                  Boolean value indicating if Staff Name is valid.","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"deonchung"},"content":"    public static boolean isValidStaffName(Ui ui, String staffName) {","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"deonchung"},"content":"        if (staffName.equals(\"\")) {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"deonchung"},"content":"            ui.print(\"Staff Name cannot be empty!\");","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"deonchung"},"content":"            return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"deonchung"},"content":"        return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"deonchung"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"deonchung":38}},{"path":"src/main/java/parser/MedicineManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import inventory.Order;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"public class MedicineManager {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"     * Retrieves the total stock quantity for medicine with same name.","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"     * @param medicines Arraylist of medicines.","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"     * @param name      Medicine name.","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"     * @return Total stock quantity for the medicine.","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"    public static int getTotalStockQuantity(ArrayList\u003cMedicine\u003e medicines, String name) {","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"        int existingQuantity \u003d 0;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"            if (!(medicine instanceof Stock)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"                continue;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"            boolean isSameMedicineName \u003d medicine.getMedicineName().equalsIgnoreCase(name);","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"            if (isSameMedicineName) {","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"                existingQuantity +\u003d medicine.getQuantity();","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"        return existingQuantity;","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"     * Retrieves the total order quantity for order with same name.","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"     * @param medicines Arraylist of medicines.","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"     * @param name      Medicine name.","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"     * @return Total order quantity for the medicine.","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"    public static int getTotalOrderQuantity(ArrayList\u003cMedicine\u003e medicines, String name) {","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"        int existingQuantity \u003d 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"            if (!(medicine instanceof Order)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"                continue;","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"            boolean isSameMedicineName \u003d medicine.getMedicineName().equalsIgnoreCase(name);","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"            if (isSameMedicineName) {","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"                existingQuantity +\u003d medicine.getQuantity();","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"        return existingQuantity;","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"a-tph"},"content":"     * Retrieves the maximum stock quantity for medicine with same name.","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"a-tph"},"content":"     * @param medicines Arraylist of medicines.","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"a-tph"},"content":"     * @param name      Medicine name.","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"a-tph"},"content":"     * @return Total maximum stock quantity for the medicine.","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"a-tph"},"content":"    public static int getMaxStockQuantity(ArrayList\u003cMedicine\u003e medicines, String name) {","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"a-tph"},"content":"        int existingMaxQuantity \u003d 0;","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"a-tph"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"a-tph"},"content":"            if (!(medicine instanceof Stock)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"a-tph"},"content":"                continue;","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"a-tph"},"content":"            boolean isSameMedicineName \u003d medicine.getMedicineName().equalsIgnoreCase(name);","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"a-tph"},"content":"            if (isSameMedicineName) {","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"a-tph"},"content":"                existingMaxQuantity \u003d ((Stock) medicine).getMaxQuantity();","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"a-tph"},"content":"                break;","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"a-tph"},"content":"        assert (existingMaxQuantity \u003e 0) : \"Invalid max quantity\";","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"a-tph"},"content":"        return existingMaxQuantity;","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"deonchung"},"content":"     * Retrieves total number of column for the medicine with same name.","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"deonchung"},"content":"     * @param medicines Arraylist of medicines.","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"deonchung"},"content":"     * @param name Medicine name.","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"deonchung"},"content":"     * @return Total number of rows for the same medicine.","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"deonchung"},"content":"    public static int getTotalRows(ArrayList\u003cMedicine\u003e medicines, String name) {","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"deonchung"},"content":"        int existingRowQuantity \u003d 0;","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"deonchung"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"deonchung"},"content":"            if (medicine instanceof Stock) {","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"deonchung"},"content":"                boolean isSameMedicineName \u003d medicine.getMedicineName().equalsIgnoreCase(name);","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"deonchung"},"content":"                if (isSameMedicineName) {","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"deonchung"},"content":"                    existingRowQuantity++;","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"deonchung"},"content":"                }","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"deonchung"},"content":"        return existingRowQuantity;","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"a-tph"},"content":"     * Extracts the stock object for a given stock id.","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"a-tph"},"content":"     * @param parameters HashMap Key-Value set for parameter and user specified parameter value.","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"a-tph"},"content":"     * @param medicines  Arraylist of all medicines.","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"a-tph"},"content":"     * @return Stock object of the provided stock id by user","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"a-tph"},"content":"    public static Stock extractStockObject(HashMap\u003cString, String\u003e parameters, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"alvintan01"},"content":"        int stockId \u003d Integer.parseInt(parameters.get(CommandParameters.ID));","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"a-tph"},"content":"        Stock stock \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"a-tph"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"a-tph"},"content":"            if (medicine instanceof Stock \u0026\u0026 stockId \u003d\u003d ((Stock) medicine).getStockID()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"a-tph"},"content":"                stock \u003d (Stock) medicine;","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"a-tph"},"content":"        assert (stock !\u003d null) : \"Expected a stock object but none extracted\";","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"a-tph"},"content":"        return stock;","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"alvintan01":23,"deonchung":20,"a-tph":74}},{"path":"src/main/java/parser/MedicineValidator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"deonchung"},"content":"package parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"deonchung"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"deonchung"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"deonchung"},"content":" * Contains all the methods to validate if a Medicine\u0027s input parameters are valid.","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"deonchung"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"deonchung"},"content":"public class MedicineValidator {","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"deonchung"},"content":"     * Checks if a medicine name is empty.","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"deonchung"},"content":"     * @param ui   Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"deonchung"},"content":"     * @param name Medicine name to be checked.","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"deonchung"},"content":"     * @return Boolean value indicating if medicine name is valid.","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"deonchung"},"content":"    public static boolean isValidName(Ui ui, String name) {","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"deonchung"},"content":"        if (name.equals(\"\")) {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"deonchung"},"content":"            ui.print(\"Medication name cannot be empty!\");","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"deonchung"},"content":"            return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"deonchung"},"content":"        return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"deonchung"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"deonchung"},"content":"     * Checks if a medicine quantity is valid.","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"deonchung"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"deonchung"},"content":"     * @param ui             Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"deonchung"},"content":"     * @param quantityString Quantity of the medicine.","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"deonchung"},"content":"     * @return Boolean value indicating if medicine quantity is valid.","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"deonchung"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"deonchung"},"content":"    public static boolean isValidQuantity(Ui ui, String quantityString) {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"deonchung"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"deonchung"},"content":"            int quantity \u003d Integer.parseInt(quantityString);","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"deonchung"},"content":"            if (quantity \u003c 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"deonchung"},"content":"                throw new Exception();","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"deonchung"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"deonchung"},"content":"            return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"deonchung"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"deonchung"},"content":"            ui.print(\"Invalid quantity provided!\");","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"deonchung"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"deonchung"},"content":"        return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"deonchung"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"deonchung":44}},{"path":"src/main/java/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import command.ExitCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"RemusTeo"},"content":"import command.HelpCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import command.PurgeCommand;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"deonchung"},"content":"import command.dispense.AddDispense;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"RemusTeo"},"content":"import command.medicine.AddCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"RemusTeo"},"content":"import command.medicine.DeleteStock;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"jiangweichen835"},"content":"import command.medicine.ListStock;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"import command.medicine.UpdateStock;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"RemusTeo"},"content":"import command.order.ListOrder;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"import errors.InvalidCommand;","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.ADD_DISPENSE;","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.ADD_ORDER;","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.ADD_STOCK;","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.ARCHIVE;","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.DELETE_DISPENSE;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.DELETE_ORDER;","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.DELETE_STOCK;","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.EXIT;","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.HELP;","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.LIST_DISPENSE;","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.LIST_ORDER;","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.LIST_STOCK;","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.PURGE;","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.RECEIVE_ORDER;","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.UNDO;","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.UPDATE_DISPENSE;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.UPDATE_ORDER;","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"import static command.CommandList.UPDATE_STOCK;","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":" * Helps to parse the commands given by the user as well as extract the parameters provided.","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"public class Parser {","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"    private static final String DELIMITER \u003d \"/\";","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"     * Processes the user input into a Command Object.","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"     * @param ui        Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"     * @param userInput Input provided by user.","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"     * @param medicines Arraylist of all stocks.","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"     * @return A boolean value indicating isExit.","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"     * @throws InvalidCommand If a command does not exist.","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"    public static boolean processCommand(Ui ui, String userInput, ArrayList\u003cMedicine\u003e medicines) throws InvalidCommand {","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"        String[] userCommand \u003d parseCommand(userInput);","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"        String command \u003d userCommand[0];","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"        String commandParameters \u003d userCommand[1];","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"        HashMap\u003cString, String\u003e parameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"        if (!commandParameters.equals(\"\")) {","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"            parameters \u003d parseParameters(commandParameters);","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"        switch (command) {","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"        case ADD_DISPENSE:","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"            new AddDispense().execute(ui, parameters, medicines);","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"        case ADD_STOCK:","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"            new AddCommand().execute(ui, parameters, medicines);","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-02"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"        case ADD_ORDER:","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-02"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"        case ARCHIVE:","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"        case DELETE_DISPENSE:","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"        case DELETE_STOCK:","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"            new DeleteStock().execute(ui, parameters, medicines);","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"        case DELETE_ORDER:","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-02"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"        case EXIT:","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"            new ExitCommand().execute(ui, parameters, medicines);","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"            return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"        case HELP:","lastModifiedDate":"2021-10-02"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"            new HelpCommand().execute(ui, parameters, medicines);","lastModifiedDate":"2021-10-04"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-02"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"        case LIST_DISPENSE:","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"alvintan01"},"content":"        case LIST_STOCK:","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"jiangweichen835"},"content":"            new ListStock().execute(ui, parameters, medicines);","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-02"},{"lineNumber":92,"author":{"gitId":"alvintan01"},"content":"        case LIST_ORDER:","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"RemusTeo"},"content":"            new ListOrder().execute(ui, parameters, medicines);","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-02"},{"lineNumber":95,"author":{"gitId":"alvintan01"},"content":"        case PURGE:","lastModifiedDate":"2021-10-02"},{"lineNumber":96,"author":{"gitId":"alvintan01"},"content":"            new PurgeCommand().execute(ui, parameters, medicines);","lastModifiedDate":"2021-10-04"},{"lineNumber":97,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-02"},{"lineNumber":98,"author":{"gitId":"alvintan01"},"content":"        case RECEIVE_ORDER:","lastModifiedDate":"2021-10-02"},{"lineNumber":99,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-02"},{"lineNumber":100,"author":{"gitId":"alvintan01"},"content":"        case UNDO:","lastModifiedDate":"2021-10-02"},{"lineNumber":101,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-02"},{"lineNumber":102,"author":{"gitId":"alvintan01"},"content":"        case UPDATE_STOCK:","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"a-tph"},"content":"            new UpdateStock().execute(ui, parameters, medicines);","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-02"},{"lineNumber":105,"author":{"gitId":"alvintan01"},"content":"        case UPDATE_DISPENSE:","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"alvintan01"},"content":"        case UPDATE_ORDER:","lastModifiedDate":"2021-10-02"},{"lineNumber":108,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-10-02"},{"lineNumber":109,"author":{"gitId":"alvintan01"},"content":"        default:","lastModifiedDate":"2021-10-02"},{"lineNumber":110,"author":{"gitId":"alvintan01"},"content":"            throw new InvalidCommand();","lastModifiedDate":"2021-10-02"},{"lineNumber":111,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":112,"author":{"gitId":"alvintan01"},"content":"        return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":113,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":114,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":115,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":116,"author":{"gitId":"alvintan01"},"content":"     * Splits the user input into command and command parameters.","lastModifiedDate":"2021-10-02"},{"lineNumber":117,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":118,"author":{"gitId":"alvintan01"},"content":"     * @param userInput String input from user.","lastModifiedDate":"2021-10-02"},{"lineNumber":119,"author":{"gitId":"alvintan01"},"content":"     * @return Array of string with size 2 with index 0 representing the command and index 1 representing the","lastModifiedDate":"2021-10-02"},{"lineNumber":120,"author":{"gitId":"alvintan01"},"content":"     *     command parameters.","lastModifiedDate":"2021-10-02"},{"lineNumber":121,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":122,"author":{"gitId":"alvintan01"},"content":"    public static String[] parseCommand(String userInput) {","lastModifiedDate":"2021-10-02"},{"lineNumber":123,"author":{"gitId":"alvintan01"},"content":"        // Splits user input by spaces","lastModifiedDate":"2021-10-02"},{"lineNumber":124,"author":{"gitId":"alvintan01"},"content":"        String[] userInputSplit \u003d userInput.split(\"\\\\s+\", 2);","lastModifiedDate":"2021-10-02"},{"lineNumber":125,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"alvintan01"},"content":"        assert (userInputSplit.length \u003c\u003d 2) : \"Command extraction failed! More than 2 values were returned!\";","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":128,"author":{"gitId":"alvintan01"},"content":"        String command \u003d userInputSplit[0].toLowerCase();","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"alvintan01"},"content":"        String commandParameters \u003d \"\";","lastModifiedDate":"2021-10-02"},{"lineNumber":130,"author":{"gitId":"alvintan01"},"content":"        if (userInputSplit.length \u003e 1) { // Ensure command parameter exists","lastModifiedDate":"2021-10-02"},{"lineNumber":131,"author":{"gitId":"alvintan01"},"content":"            commandParameters \u003d userInputSplit[1];","lastModifiedDate":"2021-10-02"},{"lineNumber":132,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":133,"author":{"gitId":"alvintan01"},"content":"        return new String[]{command, commandParameters};","lastModifiedDate":"2021-10-02"},{"lineNumber":134,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":135,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":136,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":137,"author":{"gitId":"alvintan01"},"content":"     * Returns all the parameters passed entered as a hashmap.","lastModifiedDate":"2021-10-02"},{"lineNumber":138,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":139,"author":{"gitId":"alvintan01"},"content":"     * @param parameterString String of parameters.","lastModifiedDate":"2021-10-02"},{"lineNumber":140,"author":{"gitId":"alvintan01"},"content":"     * @return HashMap with parameter as key and parameter contents as value.","lastModifiedDate":"2021-10-02"},{"lineNumber":141,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":142,"author":{"gitId":"alvintan01"},"content":"    public static HashMap\u003cString, String\u003e parseParameters(String parameterString) {","lastModifiedDate":"2021-10-02"},{"lineNumber":143,"author":{"gitId":"alvintan01"},"content":"        HashMap\u003cString, String\u003e parameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-02"},{"lineNumber":144,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":145,"author":{"gitId":"alvintan01"},"content":"        String[] parameterSplit \u003d parameterString.split(\"\\\\s+\"); // Split by space","lastModifiedDate":"2021-10-02"},{"lineNumber":146,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":147,"author":{"gitId":"alvintan01"},"content":"        String commandParameter \u003d \"\";","lastModifiedDate":"2021-10-02"},{"lineNumber":148,"author":{"gitId":"alvintan01"},"content":"        StringBuilder parameterContents \u003d new StringBuilder();","lastModifiedDate":"2021-10-02"},{"lineNumber":149,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":150,"author":{"gitId":"alvintan01"},"content":"        for (String s : parameterSplit) {","lastModifiedDate":"2021-10-02"},{"lineNumber":151,"author":{"gitId":"alvintan01"},"content":"            if (s.contains(DELIMITER)) {","lastModifiedDate":"2021-10-02"},{"lineNumber":152,"author":{"gitId":"alvintan01"},"content":"                if (!commandParameter.equals(\"\")) { // Ensure it is not the first iteration","lastModifiedDate":"2021-10-02"},{"lineNumber":153,"author":{"gitId":"alvintan01"},"content":"                    // Add to hashmap before resetting values","lastModifiedDate":"2021-10-02"},{"lineNumber":154,"author":{"gitId":"alvintan01"},"content":"                    parameters.put(commandParameter, parameterContents.toString());","lastModifiedDate":"2021-10-02"},{"lineNumber":155,"author":{"gitId":"alvintan01"},"content":"                }","lastModifiedDate":"2021-10-02"},{"lineNumber":156,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":157,"author":{"gitId":"alvintan01"},"content":"                parameterContents \u003d new StringBuilder(); // Reset the values","lastModifiedDate":"2021-10-02"},{"lineNumber":158,"author":{"gitId":"alvintan01"},"content":"                String[] commandSplit \u003d s.split(DELIMITER);","lastModifiedDate":"2021-10-02"},{"lineNumber":159,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"alvintan01"},"content":"                if (commandSplit.length !\u003d 0) { // Ensure \u0027/\u0027 exists","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"alvintan01"},"content":"                    commandParameter \u003d commandSplit[0].toLowerCase();","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"alvintan01"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":164,"author":{"gitId":"alvintan01"},"content":"                if (commandSplit.length \u003e 1) {","lastModifiedDate":"2021-10-02"},{"lineNumber":165,"author":{"gitId":"alvintan01"},"content":"                    parameterContents \u003d new StringBuilder(commandSplit[1]);","lastModifiedDate":"2021-10-02"},{"lineNumber":166,"author":{"gitId":"alvintan01"},"content":"                }","lastModifiedDate":"2021-10-02"},{"lineNumber":167,"author":{"gitId":"alvintan01"},"content":"            } else { // Add the rest of the string","lastModifiedDate":"2021-10-02"},{"lineNumber":168,"author":{"gitId":"alvintan01"},"content":"                parameterContents.append(\" \").append(s);","lastModifiedDate":"2021-10-02"},{"lineNumber":169,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":170,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":171,"author":{"gitId":"alvintan01"},"content":"        parameters.put(commandParameter, parameterContents.toString()); // Add to hashmap for the last parameter","lastModifiedDate":"2021-10-02"},{"lineNumber":172,"author":{"gitId":"alvintan01"},"content":"        return parameters;","lastModifiedDate":"2021-10-02"},{"lineNumber":173,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":174,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":165,"RemusTeo":5,"deonchung":1,"jiangweichen835":2,"a-tph":1}},{"path":"src/main/java/parser/StockValidator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import command.CommandParameters;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":" * Contains all the methods to validate if a Medicine\u0027s input parameters are valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"public class StockValidator {","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"RemusTeo"},"content":"     * Checks if the given stock id is valid.","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"     * @param ui        Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"     * @param id        ID of the medicine to be checked.","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"     * @param medicines List of all medicines.","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"     * @return Boolean value indicating if medicine ID is valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    public static boolean isValidStockId(Ui ui, String id, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"            int stockId \u003d Integer.parseInt(id);","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"            if (stockId \u003c\u003d 0 || stockId \u003e Stock.getStockCount()) {","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"                throw new Exception();","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"RemusTeo"},"content":"            boolean stockExist \u003d false;","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"            for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"                if (!(medicine instanceof Stock)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"                    continue;","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"                }","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"                Stock stock \u003d (Stock) medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"                if (stock.getStockID() \u003d\u003d stockId) {","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"RemusTeo"},"content":"                    stockExist \u003d true;","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"RemusTeo"},"content":"                    break;","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"RemusTeo"},"content":"                }","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"RemusTeo"},"content":"            if (!stockExist) {","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"RemusTeo"},"content":"                ui.print(\"Invalid stock id provided!\");","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"RemusTeo"},"content":"                return false;","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"RemusTeo"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"            return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Invalid stock id provided!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"        return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"     * Checks if a medicine price is valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"     * @param ui          Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"     * @param priceString Price of the medicine to be checked.","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"     * @return Boolean value indicating if medicine price is valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"    public static boolean isValidPrice(Ui ui, String priceString) {","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"            double price \u003d Double.parseDouble(priceString);","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"            if (price \u003c 0) {","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"                throw new Exception();","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"            return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Invalid price provided!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"        return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"     * Checks if a medicine expiry date is valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"     * @param ui           Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-02"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"     * @param expiryString Expiry date of the medicine.","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"     * @return Boolean value indicating if medicine expiry date is valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"    public static boolean isValidExpiry(Ui ui, String expiryString) {","lastModifiedDate":"2021-10-02"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"            DateParser.stringToDate(expiryString);","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"            return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Invalid expiry date! Ensure date is in \" + DateParser.OUTPUT_DATE_FORMAT + \".\");","lastModifiedDate":"2021-10-02"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"        return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":89,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":91,"author":{"gitId":"alvintan01"},"content":"     * Checks if a medicine description is empty.","lastModifiedDate":"2021-10-02"},{"lineNumber":92,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":93,"author":{"gitId":"alvintan01"},"content":"     * @param ui          Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-02"},{"lineNumber":94,"author":{"gitId":"alvintan01"},"content":"     * @param description Medicine description to be checked.","lastModifiedDate":"2021-10-02"},{"lineNumber":95,"author":{"gitId":"alvintan01"},"content":"     * @return Boolean value indicating if medicine name is valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":96,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":97,"author":{"gitId":"alvintan01"},"content":"    public static boolean isValidDescription(Ui ui, String description) {","lastModifiedDate":"2021-10-02"},{"lineNumber":98,"author":{"gitId":"alvintan01"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2021-10-02"},{"lineNumber":99,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Description cannot be empty!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":100,"author":{"gitId":"alvintan01"},"content":"            return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":101,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":102,"author":{"gitId":"alvintan01"},"content":"        return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":103,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":104,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":105,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":106,"author":{"gitId":"alvintan01"},"content":"     * Checks if a medicine max quantity is valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":107,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":108,"author":{"gitId":"alvintan01"},"content":"     * @param ui                Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-02"},{"lineNumber":109,"author":{"gitId":"alvintan01"},"content":"     * @param maxQuantityString Max quantity of the medicine.","lastModifiedDate":"2021-10-02"},{"lineNumber":110,"author":{"gitId":"alvintan01"},"content":"     * @return Boolean value indicating if max medicine quantity is valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":111,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":112,"author":{"gitId":"alvintan01"},"content":"    public static boolean isValidMaxQuantity(Ui ui, String maxQuantityString) {","lastModifiedDate":"2021-10-02"},{"lineNumber":113,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-10-02"},{"lineNumber":114,"author":{"gitId":"alvintan01"},"content":"            int maxQuantity \u003d Integer.parseInt(maxQuantityString);","lastModifiedDate":"2021-10-02"},{"lineNumber":115,"author":{"gitId":"alvintan01"},"content":"            if (maxQuantity \u003c 0) {","lastModifiedDate":"2021-10-02"},{"lineNumber":116,"author":{"gitId":"alvintan01"},"content":"                throw new Exception();","lastModifiedDate":"2021-10-02"},{"lineNumber":117,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":118,"author":{"gitId":"alvintan01"},"content":"            return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":119,"author":{"gitId":"alvintan01"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":120,"author":{"gitId":"alvintan01"},"content":"            ui.print(\"Invalid max quantity provided!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":121,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":122,"author":{"gitId":"alvintan01"},"content":"        return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":123,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":124,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":125,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":126,"author":{"gitId":"alvintan01"},"content":"     * Checks if a medicine column/alias exists.","lastModifiedDate":"2021-10-02"},{"lineNumber":127,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":128,"author":{"gitId":"alvintan01"},"content":"     * @param ui         Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-02"},{"lineNumber":129,"author":{"gitId":"alvintan01"},"content":"     * @param columnName Column name/alias to be validated.","lastModifiedDate":"2021-10-02"},{"lineNumber":130,"author":{"gitId":"alvintan01"},"content":"     * @return Boolean value indicating if max medicine quantity is valid.","lastModifiedDate":"2021-10-02"},{"lineNumber":131,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":132,"author":{"gitId":"alvintan01"},"content":"    public static boolean isValidColumn(Ui ui, String columnName) {","lastModifiedDate":"2021-10-02"},{"lineNumber":133,"author":{"gitId":"alvintan01"},"content":"        String[] columnAlias \u003d new String[]{CommandParameters.ID, CommandParameters.NAME, CommandParameters.PRICE,","lastModifiedDate":"2021-10-14"},{"lineNumber":134,"author":{"gitId":"alvintan01"},"content":"            CommandParameters.QUANTITY, CommandParameters.EXPIRY_DATE, CommandParameters.DESCRIPTION,","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"alvintan01"},"content":"            CommandParameters.MAX_QUANTITY};","lastModifiedDate":"2021-10-02"},{"lineNumber":136,"author":{"gitId":"alvintan01"},"content":"        if (Arrays.asList(Stock.COLUMNS).contains(columnName.toUpperCase()) || Arrays.asList(columnAlias)","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"alvintan01"},"content":"                .contains(columnName.toLowerCase())) {","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"alvintan01"},"content":"            return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":139,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":140,"author":{"gitId":"alvintan01"},"content":"        ui.print(\"Invalid column name/alias! Column names can only be \" + Arrays.toString(Stock.COLUMNS) + \" and \"","lastModifiedDate":"2021-10-04"},{"lineNumber":141,"author":{"gitId":"alvintan01"},"content":"                + \"the respective aliases are \" + Arrays.toString(columnAlias) + \".\");","lastModifiedDate":"2021-10-02"},{"lineNumber":142,"author":{"gitId":"alvintan01"},"content":"        return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":143,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":144,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":145,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"a-tph"},"content":"     * Checks if total quantity of medicine is below max quantity.","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"a-tph"},"content":"     * @param ui          Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"a-tph"},"content":"     * @param quantity    Quantity of the medicines.","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"a-tph"},"content":"     * @param maxQuantity Max quantity of medicines.","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"a-tph"},"content":"     * @return Boolean value indicating if total quantity is less than max quantity.","lastModifiedDate":"2021-10-06"},{"lineNumber":152,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":153,"author":{"gitId":"a-tph"},"content":"    public static boolean quantityValidityChecker(Ui ui, int quantity, int maxQuantity) {","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"a-tph"},"content":"        if (quantity \u003e maxQuantity) {","lastModifiedDate":"2021-10-06"},{"lineNumber":155,"author":{"gitId":"a-tph"},"content":"            String message \u003d \"Quantity: \" + quantity + \", Max Quantity: \" + maxQuantity;","lastModifiedDate":"2021-10-06"},{"lineNumber":156,"author":{"gitId":"a-tph"},"content":"            ui.print(\"Quantity cannot be more than maximum quantity!\");","lastModifiedDate":"2021-10-06"},{"lineNumber":157,"author":{"gitId":"a-tph"},"content":"            ui.print(message);","lastModifiedDate":"2021-10-06"},{"lineNumber":158,"author":{"gitId":"a-tph"},"content":"            return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":159,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":160,"author":{"gitId":"a-tph"},"content":"        return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":162,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":163,"author":{"gitId":"a-tph"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":164,"author":{"gitId":"a-tph"},"content":"     * Checks if input date for medicine already exists.","lastModifiedDate":"2021-10-06"},{"lineNumber":165,"author":{"gitId":"a-tph"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":166,"author":{"gitId":"a-tph"},"content":"     * @param ui         Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-10-06"},{"lineNumber":167,"author":{"gitId":"a-tph"},"content":"     * @param medicines  List of all medicines.","lastModifiedDate":"2021-10-06"},{"lineNumber":168,"author":{"gitId":"a-tph"},"content":"     * @param expiryDate Expiry date given by user","lastModifiedDate":"2021-10-06"},{"lineNumber":169,"author":{"gitId":"a-tph"},"content":"     * @param name       Medicine name to check against","lastModifiedDate":"2021-10-06"},{"lineNumber":170,"author":{"gitId":"a-tph"},"content":"     * @return Boolean false if same expiry date exist","lastModifiedDate":"2021-10-06"},{"lineNumber":171,"author":{"gitId":"a-tph"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":172,"author":{"gitId":"a-tph"},"content":"    public static boolean dateValidityChecker(Ui ui, ArrayList\u003cMedicine\u003e medicines, Date expiryDate, String name) {","lastModifiedDate":"2021-10-06"},{"lineNumber":173,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cStock\u003e filteredMedicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":174,"author":{"gitId":"a-tph"},"content":"        for (Medicine medicine : medicines) {","lastModifiedDate":"2021-10-06"},{"lineNumber":175,"author":{"gitId":"a-tph"},"content":"            if (medicine instanceof Stock \u0026\u0026 name.equalsIgnoreCase(medicine.getMedicineName())) {","lastModifiedDate":"2021-10-06"},{"lineNumber":176,"author":{"gitId":"a-tph"},"content":"                filteredMedicines.add((Stock) medicine);","lastModifiedDate":"2021-10-06"},{"lineNumber":177,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":178,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":179,"author":{"gitId":"a-tph"},"content":"        for (Stock filteredStock : filteredMedicines) {","lastModifiedDate":"2021-10-06"},{"lineNumber":180,"author":{"gitId":"a-tph"},"content":"            if (expiryDate.equals(filteredStock.getExpiry())) {","lastModifiedDate":"2021-10-06"},{"lineNumber":181,"author":{"gitId":"a-tph"},"content":"                ui.print(\"Same expiry date already exists!\");","lastModifiedDate":"2021-10-06"},{"lineNumber":182,"author":{"gitId":"a-tph"},"content":"                return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":183,"author":{"gitId":"a-tph"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":184,"author":{"gitId":"a-tph"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":185,"author":{"gitId":"a-tph"},"content":"        return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":186,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":187,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":133,"RemusTeo":10,"a-tph":44}},{"path":"src/main/java/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import command.CommandSyntax;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import inventory.Dispense;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import inventory.Order;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import parser.DateParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"import parser.MedicineManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":" * Handles printing all messages in the application to the console.","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"public class Ui {","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    private static final int TABLE_PADDING \u003d 2;","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    private static final int DESCRIPTION_MAX_WIDTH \u003d 45;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"     * Prints the welcome command message.","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"        String logo \u003d \"|  \\\\/  |          | |(_)| | | |              | || |  \\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"                + \"| .  . |  ___   __| | _ | | | |  __ _  _   _ | || |_ \\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"                + \"| |\\\\/| | / _ \\\\ / _` || || | | | / _` || | | || || __|\\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"                + \"| |  | ||  __/| (_| || |\\\\ \\\\_/ /| (_| || |_| || || |_ \\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"RemusTeo"},"content":"                + \"\\\\_|  |_/ \\\\___| \\\\__,_||_| \\\\___/  \\\\__,_| \\\\__,_||_| \\\\__|\\n\";","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"RemusTeo"},"content":"        print(logo + \"Welcome to MediVault!\");","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"     * Prints the invalid command message.","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"    public void printInvalidCommandMessage() {","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"        print(\"Sorry! I did not understand your command.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"     * Prints the statements.","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"     * @param statement Statement to be printed.","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"    public void print(String statement) {","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"        System.out.println(statement);","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"     * Prints the invalid parameter message.","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"     * @param parameter     The invalid parameter found.","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"     * @param commandSyntax The command syntax of the command.","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"    public void printInvalidParameter(String parameter, String commandSyntax) {","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"        if (parameter.equals(\"\")) {","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"            print(\"Please provide all the required parameters!\");","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"        } else {","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"            print(\"An invalid parameter \" + parameter + \" is provided!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"        print(\"COMMAND SYNTAX: \" + commandSyntax);","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"     * Prints the missing parameter message.","lastModifiedDate":"2021-10-03"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"     * @param parameter     The parameter that is not found.","lastModifiedDate":"2021-10-03"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"     * @param commandSyntax The command syntax of the command.","lastModifiedDate":"2021-10-03"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"    public void printRequiredParameter(String parameter, String commandSyntax) {","lastModifiedDate":"2021-10-03"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"        print(\"Required parameter \" + parameter + \" is missing!\");","lastModifiedDate":"2021-10-03"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"        print(\"COMMAND SYNTAX: \" + commandSyntax);","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"     * Prints out the medicine in a table format.","lastModifiedDate":"2021-10-03"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"     * @param stock Stock to be printed.","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"    public void printStock(Stock stock) {","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"        ArrayList\u003cStock\u003e stocks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-04"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"        stocks.add(stock);","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"        printStocks(stocks, medicines);","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"     * Prints out the medicine in a table format.","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"     * @param stock Stock to be printed.","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"alvintan01"},"content":"     * @param medicines Arraylist of the medicines.","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":93,"author":{"gitId":"alvintan01"},"content":"    public void printStock(Stock stock, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"alvintan01"},"content":"        ArrayList\u003cStock\u003e stocks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"alvintan01"},"content":"        stocks.add(stock);","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"alvintan01"},"content":"        printStocks(stocks, medicines);","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"alvintan01"},"content":"     * Prints out all the stocks in the Arraylist in a table format.","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"alvintan01"},"content":"     * @param stocks Arraylist of the stocks.","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"alvintan01"},"content":"     * @param medicines Arraylist of the medicines.","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"alvintan01"},"content":"    public void printStocks(ArrayList\u003cStock\u003e stocks, ArrayList\u003cMedicine\u003e medicines) {","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"alvintan01"},"content":"        if (stocks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"alvintan01"},"content":"            print(\"There are no stocks found.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"alvintan01"},"content":"            return;","lastModifiedDate":"2021-10-02"},{"lineNumber":109,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":110,"author":{"gitId":"alvintan01"},"content":"        int idWidth \u003d Stock.COLUMNS[0].length();","lastModifiedDate":"2021-10-04"},{"lineNumber":111,"author":{"gitId":"alvintan01"},"content":"        int nameWidth \u003d Stock.COLUMNS[1].length();","lastModifiedDate":"2021-10-04"},{"lineNumber":112,"author":{"gitId":"alvintan01"},"content":"        int priceWidth \u003d Stock.COLUMNS[2].length();","lastModifiedDate":"2021-10-04"},{"lineNumber":113,"author":{"gitId":"alvintan01"},"content":"        int quantityWidth \u003d Stock.COLUMNS[3].length();","lastModifiedDate":"2021-10-04"},{"lineNumber":114,"author":{"gitId":"alvintan01"},"content":"        int expiryWidth \u003d Stock.COLUMNS[4].length();","lastModifiedDate":"2021-10-04"},{"lineNumber":115,"author":{"gitId":"alvintan01"},"content":"        int descriptionWidth \u003d Stock.COLUMNS[5].length();","lastModifiedDate":"2021-10-04"},{"lineNumber":116,"author":{"gitId":"alvintan01"},"content":"        int maxQuantityWidth \u003d Stock.COLUMNS[6].length();","lastModifiedDate":"2021-10-04"},{"lineNumber":117,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":118,"author":{"gitId":"alvintan01"},"content":"        // Find the longest width of each column","lastModifiedDate":"2021-10-02"},{"lineNumber":119,"author":{"gitId":"alvintan01"},"content":"        for (Stock stock : stocks) {","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"alvintan01"},"content":"            idWidth \u003d Math.max(String.valueOf(stock.getStockID()).length(), idWidth);","lastModifiedDate":"2021-10-04"},{"lineNumber":121,"author":{"gitId":"alvintan01"},"content":"            nameWidth \u003d Math.max(stock.getMedicineName().length(), nameWidth);","lastModifiedDate":"2021-10-04"},{"lineNumber":122,"author":{"gitId":"alvintan01"},"content":"            priceWidth \u003d Math.max(String.format(\"$%.2f\", stock.getPrice()).length(), priceWidth);","lastModifiedDate":"2021-10-04"},{"lineNumber":123,"author":{"gitId":"alvintan01"},"content":"            quantityWidth \u003d Math.max(String.valueOf(stock.getQuantity()).length(), quantityWidth);","lastModifiedDate":"2021-10-04"},{"lineNumber":124,"author":{"gitId":"alvintan01"},"content":"            int orderQuantity \u003d MedicineManager.getTotalOrderQuantity(medicines, stock.getMedicineName());","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"alvintan01"},"content":"            if (orderQuantity !\u003d 0) {","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"alvintan01"},"content":"                quantityWidth \u003d Math.max((\"PENDING: \" + orderQuantity).length(), quantityWidth);","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"alvintan01"},"content":"            expiryWidth \u003d Math.max(DateParser.dateToString(stock.getExpiry()).length(), expiryWidth);","lastModifiedDate":"2021-10-04"},{"lineNumber":129,"author":{"gitId":"alvintan01"},"content":"            descriptionWidth \u003d Math.min(Math.max(stock.getDescription().length(), descriptionWidth),","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"alvintan01"},"content":"                    DESCRIPTION_MAX_WIDTH);","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"alvintan01"},"content":"            maxQuantityWidth \u003d Math.max(String.valueOf(stock.getMaxQuantity()).length(), maxQuantityWidth);","lastModifiedDate":"2021-10-04"},{"lineNumber":132,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":133,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":134,"author":{"gitId":"alvintan01"},"content":"        int[] columnWidths \u003d {idWidth, nameWidth, priceWidth, quantityWidth, expiryWidth, descriptionWidth,","lastModifiedDate":"2021-10-02"},{"lineNumber":135,"author":{"gitId":"alvintan01"},"content":"            maxQuantityWidth};","lastModifiedDate":"2021-10-02"},{"lineNumber":136,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":137,"author":{"gitId":"alvintan01"},"content":"        // Pad the data in the columns","lastModifiedDate":"2021-10-02"},{"lineNumber":138,"author":{"gitId":"alvintan01"},"content":"        String idFormat \u003d \"| %1$-\" + idWidth + \"s | \";","lastModifiedDate":"2021-10-02"},{"lineNumber":139,"author":{"gitId":"alvintan01"},"content":"        String nameFormat \u003d \"%1$-\" + nameWidth + \"s | \";","lastModifiedDate":"2021-10-02"},{"lineNumber":140,"author":{"gitId":"alvintan01"},"content":"        String priceFormat \u003d \"%1$-\" + priceWidth + \"s | \";","lastModifiedDate":"2021-10-02"},{"lineNumber":141,"author":{"gitId":"alvintan01"},"content":"        String quantityFormat \u003d \"%1$-\" + quantityWidth + \"s | \";","lastModifiedDate":"2021-10-02"},{"lineNumber":142,"author":{"gitId":"alvintan01"},"content":"        String expiryFormat \u003d \"%1$-\" + expiryWidth + \"s | \";","lastModifiedDate":"2021-10-02"},{"lineNumber":143,"author":{"gitId":"alvintan01"},"content":"        String descriptionFormat \u003d \"%1$-\" + descriptionWidth + \"s | \";","lastModifiedDate":"2021-10-02"},{"lineNumber":144,"author":{"gitId":"alvintan01"},"content":"        String maxQuantityFormat \u003d \"%1$-\" + maxQuantityWidth + \"s | \";","lastModifiedDate":"2021-10-02"},{"lineNumber":145,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":146,"author":{"gitId":"alvintan01"},"content":"        String[] formats \u003d {idFormat, nameFormat, priceFormat, quantityFormat, expiryFormat, descriptionFormat,","lastModifiedDate":"2021-10-02"},{"lineNumber":147,"author":{"gitId":"alvintan01"},"content":"            maxQuantityFormat};","lastModifiedDate":"2021-10-02"},{"lineNumber":148,"author":{"gitId":"alvintan01"},"content":"        StringBuilder headers \u003d new StringBuilder();","lastModifiedDate":"2021-10-02"},{"lineNumber":149,"author":{"gitId":"alvintan01"},"content":"        for (int i \u003d 0; i \u003c columnWidths.length; i++) {","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"alvintan01"},"content":"            headers.append(String.format(formats[i], centerString(columnWidths[i], Stock.COLUMNS[i])));","lastModifiedDate":"2021-10-04"},{"lineNumber":151,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":152,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":153,"author":{"gitId":"alvintan01"},"content":"        printHeaderBorder(columnWidths);","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"alvintan01"},"content":"        System.out.println(headers);","lastModifiedDate":"2021-10-02"},{"lineNumber":155,"author":{"gitId":"alvintan01"},"content":"        printHeaderBorder(columnWidths);","lastModifiedDate":"2021-10-09"},{"lineNumber":156,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":157,"author":{"gitId":"alvintan01"},"content":"        for (Stock stock : stocks) {","lastModifiedDate":"2021-10-09"},{"lineNumber":158,"author":{"gitId":"alvintan01"},"content":"            String description \u003d stock.getDescription();","lastModifiedDate":"2021-10-09"},{"lineNumber":159,"author":{"gitId":"alvintan01"},"content":"            String truncatedDescription \u003d truncateDescription(description, 0);","lastModifiedDate":"2021-10-09"},{"lineNumber":160,"author":{"gitId":"alvintan01"},"content":"            int orderQuantity \u003d MedicineManager.getTotalOrderQuantity(medicines, stock.getMedicineName());","lastModifiedDate":"2021-10-13"},{"lineNumber":161,"author":{"gitId":"alvintan01"},"content":"            int descriptionIndex \u003d truncatedDescription.length();","lastModifiedDate":"2021-10-09"},{"lineNumber":162,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":163,"author":{"gitId":"alvintan01"},"content":"            String row \u003d String.format(idFormat, centerString(idWidth, String.valueOf(stock.getStockID())))","lastModifiedDate":"2021-10-04"},{"lineNumber":164,"author":{"gitId":"alvintan01"},"content":"                    + String.format(nameFormat, centerString(nameWidth, stock.getMedicineName()))","lastModifiedDate":"2021-10-04"},{"lineNumber":165,"author":{"gitId":"alvintan01"},"content":"                    + String.format(priceFormat, centerString(priceWidth, String.format(\"$%.2f\", stock.getPrice())))","lastModifiedDate":"2021-10-04"},{"lineNumber":166,"author":{"gitId":"alvintan01"},"content":"                    + String.format(quantityFormat, centerString(quantityWidth, String.valueOf(stock.getQuantity())))","lastModifiedDate":"2021-10-04"},{"lineNumber":167,"author":{"gitId":"alvintan01"},"content":"                    + String.format(expiryFormat, centerString(expiryWidth,","lastModifiedDate":"2021-10-03"},{"lineNumber":168,"author":{"gitId":"alvintan01"},"content":"                    DateParser.dateToString(stock.getExpiry())))","lastModifiedDate":"2021-10-04"},{"lineNumber":169,"author":{"gitId":"alvintan01"},"content":"                    + String.format(descriptionFormat, centerString(descriptionWidth, truncatedDescription))","lastModifiedDate":"2021-10-09"},{"lineNumber":170,"author":{"gitId":"alvintan01"},"content":"                    + String.format(maxQuantityFormat, centerString(maxQuantityWidth,","lastModifiedDate":"2021-10-03"},{"lineNumber":171,"author":{"gitId":"alvintan01"},"content":"                    String.valueOf(stock.getMaxQuantity())));","lastModifiedDate":"2021-10-04"},{"lineNumber":172,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":173,"author":{"gitId":"alvintan01"},"content":"            while (descriptionIndex \u003c description.length() || orderQuantity !\u003d 0) {","lastModifiedDate":"2021-10-13"},{"lineNumber":174,"author":{"gitId":"alvintan01"},"content":"                truncatedDescription \u003d truncateDescription(description, descriptionIndex);","lastModifiedDate":"2021-10-09"},{"lineNumber":175,"author":{"gitId":"alvintan01"},"content":"                descriptionIndex +\u003d truncatedDescription.length();","lastModifiedDate":"2021-10-09"},{"lineNumber":176,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":177,"author":{"gitId":"alvintan01"},"content":"                row +\u003d \"\\n\" + String.format(idFormat, \"\") + String.format(nameFormat, \"\")","lastModifiedDate":"2021-10-09"},{"lineNumber":178,"author":{"gitId":"alvintan01"},"content":"                        + String.format(priceFormat, \"\")","lastModifiedDate":"2021-10-13"},{"lineNumber":179,"author":{"gitId":"alvintan01"},"content":"                        + String.format(quantityFormat, (orderQuantity \u003d\u003d 0) ? \"\" : (\"PENDING: \" + orderQuantity))","lastModifiedDate":"2021-10-13"},{"lineNumber":180,"author":{"gitId":"alvintan01"},"content":"                        + String.format(expiryFormat, \"\")","lastModifiedDate":"2021-10-09"},{"lineNumber":181,"author":{"gitId":"alvintan01"},"content":"                        + String.format(descriptionFormat, centerString(descriptionWidth, truncatedDescription))","lastModifiedDate":"2021-10-09"},{"lineNumber":182,"author":{"gitId":"alvintan01"},"content":"                        + String.format(maxQuantityFormat, \"\");","lastModifiedDate":"2021-10-09"},{"lineNumber":183,"author":{"gitId":"alvintan01"},"content":"                orderQuantity \u003d 0; // Reset the quantity count to prevent looping","lastModifiedDate":"2021-10-13"},{"lineNumber":184,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":185,"author":{"gitId":"alvintan01"},"content":"            System.out.println(row);","lastModifiedDate":"2021-10-02"},{"lineNumber":186,"author":{"gitId":"alvintan01"},"content":"            printRowBorder(columnWidths);","lastModifiedDate":"2021-10-09"},{"lineNumber":187,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":188,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":189,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":190,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":191,"author":{"gitId":"alvintan01"},"content":"     * Helps to truncate the description of the Stock and ensure that it does not break a word in the middle.","lastModifiedDate":"2021-10-09"},{"lineNumber":192,"author":{"gitId":"alvintan01"},"content":"     * It will ensure that the truncated description returned contains valid words.","lastModifiedDate":"2021-10-09"},{"lineNumber":193,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":194,"author":{"gitId":"alvintan01"},"content":"     * @param description   Description of the Stock.","lastModifiedDate":"2021-10-09"},{"lineNumber":195,"author":{"gitId":"alvintan01"},"content":"     * @param startingIndex The starting index to truncate the description.","lastModifiedDate":"2021-10-09"},{"lineNumber":196,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":197,"author":{"gitId":"alvintan01"},"content":"    private String truncateDescription(String description, int startingIndex) {","lastModifiedDate":"2021-10-09"},{"lineNumber":198,"author":{"gitId":"alvintan01"},"content":"        String truncatedDescription \u003d \"\";","lastModifiedDate":"2021-10-09"},{"lineNumber":199,"author":{"gitId":"alvintan01"},"content":"        int descriptionIndex \u003d Math.min(description.length(), startingIndex + DESCRIPTION_MAX_WIDTH);","lastModifiedDate":"2021-10-09"},{"lineNumber":200,"author":{"gitId":"alvintan01"},"content":"        truncatedDescription \u003d description.substring(startingIndex, descriptionIndex);","lastModifiedDate":"2021-10-09"},{"lineNumber":201,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":202,"author":{"gitId":"alvintan01"},"content":"        String[] descriptionSplit \u003d truncatedDescription.split(\"\\\\s\"); // Split by spaces","lastModifiedDate":"2021-10-09"},{"lineNumber":203,"author":{"gitId":"alvintan01"},"content":"        // Ensure that last word is not a space","lastModifiedDate":"2021-10-09"},{"lineNumber":204,"author":{"gitId":"alvintan01"},"content":"        if (descriptionIndex \u003c description.length()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":205,"author":{"gitId":"alvintan01"},"content":"            if (description.charAt(descriptionIndex) !\u003d \u0027 \u0027 \u0026\u0026 descriptionSplit.length \u003e 1) {","lastModifiedDate":"2021-10-09"},{"lineNumber":206,"author":{"gitId":"alvintan01"},"content":"                descriptionSplit[descriptionSplit.length - 1] \u003d \"\"; // Remove the last partial word","lastModifiedDate":"2021-10-09"},{"lineNumber":207,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":208,"author":{"gitId":"alvintan01"},"content":"            truncatedDescription \u003d String.join(\" \", descriptionSplit);","lastModifiedDate":"2021-10-09"},{"lineNumber":209,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":210,"author":{"gitId":"alvintan01"},"content":"        return truncatedDescription;","lastModifiedDate":"2021-10-09"},{"lineNumber":211,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":212,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":213,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":214,"author":{"gitId":"alvintan01"},"content":"     * Prints the header borders for a table.","lastModifiedDate":"2021-10-02"},{"lineNumber":215,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":216,"author":{"gitId":"alvintan01"},"content":"     * @param columnWidths Array of the columns widths in the table.","lastModifiedDate":"2021-10-02"},{"lineNumber":217,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":218,"author":{"gitId":"alvintan01"},"content":"    private void printHeaderBorder(int[] columnWidths) {","lastModifiedDate":"2021-10-09"},{"lineNumber":219,"author":{"gitId":"alvintan01"},"content":"        StringBuilder headerBorder \u003d new StringBuilder();","lastModifiedDate":"2021-10-02"},{"lineNumber":220,"author":{"gitId":"alvintan01"},"content":"        for (int columnWidth : columnWidths) {","lastModifiedDate":"2021-10-09"},{"lineNumber":221,"author":{"gitId":"alvintan01"},"content":"            headerBorder.append(\"+\");","lastModifiedDate":"2021-10-02"},{"lineNumber":222,"author":{"gitId":"alvintan01"},"content":"            int width \u003d columnWidth + TABLE_PADDING;","lastModifiedDate":"2021-10-09"},{"lineNumber":223,"author":{"gitId":"alvintan01"},"content":"            headerBorder.append(\"\u003d\".repeat(width));","lastModifiedDate":"2021-10-02"},{"lineNumber":224,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":225,"author":{"gitId":"alvintan01"},"content":"        headerBorder.append(\"+\");","lastModifiedDate":"2021-10-02"},{"lineNumber":226,"author":{"gitId":"alvintan01"},"content":"        System.out.println(headerBorder);","lastModifiedDate":"2021-10-02"},{"lineNumber":227,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":228,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":229,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":230,"author":{"gitId":"alvintan01"},"content":"     * Prints the row borders for a table.","lastModifiedDate":"2021-10-02"},{"lineNumber":231,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":232,"author":{"gitId":"alvintan01"},"content":"     * @param columnWidths Array of the columns widths in the table.","lastModifiedDate":"2021-10-02"},{"lineNumber":233,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":234,"author":{"gitId":"alvintan01"},"content":"    private void printRowBorder(int[] columnWidths) {","lastModifiedDate":"2021-10-09"},{"lineNumber":235,"author":{"gitId":"alvintan01"},"content":"        StringBuilder rowBorder \u003d new StringBuilder();","lastModifiedDate":"2021-10-02"},{"lineNumber":236,"author":{"gitId":"alvintan01"},"content":"        for (int columnWidth : columnWidths) {","lastModifiedDate":"2021-10-09"},{"lineNumber":237,"author":{"gitId":"alvintan01"},"content":"            rowBorder.append(\"+\");","lastModifiedDate":"2021-10-02"},{"lineNumber":238,"author":{"gitId":"alvintan01"},"content":"            int width \u003d columnWidth + TABLE_PADDING;","lastModifiedDate":"2021-10-09"},{"lineNumber":239,"author":{"gitId":"alvintan01"},"content":"            rowBorder.append(\"-\".repeat(width));","lastModifiedDate":"2021-10-02"},{"lineNumber":240,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":241,"author":{"gitId":"alvintan01"},"content":"        rowBorder.append(\"+\");","lastModifiedDate":"2021-10-02"},{"lineNumber":242,"author":{"gitId":"alvintan01"},"content":"        System.out.println(rowBorder);","lastModifiedDate":"2021-10-02"},{"lineNumber":243,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":244,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":245,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":246,"author":{"gitId":"alvintan01"},"content":"     * Centralise a string given a width.","lastModifiedDate":"2021-10-02"},{"lineNumber":247,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":248,"author":{"gitId":"alvintan01"},"content":"     * @param width Width of the column.","lastModifiedDate":"2021-10-02"},{"lineNumber":249,"author":{"gitId":"alvintan01"},"content":"     * @param s     String to be centralised.","lastModifiedDate":"2021-10-02"},{"lineNumber":250,"author":{"gitId":"alvintan01"},"content":"     * @return The centralised string.","lastModifiedDate":"2021-10-02"},{"lineNumber":251,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":252,"author":{"gitId":"alvintan01"},"content":"    private String centerString(int width, String s) {","lastModifiedDate":"2021-10-02"},{"lineNumber":253,"author":{"gitId":"alvintan01"},"content":"        return String.format(\"%-\" + width + \"s\", String.format(\"%\" + (s.length() + (width - s.length()) / 2) + \"s\", s));","lastModifiedDate":"2021-10-02"},{"lineNumber":254,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":255,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":256,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":257,"author":{"gitId":"alvintan01"},"content":"     * Prints out help table with the accepted commands and their respective syntaxes.","lastModifiedDate":"2021-10-07"},{"lineNumber":258,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":259,"author":{"gitId":"alvintan01"},"content":"     * @param commandSyntaxes Arraylist of the commandSyntax to be printed.","lastModifiedDate":"2021-10-07"},{"lineNumber":260,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":261,"author":{"gitId":"alvintan01"},"content":"    public void printHelpMessage(ArrayList\u003cCommandSyntax\u003e commandSyntaxes) {","lastModifiedDate":"2021-10-07"},{"lineNumber":262,"author":{"gitId":"alvintan01"},"content":"        int commandWidth \u003d CommandSyntax.COMMAND.length();","lastModifiedDate":"2021-10-07"},{"lineNumber":263,"author":{"gitId":"alvintan01"},"content":"        int commandSyntaxWidth \u003d CommandSyntax.COMMAND_SYNTAX.length();","lastModifiedDate":"2021-10-07"},{"lineNumber":264,"author":{"gitId":"alvintan01"},"content":"        for (CommandSyntax commandSyntax : commandSyntaxes) {","lastModifiedDate":"2021-10-07"},{"lineNumber":265,"author":{"gitId":"alvintan01"},"content":"            commandWidth \u003d Math.max(commandWidth, commandSyntax.getCommandName().length());","lastModifiedDate":"2021-10-07"},{"lineNumber":266,"author":{"gitId":"alvintan01"},"content":"            commandSyntaxWidth \u003d Math.max(commandSyntaxWidth, commandSyntax.getCommandSyntax().length());","lastModifiedDate":"2021-10-07"},{"lineNumber":267,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":268,"author":{"gitId":"alvintan01"},"content":"        int[] columnWidths \u003d {commandWidth, commandSyntaxWidth};","lastModifiedDate":"2021-10-07"},{"lineNumber":269,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":270,"author":{"gitId":"alvintan01"},"content":"        String commandFormat \u003d \"| %1$-\" + commandWidth + \"s | \";","lastModifiedDate":"2021-10-07"},{"lineNumber":271,"author":{"gitId":"alvintan01"},"content":"        String commandSyntaxFormat \u003d \"%1$-\" + commandSyntaxWidth + \"s | \";","lastModifiedDate":"2021-10-07"},{"lineNumber":272,"author":{"gitId":"alvintan01"},"content":"        String[] formats \u003d {commandFormat, commandSyntaxFormat};","lastModifiedDate":"2021-10-07"},{"lineNumber":273,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":274,"author":{"gitId":"alvintan01"},"content":"        StringBuilder headers \u003d new StringBuilder();","lastModifiedDate":"2021-10-07"},{"lineNumber":275,"author":{"gitId":"alvintan01"},"content":"        for (int i \u003d 0; i \u003c CommandSyntax.NO_OF_COLUMNS; i++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":276,"author":{"gitId":"alvintan01"},"content":"            headers.append(String.format(formats[i], centerString(columnWidths[i], CommandSyntax.COLUMNS[i])));","lastModifiedDate":"2021-10-07"},{"lineNumber":277,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":278,"author":{"gitId":"alvintan01"},"content":"        System.out.println(\"Welcome to the help page.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":279,"author":{"gitId":"alvintan01"},"content":"        System.out.println(\"Note that parameters in {curly braces} are optional.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":280,"author":{"gitId":"alvintan01"},"content":"        System.out.println(\"Parameters in [square braces] indicate that at least one of the parameter(s) must be \"","lastModifiedDate":"2021-10-07"},{"lineNumber":281,"author":{"gitId":"alvintan01"},"content":"                + \"provided.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":282,"author":{"gitId":"alvintan01"},"content":"        printHeaderBorder(columnWidths);","lastModifiedDate":"2021-10-09"},{"lineNumber":283,"author":{"gitId":"alvintan01"},"content":"        System.out.println(headers);","lastModifiedDate":"2021-10-07"},{"lineNumber":284,"author":{"gitId":"alvintan01"},"content":"        printHeaderBorder(columnWidths);","lastModifiedDate":"2021-10-09"},{"lineNumber":285,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":286,"author":{"gitId":"alvintan01"},"content":"        for (CommandSyntax commandSyntax : commandSyntaxes) {","lastModifiedDate":"2021-10-07"},{"lineNumber":287,"author":{"gitId":"alvintan01"},"content":"            String row \u003d String.format(commandFormat, centerString(commandWidth, commandSyntax.getCommandName()))","lastModifiedDate":"2021-10-07"},{"lineNumber":288,"author":{"gitId":"alvintan01"},"content":"                    + String.format(commandSyntaxFormat, commandSyntax.getCommandSyntax());","lastModifiedDate":"2021-10-12"},{"lineNumber":289,"author":{"gitId":"alvintan01"},"content":"            System.out.println(row);","lastModifiedDate":"2021-10-07"},{"lineNumber":290,"author":{"gitId":"alvintan01"},"content":"            printRowBorder(columnWidths);","lastModifiedDate":"2021-10-09"},{"lineNumber":291,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":292,"author":{"gitId":"alvintan01"},"content":"        System.out.println(\"For more information, refer to User Guide: https://ay2122s1-cs2113t-t10-1.github.io/tp/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":293,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":294,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":295,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":296,"author":{"gitId":"alvintan01"},"content":"     * Prints out all the orders in the Arraylist in a table format.","lastModifiedDate":"2021-10-09"},{"lineNumber":297,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":298,"author":{"gitId":"RemusTeo"},"content":"     * @param orders Arraylist of the orders.","lastModifiedDate":"2021-10-14"},{"lineNumber":299,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":300,"author":{"gitId":"RemusTeo"},"content":"    public void printOrders(ArrayList\u003cOrder\u003e orders) {","lastModifiedDate":"2021-10-14"},{"lineNumber":301,"author":{"gitId":"alvintan01"},"content":"        if (orders.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-09"},{"lineNumber":302,"author":{"gitId":"alvintan01"},"content":"            print(\"There are no orders found.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":303,"author":{"gitId":"alvintan01"},"content":"            return;","lastModifiedDate":"2021-10-09"},{"lineNumber":304,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":305,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":306,"author":{"gitId":"alvintan01"},"content":"        int idWidth \u003d Order.COLUMNS[0].length();","lastModifiedDate":"2021-10-09"},{"lineNumber":307,"author":{"gitId":"alvintan01"},"content":"        int nameWidth \u003d Order.COLUMNS[1].length();","lastModifiedDate":"2021-10-09"},{"lineNumber":308,"author":{"gitId":"alvintan01"},"content":"        int quantityWidth \u003d Order.COLUMNS[2].length();","lastModifiedDate":"2021-10-09"},{"lineNumber":309,"author":{"gitId":"alvintan01"},"content":"        int dateWidth \u003d Order.COLUMNS[3].length();","lastModifiedDate":"2021-10-09"},{"lineNumber":310,"author":{"gitId":"alvintan01"},"content":"        int statusWidth \u003d Order.COLUMNS[4].length();","lastModifiedDate":"2021-10-09"},{"lineNumber":311,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":312,"author":{"gitId":"alvintan01"},"content":"        // Find the longest width of each column","lastModifiedDate":"2021-10-09"},{"lineNumber":313,"author":{"gitId":"alvintan01"},"content":"        for (Order order : orders) {","lastModifiedDate":"2021-10-09"},{"lineNumber":314,"author":{"gitId":"alvintan01"},"content":"            idWidth \u003d Math.max(String.valueOf(order.getOrderId()).length(), idWidth);","lastModifiedDate":"2021-10-09"},{"lineNumber":315,"author":{"gitId":"alvintan01"},"content":"            nameWidth \u003d Math.max(order.getMedicineName().length(), nameWidth);","lastModifiedDate":"2021-10-09"},{"lineNumber":316,"author":{"gitId":"alvintan01"},"content":"            quantityWidth \u003d Math.max(String.valueOf(order.getQuantity()).length(), quantityWidth);","lastModifiedDate":"2021-10-09"},{"lineNumber":317,"author":{"gitId":"alvintan01"},"content":"            dateWidth \u003d Math.max(DateParser.dateToString(order.getDate()).length(), dateWidth);","lastModifiedDate":"2021-10-09"},{"lineNumber":318,"author":{"gitId":"alvintan01"},"content":"            statusWidth \u003d Math.max(order.getStatus().length(), statusWidth);","lastModifiedDate":"2021-10-09"},{"lineNumber":319,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":320,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":321,"author":{"gitId":"alvintan01"},"content":"        int[] columnWidths \u003d {idWidth, nameWidth, quantityWidth, dateWidth, statusWidth};","lastModifiedDate":"2021-10-09"},{"lineNumber":322,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":323,"author":{"gitId":"alvintan01"},"content":"        // Pad the data in the columns","lastModifiedDate":"2021-10-09"},{"lineNumber":324,"author":{"gitId":"alvintan01"},"content":"        String idFormat \u003d \"| %1$-\" + idWidth + \"s | \";","lastModifiedDate":"2021-10-09"},{"lineNumber":325,"author":{"gitId":"alvintan01"},"content":"        String nameFormat \u003d \"%1$-\" + nameWidth + \"s | \";","lastModifiedDate":"2021-10-09"},{"lineNumber":326,"author":{"gitId":"alvintan01"},"content":"        String quantityFormat \u003d \"%1$-\" + quantityWidth + \"s | \";","lastModifiedDate":"2021-10-09"},{"lineNumber":327,"author":{"gitId":"alvintan01"},"content":"        String dateFormat \u003d \"%1$-\" + dateWidth + \"s | \";","lastModifiedDate":"2021-10-09"},{"lineNumber":328,"author":{"gitId":"alvintan01"},"content":"        String statusFormat \u003d \"%1$-\" + statusWidth + \"s | \";","lastModifiedDate":"2021-10-09"},{"lineNumber":329,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":330,"author":{"gitId":"alvintan01"},"content":"        String[] formats \u003d {idFormat, nameFormat, quantityFormat, dateFormat, statusFormat};","lastModifiedDate":"2021-10-09"},{"lineNumber":331,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":332,"author":{"gitId":"alvintan01"},"content":"        StringBuilder headers \u003d new StringBuilder();","lastModifiedDate":"2021-10-09"},{"lineNumber":333,"author":{"gitId":"alvintan01"},"content":"        for (int i \u003d 0; i \u003c columnWidths.length; i++) {","lastModifiedDate":"2021-10-09"},{"lineNumber":334,"author":{"gitId":"alvintan01"},"content":"            headers.append(String.format(formats[i], centerString(columnWidths[i], Order.COLUMNS[i])));","lastModifiedDate":"2021-10-09"},{"lineNumber":335,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":336,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":337,"author":{"gitId":"alvintan01"},"content":"        printHeaderBorder(columnWidths);","lastModifiedDate":"2021-10-09"},{"lineNumber":338,"author":{"gitId":"alvintan01"},"content":"        System.out.println(headers);","lastModifiedDate":"2021-10-09"},{"lineNumber":339,"author":{"gitId":"alvintan01"},"content":"        printHeaderBorder(columnWidths);","lastModifiedDate":"2021-10-09"},{"lineNumber":340,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":341,"author":{"gitId":"alvintan01"},"content":"        for (Order order : orders) {","lastModifiedDate":"2021-10-09"},{"lineNumber":342,"author":{"gitId":"alvintan01"},"content":"            String row \u003d String.format(idFormat, centerString(idWidth, String.valueOf(order.getOrderId())))","lastModifiedDate":"2021-10-09"},{"lineNumber":343,"author":{"gitId":"alvintan01"},"content":"                    + String.format(nameFormat, centerString(nameWidth, order.getMedicineName()))","lastModifiedDate":"2021-10-09"},{"lineNumber":344,"author":{"gitId":"alvintan01"},"content":"                    + String.format(quantityFormat, centerString(quantityWidth, String.valueOf(order.getQuantity())))","lastModifiedDate":"2021-10-09"},{"lineNumber":345,"author":{"gitId":"alvintan01"},"content":"                    + String.format(dateFormat, centerString(dateWidth, DateParser.dateToString(order.getDate())))","lastModifiedDate":"2021-10-09"},{"lineNumber":346,"author":{"gitId":"alvintan01"},"content":"                    + String.format(statusFormat, centerString(statusWidth, String.valueOf(order.getStatus())));","lastModifiedDate":"2021-10-09"},{"lineNumber":347,"author":{"gitId":"alvintan01"},"content":"            System.out.println(row);","lastModifiedDate":"2021-10-09"},{"lineNumber":348,"author":{"gitId":"alvintan01"},"content":"            printRowBorder(columnWidths);","lastModifiedDate":"2021-10-09"},{"lineNumber":349,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":350,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":351,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":352,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":353,"author":{"gitId":"alvintan01"},"content":"     * Prints out all the medicines dispensed in a table format.","lastModifiedDate":"2021-10-09"},{"lineNumber":354,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":355,"author":{"gitId":"alvintan01"},"content":"     * @param dispenses Arraylist of the dispenses.","lastModifiedDate":"2021-10-14"},{"lineNumber":356,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":357,"author":{"gitId":"alvintan01"},"content":"    public void printDispenses(ArrayList\u003cDispense\u003e dispenses) {","lastModifiedDate":"2021-10-14"},{"lineNumber":358,"author":{"gitId":"alvintan01"},"content":"        if (dispenses.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-09"},{"lineNumber":359,"author":{"gitId":"alvintan01"},"content":"            print(\"There are no records of medicines dispensed.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":360,"author":{"gitId":"alvintan01"},"content":"            return;","lastModifiedDate":"2021-10-09"},{"lineNumber":361,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":362,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":363,"author":{"gitId":"alvintan01"},"content":"        int idWidth \u003d Dispense.COLUMNS[0].length();","lastModifiedDate":"2021-10-09"},{"lineNumber":364,"author":{"gitId":"alvintan01"},"content":"        int nameWidth \u003d Dispense.COLUMNS[1].length();","lastModifiedDate":"2021-10-09"},{"lineNumber":365,"author":{"gitId":"alvintan01"},"content":"        int quantityWidth \u003d Dispense.COLUMNS[2].length();","lastModifiedDate":"2021-10-09"},{"lineNumber":366,"author":{"gitId":"deonchung"},"content":"        int customerIdWidth \u003d Dispense.COLUMNS[3].length();","lastModifiedDate":"2021-10-13"},{"lineNumber":367,"author":{"gitId":"alvintan01"},"content":"        int dateWidth \u003d Dispense.COLUMNS[4].length();","lastModifiedDate":"2021-10-09"},{"lineNumber":368,"author":{"gitId":"alvintan01"},"content":"        int staffWidth \u003d Dispense.COLUMNS[5].length();","lastModifiedDate":"2021-10-09"},{"lineNumber":369,"author":{"gitId":"alvintan01"},"content":"        int stockIdWidth \u003d Dispense.COLUMNS[6].length();","lastModifiedDate":"2021-10-14"},{"lineNumber":370,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":371,"author":{"gitId":"alvintan01"},"content":"        // Find the longest width of each column","lastModifiedDate":"2021-10-09"},{"lineNumber":372,"author":{"gitId":"alvintan01"},"content":"        for (Dispense dispense : dispenses) {","lastModifiedDate":"2021-10-09"},{"lineNumber":373,"author":{"gitId":"alvintan01"},"content":"            idWidth \u003d Math.max(String.valueOf(dispense.getDispenseId()).length(), idWidth);","lastModifiedDate":"2021-10-09"},{"lineNumber":374,"author":{"gitId":"alvintan01"},"content":"            nameWidth \u003d Math.max(dispense.getMedicineName().length(), nameWidth);","lastModifiedDate":"2021-10-09"},{"lineNumber":375,"author":{"gitId":"alvintan01"},"content":"            quantityWidth \u003d Math.max(String.valueOf(dispense.getQuantity()).length(), quantityWidth);","lastModifiedDate":"2021-10-09"},{"lineNumber":376,"author":{"gitId":"deonchung"},"content":"            customerIdWidth \u003d Math.max(dispense.getCustomerId().length(), customerIdWidth);","lastModifiedDate":"2021-10-13"},{"lineNumber":377,"author":{"gitId":"alvintan01"},"content":"            dateWidth \u003d Math.max(DateParser.dateToString(dispense.getDate()).length(), dateWidth);","lastModifiedDate":"2021-10-09"},{"lineNumber":378,"author":{"gitId":"alvintan01"},"content":"            staffWidth \u003d Math.max(dispense.getStaffName().length(), staffWidth);","lastModifiedDate":"2021-10-09"},{"lineNumber":379,"author":{"gitId":"alvintan01"},"content":"            stockIdWidth \u003d Math.max(String.valueOf(dispense.getStockId()).length(), stockIdWidth);","lastModifiedDate":"2021-10-14"},{"lineNumber":380,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":381,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":382,"author":{"gitId":"alvintan01"},"content":"        int[] columnWidths \u003d {idWidth, nameWidth, quantityWidth, customerIdWidth, dateWidth, staffWidth, stockIdWidth};","lastModifiedDate":"2021-10-14"},{"lineNumber":383,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":384,"author":{"gitId":"alvintan01"},"content":"        // Pad the data in the columns","lastModifiedDate":"2021-10-09"},{"lineNumber":385,"author":{"gitId":"alvintan01"},"content":"        String idFormat \u003d \"| %1$-\" + idWidth + \"s | \";","lastModifiedDate":"2021-10-09"},{"lineNumber":386,"author":{"gitId":"alvintan01"},"content":"        String nameFormat \u003d \"%1$-\" + nameWidth + \"s | \";","lastModifiedDate":"2021-10-09"},{"lineNumber":387,"author":{"gitId":"alvintan01"},"content":"        String quantityFormat \u003d \"%1$-\" + quantityWidth + \"s | \";","lastModifiedDate":"2021-10-09"},{"lineNumber":388,"author":{"gitId":"deonchung"},"content":"        String customerIdFormat \u003d \"%1$-\" + customerIdWidth + \"s | \";","lastModifiedDate":"2021-10-13"},{"lineNumber":389,"author":{"gitId":"alvintan01"},"content":"        String dateFormat \u003d \"%1$-\" + dateWidth + \"s | \";","lastModifiedDate":"2021-10-09"},{"lineNumber":390,"author":{"gitId":"alvintan01"},"content":"        String staffFormat \u003d \"%1$-\" + staffWidth + \"s | \";","lastModifiedDate":"2021-10-09"},{"lineNumber":391,"author":{"gitId":"alvintan01"},"content":"        String stockIdFormat \u003d \"%1$-\" + stockIdWidth + \"s | \";","lastModifiedDate":"2021-10-14"},{"lineNumber":392,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":393,"author":{"gitId":"alvintan01"},"content":"        String[] formats \u003d {idFormat, nameFormat, quantityFormat, customerIdFormat, dateFormat, staffFormat,","lastModifiedDate":"2021-10-14"},{"lineNumber":394,"author":{"gitId":"alvintan01"},"content":"            stockIdFormat};","lastModifiedDate":"2021-10-14"},{"lineNumber":395,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":396,"author":{"gitId":"alvintan01"},"content":"        StringBuilder headers \u003d new StringBuilder();","lastModifiedDate":"2021-10-09"},{"lineNumber":397,"author":{"gitId":"alvintan01"},"content":"        for (int i \u003d 0; i \u003c columnWidths.length; i++) {","lastModifiedDate":"2021-10-09"},{"lineNumber":398,"author":{"gitId":"alvintan01"},"content":"            headers.append(String.format(formats[i], centerString(columnWidths[i], Dispense.COLUMNS[i])));","lastModifiedDate":"2021-10-09"},{"lineNumber":399,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":400,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":401,"author":{"gitId":"alvintan01"},"content":"        printHeaderBorder(columnWidths);","lastModifiedDate":"2021-10-09"},{"lineNumber":402,"author":{"gitId":"alvintan01"},"content":"        System.out.println(headers);","lastModifiedDate":"2021-10-09"},{"lineNumber":403,"author":{"gitId":"alvintan01"},"content":"        printHeaderBorder(columnWidths);","lastModifiedDate":"2021-10-09"},{"lineNumber":404,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":405,"author":{"gitId":"alvintan01"},"content":"        for (Dispense dispense : dispenses) {","lastModifiedDate":"2021-10-09"},{"lineNumber":406,"author":{"gitId":"alvintan01"},"content":"            String row \u003d String.format(idFormat, centerString(idWidth, String.valueOf(dispense.getDispenseId())))","lastModifiedDate":"2021-10-09"},{"lineNumber":407,"author":{"gitId":"alvintan01"},"content":"                    + String.format(nameFormat, centerString(nameWidth, dispense.getMedicineName()))","lastModifiedDate":"2021-10-09"},{"lineNumber":408,"author":{"gitId":"alvintan01"},"content":"                    + String.format(quantityFormat, centerString(quantityWidth, String.valueOf(dispense.getQuantity())))","lastModifiedDate":"2021-10-09"},{"lineNumber":409,"author":{"gitId":"deonchung"},"content":"                    + String.format(customerIdFormat, centerString(customerIdWidth,","lastModifiedDate":"2021-10-13"},{"lineNumber":410,"author":{"gitId":"deonchung"},"content":"                    String.valueOf(dispense.getCustomerId())))","lastModifiedDate":"2021-10-13"},{"lineNumber":411,"author":{"gitId":"alvintan01"},"content":"                    + String.format(dateFormat, centerString(dateWidth, DateParser.dateToString(dispense.getDate())))","lastModifiedDate":"2021-10-09"},{"lineNumber":412,"author":{"gitId":"alvintan01"},"content":"                    + String.format(staffFormat, centerString(staffWidth, dispense.getStaffName()))","lastModifiedDate":"2021-10-14"},{"lineNumber":413,"author":{"gitId":"alvintan01"},"content":"                    + String.format(stockIdFormat, centerString(stockIdWidth, String.valueOf(dispense.getStockId())));","lastModifiedDate":"2021-10-14"},{"lineNumber":414,"author":{"gitId":"alvintan01"},"content":"            System.out.println(row);","lastModifiedDate":"2021-10-09"},{"lineNumber":415,"author":{"gitId":"alvintan01"},"content":"            printRowBorder(columnWidths);","lastModifiedDate":"2021-10-09"},{"lineNumber":416,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":417,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":418,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":419,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":420,"author":{"gitId":"alvintan01"},"content":"     * Prints the exit message.","lastModifiedDate":"2021-10-12"},{"lineNumber":421,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":422,"author":{"gitId":"alvintan01"},"content":"    public void printExit() {","lastModifiedDate":"2021-10-12"},{"lineNumber":423,"author":{"gitId":"alvintan01"},"content":"        print(\"Quitting Medivault...\");","lastModifiedDate":"2021-10-12"},{"lineNumber":424,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":425,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":416,"RemusTeo":4,"deonchung":5}},{"path":"src/test/java/parser/DateParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RemusTeo"},"content":"package parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"RemusTeo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"RemusTeo"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"RemusTeo"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"RemusTeo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"RemusTeo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"RemusTeo"},"content":"public class DateParserTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"RemusTeo"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"RemusTeo"},"content":"    public void stringToDate_validDate_expectValid() {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"RemusTeo"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"RemusTeo"},"content":"            // Depreciated Date Initialisation","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"RemusTeo"},"content":"            // Year \u003d actualYear - 1900 [2021 - 1900 \u003d 121]","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"RemusTeo"},"content":"            // Month \u003d 0-11 [8 \u003d Sep]","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"RemusTeo"},"content":"            Date date \u003d new Date(121, 8, 13); // Mon Sep 13 00:00:00 SGT 2021","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"RemusTeo"},"content":"            Date parsedDate \u003d DateParser.stringToDate(\"13-9-2021\");","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"RemusTeo"},"content":"            assertEquals(date, parsedDate);","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"RemusTeo"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"RemusTeo"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"RemusTeo"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"RemusTeo"},"content":"    public void stringToDate_invalidDate_exceptionThrown() {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"RemusTeo"},"content":"        assertThrows(ParseException.class, () -\u003e DateParser.stringToDate(\"99-99-2021\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"RemusTeo"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"RemusTeo"},"content":"    public void dateToString_validString_expectValid() {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"RemusTeo"},"content":"        // Depreciated Date Initialisation","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"RemusTeo"},"content":"        // Year \u003d actualYear - 1900 [2021 - 1900 \u003d 121]","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"RemusTeo"},"content":"        // Month \u003d 0-11 [8 \u003d Sep]","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"RemusTeo"},"content":"        Date date \u003d new Date(121, 8, 13); // Mon Sep 13 00:00:00 SGT 2021","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"RemusTeo"},"content":"        String parsedStr \u003d DateParser.dateToString(date);","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"RemusTeo"},"content":"        assertEquals(\"13-09-2021\", parsedStr);","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"RemusTeo"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"RemusTeo":41}},{"path":"src/test/java/parser/DispenseValidatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"deonchung"},"content":"package parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"deonchung"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"deonchung"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"deonchung"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"deonchung"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"deonchung"},"content":"public class DispenseValidatorTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"deonchung"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"deonchung"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"deonchung"},"content":"    public void checkValidCustomerId_validCustomerId_expectTrue() {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"deonchung"},"content":"        String inputString \u003d \"123\";","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"deonchung"},"content":"        boolean isValid \u003d DispenseValidator.isValidCustomerId(ui, inputString);","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"deonchung"},"content":"        assertTrue(isValid);","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"deonchung"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"deonchung"},"content":"    public void checkValidCustomerId_emptyInput_expectFalse() {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"deonchung"},"content":"        String inputString \u003d \"\";","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"deonchung"},"content":"        boolean isValid \u003d DispenseValidator.isValidCustomerId(ui, inputString);","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"deonchung"},"content":"        assertFalse(isValid);","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"deonchung"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"deonchung"},"content":"    public void checkValidStaffName_validStaffName_expectTrue() {","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"deonchung"},"content":"        String inputString \u003d \"Mary\";","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"deonchung"},"content":"        boolean isValid \u003d DispenseValidator.isValidCustomerId(ui, inputString);","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"deonchung"},"content":"        assertTrue(isValid);","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"deonchung"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"deonchung"},"content":"    public void checkValidStaffName_emptyInput_expectFalse() {","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"deonchung"},"content":"        String inputString \u003d \"\";","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"deonchung"},"content":"        boolean isValid \u003d DispenseValidator.isValidCustomerId(ui, inputString);","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"deonchung"},"content":"        assertFalse(isValid);","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"deonchung"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"deonchung"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"deonchung":40}},{"path":"src/test/java/parser/MedicineManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"a-tph"},"content":"package parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"a-tph"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"a-tph"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"a-tph"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"a-tph"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"a-tph"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"a-tph"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"a-tph"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"a-tph"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"a-tph"},"content":"public class MedicineManagerTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"a-tph"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"a-tph"},"content":"    void getTotalStockQuantity_validStock_expectCorrectQuantity() throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"a-tph"},"content":"        // Add dummy medicine values for testing","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"a-tph"},"content":"        medicines.add(new Stock(\"PANADOL\", 10, 20, DateParser.stringToDate(\"13-9-2021\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"a-tph"},"content":"                \"BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS\", 1000));","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"a-tph"},"content":"        medicines.add(new Stock(\"PANADOL\", 30, 20, DateParser.stringToDate(\"14-9-2021\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"a-tph"},"content":"                \"BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS\", 1000));","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"a-tph"},"content":"        medicines.add(new Stock(\"AZITHROMYCIN\", 20, 20, DateParser.stringToDate(\"14-9-2021\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"a-tph"},"content":"                \"USED FOR TREATING EAR, THROAT, AND SINUS INFECTIONS\", 2000));","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"a-tph"},"content":"        int panadolStockQuantity \u003d MedicineManager.getTotalStockQuantity(medicines, \"PANADOL\");","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"a-tph"},"content":"        int azithromycinStockQuantity \u003d MedicineManager.getTotalStockQuantity(medicines, \"AZITHROMYCIN\");","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"a-tph"},"content":"        assertEquals(40, panadolStockQuantity);","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"a-tph"},"content":"        assertEquals(20, azithromycinStockQuantity);","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"a-tph"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"a-tph"},"content":"    void getTotalStockQuantity_emptyStock_expectNoQuantity() {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"a-tph"},"content":"        int totalStockQuantity \u003d MedicineManager.getTotalStockQuantity(medicines, \"PANADOL\");","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"a-tph"},"content":"        assertEquals(0, totalStockQuantity);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"a-tph"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"a-tph"},"content":"    void getMaxStockQuantity_validStock_expectCorrectMaxQuantity() throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"a-tph"},"content":"        // Add dummy medicine values for testing","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"a-tph"},"content":"        medicines.add(new Stock(\"PANADOL\", 10, 20, DateParser.stringToDate(\"13-9-2021\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"a-tph"},"content":"                \"BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS\", 1000));","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"a-tph"},"content":"        medicines.add(new Stock(\"PANADOL\", 30, 20, DateParser.stringToDate(\"14-9-2021\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"                \"BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS\", 1000));","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"a-tph"},"content":"        medicines.add(new Stock(\"AZITHROMYCIN\", 20, 20, DateParser.stringToDate(\"14-9-2021\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"a-tph"},"content":"                \"USED FOR TREATING EAR, THROAT, AND SINUS INFECTIONS\", 2000));","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"a-tph"},"content":"        int panadolMaxStockQuantity \u003d MedicineManager.getMaxStockQuantity(medicines, \"PANADOL\");","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"a-tph"},"content":"        int azithromycinMaxStockQuantity \u003d MedicineManager.getMaxStockQuantity(medicines, \"AZITHROMYCIN\");","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"a-tph"},"content":"        assertEquals(1000, panadolMaxStockQuantity);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"a-tph"},"content":"        assertEquals(2000, azithromycinMaxStockQuantity);","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"a-tph"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"a-tph"},"content":"    void getMaxStockQuantity_emptyStock_assertionError() {","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"a-tph"},"content":"        assertThrows(AssertionError.class, () -\u003e MedicineManager.getMaxStockQuantity(medicines, \"PANADOL\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"a-tph"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"a-tph"},"content":"    void getTotalRows_threeRows_expectTwoRows() throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"a-tph"},"content":"        // Add dummy medicine values for testing","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"a-tph"},"content":"        medicines.add(new Stock(\"PANADOL\", 10, 20, DateParser.stringToDate(\"13-9-2021\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"a-tph"},"content":"                \"BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS\", 1000));","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"a-tph"},"content":"        medicines.add(new Stock(\"PANADOL\", 30, 20, DateParser.stringToDate(\"14-9-2021\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"a-tph"},"content":"                \"BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS\", 1000));","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"a-tph"},"content":"        medicines.add(new Stock(\"AZITHROMYCIN\", 20, 20, DateParser.stringToDate(\"14-9-2021\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"a-tph"},"content":"                \"USED FOR TREATING EAR, THROAT, AND SINUS INFECTIONS\", 2000));","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"a-tph"},"content":"        int totalRows \u003d MedicineManager.getTotalRows(medicines, \"PANADOL\");","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"a-tph"},"content":"        assertEquals(2, totalRows);","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"a-tph"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"a-tph"},"content":"    void getTotalRows_noRows_expectNoRows() {","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"a-tph"},"content":"        int totalRows \u003d MedicineManager.getTotalRows(medicines, \"PANADOL\");","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"a-tph"},"content":"        assertEquals(0, totalRows);","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"a-tph"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"a-tph"},"content":"    void extractStockObject_noStock_assertionError() {","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"a-tph"},"content":"        HashMap\u003cString, String\u003e parameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"i\", \"1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"a-tph"},"content":"        assertThrows(AssertionError.class, () -\u003e MedicineManager.extractStockObject(parameters, medicines));","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"a-tph"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"a-tph"},"content":"    void extractStockObject_IdNotFound_assertionError() throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"a-tph"},"content":"        ArrayList\u003cMedicine\u003e medicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"a-tph"},"content":"        medicines.add(new Stock(\"PANADOL\", 10, 20, DateParser.stringToDate(\"13-9-2021\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"a-tph"},"content":"                \"BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS\", 1000));","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"a-tph"},"content":"        medicines.add(new Stock(\"PANADOL\", 30, 20, DateParser.stringToDate(\"14-9-2021\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"a-tph"},"content":"                \"BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS\", 1000));","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"a-tph"},"content":"        HashMap\u003cString, String\u003e parameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"alvintan01"},"content":"        parameters.put(\"i\", \"3\");","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"a-tph"},"content":"        assertThrows(AssertionError.class, () -\u003e MedicineManager.extractStockObject(parameters, medicines));","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"a-tph"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"alvintan01":2,"a-tph":105}},{"path":"src/test/java/parser/MedicineValidatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jiangweichen835"},"content":"package parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"jiangweichen835"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"jiangweichen835"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"jiangweichen835"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"jiangweichen835"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"jiangweichen835"},"content":"public class MedicineValidatorTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"jiangweichen835"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidName_validName_expectTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"jiangweichen835"},"content":"        String inputString \u003d \"panadol\";","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"jiangweichen835"},"content":"        boolean isValid \u003d MedicineValidator.isValidName(ui, inputString);","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"jiangweichen835"},"content":"        assertTrue(isValid);","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidName_validName_expectFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"jiangweichen835"},"content":"        String inputString \u003d \"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"jiangweichen835"},"content":"        boolean isInvalid \u003d MedicineValidator.isValidName(ui, inputString);","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"jiangweichen835"},"content":"        assertFalse(isInvalid);","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidQuantity_validQuantity_expectTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"jiangweichen835"},"content":"        String inputString \u003d \"0\";","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"jiangweichen835"},"content":"        boolean isValid \u003d MedicineValidator.isValidQuantity(ui, inputString);","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"jiangweichen835"},"content":"        assertTrue(isValid);","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidQuantity_validQuantity_expectFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"jiangweichen835"},"content":"        String inputString \u003d \"-1\";","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"jiangweichen835"},"content":"        boolean isInvalid \u003d MedicineValidator.isValidQuantity(ui, inputString);","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"jiangweichen835"},"content":"        assertFalse(isInvalid);","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"jiangweichen835"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"jiangweichen835":39}},{"path":"src/test/java/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import errors.InvalidCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"public class ParserTest {","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    ArrayList\u003cMedicine\u003e medicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    public void processCommand_validCommand_expectFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"            boolean status \u003d Parser.processCommand(ui, \"LIST\", medicines);","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"            assertFalse(status);","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"        } catch (InvalidCommand e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"    public void processCommand_exitCommand_expectTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"        boolean status \u003d false;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"            status \u003d Parser.processCommand(ui, \"EXIT\", medicines);","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"        } catch (InvalidCommand e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"            assertTrue(status);","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"    public void parseCommand_oneSeparator_expectTwoParts() {","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"        String inputString \u003d \"list i/1\";","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"        String[] stringParts \u003d Parser.parseCommand(inputString);","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"        assertEquals(2, stringParts.length);","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"    public void parseParameters_twoParameters_expectTwoParts() {","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"        String inputString \u003d \"i/1 n/name\";","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"        HashMap\u003cString, String\u003e parametersValues \u003d Parser.parseParameters(inputString);","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"        assertEquals(2, parametersValues.keySet().size());","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"    public void parseParameters_threeParameters_expectThreeParts() {","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"        String inputString \u003d \"i/1 n/name p/20\";","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"        HashMap\u003cString, String\u003e parametersValues \u003d Parser.parseParameters(inputString);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"        assertEquals(3, parametersValues.keySet().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"alvintan01":61}},{"path":"src/test/java/parser/StockValidatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"deonchung"},"content":"package parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"RemusTeo"},"content":"import inventory.Medicine;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"RemusTeo"},"content":"import inventory.Stock;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"deonchung"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"RemusTeo"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"jiangweichen835"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"RemusTeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"jiangweichen835"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"jiangweichen835"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"deonchung"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"deonchung"},"content":"public class StockValidatorTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"deonchung"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"RemusTeo"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"RemusTeo"},"content":"    public void checkValidStockId_validId_expectTrue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"RemusTeo"},"content":"        ArrayList\u003cMedicine\u003e tempMedicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"RemusTeo"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"jiangweichen835"},"content":"            Stock.setStockCount(0);","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"RemusTeo"},"content":"            tempMedicines.add(new Stock(\"PANADOL\", 20, 20, DateParser.stringToDate(\"13-9-2021\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"RemusTeo"},"content":"                    \"BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS\", 1000));","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"RemusTeo"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"RemusTeo"},"content":"            ui.print(\"Unable to parse date!\");","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"RemusTeo"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"        boolean isValid \u003d StockValidator.isValidStockId(ui,\"1\", tempMedicines);","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"RemusTeo"},"content":"        assertTrue(isValid);","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"RemusTeo"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"RemusTeo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidStockId_validId_expectFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"jiangweichen835"},"content":"        ArrayList\u003cMedicine\u003e tempMedicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"jiangweichen835"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"jiangweichen835"},"content":"            tempMedicines.add(new Stock(\"PANADOL\", 20, 20, DateParser.stringToDate(\"13-9-2021\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"jiangweichen835"},"content":"                    \"BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS\", 1000));","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"jiangweichen835"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"jiangweichen835"},"content":"            ui.print(\"Unable to parse date!\");","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"jiangweichen835"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"jiangweichen835"},"content":"        boolean isInvalid \u003d StockValidator.isValidStockId(ui,\"5\", tempMedicines);","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"jiangweichen835"},"content":"        assertFalse(isInvalid);","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"a-tph"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"a-tph"},"content":"    public void checkValidPrice_validPrice_expectTrue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"a-tph"},"content":"        String inputPrice \u003d \"20\";","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"a-tph"},"content":"        boolean isValid \u003d StockValidator.isValidPrice(ui, inputPrice);","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"a-tph"},"content":"        assertTrue(isValid);","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"a-tph"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"a-tph"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidPrice_validPrice_expectFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"jiangweichen835"},"content":"        String inputPrice \u003d \"-1\";","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"jiangweichen835"},"content":"        boolean isInvalid \u003d StockValidator.isValidPrice(ui, inputPrice);","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"jiangweichen835"},"content":"        assertFalse(isInvalid);","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"    public void checkValidExpiry_validDate_expectTrue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"        String inputDate \u003d \"08-10-2021\";","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"        boolean isValid \u003d StockValidator.isValidExpiry(ui, inputDate);","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"jiangweichen835"},"content":"        assertTrue(isValid);","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidExpiry_validDate_expectFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"jiangweichen835"},"content":"        String inputDate \u003d \"8 Oct 2021\";","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"jiangweichen835"},"content":"        boolean isInvalid \u003d StockValidator.isValidExpiry(ui, inputDate);","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"jiangweichen835"},"content":"        assertFalse(isInvalid);","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidDescription_validDescription_expectTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"jiangweichen835"},"content":"        String inputDescription \u003d \"BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS\";","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"jiangweichen835"},"content":"        boolean isValid \u003d StockValidator.isValidDescription(ui, inputDescription);","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"jiangweichen835"},"content":"        assertTrue(isValid);","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidDescription_validDescription_expectFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"jiangweichen835"},"content":"        String inputDescription \u003d \"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"jiangweichen835"},"content":"        boolean isInvalid \u003d StockValidator.isValidDescription(ui, inputDescription);","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"jiangweichen835"},"content":"        assertFalse(isInvalid);","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidMax_validQuantity_expectTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"jiangweichen835"},"content":"        String inputMaxQuantity \u003d \"100\";","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"jiangweichen835"},"content":"        boolean isValid \u003d StockValidator.isValidMaxQuantity(ui, inputMaxQuantity);","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"jiangweichen835"},"content":"        assertTrue(isValid);","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidMax_validQuantity_expectFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"jiangweichen835"},"content":"        String inputMaxQuantity \u003d \"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"jiangweichen835"},"content":"        boolean isInvalid \u003d StockValidator.isValidMaxQuantity(ui, inputMaxQuantity);","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"jiangweichen835"},"content":"        assertFalse(isInvalid);","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidColumn_validColumn_expectTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"jiangweichen835"},"content":"        String inputColumnName \u003d \"NAME\";","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"jiangweichen835"},"content":"        boolean isValid \u003d StockValidator.isValidColumn(ui, inputColumnName);","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"jiangweichen835"},"content":"        assertTrue(isValid);","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidColumn_validColumn_expectFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"jiangweichen835"},"content":"        String inputColumnName \u003d \"panadol\";","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"jiangweichen835"},"content":"        boolean isInvalid \u003d StockValidator.isValidColumn(ui, inputColumnName);","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"jiangweichen835"},"content":"        assertFalse(isInvalid);","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidity_checkQuantity_expectTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"jiangweichen835"},"content":"        int quantity \u003d 10;","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"jiangweichen835"},"content":"        int maxQuantity \u003d 100;","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"jiangweichen835"},"content":"        boolean isValid \u003d StockValidator.quantityValidityChecker(ui, quantity, maxQuantity);","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"jiangweichen835"},"content":"        assertTrue(isValid);","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidity_checkQuantity_expectFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"jiangweichen835"},"content":"        int quantity \u003d 10;","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"jiangweichen835"},"content":"        int maxQuantity \u003d 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"jiangweichen835"},"content":"        boolean isInvalid \u003d StockValidator.quantityValidityChecker(ui, quantity, maxQuantity);","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"jiangweichen835"},"content":"        assertFalse(isInvalid);","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidity_checkDate_expectTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"jiangweichen835"},"content":"        ArrayList\u003cMedicine\u003e tempMedicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"jiangweichen835"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"jiangweichen835"},"content":"            tempMedicines.add(new Stock(\"PANADOL\", 20, 20, DateParser.stringToDate(\"13-9-2021\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"jiangweichen835"},"content":"                    \"BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS\", 1000));","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"jiangweichen835"},"content":"            final SimpleDateFormat DateFor \u003d new SimpleDateFormat(\"dd/MM/yyyy\");","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"jiangweichen835"},"content":"            final Date expiryDate \u003d DateFor.parse(\"10-10-2021\");","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"jiangweichen835"},"content":"            String inputName \u003d \"panadol\";","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"jiangweichen835"},"content":"            boolean isValid \u003d StockValidator.dateValidityChecker(ui,tempMedicines, expiryDate, inputName);","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"jiangweichen835"},"content":"            assertTrue(isValid);","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"jiangweichen835"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"jiangweichen835"},"content":"            ui.print(\"Unable to parse date!\");","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"jiangweichen835"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"jiangweichen835"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"jiangweichen835"},"content":"    public void checkValidity_checkDate_expectFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"jiangweichen835"},"content":"        ArrayList\u003cMedicine\u003e tempMedicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"jiangweichen835"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"jiangweichen835"},"content":"            tempMedicines.add(new Stock(\"PANADOL\", 20, 20, DateParser.stringToDate(\"13-9-2021\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"jiangweichen835"},"content":"                    \"BEST MEDICINE TO CURE HEADACHES, FEVER AND PAINS\", 1000));","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"jiangweichen835"},"content":"            final SimpleDateFormat DateFor \u003d new SimpleDateFormat(\"dd/MM/yyyy\");","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"jiangweichen835"},"content":"            final Date expiryDate \u003d DateFor.parse(\"13-9-2021\");","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"jiangweichen835"},"content":"            String inputName \u003d \"panadol\";","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"jiangweichen835"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"jiangweichen835"},"content":"            boolean isInvalid \u003d StockValidator.dateValidityChecker(ui,tempMedicines, expiryDate, inputName);","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"jiangweichen835"},"content":"            assertFalse(isInvalid);","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"jiangweichen835"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"jiangweichen835"},"content":"            ui.print(\"Unable to parse date!\");","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"jiangweichen835"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"jiangweichen835"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"deonchung"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"alvintan01":9,"RemusTeo":17,"deonchung":9,"jiangweichen835":125,"a-tph":7}}]
